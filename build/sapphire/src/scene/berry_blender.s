@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section ewram_data,"aw"
	.type	 gUnknown_020297DC,object
	.size	 gUnknown_020297DC,1
gUnknown_020297DC:
	.byte	0x0
	.align	2, 0
	.type	 gUnknown_020297E0,object
	.size	 gUnknown_020297E0,4
gUnknown_020297E0:
	.word	0x0
	.align	2, 0
	.type	 gUnknown_020297E4,object
	.size	 gUnknown_020297E4,4
gUnknown_020297E4:
	.word	0x0
	.type	 gUnknown_020297E8,object
	.size	 gUnknown_020297E8,1
gUnknown_020297E8:
	.byte	0x0
	.section .rodata
	.align	1, 0
	.type	 sBlenderCenterPal,object
sBlenderCenterPal:
	.short	0x0
	.short	0x7fff
	.short	0x7f19
	.short	0x6e95
	.short	0x5e31
	.short	0x4dad
	.short	0x3d49
	.short	0x2ce5
	.short	0x5f7a
	.short	0x4ef6
	.short	0x3e72
	.short	0x2dee
	.short	0x3ebf
	.short	0x29de
	.short	0x14fd
	.short	0x73
	.size	 sBlenderCenterPal,32
	.type	 sBlenderCenterMap,object
sBlenderCenterMap:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	0x2
	.byte	0x3
	.byte	0x4
	.byte	0x5
	.byte	0x6
	.byte	0x7
	.byte	0x8
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x9
	.byte	0xa
	.byte	0xb
	.byte	0xc
	.byte	0xd
	.byte	0xe
	.byte	0xf
	.byte	0x10
	.byte	0x11
	.byte	0x12
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	0x13
	.byte	0x14
	.byte	0x15
	.byte	0x16
	.byte	0x17
	.byte	0x18
	.byte	0x19
	.byte	0x1a
	.byte	0x1b
	.byte	0x1c
	.byte	0x8
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x1d
	.byte	0x1e
	.byte	0x1f
	.byte	0x20
	.byte	0x21
	.byte	0x22
	.byte	0x23
	.byte	0x24
	.byte	0x25
	.byte	0x26
	.byte	0x27
	.byte	0x28
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x29
	.byte	0x2a
	.byte	0x2b
	.byte	0x2c
	.byte	0x2d
	.byte	0x2e
	.byte	0x2f
	.byte	0x30
	.byte	0x31
	.byte	0x32
	.byte	0x33
	.byte	0x34
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x35
	.byte	0x36
	.byte	0x37
	.byte	0x38
	.byte	0x39
	.byte	0x3a
	.byte	0x3b
	.byte	0x3c
	.byte	0x3d
	.byte	0x3e
	.byte	0x3f
	.byte	0x40
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x41
	.byte	0x42
	.byte	0x43
	.byte	0x44
	.byte	0x45
	.byte	0x46
	.byte	0x47
	.byte	0x48
	.byte	0x49
	.byte	0x4a
	.byte	0x4b
	.byte	0x4c
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x4d
	.byte	0x4e
	.byte	0x4f
	.byte	0x50
	.byte	0x51
	.byte	0x52
	.byte	0x53
	.byte	0x54
	.byte	0x55
	.byte	0x56
	.byte	0x57
	.byte	0x58
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x59
	.byte	0x5a
	.byte	0x1a
	.byte	0x5b
	.byte	0x5c
	.byte	0x5d
	.byte	0x5e
	.byte	0x5f
	.byte	0x60
	.byte	0x15
	.byte	0x61
	.byte	0x62
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x63
	.byte	0x64
	.byte	0x65
	.byte	0x66
	.byte	0x67
	.byte	0x68
	.byte	0x69
	.byte	0x6a
	.byte	0x6b
	.byte	0x6c
	.byte	0x6d
	.byte	0x6e
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x6f
	.byte	0x70
	.byte	0x71
	.byte	0x72
	.byte	0x73
	.byte	0x74
	.byte	0x75
	.byte	0x76
	.byte	0x77
	.byte	0x78
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x63
	.byte	0x79
	.byte	0x7a
	.byte	0x7b
	.byte	0x7c
	.byte	0x7d
	.byte	0x7e
	.byte	0x6e
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.size	 sBlenderCenterMap,1024
	.align	1, 0
	.type	 sBlenderOuterPal,object
sBlenderOuterPal:
	.short	0x0
	.short	0x7fff
	.short	0x777a
	.short	0x7316
	.short	0x6eb2
	.short	0x664e
	.short	0x61ea
	.short	0x5d86
	.short	0x66df
	.short	0x31df
	.short	0xdf
	.short	0x2119
	.short	0xc77
	.short	0x61f2
	.short	0x44e9
	.short	0x2801
	.size	 sBlenderOuterPal,32
	.align	1, 0
	.type	 sUnknownPal_0,object
sUnknownPal_0:
	.short	0x0
	.short	0x7fff
	.short	0x777a
	.short	0x7316
	.short	0x6eb2
	.short	0x664e
	.short	0x61ea
	.short	0x5d86
	.short	0x679f
	.short	0x329f
	.short	0x1bf
	.short	0x51b
	.short	0xc77
	.short	0x1ad
	.short	0x51b
	.short	0xc77
	.size	 sUnknownPal_0,32
	.align	1, 0
	.type	 sUnknownArray_1,object
	.size	 sUnknownArray_1,448
sUnknownArray_1:
	.short	0x0
	.space	446
	.type	 sUnknownJpnString0,object
sUnknownJpnString0:
	.byte	0xef
	.byte	0xff
	.size	 sUnknownJpnString0,2
	.type	 sUnknownJpnString1,object
sUnknownJpnString1:
	.byte	0x0
	.byte	0xff
	.size	 sUnknownJpnString1,2
	.type	 sUnknownJpnString2,object
sUnknownJpnString2:
	.byte	0x56
	.byte	0xa0
	.byte	0x5a
	.byte	0x52
	.byte	0xff
	.size	 sUnknownJpnString2,5
	.type	 sUnknownJpnString3,object
sUnknownJpnString3:
	.byte	0x56
	.byte	0x7c
	.byte	0x52
	.byte	0x52
	.byte	0xff
	.size	 sUnknownJpnString3,5
	.type	 sUnknownJpnString4,object
sUnknownJpnString4:
	.byte	0x53
	.byte	0x62
	.byte	0x58
	.byte	0x5c
	.byte	0xff
	.size	 sUnknownJpnString4,5
	.type	 sUnknownJpnString5,object
sUnknownJpnString5:
	.byte	0x56
	.byte	0x5c
	.byte	0x5a
	.byte	0x52
	.byte	0xff
	.size	 sUnknownJpnString5,5
	.type	 sUnknownJpnString6,object
sUnknownJpnString6:
	.byte	0x60
	.byte	0x58
	.byte	0x6f
	.byte	0x5c
	.byte	0xff
	.size	 sUnknownJpnString6,5
	.type	 gUnknown_08216249,object
gUnknown_08216249:
	.byte	0xfb
	.byte	0xff
	.size	 gUnknown_08216249,2
	.type	 sUnknownJpnString7,object
	.size	 sUnknownJpnString7,10
sUnknownJpnString7:
	.byte	0x13
	.byte	0x12
	.byte	0x3d
	.byte	0xff
	.space	6
	.type	 sUnknownJpnString8,object
	.size	 sUnknownJpnString8,10
sUnknownJpnString8:
	.byte	0x1
	.byte	0x7
	.byte	0x14
	.byte	0xff
	.space	6
	.type	 sUnknownJpnString9,object
	.size	 sUnknownJpnString9,10
sUnknownJpnString9:
	.byte	0x5c
	.byte	0x8a
	.byte	0x79
	.byte	0xff
	.space	6
	.type	 sUnknownJpnString10,object
	.size	 sUnknownJpnString10,10
sUnknownJpnString10:
	.byte	0x76
	.byte	0x5c
	.byte	0x69
	.byte	0x78
	.byte	0xff
	.space	5
	.type	 sUnknownText_2Pok,object
sUnknownText_2Pok:
	.byte	0xa3
	.byte	0xca
	.byte	0xe3
	.byte	0xdf
	.byte	0xff
	.size	 sUnknownText_2Pok,5
	.type	 sUnknownText_3Pok,object
sUnknownText_3Pok:
	.byte	0xa4
	.byte	0xca
	.byte	0xe3
	.byte	0xdf
	.byte	0xff
	.size	 sUnknownText_3Pok,5
	.type	 sUnknownText_4Pok,object
sUnknownText_4Pok:
	.byte	0xa5
	.byte	0xca
	.byte	0xe3
	.byte	0xdf
	.byte	0xff
	.size	 sUnknownText_4Pok,5
	.align	2, 0
	.type	 gUnknown_08216284,object
gUnknown_08216284:
	.word	sUnknownText_2Pok
	.word	sUnknownText_3Pok
	.word	sUnknownText_4Pok
	.size	 gUnknown_08216284,12
	.type	 sUnknown1PString,object
	.size	 sUnknown1PString,4
sUnknown1PString:
	.byte	0xa2
	.byte	0xca
	.byte	0xff
	.space	1
	.type	 sUnknown2PString,object
	.size	 sUnknown2PString,4
sUnknown2PString:
	.byte	0xa3
	.byte	0xca
	.byte	0xff
	.space	1
	.type	 sUnknown3PString,object
	.size	 sUnknown3PString,4
sUnknown3PString:
	.byte	0xa4
	.byte	0xca
	.byte	0xff
	.space	1
	.type	 sUnknown4PString,object
	.size	 sUnknown4PString,4
sUnknown4PString:
	.byte	0xa5
	.byte	0xca
	.byte	0xff
	.space	1
	.type	 sBlenderOpponentName1,object
sBlenderOpponentName1:
	.byte	0x3c
	.byte	0x9f
	.byte	0x3d
	.byte	0xa0
	.byte	0x3c
	.byte	0x97
	.byte	0xff
	.size	 sBlenderOpponentName1,7
	.type	 sBlenderOpponentName2,object
sBlenderOpponentName2:
	.byte	0x3b
	.byte	0xde
	.byte	0x38
	.byte	0x6d
	.byte	0xff
	.size	 sBlenderOpponentName2,5
	.type	 sBlenderOpponentName3,object
sBlenderOpponentName3:
	.byte	0x3b
	.byte	0xde
	.byte	0x38
	.byte	0x6b
	.byte	0xff
	.size	 sBlenderOpponentName3,5
	.align	2, 0
	.type	 sBlenderOpponentsNames,object
sBlenderOpponentsNames:
	.word	sBlenderOpponentName1
	.word	sBlenderOpponentName2
	.word	sBlenderOpponentName3
	.size	 sBlenderOpponentsNames,12
	.type	 sRedColorString,object
sRedColorString:
	.byte	0xfc
	.byte	0x1
	.byte	0x2
	.byte	0xff
	.size	 sRedColorString,4
	.type	 sNewLineString_0,object
sNewLineString_0:
	.byte	0xfe
	.byte	0xff
	.size	 sNewLineString_0,2
	.type	 sSpaceString_0,object
sSpaceString_0:
	.byte	0x0
	.byte	0xff
	.size	 sSpaceString_0,2
	.type	 gUnknown_082162CC,object
gUnknown_082162CC:
	.byte	0xffffffff
	.byte	0xffffffff
	.byte	0x1
	.byte	0xffffffff
	.byte	0xffffffff
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.size	 gUnknown_082162CC,8
	.type	 gUnknown_082162D4,object
gUnknown_082162D4:
	.byte	0x2
	.byte	0x6
	.byte	0x17
	.byte	0x6
	.byte	0x2
	.byte	0xc
	.byte	0x17
	.byte	0xc
	.byte	0x1
	.byte	0x6
	.byte	0x16
	.byte	0x6
	.byte	0x1
	.byte	0xc
	.byte	0x16
	.byte	0xc
	.size	 gUnknown_082162D4,16
	.type	 sBlenderSyncArrowsPos,object
sBlenderSyncArrowsPos:
	.byte	0x48
	.byte	0x20
	.byte	0xa8
	.byte	0x20
	.byte	0x48
	.byte	0x80
	.byte	0xa8
	.byte	0x80
	.size	 sBlenderSyncArrowsPos,8
	.type	 gUnknown_082162EC,object
	.size	 gUnknown_082162EC,12
gUnknown_082162EC:
	.byte	0xff
	.byte	0x0
	.byte	0x1
	.byte	0xff
	.byte	0xff
	.byte	0x0
	.byte	0x1
	.byte	0x2
	.byte	0x0
	.byte	0x1
	.byte	0x2
	.byte	0x3
	.align	1, 0
	.type	 gUnknown_082162F8,object
gUnknown_082162F8:
	.short	0x0
	.short	0xc000
	.short	0x4000
	.short	0x8000
	.size	 gUnknown_082162F8,8
	.type	 gUnknown_08216300,object
gUnknown_08216300:
	.byte	0x1
	.byte	0x1
	.byte	0x0
	.size	 gUnknown_08216300,3
	.type	 gUnknown_08216303,object
gUnknown_08216303:
	.byte	0x20
	.byte	0xe0
	.byte	0x60
	.byte	0xa0
	.byte	0x0
	.size	 gUnknown_08216303,5
	.align	2, 0
	.type	 gUnknown_08216308,object
gUnknown_08216308:
	.word	sub_804F8C8
	.word	sub_804F9F4
	.word	sub_804FB1C
	.size	 gUnknown_08216308,12
	.align	2, 0
	.type	 sOamData_8216314,object
	.size	 sOamData_8216314,8
sOamData_8216314:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x80
	.byte	0x0
	.byte	0x4
	.short	0x0
	.align	2, 0
	.type	 sSpriteAnim_821631C,object
sSpriteAnim_821631C:
	.short	0x10
	.byte	0xc5
	.space	1
	.short	0xffffffff
	.space	2
	.size	 sSpriteAnim_821631C,8
	.align	2, 0
	.type	 sSpriteAnim_8216324,object
sSpriteAnim_8216324:
	.short	0x10
	.byte	0x85
	.space	1
	.short	0xffffffff
	.space	2
	.size	 sSpriteAnim_8216324,8
	.align	2, 0
	.type	 sSpriteAnim_821632C,object
sSpriteAnim_821632C:
	.short	0x10
	.byte	0x45
	.space	1
	.short	0xffffffff
	.space	2
	.size	 sSpriteAnim_821632C,8
	.align	2, 0
	.type	 sSpriteAnim_8216334,object
sSpriteAnim_8216334:
	.short	0x10
	.byte	0x5
	.space	1
	.short	0xffffffff
	.space	2
	.size	 sSpriteAnim_8216334,8
	.align	2, 0
	.type	 sSpriteAnim_821633C,object
sSpriteAnim_821633C:
	.short	0x30
	.byte	0xc2
	.space	1
	.short	0x20
	.byte	0xc5
	.space	1
	.short	0x30
	.byte	0xc3
	.space	1
	.short	0x10
	.byte	0xc5
	.space	1
	.short	0xffffffff
	.space	2
	.size	 sSpriteAnim_821633C,20
	.align	2, 0
	.type	 sSpriteAnim_8216350,object
sSpriteAnim_8216350:
	.short	0x30
	.byte	0x82
	.space	1
	.short	0x20
	.byte	0x85
	.space	1
	.short	0x30
	.byte	0x83
	.space	1
	.short	0x10
	.byte	0x85
	.space	1
	.short	0xffffffff
	.space	2
	.size	 sSpriteAnim_8216350,20
	.align	2, 0
	.type	 sSpriteAnim_8216364,object
sSpriteAnim_8216364:
	.short	0x30
	.byte	0x42
	.space	1
	.short	0x20
	.byte	0x45
	.space	1
	.short	0x30
	.byte	0x43
	.space	1
	.short	0x10
	.byte	0x45
	.space	1
	.short	0xffffffff
	.space	2
	.size	 sSpriteAnim_8216364,20
	.align	2, 0
	.type	 sSpriteAnim_8216378,object
sSpriteAnim_8216378:
	.short	0x30
	.byte	0x2
	.space	1
	.short	0x20
	.byte	0x5
	.space	1
	.short	0x30
	.byte	0x3
	.space	1
	.short	0x10
	.byte	0x5
	.space	1
	.short	0xffffffff
	.space	2
	.size	 sSpriteAnim_8216378,20
	.align	2, 0
	.type	 sSpriteAnim_821638C,object
sSpriteAnim_821638C:
	.short	0x0
	.byte	0xc5
	.space	1
	.short	0xffffffff
	.space	2
	.size	 sSpriteAnim_821638C,8
	.align	2, 0
	.type	 sSpriteAnim_8216394,object
sSpriteAnim_8216394:
	.short	0x0
	.byte	0x85
	.space	1
	.short	0xffffffff
	.space	2
	.size	 sSpriteAnim_8216394,8
	.align	2, 0
	.type	 sSpriteAnim_821639C,object
sSpriteAnim_821639C:
	.short	0x0
	.byte	0x45
	.space	1
	.short	0xffffffff
	.space	2
	.size	 sSpriteAnim_821639C,8
	.align	2, 0
	.type	 sSpriteAnim_82163A4,object
sSpriteAnim_82163A4:
	.short	0x0
	.byte	0x5
	.space	1
	.short	0xffffffff
	.space	2
	.size	 sSpriteAnim_82163A4,8
	.align	2, 0
	.type	 sSpriteAnimTable_82163AC,object
sSpriteAnimTable_82163AC:
	.word	sSpriteAnim_821631C
	.word	sSpriteAnim_8216324
	.word	sSpriteAnim_821632C
	.word	sSpriteAnim_8216334
	.word	sSpriteAnim_821633C
	.word	sSpriteAnim_8216350
	.word	sSpriteAnim_8216364
	.word	sSpriteAnim_8216378
	.word	sSpriteAnim_821638C
	.word	sSpriteAnim_8216394
	.word	sSpriteAnim_821639C
	.word	sSpriteAnim_82163A4
	.size	 sSpriteAnimTable_82163AC,48
	.align	2, 0
	.type	 gUnknown_082163DC,object
	.size	 gUnknown_082163DC,8
gUnknown_082163DC:
	.word	gBerryBlenderArrowTiles
	.short	0x800
	.short	0xb5d1
	.align	2, 0
	.type	 gUnknown_082163E4,object
	.size	 gUnknown_082163E4,8
gUnknown_082163E4:
	.word	gBerryBlenderMiscPalette
	.short	0xb5d2
	.space	2
	.align	2, 0
	.type	 gUnknown_082163EC,object
	.size	 gUnknown_082163EC,8
gUnknown_082163EC:
	.word	gBerryBlenderArrowPalette
	.short	0x3018
	.space	2
	.align	2, 0
	.type	 sBlenderSyncArrow_SpriteTemplate,object
	.size	 sBlenderSyncArrow_SpriteTemplate,24
sBlenderSyncArrow_SpriteTemplate:
	.short	0xb5d1
	.short	0x3018
	.word	sOamData_8216314
	.word	sSpriteAnimTable_82163AC
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	sub_8051C04
	.align	2, 0
	.type	 sOamData_821640C,object
	.size	 sOamData_821640C,8
sOamData_821640C:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x40
	.byte	0x0
	.byte	0x0
	.short	0x0
	.align	2, 0
	.type	 sSpriteAnim_8216414,object
sSpriteAnim_8216414:
	.short	0x0
	.byte	0x14
	.space	1
	.short	0xffffffff
	.space	2
	.size	 sSpriteAnim_8216414,8
	.align	2, 0
	.type	 sSpriteAnim_821641C,object
sSpriteAnim_821641C:
	.short	0x4
	.byte	0x54
	.space	1
	.short	0xffffffff
	.space	2
	.size	 sSpriteAnim_821641C,8
	.align	2, 0
	.type	 sSpriteAnim_8216424,object
sSpriteAnim_8216424:
	.short	0x8
	.byte	0x4
	.space	1
	.short	0xc
	.byte	0x4
	.space	1
	.short	0x8
	.byte	0x4
	.space	1
	.short	0xc
	.byte	0x4
	.space	1
	.short	0x8
	.byte	0x4
	.space	1
	.short	0xffffffff
	.space	2
	.size	 sSpriteAnim_8216424,24
	.align	2, 0
	.type	 sSpriteAnim_821643C,object
sSpriteAnim_821643C:
	.short	0x8
	.byte	0x4
	.space	1
	.short	0xffffffff
	.space	2
	.size	 sSpriteAnim_821643C,8
	.align	2, 0
	.type	 sSpriteAnimTable_8216444,object
sSpriteAnimTable_8216444:
	.word	sSpriteAnim_8216414
	.word	sSpriteAnim_821641C
	.word	sSpriteAnim_8216424
	.word	sSpriteAnim_821643C
	.size	 sSpriteAnimTable_8216444,16
	.align	2, 0
	.type	 gUnknown_08216454,object
	.size	 gUnknown_08216454,8
gUnknown_08216454:
	.word	gBerryBlenderMarubatsuTiles
	.short	0x200
	.short	0xbef8
	.align	2, 0
	.type	 sSpriteTemplate_821645C,object
	.size	 sSpriteTemplate_821645C,24
sSpriteTemplate_821645C:
	.short	0xbef8
	.short	0xb5d2
	.word	sOamData_821640C
	.word	sSpriteAnimTable_8216444
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	sub_8051650
	.align	2, 0
	.type	 sOamData_8216474,object
	.size	 sOamData_8216474,8
sOamData_8216474:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x4
	.short	0x0
	.align	2, 0
	.type	 sSpriteAnim_821647C,object
sSpriteAnim_821647C:
	.short	0x0
	.byte	0x3
	.space	1
	.short	0x1
	.byte	0x4
	.space	1
	.short	0x3
	.byte	0x5
	.space	1
	.short	0x1
	.byte	0x4
	.space	1
	.short	0x0
	.byte	0x3
	.space	1
	.short	0xffffffff
	.space	2
	.size	 sSpriteAnim_821647C,24
	.align	2, 0
	.type	 sSpriteAnim_8216494,object
sSpriteAnim_8216494:
	.short	0x0
	.byte	0x3
	.space	1
	.short	0x2
	.byte	0x4
	.space	1
	.short	0x4
	.byte	0x5
	.space	1
	.short	0x2
	.byte	0x4
	.space	1
	.short	0x0
	.byte	0x3
	.space	1
	.short	0xffffffff
	.space	2
	.size	 sSpriteAnim_8216494,24
	.align	2, 0
	.type	 sSpriteAnim_82164AC,object
sSpriteAnim_82164AC:
	.short	0x0
	.byte	0x2
	.space	1
	.short	0x1
	.byte	0x2
	.space	1
	.short	0x2
	.byte	0x2
	.space	1
	.short	0x4
	.byte	0x4
	.space	1
	.short	0x3
	.byte	0x3
	.space	1
	.short	0x2
	.byte	0x2
	.space	1
	.short	0x1
	.byte	0x2
	.space	1
	.short	0x0
	.byte	0x2
	.space	1
	.short	0xffffffff
	.space	2
	.size	 sSpriteAnim_82164AC,36
	.align	2, 0
	.type	 sSpriteAnim_82164D0,object
sSpriteAnim_82164D0:
	.short	0x5
	.byte	0xc5
	.space	1
	.short	0xffffffff
	.space	2
	.size	 sSpriteAnim_82164D0,8
	.align	2, 0
	.type	 sSpriteAnim_82164D8,object
sSpriteAnim_82164D8:
	.short	0x6
	.byte	0xc5
	.space	1
	.short	0xffffffff
	.space	2
	.size	 sSpriteAnim_82164D8,8
	.align	2, 0
	.type	 sSpriteAnimTable_82164E0,object
sSpriteAnimTable_82164E0:
	.word	sSpriteAnim_821647C
	.word	sSpriteAnim_8216494
	.word	sSpriteAnim_82164AC
	.word	sSpriteAnim_82164D0
	.word	sSpriteAnim_82164D8
	.size	 sSpriteAnimTable_82164E0,20
	.align	2, 0
	.type	 gUnknown_082164F4,object
	.size	 gUnknown_082164F4,8
gUnknown_082164F4:
	.word	gBerryBlenderParticlesTiles
	.short	0xe0
	.short	0x5ba0
	.align	2, 0
	.type	 sSpriteTemplate_82164FC,object
	.size	 sSpriteTemplate_82164FC,24
sSpriteTemplate_82164FC:
	.short	0x5ba0
	.short	0xb5d2
	.word	sOamData_8216474
	.word	sSpriteAnimTable_82164E0
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.align	2, 0
	.type	 sOamData_8216514,object
	.size	 sOamData_8216514,8
sOamData_8216514:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x80
	.byte	0x0
	.byte	0x4
	.short	0x0
	.align	2, 0
	.type	 sSpriteAnim_821651C,object
sSpriteAnim_821651C:
	.short	0x20
	.byte	0x1e
	.space	1
	.short	0xffffffff
	.space	2
	.size	 sSpriteAnim_821651C,8
	.align	2, 0
	.type	 sSpriteAnim_8216524,object
sSpriteAnim_8216524:
	.short	0x10
	.byte	0x1e
	.space	1
	.short	0xffffffff
	.space	2
	.size	 sSpriteAnim_8216524,8
	.align	2, 0
	.type	 sSpriteAnim_821652C,object
sSpriteAnim_821652C:
	.short	0x0
	.byte	0x1e
	.space	1
	.short	0xffffffff
	.space	2
	.size	 sSpriteAnim_821652C,8
	.align	2, 0
	.type	 sSpriteAnimTable_8216534,object
sSpriteAnimTable_8216534:
	.word	sSpriteAnim_821651C
	.word	sSpriteAnim_8216524
	.word	sSpriteAnim_821652C
	.size	 sSpriteAnimTable_8216534,12
	.align	2, 0
	.type	 gUnknown_08216540,object
	.size	 gUnknown_08216540,8
gUnknown_08216540:
	.word	gBerryBlenderCountdownNumbersTiles
	.short	0x600
	.short	0x3039
	.align	2, 0
	.type	 sSpriteTemplate_8216548,object
	.size	 sSpriteTemplate_8216548,24
sSpriteTemplate_8216548:
	.short	0x3039
	.short	0xb5d2
	.word	sOamData_8216514
	.word	sSpriteAnimTable_8216534
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	sub_805181C
	.align	2, 0
	.type	 sOamData_8216560,object
	.size	 sOamData_8216560,8
sOamData_8216560:
	.byte	0x0
	.byte	0x40
	.byte	0x0
	.byte	0xc0
	.byte	0x0
	.byte	0x4
	.short	0x0
	.align	2, 0
	.type	 sSpriteAnim_8216568,object
sSpriteAnim_8216568:
	.short	0x0
	.byte	0x1e
	.space	1
	.short	0xffffffff
	.space	2
	.size	 sSpriteAnim_8216568,8
	.align	2, 0
	.type	 sSpriteAnimTable_8216570,object
sSpriteAnimTable_8216570:
	.word	sSpriteAnim_8216568
	.size	 sSpriteAnimTable_8216570,4
	.align	2, 0
	.type	 gUnknown_08216574,object
	.size	 gUnknown_08216574,8
gUnknown_08216574:
	.word	gBerryBlenderStartTiles
	.short	0x400
	.short	0x303a
	.align	2, 0
	.type	 sSpriteTemplate_821657C,object
	.size	 sSpriteTemplate_821657C,24
sSpriteTemplate_821657C:
	.short	0x303a
	.short	0xb5d2
	.word	sOamData_8216560
	.word	sSpriteAnimTable_8216570
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	sub_80518CC
	.align	1, 0
	.type	 gUnknown_08216594,object
gUnknown_08216594:
	.short	0xfffffff6
	.short	0x14
	.short	0xa
	.short	0x2
	.short	0x1
	.short	0xfa
	.short	0x14
	.short	0xa
	.short	0xfffffffe
	.short	0x1
	.short	0xfffffff6
	.short	0x8c
	.short	0xa
	.short	0x2
	.short	0xffffffff
	.short	0xfa
	.short	0x8c
	.short	0xa
	.short	0xfffffffe
	.short	0xffffffff
	.size	 gUnknown_08216594,40
	.type	 gUnknown_082165BC,object
gUnknown_082165BC:
	.byte	0x4
	.byte	0x3
	.byte	0x2
	.byte	0x0
	.byte	0x4
	.byte	0x3
	.byte	0x1
	.byte	0x0
	.byte	0x4
	.byte	0x2
	.byte	0x1
	.byte	0x0
	.byte	0x3
	.byte	0x2
	.byte	0x1
	.byte	0x0
	.byte	0x2
	.byte	0x3
	.byte	0x1
	.byte	0x3
	.byte	0x4
	.byte	0x2
	.byte	0x4
	.byte	0x0
	.byte	0x3
	.byte	0x0
	.byte	0x1
	.byte	0x4
	.byte	0x1
	.byte	0x2
	.size	 gUnknown_082165BC,30
	.type	 gUnknown_082165DA,object
gUnknown_082165DA:
	.byte	0x1
	.byte	0x1
	.byte	0x2
	.byte	0x3
	.byte	0x4
	.size	 gUnknown_082165DA,5
	.type	 gUnknown_082165DF,object
gUnknown_082165DF:
	.byte	0x1c
	.byte	0x16
	.byte	0x13
	.byte	0x1a
	.byte	0x19
	.byte	0xe
	.byte	0xd
	.byte	0xb
	.byte	0x7
	.byte	0x15
	.size	 gUnknown_082165DF,10
	.type	 gUnknown_082165E9,object
gUnknown_082165E9:
	.byte	0x6
	.byte	0x6
	.byte	0x6
	.byte	0x6
	.byte	0x5
	.size	 gUnknown_082165E9,5
	.type	 gUnknown_082165EE,object
gUnknown_082165EE:
	.byte	0x3
	.byte	0x3
	.byte	0x3
	.byte	0x2
	.byte	0x2
	.size	 gUnknown_082165EE,5
	.type	 gUnknown_082165F3,object
gUnknown_082165F3:
	.byte	0x3
	.byte	0x3
	.byte	0x3
	.byte	0x3
	.byte	0x2
	.size	 gUnknown_082165F3,5
	.type	 sText_Space,object
sText_Space:
	.byte	0x0
	.byte	0xff
	.size	 sText_Space,2
	.type	 sText_BPM,object
sText_BPM:
	.byte	0xbc
	.byte	0xca
	.byte	0xc7
	.byte	0xff
	.size	 sText_BPM,4
	.type	 sText_Dash,object
sText_Dash:
	.byte	0xae
	.byte	0xff
	.size	 sText_Dash,2
	.type	 sNewLineString_1,object
sNewLineString_1:
	.byte	0xfe
	.byte	0xff
	.size	 sNewLineString_1,2
	.type	 sNewLineString_2,object
sNewLineString_2:
	.byte	0xfe
	.byte	0xff
	.size	 sNewLineString_2,2
.text
	.align	2, 0
	.type	 Blender_ControlHitPitch,function
	.thumb_func
Blender_ControlHitPitch:
	push	{lr}
	ldr	r0, .L3
	ldr	r1, .L3+0x4
	ldr	r2, .L3+0x8
	ldr	r2, [r2]
	add	r2, r2, #0x56
	mov	r3, #0x0
	ldrsh	r2, [r2, r3]
	sub	r2, r2, #0x80
	lsl	r2, r2, #0x11
	asr	r2, r2, #0x10
	bl	m4aMPlayPitchControl
	pop	{r0}
	bx	r0
.L4:
	.align	2, 0
.L3:
	.word	gMPlay_SE2
	.word	0xffff
	.word	gBerryBlenderData
.Lfe1:
	.size	 Blender_ControlHitPitch,.Lfe1-Blender_ControlHitPitch
	.align	2, 0
	.type	 VBlankCB0_BerryBlender,function
	.thumb_func
VBlankCB0_BerryBlender:
	push	{lr}
	bl	sub_80514A4
	bl	sub_80514F0
	bl	LoadOam
	bl	ProcessSpriteCopyRequests
	bl	TransferPlttBuffer
	pop	{r0}
	bx	r0
.Lfe2:
	.size	 VBlankCB0_BerryBlender,.Lfe2-VBlankCB0_BerryBlender
	.align	2, 0
	.type	 VBlankCB1_BerryBlender,function
	.thumb_func
VBlankCB1_BerryBlender:
	push	{lr}
	bl	LoadOam
	bl	ProcessSpriteCopyRequests
	bl	TransferPlttBuffer
	pop	{r0}
	bx	r0
.Lfe3:
	.size	 VBlankCB1_BerryBlender,.Lfe3-VBlankCB1_BerryBlender
	.align	2, 0
	.type	 sub_804E2EC,function
	.thumb_func
sub_804E2EC:
	push	{r4, r5, r6, r7, lr}
	ldr	r1, .L34
	ldr	r0, [r1]
	ldrb	r0, [r0, #0x1]
	mov	ip, r1
	cmp	r0, #0x9
	bls	.LCB68
	b	.L8	@long jump
.LCB68:
	lsl	r0, r0, #0x2
	ldr	r1, .L34+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L35:
	.align	2, 0
.L34:
	.word	gBerryBlenderData
	.word	.L29
	.align	2, 0
	.align	2, 0
.L29:
	.word	.L9
	.word	.L10
	.word	.L11
	.word	.L17
	.word	.L18
	.word	.L19
	.word	.L20
	.word	.L21
	.word	.L27
	.word	.L28
.L9:
	ldr	r0, .L36
	ldr	r1, .L36+0x4
	bl	LZDecompressWram
	b	.L32
.L37:
	.align	2, 0
.L36:
	.word	gUnknown_08E6C100
	.word	gSharedMem+0x10000
.L10:
	ldr	r1, .L38
	ldr	r2, .L38+0x4
	ldr	r0, .L38+0x8
	str	r1, [r0]
	str	r2, [r0, #0x4]
	ldr	r1, .L38+0xc
	str	r1, [r0, #0x8]
	ldr	r0, [r0, #0x8]
	ldr	r0, .L38+0x10
	mov	r2, #0x80
	lsl	r2, r2, #0x1
	mov	r1, #0x0
	bl	LoadPalette
	b	.L32
.L39:
	.align	2, 0
.L38:
	.word	sBlenderCenterMap
	.word	0x6004000
	.word	0x40000d4
	.word	0x80000200
	.word	sBlenderCenterPal
.L11:
	ldr	r3, .L40
	mov	r4, #0xc0
	lsl	r4, r4, #0x13
	mov	r5, #0x80
	lsl	r5, r5, #0x6
	ldr	r1, .L40+0x4
	ldr	r6, .L40+0x8
	mov	r2, #0x80
	lsl	r2, r2, #0x5
	mov	r7, #0x80
	lsl	r7, r7, #0x18
.L12:
	str	r3, [r1]
	str	r4, [r1, #0x4]
	str	r6, [r1, #0x8]
	ldr	r0, [r1, #0x8]
	add	r3, r3, r2
	add	r4, r4, r2
	sub	r5, r5, r2
	cmp	r5, r2
	bhi	.L12	@cond_branch
	str	r3, [r1]
	str	r4, [r1, #0x4]
	lsr	r0, r5, #0x1
	orr	r0, r0, r7
	str	r0, [r1, #0x8]
	ldr	r0, [r1, #0x8]
	mov	r0, ip
	b	.L33
.L41:
	.align	2, 0
.L40:
	.word	gSharedMem+0x10000
	.word	0x40000d4
	.word	0x80000800
.L17:
	ldr	r0, .L42
	ldr	r1, .L42+0x4
	bl	LZDecompressWram
	b	.L32
.L43:
	.align	2, 0
.L42:
	.word	gUnknown_08E6C920
	.word	gSharedMem+0x10000
.L18:
	ldr	r0, .L44
	ldr	r1, .L44+0x4
	bl	LZDecompressWram
	b	.L32
.L45:
	.align	2, 0
.L44:
	.word	gUnknown_08E6D354
	.word	gSharedMem+0x13000
.L19:
	ldr	r1, .L46
	ldr	r2, .L46+0x4
	ldr	r0, .L46+0x8
	str	r1, [r0]
	str	r2, [r0, #0x4]
	ldr	r1, .L46+0xc
	str	r1, [r0, #0x8]
	ldr	r0, [r0, #0x8]
	mov	r0, ip
	b	.L33
.L47:
	.align	2, 0
.L46:
	.word	gSharedMem+0x10000
	.word	0x600e000
	.word	0x40000d4
	.word	0x80000800
.L20:
	ldr	r1, .L48
	ldr	r2, .L48+0x4
	ldr	r0, .L48+0x8
	str	r1, [r0]
	str	r2, [r0, #0x4]
	ldr	r1, .L48+0xc
	str	r1, [r0, #0x8]
	ldr	r0, [r0, #0x8]
	mov	r0, ip
	b	.L33
.L49:
	.align	2, 0
.L48:
	.word	gSharedMem+0x11000
	.word	0x600f000
	.word	0x40000d4
	.word	0x80000800
.L21:
	ldr	r3, .L50
	mov	r2, #0x0
	add	r6, r3, #0
	ldr	r7, .L50+0x4
	mov	r0, #0x80
	lsl	r0, r0, #0x1
	add	r5, r0, #0
	ldr	r4, .L50+0x8
.L25:
	lsl	r0, r2, #0x1
	add	r0, r0, r3
	ldrh	r1, [r0]
	orr	r1, r1, r5
	strh	r1, [r0]
	add	r0, r2, #0x1
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	cmp	r2, r4
	bls	.L25	@cond_branch
	ldr	r1, .L50+0xc
	ldr	r0, .L50+0x10
	str	r6, [r0]
	str	r1, [r0, #0x4]
	ldr	r1, .L50+0x14
	str	r1, [r0, #0x8]
	ldr	r0, [r0, #0x8]
	add	r0, r7, #0
	mov	r1, #0x80
	mov	r2, #0x20
	bl	LoadPalette
	b	.L32
.L51:
	.align	2, 0
.L50:
	.word	gSharedMem+0x13000
	.word	sBlenderOuterPal
	.word	0x27f
	.word	0x6006000
	.word	0x40000d4
	.word	0x80000280
.L27:
	ldr	r0, .L52
	bl	LoadSpriteSheet
	ldr	r0, .L52+0x4
	bl	LoadSpriteSheet
	ldr	r0, .L52+0x8
	bl	LoadSpriteSheet
.L32:
	ldr	r0, .L52+0xc
.L33:
	ldr	r1, [r0]
	ldrb	r0, [r1, #0x1]
	add	r0, r0, #0x1
	strb	r0, [r1, #0x1]
	b	.L8
.L53:
	.align	2, 0
.L52:
	.word	gUnknown_082163DC
	.word	gUnknown_082164F4
	.word	gUnknown_08216454
	.word	gBerryBlenderData
.L28:
	ldr	r0, .L54
	bl	LoadSpriteSheet
	ldr	r0, .L54+0x4
	bl	LoadSpriteSheet
	ldr	r0, .L54+0x8
	bl	LoadSpritePalette
	ldr	r0, .L54+0xc
	bl	LoadSpritePalette
	ldr	r0, .L54+0x10
	ldr	r1, [r0]
	mov	r0, #0x0
	strb	r0, [r1, #0x1]
	mov	r0, #0x1
	b	.L31
.L55:
	.align	2, 0
.L54:
	.word	gUnknown_08216540
	.word	gUnknown_08216574
	.word	gUnknown_082163EC
	.word	gUnknown_082163E4
	.word	gBerryBlenderData
.L8:
	mov	r0, #0x0
.L31:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe4:
	.size	 sub_804E2EC,.Lfe4-sub_804E2EC
	.align	2, 0
	.type	 sub_804E4FC,function
	.thumb_func
sub_804E4FC:
	mov	r1, #0x80
	lsl	r1, r1, #0x13
	ldr	r2, .L57
	add	r0, r2, #0
	strh	r0, [r1]
	add	r1, r1, #0xc
	mov	r2, #0x91
	lsl	r2, r2, #0x7
	add	r0, r2, #0
	strh	r0, [r1]
	sub	r1, r1, #0x2
	ldr	r2, .L57+0x4
	add	r0, r2, #0
	strh	r0, [r1]
	ldr	r0, .L57+0x8
	mov	r1, #0x0
	strh	r1, [r0]
	add	r0, r0, #0x2
	strh	r1, [r0]
	add	r0, r0, #0x2
	strh	r1, [r0]
	add	r0, r0, #0x2
	strh	r1, [r0]
	bx	lr
.L58:
	.align	2, 0
.L57:
	.word	0x1341
	.word	0xc0d
	.word	0x4000010
.Lfe5:
	.size	 sub_804E4FC,.Lfe5-sub_804E4FC
	.align	2, 0
	.globl	sub_804E538
	.type	 sub_804E538,function
	.thumb_func
sub_804E538:
	push	{lr}
	ldr	r1, .L60
	ldr	r0, .L60+0x4
	str	r0, [r1]
	add	r2, r0, #0
	add	r2, r2, #0x6f
	mov	r1, #0x0
	strb	r1, [r0]
	strb	r1, [r2]
	ldr	r0, .L60+0x8
	ldrb	r0, [r0]
	bl	Blender_SetPlayerNamesLocal
	ldr	r0, .L60+0xc
	bl	SetMainCallback2
	pop	{r0}
	bx	r0
.L61:
	.align	2, 0
.L60:
	.word	gBerryBlenderData
	.word	gSharedMem+0x18000
	.word	gSpecialVar_0x8004
	.word	sub_804E56C
.Lfe6:
	.size	 sub_804E538,.Lfe6-sub_804E538
	.align	2, 0
	.type	 sub_804E56C,function
	.thumb_func
sub_804E56C:
	push	{r4, r5, r6, lr}
	add	sp, sp, #0xfffffffc
	ldr	r0, .L83
	ldr	r0, [r0]
	ldrb	r0, [r0]
	cmp	r0, #0x6
	bls	.LCB479
	b	.L63	@long jump
.LCB479:
	lsl	r0, r0, #0x2
	ldr	r1, .L83+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L84:
	.align	2, 0
.L83:
	.word	gBerryBlenderData
	.word	.L80
	.align	2, 0
	.align	2, 0
.L80:
	.word	.L64
	.word	.L65
	.word	.L72
	.word	.L73
	.word	.L75
	.word	.L76
	.word	.L78
.L64:
	mov	r0, #0x80
	lsl	r0, r0, #0x13
	mov	r5, #0x0
	strh	r5, [r0]
	bl	ResetSpriteData
	bl	FreeAllSpritePalettes
	mov	r0, #0x0
	bl	SetVBlankCallback
	ldr	r4, .L85
	add	r0, r4, #0
	bl	SetUpWindowConfig
	add	r0, r4, #0
	bl	InitMenuWindow
	ldr	r3, .L85+0x4
	ldr	r2, [r3]
	ldrb	r0, [r2]
	add	r0, r0, #0x1
	mov	r1, #0x0
	strb	r0, [r2]
	ldr	r2, [r3]
	mov	r3, #0xa0
	lsl	r3, r3, #0x1
	add	r0, r2, r3
	strh	r1, [r0]
	sub	r3, r3, #0x2
	add	r0, r2, r3
	strh	r1, [r0]
	mov	r0, #0xa1
	lsl	r0, r0, #0x1
	add	r3, r2, r0
	mov	r0, #0x50
	strh	r0, [r3]
	mov	r3, #0xa2
	lsl	r3, r3, #0x1
	add	r0, r2, r3
	strh	r1, [r0]
	add	r3, r3, #0x2
	add	r0, r2, r3
	strh	r1, [r0]
	strb	r5, [r2, #0x1]
	bl	sub_8051474
	b	.L63
.L86:
	.align	2, 0
.L85:
	.word	gWindowConfig_81E6F68
	.word	gBerryBlenderData
.L65:
	bl	sub_804E2EC
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB560
	b	.L63	@long jump
.LCB560:
	mov	r4, #0x0
	ldr	r5, .L87
	ldr	r6, .L87+0x4
.L70:
	ldrb	r1, [r5]
	ldrb	r2, [r5, #0x1]
	ldr	r0, .L87+0x8
	mov	r3, #0x1
	bl	CreateSprite
	ldr	r1, [r6]
	add	r1, r1, #0x5c
	add	r1, r1, r4
	strb	r0, [r1]
	ldr	r0, [r6]
	add	r0, r0, #0x5c
	add	r0, r0, r4
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L87+0xc
	add	r0, r0, r1
	add	r1, r4, #0
	add	r1, r1, #0x8
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	bl	StartSpriteAnim
	add	r5, r5, #0x2
	add	r4, r4, #0x1
	cmp	r4, #0x3
	ble	.L70	@cond_branch
	ldr	r0, .L87+0x10
	bl	SetVBlankCallback
	b	.L82
.L88:
	.align	2, 0
.L87:
	.word	sBlenderSyncArrowsPos
	.word	gBerryBlenderData
	.word	sBlenderSyncArrow_SpriteTemplate
	.word	gSprites
	.word	VBlankCB0_BerryBlender
.L72:
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	bl	sub_8051474
	b	.L82
.L73:
	bl	sub_804E4FC
	ldr	r0, .L89
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L63	@cond_branch
	b	.L82
.L90:
	.align	2, 0
.L89:
	.word	gPaletteFade
.L75:
	mov	r0, #0x0
	mov	r1, #0xe
	mov	r2, #0x1d
	mov	r3, #0x13
	bl	MenuDrawTextWindow
	ldr	r0, .L91
	mov	r1, #0x1
	mov	r2, #0xf
	bl	MenuPrintMessage
.L82:
	ldr	r0, .L91+0x4
	ldr	r1, [r0]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L63
.L92:
	.align	2, 0
.L91:
	.word	gOtherText_BlenderChooseBerry
	.word	gBerryBlenderData
.L76:
	bl	MenuUpdateWindowText
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L63	@cond_branch
	ldr	r0, .L93
	ldr	r1, [r0]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	mov	r2, #0x0
	strb	r0, [r1]
	mov	r0, #0x1
	neg	r0, r0
	str	r2, [sp]
	mov	r1, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	b	.L63
.L94:
	.align	2, 0
.L93:
	.word	gBerryBlenderData
.L78:
	ldr	r0, .L95
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0
	bne	.L63	@cond_branch
	bl	sub_80A6978
	ldr	r0, .L95+0x4
	ldr	r0, [r0]
	strb	r4, [r0]
.L63:
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	UpdatePaletteFade
	add	sp, sp, #0x4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L96:
	.align	2, 0
.L95:
	.word	gPaletteFade
	.word	gBerryBlenderData
.Lfe7:
	.size	 sub_804E56C,.Lfe7-sub_804E56C
	.align	2, 0
	.globl	sub_804E738
	.type	 sub_804E738,function
	.thumb_func
sub_804E738:
	push	{r4, lr}
	add	r4, r0, #0
	ldrh	r0, [r4, #0x3a]
	ldrh	r1, [r4, #0x30]
	add	r0, r0, r1
	strh	r0, [r4, #0x30]
	ldrh	r1, [r4, #0x32]
	ldrh	r2, [r4, #0x36]
	sub	r1, r1, r2
	ldrh	r0, [r4, #0x3c]
	add	r1, r1, r0
	strh	r1, [r4, #0x32]
	ldrh	r3, [r4, #0x2e]
	add	r0, r0, r3
	strh	r0, [r4, #0x2e]
	sub	r2, r2, #0x1
	strh	r2, [r4, #0x36]
	lsl	r0, r0, #0x10
	lsl	r1, r1, #0x10
	cmp	r0, r1
	bge	.L98	@cond_branch
	ldrh	r0, [r4, #0x34]
	sub	r0, r0, #0x1
	strh	r0, [r4, #0x36]
	strh	r0, [r4, #0x34]
	ldrh	r0, [r4, #0x38]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x38]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x3
	ble	.L99	@cond_branch
	add	r0, r4, #0
	bl	DestroySprite
	b	.L98
.L99:
	mov	r0, #0x74
	bl	PlaySE
.L98:
	ldrh	r0, [r4, #0x30]
	strh	r0, [r4, #0x20]
	ldrh	r0, [r4, #0x32]
	strh	r0, [r4, #0x22]
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe8:
	.size	 sub_804E738,.Lfe8-sub_804E738
	.align	2, 0
	.globl	sub_804E794
	.type	 sub_804E794,function
	.thumb_func
sub_804E794:
	push	{r4, r5, r6, lr}
	ldr	r5, [sp, #0x10]
	ldr	r6, [sp, #0x14]
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	mov	r4, #0x0
	strh	r2, [r0, #0x2e]
	strh	r1, [r0, #0x30]
	strh	r2, [r0, #0x32]
	strh	r3, [r0, #0x34]
	mov	r1, #0xa
	strh	r1, [r0, #0x36]
	strh	r4, [r0, #0x38]
	strh	r5, [r0, #0x3a]
	strh	r6, [r0, #0x3c]
	ldr	r1, .L102
	str	r1, [r0, #0x1c]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L103:
	.align	2, 0
.L102:
	.word	sub_804E738
.Lfe9:
	.size	 sub_804E794,.Lfe9-sub_804E794
	.align	2, 0
	.type	 sub_804E7C0,function
	.thumb_func
sub_804E7C0:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	sp, sp, #0xfffffff8
	add	r6, r1, #0
	lsl	r6, r6, #0x18
	lsr	r6, r6, #0x18
	lsl	r0, r0, #0x18
	mov	r1, #0xf6
	lsl	r1, r1, #0x17
	add	r0, r0, r1
	lsr	r0, r0, #0x18
	mov	r3, #0x1
	and	r3, r3, r6
	mov	r1, #0x0
	mov	r2, #0x50
	bl	sub_80A7DEC
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r2, r0, #0x4
	mov	r8, r2
	add	r8, r8, r0
	mov	r3, r8
	lsl	r3, r3, #0x2
	mov	r8, r3
	ldr	r0, .L105
	add	r8, r8, r0
	ldr	r5, .L105+0x4
	lsl	r4, r6, #0x2
	add	r4, r4, r6
	lsl	r4, r4, #0x1
	add	r0, r4, r5
	mov	r6, #0x0
	ldrsh	r1, [r0, r6]
	add	r0, r5, #0x2
	add	r0, r4, r0
	mov	r3, #0x0
	ldrsh	r2, [r0, r3]
	add	r0, r5, #0x4
	add	r0, r4, r0
	mov	r6, #0x0
	ldrsh	r3, [r0, r6]
	add	r0, r5, #0x6
	add	r0, r4, r0
	mov	r6, #0x0
	ldrsh	r0, [r0, r6]
	str	r0, [sp]
	add	r5, r5, #0x8
	add	r4, r4, r5
	mov	r5, #0x0
	ldrsh	r0, [r4, r5]
	str	r0, [sp, #0x4]
	mov	r0, r8
	bl	sub_804E794
	add	sp, sp, #0x8
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L106:
	.align	2, 0
.L105:
	.word	gSprites
	.word	gUnknown_08216594
.Lfe10:
	.size	 sub_804E7C0,.Lfe10-sub_804E7C0
	.align	2, 0
	.type	 Blender_CopyBerryData,function
	.thumb_func
Blender_CopyBerryData:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	lsl	r5, r1, #0x10
	lsr	r5, r5, #0x10
	add	r0, r5, #0
	add	r0, r0, #0x7c
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetBerryInfo
	add	r4, r0, #0
	strh	r5, [r6]
	add	r0, r6, #0x2
	add	r1, r4, #0
	bl	StringCopy
	ldrb	r0, [r4, #0x15]
	strb	r0, [r6, #0x9]
	ldrb	r0, [r4, #0x16]
	strb	r0, [r6, #0xa]
	ldrb	r0, [r4, #0x17]
	strb	r0, [r6, #0xb]
	ldrb	r0, [r4, #0x18]
	strb	r0, [r6, #0xc]
	ldrb	r0, [r4, #0x19]
	strb	r0, [r6, #0xd]
	ldrb	r0, [r4, #0x1a]
	strb	r0, [r6, #0xe]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe11:
	.size	 Blender_CopyBerryData,.Lfe11-Blender_CopyBerryData
	.align	2, 0
	.type	 Blender_SetPlayerNamesLocal,function
	.thumb_func
Blender_SetPlayerNamesLocal:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L109	@cond_branch
	ldr	r2, .L124
	mov	r3, #0x2
	add	r0, r2, #0
	add	r0, r0, #0x54
.L113:
	strh	r3, [r0, #0x1a]
	sub	r0, r0, #0x1c
	cmp	r0, r2
	bge	.L113	@cond_branch
.L109:
	cmp	r1, #0x1
	beq	.L117	@cond_branch
	cmp	r1, #0x1
	bgt	.L122	@cond_branch
	cmp	r1, #0
	beq	.L116	@cond_branch
	b	.L115
.L125:
	.align	2, 0
.L124:
	.word	gLinkPlayers
.L122:
	cmp	r1, #0x2
	beq	.L118	@cond_branch
	cmp	r1, #0x3
	beq	.L119	@cond_branch
	b	.L115
.L116:
	ldr	r0, .L126
	strb	r1, [r0]
	b	.L115
.L127:
	.align	2, 0
.L126:
	.word	gInGameOpponentsNo
.L117:
	ldr	r0, .L128
	strb	r1, [r0]
	ldr	r0, .L128+0x4
	ldr	r0, [r0]
	add	r0, r0, #0x88
	mov	r1, #0x2
	strb	r1, [r0]
	ldr	r4, .L128+0x8
	ldr	r1, .L128+0xc
	add	r0, r4, #0
	bl	StringCopy
	add	r4, r4, #0x1c
	ldr	r0, .L128+0x10
	ldr	r1, [r0]
	b	.L123
.L129:
	.align	2, 0
.L128:
	.word	gInGameOpponentsNo
	.word	gBerryBlenderData
	.word	gLinkPlayers+0x8
	.word	gSaveBlock2
	.word	sBlenderOpponentsNames
.L118:
	ldr	r0, .L130
	strb	r1, [r0]
	ldr	r0, .L130+0x4
	ldr	r0, [r0]
	add	r0, r0, #0x88
	mov	r1, #0x3
	strb	r1, [r0]
	ldr	r4, .L130+0x8
	ldr	r1, .L130+0xc
	add	r0, r4, #0
	bl	StringCopy
	add	r0, r4, #0
	add	r0, r0, #0x1c
	ldr	r5, .L130+0x10
	ldr	r1, [r5]
	bl	StringCopy
	add	r4, r4, #0x38
	ldr	r1, [r5, #0x4]
.L123:
	add	r0, r4, #0
	bl	StringCopy
	b	.L115
.L131:
	.align	2, 0
.L130:
	.word	gInGameOpponentsNo
	.word	gBerryBlenderData
	.word	gLinkPlayers+0x8
	.word	gSaveBlock2
	.word	sBlenderOpponentsNames
.L119:
	ldr	r0, .L132
	strb	r1, [r0]
	ldr	r0, .L132+0x4
	ldr	r0, [r0]
	add	r0, r0, #0x88
	mov	r1, #0x4
	strb	r1, [r0]
	ldr	r4, .L132+0x8
	ldr	r1, .L132+0xc
	add	r0, r4, #0
	bl	StringCopy
	add	r0, r4, #0
	add	r0, r0, #0x1c
	ldr	r5, .L132+0x10
	ldr	r1, [r5]
	bl	StringCopy
	add	r0, r4, #0
	add	r0, r0, #0x38
	ldr	r1, [r5, #0x4]
	bl	StringCopy
	add	r4, r4, #0x54
	ldr	r1, [r5, #0x8]
	add	r0, r4, #0
	bl	StringCopy
.L115:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L133:
	.align	2, 0
.L132:
	.word	gInGameOpponentsNo
	.word	gBerryBlenderData
	.word	gLinkPlayers+0x8
	.word	gSaveBlock2
	.word	sBlenderOpponentsNames
.Lfe12:
	.size	 Blender_SetPlayerNamesLocal,.Lfe12-Blender_SetPlayerNamesLocal
	.align	2, 0
	.globl	sub_804E990
	.type	 sub_804E990,function
	.thumb_func
sub_804E990:
	push	{r4, r5, lr}
	mov	r0, #0x80
	lsl	r0, r0, #0x13
	mov	r2, #0x0
	strh	r2, [r0]
	ldr	r3, .L142
	ldr	r0, .L142+0x4
	str	r0, [r3]
	mov	r1, #0x0
	strb	r2, [r0]
	mov	r2, #0x9a
	lsl	r2, r2, #0x1
	add	r0, r0, r2
	str	r1, [r0]
	mov	r2, #0x0
	ldr	r5, .L142+0x8
	add	r4, r3, #0
	mov	r3, #0x0
.L138:
	ldr	r0, [r4]
	lsl	r1, r2, #0x1
	add	r0, r0, #0x80
	add	r0, r0, r1
	strh	r3, [r0]
	add	r2, r2, #0x1
	cmp	r2, #0x3
	ble	.L138	@cond_branch
	ldrb	r0, [r5]
	bl	Blender_SetPlayerNamesLocal
	ldrh	r0, [r5]
	cmp	r0, #0
	bne	.L140	@cond_branch
	ldr	r0, .L142+0xc
	bl	SetMainCallback2
	b	.L141
.L143:
	.align	2, 0
.L142:
	.word	gBerryBlenderData
	.word	gSharedMem+0x18000
	.word	gSpecialVar_0x8004
	.word	sub_804E9F8
.L140:
	ldr	r0, .L144
	bl	SetMainCallback2
.L141:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L145:
	.align	2, 0
.L144:
	.word	sub_804F378
.Lfe13:
	.size	 sub_804E990,.Lfe13-sub_804E990
	.align	2, 0
	.type	 sub_804E9F8,function
	.thumb_func
sub_804E9F8:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #0xfffffffc
	ldr	r1, .L219
	ldr	r0, [r1]
	ldrb	r0, [r0]
	mov	r8, r1
	cmp	r0, #0x66
	bls	.LCB1231
	b	.L147	@long jump
.LCB1231:
	lsl	r0, r0, #0x2
	ldr	r1, .L219+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L220:
	.align	2, 0
.L219:
	.word	gBerryBlenderData
	.word	.L212
	.align	2, 0
	.align	2, 0
.L212:
	.word	.L148
	.word	.L159
	.word	.L161
	.word	.L167
	.word	.L168
	.word	.L170
	.word	.L147
	.word	.L147
	.word	.L171
	.word	.L172
	.word	.L175
	.word	.L183
	.word	.L190
	.word	.L194
	.word	.L196
	.word	.L198
	.word	.L200
	.word	.L147
	.word	.L201
	.word	.L202
	.word	.L203
	.word	.L205
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L147
	.word	.L207
	.word	.L208
	.word	.L210
.L148:
	bl	ResetSpriteData
	bl	FreeAllSpritePalettes
	bl	ResetTasks
	ldr	r0, .L221
	bl	SetVBlankCallback
	ldr	r4, .L221+0x4
	add	r0, r4, #0
	bl	SetUpWindowConfig
	add	r0, r4, #0
	bl	InitMenuWindow
	ldr	r1, .L221+0x8
	ldr	r2, .L221+0xc
	add	r0, r2, #0
	strh	r0, [r1]
	ldr	r3, .L221+0x10
	ldr	r1, [r3]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	mov	r2, #0x0
	strb	r0, [r1]
	ldr	r0, [r3]
	add	r4, r0, #0
	add	r4, r4, #0x4e
	mov	r1, #0x0
	strh	r2, [r4]
	add	r0, r0, #0x7e
	strb	r1, [r0]
	ldr	r1, [r3]
	mov	r4, #0xa2
	lsl	r4, r4, #0x1
	add	r0, r1, r4
	strh	r2, [r0]
	add	r4, r4, #0x2
	add	r0, r1, r4
	strh	r2, [r0]
	mov	r5, #0x0
	mov	r6, #0x0
	mov	r8, r3
	mov	r7, #0xa6
	lsl	r7, r7, #0x1
.L152:
	ldr	r0, [r3]
	lsl	r1, r5, #0x1
	add	r0, r0, #0x70
	add	r0, r0, r1
	strh	r6, [r0]
	add	r4, r5, #0x1
	add	r1, r1, r5
	lsl	r1, r1, #0x1
	mov	r2, #0x2
.L156:
	ldr	r0, [r3]
	add	r0, r0, r7
	add	r0, r0, r1
	strh	r6, [r0]
	add	r1, r1, #0x2
	sub	r2, r2, #0x1
	cmp	r2, #0
	bge	.L156	@cond_branch
	add	r5, r4, #0
	cmp	r5, #0x3
	ble	.L152	@cond_branch
	mov	r0, r8
	ldr	r3, [r0]
	add	r0, r3, #0
	add	r0, r0, #0x7c
	mov	r2, #0x0
	mov	r1, #0x0
	strh	r1, [r0]
	sub	r0, r0, #0x26
	strh	r1, [r0]
	sub	r0, r0, #0x2
	strh	r1, [r0]
	add	r0, r0, #0x6
	strh	r1, [r0]
	strb	r2, [r3, #0x1]
	b	.L147
.L222:
	.align	2, 0
.L221:
	.word	VBlankCB0_BerryBlender
	.word	gWindowConfig_81E6F68
	.word	gLinkType
	.word	0x4422
	.word	gBerryBlenderData
.L159:
	bl	sub_804E2EC
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB1371
	b	.L147	@long jump
.LCB1371:
	ldr	r0, .L223
	ldr	r1, [r0]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	bl	sub_8051474
	b	.L147
.L224:
	.align	2, 0
.L223:
	.word	gBerryBlenderData
.L161:
	mov	r5, #0x0
	ldr	r4, .L225
	ldr	r6, .L225+0x4
.L165:
	ldrb	r1, [r4]
	ldrb	r2, [r4, #0x1]
	ldr	r0, .L225+0x8
	mov	r3, #0x1
	bl	CreateSprite
	ldr	r1, [r6]
	add	r1, r1, #0x60
	add	r1, r1, r5
	strb	r0, [r1]
	ldr	r0, [r6]
	add	r0, r0, #0x60
	add	r0, r0, r5
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L225+0xc
	add	r0, r0, r1
	add	r1, r5, #0
	add	r1, r1, #0x8
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	bl	StartSpriteAnim
	add	r4, r4, #0x2
	add	r5, r5, #0x1
	cmp	r5, #0x3
	ble	.L165	@cond_branch
	b	.L215
.L226:
	.align	2, 0
.L225:
	.word	sBlenderSyncArrowsPos
	.word	gBerryBlenderData
	.word	sBlenderSyncArrow_SpriteTemplate
	.word	gSprites
.L167:
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	b	.L215
.L168:
	bl	sub_804E4FC
	ldr	r0, .L227
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.LCB1465
	b	.L147	@long jump
.LCB1465:
	b	.L215
.L228:
	.align	2, 0
.L227:
	.word	gPaletteFade
.L170:
	mov	r0, #0x0
	mov	r1, #0xd
	mov	r2, #0x1d
	mov	r3, #0x13
	bl	MenuDrawTextWindow
	ldr	r0, .L229
	mov	r1, #0x1
	mov	r2, #0xe
	bl	MenuPrint
	ldr	r2, .L229+0x4
	ldr	r1, [r2]
	mov	r3, #0x0
	mov	r0, #0x8
	strb	r0, [r1]
	ldr	r0, [r2]
	mov	r1, #0x98
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	str	r3, [r0]
	b	.L147
.L230:
	.align	2, 0
.L229:
	.word	gOtherText_LinkStandby3
	.word	gBerryBlenderData
.L171:
	mov	r2, r8
	ldr	r1, [r2]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	mov	r5, #0x0
	strb	r0, [r1]
	ldr	r0, [r2]
	mov	r3, #0x9e
	lsl	r3, r3, #0x1
	add	r0, r0, r3
	strb	r5, [r0]
	ldr	r0, [r2]
	mov	r4, #0xbe
	lsl	r4, r4, #0x1
	add	r0, r0, r4
	ldr	r1, .L231
	ldrh	r1, [r1]
	bl	Blender_CopyBerryData
	ldr	r0, .L231+0x4
	mov	r2, r8
	ldr	r1, [r2]
	add	r1, r1, r4
	mov	r2, #0x10
	bl	memcpy
	bl	sub_80084A4
	mov	r3, r8
	ldr	r0, [r3]
	sub	r4, r4, #0x4c
	add	r0, r0, r4
	str	r5, [r0]
	b	.L147
.L232:
	.align	2, 0
.L231:
	.word	gScriptItemId
	.word	gBlockSendBuffer
.L172:
	bl	sub_8007ECC
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB1559
	b	.L147	@long jump
.LCB1559:
	bl	ResetBlockReceivedFlags
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB1567
	b	.L215	@long jump
.LCB1567:
	mov	r0, #0x4
	bl	sub_8007E9C
	b	.L215
.L175:
	mov	r0, r8
	ldr	r1, [r0]
	mov	r2, #0x98
	lsl	r2, r2, #0x1
	add	r1, r1, r2
	ldr	r0, [r1]
	add	r0, r0, #0x1
	str	r0, [r1]
	cmp	r0, #0x14
	bgt	.LCB1585
	b	.L147	@long jump
.LCB1585:
	bl	MenuZeroFillScreen
	bl	GetBlockReceivedStatus
	add	r4, r0, #0
	bl	sub_8008198
	lsl	r4, r4, #0x18
	lsl	r0, r0, #0x18
	cmp	r4, r0
	beq	.LCB1597
	b	.L147	@long jump
.LCB1597:
	mov	r5, #0x0
	mov	r7, r8
	mov	r6, #0xbe
	lsl	r6, r6, #0x1
	b	.L178
.L181:
	ldr	r0, [r7]
	lsl	r4, r5, #0x4
	add	r0, r4, r0
	add	r0, r0, r6
	lsl	r1, r5, #0x8
	ldr	r2, .L233
	add	r1, r1, r2
	mov	r2, #0x10
	bl	memcpy
	ldr	r0, [r7]
	lsl	r2, r5, #0x1
	add	r1, r0, #0
	add	r1, r1, #0x80
	add	r1, r1, r2
	add	r0, r0, r4
	add	r0, r0, r6
	ldrh	r0, [r0]
	strh	r0, [r1]
	add	r5, r5, #0x1
.L178:
	bl	GetLinkPlayerCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r5, r0
	blt	.L181	@cond_branch
	bl	ResetBlockReceivedFlags
	b	.L215
.L234:
	.align	2, 0
.L233:
	.word	gBlockRecvBuffer
.L214:
	ldrb	r1, [r4]
	lsl	r1, r1, #0x1
	add	r0, r2, #0
	add	r0, r0, #0x80
	add	r0, r0, r1
	ldrh	r0, [r0]
	lsl	r1, r5, #0x18
	lsr	r1, r1, #0x18
	bl	sub_804E7C0
	b	.L185
.L183:
	bl	GetLinkPlayerCount
	ldr	r2, .L235
	ldr	r1, [r2]
	add	r1, r1, #0x88
	strb	r0, [r1]
	mov	r5, #0x0
	ldr	r2, [r2]
	mov	r3, #0x9e
	lsl	r3, r3, #0x1
	add	r4, r2, r3
	ldr	r1, .L235+0x4
	add	r0, r2, #0
	add	r0, r0, #0x88
	ldrb	r0, [r0]
	sub	r0, r0, #0x2
	lsl	r0, r0, #0x2
	ldrb	r3, [r4]
	add	r0, r0, r1
.L187:
	ldrb	r1, [r0]
	cmp	r3, r1
	beq	.L214	@cond_branch
	add	r0, r0, #0x1
	add	r5, r5, #0x1
	cmp	r5, #0x3
	ble	.L187	@cond_branch
.L185:
	ldr	r3, .L235
	ldr	r1, [r3]
	mov	r4, #0x98
	lsl	r4, r4, #0x1
	add	r2, r1, r4
	mov	r0, #0x0
	str	r0, [r2]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	ldr	r1, [r3]
	mov	r0, #0x9e
	lsl	r0, r0, #0x1
	add	r1, r1, r0
	b	.L216
.L236:
	.align	2, 0
.L235:
	.word	gBerryBlenderData
	.word	gUnknown_082162EC
.L190:
	mov	r1, r8
	ldr	r2, [r1]
	mov	r3, #0x98
	lsl	r3, r3, #0x1
	add	r1, r2, r3
	ldr	r0, [r1]
	add	r0, r0, #0x1
	str	r0, [r1]
	cmp	r0, #0x3c
	bgt	.LCB1742
	b	.L147	@long jump
.LCB1742:
	mov	r4, #0x9e
	lsl	r4, r4, #0x1
	add	r0, r2, r4
	add	r1, r2, #0
	add	r1, r1, #0x88
	ldrb	r0, [r0]
	ldrb	r1, [r1]
	cmp	r0, r1
	bcc	.L192	@cond_branch
	ldrb	r0, [r2]
	add	r0, r0, #0x1
	strb	r0, [r2]
	mov	r0, r8
	ldr	r2, [r0]
	ldr	r3, .L237
	ldr	r1, .L237+0x4
	add	r0, r2, #0
	add	r0, r0, #0x88
	ldrb	r0, [r0]
	sub	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r0, r0, r3
	ldr	r3, .L237+0x8
	add	r1, r3, #0
	ldrh	r0, [r0]
	add	r1, r1, r0
	add	r2, r2, #0x54
	strh	r1, [r2]
	b	.L193
.L238:
	.align	2, 0
.L237:
	.word	gUnknown_082162F8
	.word	gUnknown_08216300
	.word	0xffffa800
.L192:
	ldrb	r0, [r2]
	sub	r0, r0, #0x1
	strb	r0, [r2]
.L193:
	mov	r4, r8
	ldr	r0, [r4]
	mov	r1, #0x98
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	mov	r1, #0x0
	str	r1, [r0]
	b	.L147
.L194:
	bl	sub_8007ECC
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB1814
	b	.L147	@long jump
.LCB1814:
	ldr	r2, .L239
	ldr	r1, [r2]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	ldr	r0, [r2]
	b	.L217
.L240:
	.align	2, 0
.L239:
	.word	gBerryBlenderData
.L196:
	mov	r2, #0x80
	lsl	r2, r2, #0x13
	ldrh	r0, [r2]
	mov	r3, #0x80
	lsl	r3, r3, #0x3
	add	r1, r3, #0
	orr	r0, r0, r1
	strh	r0, [r2]
	mov	r4, r8
	ldr	r2, [r4]
	add	r1, r2, #0
	add	r1, r1, #0x54
	mov	r3, #0x80
	lsl	r3, r3, #0x2
	add	r0, r3, #0
	ldrh	r4, [r1]
	add	r0, r0, r4
	strh	r0, [r1]
	mov	r0, #0xa1
	lsl	r0, r0, #0x1
	add	r1, r2, r0
	ldrh	r0, [r1]
	add	r0, r0, #0x4
	strh	r0, [r1]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0xff
	bls	.L197	@cond_branch
	ldrb	r0, [r2]
	add	r0, r0, #0x1
	strb	r0, [r2]
	mov	r1, r8
	ldr	r3, [r1]
	mov	r2, #0xa1
	lsl	r2, r2, #0x1
	add	r1, r3, r2
	mov	r0, #0x80
	lsl	r0, r0, #0x1
	strh	r0, [r1]
	ldr	r2, .L241
	ldr	r1, .L241+0x4
	add	r0, r3, #0
	add	r0, r0, #0x88
	ldrb	r0, [r0]
	sub	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r0, r0, r2
	ldrh	r1, [r0]
	add	r0, r3, #0
	add	r0, r0, #0x54
	strh	r1, [r0]
	ldr	r1, .L241+0x8
	ldr	r4, .L241+0xc
	add	r0, r4, #0
	strh	r0, [r1]
	mov	r0, #0x98
	lsl	r0, r0, #0x1
	add	r1, r3, r0
	mov	r0, #0x0
	str	r0, [r1]
	bl	sub_804F238
	bl	sub_804F2A8
.L197:
	mov	r1, r8
	ldr	r0, [r1]
.L217:
	mov	r2, #0xb4
	lsl	r2, r2, #0x1
	add	r0, r0, r2
	bl	sub_8051414
	b	.L147
.L242:
	.align	2, 0
.L241:
	.word	gUnknown_082162F8
	.word	gUnknown_08216300
	.word	0x400000c
	.word	0x4882
.L198:
	bl	sub_8051B8C
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L199	@cond_branch
	ldr	r0, .L243
	ldr	r1, [r0]
	mov	r3, #0x98
	lsl	r3, r3, #0x1
	add	r2, r1, r3
	mov	r0, #0x0
	str	r0, [r2]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
.L199:
	ldr	r0, .L243
	ldr	r0, [r0]
	mov	r4, #0xb4
	lsl	r4, r4, #0x1
	add	r0, r0, r4
	bl	sub_8051414
	b	.L147
.L244:
	.align	2, 0
.L243:
	.word	gBerryBlenderData
.L200:
	ldr	r0, .L245
	mov	r2, #0x10
	neg	r2, r2
	mov	r1, #0x78
	mov	r3, #0x3
	bl	CreateSprite
	b	.L215
.L246:
	.align	2, 0
.L245:
	.word	sSpriteTemplate_8216548
.L201:
	mov	r0, r8
	b	.L218
.L202:
	bl	sub_80084A4
	b	.L215
.L203:
	bl	sub_8007ECC
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L147	@cond_branch
	bl	sub_8007E24
	b	.L215
.L205:
	mov	r1, r8
	ldr	r3, [r1]
	add	r2, r3, #0
	add	r2, r2, #0x56
	mov	r1, #0x0
	mov	r0, #0x80
	strh	r0, [r2]
	mov	r2, #0x96
	lsl	r2, r2, #0x1
	add	r0, r3, r2
	str	r1, [r0]
	ldr	r0, .L247
	bl	SetMainCallback2
	bl	GetCurrentMapMusic
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r4, .L247+0x4
	cmp	r0, r4
	beq	.L206	@cond_branch
	bl	GetCurrentMapMusic
	mov	r3, r8
	ldr	r1, [r3]
	mov	r2, #0xbc
	lsl	r2, r2, #0x1
	add	r1, r1, r2
	strh	r0, [r1]
.L206:
	add	r0, r4, #0
	bl	PlayBGM
	b	.L147
.L248:
	.align	2, 0
.L247:
	.word	sub_80501FC
	.word	0x193
.L207:
	mov	r0, #0x0
	mov	r1, #0xd
	mov	r2, #0x1d
	mov	r3, #0x13
	bl	MenuDrawTextWindow
	ldr	r0, .L249
	mov	r1, #0x1
	mov	r2, #0xf
	bl	MenuPrintMessage
	b	.L215
.L250:
	.align	2, 0
.L249:
	.word	gOtherText_LinkNotFound
.L208:
	bl	MenuUpdateWindowText
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L147	@cond_branch
.L215:
	ldr	r0, .L251
.L218:
	ldr	r1, [r0]
.L216:
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L147
.L252:
	.align	2, 0
.L251:
	.word	gBerryBlenderData
.L210:
	ldr	r0, .L253
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L147	@cond_branch
	ldr	r0, .L253+0x4
	bl	SetMainCallback2
.L147:
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	UpdatePaletteFade
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L254:
	.align	2, 0
.L253:
	.word	gPaletteFade
	.word	c2_exit_to_overworld_1_continue_scripts_restart_music
.Lfe14:
	.size	 sub_804E9F8,.Lfe14-sub_804E9F8
	.align	2, 0
	.type	 sub_804F0F4,function
	.thumb_func
sub_804F0F4:
	push	{r4, lr}
	mov	r1, #0x80
	lsl	r1, r1, #0x13
	mov	r0, #0x0
	strh	r0, [r1]
	bl	ResetSpriteData
	bl	FreeAllSpritePalettes
	bl	ResetTasks
	ldr	r0, .L256
	bl	SetVBlankCallback
	ldr	r4, .L256+0x4
	add	r0, r4, #0
	bl	SetUpWindowConfig
	add	r0, r4, #0
	bl	InitMenuWindow
	ldr	r1, .L256+0x8
	ldr	r2, .L256+0xc
	add	r0, r2, #0
	strh	r0, [r1]
	ldr	r0, .L256+0x10
	ldr	r2, [r0]
	add	r0, r2, #0
	add	r0, r0, #0x4e
	mov	r1, #0x0
	strh	r1, [r0]
	add	r0, r0, #0x8
	strh	r1, [r0]
	sub	r0, r0, #0x2
	strh	r1, [r0]
	add	r0, r0, #0x6
	strh	r1, [r0]
	mov	r3, #0xa2
	lsl	r3, r3, #0x1
	add	r0, r2, r3
	strh	r1, [r0]
	add	r3, r3, #0x2
	add	r0, r2, r3
	strh	r1, [r0]
	ldrb	r0, [r2]
	add	r0, r0, #0x1
	strb	r0, [r2]
	pop	{r4}
	pop	{r0}
	bx	r0
.L257:
	.align	2, 0
.L256:
	.word	VBlankCB0_BerryBlender
	.word	gWindowConfig_81E6F68
	.word	gLinkType
	.word	0x4422
	.word	gBerryBlenderData
.Lfe15:
	.size	 sub_804F0F4,.Lfe15-sub_804F0F4
	.align	2, 0
	.type	 sub_804F16C,function
	.thumb_func
sub_804F16C:
	push	{lr}
	lsl	r0, r0, #0x10
	lsl	r1, r1, #0x18
	lsr	r0, r0, #0x18
	add	r2, r0, #0
	add	r2, r2, #0x18
	ldr	r0, .L264
	ldr	r0, [r0]
	lsr	r1, r1, #0x17
	add	r0, r0, #0xa2
	add	r0, r0, r1
	ldrb	r0, [r0]
	ldr	r1, .L264+0x4
	add	r0, r0, r1
	ldrb	r1, [r0]
	cmp	r2, r1
	bcc	.L259	@cond_branch
	add	r0, r1, #0
	add	r0, r0, #0x30
	cmp	r2, r0
	bcs	.L259	@cond_branch
	sub	r0, r0, #0x1c
	cmp	r2, r0
	bcc	.L260	@cond_branch
	add	r0, r0, #0x8
	cmp	r2, r0
	bcs	.L260	@cond_branch
	mov	r0, #0x2
	b	.L263
.L265:
	.align	2, 0
.L264:
	.word	gBerryBlenderData
	.word	gUnknown_08216303
.L260:
	mov	r0, #0x1
	b	.L263
.L259:
	mov	r0, #0x0
.L263:
	pop	{r1}
	bx	r1
.Lfe16:
	.size	 sub_804F16C,.Lfe16-sub_804F16C
	.align	2, 0
	.type	 sub_804F1BC,function
	.thumb_func
sub_804F1BC:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r4, #0x0
	cmp	r0, #0xaf
	bne	.L267	@cond_branch
	mov	r3, #0x0
	sub	r5, r1, #0x1
	add	r2, r2, #0x9
.L271:
	add	r0, r2, r4
	add	r1, r2, r3
	ldrb	r0, [r0]
	ldrb	r1, [r1]
	cmp	r0, r1
	bls	.L270	@cond_branch
	add	r4, r3, #0
.L270:
	add	r0, r3, #0x1
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	cmp	r3, #0x4
	bls	.L271	@cond_branch
	add	r0, r4, #0x5
	b	.L281
.L267:
	sub	r0, r0, #0x85
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	sub	r5, r1, #0x1
	cmp	r4, #0x4
	bls	.L274	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x5
	bl	__umodsi3
	add	r0, r0, #0x5
.L281:
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
.L274:
	mov	r3, #0x0
	cmp	r3, r5
	bge	.L277	@cond_branch
	ldr	r7, .L282
	lsl	r0, r4, #0x1
	add	r6, r0, r4
.L279:
	add	r4, r3, #0x1
	lsl	r0, r4, #0x18
	lsr	r0, r0, #0x18
	add	r1, r3, r6
	add	r1, r1, r7
	ldrb	r1, [r1]
	add	r1, r1, #0x85
	bl	Blender_SetBankBerryData
	lsl	r4, r4, #0x10
	lsr	r3, r4, #0x10
	cmp	r3, r5
	blt	.L279	@cond_branch
.L277:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L283:
	.align	2, 0
.L282:
	.word	gUnknown_082165BC
.Lfe17:
	.size	 sub_804F1BC,.Lfe17-sub_804F1BC
	.align	2, 0
	.type	 sub_804F238,function
	.thumb_func
sub_804F238:
	push	{r4, r5, r6, r7, lr}
	mov	r4, #0x0
	ldr	r7, .L301
	mov	r6, #0xff
	ldr	r5, .L301+0x4
.L288:
	ldr	r3, [r7]
	lsl	r2, r4, #0x1
	add	r0, r3, #0
	add	r0, r0, #0xa2
	add	r0, r0, r2
	strh	r6, [r0]
	add	r1, r3, #0
	add	r1, r1, #0x9a
	add	r1, r1, r2
	add	r0, r3, #0
	add	r0, r0, #0x88
	ldrb	r0, [r0]
	sub	r0, r0, #0x2
	lsl	r0, r0, #0x2
	add	r0, r4, r0
	add	r0, r0, r5
	ldrb	r0, [r0]
	strh	r0, [r1]
	add	r4, r4, #0x1
	cmp	r4, #0x3
	ble	.L288	@cond_branch
	mov	r3, #0x0
	ldr	r7, .L301
.L293:
	mov	r4, #0x0
	add	r6, r3, #0x1
	lsl	r5, r3, #0x1
.L297:
	ldr	r2, [r7]
	lsl	r0, r4, #0x1
	add	r1, r2, #0
	add	r1, r1, #0x9a
	add	r1, r1, r0
	ldrh	r0, [r1]
	cmp	r0, r3
	bne	.L296	@cond_branch
	add	r0, r2, #0
	add	r0, r0, #0xa2
	add	r0, r0, r5
	strh	r4, [r0]
.L296:
	add	r4, r4, #0x1
	cmp	r4, #0x3
	ble	.L297	@cond_branch
	add	r3, r6, #0
	cmp	r3, #0x3
	ble	.L293	@cond_branch
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L302:
	.align	2, 0
.L301:
	.word	gBerryBlenderData
	.word	gUnknown_082162EC
.Lfe18:
	.size	 sub_804F238,.Lfe18-sub_804F238
	.align	2, 0
	.type	 sub_804F2A8,function
	.thumb_func
sub_804F2A8:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	mov	r6, #0x0
	ldr	r7, .L311
	ldr	r0, .L311+0x4
	mov	r8, r0
.L307:
	ldr	r2, [r7]
	lsl	r4, r6, #0x1
	add	r0, r2, #0
	add	r0, r0, #0x9a
	add	r3, r0, r4
	ldrh	r0, [r3]
	cmp	r0, #0xff
	beq	.L306	@cond_branch
	ldr	r5, .L311+0x8
	add	r1, r2, #0
	add	r1, r1, #0x5c
	ldrh	r3, [r3]
	add	r1, r1, r3
	add	r0, r2, #0
	add	r0, r0, #0x60
	add	r0, r0, r6
	ldrb	r0, [r0]
	strb	r0, [r1]
	ldr	r0, [r7]
	add	r1, r0, #0
	add	r1, r1, #0x9a
	add	r1, r1, r4
	add	r0, r0, #0x5c
	ldrh	r1, [r1]
	add	r0, r0, r1
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L311+0xc
	add	r0, r0, r1
	lsl	r1, r6, #0x18
	lsr	r1, r1, #0x18
	bl	StartSpriteAnim
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	ldr	r1, [r7]
	add	r1, r1, #0x9a
	add	r1, r1, r4
	lsr	r0, r0, #0x18
	ldrh	r1, [r1]
	cmp	r0, r1
	bne	.L309	@cond_branch
	add	r0, r5, #0
	ldr	r1, .L311+0x10
	bl	StringCopy
	add	r5, r0, #0
.L309:
	ldr	r0, [r7]
	add	r0, r0, #0x9a
	add	r0, r0, r4
	ldrh	r0, [r0]
	lsl	r1, r0, #0x3
	sub	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L311+0x14
	add	r1, r1, r0
	add	r0, r5, #0
	bl	StringCopy
	mov	r0, r8
	ldrb	r1, [r0]
	lsl	r1, r1, #0x3
	add	r1, r1, #0x1
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldrb	r2, [r0, #0x1]
	lsl	r2, r2, #0x3
	ldr	r0, .L311+0x8
	mov	r3, #0x1
	bl	MenuPrint_PixelCoords
.L306:
	mov	r0, #0x2
	add	r8, r8, r0
	add	r6, r6, #0x1
	cmp	r6, #0x3
	ble	.L307	@cond_branch
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L312:
	.align	2, 0
.L311:
	.word	gBerryBlenderData
	.word	gUnknown_082162D4
	.word	gStringVar1
	.word	gSprites
	.word	sRedColorString
	.word	gLinkPlayers+0x8
.Lfe19:
	.size	 sub_804F2A8,.Lfe19-sub_804F2A8
	.align	2, 0
	.type	 sub_804F378,function
	.thumb_func
sub_804F378:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #0xfffffffc
	ldr	r1, .L372
	ldr	r0, [r1]
	ldrb	r0, [r0]
	mov	r8, r1
	cmp	r0, #0x15
	bls	.LCB2596
	b	.L314	@long jump
.LCB2596:
	lsl	r0, r0, #0x2
	ldr	r1, .L372+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L373:
	.align	2, 0
.L372:
	.word	gBerryBlenderData
	.word	.L366
	.align	2, 0
	.align	2, 0
.L366:
	.word	.L315
	.word	.L326
	.word	.L328
	.word	.L334
	.word	.L335
	.word	.L314
	.word	.L314
	.word	.L314
	.word	.L338
	.word	.L314
	.word	.L314
	.word	.L339
	.word	.L346
	.word	.L350
	.word	.L351
	.word	.L353
	.word	.L355
	.word	.L314
	.word	.L356
	.word	.L357
	.word	.L358
	.word	.L359
.L315:
	bl	sub_804F0F4
	ldr	r4, .L374
	ldrh	r1, [r4]
	mov	r0, #0x0
	bl	Blender_SetBankBerryData
	ldr	r5, .L374+0x4
	ldr	r0, [r5]
	mov	r6, #0xbe
	lsl	r6, r6, #0x1
	add	r0, r0, r6
	ldrh	r1, [r4]
	bl	Blender_CopyBerryData
	ldrh	r0, [r4]
	ldr	r2, [r5]
	add	r1, r2, #0
	add	r1, r1, #0x88
	ldrb	r1, [r1]
	add	r2, r2, r6
	bl	sub_804F1BC
	mov	r4, #0x0
	mov	r6, #0x0
	mov	r8, r5
	mov	r7, #0xa6
	lsl	r7, r7, #0x1
.L319:
	ldr	r0, [r5]
	lsl	r1, r4, #0x1
	add	r0, r0, #0x70
	add	r0, r0, r1
	strh	r6, [r0]
	add	r3, r4, #0x1
	add	r1, r1, r4
	lsl	r1, r1, #0x1
	mov	r2, #0x2
.L323:
	ldr	r0, [r5]
	add	r0, r0, r7
	add	r0, r0, r1
	strh	r6, [r0]
	add	r1, r1, #0x2
	sub	r2, r2, #0x1
	cmp	r2, #0
	bge	.L323	@cond_branch
	add	r4, r3, #0
	cmp	r4, #0x3
	ble	.L319	@cond_branch
	mov	r0, r8
	ldr	r3, [r0]
	add	r1, r3, #0
	add	r1, r1, #0x7c
	mov	r2, #0x0
	mov	r0, #0x0
	strh	r0, [r1]
	strb	r2, [r3, #0x1]
	b	.L314
.L375:
	.align	2, 0
.L374:
	.word	gScriptItemId
	.word	gBerryBlenderData
.L326:
	bl	sub_804E2EC
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB2711
	b	.L314	@long jump
.LCB2711:
	ldr	r0, .L376
	ldr	r1, [r0]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	bl	sub_8051474
	b	.L314
.L377:
	.align	2, 0
.L376:
	.word	gBerryBlenderData
.L328:
	mov	r4, #0x0
	ldr	r5, .L378
	ldr	r6, .L378+0x4
.L332:
	ldrb	r1, [r5]
	ldrb	r2, [r5, #0x1]
	ldr	r0, .L378+0x8
	mov	r3, #0x1
	bl	CreateSprite
	ldr	r1, [r6]
	add	r1, r1, #0x60
	add	r1, r1, r4
	strb	r0, [r1]
	ldr	r0, [r6]
	add	r0, r0, #0x60
	add	r0, r0, r4
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L378+0xc
	add	r0, r0, r1
	add	r1, r4, #0
	add	r1, r1, #0x8
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	bl	StartSpriteAnim
	add	r5, r5, #0x2
	add	r4, r4, #0x1
	cmp	r4, #0x3
	ble	.L332	@cond_branch
	ldr	r0, .L378+0x4
	ldr	r1, [r0]
	b	.L369
.L379:
	.align	2, 0
.L378:
	.word	sBlenderSyncArrowsPos
	.word	gBerryBlenderData
	.word	sBlenderSyncArrow_SpriteTemplate
	.word	gSprites
.L334:
	mov	r0, #0x1
	neg	r0, r0
	mov	r4, #0x0
	str	r4, [sp]
	mov	r1, #0x0
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	ldr	r2, .L380
	ldr	r1, [r2]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	ldr	r0, [r2]
	mov	r1, #0x98
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	str	r4, [r0]
	b	.L314
.L381:
	.align	2, 0
.L380:
	.word	gBerryBlenderData
.L335:
	mov	r2, r8
	ldr	r1, [r2]
	mov	r3, #0x98
	lsl	r3, r3, #0x1
	add	r1, r1, r3
	ldr	r0, [r1]
	add	r0, r0, #0x1
	str	r0, [r1]
	cmp	r0, #0x2
	bne	.L336	@cond_branch
	bl	sub_804E4FC
.L336:
	ldr	r0, .L382
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.LCB2838
	b	.L314	@long jump
.LCB2838:
	mov	r5, r8
	ldr	r1, [r5]
	mov	r0, #0x8
	strb	r0, [r1]
	b	.L314
.L383:
	.align	2, 0
.L382:
	.word	gPaletteFade
.L338:
	mov	r0, r8
	ldr	r1, [r0]
	mov	r2, #0x0
	mov	r0, #0xb
	strb	r0, [r1]
	mov	r1, r8
	ldr	r0, [r1]
	mov	r3, #0x9e
	lsl	r3, r3, #0x1
	add	r0, r0, r3
	strb	r2, [r0]
	b	.L314
.L368:
	lsl	r1, r1, #0x1
	add	r0, r3, #0
	add	r0, r0, #0x80
	add	r0, r0, r1
	ldrh	r0, [r0]
	lsl	r1, r4, #0x18
	lsr	r1, r1, #0x18
	bl	sub_804E7C0
	b	.L341
.L339:
	mov	r4, #0x0
	ldr	r2, .L384
	ldr	r0, .L384+0x4
	ldr	r3, [r0]
	add	r0, r3, #0
	add	r0, r0, #0x88
	ldrb	r0, [r0]
	sub	r0, r0, #0x2
	lsl	r0, r0, #0x2
	mov	r5, #0x9e
	lsl	r5, r5, #0x1
	add	r1, r3, r5
	ldrb	r1, [r1]
	add	r0, r0, r2
.L343:
	ldrb	r2, [r0]
	cmp	r1, r2
	beq	.L368	@cond_branch
	add	r0, r0, #0x1
	add	r4, r4, #0x1
	cmp	r4, #0x3
	ble	.L343	@cond_branch
.L341:
	ldr	r3, .L384+0x4
	ldr	r1, [r3]
	mov	r5, #0x98
	lsl	r5, r5, #0x1
	add	r2, r1, r5
	mov	r0, #0x0
	str	r0, [r2]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	ldr	r1, [r3]
	mov	r0, #0x9e
	lsl	r0, r0, #0x1
	add	r1, r1, r0
	b	.L369
.L385:
	.align	2, 0
.L384:
	.word	gUnknown_082162EC
	.word	gBerryBlenderData
.L346:
	mov	r1, r8
	ldr	r3, [r1]
	mov	r2, #0x98
	lsl	r2, r2, #0x1
	add	r1, r3, r2
	ldr	r0, [r1]
	add	r0, r0, #0x1
	str	r0, [r1]
	cmp	r0, #0x3c
	bgt	.LCB2952
	b	.L314	@long jump
.LCB2952:
	mov	r5, #0x9e
	lsl	r5, r5, #0x1
	add	r0, r3, r5
	add	r4, r3, #0
	add	r4, r4, #0x88
	ldrb	r0, [r0]
	ldrb	r1, [r4]
	cmp	r0, r1
	bcc	.L348	@cond_branch
	ldr	r2, .L386
	ldr	r1, .L386+0x4
	ldrb	r0, [r4]
	sub	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r0, r0, r2
	ldr	r2, .L386+0x8
	add	r1, r2, #0
	ldrh	r0, [r0]
	add	r1, r1, r0
	add	r0, r3, #0
	add	r0, r0, #0x54
	strh	r1, [r0]
	ldrb	r0, [r3]
	add	r0, r0, #0x1
	b	.L370
.L387:
	.align	2, 0
.L386:
	.word	gUnknown_082162F8
	.word	gUnknown_08216300
	.word	0xffffa800
.L348:
	ldrb	r0, [r3]
	sub	r0, r0, #0x1
.L370:
	strb	r0, [r3]
	mov	r3, r8
	ldr	r0, [r3]
	mov	r5, #0x98
	lsl	r5, r5, #0x1
	add	r0, r0, r5
	mov	r1, #0x0
	str	r1, [r0]
	b	.L314
.L350:
	mov	r1, r8
	ldr	r0, [r1]
	ldrb	r1, [r0]
	add	r1, r1, #0x1
	strb	r1, [r0]
	bl	sub_804F238
	mov	r0, #0x2b
	bl	PlaySE
	mov	r2, r8
	ldr	r0, [r2]
	b	.L371
.L351:
	mov	r2, #0x80
	lsl	r2, r2, #0x13
	ldrh	r0, [r2]
	mov	r5, #0x80
	lsl	r5, r5, #0x3
	add	r1, r5, #0
	orr	r0, r0, r1
	strh	r0, [r2]
	mov	r0, r8
	ldr	r2, [r0]
	add	r1, r2, #0
	add	r1, r1, #0x54
	mov	r3, #0x80
	lsl	r3, r3, #0x2
	add	r0, r3, #0
	ldrh	r5, [r1]
	add	r0, r0, r5
	strh	r0, [r1]
	mov	r0, #0xa1
	lsl	r0, r0, #0x1
	add	r1, r2, r0
	ldrh	r0, [r1]
	add	r0, r0, #0x4
	strh	r0, [r1]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0xff
	bls	.L352	@cond_branch
	ldrb	r0, [r2]
	add	r0, r0, #0x1
	strb	r0, [r2]
	mov	r1, r8
	ldr	r3, [r1]
	mov	r2, #0xa1
	lsl	r2, r2, #0x1
	add	r1, r3, r2
	mov	r0, #0x80
	lsl	r0, r0, #0x1
	strh	r0, [r1]
	ldr	r2, .L388
	ldr	r1, .L388+0x4
	add	r0, r3, #0
	add	r0, r0, #0x88
	ldrb	r0, [r0]
	sub	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r0, r0, r2
	ldrh	r1, [r0]
	add	r0, r3, #0
	add	r0, r0, #0x54
	strh	r1, [r0]
	ldr	r1, .L388+0x8
	ldr	r5, .L388+0xc
	add	r0, r5, #0
	strh	r0, [r1]
	mov	r0, #0x98
	lsl	r0, r0, #0x1
	add	r1, r3, r0
	mov	r0, #0x0
	str	r0, [r1]
	mov	r0, #0x34
	bl	PlaySE
	bl	sub_804F2A8
.L352:
	mov	r1, r8
	ldr	r0, [r1]
	mov	r2, #0xb4
	lsl	r2, r2, #0x1
	add	r0, r0, r2
	bl	sub_8051414
	b	.L314
.L389:
	.align	2, 0
.L388:
	.word	gUnknown_082162F8
	.word	gUnknown_08216300
	.word	0x400000c
	.word	0x4882
.L353:
	bl	sub_8051B8C
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L354	@cond_branch
	ldr	r0, .L390
	ldr	r1, [r0]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
.L354:
	ldr	r0, .L390
	ldr	r0, [r0]
.L371:
	mov	r3, #0xb4
	lsl	r3, r3, #0x1
	add	r0, r0, r3
	bl	sub_8051414
	b	.L314
.L391:
	.align	2, 0
.L390:
	.word	gBerryBlenderData
.L355:
	ldr	r0, .L392
	mov	r2, #0x10
	neg	r2, r2
	mov	r1, #0x78
	mov	r3, #0x3
	bl	CreateSprite
	ldr	r0, .L392+0x4
	ldr	r1, [r0]
	b	.L369
.L393:
	.align	2, 0
.L392:
	.word	sSpriteTemplate_8216548
	.word	gBerryBlenderData
.L356:
	mov	r5, r8
	ldr	r1, [r5]
	b	.L369
.L357:
	mov	r0, r8
	ldr	r1, [r0]
	b	.L369
.L358:
	mov	r2, r8
	ldr	r1, [r2]
.L369:
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L314
.L359:
	bl	sub_804F81C
	ldr	r3, .L394
	ldr	r4, [r3]
	add	r5, r4, #0
	add	r5, r5, #0x56
	mov	r2, #0x0
	mov	r1, #0x0
	mov	r0, #0x80
	strh	r0, [r5]
	mov	r5, #0x96
	lsl	r5, r5, #0x1
	add	r0, r4, r5
	str	r1, [r0]
	ldr	r1, .L394+0x4
	add	r0, r4, r1
	strb	r2, [r0]
	ldr	r0, [r3]
	add	r0, r0, #0x7e
	strb	r2, [r0]
	ldr	r0, .L394+0x8
	bl	SetMainCallback2
	mov	r4, #0x0
	ldr	r0, .L394+0xc
	ldrh	r0, [r0]
	cmp	r4, r0
	bge	.L361	@cond_branch
	mov	r5, #0xa0
	lsl	r5, r5, #0x14
	ldr	r6, .L394+0x10
.L363:
	ldmia	r6!, {r0}
	lsr	r1, r5, #0x18
	bl	CreateTask
	ldr	r1, .L394
	ldr	r1, [r1]
	mov	r2, #0xa4
	lsl	r2, r2, #0x1
	add	r1, r1, r2
	add	r1, r1, r4
	strb	r0, [r1]
	mov	r3, #0x80
	lsl	r3, r3, #0x11
	add	r5, r5, r3
	add	r4, r4, #0x1
	ldr	r0, .L394+0xc
	ldrh	r0, [r0]
	cmp	r4, r0
	blt	.L363	@cond_branch
.L361:
	bl	GetCurrentMapMusic
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r4, .L394+0x14
	cmp	r0, r4
	beq	.L365	@cond_branch
	bl	GetCurrentMapMusic
	ldr	r1, .L394
	ldr	r1, [r1]
	mov	r5, #0xbc
	lsl	r5, r5, #0x1
	add	r1, r1, r5
	strh	r0, [r1]
.L365:
	add	r0, r4, #0
	bl	PlayBGM
	mov	r0, #0x35
	bl	PlaySE
	bl	Blender_ControlHitPitch
.L314:
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	UpdatePaletteFade
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L395:
	.align	2, 0
.L394:
	.word	gBerryBlenderData
	.word	0x14b
	.word	sub_80501FC
	.word	gSpecialVar_0x8004
	.word	gUnknown_08216308
	.word	0x193
.Lfe20:
	.size	 sub_804F378,.Lfe20-sub_804F378
	.align	2, 0
	.type	 sub_804F81C,function
	.thumb_func
sub_804F81C:
	push	{lr}
	ldr	r3, .L402
	mov	r0, #0x0
	ldr	r1, .L402+0x4
	mov	r2, #0x3
.L400:
	strh	r0, [r3]
	strh	r0, [r3, #0x4]
	strh	r0, [r1]
	strh	r0, [r1, #0x10]
	add	r1, r1, #0x2
	sub	r2, r2, #0x1
	cmp	r2, #0
	bge	.L400	@cond_branch
	pop	{r0}
	bx	r0
.L403:
	.align	2, 0
.L402:
	.word	gSendCmd
	.word	gRecvCmds
.Lfe21:
	.size	 sub_804F81C,.Lfe21-sub_804F81C
	.align	2, 0
	.type	 sub_804F844,function
	.thumb_func
sub_804F844:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	ldr	r1, .L406
	lsl	r0, r3, #0x2
	add	r0, r0, r3
	lsl	r0, r0, #0x3
	add	r2, r0, r1
	ldrh	r0, [r2, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r2, #0x8]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	mov	r4, #0xa
	ldrsh	r1, [r2, r4]
	cmp	r0, r1
	ble	.L405	@cond_branch
	ldr	r0, .L406+0x4
	mov	r4, #0xc
	ldrsh	r1, [r2, r4]
	lsl	r1, r1, #0x1
	add	r0, r0, #0x10
	add	r1, r1, r0
	ldr	r0, .L406+0x8
	strh	r0, [r1]
	add	r0, r3, #0
	bl	DestroyTask
.L405:
	pop	{r4}
	pop	{r0}
	bx	r0
.L407:
	.align	2, 0
.L406:
	.word	gTasks
	.word	gRecvCmds
	.word	0x2345
.Lfe22:
	.size	 sub_804F844,.Lfe22-sub_804F844
	.align	2, 0
	.type	 sub_804F890,function
	.thumb_func
sub_804F890:
	push	{r4, r5, lr}
	add	r5, r0, #0
	add	r4, r1, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L409
	mov	r1, #0x50
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L409+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	strh	r4, [r1, #0xa]
	strh	r5, [r1, #0xc]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L410:
	.align	2, 0
.L409:
	.word	sub_804F844
	.word	gTasks
.Lfe23:
	.size	 sub_804F890,.Lfe23-sub_804F890
	.align	2, 0
	.type	 sub_804F8C8,function
	.thumb_func
sub_804F8C8:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r4, .L437
	ldr	r0, [r4]
	add	r0, r0, #0x54
	ldrh	r0, [r0]
	mov	r1, #0x1
	bl	sub_804F16C
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x2
	beq	.LCB3460
	b	.L412	@long jump
.LCB3460:
	ldr	r2, .L437+0x4
	lsl	r1, r5, #0x2
	add	r0, r1, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r2
	mov	r2, #0x8
	ldrsh	r0, [r0, r2]
	add	r6, r1, #0
	cmp	r0, #0
	beq	.LCB3472
	b	.L432	@long jump
.LCB3472:
	ldr	r0, [r4]
	ldr	r1, .L437+0x8
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L414	@cond_branch
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r1, .L437+0xc
	bl	__udivsi3
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	add	r3, r1, #0
	ldr	r0, [r4]
	add	r0, r0, #0x56
	mov	r4, #0x0
	ldrsh	r2, [r0, r4]
	ldr	r0, .L437+0x10
	cmp	r2, r0
	bgt	.L415	@cond_branch
	cmp	r1, #0x4b
	bls	.L416	@cond_branch
	ldr	r1, .L437+0x14
	ldr	r0, .L437+0x18
	b	.L433
.L438:
	.align	2, 0
.L437:
	.word	gBerryBlenderData
	.word	gTasks
	.word	0x14b
	.word	0x28f
	.word	0x1f3
	.word	gRecvCmds
	.word	0x4523
.L416:
	ldr	r1, .L439
	ldr	r0, .L439+0x4
.L433:
	strh	r0, [r1, #0x12]
	ldr	r0, .L439+0x4
	b	.L434
.L440:
	.align	2, 0
.L439:
	.word	gRecvCmds
	.word	0x5432
.L415:
	ldr	r0, .L441
	cmp	r2, r0
	bgt	.L419	@cond_branch
	cmp	r1, #0x50
	bhi	.L414	@cond_branch
	add	r0, r1, #0
	sub	r0, r0, #0x15
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3b
	bhi	.L422	@cond_branch
	ldr	r1, .L441+0x4
	ldr	r0, .L441+0x8
	b	.L434
.L442:
	.align	2, 0
.L441:
	.word	0x5db
	.word	gRecvCmds
	.word	0x5432
.L422:
	cmp	r1, #0x9
	bhi	.L431	@cond_branch
	b	.L435
.L419:
	cmp	r1, #0x5a
	bhi	.L426	@cond_branch
	add	r0, r1, #0
	sub	r0, r0, #0x47
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x13
	bhi	.L427	@cond_branch
	ldr	r1, .L443
	ldr	r0, .L443+0x4
	b	.L434
.L444:
	.align	2, 0
.L443:
	.word	gRecvCmds
	.word	0x5432
.L427:
	cmp	r3, #0x1d
	bhi	.L431	@cond_branch
.L435:
	mov	r0, #0x1
	mov	r1, #0x5
	bl	sub_804F890
	b	.L431
.L426:
.L414:
	ldr	r1, .L445
	ldr	r0, .L445+0x4
.L434:
	strh	r0, [r1, #0x12]
.L431:
	ldr	r0, .L445+0x8
	add	r1, r6, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r0, #0x1
	b	.L436
.L446:
	.align	2, 0
.L445:
	.word	gRecvCmds
	.word	0x4523
	.word	gTasks
.L412:
	ldr	r0, .L447
	lsl	r1, r5, #0x2
	add	r1, r1, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r0, #0x0
.L436:
	strh	r0, [r1, #0x8]
.L432:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L448:
	.align	2, 0
.L447:
	.word	gTasks
.Lfe24:
	.size	 sub_804F8C8,.Lfe24-sub_804F8C8
	.align	2, 0
	.type	 sub_804F9F4,function
	.thumb_func
sub_804F9F4:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r6, .L463
	ldr	r3, [r6]
	add	r0, r3, #0
	add	r0, r0, #0x54
	ldrh	r0, [r0]
	mov	r1, #0xc0
	lsl	r1, r1, #0x5
	add	r0, r0, r1
	ldr	r1, .L463+0x4
	and	r0, r0, r1
	add	r1, r3, #0
	add	r1, r1, #0xa6
	ldrb	r1, [r1]
	lsr	r2, r0, #0x8
	ldr	r0, .L463+0x8
	add	r1, r1, r0
	ldrb	r1, [r1]
	add	r0, r1, #0
	add	r0, r0, #0x14
	cmp	r2, r0
	bls	.L450	@cond_branch
	add	r0, r0, #0x14
	cmp	r2, r0
	bcs	.L450	@cond_branch
	ldr	r2, .L463+0xc
	lsl	r1, r4, #0x2
	add	r0, r1, r4
	lsl	r0, r0, #0x3
	add	r2, r0, r2
	mov	r5, #0x8
	ldrsh	r0, [r2, r5]
	add	r5, r1, #0
	cmp	r0, #0
	bne	.L461	@cond_branch
	ldr	r1, .L463+0x10
	add	r0, r3, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L452	@cond_branch
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r1, .L463+0x14
	bl	__udivsi3
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	add	r3, r2, #0
	ldr	r0, [r6]
	add	r0, r0, #0x56
	mov	r6, #0x0
	ldrsh	r1, [r0, r6]
	ldr	r0, .L463+0x18
	cmp	r1, r0
	bgt	.L453	@cond_branch
	cmp	r2, #0x42
	bls	.L454	@cond_branch
	ldr	r1, .L463+0x1c
	ldr	r0, .L463+0x20
	strh	r0, [r1, #0x14]
	b	.L456
.L464:
	.align	2, 0
.L463:
	.word	gBerryBlenderData
	.word	0xffff
	.word	gUnknown_08216303
	.word	gTasks
	.word	0x14b
	.word	0x28f
	.word	0x1f3
	.word	gRecvCmds
	.word	0x4523
.L454:
	ldr	r1, .L465
	ldr	r0, .L465+0x4
	strh	r0, [r1, #0x14]
	b	.L456
.L466:
	.align	2, 0
.L465:
	.word	gRecvCmds
	.word	0x5432
.L453:
	cmp	r2, #0x41
	bls	.L457	@cond_branch
	ldr	r1, .L467
	ldr	r0, .L467+0x4
	strh	r0, [r1, #0x14]
.L457:
	add	r0, r2, #0
	sub	r0, r0, #0x29
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x18
	bhi	.L458	@cond_branch
	ldr	r1, .L467
	ldr	r0, .L467+0x8
	strh	r0, [r1, #0x14]
.L458:
	cmp	r3, #0x9
	bhi	.L456	@cond_branch
	mov	r0, #0x2
	mov	r1, #0x5
	bl	sub_804F890
.L456:
	ldr	r0, .L467+0xc
	add	r1, r5, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r0, #0x1
	b	.L462
.L468:
	.align	2, 0
.L467:
	.word	gRecvCmds
	.word	0x4523
	.word	0x5432
	.word	gTasks
.L452:
	ldr	r0, .L469
	ldr	r1, .L469+0x4
	strh	r1, [r0, #0x14]
	mov	r0, #0x1
	strh	r0, [r2, #0x8]
	b	.L461
.L470:
	.align	2, 0
.L469:
	.word	gRecvCmds
	.word	0x4523
.L450:
	ldr	r0, .L471
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r0, #0x0
.L462:
	strh	r0, [r1, #0x8]
.L461:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L472:
	.align	2, 0
.L471:
	.word	gTasks
.Lfe25:
	.size	 sub_804F9F4,.Lfe25-sub_804F9F4
	.align	2, 0
	.type	 sub_804FB1C,function
	.thumb_func
sub_804FB1C:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r5, .L489
	ldr	r3, [r5]
	add	r0, r3, #0
	add	r0, r0, #0x54
	ldrh	r0, [r0]
	mov	r1, #0xc0
	lsl	r1, r1, #0x5
	add	r0, r0, r1
	ldr	r1, .L489+0x4
	and	r0, r0, r1
	add	r1, r3, #0
	add	r1, r1, #0xa8
	ldrb	r1, [r1]
	lsr	r2, r0, #0x8
	ldr	r0, .L489+0x8
	add	r1, r1, r0
	ldrb	r1, [r1]
	add	r0, r1, #0
	add	r0, r0, #0x14
	cmp	r2, r0
	bls	.L474	@cond_branch
	add	r0, r0, #0x14
	cmp	r2, r0
	bcs	.L474	@cond_branch
	ldr	r2, .L489+0xc
	lsl	r1, r4, #0x2
	add	r0, r1, r4
	lsl	r0, r0, #0x3
	add	r2, r0, r2
	mov	r6, #0x8
	ldrsh	r0, [r2, r6]
	add	r6, r1, #0
	cmp	r0, #0
	bne	.L486	@cond_branch
	ldr	r1, .L489+0x10
	add	r0, r3, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L476	@cond_branch
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r1, .L489+0x14
	bl	__udivsi3
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r0, [r5]
	add	r0, r0, #0x56
	mov	r3, #0x0
	ldrsh	r1, [r0, r3]
	ldr	r0, .L489+0x18
	cmp	r1, r0
	bgt	.L477	@cond_branch
	cmp	r2, #0x58
	bls	.L478	@cond_branch
	ldr	r1, .L489+0x1c
	ldr	r0, .L489+0x20
	strh	r0, [r1, #0x16]
	b	.L480
.L490:
	.align	2, 0
.L489:
	.word	gBerryBlenderData
	.word	0xffff
	.word	gUnknown_08216303
	.word	gTasks
	.word	0x14b
	.word	0x28f
	.word	0x1f3
	.word	gRecvCmds
	.word	0x4523
.L478:
	ldr	r1, .L491
	ldr	r0, .L491+0x4
	strh	r0, [r1, #0x16]
	b	.L480
.L492:
	.align	2, 0
.L491:
	.word	gRecvCmds
	.word	0x5432
.L477:
	cmp	r2, #0x3c
	bls	.L481	@cond_branch
	ldr	r1, .L493
	ldr	r0, .L493+0x4
	b	.L487
.L494:
	.align	2, 0
.L493:
	.word	gRecvCmds
	.word	0x4523
.L481:
	add	r0, r2, #0
	sub	r0, r0, #0x38
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x4
	bhi	.L482	@cond_branch
	ldr	r1, .L495
	ldr	r0, .L495+0x4
.L487:
	strh	r0, [r1, #0x16]
.L482:
	cmp	r2, #0x4
	bhi	.L480	@cond_branch
	mov	r0, #0x3
	mov	r1, #0x5
	bl	sub_804F890
.L480:
	ldr	r0, .L495+0x8
	add	r1, r6, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r0, #0x1
	b	.L488
.L496:
	.align	2, 0
.L495:
	.word	gRecvCmds
	.word	0x5432
	.word	gTasks
.L476:
	ldr	r0, .L497
	ldr	r1, .L497+0x4
	strh	r1, [r0, #0x16]
	mov	r0, #0x1
	strh	r0, [r2, #0x8]
	b	.L486
.L498:
	.align	2, 0
.L497:
	.word	gRecvCmds
	.word	0x4523
.L474:
	ldr	r0, .L499
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r0, #0x0
.L488:
	strh	r0, [r1, #0x8]
.L486:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L500:
	.align	2, 0
.L499:
	.word	gTasks
.Lfe26:
	.size	 sub_804FB1C,.Lfe26-sub_804FB1C
	.align	2, 0
	.type	 sub_804FC48,function
	.thumb_func
sub_804FC48:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x10
	lsr	r7, r0, #0x10
	mov	r8, r7
	lsl	r1, r1, #0x18
	ldr	r0, .L507
	ldr	r4, .L507+0x4
	lsr	r1, r1, #0x17
	add	r2, r1, r4
	ldrb	r6, [r2]
	ldr	r5, .L507+0x8
	add	r2, r1, r5
	mov	r3, #0x0
	ldrsb	r3, [r2, r3]
	lsl	r2, r3, #0x2
	add	r2, r2, r3
	lsl	r2, r2, #0x1
	sub	r6, r6, r2
	add	r4, r4, #0x1
	add	r4, r1, r4
	ldrb	r2, [r4]
	add	r5, r5, #0x1
	add	r1, r1, r5
	mov	r3, #0x0
	ldrsb	r3, [r1, r3]
	lsl	r1, r3, #0x2
	add	r1, r1, r3
	lsl	r1, r1, #0x1
	sub	r2, r2, r1
	add	r1, r6, #0
	mov	r3, #0x1
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	add	r2, r1, #0
	ldr	r0, .L507+0xc
	cmp	r7, r0
	bne	.L502	@cond_branch
	lsl	r4, r1, #0x4
	add	r4, r4, r1
	lsl	r4, r4, #0x2
	ldr	r5, .L507+0x10
	add	r0, r4, r5
	mov	r1, #0x2
	bl	StartSpriteAnim
	add	r5, r5, #0x1c
	add	r4, r4, r5
	ldr	r0, .L507+0x14
	str	r0, [r4]
	mov	r0, #0x28
	bl	PlaySE
	b	.L503
.L508:
	.align	2, 0
.L507:
	.word	sSpriteTemplate_821645C
	.word	sBlenderSyncArrowsPos
	.word	gUnknown_082162CC
	.word	0x4523
	.word	gSprites
	.word	sub_8051684
.L502:
	ldr	r0, .L509
	cmp	r7, r0
	bne	.L504	@cond_branch
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L509+0x4
	add	r0, r0, r1
	mov	r1, #0x0
	bl	StartSpriteAnim
	mov	r0, #0x1f
	bl	PlaySE
	b	.L503
.L510:
	.align	2, 0
.L509:
	.word	0x5432
	.word	gSprites
.L504:
	ldr	r0, .L511
	cmp	r8, r0
	bne	.L503	@cond_branch
	lsl	r0, r2, #0x4
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	ldr	r1, .L511+0x4
	add	r0, r0, r1
	mov	r1, #0x1
	bl	StartSpriteAnim
	mov	r0, #0x20
	bl	PlaySE
.L503:
	bl	sub_805156C
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L512:
	.align	2, 0
.L511:
	.word	0x2345
	.word	gSprites
.Lfe27:
	.size	 sub_804FC48,.Lfe27-sub_804FC48
	.align	2, 0
	.type	 sub_804FD30,function
	.thumb_func
sub_804FD30:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	add	r5, r4, #0
	bl	Blender_ControlHitPitch
	ldr	r0, .L526
	cmp	r4, r0
	beq	.L515	@cond_branch
	cmp	r4, r0
	bgt	.L524	@cond_branch
	ldr	r0, .L526+0x4
	cmp	r4, r0
	beq	.L520	@cond_branch
	b	.L514
.L527:
	.align	2, 0
.L526:
	.word	0x4523
	.word	0x2345
.L524:
	ldr	r0, .L528
	cmp	r5, r0
	beq	.L518	@cond_branch
	b	.L514
.L529:
	.align	2, 0
.L528:
	.word	0x5432
.L515:
	ldr	r7, .L530
	ldr	r4, [r7]
	add	r5, r4, #0
	add	r5, r5, #0x56
	ldrh	r6, [r5]
	mov	r0, #0x0
	ldrsh	r1, [r5, r0]
	ldr	r0, .L530+0x4
	cmp	r1, r0
	bgt	.L516	@cond_branch
	ldr	r1, .L530+0x8
	add	r0, r4, #0
	add	r0, r0, #0x88
	ldrb	r0, [r0]
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0xc0
	lsl	r0, r0, #0x1
	bl	__divsi3
	add	r0, r6, r0
	strh	r0, [r5]
	b	.L514
.L531:
	.align	2, 0
.L530:
	.word	gBerryBlenderData
	.word	0x5db
	.word	gUnknown_082165DA
.L516:
	ldr	r1, .L532
	add	r0, r4, #0
	add	r0, r0, #0x88
	ldrb	r0, [r0]
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0x80
	bl	__divsi3
	add	r0, r6, r0
	strh	r0, [r5]
	mov	r1, #0xa2
	lsl	r1, r1, #0x1
	add	r4, r4, r1
	mov	r1, #0x0
	ldrsh	r0, [r5, r1]
	mov	r1, #0x64
	bl	__divsi3
	add	r1, r0, #0
	sub	r1, r1, #0xa
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r4, #0
	bl	sub_8051AC8
	ldr	r0, [r7]
	mov	r1, #0xa3
	lsl	r1, r1, #0x1
	add	r4, r0, r1
	add	r0, r0, #0x56
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r1, #0x64
	bl	__divsi3
	add	r1, r0, #0
	sub	r1, r1, #0xa
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r4, #0
	bl	sub_8051AC8
	b	.L514
.L533:
	.align	2, 0
.L532:
	.word	gUnknown_082165DA
.L518:
	ldr	r0, .L534
	ldr	r2, [r0]
	add	r4, r2, #0
	add	r4, r4, #0x56
	ldrh	r5, [r4]
	mov	r0, #0x0
	ldrsh	r1, [r4, r0]
	ldr	r0, .L534+0x4
	cmp	r1, r0
	bgt	.L514	@cond_branch
	ldr	r1, .L534+0x8
	add	r0, r2, #0
	add	r0, r0, #0x88
	ldrb	r0, [r0]
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0x80
	lsl	r0, r0, #0x1
	bl	__divsi3
	add	r0, r5, r0
	b	.L525
.L535:
	.align	2, 0
.L534:
	.word	gBerryBlenderData
	.word	0x5db
	.word	gUnknown_082165DA
.L520:
	ldr	r0, .L536
	ldr	r0, [r0]
	add	r4, r0, #0
	add	r4, r4, #0x56
	ldr	r1, .L536+0x4
	add	r0, r0, #0x88
	ldrb	r0, [r0]
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0x80
	lsl	r0, r0, #0x1
	bl	__divsi3
	ldrh	r1, [r4]
	sub	r1, r1, r0
	strh	r1, [r4]
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	cmp	r1, #0x7f
	bgt	.L514	@cond_branch
	mov	r0, #0x80
.L525:
	strh	r0, [r4]
.L514:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L537:
	.align	2, 0
.L536:
	.word	gBerryBlenderData
	.word	gUnknown_082165DA
.Lfe28:
	.size	 sub_804FD30,.Lfe28-sub_804FD30
	.align	2, 0
	.type	 sub_804FE70,function
	.thumb_func
sub_804FE70:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #0xfffffffc
	ldr	r0, .L573
	ldrh	r0, [r0]
	cmp	r0, #0
	beq	.L539	@cond_branch
	ldr	r3, .L573+0x4
	ldrh	r0, [r3, #0x4]
	ldr	r2, .L573+0x8
	cmp	r0, #0
	beq	.L540	@cond_branch
	mov	r1, #0x0
	strh	r0, [r2, #0x10]
	ldr	r0, .L573+0xc
	strh	r0, [r2]
	strh	r1, [r3, #0x4]
.L540:
	ldr	r0, .L573+0x8
	ldr	r3, .L573+0xc
	add	r1, r2, #0x2
	add	r2, r0, #0
	add	r2, r2, #0x12
	mov	r6, #0x2
.L544:
	ldrh	r0, [r2]
	cmp	r0, #0
	beq	.L543	@cond_branch
	strh	r3, [r1]
.L543:
	add	r1, r1, #0x2
	add	r2, r2, #0x2
	sub	r6, r6, #0x1
	cmp	r6, #0
	bge	.L544	@cond_branch
.L539:
	mov	r6, #0x0
	ldr	r7, .L573+0x10
	add	r1, r7, #0
	ldr	r0, [r1]
	add	r0, r0, #0x88
	ldrb	r0, [r0]
	cmp	r6, r0
	blt	.LCB4515
	b	.L548	@long jump
.LCB4515:
	mov	r2, #0x0
	str	r2, [sp]
	mov	r9, r2
	ldr	r0, .L573+0x8
	add	r0, r0, #0x10
	mov	r8, r0
	ldr	r1, .L573+0x14
	mov	sl, r1
.L550:
	ldr	r2, [sp]
	ldr	r1, .L573+0x8
	add	r0, r2, r1
	ldrh	r1, [r0]
	ldr	r0, .L573+0xc
	cmp	r1, r0
	beq	.LCB4541
	b	.L549	@long jump
.LCB4541:
	ldr	r0, [r7]
	add	r0, r0, #0xa2
	add	r0, r0, r2
	ldrh	r5, [r0]
	mov	r2, r8
	ldrh	r4, [r2]
	ldr	r0, .L573+0x18
	cmp	r4, r0
	bne	.L552	@cond_branch
	bl	sub_804FD30
	ldr	r0, [r7]
	mov	r1, #0x9f
	lsl	r1, r1, #0x1
	add	r4, r0, r1
	add	r0, r0, #0x56
	mov	r2, #0x0
	ldrsh	r0, [r0, r2]
	mov	r1, #0x37
	bl	__divsi3
	ldrh	r1, [r4]
	add	r1, r1, r0
	strh	r1, [r4]
	lsl	r1, r1, #0x10
	ldr	r0, .L573+0x1c
	cmp	r1, r0
	bls	.L553	@cond_branch
	mov	r0, #0xfa
	lsl	r0, r0, #0x2
	strh	r0, [r4]
.L553:
	lsl	r1, r5, #0x18
	lsr	r1, r1, #0x18
	ldr	r0, .L573+0x18
	bl	sub_804FC48
	ldr	r1, [r7]
	mov	r0, #0xa6
	lsl	r0, r0, #0x1
	add	r1, r1, r0
	add	r1, r1, r9
	ldrh	r0, [r1]
	add	r0, r0, #0x1
	b	.L572
.L574:
	.align	2, 0
.L573:
	.word	gSpecialVar_0x8004
	.word	gSendCmd
	.word	gRecvCmds
	.word	0x4444
	.word	gBerryBlenderData
	.word	0x5432
	.word	0x4523
	.word	0x3e70000
.L552:
	cmp	r4, sl
	bne	.L555	@cond_branch
	mov	r0, sl
	bl	sub_804FD30
	ldr	r0, [r7]
	mov	r1, #0x9f
	lsl	r1, r1, #0x1
	add	r4, r0, r1
	add	r0, r0, #0x56
	mov	r2, #0x0
	ldrsh	r0, [r0, r2]
	mov	r1, #0x46
	bl	__divsi3
	ldrh	r1, [r4]
	add	r1, r1, r0
	strh	r1, [r4]
	lsl	r1, r5, #0x18
	lsr	r1, r1, #0x18
	mov	r0, sl
	bl	sub_804FC48
	ldr	r1, [r7]
	mov	r0, #0xa7
	lsl	r0, r0, #0x1
	add	r1, r1, r0
	add	r1, r1, r9
	ldrh	r0, [r1]
	add	r0, r0, #0x1
	b	.L572
.L555:
	ldr	r0, .L575
	cmp	r4, r0
	bne	.L571	@cond_branch
	lsl	r1, r5, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	sub_804FC48
	add	r0, r4, #0
	bl	sub_804FD30
	ldr	r0, [r7]
	mov	r1, #0xa8
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	mov	r2, r9
	add	r1, r0, r2
	ldrh	r2, [r1]
	ldr	r0, .L575+0x4
	cmp	r2, r0
	bhi	.L554	@cond_branch
	add	r0, r2, #0x1
.L572:
	strh	r0, [r1]
.L554:
	mov	r0, r8
	ldrh	r1, [r0]
	ldr	r0, .L575
	cmp	r1, r0
	beq	.L561	@cond_branch
.L571:
	mov	r1, r8
	ldrh	r0, [r1]
	ldr	r2, .L575+0x8
	cmp	r0, r2
	beq	.L561	@cond_branch
	cmp	r0, sl
	bne	.L549	@cond_branch
.L561:
	ldr	r0, .L575+0xc
	ldr	r0, [r0]
	add	r2, r0, #0
	add	r2, r2, #0x56
	mov	r0, #0x0
	ldrsh	r1, [r2, r0]
	ldr	r0, .L575+0x10
	cmp	r1, r0
	ble	.L562	@cond_branch
	add	r0, r1, #0
	ldr	r2, .L575+0x14
	add	r0, r0, r2
	mov	r1, #0x14
	bl	__divsi3
	add	r1, r0, #0
	mov	r0, #0x80
	lsl	r0, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	ldr	r0, .L575+0x18
	bl	m4aMPlayTempoControl
	b	.L549
.L576:
	.align	2, 0
.L575:
	.word	0x2345
	.word	0x3e6
	.word	0x4523
	.word	gBerryBlenderData
	.word	0x5dc
	.word	0xfffffd12
	.word	gMPlay_BGM
.L562:
	ldr	r0, .L577
	mov	r1, #0x80
	lsl	r1, r1, #0x1
	bl	m4aMPlayTempoControl
.L549:
	ldr	r1, [sp]
	add	r1, r1, #0x2
	str	r1, [sp]
	mov	r2, #0x6
	add	r9, r9, r2
	mov	r0, #0x2
	add	r8, r8, r0
	add	r6, r6, #0x1
	ldr	r7, .L577+0x4
	ldr	r0, [r7]
	add	r0, r0, #0x88
	ldrb	r0, [r0]
	cmp	r6, r0
	bge	.LCB4773
	b	.L550	@long jump
.LCB4773:
.L548:
	ldr	r0, .L577+0x8
	ldrh	r0, [r0]
	cmp	r0, #0
	beq	.L565	@cond_branch
	mov	r6, #0x0
	ldr	r3, .L577+0x4
	ldr	r0, [r3]
	add	r0, r0, #0x88
	ldrb	r0, [r0]
	cmp	r6, r0
	bge	.L565	@cond_branch
	mov	r2, #0x0
	ldr	r1, .L577+0xc
.L569:
	strh	r2, [r1]
	strh	r2, [r1, #0x10]
	add	r1, r1, #0x2
	add	r6, r6, #0x1
	ldr	r0, [r3]
	add	r0, r0, #0x88
	ldrb	r0, [r0]
	cmp	r6, r0
	blt	.L569	@cond_branch
.L565:
	add	sp, sp, #0x4
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L578:
	.align	2, 0
.L577:
	.word	gMPlay_BGM
	.word	gBerryBlenderData
	.word	gSpecialVar_0x8004
	.word	gRecvCmds
.Lfe29:
	.size	 sub_804FE70,.Lfe29-sub_804FE70
	.align	2, 0
	.type	 sub_80500A8,function
	.thumb_func
sub_80500A8:
	push	{r4, r5, r6, lr}
	mov	r6, #0x0
	ldr	r5, .L594
	ldr	r4, [r5]
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x17
	add	r4, r4, #0xa2
	add	r4, r4, r0
	ldrb	r3, [r4]
	ldr	r0, [r5]
	add	r0, r0, #0x6f
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L580	@cond_branch
	ldr	r0, .L594+0x4
	ldrb	r0, [r0, #0x13]
	cmp	r0, #0x2
	bne	.L581	@cond_branch
	ldr	r2, .L594+0x8
	ldrh	r1, [r2, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L583	@cond_branch
	ldrh	r0, [r2, #0x28]
	ldr	r1, .L594+0xc
	bic	r1, r1, r0
	neg	r0, r1
	orr	r0, r0, r1
	lsr	r6, r0, #0x1f
	b	.L583
.L595:
	.align	2, 0
.L594:
	.word	gBerryBlenderData
	.word	gSaveBlock2
	.word	gMain
	.word	0x201
.L581:
	ldr	r0, .L596
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L583	@cond_branch
	mov	r6, #0x1
.L583:
	cmp	r6, #0
	beq	.L580	@cond_branch
	ldr	r4, .L596+0x4
	ldr	r1, [r4]
	lsl	r2, r3, #0x1
	add	r0, r1, #0
	add	r0, r0, #0x9a
	add	r0, r0, r2
	add	r1, r1, #0x5c
	ldrh	r0, [r0]
	add	r1, r1, r0
	ldrb	r1, [r1]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L596+0x8
	add	r0, r0, r1
	add	r1, r3, #0x4
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	bl	StartSpriteAnim
	ldr	r0, [r4]
	add	r0, r0, #0x54
	ldrh	r4, [r0]
	bl	GetMultiplayerId
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	sub_804F16C
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x2
	bne	.L586	@cond_branch
	ldr	r1, .L596+0xc
	ldr	r0, .L596+0x10
	b	.L593
.L597:
	.align	2, 0
.L596:
	.word	gMain
	.word	gBerryBlenderData
	.word	gSprites
	.word	gSendCmd
	.word	0x4523
.L586:
	cmp	r0, #0x1
	bne	.L588	@cond_branch
	ldr	r1, .L598
	ldr	r0, .L598+0x4
	b	.L593
.L599:
	.align	2, 0
.L598:
	.word	gSendCmd
	.word	0x5432
.L588:
	ldr	r1, .L600
	ldr	r0, .L600+0x4
.L593:
	strh	r0, [r1, #0x4]
.L580:
	ldr	r2, .L600+0x8
	ldr	r1, [r2]
	add	r1, r1, #0x7e
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x5
	bls	.L590	@cond_branch
	ldr	r0, [r2]
	add	r1, r0, #0
	add	r1, r1, #0x56
	ldrh	r3, [r1]
	mov	r4, #0x0
	ldrsh	r0, [r1, r4]
	cmp	r0, #0x80
	ble	.L591	@cond_branch
	sub	r0, r3, #0x1
	strh	r0, [r1]
.L591:
	ldr	r0, [r2]
	add	r0, r0, #0x7e
	mov	r1, #0x0
	strb	r1, [r0]
.L590:
	ldr	r0, .L600+0xc
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L592	@cond_branch
	ldr	r0, .L600+0x10
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x80
	lsl	r0, r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L592	@cond_branch
	ldr	r0, [r2]
	ldr	r1, .L600+0x14
	add	r2, r0, r1
	ldrb	r0, [r2]
	mov	r1, #0x1
	eor	r0, r0, r1
	strb	r0, [r2]
.L592:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L601:
	.align	2, 0
.L600:
	.word	gSendCmd
	.word	0x2345
	.word	gBerryBlenderData
	.word	gUnknown_020297ED
	.word	gMain
	.word	0x14b
.Lfe30:
	.size	 sub_80500A8,.Lfe30-sub_80500A8
	.align	2, 0
	.type	 sub_80501FC,function
	.thumb_func
sub_80501FC:
	push	{r4, r5, r6, lr}
	bl	sub_8051474
	ldr	r4, .L605
	ldr	r0, [r4]
	mov	r1, #0x96
	lsl	r1, r1, #0x1
	add	r2, r0, r1
	ldr	r1, [r2]
	ldr	r0, .L605+0x4
	cmp	r1, r0
	bhi	.L603	@cond_branch
	add	r0, r1, #0x1
	str	r0, [r2]
.L603:
	bl	sub_80500A8
	ldr	r1, [r4]
	add	r0, r1, #0
	add	r0, r0, #0x56
	ldrh	r0, [r0]
	mov	r5, #0x9f
	lsl	r5, r5, #0x1
	add	r1, r1, r5
	ldrh	r1, [r1]
	bl	SetLinkDebugValues
	bl	sub_804FE70
	ldr	r0, [r4]
	add	r0, r0, r5
	ldrh	r0, [r0]
	mov	r6, #0xfa
	lsl	r6, r6, #0x2
	add	r1, r6, #0
	bl	sub_805194C
	ldr	r0, [r4]
	add	r0, r0, #0x56
	ldrh	r0, [r0]
	bl	sub_8051A3C
	bl	sub_8051B18
	bl	sub_805123C
	ldr	r2, [r4]
	add	r3, r2, #0
	add	r3, r3, #0x6f
	ldrb	r0, [r3]
	cmp	r0, #0
	bne	.L604	@cond_branch
	mov	r1, #0xa0
	lsl	r1, r1, #0x1
	add	r0, r2, r1
	ldrh	r1, [r0]
	ldr	r0, .L605+0x8
	cmp	r1, r0
	bls	.L604	@cond_branch
	add	r0, r2, r5
	strh	r6, [r0]
	mov	r0, #0x1
	strb	r0, [r3]
	ldr	r0, .L605+0xc
	bl	SetMainCallback2
.L604:
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	UpdatePaletteFade
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L606:
	.align	2, 0
.L605:
	.word	gBerryBlenderData
	.word	0x57e03
	.word	0x3e7
	.word	sub_8050954
.Lfe31:
	.size	 sub_80501FC,.Lfe31-sub_80501FC
	.align	2, 0
	.type	 sub_80502A4,function
	.thumb_func
sub_80502A4:
	push	{r4, r5, lr}
	lsl	r1, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r1, r1, #0x14
	add	r4, r1, r0
	lsr	r2, r2, #0x14
	add	r5, r2, r0
	ldrh	r0, [r4]
	ldrh	r1, [r5]
	cmp	r0, r1
	bne	.L609	@cond_branch
	add	r0, r4, #0x2
	add	r1, r5, #0x2
	bl	StringCompare
	cmp	r0, #0
	bne	.L608	@cond_branch
	ldr	r0, [r4, #0x8]
	ldr	r2, .L612
	and	r0, r0, r2
	ldr	r1, [r5, #0x8]
	and	r1, r1, r2
	cmp	r0, r1
	bne	.L608	@cond_branch
	ldr	r0, [r4, #0xc]
	ldr	r2, .L612+0x4
	and	r0, r0, r2
	ldr	r1, [r5, #0xc]
	and	r1, r1, r2
	cmp	r0, r1
	bne	.L608	@cond_branch
.L609:
	mov	r0, #0x1
	b	.L611
.L613:
	.align	2, 0
.L612:
	.word	0xffffff00
	.word	0xffffff
.L608:
	mov	r0, #0x0
.L611:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe32:
	.size	 sub_80502A4,.Lfe32-sub_80502A4
	.align	2, 0
	.globl	Blender_GetPokeblockColor
	.type	 Blender_GetPokeblockColor,function
	.thumb_func
Blender_GetPokeblockColor:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #0xffffffec
	mov	sl, r0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	str	r2, [sp, #0x10]
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r2, sp
	mov	r4, #0x5
.L618:
	ldrh	r0, [r1]
	strh	r0, [r2]
	add	r1, r1, #0x2
	add	r2, r2, #0x2
	sub	r4, r4, #0x1
	cmp	r4, #0
	bge	.L618	@cond_branch
	mov	r6, #0x0
	mov	r1, sp
	mov	r4, #0x4
.L623:
	mov	r2, #0x0
	ldrsh	r0, [r1, r2]
	cmp	r0, #0
	bne	.L622	@cond_branch
	add	r6, r6, #0x1
.L622:
	add	r1, r1, #0x2
	sub	r4, r4, #0x1
	cmp	r4, #0
	bge	.L623	@cond_branch
	cmp	r6, #0x5
	beq	.L637	@cond_branch
	cmp	r3, #0x3
	bhi	.L637	@cond_branch
	mov	r4, #0x0
	ldr	r3, [sp, #0x10]
	cmp	r4, r3
	bge	.L629	@cond_branch
	mov	r3, sl
.L631:
	mov	r6, #0x0
	ldr	r7, [sp, #0x10]
	cmp	r6, r7
	bge	.L630	@cond_branch
	mov	r9, r3
	mov	r5, sl
	lsl	r0, r4, #0x18
	mov	r8, r0
.L635:
	mov	r1, r9
	ldrh	r0, [r1]
	ldrh	r2, [r5]
	cmp	r0, r2
	bne	.L634	@cond_branch
	cmp	r4, r6
	beq	.L634	@cond_branch
	cmp	r0, #0xaf
	bne	.L637	@cond_branch
	lsl	r2, r6, #0x18
	lsr	r2, r2, #0x18
	mov	r0, sl
	mov	r7, r8
	lsr	r1, r7, #0x18
	str	r3, [sp, #0xc]
	bl	sub_80502A4
	lsl	r0, r0, #0x18
	ldr	r3, [sp, #0xc]
	cmp	r0, #0
	beq	.L634	@cond_branch
.L637:
	mov	r0, #0xc
	b	.L678
.L634:
	add	r5, r5, #0x10
	add	r6, r6, #0x1
	ldr	r0, [sp, #0x10]
	cmp	r6, r0
	blt	.L635	@cond_branch
.L630:
	add	r3, r3, #0x10
	add	r4, r4, #0x1
	ldr	r1, [sp, #0x10]
	cmp	r4, r1
	blt	.L631	@cond_branch
.L629:
	mov	r2, #0x0
	mov	r1, sp
	mov	r4, #0x4
.L643:
	mov	r3, #0x0
	ldrsh	r0, [r1, r3]
	cmp	r0, #0
	ble	.L642	@cond_branch
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
.L642:
	add	r1, r1, #0x2
	sub	r4, r4, #0x1
	cmp	r4, #0
	bge	.L643	@cond_branch
	cmp	r2, #0x3
	bls	.L646	@cond_branch
	mov	r0, #0xd
	b	.L678
.L646:
	cmp	r2, #0x3
	bne	.L647	@cond_branch
	mov	r0, #0xb
	b	.L678
.L647:
	mov	r4, #0x0
	mov	r1, sp
.L651:
	mov	r7, #0x0
	ldrsh	r0, [r1, r7]
	cmp	r0, #0x32
	ble	.LCB5401
	b	.L679	@long jump
.LCB5401:
	add	r1, r1, #0x2
	add	r4, r4, #0x1
	cmp	r4, #0x4
	ble	.L651	@cond_branch
	cmp	r2, #0x1
	bne	.L658	@cond_branch
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp	r0, #0
	ble	.L654	@cond_branch
	mov	r0, #0x1
	b	.L678
.L654:
	mov	r0, sp
	ldrh	r0, [r0, #0x2]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	ble	.L655	@cond_branch
	mov	r0, #0x2
	b	.L678
.L655:
	mov	r0, sp
	mov	r3, #0x4
	ldrsh	r0, [r0, r3]
	cmp	r0, #0
	ble	.L656	@cond_branch
	mov	r0, #0x3
	b	.L678
.L656:
	mov	r0, sp
	mov	r4, #0x6
	ldrsh	r0, [r0, r4]
	cmp	r0, #0
	ble	.L657	@cond_branch
	mov	r0, #0x4
	b	.L678
.L657:
	mov	r0, sp
	mov	r7, #0x8
	ldrsh	r0, [r0, r7]
	cmp	r0, #0
	ble	.L658	@cond_branch
	mov	r0, #0x5
	b	.L678
.L658:
	cmp	r2, #0x2
	bne	.L659	@cond_branch
	mov	r4, #0x0
	ldr	r5, .L685
	mov	r1, sp
	add	r2, r5, #0
.L663:
	mov	r3, #0x0
	ldrsh	r0, [r1, r3]
	cmp	r0, #0
	ble	.L662	@cond_branch
	strh	r4, [r2]
	add	r2, r2, #0x2
.L662:
	add	r1, r1, #0x2
	add	r4, r4, #0x1
	cmp	r4, #0x4
	ble	.L663	@cond_branch
	mov	r4, #0x0
	ldrsh	r3, [r5, r4]
	lsl	r0, r3, #0x1
	mov	r7, sp
	add	r1, r7, r0
	mov	r0, #0x2
	ldrsh	r2, [r5, r0]
	lsl	r0, r2, #0x1
	add	r0, r0, sp
	mov	r4, #0x0
	ldrsh	r1, [r1, r4]
	mov	r7, #0x0
	ldrsh	r0, [r0, r7]
	cmp	r1, r0
	blt	.L666	@cond_branch
	add	r0, r3, #0
	cmp	r0, #0
	bne	.L667	@cond_branch
	lsl	r0, r2, #0x10
	b	.L680
.L686:
	.align	2, 0
.L685:
	.word	gUnknown_03000520
.L667:
	cmp	r0, #0x1
	bne	.L668	@cond_branch
	lsl	r0, r2, #0x10
	b	.L681
.L668:
	cmp	r0, #0x2
	bne	.L669	@cond_branch
	lsl	r0, r2, #0x10
	b	.L682
.L669:
	cmp	r0, #0x3
	bne	.L670	@cond_branch
	lsl	r0, r2, #0x10
	b	.L683
.L670:
	cmp	r0, #0x4
	bne	.L659	@cond_branch
	lsl	r0, r2, #0x10
	b	.L684
.L666:
	mov	r2, #0x2
	ldrsh	r0, [r5, r2]
	cmp	r0, #0
	bne	.L673	@cond_branch
	lsl	r0, r3, #0x10
.L680:
	mov	r1, #0x6
	orr	r0, r0, r1
	b	.L678
.L673:
	cmp	r0, #0x1
	bne	.L674	@cond_branch
	lsl	r0, r3, #0x10
.L681:
	mov	r1, #0x7
	orr	r0, r0, r1
	b	.L678
.L674:
	cmp	r0, #0x2
	bne	.L675	@cond_branch
	lsl	r0, r3, #0x10
.L682:
	mov	r1, #0x8
	orr	r0, r0, r1
	b	.L678
.L675:
	cmp	r0, #0x3
	bne	.L676	@cond_branch
	lsl	r0, r3, #0x10
.L683:
	mov	r1, #0x9
	orr	r0, r0, r1
	b	.L678
.L676:
	cmp	r0, #0x4
	bne	.L659	@cond_branch
	lsl	r0, r3, #0x10
.L684:
	mov	r1, #0xa
	orr	r0, r0, r1
	b	.L678
.L679:
	mov	r0, #0xe
	b	.L678
.L659:
	mov	r0, #0x0
.L678:
	add	sp, sp, #0x14
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe33:
	.size	 Blender_GetPokeblockColor,.Lfe33-Blender_GetPokeblockColor
	.align	2, 0
	.type	 sub_80504F0,function
	.thumb_func
sub_80504F0:
	ldr	r1, .L688
	strh	r0, [r1]
	bx	lr
.L689:
	.align	2, 0
.L688:
	.word	gUnknown_0300052C
.Lfe34:
	.size	 sub_80504F0,.Lfe34-sub_80504F0
	.align	2, 0
	.globl	unref_sub_80504FC
	.type	 unref_sub_80504FC,function
	.thumb_func
unref_sub_80504FC:
	ldr	r0, .L691
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	bx	lr
.L692:
	.align	2, 0
.L691:
	.word	gUnknown_0300052C
.Lfe35:
	.size	 unref_sub_80504FC,.Lfe35-unref_sub_80504FC
	.align	2, 0
	.type	 sub_8050508,function
	.thumb_func
sub_8050508:
	ldr	r1, .L694
	strh	r0, [r1]
	bx	lr
.L695:
	.align	2, 0
.L694:
	.word	gUnknown_0300052E
.Lfe36:
	.size	 sub_8050508,.Lfe36-sub_8050508
	.align	2, 0
	.globl	unref_sub_8050514
	.type	 unref_sub_8050514,function
	.thumb_func
unref_sub_8050514:
	ldr	r0, .L697
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	bx	lr
.L698:
	.align	2, 0
.L697:
	.word	gUnknown_0300052E
.Lfe37:
	.size	 unref_sub_8050514,.Lfe37-unref_sub_8050514
	.align	2, 0
	.type	 Blender_CalculatePokeblock,function
	.thumb_func
Blender_CalculatePokeblock:
	.syntax unified
    push {r4-r7,lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5-r7}
    sub sp, 0x10
    str r0, [sp]
    mov r8, r1
    str r3, [sp, 0x4]
    ldr r0, [sp, 0x30]
    lsls r2, 24
    lsrs r2, 24
    mov r9, r2
    lsls r0, 16
    lsrs r0, 16
    str r0, [sp, 0x8]
    ldr r7, _080505DC @ =gUnknown_03000510
    adds r2, r7, 0
    movs r1, 0
    adds r0, r7, 0
    adds r0, 0xA
_0805054A:
    strh r1, [r0]
    subs r0, 0x2
    cmp r0, r2
    bge _0805054A
    movs r6, 0
    cmp r6, r9
    bge _08050580
    ldr r0, _080505DC @ =gUnknown_03000510
    mov r12, r0
    ldr r5, [sp]
    adds r5, 0x9
_08050560:
    movs r3, 0
    adds r4, r5, 0
    mov r2, r12
_08050566:
    adds r1, r4, r3
    ldrh r0, [r2]
    ldrb r1, [r1]
    adds r0, r1
    strh r0, [r2]
    adds r2, 0x2
    adds r3, 0x1
    cmp r3, 0x5
    ble _08050566
    adds r5, 0x10
    adds r6, 0x1
    cmp r6, r9
    blt _08050560
_08050580:
    movs r1, 0
    ldrsh r3, [r7, r1]
    ldrh r0, [r7]
    ldrh r1, [r7, 0x2]
    subs r0, r1
    strh r0, [r7]
    ldrh r0, [r7, 0x4]
    subs r1, r0
    strh r1, [r7, 0x2]
    ldrh r1, [r7, 0x6]
    subs r0, r1
    strh r0, [r7, 0x4]
    ldrh r0, [r7, 0x8]
    subs r1, r0
    strh r1, [r7, 0x6]
    subs r0, r3
    strh r0, [r7, 0x8]
    movs r3, 0
    movs r2, 0
    adds r1, r7, 0
    movs r6, 0x4
_080505AA:
    movs r4, 0
    ldrsh r0, [r1, r4]
    cmp r0, 0
    bge _080505B6
    strh r2, [r1]
    adds r3, 0x1
_080505B6:
    adds r1, 0x2
    subs r6, 0x1
    cmp r6, 0
    bge _080505AA
    lsls r0, r3, 24
    lsrs r0, 24
    mov r10, r0
    movs r4, 0
    ldr r1, _080505DC @ =gUnknown_03000510
    movs r6, 0x4
_080505CA:
    ldrh r2, [r1]
    movs r5, 0
    ldrsh r0, [r1, r5]
    cmp r0, 0
    ble _080505E4
    cmp r0, r3
    bge _080505E0
    strh r4, [r1]
    b _080505E4
    .align 2, 0
_080505DC: .4byte gUnknown_03000510
_080505E0:
    subs r0, r2, r3
    strh r0, [r1]
_080505E4:
    adds r1, 0x2
    subs r6, 0x1
    cmp r6, 0
    bge _080505CA
    ldr r1, _080506C4 @ =gUnknown_03000510
    ldr r2, _080506C8 @ =gUnknown_03000530
    movs r6, 0x4
_080505F2:
    movs r3, 0
    ldrsh r0, [r1, r3]
    stm r2!, {r0}
    adds r1, 0x2
    subs r6, 0x1
    cmp r6, 0
    bge _080505F2
    ldr r1, _080506CC @ =0x0000014d
    ldr r0, [sp, 0x8]
    bl __udivsi3
    lsls r0, 16
    lsrs r0, 16
    adds r3, r0, 0
    adds r3, 0x64
    ldr r4, _080506D0 @ =gUnknown_0300055C
    str r3, [r4]
    movs r6, 0x4
_08050616:
    movs r0, 0
    ldrsh r5, [r7, r0]
    adds r0, r5, 0
    muls r0, r3
    movs r1, 0xA
    str r3, [sp, 0xC]
    bl __divsi3
    adds r5, r0, 0
    movs r1, 0xA
    bl __modsi3
    adds r4, r0, 0
    adds r0, r5, 0
    movs r1, 0xA
    bl __divsi3
    adds r5, r0, 0
    ldr r3, [sp, 0xC]
    cmp r4, 0x4
    ble _08050642
    adds r5, 0x1
_08050642:
    strh r5, [r7]
    adds r7, 0x2
    subs r6, 0x1
    cmp r6, 0
    bge _08050616
    ldr r1, _080506C4 @ =gUnknown_03000510
    ldr r2, _080506D4 @ =gUnknown_03000548
    movs r6, 0x4
_08050652:
    movs r3, 0
    ldrsh r0, [r1, r3]
    stm r2!, {r0}
    adds r1, 0x2
    subs r6, 0x1
    cmp r6, 0
    bge _08050652
    ldr r4, _080506C4 @ =gUnknown_03000510
    ldr r0, [sp]
    adds r1, r4, 0
    mov r2, r9
    mov r3, r10
    bl Blender_GetPokeblockColor
    mov r5, r8
    strb r0, [r5]
    movs r1, 0xA
    ldrsh r0, [r4, r1]
    mov r1, r9
    bl __divsi3
    mov r3, r9
    subs r0, r3
    strh r0, [r4, 0xA]
    lsls r0, 16
    cmp r0, 0
    bge _0805068C
    movs r0, 0
    strh r0, [r4, 0xA]
_0805068C:
    mov r5, r8
    ldrb r0, [r5]
    cmp r0, 0xC
    bne _080506E6
    bl Random
    lsls r0, 16
    lsrs r0, 16
    movs r1, 0xA
    bl __umodsi3
    lsls r0, 16
    lsrs r3, r0, 16
    movs r6, 0
    ldr r0, _080506D8 @ =gUnknown_082165DF
    adds r0, r3, r0
    ldrb r0, [r0]
    adds r1, r4, 0
    movs r4, 0x1
    movs r3, 0x2
_080506B4:
    adds r2, r0, 0
    asrs r2, r6
    ands r2, r4
    cmp r2, 0
    beq _080506DC
    strh r3, [r1]
    b _080506DE
    .align 2, 0
_080506C4: .4byte gUnknown_03000510
_080506C8: .4byte gUnknown_03000530
_080506CC: .4byte 0x0000014d
_080506D0: .4byte gUnknown_0300055C
_080506D4: .4byte gUnknown_03000548
_080506D8: .4byte gUnknown_082165DF
_080506DC:
    strh r2, [r1]
_080506DE:
    adds r1, 0x2
    adds r6, 0x1
    cmp r6, 0x4
    ble _080506B4
_080506E6:
    ldr r7, _08050740 @ =gUnknown_03000510
    movs r2, 0xFF
    adds r1, r7, 0
    movs r6, 0x5
_080506EE:
    movs r3, 0
    ldrsh r0, [r1, r3]
    cmp r0, 0xFF
    ble _080506F8
    strh r2, [r1]
_080506F8:
    adds r1, 0x2
    subs r6, 0x1
    cmp r6, 0
    bge _080506EE
    ldrh r0, [r7]
    mov r4, r8
    strb r0, [r4, 0x1]
    ldrh r0, [r7, 0x2]
    strb r0, [r4, 0x2]
    ldrh r0, [r7, 0x4]
    strb r0, [r4, 0x3]
    ldrh r0, [r7, 0x6]
    strb r0, [r4, 0x4]
    ldrh r0, [r7, 0x8]
    strb r0, [r4, 0x5]
    ldrh r0, [r7, 0xA]
    strb r0, [r4, 0x6]
    movs r6, 0
    adds r2, r7, 0
_0805071E:
    ldr r5, [sp, 0x4]
    adds r1, r5, r6
    ldrh r0, [r2]
    strb r0, [r1]
    adds r2, 0x2
    adds r6, 0x1
    cmp r6, 0x5
    ble _0805071E
    add sp, 0x10
    pop {r3-r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4-r7}
    pop {r0}
    bx r0
    .align 2, 0
_08050740: .4byte gUnknown_03000510
        .syntax divided
	.code	16
.Lfe38:
	.size	 Blender_CalculatePokeblock,.Lfe38-Blender_CalculatePokeblock
	.align	2, 0
	.type	 BlenderDebug_CalculatePokeblock,function
	.thumb_func
BlenderDebug_CalculatePokeblock:
	push	{r4, lr}
	add	sp, sp, #0xfffffffc
	ldr	r4, [sp, #0xc]
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	str	r4, [sp]
	bl	Blender_CalculatePokeblock
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe39:
	.size	 BlenderDebug_CalculatePokeblock,.Lfe39-BlenderDebug_CalculatePokeblock
	.align	2, 0
	.type	 sub_8050760,function
	.thumb_func
sub_8050760:
	push	{r4, r5, r6, lr}
	ldr	r0, .L731
	ldr	r0, [r0]
	mov	r2, #0x96
	lsl	r2, r2, #0x1
	add	r1, r0, r2
	ldrh	r1, [r1]
	add	r0, r0, #0x5a
	ldrh	r4, [r0]
	mov	r2, #0x0
	ldr	r5, .L731+0x4
	cmp	r1, r5
	bhi	.L702	@cond_branch
	mov	r2, #0x5
	b	.L703
.L732:
	.align	2, 0
.L731:
	.word	gBerryBlenderData
	.word	0x383
.L702:
	ldr	r3, .L733
	add	r0, r1, r3
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r3, .L733+0x4
	cmp	r0, r3
	bhi	.L704	@cond_branch
	mov	r2, #0x4
	b	.L703
.L734:
	.align	2, 0
.L733:
	.word	0xfffffc7c
	.word	0x257
.L704:
	ldr	r6, .L735
	add	r0, r1, r6
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, r3
	bhi	.L706	@cond_branch
	mov	r2, #0x3
	b	.L703
.L736:
	.align	2, 0
.L735:
	.word	0xfffffa24
.L706:
	ldr	r3, .L737
	add	r0, r1, r3
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, r5
	bhi	.L708	@cond_branch
	mov	r2, #0x2
	b	.L703
.L738:
	.align	2, 0
.L737:
	.word	0xfffff7cc
.L708:
	ldr	r6, .L739
	add	r0, r1, r6
	lsl	r0, r0, #0x10
	ldr	r1, .L739+0x4
	cmp	r0, r1
	bhi	.L703	@cond_branch
	mov	r2, #0x1
.L703:
	lsl	r0, r2, #0x10
	asr	r0, r0, #0x10
	bl	sub_8050508
	mov	r2, #0x0
	cmp	r4, #0x40
	bhi	.L711	@cond_branch
	add	r0, r4, #0
	sub	r0, r0, #0x32
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x31
	bhi	.L712	@cond_branch
	ldr	r2, .L739+0x8
	b	.L711
.L740:
	.align	2, 0
.L739:
	.word	0xfffff31c
	.word	0x12b0000
	.word	0xffff
.L712:
	add	r0, r4, #0
	sub	r0, r0, #0x64
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x31
	bhi	.L714	@cond_branch
	ldr	r2, .L741
	b	.L711
.L742:
	.align	2, 0
.L741:
	.word	0xfffe
.L714:
	add	r0, r4, #0
	sub	r0, r0, #0x96
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x31
	bhi	.L716	@cond_branch
	ldr	r2, .L743
	b	.L711
.L744:
	.align	2, 0
.L743:
	.word	0xfffd
.L716:
	add	r0, r4, #0
	sub	r0, r0, #0xc8
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x31
	bhi	.L718	@cond_branch
	ldr	r2, .L745
	b	.L711
.L746:
	.align	2, 0
.L745:
	.word	0xfffc
.L718:
	add	r0, r4, #0
	sub	r0, r0, #0xfa
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x31
	bhi	.L720	@cond_branch
	ldr	r2, .L747
	b	.L711
.L748:
	.align	2, 0
.L747:
	.word	0xfffb
.L720:
	ldr	r1, .L749
	add	r0, r4, r1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x31
	bhi	.L722	@cond_branch
	ldr	r2, .L749+0x4
	b	.L711
.L750:
	.align	2, 0
.L749:
	.word	0xfffffea2
	.word	0xfffa
.L722:
	ldr	r3, .L751
	add	r0, r4, r3
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x31
	bhi	.L724	@cond_branch
	ldr	r2, .L751+0x4
	b	.L711
.L752:
	.align	2, 0
.L751:
	.word	0xfffffe70
	.word	0xfff9
.L724:
	ldr	r6, .L753
	add	r0, r4, r6
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x31
	bhi	.L726	@cond_branch
	ldr	r2, .L753+0x4
	b	.L711
.L754:
	.align	2, 0
.L753:
	.word	0xfffffe0c
	.word	0xfff8
.L726:
	ldr	r1, .L755
	add	r0, r4, r1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x31
	bhi	.L728	@cond_branch
	ldr	r2, .L755+0x4
	b	.L711
.L756:
	.align	2, 0
.L755:
	.word	0xfffffdda
	.word	0xfff7
.L728:
	ldr	r0, .L757
	cmp	r4, r0
	bls	.L711	@cond_branch
	ldr	r2, .L757+0x4
.L711:
	lsl	r0, r2, #0x10
	asr	r0, r0, #0x10
	bl	sub_80504F0
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L758:
	.align	2, 0
.L757:
	.word	0x257
	.word	0xfff6
.Lfe40:
	.size	 sub_8050760,.Lfe40-sub_8050760
	.align	2, 0
	.type	 sub_80508D4,function
	.thumb_func
sub_80508D4:
	push	{lr}
	ldr	r2, .L760
	ldr	r1, [r2]
	add	r1, r1, #0xaa
	strb	r0, [r1]
	ldr	r0, [r2]
	add	r0, r0, #0xaa
	ldrb	r1, [r0]
	lsl	r1, r1, #0x1c
	mov	r0, #0x90
	lsl	r0, r0, #0x17
	add	r1, r1, r0
	lsr	r1, r1, #0x18
	mov	r0, #0xc0
	bl	sub_814A880
	pop	{r0}
	bx	r0
.L761:
	.align	2, 0
.L760:
	.word	gBerryBlenderData
.Lfe41:
	.size	 sub_80508D4,.Lfe41-sub_80508D4
	.align	2, 0
	.type	 sub_80508FC,function
	.thumb_func
sub_80508FC:
	push	{r4, lr}
	add	sp, sp, #0xfffffffc
	ldr	r4, .L763
	ldr	r0, [r4]
	add	r0, r0, #0xaa
	mov	r1, #0x0
	strb	r1, [r0]
	mov	r0, #0x17
	mov	r1, #0x8
	mov	r2, #0x1c
	mov	r3, #0xd
	bl	MenuDrawTextWindow
	ldr	r1, .L763+0x4
	ldr	r3, .L763+0x8
	mov	r0, #0x20
	str	r0, [sp]
	mov	r0, #0x0
	mov	r2, #0xc
	bl	sub_814A5C0
	ldr	r0, .L763+0xc
	mov	r1, #0x18
	mov	r2, #0x9
	bl	MenuPrint
	ldr	r0, [r4]
	add	r0, r0, #0xaa
	ldrb	r0, [r0]
	bl	sub_80508D4
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L764:
	.align	2, 0
.L763:
	.word	gBerryBlenderData
	.word	0xffff
	.word	0x2d9f
	.word	gOtherText_YesNoTerminating
.Lfe42:
	.size	 sub_80508FC,.Lfe42-sub_80508FC
	.align	2, 0
	.type	 sub_8050954,function
	.thumb_func
sub_8050954:
	push	{r4, r5, r6, r7, lr}
	bl	sub_8051474
	bl	GetMultiplayerId
	ldr	r0, .L825
	ldr	r0, [r0]
	add	r0, r0, #0x6f
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	cmp	r0, #0xc
	bls	.LCB6121
	b	.L766	@long jump
.LCB6121:
	lsl	r0, r0, #0x2
	ldr	r1, .L825+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L826:
	.align	2, 0
.L825:
	.word	gBerryBlenderData
	.word	.L815
	.align	2, 0
	.align	2, 0
.L815:
	.word	.L767
	.word	.L773
	.word	.L777
	.word	.L781
	.word	.L783
	.word	.L785
	.word	.L789
	.word	.L790
	.word	.L792
	.word	.L793
	.word	.L803
	.word	.L810
	.word	.L813
.L767:
	bl	ClearLinkCallback
	ldr	r0, .L827
	mov	r1, #0x80
	lsl	r1, r1, #0x1
	bl	m4aMPlayTempoControl
	mov	r4, #0x0
	b	.L817
.L828:
	.align	2, 0
.L827:
	.word	gMPlay_BGM
.L771:
	ldr	r0, .L829
	ldr	r0, [r0]
	mov	r1, #0xa4
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	add	r0, r0, r4
	ldrb	r0, [r0]
	bl	DestroyTask
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
.L817:
	ldr	r0, .L829+0x4
	ldrh	r0, [r0]
	cmp	r4, r0
	bcc	.L771	@cond_branch
	b	.L818
.L830:
	.align	2, 0
.L829:
	.word	gBerryBlenderData
	.word	gSpecialVar_0x8004
.L773:
	ldr	r1, .L831
	ldr	r3, [r1]
	add	r2, r3, #0
	add	r2, r2, #0x56
	ldrh	r0, [r2]
	sub	r0, r0, #0x20
	strh	r0, [r2]
	lsl	r0, r0, #0x10
	add	r4, r1, #0
	cmp	r0, #0
	bgt	.L774	@cond_branch
	mov	r0, #0x0
	strh	r0, [r2]
	ldr	r0, .L831+0x4
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L775	@cond_branch
	add	r1, r3, #0
	add	r1, r1, #0x6f
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	b	.L819
.L832:
	.align	2, 0
.L831:
	.word	gBerryBlenderData
	.word	gReceivedRemoteLinkPlayers
.L775:
	add	r1, r3, #0
	add	r1, r1, #0x6f
	mov	r0, #0x5
.L819:
	strb	r0, [r1]
	ldr	r0, [r4]
	mov	r1, #0x0
	strb	r1, [r0]
	ldr	r0, .L833
	bl	m4aMPlayStop
.L774:
	bl	Blender_ControlHitPitch
	b	.L766
.L834:
	.align	2, 0
.L833:
	.word	gMPlay_SE2
.L777:
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB6265
	b	.L818	@long jump
.LCB6265:
	bl	sub_8007ECC
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB6271
	b	.L766	@long jump
.LCB6271:
	ldr	r4, .L835
	ldr	r3, [r4]
	mov	r2, #0xde
	lsl	r2, r2, #0x1
	add	r1, r3, r2
	mov	r5, #0x96
	lsl	r5, r5, #0x1
	add	r0, r3, r5
	ldr	r0, [r0]
	str	r0, [r1]
	add	r0, r3, #0
	add	r0, r0, #0x5a
	ldrh	r2, [r0]
	add	r5, r5, #0x94
	add	r0, r3, r5
	strh	r2, [r0]
	mov	r0, #0x0
	mov	r2, #0x28
	bl	SendBlock
	ldr	r1, [r4]
	b	.L820
.L836:
	.align	2, 0
.L835:
	.word	gBerryBlenderData
.L781:
	bl	GetBlockReceivedStatus
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB6311
	b	.L766	@long jump
.LCB6311:
	ldr	r2, .L837
	ldr	r0, .L837+0x4
	ldr	r3, [r0]
	ldrh	r0, [r2, #0x4]
	add	r1, r3, #0
	add	r1, r1, #0x5a
	strh	r0, [r1]
	mov	r0, #0x96
	lsl	r0, r0, #0x1
	add	r1, r3, r0
	ldr	r0, [r2]
	str	r0, [r1]
	add	r1, r3, #0
	add	r1, r1, #0x6f
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	bl	ResetBlockReceivedFlags
	b	.L766
.L838:
	.align	2, 0
.L837:
	.word	gBlockRecvBuffer
	.word	gBerryBlenderData
.L783:
	bl	Blender_PrintBlendingRanking
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB6348
	b	.L766	@long jump
.LCB6348:
	b	.L818
.L785:
	bl	Blender_PrintBlendingResults
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB6357
	b	.L766	@long jump
.LCB6357:
	ldr	r0, .L839
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L787	@cond_branch
	mov	r0, #0x22
	bl	IncrementGameStat
	b	.L818
.L840:
	.align	2, 0
.L839:
	.word	gInGameOpponentsNo
.L787:
	mov	r0, #0x21
	bl	IncrementGameStat
	b	.L818
.L789:
	ldr	r0, .L841
	ldr	r1, [r0]
	add	r1, r1, #0x6f
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	mov	r0, #0x0
	mov	r1, #0xe
	mov	r2, #0x1d
	mov	r3, #0x13
	bl	MenuDrawTextWindow
	ldr	r0, .L841+0x4
	mov	r1, #0x1
	mov	r2, #0xf
	bl	MenuPrintMessage
	b	.L766
.L842:
	.align	2, 0
.L841:
	.word	gBerryBlenderData
	.word	gOtherText_BlendAnotherBerryPrompt
.L790:
	bl	MenuUpdateWindowText
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB6413
	b	.L766	@long jump
.LCB6413:
	b	.L818
.L792:
	ldr	r4, .L843
	ldr	r0, [r4]
	add	r0, r0, #0xaa
	mov	r1, #0x0
	strb	r1, [r0]
	bl	sub_80508FC
	ldr	r1, [r4]
	b	.L820
.L844:
	.align	2, 0
.L843:
	.word	gBerryBlenderData
.L793:
	ldr	r0, .L845
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L794	@cond_branch
	ldr	r0, .L845+0x4
	ldr	r0, [r0]
	add	r0, r0, #0xaa
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L795	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
.L795:
	mov	r0, #0x0
	bl	sub_80508D4
	b	.L766
.L846:
	.align	2, 0
.L845:
	.word	gMain
	.word	gBerryBlenderData
.L794:
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L797	@cond_branch
	ldr	r0, .L847
	ldr	r0, [r0]
	add	r0, r0, #0xaa
	ldrb	r0, [r0]
	cmp	r0, #0x1
	beq	.L821	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	b	.L821
.L848:
	.align	2, 0
.L847:
	.word	gBerryBlenderData
.L797:
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L800	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	b	.L818
.L800:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	bne	.LCB6510
	b	.L766	@long jump
.LCB6510:
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L849
	ldr	r1, [r0]
	add	r1, r1, #0x6f
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
.L821:
	mov	r0, #0x1
	bl	sub_80508D4
	b	.L766
.L850:
	.align	2, 0
.L849:
	.word	gBerryBlenderData
.L803:
	ldr	r6, .L851
	mov	r7, #0x0
	ldr	r0, .L851+0x4
	strh	r0, [r6]
	ldr	r4, .L851+0x8
	ldr	r2, [r4]
	add	r0, r2, #0
	add	r0, r0, #0xaa
	ldrb	r5, [r0]
	cmp	r5, #0
	bne	.L804	@cond_branch
	mov	r0, #0x4
	bl	IsBagPocketNonEmpty
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L805	@cond_branch
	ldr	r0, [r4]
	add	r0, r0, #0x7c
	mov	r1, #0x2
	strh	r1, [r0]
	ldr	r0, .L851+0xc
	b	.L822
.L852:
	.align	2, 0
.L851:
	.word	gSendCmd
	.word	0x2fff
	.word	gBerryBlenderData
	.word	0x9999
.L805:
	bl	sub_810CA00
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	bne	.L807	@cond_branch
	ldr	r0, [r4]
	add	r0, r0, #0x7c
	mov	r1, #0x3
	strh	r1, [r0]
	ldr	r0, .L853
	b	.L822
.L854:
	.align	2, 0
.L853:
	.word	0xaaaa
.L807:
	ldr	r0, [r4]
	add	r0, r0, #0x7c
	strh	r5, [r0]
	ldr	r0, .L855
.L822:
	strh	r0, [r6, #0x2]
	b	.L818
.L856:
	.align	2, 0
.L855:
	.word	0x7779
.L804:
	add	r1, r2, #0
	add	r1, r1, #0x7c
	mov	r0, #0x1
	strh	r0, [r1]
	ldr	r0, .L857
	strh	r0, [r6, #0x2]
	sub	r1, r1, #0xd
	b	.L823
.L858:
	.align	2, 0
.L857:
	.word	0x8888
.L810:
	ldr	r0, .L859
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L811	@cond_branch
	ldr	r0, .L859+0x4
	b	.L824
.L860:
	.align	2, 0
.L859:
	.word	gInGameOpponentsNo
	.word	sub_80510E8
.L811:
	ldr	r0, .L861
	mov	r1, #0x1
	mov	r2, #0xf
	bl	MenuPrintMessage
.L818:
	ldr	r0, .L861+0x4
	ldr	r1, [r0]
.L820:
	add	r1, r1, #0x6f
.L823:
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L766
.L862:
	.align	2, 0
.L861:
	.word	gOtherText_LinkStandby3
	.word	gBerryBlenderData
.L813:
	bl	MenuUpdateWindowText
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L766	@cond_branch
	ldr	r0, .L863
.L824:
	bl	SetMainCallback2
	ldr	r2, .L863+0x4
	ldr	r0, [r2]
	add	r0, r0, #0x6f
	mov	r1, #0x0
	strb	r1, [r0]
	ldr	r0, [r2]
	strb	r1, [r0]
.L766:
	bl	sub_8051B18
	ldr	r0, .L863+0x4
	ldr	r0, [r0]
	add	r0, r0, #0x56
	ldrh	r0, [r0]
	bl	sub_8051A3C
	bl	sub_805123C
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	UpdatePaletteFade
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L864:
	.align	2, 0
.L863:
	.word	sub_8050E30
	.word	gBerryBlenderData
.Lfe43:
	.size	 sub_8050954,.Lfe43-sub_8050954
	.align	2, 0
	.globl	sub_8050CE8
	.type	 sub_8050CE8,function
	.thumb_func
sub_8050CE8:
	push	{r4, lr}
	ldr	r1, .L885
	ldr	r0, [r1]
	mov	r2, #0xe2
	lsl	r2, r2, #0x1
	add	r0, r0, r2
	ldr	r0, [r0]
	add	r4, r1, #0
	cmp	r0, #0x6
	bls	.LCB6740
	b	.L866	@long jump
.LCB6740:
	lsl	r0, r0, #0x2
	ldr	r1, .L885+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L886:
	.align	2, 0
.L885:
	.word	gBerryBlenderData
	.word	.L880
	.align	2, 0
	.align	2, 0
.L880:
	.word	.L867
	.word	.L868
	.word	.L870
	.word	.L871
	.word	.L873
	.word	.L877
	.word	.L878
.L867:
	bl	sub_80084A4
	ldr	r0, .L887
	ldr	r2, [r0]
	mov	r3, #0xe2
	lsl	r3, r3, #0x1
	add	r1, r2, r3
	mov	r0, #0x1
	b	.L883
.L888:
	.align	2, 0
.L887:
	.word	gBerryBlenderData
.L868:
	bl	sub_8007ECC
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L866	@cond_branch
	ldr	r0, .L889
	ldr	r1, [r0]
	mov	r2, #0xe2
	lsl	r2, r2, #0x1
	add	r1, r1, r2
	ldr	r0, [r1]
	add	r0, r0, #0x1
	str	r0, [r1]
	ldr	r1, .L889+0x4
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L866
.L890:
	.align	2, 0
.L889:
	.word	gBerryBlenderData
	.word	gSoftResetDisabled
.L870:
	bl	sub_8125E2C
	ldr	r0, .L891
	ldr	r2, [r0]
	b	.L884
.L892:
	.align	2, 0
.L891:
	.word	gBerryBlenderData
.L871:
	ldr	r1, [r4]
	mov	r2, #0x98
	lsl	r2, r2, #0x1
	add	r1, r1, r2
	ldr	r0, [r1]
	add	r0, r0, #0x1
	str	r0, [r1]
	cmp	r0, #0xa
	bne	.L866	@cond_branch
	bl	sub_80084A4
	ldr	r1, [r4]
	mov	r3, #0xe2
	lsl	r3, r3, #0x1
	add	r1, r1, r3
	ldr	r0, [r1]
	add	r0, r0, #0x1
	str	r0, [r1]
	b	.L866
.L873:
	bl	sub_8007ECC
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L866	@cond_branch
	bl	sub_8125E6C
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0
	beq	.L875	@cond_branch
	ldr	r0, .L893
	ldr	r0, [r0]
	mov	r1, #0xe2
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	mov	r1, #0x5
	str	r1, [r0]
	b	.L866
.L894:
	.align	2, 0
.L893:
	.word	gBerryBlenderData
.L875:
	ldr	r0, .L895
	ldr	r1, [r0]
	mov	r3, #0x98
	lsl	r3, r3, #0x1
	add	r0, r1, r3
	str	r2, [r0]
	mov	r0, #0xe2
	lsl	r0, r0, #0x1
	add	r1, r1, r0
	mov	r0, #0x3
	str	r0, [r1]
	b	.L866
.L896:
	.align	2, 0
.L895:
	.word	gBerryBlenderData
.L877:
	ldr	r2, [r4]
.L884:
	mov	r3, #0xe2
	lsl	r3, r3, #0x1
	add	r1, r2, r3
	ldr	r0, [r1]
	add	r0, r0, #0x1
.L883:
	str	r0, [r1]
	mov	r0, #0x98
	lsl	r0, r0, #0x1
	add	r1, r2, r0
	mov	r0, #0x0
	str	r0, [r1]
	b	.L866
.L878:
	ldr	r1, [r4]
	mov	r2, #0x98
	lsl	r2, r2, #0x1
	add	r1, r1, r2
	ldr	r0, [r1]
	add	r0, r0, #0x1
	str	r0, [r1]
	cmp	r0, #0x5
	ble	.L866	@cond_branch
	ldr	r1, .L897
	mov	r0, #0x0
	strb	r0, [r1]
	mov	r0, #0x1
	b	.L882
.L898:
	.align	2, 0
.L897:
	.word	gSoftResetDisabled
.L866:
	mov	r0, #0x0
.L882:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe44:
	.size	 sub_8050CE8,.Lfe44-sub_8050CE8
	.align	2, 0
	.type	 sub_8050E30,function
	.thumb_func
sub_8050E30:
	push	{r4, r5, lr}
	add	sp, sp, #0xfffffffc
	ldr	r1, .L936
	ldr	r0, [r1]
	add	r0, r0, #0x6f
	ldrb	r0, [r0]
	add	r5, r1, #0
	cmp	r0, #0xc
	bls	.LCB6963
	b	.L900	@long jump
.LCB6963:
	lsl	r0, r0, #0x2
	ldr	r1, .L936+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L937:
	.align	2, 0
.L936:
	.word	gBerryBlenderData
	.word	.L931
	.align	2, 0
	.align	2, 0
.L931:
	.word	.L901
	.word	.L909
	.word	.L910
	.word	.L911
	.word	.L913
	.word	.L915
	.word	.L916
	.word	.L918
	.word	.L920
	.word	.L921
	.word	.L923
	.word	.L927
	.word	.L929
.L901:
	ldr	r1, [r5]
	add	r0, r1, #0
	add	r0, r0, #0x70
	ldrh	r2, [r0]
	ldr	r0, .L938
	cmp	r2, r0
	bne	.LCB6994
	b	.L933	@long jump
.LCB6994:
	ldr	r0, .L938+0x4
	cmp	r2, r0
	beq	.LCB6999
	b	.L900	@long jump
.LCB6999:
	add	r0, r1, #0
	add	r0, r0, #0x78
	ldrh	r2, [r0]
	ldr	r0, .L938+0x8
	cmp	r2, r0
	bne	.L905	@cond_branch
	add	r1, r1, #0x6f
	mov	r0, #0x2
	strb	r0, [r1]
	b	.L900
.L939:
	.align	2, 0
.L938:
	.word	0x2222
	.word	0x1111
	.word	0x9999
.L905:
	ldr	r0, .L940
	cmp	r2, r0
	bne	.L933	@cond_branch
	add	r1, r1, #0x6f
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L900
.L941:
	.align	2, 0
.L940:
	.word	0xaaaa
.L909:
	ldr	r0, [r5]
	add	r0, r0, #0x6f
	mov	r1, #0x3
	strb	r1, [r0]
	bl	DestroyMenuCursor
	mov	r0, #0x17
	mov	r1, #0x8
	mov	r2, #0x1c
	mov	r3, #0xd
	bl	MenuZeroFillWindowRect
	ldr	r4, .L942
	ldr	r0, [r5]
	add	r0, r0, #0x7a
	ldrh	r0, [r0]
	lsl	r1, r0, #0x3
	sub	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L942+0x4
	add	r1, r1, r0
	add	r0, r4, #0
	bl	StringCopy
	ldr	r1, .L942+0x8
	b	.L934
.L943:
	.align	2, 0
.L942:
	.word	gStringVar4
	.word	gLinkPlayers+0x8
	.word	gOtherText_OtherCaseIsFull
.L910:
	ldr	r1, [r5]
	add	r1, r1, #0x6f
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	bl	DestroyMenuCursor
	mov	r0, #0x17
	mov	r1, #0x8
	mov	r2, #0x1c
	mov	r3, #0xd
	bl	MenuZeroFillWindowRect
	ldr	r4, .L944
	ldr	r0, [r5]
	add	r0, r0, #0x7a
	ldrh	r0, [r0]
	lsl	r1, r0, #0x3
	sub	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L944+0x4
	add	r1, r1, r0
	add	r0, r4, #0
	bl	StringCopy
	ldr	r1, .L944+0x8
.L934:
	add	r0, r4, #0
	bl	StringAppend
	add	r0, r4, #0
	mov	r1, #0x1
	mov	r2, #0xf
	bl	MenuPrintMessage
	b	.L900
.L945:
	.align	2, 0
.L944:
	.word	gStringVar4
	.word	gLinkPlayers+0x8
	.word	gOtherText_NoBerriesForBlend
.L911:
	bl	MenuUpdateWindowText
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB7127
	b	.L900	@long jump
.LCB7127:
	ldr	r0, .L946
	ldr	r1, [r0]
	mov	r0, #0x98
	lsl	r0, r0, #0x1
	add	r2, r1, r0
	mov	r0, #0x0
	str	r0, [r2]
	b	.L935
.L947:
	.align	2, 0
.L946:
	.word	gBerryBlenderData
.L913:
	ldr	r2, [r5]
	mov	r0, #0x98
	lsl	r0, r0, #0x1
	add	r1, r2, r0
	ldr	r0, [r1]
	add	r0, r0, #0x1
	str	r0, [r1]
	cmp	r0, #0x3c
	bgt	.LCB7156
	b	.L900	@long jump
.LCB7156:
	add	r1, r2, #0
.L933:
	add	r1, r1, #0x6f
	mov	r0, #0x5
	strb	r0, [r1]
	b	.L900
.L915:
	mov	r0, #0x0
	mov	r1, #0xe
	mov	r2, #0x1d
	mov	r3, #0x13
	bl	MenuDrawTextWindow
	ldr	r0, .L948
	mov	r1, #0x4
	mov	r2, #0xf
	bl	MenuPrint
	bl	sub_80084A4
	ldr	r0, .L948+0x4
	ldr	r1, [r0]
	b	.L935
.L949:
	.align	2, 0
.L948:
	.word	gMultiText_Saving
	.word	gBerryBlenderData
.L916:
	bl	sub_8007ECC
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L900	@cond_branch
	ldr	r3, .L950
	ldr	r1, [r3]
	mov	r2, #0x98
	lsl	r2, r2, #0x1
	add	r0, r1, r2
	mov	r2, #0x0
	str	r2, [r0]
	add	r1, r1, #0x6f
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	ldr	r0, [r3]
	mov	r1, #0xe2
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	str	r2, [r0]
	b	.L900
.L951:
	.align	2, 0
.L950:
	.word	gBerryBlenderData
.L918:
	bl	sub_8050CE8
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L900	@cond_branch
	mov	r0, #0x37
	bl	PlaySE
	ldr	r0, .L952
	ldr	r1, [r0]
	b	.L935
.L953:
	.align	2, 0
.L952:
	.word	gBerryBlenderData
.L920:
	ldr	r1, [r5]
	add	r1, r1, #0x6f
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	bl	sub_80084A4
	b	.L900
.L921:
	bl	sub_8007ECC
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L900	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r0, .L954
	ldr	r1, [r0]
	b	.L935
.L955:
	.align	2, 0
.L954:
	.word	gBerryBlenderData
.L923:
	ldr	r0, .L956
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0
	bne	.L900	@cond_branch
	ldr	r2, [r5]
	add	r0, r2, #0
	add	r0, r0, #0x70
	ldrh	r1, [r0]
	ldr	r0, .L956+0x4
	cmp	r1, r0
	bne	.L925	@cond_branch
	ldr	r0, .L956+0x8
	bl	SetMainCallback2
	b	.L900
.L957:
	.align	2, 0
.L956:
	.word	gPaletteFade
	.word	0x2222
	.word	sub_804E538
.L925:
	mov	r1, #0x98
	lsl	r1, r1, #0x1
	add	r0, r2, r1
	str	r3, [r0]
	add	r1, r2, #0
	b	.L935
.L927:
	ldr	r1, [r5]
	mov	r2, #0x98
	lsl	r2, r2, #0x1
	add	r1, r1, r2
	ldr	r0, [r1]
	add	r0, r0, #0x1
	str	r0, [r1]
	cmp	r0, #0x1e
	ble	.L900	@cond_branch
	bl	sub_800832C
	ldr	r1, [r5]
.L935:
	add	r1, r1, #0x6f
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L900
.L929:
	ldr	r0, .L958
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L900	@cond_branch
	ldr	r0, .L958+0x4
	bl	SetMainCallback2
.L900:
	bl	sub_805123C
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	UpdatePaletteFade
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L959:
	.align	2, 0
.L958:
	.word	gReceivedRemoteLinkPlayers
	.word	c2_exit_to_overworld_1_continue_scripts_restart_music
.Lfe45:
	.size	 sub_8050E30,.Lfe45-sub_8050E30
	.align	2, 0
	.type	 sub_80510E8,function
	.thumb_func
sub_80510E8:
	push	{lr}
	ldr	r1, .L978
	ldr	r0, [r1]
	add	r0, r0, #0x6f
	ldrb	r0, [r0]
	add	r3, r1, #0
	cmp	r0, #0xa
	bls	.LCB7386
	b	.L961	@long jump
.LCB7386:
	lsl	r0, r0, #0x2
	ldr	r1, .L978+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L979:
	.align	2, 0
.L978:
	.word	gBerryBlenderData
	.word	.L975
	.align	2, 0
	.align	2, 0
.L975:
	.word	.L962
	.word	.L966
	.word	.L967
	.word	.L968
	.word	.L961
	.word	.L961
	.word	.L961
	.word	.L961
	.word	.L961
	.word	.L970
	.word	.L971
.L962:
	ldr	r1, [r3]
	add	r0, r1, #0
	add	r0, r0, #0x7c
	ldrh	r0, [r0]
	cmp	r0, #0x1
	bhi	.L963	@cond_branch
	add	r1, r1, #0x6f
	mov	r0, #0x9
	strb	r0, [r1]
.L963:
	ldr	r2, [r3]
	add	r0, r2, #0
	add	r0, r0, #0x7c
	ldrh	r1, [r0]
	cmp	r1, #0x2
	bne	.L964	@cond_branch
	sub	r0, r0, #0xd
	strb	r1, [r0]
.L964:
	ldr	r1, [r3]
	add	r0, r1, #0
	add	r0, r0, #0x7c
	ldrh	r0, [r0]
	cmp	r0, #0x3
	bne	.L961	@cond_branch
	add	r1, r1, #0x6f
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L961
.L966:
	ldr	r0, [r3]
	add	r0, r0, #0x6f
	mov	r1, #0x3
	strb	r1, [r0]
	bl	DestroyMenuCursor
	mov	r0, #0x17
	mov	r1, #0x8
	mov	r2, #0x1c
	mov	r3, #0xd
	bl	MenuZeroFillWindowRect
	ldr	r0, .L980
	b	.L977
.L981:
	.align	2, 0
.L980:
	.word	gOtherText_CaseIsFull
.L967:
	ldr	r0, [r3]
	add	r0, r0, #0x6f
	ldrb	r1, [r0]
	add	r1, r1, #0x1
	strb	r1, [r0]
	bl	DestroyMenuCursor
	mov	r0, #0x17
	mov	r1, #0x8
	mov	r2, #0x1c
	mov	r3, #0xd
	bl	MenuZeroFillWindowRect
	ldr	r0, .L982
.L977:
	mov	r1, #0x1
	mov	r2, #0xf
	bl	MenuPrintMessage
	b	.L961
.L983:
	.align	2, 0
.L982:
	.word	gOtherText_OutOfBerries
.L968:
	bl	MenuUpdateWindowText
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L961	@cond_branch
	ldr	r0, .L984
	ldr	r0, [r0]
	add	r0, r0, #0x6f
	mov	r1, #0x9
	strb	r1, [r0]
	b	.L961
.L985:
	.align	2, 0
.L984:
	.word	gBerryBlenderData
.L970:
	mov	r0, #0x3
	bl	BeginFastPaletteFade
	ldr	r0, .L986
	ldr	r1, [r0]
	add	r1, r1, #0x6f
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L961
.L987:
	.align	2, 0
.L986:
	.word	gBerryBlenderData
.L971:
	ldr	r0, .L988
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L961	@cond_branch
	ldr	r0, [r3]
	add	r0, r0, #0x7c
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L973	@cond_branch
	ldr	r0, .L988+0x4
	bl	SetMainCallback2
	b	.L961
.L989:
	.align	2, 0
.L988:
	.word	gPaletteFade
	.word	sub_804E538
.L973:
	ldr	r0, .L990
	bl	SetMainCallback2
.L961:
	bl	sub_805123C
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	UpdatePaletteFade
	pop	{r0}
	bx	r0
.L991:
	.align	2, 0
.L990:
	.word	c2_exit_to_overworld_1_continue_scripts_restart_music
.Lfe46:
	.size	 sub_80510E8,.Lfe46-sub_80510E8
	.align	2, 0
	.type	 sub_805123C,function
	.thumb_func
sub_805123C:
	push	{r4, r5, r6, lr}
	ldr	r0, .L1038
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.LCB7591
	b	.L993	@long jump
.LCB7591:
	ldr	r4, .L1038+0x4
	ldrh	r1, [r4]
	ldr	r0, .L1038+0x8
	cmp	r1, r0
	bne	.L994	@cond_branch
	ldrh	r1, [r4, #0x8]
	ldr	r0, .L1038+0xc
	cmp	r1, r0
	bne	.L995	@cond_branch
	ldrh	r3, [r4, #0x10]
	ldr	r0, .L1038+0x10
	cmp	r3, r0
	beq	.L998	@cond_branch
	cmp	r3, r0
	bgt	.L1002	@cond_branch
	ldr	r0, .L1038+0x14
	b	.L1036
.L1039:
	.align	2, 0
.L1038:
	.word	gReceivedRemoteLinkPlayers
	.word	gRecvCmds
	.word	0x2fff
	.word	0x1111
	.word	0x9999
	.word	0x8888
.L1002:
	ldr	r0, .L1040
.L1036:
	cmp	r3, r0
	beq	.L999	@cond_branch
	ldr	r2, .L1040+0x4
	b	.L996
.L1041:
	.align	2, 0
.L1040:
	.word	0xaaaa
	.word	gBerryBlenderData
.L998:
.L999:
	ldr	r2, .L1042
	ldr	r0, [r2]
	add	r1, r0, #0
	add	r1, r1, #0x78
	strh	r3, [r1]
	ldrh	r1, [r4, #0x18]
	add	r0, r0, #0x7a
	strh	r1, [r0]
.L996:
	ldr	r0, [r2]
	add	r0, r0, #0x70
	ldr	r1, .L1042+0x4
	b	.L1035
.L1043:
	.align	2, 0
.L1042:
	.word	gBerryBlenderData
	.word	0x1111
.L995:
	ldr	r0, .L1044
	cmp	r1, r0
	bne	.L994	@cond_branch
	ldr	r0, .L1044+0x4
	ldr	r0, [r0]
	add	r0, r0, #0x70
.L1035:
	strh	r1, [r0]
.L994:
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB7695
	b	.L993	@long jump
.LCB7695:
	ldr	r2, .L1044+0x4
	ldr	r0, [r2]
	add	r0, r0, #0x70
	ldrh	r1, [r0]
	ldr	r0, .L1044+0x8
	cmp	r1, r0
	bne	.LCB7706
	b	.L993	@long jump
.LCB7706:
	ldr	r0, .L1044
	cmp	r1, r0
	bne	.LCB7711
	b	.L993	@long jump
.LCB7711:
	mov	r4, #0x0
	ldr	r6, .L1044+0xc
	add	r5, r2, #0
	b	.L1006
.L1045:
	.align	2, 0
.L1044:
	.word	0x2222
	.word	gBerryBlenderData
	.word	0x1111
	.word	0x2fff
.L1009:
	ldr	r1, .L1046
	lsl	r2, r4, #0x1
	add	r0, r2, r1
	ldrh	r0, [r0]
	cmp	r0, r6
	bne	.L1008	@cond_branch
	add	r0, r1, #0
	add	r0, r0, #0x8
	add	r0, r2, r0
	ldrh	r1, [r0]
	ldr	r0, .L1046+0x4
	cmp	r1, r0
	beq	.L1015	@cond_branch
	cmp	r1, r0
	bgt	.L1018	@cond_branch
	ldr	r0, .L1046+0x8
	b	.L1037
.L1047:
	.align	2, 0
.L1046:
	.word	gRecvCmds
	.word	0x8888
	.word	0x7779
.L1018:
	ldr	r0, .L1048
	cmp	r1, r0
	beq	.L1014	@cond_branch
	ldr	r0, .L1048+0x4
.L1037:
	cmp	r1, r0
	bne	.L1008	@cond_branch
.L1014:
.L1015:
	ldr	r0, [r5]
	add	r0, r0, #0x70
	add	r0, r0, r2
	strh	r1, [r0]
.L1008:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
.L1006:
	bl	GetLinkPlayerCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r4, r0
	bcc	.L1009	@cond_branch
	mov	r4, #0x0
	b	.L1020
.L1049:
	.align	2, 0
.L1048:
	.word	0x9999
	.word	0xaaaa
.L1022:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
.L1020:
	bl	GetLinkPlayerCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r4, r0
	bcs	.L1021	@cond_branch
	ldr	r0, .L1050
	ldr	r0, [r0]
	lsl	r1, r4, #0x1
	add	r0, r0, #0x70
	add	r0, r0, r1
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L1022	@cond_branch
.L1021:
	bl	GetLinkPlayerCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r4, r0
	bne	.L993	@cond_branch
	mov	r4, #0x0
	ldr	r5, .L1050+0x4
	b	.L1027
.L1051:
	.align	2, 0
.L1050:
	.word	gBerryBlenderData
	.word	0x7779
.L1029:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
.L1027:
	bl	GetLinkPlayerCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r4, r0
	bcs	.L1028	@cond_branch
	ldr	r0, .L1052
	ldr	r0, [r0]
	lsl	r1, r4, #0x1
	add	r0, r0, #0x70
	add	r0, r0, r1
	ldrh	r0, [r0]
	cmp	r0, r5
	beq	.L1029	@cond_branch
.L1028:
	ldr	r5, .L1052+0x4
	mov	r6, #0x0
	ldr	r0, .L1052+0x8
	strh	r0, [r5]
	bl	GetLinkPlayerCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r4, r0
	bne	.L1033	@cond_branch
	ldr	r0, .L1052+0xc
	strh	r0, [r5, #0x2]
	b	.L993
.L1053:
	.align	2, 0
.L1052:
	.word	gBerryBlenderData
	.word	gSendCmd
	.word	0x2fff
	.word	0x2222
.L1033:
	ldr	r0, .L1054
	strh	r0, [r5, #0x2]
	ldr	r0, .L1054+0x4
	ldr	r0, [r0]
	lsl	r1, r4, #0x1
	add	r0, r0, #0x70
	add	r0, r0, r1
	ldrh	r0, [r0]
	strh	r0, [r5, #0x4]
	strh	r4, [r5, #0x6]
.L993:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1055:
	.align	2, 0
.L1054:
	.word	0x1111
	.word	gBerryBlenderData
.Lfe47:
	.size	 sub_805123C,.Lfe47-sub_805123C
	.align	2, 0
	.type	 sub_8051414,function
	.thumb_func
sub_8051414:
	push	{lr}
	add	sp, sp, #0xffffffec
	add	r1, r0, #0
	mov	r0, #0xf0
	lsl	r0, r0, #0x7
	str	r0, [sp]
	mov	r0, #0xa0
	lsl	r0, r0, #0x7
	str	r0, [sp, #0x4]
	mov	r3, sp
	ldr	r0, .L1057
	ldr	r0, [r0]
	mov	ip, r0
	mov	r0, #0xa2
	lsl	r0, r0, #0x1
	add	r0, r0, ip
	ldrh	r2, [r0]
	mov	r0, #0x78
	sub	r0, r0, r2
	strh	r0, [r3, #0x8]
	mov	r0, #0xa3
	lsl	r0, r0, #0x1
	add	r0, r0, ip
	ldrh	r2, [r0]
	mov	r0, #0x50
	sub	r0, r0, r2
	strh	r0, [r3, #0xa]
	mov	r2, sp
	mov	r3, #0xa1
	lsl	r3, r3, #0x1
	add	r3, r3, ip
	ldrh	r0, [r3]
	strh	r0, [r2, #0xc]
	ldrh	r0, [r3]
	strh	r0, [r2, #0xe]
	mov	r0, ip
	add	r0, r0, #0x54
	ldrh	r0, [r0]
	strh	r0, [r2, #0x10]
	mov	r0, sp
	mov	r2, #0x1
	bl	BgAffineSet
	add	sp, sp, #0x14
	pop	{r0}
	bx	r0
.L1058:
	.align	2, 0
.L1057:
	.word	gBerryBlenderData
.Lfe48:
	.size	 sub_8051414,.Lfe48-sub_8051414
	.align	2, 0
	.type	 sub_8051474,function
	.thumb_func
sub_8051474:
	push	{lr}
	ldr	r0, .L1060
	ldr	r3, [r0]
	add	r1, r3, #0
	add	r1, r1, #0x54
	ldrh	r2, [r1]
	add	r0, r3, #0
	add	r0, r0, #0x58
	strh	r2, [r0]
	sub	r0, r0, #0x2
	ldrh	r0, [r0]
	ldrh	r2, [r1]
	add	r0, r0, r2
	strh	r0, [r1]
	mov	r1, #0xb4
	lsl	r1, r1, #0x1
	add	r0, r3, r1
	bl	sub_8051414
	pop	{r0}
	bx	r0
.L1061:
	.align	2, 0
.L1060:
	.word	gBerryBlenderData
.Lfe49:
	.size	 sub_8051474,.Lfe49-sub_8051474
	.align	2, 0
	.type	 sub_80514A4,function
	.thumb_func
sub_80514A4:
	ldr	r1, .L1063
	ldr	r0, .L1063+0x4
	ldr	r2, [r0]
	mov	r3, #0xb4
	lsl	r3, r3, #0x1
	add	r0, r2, r3
	ldrh	r0, [r0]
	strh	r0, [r1]
	add	r1, r1, #0x2
	add	r3, r3, #0x2
	add	r0, r2, r3
	ldrh	r0, [r0]
	strh	r0, [r1]
	add	r1, r1, #0x2
	add	r3, r3, #0x2
	add	r0, r2, r3
	ldrh	r0, [r0]
	strh	r0, [r1]
	add	r1, r1, #0x2
	add	r3, r3, #0x2
	add	r0, r2, r3
	ldrh	r0, [r0]
	strh	r0, [r1]
	add	r1, r1, #0x2
	add	r3, r3, #0x2
	add	r0, r2, r3
	ldr	r0, [r0]
	str	r0, [r1]
	add	r1, r1, #0x4
	add	r3, r3, #0x4
	add	r0, r2, r3
	ldr	r0, [r0]
	str	r0, [r1]
	bx	lr
.L1064:
	.align	2, 0
.L1063:
	.word	0x4000020
	.word	gBerryBlenderData
.Lfe50:
	.size	 sub_80514A4,.Lfe50-sub_80514A4
	.align	2, 0
	.type	 sub_80514F0,function
	.thumb_func
sub_80514F0:
	ldr	r1, .L1066
	ldr	r0, .L1066+0x4
	ldr	r3, [r0]
	mov	r0, #0xa2
	lsl	r0, r0, #0x1
	add	r2, r3, r0
	ldrh	r0, [r2]
	strh	r0, [r1]
	add	r1, r1, #0x2
	mov	r0, #0xa3
	lsl	r0, r0, #0x1
	add	r3, r3, r0
	ldrh	r0, [r3]
	strh	r0, [r1]
	sub	r1, r1, #0x6
	ldrh	r0, [r2]
	strh	r0, [r1]
	add	r1, r1, #0x2
	ldrh	r0, [r3]
	strh	r0, [r1]
	bx	lr
.L1067:
	.align	2, 0
.L1066:
	.word	0x4000014
	.word	gBerryBlenderData
.Lfe51:
	.size	 sub_80514F0,.Lfe51-sub_80514F0
	.align	2, 0
	.globl	sub_8051524
	.type	 sub_8051524,function
	.thumb_func
sub_8051524:
	push	{lr}
	add	r2, r0, #0
	ldrh	r0, [r2, #0x2e]
	ldrh	r1, [r2, #0x32]
	add	r0, r0, r1
	strh	r0, [r2, #0x32]
	ldrh	r0, [r2, #0x30]
	ldrh	r1, [r2, #0x34]
	add	r0, r0, r1
	strh	r0, [r2, #0x34]
	mov	r1, #0x32
	ldrsh	r0, [r2, r1]
	cmp	r0, #0
	bge	.L1069	@cond_branch
	add	r0, r0, #0x7
.L1069:
	asr	r0, r0, #0x3
	strh	r0, [r2, #0x24]
	mov	r1, #0x34
	ldrsh	r0, [r2, r1]
	cmp	r0, #0
	bge	.L1070	@cond_branch
	add	r0, r0, #0x7
.L1070:
	asr	r0, r0, #0x3
	strh	r0, [r2, #0x26]
	add	r0, r2, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1071	@cond_branch
	add	r0, r2, #0
	bl	DestroySprite
.L1071:
	pop	{r0}
	bx	r0
.Lfe52:
	.size	 sub_8051524,.Lfe52-sub_8051524
	.align	2, 0
	.type	 sub_805156C,function
	.thumb_func
sub_805156C:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	mov	r0, #0x1
	and	r1, r1, r0
	add	r0, r1, #0x1
	cmp	r0, #0
	beq	.L1074	@cond_branch
	ldr	r0, .L1080
	mov	r9, r0
	ldr	r2, .L1080+0x4
	mov	sl, r2
	add	r6, r1, #0x1
	mov	r3, #0x1f
	mov	r8, r3
	mov	r7, #0x10
.L1076:
	bl	Random
	ldr	r1, .L1080+0x8
	ldr	r4, [r1]
	add	r4, r4, #0x54
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x14
	bl	__umodsi3
	ldrh	r1, [r4]
	add	r1, r1, r0
	lsl	r1, r1, #0x10
	mov	r0, #0xff
	lsl	r0, r0, #0x10
	and	r0, r0, r1
	lsr	r2, r0, #0x10
	add	r0, r2, #0
	add	r0, r0, #0x40
	lsl	r0, r0, #0x1
	add	r0, r0, r9
	mov	r3, #0x0
	ldrsh	r1, [r0, r3]
	cmp	r1, #0
	bge	.L1077	@cond_branch
	add	r1, r1, #0x3
.L1077:
	asr	r1, r1, #0x2
	lsl	r0, r2, #0x1
	add	r0, r0, r9
	mov	r2, #0x0
	ldrsh	r0, [r0, r2]
	cmp	r0, #0
	bge	.L1078	@cond_branch
	add	r0, r0, #0x3
.L1078:
	asr	r2, r0, #0x2
	add	r1, r1, #0x78
	add	r2, r2, #0x50
	ldr	r0, .L1080+0xc
	mov	r3, #0x1
	bl	CreateSprite
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	Random
	lsl	r5, r4, #0x4
	add	r5, r5, r4
	lsl	r5, r5, #0x2
	mov	r3, sl
	add	r4, r5, r3
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, r8
	and	r0, r0, r1
	sub	r0, r7, r0
	strh	r0, [r4, #0x2e]
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r2, r8
	and	r0, r0, r2
	sub	r0, r7, r0
	strh	r0, [r4, #0x30]
	ldr	r3, .L1080+0x10
	add	r5, r5, r3
	ldr	r0, .L1080+0x14
	str	r0, [r5]
	sub	r6, r6, #0x1
	cmp	r6, #0
	bne	.L1076	@cond_branch
.L1074:
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1081:
	.align	2, 0
.L1080:
	.word	gSineTable
	.word	gSprites
	.word	gBerryBlenderData
	.word	sSpriteTemplate_82164FC
	.word	gSprites+0x1c
	.word	sub_8051524
.Lfe53:
	.size	 sub_805156C,.Lfe53-sub_805156C
	.align	2, 0
	.type	 sub_8051650,function
	.thumb_func
sub_8051650:
	push	{r4, lr}
	add	r4, r0, #0
	ldrh	r0, [r4, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x2e]
	mov	r1, #0x2e
	ldrsh	r0, [r4, r1]
	mov	r1, #0x3
	bl	__divsi3
	neg	r0, r0
	strh	r0, [r4, #0x26]
	add	r0, r4, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1083	@cond_branch
	add	r0, r4, #0
	bl	DestroySprite
.L1083:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe54:
	.size	 sub_8051650,.Lfe54-sub_8051650
	.align	2, 0
	.globl	sub_8051684
	.type	 sub_8051684,function
	.thumb_func
sub_8051684:
	push	{lr}
	add	r2, r0, #0
	ldrh	r0, [r2, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r2, #0x2e]
	mov	r1, #0x2e
	ldrsh	r0, [r2, r1]
	lsl	r0, r0, #0x1
	neg	r0, r0
	strh	r0, [r2, #0x26]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	mov	r1, #0xc
	neg	r1, r1
	cmp	r0, r1
	bge	.L1085	@cond_branch
	ldr	r0, .L1087
	strh	r0, [r2, #0x26]
.L1085:
	add	r0, r2, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1086	@cond_branch
	add	r0, r2, #0
	bl	DestroySprite
.L1086:
	pop	{r0}
	bx	r0
.L1088:
	.align	2, 0
.L1087:
	.word	0xfff4
.Lfe55:
	.size	 sub_8051684,.Lfe55-sub_8051684
	.align	2, 0
	.globl	Blender_SetBankBerryData
	.type	 Blender_SetBankBerryData,function
	.thumb_func
Blender_SetBankBerryData:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	ldr	r2, .L1090
	ldr	r3, [r2]
	lsl	r4, r0, #0x1
	add	r2, r3, #0
	add	r2, r2, #0x80
	add	r2, r2, r4
	strh	r1, [r2]
	lsl	r0, r0, #0x4
	mov	r2, #0xbe
	lsl	r2, r2, #0x1
	add	r0, r0, r2
	add	r3, r3, r0
	add	r0, r3, #0
	bl	Blender_CopyBerryData
	pop	{r4}
	pop	{r0}
	bx	r0
.L1091:
	.align	2, 0
.L1090:
	.word	gBerryBlenderData
.Lfe56:
	.size	 Blender_SetBankBerryData,.Lfe56-Blender_SetBankBerryData
	.align	2, 0
	.globl	unref_sub_80516F8
	.type	 unref_sub_80516F8,function
	.thumb_func
unref_sub_80516F8:
	push	{r4, r5, r6, lr}
	add	sp, sp, #0xfffffffc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r5, r0, #0
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L1108
	add	r4, r0, r1
	ldr	r6, .L1108+0x4
	ldrb	r0, [r6]
	cmp	r0, #0
	beq	.L1093	@cond_branch
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0
	bne	.L1094	@cond_branch
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x78
	ble	.L1095	@cond_branch
	strh	r1, [r4, #0x8]
.L1095:
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x64
	bne	.L1096	@cond_branch
	ldr	r0, .L1108+0x8
	ldr	r0, [r0]
	add	r0, r0, #0x4
	mov	r1, #0x14
	str	r1, [sp]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x10
	bl	ZeroFillWindowRect
	mov	r0, #0x4
	mov	r1, #0x4
	mov	r2, #0xa
	mov	r3, #0xc
	bl	MenuDrawTextWindow
	mov	r2, #0x0
	ldr	r6, .L1108+0xc
.L1100:
	add	r4, r2, #0x1
	lsl	r0, r4, #0x3
	sub	r0, r0, r4
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	ldr	r0, [r0]
	cmp	r0, #0
	beq	.L1101	@cond_branch
	ldr	r1, .L1108+0x10
	lsl	r0, r2, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	lsl	r2, r2, #0x19
	mov	r1, #0xa0
	lsl	r1, r1, #0x13
	add	r2, r2, r1
	lsr	r2, r2, #0x18
	mov	r1, #0x5
	bl	MenuPrint
.L1101:
	mov	r0, #0x0
	mov	r1, #0xd
	mov	r2, #0x1d
	mov	r3, #0x13
	bl	MenuDrawTextWindow
	ldr	r0, .L1108+0x14
	mov	r1, #0x1
	mov	r2, #0xf
	bl	MenuPrint
	add	r2, r4, #0
	cmp	r2, #0x2
	ble	.L1100	@cond_branch
.L1096:
	ldr	r0, .L1108+0x18
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1093	@cond_branch
	bl	sub_8007E4C
	add	r0, r5, #0
	bl	DestroyTask
	b	.L1093
.L1109:
	.align	2, 0
.L1108:
	.word	gTasks
	.word	gReceivedRemoteLinkPlayers
	.word	gBerryBlenderData
	.word	gLinkPlayers+0x4
	.word	gUnknown_08216284
	.word	gOtherText_PressAToStart
	.word	gMain
.L1094:
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	cmp	r0, #0xa
	bne	.L1105	@cond_branch
	ldr	r0, .L1110
	mov	r1, #0x3
	mov	r2, #0xa
	bl	MenuPrint
.L1105:
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x78
	ble	.L1106	@cond_branch
	mov	r0, #0x0
	strh	r0, [r4, #0x8]
.L1106:
	ldr	r0, .L1110+0x4
	ldrb	r0, [r0]
	cmp	r0, #0x4
	bls	.L1093	@cond_branch
	ldrb	r0, [r6]
	cmp	r0, #0x1
	bne	.L1093	@cond_branch
	add	r0, r5, #0
	bl	DestroyTask
.L1093:
	add	sp, sp, #0x4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1111:
	.align	2, 0
.L1110:
	.word	gOtherText_PleaseWait
	.word	byte_3002A68
.Lfe57:
	.size	 unref_sub_80516F8,.Lfe57-unref_sub_80516F8
	.align	2, 0
	.type	 sub_805181C,function
	.thumb_func
sub_805181C:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r1, #0x2e
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x1
	beq	.L1116	@cond_branch
	cmp	r0, #0x1
	bgt	.L1124	@cond_branch
	cmp	r0, #0
	beq	.L1114	@cond_branch
	b	.L1113
.L1124:
	cmp	r0, #0x2
	beq	.L1118	@cond_branch
	b	.L1113
.L1114:
	ldrh	r0, [r4, #0x30]
	add	r0, r0, #0x8
	strh	r0, [r4, #0x30]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x58
	ble	.L1113	@cond_branch
	mov	r0, #0x58
	strh	r0, [r4, #0x30]
	ldrh	r0, [r4, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x2e]
	mov	r0, #0x38
	bl	PlaySE
	b	.L1113
.L1116:
	ldrh	r0, [r4, #0x32]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x32]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x14
	ble	.L1113	@cond_branch
	ldrh	r0, [r4, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x2e]
	mov	r0, #0x0
	strh	r0, [r4, #0x32]
	b	.L1113
.L1118:
	ldrh	r0, [r4, #0x30]
	add	r0, r0, #0x4
	strh	r0, [r4, #0x30]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0xb0
	ble	.L1113	@cond_branch
	ldrh	r0, [r4, #0x34]
	add	r0, r0, #0x1
	add	r1, r0, #0
	strh	r0, [r4, #0x34]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x3
	bne	.L1120	@cond_branch
	add	r0, r4, #0
	bl	DestroySprite
	ldr	r0, .L1125
	mov	r2, #0x14
	neg	r2, r2
	mov	r1, #0x78
	mov	r3, #0x2
	bl	CreateSprite
	b	.L1113
.L1126:
	.align	2, 0
.L1125:
	.word	sSpriteTemplate_821657C
.L1120:
	mov	r0, #0x0
	strh	r0, [r4, #0x2e]
	ldr	r0, .L1127
	strh	r0, [r4, #0x30]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	StartSpriteAnim
.L1113:
	ldrh	r0, [r4, #0x30]
	strh	r0, [r4, #0x26]
	pop	{r4}
	pop	{r0}
	bx	r0
.L1128:
	.align	2, 0
.L1127:
	.word	0xfff0
.Lfe58:
	.size	 sub_805181C,.Lfe58-sub_805181C
	.align	2, 0
	.type	 sub_80518CC,function
	.thumb_func
sub_80518CC:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r1, #0x2e
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x1
	beq	.L1133	@cond_branch
	cmp	r0, #0x1
	bgt	.L1139	@cond_branch
	cmp	r0, #0
	beq	.L1131	@cond_branch
	b	.L1130
.L1139:
	cmp	r0, #0x2
	beq	.L1135	@cond_branch
	b	.L1130
.L1131:
	ldrh	r0, [r4, #0x30]
	add	r0, r0, #0x8
	strh	r0, [r4, #0x30]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x5c
	ble	.L1130	@cond_branch
	mov	r0, #0x5c
	strh	r0, [r4, #0x30]
	ldrh	r0, [r4, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x2e]
	mov	r0, #0x15
	bl	PlaySE
	b	.L1130
.L1133:
	ldrh	r0, [r4, #0x32]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x32]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x14
	ble	.L1130	@cond_branch
	ldrh	r0, [r4, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x2e]
	b	.L1130
.L1135:
	ldrh	r0, [r4, #0x30]
	add	r0, r0, #0x4
	strh	r0, [r4, #0x30]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0xb0
	ble	.L1130	@cond_branch
	ldr	r0, .L1140
	ldr	r1, [r0]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	add	r0, r4, #0
	bl	DestroySprite
.L1130:
	ldrh	r0, [r4, #0x30]
	strh	r0, [r4, #0x26]
	pop	{r4}
	pop	{r0}
	bx	r0
.L1141:
	.align	2, 0
.L1140:
	.word	gBerryBlenderData
.Lfe59:
	.size	 sub_80518CC,.Lfe59-sub_80518CC
	.align	2, 0
	.type	 sub_805194C,function
	.thumb_func
sub_805194C:
	push	{lr}
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r1, r1, #0x10
	lsr	r3, r1, #0x10
	ldr	r1, .L1144
	ldr	r1, [r1]
	mov	r2, #0xa0
	lsl	r2, r2, #0x1
	add	r1, r1, r2
	ldrh	r2, [r1]
	cmp	r2, r0
	bcs	.L1143	@cond_branch
	add	r0, r2, #0x2
	strh	r0, [r1]
	ldrh	r0, [r1]
	add	r1, r3, #0
	bl	sub_805197C
.L1143:
	pop	{r0}
	bx	r0
.L1145:
	.align	2, 0
.L1144:
	.word	gBerryBlenderData
.Lfe60:
	.size	 sub_805194C,.Lfe60-sub_805194C
	.align	2, 0
	.type	 sub_805197C,function
	.thumb_func
sub_805197C:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x10
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	ldr	r7, .L1160
	lsr	r0, r0, #0xa
	bl	__divsi3
	add	r1, r0, #0
	cmp	r1, #0
	bge	.L1147	@cond_branch
	add	r0, r1, #0x7
.L1147:
	asr	r4, r0, #0x3
	mov	r3, #0x0
	cmp	r3, r4
	bge	.L1149	@cond_branch
	ldr	r0, .L1160+0x4
	add	r6, r0, #0
	add	r0, r0, #0x10
	add	r5, r0, #0
	add	r2, r7, #0
	add	r2, r2, #0x56
	add	r0, r7, #0
	add	r3, r4, #0
.L1151:
	strh	r6, [r0, #0x16]
	strh	r5, [r2]
	add	r2, r2, #0x2
	add	r0, r0, #0x2
	sub	r3, r3, #0x1
	cmp	r3, #0
	bne	.L1151	@cond_branch
	add	r3, r4, #0
.L1149:
	add	r0, r1, #0
	cmp	r1, #0
	bge	.L1153	@cond_branch
	add	r0, r1, #0x7
.L1153:
	asr	r2, r0, #0x3
	lsl	r0, r2, #0x3
	sub	r2, r1, r0
	cmp	r2, #0
	beq	.L1154	@cond_branch
	lsl	r0, r3, #0x1
	add	r0, r0, r7
	ldr	r4, .L1160+0x8
	add	r1, r2, r4
	strh	r1, [r0, #0x16]
	add	r0, r0, #0x56
	add	r4, r4, #0x10
	add	r1, r2, r4
	strh	r1, [r0]
	add	r3, r3, #0x1
.L1154:
	cmp	r3, #0x7
	bgt	.L1156	@cond_branch
	ldr	r0, .L1160+0xc
	add	r4, r0, #0
	add	r0, r0, #0x10
	add	r2, r0, #0
	lsl	r1, r3, #0x1
	add	r0, r1, #0
	add	r0, r0, #0x56
	add	r0, r0, r7
	add	r1, r1, r7
.L1158:
	strh	r4, [r1, #0x16]
	strh	r2, [r0]
	add	r0, r0, #0x2
	add	r1, r1, #0x2
	add	r3, r3, #0x1
	cmp	r3, #0x7
	ble	.L1158	@cond_branch
.L1156:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1161:
	.align	2, 0
.L1160:
	.word	0x6006000
	.word	0x81e9
	.word	0xffff81e1
	.word	0x81e1
.Lfe61:
	.size	 sub_805197C,.Lfe61-sub_805197C
	.align	2, 0
	.type	 sub_8051A1C,function
	.thumb_func
sub_8051A1C:
	push	{lr}
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r1, .L1164
	mul	r0, r0, r1
	cmp	r0, #0
	bge	.L1163	@cond_branch
	ldr	r1, .L1164+0x4
	add	r0, r0, r1
.L1163:
	asr	r0, r0, #0x10
	pop	{r1}
	bx	r1
.L1165:
	.align	2, 0
.L1164:
	.word	0x57e40
	.word	0xffff
.Lfe62:
	.size	 sub_8051A1C,.Lfe62-sub_8051A1C
	.align	2, 0
	.type	 sub_8051A3C,function
	.thumb_func
sub_8051A3C:
	push	{r4, r5, r6, lr}
	add	sp, sp, #0xfffffff8
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	sub_8051A1C
	add	r5, r0, #0
	ldr	r0, .L1173
	ldr	r0, [r0]
	add	r1, r0, #0
	add	r1, r1, #0x5a
	ldrh	r0, [r1]
	cmp	r0, r5
	bcs	.L1167	@cond_branch
	strh	r5, [r1]
.L1167:
	mov	r6, #0x0
.L1171:
	mov	r0, sp
	add	r4, r0, r6
	add	r0, r5, #0
	mov	r1, #0xa
	bl	__umodsi3
	strb	r0, [r4]
	add	r0, r5, #0
	mov	r1, #0xa
	bl	__udivsi3
	add	r5, r0, #0
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0x4
	bls	.L1171	@cond_branch
	ldr	r2, .L1173+0x4
	mov	r0, sp
	ldr	r3, .L1173+0x8
	add	r1, r3, #0
	ldrb	r0, [r0, #0x4]
	add	r0, r1, r0
	strh	r0, [r2]
	add	r2, r2, #0x2
	mov	r0, sp
	ldrb	r0, [r0, #0x3]
	add	r0, r0, r1
	strh	r0, [r2]
	add	r2, r2, #0x2
	mov	r0, sp
	ldrb	r0, [r0, #0x2]
	add	r0, r0, r1
	strh	r0, [r2]
	add	r2, r2, #0x4
	mov	r0, sp
	ldrb	r0, [r0, #0x1]
	add	r0, r0, r1
	strh	r0, [r2]
	add	r2, r2, #0x2
	mov	r0, sp
	ldrb	r0, [r0]
	add	r1, r1, r0
	strh	r1, [r2]
	add	sp, sp, #0x8
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1174:
	.align	2, 0
.L1173:
	.word	gBerryBlenderData
	.word	0x6006458
	.word	0x8172
.Lfe63:
	.size	 sub_8051A3C,.Lfe63-sub_8051A3C
	.align	2, 0
	.type	 sub_8051AC8,function
	.thumb_func
sub_8051AC8:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	lsl	r4, r1, #0x10
	lsr	r5, r4, #0x10
	mov	r1, #0x0
	ldrsh	r0, [r6, r1]
	cmp	r0, #0
	bne	.L1176	@cond_branch
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r1, r5, #0
	bl	__umodsi3
	lsr	r1, r4, #0x11
	sub	r0, r0, r1
	strh	r0, [r6]
.L1176:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe64:
	.size	 sub_8051AC8,.Lfe64-sub_8051AC8
	.align	2, 0
	.type	 sub_8051AF4,function
	.thumb_func
sub_8051AF4:
	push	{lr}
	add	r1, r0, #0
	ldrh	r2, [r1]
	mov	r3, #0x0
	ldrsh	r0, [r1, r3]
	cmp	r0, #0
	bge	.L1178	@cond_branch
	add	r0, r2, #0x1
	strh	r0, [r1]
.L1178:
	ldrh	r2, [r1]
	mov	r3, #0x0
	ldrsh	r0, [r1, r3]
	cmp	r0, #0
	ble	.L1179	@cond_branch
	sub	r0, r2, #0x1
	strh	r0, [r1]
.L1179:
	pop	{r0}
	bx	r0
.Lfe65:
	.size	 sub_8051AF4,.Lfe65-sub_8051AF4
	.align	2, 0
	.type	 sub_8051B18,function
	.thumb_func
sub_8051B18:
	push	{r4, lr}
	ldr	r4, .L1181
	ldr	r0, [r4]
	mov	r1, #0xa2
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	bl	sub_8051AF4
	ldr	r0, [r4]
	mov	r1, #0xa3
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	bl	sub_8051AF4
	pop	{r4}
	pop	{r0}
	bx	r0
.L1182:
	.align	2, 0
.L1181:
	.word	gBerryBlenderData
.Lfe66:
	.size	 sub_8051B18,.Lfe66-sub_8051B18
	.align	2, 0
	.type	 sub_8051B40,function
	.thumb_func
sub_8051B40:
	push	{r4, r5, lr}
	add	r4, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r5, #0x8
	cmp	r1, #0x9
	bhi	.L1184	@cond_branch
	mov	r5, #0x10
.L1184:
	ldrh	r0, [r4]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	cmp	r1, #0
	bne	.L1186	@cond_branch
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r1, r5, #0
	bl	__modsi3
	lsr	r1, r5, #0x1
	sub	r0, r0, r1
	b	.L1190
.L1186:
	cmp	r1, #0
	bge	.L1188	@cond_branch
	add	r0, r0, #0x1
	strh	r0, [r4]
.L1188:
	ldrh	r1, [r4]
	mov	r2, #0x0
	ldrsh	r0, [r4, r2]
	cmp	r0, #0
	ble	.L1187	@cond_branch
	sub	r0, r1, #0x1
.L1190:
	strh	r0, [r4]
.L1187:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe67:
	.size	 sub_8051B40,.Lfe67-sub_8051B40
	.align	2, 0
	.type	 sub_8051B8C,function
	.thumb_func
sub_8051B8C:
	push	{r4, r5, lr}
	ldr	r5, .L1196
	ldr	r2, [r5]
	mov	r4, #0x98
	lsl	r4, r4, #0x1
	add	r0, r2, r4
	ldr	r1, [r0]
	cmp	r1, #0
	bne	.L1192	@cond_branch
	mov	r3, #0xa2
	lsl	r3, r3, #0x1
	add	r0, r2, r3
	strh	r1, [r0]
	add	r3, r3, #0x2
	add	r0, r2, r3
	strh	r1, [r0]
.L1192:
	ldr	r0, [r5]
	add	r2, r0, r4
	ldr	r1, [r2]
	add	r1, r1, #0x1
	str	r1, [r2]
	mov	r2, #0xa2
	lsl	r2, r2, #0x1
	add	r0, r0, r2
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	bl	sub_8051B40
	ldr	r1, [r5]
	mov	r3, #0xa3
	lsl	r3, r3, #0x1
	add	r0, r1, r3
	add	r1, r1, r4
	ldrh	r1, [r1]
	bl	sub_8051B40
	ldr	r2, [r5]
	add	r0, r2, r4
	ldr	r0, [r0]
	cmp	r0, #0x14
	beq	.L1193	@cond_branch
	mov	r0, #0x0
	b	.L1195
.L1197:
	.align	2, 0
.L1196:
	.word	gBerryBlenderData
.L1193:
	mov	r1, #0xa2
	lsl	r1, r1, #0x1
	add	r0, r2, r1
	mov	r1, #0x0
	strh	r1, [r0]
	mov	r3, #0xa3
	lsl	r3, r3, #0x1
	add	r0, r2, r3
	strh	r1, [r0]
	mov	r0, #0x1
.L1195:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe68:
	.size	 sub_8051B8C,.Lfe68-sub_8051B8C
	.align	2, 0
	.type	 sub_8051C04,function
	.thumb_func
sub_8051C04:
	ldr	r1, .L1199
	ldr	r2, [r1]
	mov	r3, #0xa2
	lsl	r3, r3, #0x1
	add	r1, r2, r3
	ldrh	r1, [r1]
	neg	r1, r1
	strh	r1, [r0, #0x24]
	add	r3, r3, #0x2
	add	r1, r2, r3
	ldrh	r1, [r1]
	neg	r1, r1
	strh	r1, [r0, #0x26]
	bx	lr
.L1200:
	.align	2, 0
.L1199:
	.word	gBerryBlenderData
.Lfe69:
	.size	 sub_8051C04,.Lfe69-sub_8051C04
	.align	2, 0
	.type	 Blender_TrySettingRecord,function
	.thumb_func
Blender_TrySettingRecord:
	push	{lr}
	ldr	r2, .L1203
	ldr	r0, .L1203+0x4
	ldr	r1, [r0]
	add	r0, r1, #0
	add	r0, r0, #0x88
	ldrb	r0, [r0]
	sub	r0, r0, #0x2
	lsl	r0, r0, #0x1
	ldr	r3, .L1203+0x8
	add	r2, r2, r3
	add	r2, r0, r2
	add	r1, r1, #0x5a
	ldrh	r1, [r1]
	ldrh	r0, [r2]
	cmp	r0, r1
	bcs	.L1202	@cond_branch
	strh	r1, [r2]
.L1202:
	pop	{r0}
	bx	r0
.L1204:
	.align	2, 0
.L1203:
	.word	gSaveBlock1
	.word	gBerryBlenderData
	.word	0x96c
.Lfe70:
	.size	 Blender_TrySettingRecord,.Lfe70-Blender_TrySettingRecord
	.align	2, 0
	.type	 Blender_PrintBlendingResults,function
	.thumb_func
Blender_PrintBlendingResults:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #0xffffffcc
	ldr	r1, .L1238
	ldr	r0, [r1]
	ldrb	r0, [r0]
	add	r2, r1, #0
	cmp	r0, #0x6
	bls	.LCB9407
	b	.L1206	@long jump
.LCB9407:
	lsl	r0, r0, #0x2
	ldr	r1, .L1238+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1239:
	.align	2, 0
.L1238:
	.word	gBerryBlenderData
	.word	.L1234
	.align	2, 0
	.align	2, 0
.L1234:
	.word	.L1207
	.word	.L1208
	.word	.L1210
	.word	.L1217
	.word	.L1223
	.word	.L1225
	.word	.L1232
.L1207:
	ldr	r1, [r2]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	ldr	r0, [r2]
	mov	r1, #0x98
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	mov	r1, #0x11
	str	r1, [r0]
	b	.L1206
.L1208:
	ldr	r1, [r2]
	mov	r0, #0x98
	lsl	r0, r0, #0x1
	add	r2, r1, r0
	ldr	r0, [r2]
	sub	r0, r0, #0xa
	str	r0, [r2]
	cmp	r0, #0
	blt	.LCB9452
	b	.L1206	@long jump
.LCB9452:
	mov	r0, #0x0
	str	r0, [r2]
	b	.L1237
.L1210:
	ldr	r1, [r2]
	mov	r2, #0x98
	lsl	r2, r2, #0x1
	add	r1, r1, r2
	ldr	r0, [r1]
	add	r0, r0, #0x1
	str	r0, [r1]
	cmp	r0, #0x14
	bgt	.LCB9469
	b	.L1206	@long jump
.LCB9469:
	mov	r6, #0x0
.L1215:
	ldr	r4, .L1240
	ldr	r0, [r4]
	add	r0, r0, #0x50
	add	r0, r0, r6
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L1240+0x4
	add	r0, r0, r1
	bl	DestroySprite
	add	r0, r6, #0x1
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	cmp	r6, #0x2
	bls	.L1215	@cond_branch
	ldr	r1, [r4]
	mov	r0, #0x98
	lsl	r0, r0, #0x1
	add	r2, r1, r0
	mov	r0, #0x0
	str	r0, [r2]
	b	.L1237
.L1241:
	.align	2, 0
.L1240:
	.word	gBerryBlenderData
	.word	gSprites
.L1217:
	mov	r0, #0x4
	mov	r1, #0x2
	mov	r2, #0x19
	mov	r3, #0x11
	bl	MenuDrawTextWindow
	ldr	r0, .L1242
	mov	r1, #0x5
	mov	r2, #0x3
	mov	r3, #0xa0
	bl	sub_8072BD8
	mov	r6, #0x0
	ldr	r1, .L1242+0x4
	ldr	r0, [r1]
	add	r0, r0, #0x88
	add	r2, sp, #0xc
	mov	r9, r2
	mov	r2, sp
	add	r2, r2, #0x16
	str	r2, [sp, #0x30]
	ldrb	r0, [r0]
	cmp	r6, r0
	bcs	.L1219	@cond_branch
	mov	r8, r1
	ldr	r0, .L1242+0x8
	mov	sl, r0
.L1221:
	mov	r1, r8
	ldr	r2, [r1]
	mov	r1, #0xb2
	lsl	r1, r1, #0x1
	add	r0, r2, r1
	add	r0, r0, r6
	ldrb	r5, [r0]
	mov	r7, r9
	lsl	r1, r5, #0x4
	add	r1, r1, r2
	mov	r2, #0xbf
	lsl	r2, r2, #0x1
	add	r1, r1, r2
	add	r0, r7, #0
	bl	StringCopy
	lsl	r4, r5, #0x3
	sub	r4, r4, r5
	lsl	r4, r4, #0x2
	mov	r1, sl
	add	r0, r4, r1
	ldrb	r1, [r0, #0x1a]
	add	r0, r7, #0
	bl	ConvertInternationalString
	add	r0, r7, #0
	ldr	r1, .L1242+0xc
	bl	StringAppend
	mov	r2, r8
	ldr	r0, [r2]
	add	r7, r0, #0
	add	r7, r7, #0xab
	add	r5, r6, #0x1
	add	r0, r7, #0
	add	r1, r5, #0
	bl	ConvertIntToDecimalString
	add	r7, r0, #0
	mov	r1, #0x0
	strb	r1, [r7]
	mov	r0, #0xad
	strb	r0, [r7, #0x1]
	strb	r1, [r7, #0x2]
	add	r7, r7, #0x3
	ldr	r0, .L1242+0x10
	add	r4, r4, r0
	add	r0, r7, #0
	add	r1, r4, #0
	mov	r2, #0x58
	mov	r3, #0x0
	bl	sub_8072C74
	add	r7, r0, #0
	add	r1, sp, #0xc
	mov	r2, #0x9d
	mov	r3, #0x0
	bl	sub_8072C74
	mov	r2, r8
	ldr	r1, [r2]
	add	r0, r1, #0
	add	r0, r0, #0xab
	ldr	r3, .L1242+0x14
	add	r1, r1, #0x88
	ldrb	r2, [r1]
	add	r3, r2, r3
	ldr	r1, .L1242+0x18
	add	r2, r2, r1
	ldrb	r1, [r2]
	mov	r2, r6
	mul	r2, r2, r1
	ldrb	r3, [r3]
	add	r2, r2, r3
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r1, #0x5
	bl	MenuPrint
	lsl	r5, r5, #0x10
	lsr	r6, r5, #0x10
	mov	r1, r8
	ldr	r0, [r1]
	add	r0, r0, #0x88
	ldrb	r0, [r0]
	cmp	r6, r0
	bcc	.L1221	@cond_branch
.L1219:
	ldr	r6, .L1242+0x4
	ldr	r0, [r6]
	add	r0, r0, #0x5a
	ldrh	r0, [r0]
	mov	r1, #0x64
	bl	__umodsi3
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r0, r9
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	ldr	r0, [r6]
	add	r7, r0, #0
	add	r7, r7, #0xab
	ldr	r1, .L1242+0x1c
	add	r0, r7, #0
	bl	StringCopy
	add	r7, r0, #0
	ldr	r0, [r6]
	add	r0, r0, #0x5a
	ldrh	r0, [r0]
	mov	r1, #0x64
	bl	__udivsi3
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r7, #0
	mov	r2, #0x79
	mov	r3, #0x1
	bl	sub_8072C14
	add	r7, r0, #0
	mov	r1, #0x0
	strb	r1, [r7]
	mov	r0, #0xad
	strb	r0, [r7, #0x1]
	strb	r1, [r7, #0x2]
	add	r7, r7, #0x3
	add	r0, r7, #0
	mov	r1, r9
	mov	r2, #0x8e
	mov	r3, #0x1
	bl	sub_8072C74
	add	r7, r0, #0
	ldr	r1, .L1242+0x20
	bl	StringCopy
	ldr	r0, [r6]
	add	r0, r0, #0xab
	mov	r1, #0x5
	mov	r2, #0xd
	bl	MenuPrint
	ldr	r0, [r6]
	mov	r2, #0x96
	lsl	r2, r2, #0x1
	add	r0, r0, r2
	ldr	r0, [r0]
	mov	r1, #0x3c
	bl	__udivsi3
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	add	r0, r4, #0
	mov	r1, #0x3c
	bl	__umodsi3
	add	r5, r0, #0
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	add	r0, r4, #0
	mov	r1, #0x3c
	bl	__udivsi3
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r0, r9
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	ldr	r0, [sp, #0x30]
	add	r1, r5, #0
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	ldr	r0, [r6]
	add	r7, r0, #0
	add	r7, r7, #0xab
	ldr	r1, .L1242+0x24
	add	r0, r7, #0
	bl	StringCopy
	add	r7, r0, #0
	mov	r1, r9
	mov	r2, #0x66
	mov	r3, #0x1
	bl	sub_8072C74
	add	r7, r0, #0
	ldr	r1, .L1242+0x28
	bl	StringAppend
	add	r7, r0, #0
	ldr	r1, [sp, #0x30]
	mov	r2, #0x88
	mov	r3, #0x1
	bl	sub_8072C74
	add	r7, r0, #0
	ldr	r1, .L1242+0x2c
	bl	StringCopy
	ldr	r0, [r6]
	add	r0, r0, #0xab
	mov	r1, #0x5
	mov	r2, #0xf
	bl	MenuPrint
	ldr	r1, [r6]
	mov	r0, #0x98
	lsl	r0, r0, #0x1
	add	r2, r1, r0
	mov	r0, #0x0
	str	r0, [r2]
	b	.L1237
.L1243:
	.align	2, 0
.L1242:
	.word	gOtherText_ResultsOfBlending
	.word	gBerryBlenderData
	.word	gLinkPlayers
	.word	gOtherText_Berry
	.word	gLinkPlayers+0x8
	.word	gUnknown_082165E9
	.word	gUnknown_082165EE
	.word	gOtherText_MaxSpeed
	.word	gOtherText_RPM
	.word	gOtherText_RequiredTime
	.word	gOtherText_Min
	.word	gOtherText_Sec
.L1223:
	ldr	r0, .L1244
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1206	@cond_branch
	ldr	r1, [r2]
	b	.L1237
.L1245:
	.align	2, 0
.L1244:
	.word	gMain
.L1225:
	bl	MenuZeroFillScreen
	mov	r0, #0x0
	mov	r1, #0xe
	mov	r2, #0x1d
	mov	r3, #0x13
	bl	MenuDrawTextWindow
	mov	r6, #0x0
	add	r5, sp, #0x28
	ldr	r0, .L1246
	ldr	r0, [r0]
	add	r3, r0, #0
	add	r3, r3, #0x80
	add	r2, sp, #0x20
.L1229:
	lsl	r1, r6, #0x1
	add	r0, r3, r1
	ldrh	r0, [r0]
	cmp	r0, #0
	beq	.L1228	@cond_branch
	add	r1, r2, r1
	sub	r0, r0, #0x85
	strh	r0, [r1]
.L1228:
	add	r0, r6, #0x1
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	cmp	r6, #0x3
	bls	.L1229	@cond_branch
	bl	sub_8050760
	ldr	r4, .L1246
	ldr	r3, [r4]
	mov	r1, #0xbe
	lsl	r1, r1, #0x1
	add	r0, r3, r1
	add	r1, r3, #0
	add	r1, r1, #0x88
	ldrb	r2, [r1]
	sub	r1, r1, #0x2e
	ldrh	r1, [r1]
	str	r1, [sp]
	add	r1, r5, #0
	add	r3, sp, #0x4
	bl	Blender_CalculatePokeblock
	ldr	r1, [r4]
	add	r1, r1, #0xab
	add	r0, r5, #0
	bl	Blender_PrintMadePokeblockString
	ldr	r0, .L1246+0x4
	mov	r1, #0x6
	bl	CreateTask
	ldr	r0, [r4]
	add	r0, r0, #0xab
	mov	r1, #0x1
	mov	r2, #0xf
	bl	MenuPrintMessage
	ldr	r0, .L1246+0x8
	ldrh	r0, [r0]
	mov	r1, #0x1
	bl	RemoveBagItem
	add	r0, r5, #0
	bl	sub_810CA34
	ldr	r1, [r4]
.L1237:
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L1206
.L1247:
	.align	2, 0
.L1246:
	.word	gBerryBlenderData
	.word	sub_8052BD0
	.word	gScriptItemId
.L1232:
	bl	MenuUpdateWindowText
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L1206	@cond_branch
	bl	Blender_TrySettingRecord
	mov	r0, #0x1
	b	.L1236
.L1206:
	mov	r0, #0x0
.L1236:
	add	sp, sp, #0x34
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe71:
	.size	 Blender_PrintBlendingResults,.Lfe71-Blender_PrintBlendingResults
	.align	2, 0
	.type	 Blender_PrintMadePokeblockString,function
	.thumb_func
Blender_PrintMadePokeblockString:
	push	{r4, r5, r6, lr}
	add	sp, sp, #0xfffffff4
	add	r5, r0, #0
	add	r6, r1, #0
	mov	r0, #0xff
	strb	r0, [r6]
	ldr	r1, .L1249
	ldrb	r0, [r5]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	add	r0, r6, #0
	bl	StringCopy
	ldr	r1, .L1249+0x4
	add	r0, r6, #0
	bl	StringAppend
	ldr	r1, .L1249+0x8
	add	r0, r6, #0
	bl	StringAppend
	add	r0, r5, #0
	bl	sub_810C9B0
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r5, #0
	bl	sub_810C9E8
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	ldr	r1, .L1249+0xc
	add	r0, r6, #0
	bl	StringAppend
	mov	r0, sp
	add	r1, r4, #0
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	add	r0, r6, #0
	mov	r1, sp
	bl	StringAppend
	ldr	r1, .L1249+0x10
	add	r0, r6, #0
	bl	StringAppend
	mov	r0, sp
	add	r1, r5, #0
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	add	r0, r6, #0
	mov	r1, sp
	bl	StringAppend
	ldr	r1, .L1249+0x14
	add	r0, r6, #0
	bl	StringAppend
	ldr	r1, .L1249+0x18
	add	r0, r6, #0
	bl	StringAppend
	add	sp, sp, #0xc
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1250:
	.align	2, 0
.L1249:
	.word	gPokeblockNames
	.word	gOtherText_PokeBlockMade
	.word	sNewLineString_0
	.word	gOtherText_BlockLevelIs
	.word	gOtherText_BlockFeelIs
	.word	gOtherText_Period
	.word	gUnknown_08216249
.Lfe72:
	.size	 Blender_PrintMadePokeblockString,.Lfe72-Blender_PrintMadePokeblockString
	.align	2, 0
	.type	 Blender_SortBasedOnPoints,function
	.thumb_func
Blender_SortBasedOnPoints:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	mov	r9, r0
	mov	ip, r2
	lsl	r1, r1, #0x18
	lsr	r7, r1, #0x18
	mov	r0, #0x0
	cmp	r0, r7
	bge	.L1253	@cond_branch
.L1255:
	mov	r5, #0x0
	add	r1, r0, #0x1
	mov	r8, r1
	cmp	r5, r7
	bge	.L1254	@cond_branch
	mov	r1, r9
	add	r6, r1, r0
.L1259:
	ldrb	r4, [r6]
	lsl	r1, r4, #0x2
	add	r1, r1, ip
	mov	r0, r9
	add	r2, r0, r5
	ldrb	r3, [r2]
	lsl	r0, r3, #0x2
	add	r0, r0, ip
	ldr	r1, [r1]
	ldr	r0, [r0]
	cmp	r1, r0
	bls	.L1258	@cond_branch
	strb	r3, [r6]
	strb	r4, [r2]
.L1258:
	add	r5, r5, #0x1
	cmp	r5, r7
	blt	.L1259	@cond_branch
.L1254:
	mov	r0, r8
	cmp	r0, r7
	blt	.L1255	@cond_branch
.L1253:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe73:
	.size	 Blender_SortBasedOnPoints,.Lfe73-Blender_SortBasedOnPoints
	.align	2, 0
	.type	 Blender_SortScores,function
	.thumb_func
Blender_SortScores:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #0xffffffe8
	mov	r5, #0x0
	ldr	r1, .L1280
	ldr	r0, [r1]
	add	r0, r0, #0x88
	mov	sl, r1
	mov	r2, sp
	add	r2, r2, #0x4
	str	r2, [sp, #0x14]
	b	.L1279
.L1281:
	.align	2, 0
.L1280:
	.word	gBerryBlenderData
.L1267:
	mov	r4, sp
	add	r0, r4, r5
	strb	r5, [r0]
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r0, [r1]
	add	r0, r0, #0x88
.L1279:
	ldrb	r0, [r0]
	cmp	r5, r0
	bcc	.L1267	@cond_branch
	mov	r5, #0x0
	mov	r1, sl
	ldr	r0, [r1]
	add	r1, r0, #0
	add	r1, r1, #0x88
	ldrb	r2, [r1]
	cmp	r5, r2
	bcs	.L1270	@cond_branch
	ldr	r4, [sp, #0x14]
	mov	r9, r4
	mov	r2, #0xa6
	lsl	r2, r2, #0x1
	add	r2, r2, r0
	mov	r8, r2
	mov	ip, r1
	mov	r4, #0xa7
	lsl	r4, r4, #0x1
	add	r7, r0, r4
	mov	r1, #0xa8
	lsl	r1, r1, #0x1
	add	r6, r0, r1
.L1272:
	lsl	r4, r5, #0x2
	add	r4, r4, r9
	lsl	r3, r5, #0x1
	add	r3, r3, r5
	lsl	r3, r3, #0x1
	mov	r2, r8
	add	r0, r2, r3
	ldrh	r2, [r0]
	lsl	r0, r2, #0x5
	sub	r0, r0, r2
	lsl	r1, r0, #0x6
	sub	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	lsl	r1, r1, #0x6
	str	r1, [r4]
	add	r0, r7, r3
	ldrh	r2, [r0]
	lsl	r0, r2, #0x5
	sub	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	str	r1, [r4]
	mov	r0, #0xfa
	lsl	r0, r0, #0x2
	add	r1, r1, r0
	add	r3, r6, r3
	ldrh	r0, [r3]
	sub	r1, r1, r0
	str	r1, [r4]
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r1, ip
	ldrb	r1, [r1]
	cmp	r5, r1
	bcc	.L1272	@cond_branch
.L1270:
	mov	r2, sl
	ldr	r0, [r2]
	add	r0, r0, #0x88
	ldrb	r1, [r0]
	mov	r0, sp
	ldr	r2, [sp, #0x14]
	bl	Blender_SortBasedOnPoints
	mov	r5, #0x0
	mov	r4, sl
	ldr	r0, [r4]
	add	r0, r0, #0x88
	ldrb	r0, [r0]
	cmp	r5, r0
	bcs	.L1275	@cond_branch
	mov	r2, sl
	mov	r3, #0xb2
	lsl	r3, r3, #0x1
.L1277:
	ldr	r1, [r2]
	add	r1, r1, r3
	add	r1, r1, r5
	mov	r4, sp
	add	r0, r4, r5
	ldrb	r0, [r0]
	strb	r0, [r1]
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r0, [r2]
	add	r0, r0, #0x88
	ldrb	r0, [r0]
	cmp	r5, r0
	bcc	.L1277	@cond_branch
.L1275:
	add	sp, sp, #0x18
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe74:
	.size	 Blender_SortScores,.Lfe74-Blender_SortScores
	.align	2, 0
	.type	 Blender_PrintBlendingRanking,function
	.thumb_func
Blender_PrintBlendingRanking:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	ldr	r1, .L1305
	ldr	r0, [r1]
	ldrb	r0, [r0]
	add	r2, r1, #0
	cmp	r0, #0x6
	bls	.LCB10280
	b	.L1283	@long jump
.LCB10280:
	lsl	r0, r0, #0x2
	ldr	r1, .L1305+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1306:
	.align	2, 0
.L1305:
	.word	gBerryBlenderData
	.word	.L1300
	.align	2, 0
	.align	2, 0
.L1300:
	.word	.L1284
	.word	.L1285
	.word	.L1287
	.word	.L1289
	.word	.L1295
	.word	.L1297
	.word	.L1299
.L1284:
	ldr	r1, [r2]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	ldr	r0, [r2]
	mov	r1, #0x98
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	mov	r1, #0xff
	str	r1, [r0]
	b	.L1283
.L1285:
	ldr	r1, [r2]
	mov	r0, #0x98
	lsl	r0, r0, #0x1
	add	r2, r1, r0
	ldr	r0, [r2]
	sub	r0, r0, #0xa
	str	r0, [r2]
	cmp	r0, #0
	blt	.LCB10325
	b	.L1283	@long jump
.LCB10325:
	mov	r0, #0x0
	str	r0, [r2]
	b	.L1303
.L1287:
	ldr	r1, [r2]
	mov	r0, #0x98
	lsl	r0, r0, #0x1
	add	r2, r1, r0
	ldr	r0, [r2]
	add	r0, r0, #0x1
	str	r0, [r2]
	cmp	r0, #0x14
	bgt	.LCB10342
	b	.L1283	@long jump
.LCB10342:
	mov	r0, #0x0
	str	r0, [r2]
	b	.L1303
.L1289:
	mov	r0, #0x4
	mov	r1, #0x2
	mov	r2, #0x19
	mov	r3, #0x11
	bl	MenuDrawTextWindow
	ldr	r0, .L1307
	mov	r1, #0x5
	mov	r2, #0x3
	mov	r3, #0xa0
	bl	sub_8072BD8
	ldr	r6, .L1307+0x4
	add	r0, r6, #0
	mov	r1, #0x8c
	mov	r2, #0x34
	mov	r3, #0x0
	bl	CreateSprite
	ldr	r7, .L1307+0x8
	ldr	r1, [r7]
	add	r1, r1, #0x50
	strb	r0, [r1]
	ldr	r1, .L1307+0xc
	mov	r8, r1
	ldr	r2, [r7]
	add	r2, r2, #0x50
	ldrb	r1, [r2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	mov	r5, r8
	add	r5, r5, #0x1c
	add	r0, r0, r5
	ldr	r4, .L1307+0x10
	str	r4, [r0]
	ldrb	r1, [r2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r8
	mov	r1, #0x3
	bl	StartSpriteAnim
	add	r0, r6, #0
	mov	r1, #0xa4
	mov	r2, #0x34
	mov	r3, #0x0
	bl	CreateSprite
	ldr	r1, [r7]
	add	r1, r1, #0x51
	strb	r0, [r1]
	ldr	r0, [r7]
	add	r0, r0, #0x51
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	str	r4, [r0]
	add	r0, r6, #0
	mov	r1, #0xbc
	mov	r2, #0x34
	mov	r3, #0x0
	bl	CreateSprite
	ldr	r1, [r7]
	add	r1, r1, #0x52
	strb	r0, [r1]
	ldr	r2, [r7]
	add	r2, r2, #0x52
	ldrb	r1, [r2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	str	r4, [r0]
	ldrb	r1, [r2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r8
	mov	r1, #0x1
	bl	StartSpriteAnim
	bl	Blender_SortScores
	mov	r2, #0x0
	mov	r8, r2
	b	.L1304
.L1308:
	.align	2, 0
.L1307:
	.word	gOtherText_Ranking
	.word	sSpriteTemplate_821645C
	.word	gBerryBlenderData
	.word	gSprites
	.word	SpriteCallbackDummy
.L1293:
	ldr	r1, [r7]
	mov	r2, #0xb2
	lsl	r2, r2, #0x1
	add	r0, r1, r2
	add	r0, r0, r8
	ldrb	r5, [r0]
	add	r2, r1, #0
	add	r2, r2, #0xab
	mov	r0, #0xfc
	strb	r0, [r2]
	mov	r0, #0x13
	strb	r0, [r2, #0x1]
	mov	r0, #0x4
	strb	r0, [r2, #0x2]
	add	r2, r2, #0x3
	mov	r6, r8
	add	r6, r6, #0x1
	add	r0, r2, #0
	add	r1, r6, #0
	bl	ConvertIntToDecimalString
	add	r2, r0, #0
	mov	r1, #0x0
	strb	r1, [r2]
	mov	r0, #0xad
	strb	r0, [r2, #0x1]
	strb	r1, [r2, #0x2]
	add	r2, r2, #0x3
	lsl	r1, r5, #0x3
	sub	r1, r1, r5
	lsl	r1, r1, #0x2
	ldr	r0, .L1309
	add	r1, r1, r0
	add	r0, r2, #0
	bl	StringCopy
	add	r2, r0, #0
	ldr	r0, [r7]
	lsl	r4, r5, #0x1
	add	r4, r4, r5
	lsl	r4, r4, #0x1
	mov	r1, #0xa6
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	add	r0, r0, r4
	ldrh	r1, [r0]
	add	r0, r2, #0
	mov	r2, #0x6c
	mov	r3, #0x1
	bl	sub_8072C14
	add	r2, r0, #0
	ldr	r0, [r7]
	mov	r1, #0xa7
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	add	r0, r0, r4
	ldrh	r1, [r0]
	add	r0, r2, #0
	mov	r2, #0x84
	mov	r3, #0x1
	bl	sub_8072C14
	add	r2, r0, #0
	ldr	r0, [r7]
	mov	r1, #0xa8
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	add	r0, r0, r4
	ldrh	r1, [r0]
	add	r0, r2, #0
	mov	r2, #0x9c
	mov	r3, #0x1
	bl	sub_8072C14
	ldr	r1, [r7]
	add	r0, r1, #0
	add	r0, r0, #0xab
	ldr	r2, .L1309+0x4
	add	r1, r1, #0x88
	ldrb	r1, [r1]
	add	r1, r1, r2
	ldrb	r1, [r1]
	mov	r2, r8
	mul	r2, r2, r1
	add	r2, r2, #0x8
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r1, #0x5
	bl	MenuPrint
	lsl	r6, r6, #0x10
	lsr	r6, r6, #0x10
	mov	r8, r6
.L1304:
	ldr	r0, [r7]
	add	r0, r0, #0x88
	ldrb	r0, [r0]
	cmp	r8, r0
	bcc	.L1293	@cond_branch
	ldr	r0, .L1309+0x8
	ldr	r1, [r0]
	mov	r0, #0x98
	lsl	r0, r0, #0x1
	add	r2, r1, r0
	mov	r0, #0x0
	str	r0, [r2]
	b	.L1303
.L1310:
	.align	2, 0
.L1309:
	.word	gLinkPlayers+0x8
	.word	gUnknown_082165F3
	.word	gBerryBlenderData
.L1295:
	ldr	r2, [r2]
	mov	r0, #0x98
	lsl	r0, r0, #0x1
	add	r1, r2, r0
	ldr	r0, [r1]
	add	r0, r0, #0x1
	str	r0, [r1]
	cmp	r0, #0x14
	ble	.L1283	@cond_branch
	ldrb	r0, [r2]
	add	r0, r0, #0x1
	strb	r0, [r2]
	b	.L1283
.L1297:
	ldr	r0, .L1311
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1283	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L1311+0x4
	ldr	r1, [r0]
.L1303:
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L1283
.L1312:
	.align	2, 0
.L1311:
	.word	gMain
	.word	gBerryBlenderData
.L1299:
	ldr	r1, [r2]
	mov	r0, #0x0
	strb	r0, [r1]
	mov	r0, #0x1
	b	.L1302
.L1283:
	mov	r0, #0x0
.L1302:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe75:
	.size	 Blender_PrintBlendingRanking,.Lfe75-Blender_PrintBlendingRanking
	.align	2, 0
	.globl	unref_sub_80524BC
	.type	 unref_sub_80524BC,function
	.thumb_func
unref_sub_80524BC:
	push	{r4, lr}
	bl	ResetSpriteData
	bl	FreeAllSpritePalettes
	bl	ResetTasks
	ldr	r0, .L1314
	bl	SetVBlankCallback
	ldr	r4, .L1314+0x4
	add	r0, r4, #0
	bl	SetUpWindowConfig
	add	r0, r4, #0
	bl	InitMenuWindow
	ldr	r0, .L1314+0x8
	ldrh	r0, [r0, #0x20]
	bl	SeedRng
	mov	r1, #0x80
	lsl	r1, r1, #0x13
	mov	r2, #0xaa
	lsl	r2, r2, #0x5
	add	r0, r2, #0
	strh	r0, [r1]
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	UpdatePaletteFade
	ldr	r1, .L1314+0xc
	mov	r0, #0xfa
	lsl	r0, r0, #0x5
	strh	r0, [r1, #0x1a]
	ldrb	r0, [r1, #0x10]
	add	r0, r0, #0x1
	strb	r0, [r1, #0x10]
	ldr	r0, .L1314+0x10
	bl	SetMainCallback2
	pop	{r4}
	pop	{r0}
	bx	r0
.L1315:
	.align	2, 0
.L1314:
	.word	VBlankCB1_BerryBlender
	.word	gWindowConfig_81E6CE4
	.word	gMain
	.word	sBlenderDebug
	.word	sub_8052AF8
.Lfe76:
	.size	 unref_sub_80524BC,.Lfe76-unref_sub_80524BC
	.align	2, 0
	.type	 BlenderDebug_PrintBerryData,function
	.thumb_func
BlenderDebug_PrintBerryData:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #0xffffff68
	ldr	r1, .L1325
	mov	r0, sp
	bl	StringCopy
	mov	r0, sp
	mov	r1, #0x2
	mov	r2, #0x0
	bl	MenuPrint
	ldr	r4, .L1325+0x4
	mov	r1, #0x1a
	ldrsh	r0, [r4, r1]
	mov	r1, #0x64
	bl	__divsi3
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	mov	r0, sp
	mov	r2, #0x2
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	mov	r0, sp
	mov	r1, #0x6
	mov	r2, #0x0
	bl	MenuPrint
	mov	r6, #0x0
	mov	r2, sp
	add	r2, r2, #0x3
	str	r2, [sp, #0x84]
	mov	r3, sp
	add	r3, r3, #0x6
	str	r3, [sp, #0x88]
	mov	r0, sp
	add	r0, r0, #0x9
	str	r0, [sp, #0x8c]
	mov	r1, sp
	add	r1, r1, #0xc
	str	r1, [sp, #0x90]
	add	r2, r2, #0xc
	str	r2, [sp, #0x94]
	mov	r8, r4
	mov	r7, sp
	ldr	r3, .L1325+0x8
	mov	r9, r3
	ldr	r0, .L1325+0xc
	mov	sl, r0
.L1320:
	mov	r1, r8
	mov	r0, #0x0
	ldrsb	r0, [r1, r0]
	cmp	r0, r6
	bne	.L1321	@cond_branch
	mov	r0, #0xef
	strb	r0, [r7]
	mov	r0, r8
	add	r0, r0, #0x1
	add	r0, r6, r0
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	add	r0, r0, #0x85
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, sp
	add	r1, r1, #0x1
	bl	CopyItemName
	b	.L1322
.L1326:
	.align	2, 0
.L1325:
	.word	sText_BPM
	.word	sBlenderDebug
	.word	gBerries
	.word	sText_Space
.L1321:
	mov	r0, r8
	add	r0, r0, #0x1
	add	r0, r6, r0
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	add	r0, r0, #0x85
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, sp
	bl	CopyItemName
	mov	r0, #0x0
	strb	r0, [r7, #0x6]
	mov	r0, #0xff
	strb	r0, [r7, #0x7]
.L1322:
	lsl	r5, r6, #0x1
	add	r5, r5, r6
	add	r5, r5, #0x3
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	mov	r0, sp
	mov	r1, #0x2
	add	r2, r5, #0
	bl	MenuPrint
	mov	r4, r8
	add	r4, r4, #0x1
	add	r4, r6, r4
	mov	r1, #0x0
	ldrsb	r1, [r4, r1]
	lsl	r0, r1, #0x3
	sub	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r9
	ldrb	r1, [r0, #0x15]
	mov	r0, sp
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	mov	r0, sp
	mov	r1, sl
	bl	StringAppend
	mov	r1, #0x0
	ldrsb	r1, [r4, r1]
	lsl	r0, r1, #0x3
	sub	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r9
	ldrb	r1, [r0, #0x16]
	ldr	r0, [sp, #0x84]
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	mov	r0, sp
	mov	r1, sl
	bl	StringAppend
	mov	r1, #0x0
	ldrsb	r1, [r4, r1]
	lsl	r0, r1, #0x3
	sub	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r9
	ldrb	r1, [r0, #0x17]
	ldr	r0, [sp, #0x88]
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	mov	r0, sp
	mov	r1, sl
	bl	StringAppend
	mov	r1, #0x0
	ldrsb	r1, [r4, r1]
	lsl	r0, r1, #0x3
	sub	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r9
	ldrb	r1, [r0, #0x18]
	ldr	r0, [sp, #0x8c]
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	mov	r0, sp
	mov	r1, sl
	bl	StringAppend
	mov	r1, #0x0
	ldrsb	r1, [r4, r1]
	lsl	r0, r1, #0x3
	sub	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r9
	ldrb	r1, [r0, #0x19]
	ldr	r0, [sp, #0x90]
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	mov	r0, sp
	mov	r1, sl
	bl	StringAppend
	mov	r1, #0x0
	ldrsb	r1, [r4, r1]
	lsl	r0, r1, #0x3
	sub	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r9
	ldrb	r1, [r0, #0x1a]
	ldr	r0, [sp, #0x94]
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	mov	r2, #0x1
	neg	r2, r2
	add	r3, sp, #0x80
	strb	r2, [r3]
	mov	r0, #0xff
	strb	r0, [r7, #0x11]
	mov	r0, sp
	mov	r1, #0x7
	add	r2, r5, #0
	bl	MenuPrint
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0x3
	bhi	.LCB10931
	b	.L1320	@long jump
.LCB10931:
	mov	r1, r8
	ldrb	r0, [r1, #0x8]
	cmp	r0, #0
	beq	.L1324	@cond_branch
	ldr	r1, .L1327
	mov	r2, r8
	ldrb	r0, [r2, #0x8]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	mov	r0, sp
	bl	StringCopy
	mov	r0, sp
	mov	r1, #0x2
	mov	r2, #0xf
	bl	MenuPrint
	mov	r3, r8
	ldrb	r1, [r3, #0x11]
	mov	r0, sp
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToHexStringN
	ldr	r4, .L1327+0x4
	mov	r0, sp
	add	r1, r4, #0
	bl	StringAppend
	mov	r0, r8
	ldrb	r1, [r0, #0x12]
	ldr	r0, [sp, #0x84]
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToHexStringN
	mov	r0, sp
	add	r1, r4, #0
	bl	StringAppend
	mov	r2, r8
	ldrb	r1, [r2, #0x13]
	ldr	r0, [sp, #0x88]
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToHexStringN
	mov	r0, sp
	add	r1, r4, #0
	bl	StringAppend
	mov	r3, r8
	ldrb	r1, [r3, #0x14]
	ldr	r0, [sp, #0x8c]
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToHexStringN
	mov	r0, sp
	add	r1, r4, #0
	bl	StringAppend
	mov	r0, r8
	ldrb	r1, [r0, #0x15]
	ldr	r0, [sp, #0x90]
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToHexStringN
	mov	r0, sp
	add	r1, r4, #0
	bl	StringAppend
	mov	r2, r8
	ldrb	r1, [r2, #0x16]
	ldr	r0, [sp, #0x94]
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToHexStringN
	mov	r1, sp
	ldrb	r0, [r1, #0x11]
	add	r3, sp, #0x80
	ldrb	r3, [r3]
	orr	r0, r0, r3
	strb	r0, [r1, #0x11]
	mov	r0, sp
	mov	r1, #0x7
	mov	r2, #0x11
	bl	MenuPrint
.L1324:
	add	sp, sp, #0x98
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1328:
	.align	2, 0
.L1327:
	.word	gPokeblockNames
	.word	sText_Space
.Lfe77:
	.size	 BlenderDebug_PrintBerryData,.Lfe77-BlenderDebug_PrintBerryData
	.align	2, 0
	.type	 sub_80527BC,function
	.thumb_func
sub_80527BC:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #0xffffffa8
	ldr	r0, .L1349
	ldrb	r0, [r0]
	add	r6, sp, #0x48
	cmp	r0, #0x1
	bne	.L1330	@cond_branch
	mov	r1, #0x0
	ldr	r3, .L1349+0x4
	mov	r2, #0x0
.L1334:
	lsl	r0, r1, #0x1
	add	r0, r0, r3
	strh	r2, [r0]
	add	r0, r1, #0x1
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	cmp	r1, #0x9
	bls	.L1334	@cond_branch
	bl	Random
	ldr	r1, .L1349+0x8
	strh	r0, [r1]
	ldr	r1, .L1349+0xc
	mov	r0, #0x0
	str	r0, [r1]
	ldr	r1, .L1349
	mov	r0, #0x2
	strb	r0, [r1]
	mov	r4, #0x0
	ldr	r2, .L1349+0x10
	mov	r1, #0x0
.L1339:
	add	r0, r4, r2
	strb	r1, [r0]
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r4, #0xc7
	bls	.L1339	@cond_branch
	ldr	r1, .L1349+0x14
	mov	r0, #0x0
	strb	r0, [r1]
.L1330:
	mov	r4, #0x0
	mov	r0, #0x1
	mov	r8, r0
	ldr	r7, .L1349+0x14
	ldr	r5, .L1349+0xc
	ldr	r1, .L1349+0x10
	mov	r9, r1
	ldr	r3, .L1349+0x18
.L1344:
	str	r3, [sp, #0x54]
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x1f
	mov	r1, r8
	and	r0, r0, r1
	ldr	r3, [sp, #0x54]
	ldrb	r1, [r7]
	cmp	r0, r1
	bne	.L1345	@cond_branch
	ldr	r0, [r5]
	add	r0, r0, #0x1
	str	r0, [r5]
	b	.L1343
.L1350:
	.align	2, 0
.L1349:
	.word	gUnknown_020297DC
	.word	gUnknown_03004840
	.word	gUnknown_03004830
	.word	gUnknown_020297E0
	.word	gSharedMem
	.word	gUnknown_020297E8
	.word	gUnknown_020297E4
.L1345:
	ldr	r2, [r3]
	lsl	r0, r2, #0x1
	add	r0, r0, r9
	ldr	r1, [r5]
	strh	r1, [r0]
	add	r2, r2, #0x1
	str	r2, [r3]
	mov	r0, #0x0
	str	r0, [r5]
	ldrb	r0, [r7]
	mov	r1, r8
	eor	r0, r0, r1
	strb	r0, [r7]
.L1343:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r4, #0x63
	bls	.L1344	@cond_branch
	mov	r1, sp
	mov	r0, #0xff
	strb	r0, [r1]
	ldr	r0, .L1351
	ldrh	r1, [r0]
	add	r0, r6, #0
	mov	r2, #0x2
	mov	r3, #0x8
	bl	ConvertIntToHexStringN
	mov	r0, sp
	add	r1, r6, #0
	bl	StringAppend
	ldr	r1, .L1351+0x4
	mov	r0, sp
	bl	StringAppend
	ldr	r0, .L1351+0x8
	ldr	r1, [r0]
	add	r0, r6, #0
	mov	r2, #0x2
	mov	r3, #0x8
	bl	ConvertIntToHexStringN
	mov	r0, sp
	add	r1, r6, #0
	bl	StringAppend
	ldr	r1, .L1351+0xc
	mov	r0, sp
	bl	StringAppend
	ldr	r4, .L1351+0x10
	ldrb	r0, [r4]
	cmp	r0, #0x3
	bne	.L1348	@cond_branch
	ldr	r0, .L1351+0x14
	ldr	r1, [r0]
	add	r0, r6, #0
	mov	r2, #0x2
	mov	r3, #0x10
	bl	ConvertIntToHexStringN
	mov	r0, sp
	add	r1, r6, #0
	bl	StringAppend
	mov	r0, #0x0
	strb	r0, [r4]
.L1348:
	mov	r0, sp
	mov	r1, #0x2
	mov	r2, #0xf
	bl	MenuPrint
	add	sp, sp, #0x58
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1352:
	.align	2, 0
.L1351:
	.word	gUnknown_03004830
	.word	sText_Space
	.word	gUnknown_020297E0
	.word	sNewLineString_1
	.word	gUnknown_020297DC
	.word	gUnknown_020297E4
.Lfe78:
	.size	 sub_80527BC,.Lfe78-sub_80527BC
	.align	2, 0
	.type	 sub_8052918,function
	.thumb_func
sub_8052918:
	push	{r4, r5, r6, lr}
	add	sp, sp, #0xffffffb4
	ldr	r2, .L1380
	ldrh	r1, [r2, #0x2e]
	mov	r0, #0x80
	lsl	r0, r0, #0x1
	and	r0, r0, r1
	ldr	r4, .L1380+0x4
	cmp	r0, #0
	beq	.L1354	@cond_branch
	mov	r1, #0xfa
	lsl	r1, r1, #0x2
	add	r0, r1, #0
	ldrh	r1, [r4, #0x1a]
	add	r0, r0, r1
	strh	r0, [r4, #0x1a]
	lsl	r0, r0, #0x10
	ldr	r1, .L1380+0x8
	cmp	r0, r1
	ble	.L1355	@cond_branch
	mov	r0, #0xfa
	lsl	r0, r0, #0x2
	strh	r0, [r4, #0x1a]
.L1355:
	ldrb	r0, [r4, #0x10]
	add	r0, r0, #0x1
	strb	r0, [r4, #0x10]
.L1354:
	ldrh	r1, [r2, #0x2e]
	mov	r0, #0x80
	lsl	r0, r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1356	@cond_branch
	ldr	r1, .L1380+0xc
	add	r0, r1, #0
	ldrh	r1, [r4, #0x1a]
	add	r0, r0, r1
	strh	r0, [r4, #0x1a]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bge	.L1357	@cond_branch
	ldr	r0, .L1380+0x10
	strh	r0, [r4, #0x1a]
.L1357:
	ldrb	r0, [r4, #0x10]
	add	r0, r0, #0x1
	strb	r0, [r4, #0x10]
.L1356:
	ldrh	r1, [r2, #0x2e]
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1358	@cond_branch
	ldrb	r0, [r4]
	sub	r0, r0, #0x1
	strb	r0, [r4]
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bge	.L1359	@cond_branch
	mov	r0, #0x3
	strb	r0, [r4]
.L1359:
	ldrb	r0, [r4, #0x10]
	add	r0, r0, #0x1
	strb	r0, [r4, #0x10]
.L1358:
	ldrh	r1, [r2, #0x2e]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1360	@cond_branch
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	strb	r0, [r4]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	cmp	r0, #0x3
	ble	.L1361	@cond_branch
	mov	r0, #0x0
	strb	r0, [r4]
.L1361:
	ldrb	r0, [r4, #0x10]
	add	r0, r0, #0x1
	strb	r0, [r4, #0x10]
.L1360:
	ldrh	r1, [r2, #0x2e]
	mov	r0, #0x20
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1362	@cond_branch
	add	r3, r4, #0
	mov	r1, #0x0
	ldrsb	r1, [r3, r1]
	add	r5, r3, #0x1
	add	r1, r1, r5
	ldrb	r0, [r1]
	sub	r0, r0, #0x1
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bge	.L1363	@cond_branch
	mov	r0, #0x0
	ldrsb	r0, [r3, r0]
	add	r0, r0, r5
	mov	r1, #0x2a
	strb	r1, [r0]
.L1363:
	ldrb	r0, [r4, #0x10]
	add	r0, r0, #0x1
	strb	r0, [r4, #0x10]
.L1362:
	ldrh	r1, [r2, #0x2e]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1364	@cond_branch
	ldr	r3, .L1380+0x4
	mov	r1, #0x0
	ldrsb	r1, [r3, r1]
	add	r4, r3, #0x1
	add	r1, r1, r4
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	cmp	r0, #0x2a
	ble	.L1365	@cond_branch
	mov	r0, #0x0
	ldrsb	r0, [r3, r0]
	add	r0, r0, r4
	mov	r1, #0x0
	strb	r1, [r0]
.L1365:
	ldrb	r0, [r3, #0x10]
	add	r0, r0, #0x1
	strb	r0, [r3, #0x10]
.L1364:
	ldrh	r1, [r2, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1366	@cond_branch
	mov	r6, #0x0
	mov	r4, #0x0
	ldr	r5, .L1380+0x4
.L1370:
	add	r0, r5, #0x1
	add	r2, r4, r0
	mov	r0, #0x0
	ldrsb	r0, [r2, r0]
	cmp	r0, #0x2a
	beq	.L1368	@cond_branch
	add	r0, r6, #0x1
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	lsl	r0, r4, #0x1
	mov	r1, sp
	add	r1, r1, r0
	add	r1, r1, #0x4
	mov	r0, #0x0
	ldrsb	r0, [r2, r0]
	strh	r0, [r1]
	add	r0, sp, #0xc
	lsl	r1, r4, #0x4
	add	r0, r0, r1
	mov	r1, #0x0
	ldrsb	r1, [r2, r1]
	add	r1, r1, #0x85
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	bl	Blender_CopyBerryData
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r4, #0x3
	bls	.L1370	@cond_branch
.L1368:
	cmp	r6, #0x1
	bls	.L1374	@cond_branch
	add	r0, sp, #0xc
	add	r1, r5, #0
	add	r1, r1, #0x8
	lsl	r2, r6, #0x18
	lsr	r2, r2, #0x18
	add	r3, r5, #0
	add	r3, r3, #0x11
	ldrh	r4, [r5, #0x1a]
	str	r4, [sp]
	bl	BlenderDebug_CalculatePokeblock
	ldrb	r0, [r5, #0x10]
	add	r0, r0, #0x1
	strb	r0, [r5, #0x10]
	b	.L1366
.L1381:
	.align	2, 0
.L1380:
	.word	gMain
	.word	sBlenderDebug
	.word	0x75300000
	.word	0xfffffc18
	.word	0x7530
.L1374:
	mov	r0, #0xff
	strb	r0, [r5, #0x8]
.L1366:
	ldr	r4, .L1382
	ldrb	r0, [r4, #0x10]
	cmp	r0, #0
	beq	.L1376	@cond_branch
	bl	BlenderDebug_PrintBerryData
	mov	r0, #0x0
	strb	r0, [r4, #0x10]
.L1376:
	ldr	r3, .L1382+0x4
	ldrh	r1, [r3, #0x2e]
	mov	r0, #0x4
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1377	@cond_branch
	ldr	r2, .L1382+0x8
	ldrb	r0, [r2]
	add	r1, r0, #0
	cmp	r1, #0
	bne	.L1379	@cond_branch
	add	r0, r0, #0x1
	strb	r0, [r2]
	ldr	r0, .L1382+0xc
	str	r1, [r0]
	ldrh	r0, [r3, #0x20]
	bl	SeedRng
.L1377:
	ldr	r0, .L1382+0x8
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L1378	@cond_branch
.L1379:
	bl	sub_80527BC
.L1378:
	add	sp, sp, #0x4c
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1383:
	.align	2, 0
.L1382:
	.word	sBlenderDebug
	.word	gMain
	.word	gUnknown_020297DC
	.word	gUnknown_020297E0
.Lfe79:
	.size	 sub_8052918,.Lfe79-sub_8052918
	.align	2, 0
	.type	 sub_8052AF8,function
	.thumb_func
sub_8052AF8:
	push	{lr}
	bl	sub_8052918
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	UpdatePaletteFade
	pop	{r0}
	bx	r0
.Lfe80:
	.size	 sub_8052AF8,.Lfe80-sub_8052AF8
	.align	2, 0
	.globl	ShowBerryBlenderRecordWindow
	.type	 ShowBerryBlenderRecordWindow,function
	.thumb_func
ShowBerryBlenderRecordWindow:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #0xffffffe0
	mov	r0, #0x6
	mov	r1, #0x3
	mov	r2, #0x17
	mov	r3, #0x10
	bl	MenuDrawTextWindow
	ldr	r0, .L1391
	mov	r1, #0x8
	mov	r2, #0x4
	bl	MenuPrint
	ldr	r0, .L1391+0x4
	mov	r1, #0x8
	mov	r2, #0x9
	bl	MenuPrint
	mov	r0, #0x0
	mov	r8, r0
	ldr	r0, .L1391+0x8
	mov	r7, #0x90
	lsl	r7, r7, #0x14
	ldr	r1, .L1391+0xc
	add	r6, r0, r1
	mov	r0, #0x0
	mov	r9, r0
.L1389:
	ldrh	r4, [r6]
	add	r0, r4, #0
	mov	r1, #0x64
	bl	__udivsi3
	add	r1, r0, #0
	mov	r0, sp
	mov	r2, #0x12
	mov	r3, #0x1
	bl	sub_8072C14
	add	r5, r0, #0
	mov	r1, r9
	strb	r1, [r5]
	mov	r0, #0xad
	strb	r0, [r5, #0x1]
	strb	r1, [r5, #0x2]
	add	r5, r5, #0x3
	add	r0, r4, #0
	mov	r1, #0x64
	bl	__umodsi3
	add	r1, r0, #0
	add	r0, r5, #0
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	add	r5, r0, #0
	ldr	r1, .L1391+0x10
	bl	StringAppend
	lsr	r2, r7, #0x18
	mov	r0, sp
	mov	r1, #0xf
	bl	MenuPrint
	mov	r0, #0x80
	lsl	r0, r0, #0x12
	add	r7, r7, r0
	add	r6, r6, #0x2
	mov	r1, #0x1
	add	r8, r8, r1
	mov	r0, r8
	cmp	r0, #0x2
	ble	.L1389	@cond_branch
	add	sp, sp, #0x20
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1392:
	.align	2, 0
.L1391:
	.word	gMultiText_BerryBlenderMaxSpeedRecord
	.word	gMultiText_2P3P4P
	.word	gSaveBlock1
	.word	0x96c
	.word	gOtherText_RPM
.Lfe81:
	.size	 ShowBerryBlenderRecordWindow,.Lfe81-ShowBerryBlenderRecordWindow
	.align	2, 0
	.type	 sub_8052BD0,function
	.thumb_func
sub_8052BD0:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r5, r0, #0
	ldr	r1, .L1396
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r4, r0, r1
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	bne	.L1394	@cond_branch
	ldr	r0, .L1396+0x4
	bl	PlayFanfare
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
.L1394:
	bl	IsFanfareTaskInactive
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L1395	@cond_branch
	ldr	r0, .L1396+0x8
	ldr	r0, [r0]
	mov	r1, #0xbc
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	ldrh	r0, [r0]
	bl	PlayBGM
	add	r0, r5, #0
	bl	DestroyTask
.L1395:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1397:
	.align	2, 0
.L1396:
	.word	gTasks
	.word	0x16f
	.word	gBerryBlenderData
.Lfe82:
	.size	 sub_8052BD0,.Lfe82-sub_8052BD0
	.comm	gUnknown_03004830, 4	@ 2
	.comm	gInGameOpponentsNo, 4	@ 1
	.comm	gUnknown_03004840, 20	@ 20
	.comm	gBerryBlenderData, 4	@ 4
	.globl	gUnknown_03000510
.bss
	.align	1, 0
	.type	 gUnknown_03000510,object
	.size	 gUnknown_03000510,16
gUnknown_03000510:
	.space	16
	.globl	gUnknown_03000520
	.align	1, 0
	.type	 gUnknown_03000520,object
	.size	 gUnknown_03000520,12
gUnknown_03000520:
	.space	12
	.globl	gUnknown_0300052C
	.align	1, 0
	.type	 gUnknown_0300052C,object
	.size	 gUnknown_0300052C,2
gUnknown_0300052C:
	.space	2
	.globl	gUnknown_0300052E
	.align	1, 0
	.type	 gUnknown_0300052E,object
	.size	 gUnknown_0300052E,2
gUnknown_0300052E:
	.space	2
	.globl	gUnknown_03000530
	.align	2, 0
	.type	 gUnknown_03000530,object
	.size	 gUnknown_03000530,24
gUnknown_03000530:
	.space	24
	.globl	gUnknown_03000548
	.align	2, 0
	.type	 gUnknown_03000548,object
	.size	 gUnknown_03000548,20
gUnknown_03000548:
	.space	20
	.globl	gUnknown_0300055C
	.align	2, 0
	.type	 gUnknown_0300055C,object
	.size	 gUnknown_0300055C,4
gUnknown_0300055C:
	.space	4
	.globl	sBlenderDebug
	.align	2, 0
	.type	 sBlenderDebug,object
	.size	 sBlenderDebug,28
sBlenderDebug:
	.space	28
.text
	.align	2, 0
