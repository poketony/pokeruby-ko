@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section ewram_data,"aw"
	.align	2, 0
	.type	 sUnknown_0203931C,object
	.size	 sUnknown_0203931C,4
sUnknown_0203931C:
	.word	0x0
	.section .rodata
	.align	2, 0
	.type	 sHallOfFame_ConfettiSpriteSheet,object
	.size	 sHallOfFame_ConfettiSpriteSheet,8
sHallOfFame_ConfettiSpriteSheet:
	.word	gContestConfetti_Gfx
	.short	0x220
	.short	0x3e9
	.type	 sUnused0,object
	.size	 sUnused0,8
sUnused0:
	.space	8
	.align	2, 0
	.type	 sHallOfFame_ConfettiSpritePalette,object
	.size	 sHallOfFame_ConfettiSpritePalette,8
sHallOfFame_ConfettiSpritePalette:
	.word	gContestConfetti_Pal
	.short	0x3e9
	.space	2
	.type	 sUnused1,object
	.size	 sUnused1,8
sUnused1:
	.space	8
	.align	1, 0
	.type	 sHallOfFame_MonsFullTeamPositions,object
	.size	 sHallOfFame_MonsFullTeamPositions,48
sHallOfFame_MonsFullTeamPositions:
	.short	0x78
	.short	0xd2
	.short	0x78
	.short	0x28
	.short	0x146
	.short	0xdc
	.short	0x38
	.short	0x28
	.short	0xffffffaa
	.short	0xdc
	.short	0xb8
	.short	0x28
	.short	0x78
	.short	0xffffffc2
	.short	0x78
	.short	0x58
	.short	0xffffffe7
	.short	0xffffffc2
	.short	0xc8
	.short	0x58
	.short	0x109
	.short	0xffffffc2
	.short	0x28
	.short	0x58
	.align	1, 0
	.type	 sHallOfFame_MonsHalfTeamPositions,object
	.size	 sHallOfFame_MonsHalfTeamPositions,24
sHallOfFame_MonsHalfTeamPositions:
	.short	0x78
	.short	0xd6
	.short	0x78
	.short	0x40
	.short	0x119
	.short	0xd6
	.short	0x38
	.short	0x40
	.short	0xffffffd7
	.short	0xd6
	.short	0xb8
	.short	0x40
	.align	2, 0
	.type	 sDummyFameMon,object
	.size	 sDummyFameMon,20
sDummyFameMon:
	.word	0x3ea03ea
	.word	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	9
	.type	 sUnused2,object
	.size	 sUnused2,6
sUnused2:
	.byte	0x2
	.byte	0x1
	.byte	0x3
	.byte	0x6
	.byte	0x4
	.byte	0x5
	.align	2, 0
	.type	 sOamData_840B598,object
	.size	 sOamData_840B598,8
sOamData_840B598:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xc0
	.byte	0x0
	.byte	0x0
	.short	0x0
	.globl	gUnknown_0840B5A0
	.align	2, 0
	.type	 gUnknown_0840B5A0,object
gUnknown_0840B5A0:
	.word	gSharedMem+0x8000
	.word	gSharedMem+0xa000
	.word	gSharedMem+0xc000
	.word	gSharedMem+0xe000
	.word	gSharedMem+0x10000
	.word	gSharedMem+0x14000
	.word	gSharedMem+0x18000
	.size	 gUnknown_0840B5A0,28
	.align	2, 0
	.type	 sSpriteImageTable_840B5BC,object
sSpriteImageTable_840B5BC:
	.word	gSharedMem+0x8000
	.short	0x800
	.space	2
	.word	gSharedMem+0x8800
	.short	0x800
	.space	2
	.word	gSharedMem+0x9000
	.short	0x800
	.space	2
	.word	gSharedMem+0x9800
	.short	0x800
	.space	2
	.size	 sSpriteImageTable_840B5BC,32
	.align	2, 0
	.type	 sSpriteImageTable_840B5DC,object
sSpriteImageTable_840B5DC:
	.word	gSharedMem+0xa000
	.short	0x800
	.space	2
	.word	gSharedMem+0xa800
	.short	0x800
	.space	2
	.word	gSharedMem+0xb000
	.short	0x800
	.space	2
	.word	gSharedMem+0xb800
	.short	0x800
	.space	2
	.size	 sSpriteImageTable_840B5DC,32
	.align	2, 0
	.type	 sSpriteImageTable_840B5FC,object
sSpriteImageTable_840B5FC:
	.word	gSharedMem+0xc000
	.short	0x800
	.space	2
	.word	gSharedMem+0xc800
	.short	0x800
	.space	2
	.word	gSharedMem+0xd000
	.short	0x800
	.space	2
	.word	gSharedMem+0xd800
	.short	0x800
	.space	2
	.size	 sSpriteImageTable_840B5FC,32
	.align	2, 0
	.type	 sSpriteImageTable_840B61C,object
sSpriteImageTable_840B61C:
	.word	gSharedMem+0xe000
	.short	0x800
	.space	2
	.word	gSharedMem+0xe800
	.short	0x800
	.space	2
	.word	gSharedMem+0xf000
	.short	0x800
	.space	2
	.word	gSharedMem+0xf800
	.short	0x800
	.space	2
	.size	 sSpriteImageTable_840B61C,32
	.align	2, 0
	.type	 sSpriteImageTable_840B63C,object
sSpriteImageTable_840B63C:
	.word	gSharedMem+0x10000
	.short	0x800
	.space	2
	.word	gSharedMem+0x10800
	.short	0x800
	.space	2
	.word	gSharedMem+0x11000
	.short	0x800
	.space	2
	.word	gSharedMem+0x11800
	.short	0x800
	.space	2
	.size	 sSpriteImageTable_840B63C,32
	.align	2, 0
	.type	 sSpriteImageTable_840B65C,object
sSpriteImageTable_840B65C:
	.word	gSharedMem+0x14000
	.short	0x800
	.space	2
	.word	gSharedMem+0x14800
	.short	0x800
	.space	2
	.word	gSharedMem+0x15000
	.short	0x800
	.space	2
	.word	gSharedMem+0x15800
	.short	0x800
	.space	2
	.size	 sSpriteImageTable_840B65C,32
	.align	2, 0
	.type	 sSpriteImageTable_840B67C,object
sSpriteImageTable_840B67C:
	.word	gSharedMem+0x18000
	.short	0x800
	.space	2
	.word	gSharedMem+0x18800
	.short	0x800
	.space	2
	.word	gSharedMem+0x19000
	.short	0x800
	.space	2
	.word	gSharedMem+0x19800
	.short	0x800
	.space	2
	.size	 sSpriteImageTable_840B67C,32
	.align	2, 0
	.type	 sUnknown_0840B69C,object
	.size	 sUnknown_0840B69C,28
sUnknown_0840B69C:
	.word	sSpriteImageTable_840B5BC
	.word	sSpriteImageTable_840B5DC
	.word	sSpriteImageTable_840B5FC
	.word	sSpriteImageTable_840B61C
	.word	sSpriteImageTable_840B63C
	.word	sSpriteImageTable_840B65C
	.word	sSpriteImageTable_840B67C
	.align	2, 0
	.type	 sUnknown_0840B6B8,object
	.size	 sUnknown_0840B6B8,24
sUnknown_0840B6B8:
	.short	0xffff
	.short	0xffff
	.word	sOamData_840B598
	.word	0x0
	.word	sSpriteImageTable_840B5BC
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCB_HallOfFame_Dummy
	.align	2, 0
	.type	 sOamData_840B6D0,object
	.size	 sOamData_840B6D0,8
sOamData_840B6D0:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.short	0x0
	.align	2, 0
	.type	 sSpriteAnim_840B6D8,object
sSpriteAnim_840B6D8:
	.short	0x0
	.byte	0x1e
	.space	1
	.short	0xffffffff
	.space	2
	.size	 sSpriteAnim_840B6D8,8
	.align	2, 0
	.type	 sSpriteAnim_840B6E0,object
sSpriteAnim_840B6E0:
	.short	0x1
	.byte	0x1e
	.space	1
	.short	0xffffffff
	.space	2
	.size	 sSpriteAnim_840B6E0,8
	.align	2, 0
	.type	 sSpriteAnim_840B6E8,object
sSpriteAnim_840B6E8:
	.short	0x2
	.byte	0x1e
	.space	1
	.short	0xffffffff
	.space	2
	.size	 sSpriteAnim_840B6E8,8
	.align	2, 0
	.type	 sSpriteAnim_840B6F0,object
sSpriteAnim_840B6F0:
	.short	0x3
	.byte	0x1e
	.space	1
	.short	0xffffffff
	.space	2
	.size	 sSpriteAnim_840B6F0,8
	.align	2, 0
	.type	 sSpriteAnim_840B6F8,object
sSpriteAnim_840B6F8:
	.short	0x4
	.byte	0x1e
	.space	1
	.short	0xffffffff
	.space	2
	.size	 sSpriteAnim_840B6F8,8
	.align	2, 0
	.type	 sSpriteAnim_840B700,object
sSpriteAnim_840B700:
	.short	0x5
	.byte	0x1e
	.space	1
	.short	0xffffffff
	.space	2
	.size	 sSpriteAnim_840B700,8
	.align	2, 0
	.type	 sSpriteAnim_840B708,object
sSpriteAnim_840B708:
	.short	0x6
	.byte	0x1e
	.space	1
	.short	0xffffffff
	.space	2
	.size	 sSpriteAnim_840B708,8
	.align	2, 0
	.type	 sSpriteAnim_840B710,object
sSpriteAnim_840B710:
	.short	0x7
	.byte	0x1e
	.space	1
	.short	0xffffffff
	.space	2
	.size	 sSpriteAnim_840B710,8
	.align	2, 0
	.type	 sSpriteAnim_840B718,object
sSpriteAnim_840B718:
	.short	0x8
	.byte	0x1e
	.space	1
	.short	0xffffffff
	.space	2
	.size	 sSpriteAnim_840B718,8
	.align	2, 0
	.type	 sSpriteAnim_840B720,object
sSpriteAnim_840B720:
	.short	0x9
	.byte	0x1e
	.space	1
	.short	0xffffffff
	.space	2
	.size	 sSpriteAnim_840B720,8
	.align	2, 0
	.type	 sSpriteAnim_840B728,object
sSpriteAnim_840B728:
	.short	0xa
	.byte	0x1e
	.space	1
	.short	0xffffffff
	.space	2
	.size	 sSpriteAnim_840B728,8
	.align	2, 0
	.type	 sSpriteAnim_840B730,object
sSpriteAnim_840B730:
	.short	0xb
	.byte	0x1e
	.space	1
	.short	0xffffffff
	.space	2
	.size	 sSpriteAnim_840B730,8
	.align	2, 0
	.type	 sSpriteAnim_840B738,object
sSpriteAnim_840B738:
	.short	0xc
	.byte	0x1e
	.space	1
	.short	0xffffffff
	.space	2
	.size	 sSpriteAnim_840B738,8
	.align	2, 0
	.type	 sSpriteAnim_840B740,object
sSpriteAnim_840B740:
	.short	0xd
	.byte	0x1e
	.space	1
	.short	0xffffffff
	.space	2
	.size	 sSpriteAnim_840B740,8
	.align	2, 0
	.type	 sSpriteAnim_840B748,object
sSpriteAnim_840B748:
	.short	0xe
	.byte	0x1e
	.space	1
	.short	0xffffffff
	.space	2
	.size	 sSpriteAnim_840B748,8
	.align	2, 0
	.type	 sSpriteAnim_840B750,object
sSpriteAnim_840B750:
	.short	0xf
	.byte	0x1e
	.space	1
	.short	0xffffffff
	.space	2
	.size	 sSpriteAnim_840B750,8
	.align	2, 0
	.type	 sSpriteAnim_840B758,object
sSpriteAnim_840B758:
	.short	0x10
	.byte	0x1e
	.space	1
	.short	0xffffffff
	.space	2
	.size	 sSpriteAnim_840B758,8
	.align	2, 0
	.type	 sSpriteAnimTable_840B760,object
sSpriteAnimTable_840B760:
	.word	sSpriteAnim_840B6D8
	.word	sSpriteAnim_840B6E0
	.word	sSpriteAnim_840B6E8
	.word	sSpriteAnim_840B6F0
	.word	sSpriteAnim_840B6F8
	.word	sSpriteAnim_840B700
	.word	sSpriteAnim_840B708
	.word	sSpriteAnim_840B710
	.word	sSpriteAnim_840B718
	.word	sSpriteAnim_840B720
	.word	sSpriteAnim_840B728
	.word	sSpriteAnim_840B730
	.word	sSpriteAnim_840B738
	.word	sSpriteAnim_840B740
	.word	sSpriteAnim_840B748
	.word	sSpriteAnim_840B750
	.word	sSpriteAnim_840B758
	.size	 sSpriteAnimTable_840B760,68
	.align	2, 0
	.type	 sSpriteTemplate_840B7A4,object
	.size	 sSpriteTemplate_840B7A4,24
sSpriteTemplate_840B7A4:
	.short	0x3e9
	.short	0x3e9
	.word	sOamData_840B6D0
	.word	sSpriteAnimTable_840B760
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	sub_814386C
.text
	.align	2, 0
	.type	 VBlankCB_HallOfFame,function
	.thumb_func
VBlankCB_HallOfFame:
	push	{lr}
	bl	LoadOam
	bl	ProcessSpriteCopyRequests
	bl	TransferPlttBuffer
	pop	{r0}
	bx	r0
.Lfe1:
	.size	 VBlankCB_HallOfFame,.Lfe1-VBlankCB_HallOfFame
	.align	2, 0
	.type	 CB2_HallOfFame,function
	.thumb_func
CB2_HallOfFame:
	push	{lr}
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	UpdatePaletteFade
	pop	{r0}
	bx	r0
.Lfe2:
	.size	 CB2_HallOfFame,.Lfe2-CB2_HallOfFame
	.align	2, 0
	.type	 sub_8141E64,function
	.thumb_func
sub_8141E64:
	push	{r4, lr}
	add	sp, sp, #0xfffffffc
	ldr	r0, .L17
	ldr	r1, .L17+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x4
	bhi	.L7	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L17+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L18:
	.align	2, 0
.L17:
	.word	gMain
	.word	0x43c
	.word	.L13
	.align	2, 0
	.align	2, 0
.L13:
	.word	.L7
	.word	.L8
	.word	.L9
	.word	.L10
	.word	.L11
.L7:
	mov	r0, #0x0
	bl	SetVBlankCallback
	bl	sub_81433E0
	ldr	r0, .L19
	ldr	r2, .L19+0x4
	add	r0, r0, r2
	mov	r1, #0x1
	strb	r1, [r0]
	b	.L5
.L20:
	.align	2, 0
.L19:
	.word	gMain
	.word	0x43c
.L8:
	bl	sub_8143570
	b	.L15
.L9:
	mov	r0, #0x1
	neg	r0, r0
	mov	r4, #0x0
	str	r4, [sp]
	mov	r1, #0x0
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	ldr	r0, .L21
	bl	SetVBlankCallback
	ldr	r3, .L21+0x4
	ldrh	r2, [r3]
	strh	r4, [r3]
	ldr	r4, .L21+0x8
	ldrh	r0, [r4]
	mov	r1, #0x1
	orr	r0, r0, r1
	strh	r0, [r4]
	strh	r2, [r3]
	ldr	r2, .L21+0xc
	ldrh	r0, [r2]
	mov	r1, #0x8
	orr	r0, r0, r1
	strh	r0, [r2]
	ldr	r1, .L21+0x10
	ldr	r2, .L21+0x14
	add	r1, r1, r2
	b	.L16
.L22:
	.align	2, 0
.L21:
	.word	VBlankCB_HallOfFame
	.word	0x4000208
	.word	0x4000200
	.word	0x4000004
	.word	gMain
	.word	0x43c
.L10:
	ldr	r1, .L23
	ldr	r2, .L23+0x4
	add	r0, r2, #0
	strh	r0, [r1]
	add	r1, r1, #0x2
	mov	r2, #0xe2
	lsl	r2, r2, #0x3
	add	r0, r2, #0
	strh	r0, [r1]
	add	r1, r1, #0x2
	mov	r0, #0x0
	strh	r0, [r1]
	bl	sub_81435B8
.L15:
	ldr	r1, .L23+0x8
	ldr	r0, .L23+0xc
	add	r1, r1, r0
.L16:
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L5
.L24:
	.align	2, 0
.L23:
	.word	0x4000050
	.word	0x3f42
	.word	gMain
	.word	0x43c
.L11:
	bl	UpdatePaletteFade
	ldr	r0, .L25
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L5	@cond_branch
	ldr	r0, .L25+0x4
	bl	SetMainCallback2
	mov	r0, #0xda
	lsl	r0, r0, #0x1
	bl	PlayBGM
	mov	r0, #0x0
	b	.L14
.L26:
	.align	2, 0
.L25:
	.word	gPaletteFade
	.word	CB2_HallOfFame
.L5:
	mov	r0, #0x1
.L14:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe3:
	.size	 sub_8141E64,.Lfe3-sub_8141E64
	.align	2, 0
	.globl	sub_8141F90
	.type	 sub_8141F90,function
	.thumb_func
sub_8141F90:
	push	{r4, lr}
	bl	sub_8141E64
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0
	bne	.L28	@cond_branch
	ldr	r0, .L29
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L29+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	strh	r4, [r1, #0x8]
.L28:
	pop	{r4}
	pop	{r0}
	bx	r0
.L30:
	.align	2, 0
.L29:
	.word	sub_8141FF8
	.word	gTasks
.Lfe4:
	.size	 sub_8141F90,.Lfe4-sub_8141F90
	.align	2, 0
	.type	 sub_8141FC4,function
	.thumb_func
sub_8141FC4:
	push	{lr}
	bl	sub_8141E64
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L32	@cond_branch
	ldr	r0, .L33
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L33+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	mov	r0, #0x1
	strh	r0, [r1, #0x8]
.L32:
	pop	{r0}
	bx	r0
.L34:
	.align	2, 0
.L33:
	.word	sub_8141FF8
	.word	gTasks
.Lfe5:
	.size	 sub_8141FC4,.Lfe5-sub_8141FC4
	.align	2, 0
	.type	 sub_8141FF8,function
	.thumb_func
sub_8141FF8:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #0xfffffff4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	ldr	r0, .L56
	mov	r9, r0
	ldr	r1, .L56+0x4
	mov	r2, r8
	lsl	r0, r2, #0x2
	add	r0, r0, r8
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r1, #0x0
	strh	r1, [r0, #0xc]
	mov	r7, #0x0
	ldr	r4, .L56+0x8
	mov	sl, r4
.L39:
	mov	r0, #0x64
	mov	r1, r7
	mul	r1, r1, r0
	ldr	r0, .L56+0xc
	add	r6, r1, r0
	add	r0, r6, #0
	mov	r1, #0xb
	bl	GetMonData
	add	r3, r0, #0
	cmp	r3, #0
	beq	.L40	@cond_branch
	add	r0, r6, #0
	mov	r1, #0x41
	bl	GetMonData
	lsl	r4, r7, #0x2
	add	r4, r4, r7
	lsl	r4, r4, #0x2
	mov	r1, r9
	add	r5, r1, r4
	ldr	r2, .L56+0x10
	add	r1, r2, #0
	and	r0, r0, r1
	ldrh	r1, [r5, #0x8]
	mov	r2, sl
	and	r1, r1, r2
	orr	r1, r1, r0
	strh	r1, [r5, #0x8]
	add	r0, r6, #0
	mov	r1, #0x1
	bl	GetMonData
	str	r0, [r5]
	add	r0, r6, #0
	mov	r1, #0x0
	bl	GetMonData
	mov	r1, r9
	add	r1, r1, #0x4
	add	r1, r1, r4
	str	r0, [r1]
	add	r0, r6, #0
	mov	r1, #0x38
	bl	GetMonData
	lsl	r0, r0, #0x1
	ldrb	r2, [r5, #0x9]
	mov	r1, #0x1
	and	r1, r1, r2
	orr	r1, r1, r0
	strb	r1, [r5, #0x9]
	add	r0, r6, #0
	mov	r1, #0x2
	mov	r2, sp
	bl	GetMonData
	mov	r2, #0x0
	mov	r6, r8
	lsl	r5, r6, #0x2
	mov	r3, r9
	add	r3, r3, #0xa
.L44:
	add	r1, r2, r4
	add	r1, r3, r1
	mov	r6, sp
	add	r0, r6, r2
	ldrb	r0, [r0]
	strb	r0, [r1]
	add	r0, r2, #0x1
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	cmp	r2, #0x9
	bls	.L44	@cond_branch
	ldr	r0, .L56+0x4
	mov	r2, r8
	add	r1, r5, r2
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrh	r0, [r1, #0xc]
	add	r0, r0, #0x1
	strh	r0, [r1, #0xc]
	b	.L38
.L57:
	.align	2, 0
.L56:
	.word	gSharedMem+0x1c000
	.word	gTasks
	.word	0xfffffe00
	.word	gPlayerParty
	.word	0x1ff
.L40:
	lsl	r1, r7, #0x2
	add	r1, r1, r7
	lsl	r1, r1, #0x2
	mov	r4, r9
	add	r2, r4, r1
	ldrh	r0, [r2, #0x8]
	mov	r6, sl
	and	r0, r0, r6
	strh	r0, [r2, #0x8]
	str	r3, [r2]
	mov	r0, r9
	add	r0, r0, #0x4
	add	r0, r0, r1
	str	r3, [r0]
	ldrb	r1, [r2, #0x9]
	mov	r0, #0x1
	and	r0, r0, r1
	strb	r0, [r2, #0x9]
	mov	r0, #0xff
	strb	r0, [r2, #0xa]
	mov	r0, r8
	lsl	r5, r0, #0x2
.L38:
	add	r0, r7, #0x1
	lsl	r0, r0, #0x10
	lsr	r7, r0, #0x10
	cmp	r7, #0x5
	bls	.L39	@cond_branch
	ldr	r0, .L58
	mov	r3, #0x0
	str	r3, [r0]
	ldr	r4, .L58+0x4
	mov	r2, r8
	add	r1, r5, r2
	lsl	r1, r1, #0x3
	add	r2, r1, r4
	strh	r3, [r2, #0xa]
	mov	r0, #0xff
	strh	r0, [r2, #0x10]
	mov	r7, #0x0
	add	r3, r4, #0
	add	r3, r3, #0x8
	mov	r2, #0xff
.L51:
	add	r0, r7, #0x5
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	add	r0, r0, r3
	strh	r2, [r0]
	add	r0, r7, #0x1
	lsl	r0, r0, #0x10
	lsr	r7, r0, #0x10
	cmp	r7, #0x5
	bls	.L51	@cond_branch
	mov	r6, r8
	add	r0, r5, r6
	lsl	r0, r0, #0x3
	add	r1, r0, r4
	mov	r2, #0x8
	ldrsh	r0, [r1, r2]
	cmp	r0, #0
	beq	.L53	@cond_branch
	ldr	r0, .L58+0x8
	b	.L55
.L59:
	.align	2, 0
.L58:
	.word	sUnknown_0203931C
	.word	gTasks
	.word	sub_81422E8
.L53:
	ldr	r0, .L60
.L55:
	str	r0, [r1]
	add	sp, sp, #0xc
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L61:
	.align	2, 0
.L60:
	.word	sub_814217C
.Lfe6:
	.size	 sub_8141FF8,.Lfe6-sub_8141FF8
	.align	2, 0
	.type	 sub_814217C,function
	.thumb_func
sub_814217C:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	ldr	r0, .L84
	mov	r9, r0
	mov	r7, #0x80
	lsl	r7, r7, #0x6
	add	r7, r7, r9
	ldr	r0, .L84+0x4
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L63	@cond_branch
	mov	r4, #0x0
	mov	r0, r8
	lsl	r0, r0, #0x2
	mov	sl, r0
	ldr	r5, .L84+0x8
	add	r5, r5, r9
	mov	r3, #0xf0
	lsl	r3, r3, #0x9
	mov	r2, #0x0
	ldr	r1, .L84+0xc
.L67:
	add	r0, r4, r3
	add	r0, r0, r5
	strb	r2, [r0]
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r4, r1
	bls	.L67	@cond_branch
	b	.L69
.L85:
	.align	2, 0
.L84:
	.word	gSharedMem+0x1c000
	.word	gUnknown_02039324
	.word	0xfffe4000
	.word	0x1fff
.L63:
	mov	r0, #0x3
	bl	sub_8125EC8
	mov	r0, r8
	lsl	r0, r0, #0x2
	mov	sl, r0
.L69:
	mov	r4, #0x0
	ldrh	r1, [r7, #0x8]
	ldr	r2, .L86
	b	.L83
.L87:
	.align	2, 0
.L86:
	.word	0x1ff
.L72:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	add	r7, r7, #0x78
	cmp	r4, #0x31
	bhi	.L82	@cond_branch
	ldrh	r1, [r7, #0x8]
.L83:
	add	r0, r2, #0
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L72	@cond_branch
	cmp	r4, #0x31
	bls	.L76	@cond_branch
.L82:
	ldr	r5, .L88
	add	r6, r5, #0
	add	r5, r5, #0x78
	mov	r4, #0x0
	sub	r7, r7, #0x78
.L80:
	add	r0, r6, #0
	add	r1, r5, #0
	mov	r2, #0x78
	bl	memcpy
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	add	r6, r6, #0x78
	add	r5, r5, #0x78
	cmp	r4, #0x30
	bls	.L80	@cond_branch
.L76:
	add	r0, r7, #0
	mov	r1, r9
	mov	r2, #0x78
	bl	memcpy
	mov	r0, #0x2
	mov	r1, #0xe
	mov	r2, #0x1b
	mov	r3, #0x13
	bl	MenuDrawTextWindow
	ldr	r0, .L88+0x4
	mov	r1, #0x3
	mov	r2, #0xf
	bl	MenuPrint
	ldr	r1, .L88+0x8
	mov	r0, sl
	add	r0, r0, r8
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L88+0xc
	str	r1, [r0]
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L89:
	.align	2, 0
.L88:
	.word	gSharedMem+0x1e000
	.word	gMenuText_HOFSaving
	.word	gTasks
	.word	sub_8142274
.Lfe7:
	.size	 sub_814217C,.Lfe7-sub_814217C
	.align	2, 0
	.type	 sub_8142274,function
	.thumb_func
sub_8142274:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r1, .L91
	ldr	r0, .L91+0x4
	str	r0, [r1]
	mov	r0, #0x3
	bl	TrySavingData
	mov	r0, #0x37
	bl	PlaySE
	ldr	r1, .L91+0x8
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L91+0xc
	str	r1, [r0]
	mov	r1, #0x20
	strh	r1, [r0, #0xe]
	pop	{r4}
	pop	{r0}
	bx	r0
.L92:
	.align	2, 0
.L91:
	.word	gGameContinueCallback
	.word	sub_8141FC4
	.word	gTasks
	.word	sub_81422B8
.Lfe8:
	.size	 sub_8142274,.Lfe8-sub_8142274
	.align	2, 0
	.type	 sub_81422B8,function
	.thumb_func
sub_81422B8:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L96
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldrh	r2, [r1, #0xe]
	mov	r3, #0xe
	ldrsh	r0, [r1, r3]
	cmp	r0, #0
	beq	.L94	@cond_branch
	sub	r0, r2, #0x1
	strh	r0, [r1, #0xe]
	b	.L95
.L97:
	.align	2, 0
.L96:
	.word	gTasks
.L94:
	ldr	r0, .L98
	str	r0, [r1]
.L95:
	pop	{r0}
	bx	r0
.L99:
	.align	2, 0
.L98:
	.word	sub_81422E8
.Lfe9:
	.size	 sub_81422B8,.Lfe9-sub_81422B8
	.align	2, 0
	.type	 sub_81422E8,function
	.thumb_func
sub_81422E8:
	push	{r4, r5, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r5, .L101
	add	r0, r5, #0
	bl	SetUpWindowConfig
	add	r0, r5, #0
	bl	InitMenuWindow
	ldr	r1, .L101+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L101+0x8
	str	r1, [r0]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L102:
	.align	2, 0
.L101:
	.word	gWindowConfig_81E7198
	.word	gTasks
	.word	sub_8142320
.Lfe10:
	.size	 sub_81422E8,.Lfe10-sub_81422E8
	.align	2, 0
	.type	 sub_8142320,function
	.thumb_func
sub_8142320:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #0xfffffff8
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	ldr	r2, .L107
	ldr	r0, .L107+0x4
	lsl	r1, r7, #0x2
	add	r1, r1, r7
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrh	r6, [r1, #0xa]
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x2
	add	r4, r0, r2
	mov	r2, #0xc
	ldrsh	r0, [r1, r2]
	cmp	r0, #0x3
	ble	.L104	@cond_branch
	ldr	r1, .L107+0x8
	b	.L106
.L108:
	.align	2, 0
.L107:
	.word	gSharedMem+0x1c000
	.word	gTasks
	.word	sHallOfFame_MonsFullTeamPositions
.L104:
	ldr	r1, .L109
.L106:
	lsl	r2, r6, #0x3
	add	r0, r2, r1
	ldrh	r5, [r0]
	add	r0, r1, #0x2
	add	r0, r2, r0
	ldrh	r3, [r0]
	add	r0, r1, #0x4
	add	r0, r2, r0
	ldrh	r0, [r0]
	mov	r9, r0
	add	r1, r1, #0x6
	add	r2, r2, r1
	ldrh	r2, [r2]
	mov	r8, r2
	ldrh	r0, [r4, #0x8]
	lsl	r0, r0, #0x17
	lsr	r0, r0, #0x17
	lsl	r1, r5, #0x10
	asr	r1, r1, #0x10
	lsl	r2, r3, #0x10
	asr	r2, r2, #0x10
	ldr	r3, [r4]
	str	r3, [sp]
	ldr	r3, [r4, #0x4]
	str	r3, [sp, #0x4]
	add	r3, r6, #0
	bl	HallOfFame_LoadPokemonPic
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r3, .L109+0x4
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r2, r1, r3
	mov	r4, #0x0
	mov	r5, r9
	strh	r5, [r2, #0x30]
	mov	r5, r8
	strh	r5, [r2, #0x32]
	strh	r4, [r2, #0x2e]
	add	r3, r3, #0x1c
	add	r1, r1, r3
	ldr	r2, .L109+0x8
	str	r2, [r1]
	ldr	r5, .L109+0xc
	add	r1, r6, #0x5
	lsl	r1, r1, #0x1
	lsl	r4, r7, #0x2
	add	r4, r4, r7
	lsl	r4, r4, #0x3
	add	r1, r1, r4
	add	r2, r5, #0
	add	r2, r2, #0x8
	add	r1, r1, r2
	strh	r0, [r1]
	mov	r0, #0x0
	mov	r1, #0xe
	mov	r2, #0x1d
	mov	r3, #0x13
	bl	MenuZeroFillWindowRect
	add	r4, r4, r5
	ldr	r0, .L109+0x10
	str	r0, [r4]
	add	sp, sp, #0x8
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L110:
	.align	2, 0
.L109:
	.word	sHallOfFame_MonsHalfTeamPositions
	.word	gSprites
	.word	sub_81435DC
	.word	gTasks
	.word	sub_8142404
.Lfe11:
	.size	 sub_8142320,.Lfe11-sub_8142320
	.align	2, 0
	.type	 sub_8142404,function
	.thumb_func
sub_8142404:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r4, .L114
	ldr	r3, .L114+0x4
	lsl	r2, r0, #0x2
	add	r2, r2, r0
	lsl	r2, r2, #0x3
	add	r5, r2, r3
	ldrh	r1, [r5, #0xa]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r6, r0, r4
	ldr	r4, .L114+0x8
	add	r1, r1, #0x5
	lsl	r1, r1, #0x1
	add	r1, r1, r2
	add	r3, r3, #0x8
	add	r1, r1, r3
	mov	r0, #0x0
	ldrsh	r1, [r1, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	mov	r1, #0x2e
	ldrsh	r0, [r0, r1]
	cmp	r0, #0
	beq	.L112	@cond_branch
	ldrh	r2, [r6, #0x8]
	ldr	r0, .L114+0xc
	and	r0, r0, r2
	mov	r1, #0xce
	lsl	r1, r1, #0x1
	cmp	r0, r1
	beq	.L113	@cond_branch
	lsl	r0, r2, #0x17
	lsr	r0, r0, #0x17
	mov	r1, #0x0
	bl	PlayCry1
.L113:
	add	r0, r6, #0
	mov	r1, #0x0
	mov	r2, #0xe
	bl	HallOfFame_PrintMonInfo
	mov	r0, #0x78
	strh	r0, [r5, #0xe]
	ldr	r0, .L114+0x10
	str	r0, [r5]
.L112:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L115:
	.align	2, 0
.L114:
	.word	gSharedMem+0x1c000
	.word	gTasks
	.word	gSprites
	.word	0x1ff
	.word	sub_8142484
.Lfe12:
	.size	 sub_8142404,.Lfe12-sub_8142404
	.align	2, 0
	.type	 sub_8142484,function
	.thumb_func
sub_8142484:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #0xfffffffc
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r2, .L121
	ldr	r1, .L121+0x4
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r6, r0, #0x3
	add	r4, r6, r1
	ldrh	r3, [r4, #0xa]
	lsl	r0, r3, #0x2
	add	r0, r0, r3
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	mov	r9, r0
	ldrh	r2, [r4, #0xe]
	mov	r7, #0xe
	ldrsh	r0, [r4, r7]
	mov	ip, r1
	cmp	r0, #0
	beq	.L117	@cond_branch
	sub	r0, r2, #0x1
	strh	r0, [r4, #0xe]
	b	.L118
.L122:
	.align	2, 0
.L121:
	.word	gSharedMem+0x1c000
	.word	gTasks
.L117:
	ldr	r2, .L123
	ldr	r0, .L123+0x4
	mov	r8, r0
	add	r0, r3, #0x5
	lsl	r0, r0, #0x1
	add	r0, r0, r6
	mov	r1, ip
	add	r1, r1, #0x8
	add	r6, r0, r1
	mov	r7, #0x0
	ldrsh	r1, [r6, r7]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r8
	ldrb	r0, [r0, #0x5]
	lsr	r0, r0, #0x4
	mov	r1, #0x80
	lsl	r1, r1, #0x9
	lsl	r1, r1, r0
	ldr	r3, [r2]
	orr	r3, r3, r1
	str	r3, [r2]
	ldrh	r2, [r4, #0xa]
	mov	r1, #0xa
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x4
	bgt	.L119	@cond_branch
	mov	r7, r9
	ldrh	r1, [r7, #0x1c]
	ldr	r0, .L123+0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L119	@cond_branch
	add	r0, r2, #0x1
	strh	r0, [r4, #0xa]
	ldr	r0, .L123+0xc
	str	r0, [sp]
	add	r0, r3, #0
	mov	r1, #0x0
	mov	r2, #0xc
	mov	r3, #0xc
	bl	BeginNormalPaletteFade
	mov	r0, #0x0
	ldrsh	r1, [r6, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r8
	ldrb	r2, [r0, #0x5]
	mov	r1, #0xd
	neg	r1, r1
	and	r1, r1, r2
	mov	r2, #0x4
	orr	r1, r1, r2
	strb	r1, [r0, #0x5]
	ldr	r0, .L123+0x10
	str	r0, [r4]
	b	.L118
.L124:
	.align	2, 0
.L123:
	.word	sUnknown_0203931C
	.word	gSprites
	.word	0x1ff
	.word	0x735f
	.word	sub_8142320
.L119:
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, ip
	ldr	r1, .L125
	str	r1, [r0]
.L118:
	add	sp, sp, #0x4
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L126:
	.align	2, 0
.L125:
	.word	sub_8142570
.Lfe13:
	.size	 sub_8142484,.Lfe13-sub_8142484
	.align	2, 0
	.type	 sub_8142570,function
	.thumb_func
sub_8142570:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #0xfffffffc
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L134
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	mov	r3, #0x0
	lsl	r1, r4, #0x2
	add	r0, r1, r4
	lsl	r5, r0, #0x3
	ldr	r0, .L134+0x4
	mov	ip, r0
	mov	r8, r1
	ldr	r6, .L134+0x8
	mov	r7, #0xd
	neg	r7, r7
.L131:
	add	r0, r3, #0x5
	lsl	r0, r0, #0x1
	add	r0, r0, r5
	mov	r2, ip
	add	r1, r0, r2
	mov	r2, #0x0
	ldrsh	r0, [r1, r2]
	cmp	r0, #0xff
	beq	.L130	@cond_branch
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r6
	ldrb	r2, [r1, #0x5]
	add	r0, r7, #0
	and	r0, r0, r2
	strb	r0, [r1, #0x5]
.L130:
	add	r0, r3, #0x1
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	cmp	r3, #0x5
	bls	.L131	@cond_branch
	mov	r0, #0x0
	mov	r1, #0xe
	mov	r2, #0x1d
	mov	r3, #0x13
	bl	MenuZeroFillWindowRect
	mov	r0, #0x0
	mov	r1, #0xf
	bl	sub_8143068
	mov	r0, #0x69
	bl	PlaySE
	ldr	r1, .L134+0xc
	mov	r2, r8
	add	r0, r2, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r1, #0xc8
	lsl	r1, r1, #0x1
	strh	r1, [r0, #0xe]
	ldr	r1, .L134+0x10
	str	r1, [r0]
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L135:
	.align	2, 0
.L134:
	.word	0xffff0000
	.word	gTasks+0x8
	.word	gSprites
	.word	gTasks
	.word	sub_8142618
.Lfe14:
	.size	 sub_8142570,.Lfe14-sub_8142570
	.align	2, 0
	.type	 sub_8142618,function
	.thumb_func
sub_8142618:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #0xfffffffc
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r7, .L146
	lsl	r4, r6, #0x2
	add	r0, r4, r6
	lsl	r5, r0, #0x3
	add	r1, r5, r7
	ldrh	r2, [r1, #0xe]
	mov	r3, #0xe
	ldrsh	r0, [r1, r3]
	cmp	r0, #0
	beq	.L137	@cond_branch
	sub	r2, r2, #0x1
	strh	r2, [r1, #0xe]
	mov	r0, #0x3
	and	r0, r0, r2
	cmp	r0, #0
	bne	.L139	@cond_branch
	lsl	r0, r2, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x6e
	ble	.L139	@cond_branch
	bl	sub_81438C4
	b	.L139
.L147:
	.align	2, 0
.L146:
	.word	gTasks
.L137:
	mov	r3, #0x0
	mov	r9, r4
	ldr	r0, .L148
	mov	sl, r0
	add	r4, r5, #0
	add	r7, r7, #0x8
	mov	r8, r7
	ldr	r7, .L148+0x4
	mov	r1, #0xd
	neg	r1, r1
	mov	ip, r1
	mov	r5, #0x4
.L143:
	add	r0, r3, #0x5
	lsl	r0, r0, #0x1
	add	r0, r0, r4
	mov	r2, r8
	add	r1, r0, r2
	mov	r2, #0x0
	ldrsh	r0, [r1, r2]
	cmp	r0, #0xff
	beq	.L142	@cond_branch
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r7
	ldrb	r2, [r1, #0x5]
	mov	r0, ip
	and	r0, r0, r2
	orr	r0, r0, r5
	strb	r0, [r1, #0x5]
.L142:
	add	r0, r3, #0x1
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	cmp	r3, #0x5
	bls	.L143	@cond_branch
	mov	r3, sl
	ldr	r0, [r3]
	ldr	r1, .L148+0x8
	str	r1, [sp]
	mov	r1, #0x0
	mov	r2, #0xc
	mov	r3, #0xc
	bl	BeginNormalPaletteFade
	mov	r0, #0x0
	mov	r1, #0xe
	mov	r2, #0x1d
	mov	r3, #0x13
	bl	MenuZeroFillWindowRect
	ldr	r1, .L148+0xc
	mov	r2, r9
	add	r0, r2, r6
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r1, #0x7
	strh	r1, [r0, #0xe]
	ldr	r1, .L148+0x10
	str	r1, [r0]
.L139:
	add	sp, sp, #0x4
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L149:
	.align	2, 0
.L148:
	.word	sUnknown_0203931C
	.word	gSprites
	.word	0x735f
	.word	gTasks
	.word	sub_81426F8
.Lfe15:
	.size	 sub_8142618,.Lfe15-sub_8142618
	.align	2, 0
	.type	 sub_81426F8,function
	.thumb_func
sub_81426F8:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L153
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r2, r1, r2
	ldrh	r1, [r2, #0xe]
	mov	r3, #0xe
	ldrsh	r0, [r2, r3]
	cmp	r0, #0xf
	ble	.L151	@cond_branch
	ldr	r0, .L153+0x4
	str	r0, [r2]
	b	.L152
.L154:
	.align	2, 0
.L153:
	.word	gTasks
	.word	sub_8142738
.L151:
	add	r0, r1, #0x1
	strh	r0, [r2, #0xe]
	ldr	r1, .L155
	mov	r3, #0xe
	ldrsh	r0, [r2, r3]
	lsl	r0, r0, #0x8
	strh	r0, [r1]
.L152:
	pop	{r0}
	bx	r0
.L156:
	.align	2, 0
.L155:
	.word	0x4000052
.Lfe16:
	.size	 sub_81426F8,.Lfe16-sub_81426F8
	.align	2, 0
	.type	 sub_8142738,function
	.thumb_func
sub_8142738:
	push	{r4, r5, lr}
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	mov	r1, #0x80
	lsl	r1, r1, #0x13
	mov	r2, #0xca
	lsl	r2, r2, #0x5
	add	r0, r2, #0
	strh	r0, [r1]
	ldr	r4, .L158
	add	r0, r4, #0
	bl	SetUpWindowConfig
	add	r0, r4, #0
	bl	InitMenuWindow
	ldr	r0, .L158+0x4
	ldrb	r0, [r0, #0x8]
	mov	r1, #0x78
	mov	r2, #0x48
	mov	r3, #0x6
	bl	HallOfFame_LoadTrainerPic
	ldr	r2, .L158+0x8
	lsl	r1, r5, #0x2
	add	r1, r1, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	strh	r0, [r1, #0x10]
	mov	r0, #0x78
	strh	r0, [r1, #0xe]
	ldr	r0, .L158+0xc
	str	r0, [r1]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L159:
	.align	2, 0
.L158:
	.word	gWindowConfig_81E71B4
	.word	gSaveBlock2
	.word	gTasks
	.word	sub_8142794
.Lfe17:
	.size	 sub_8142738,.Lfe17-sub_8142738
	.align	2, 0
	.type	 sub_8142794,function
	.thumb_func
sub_8142794:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L165
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r4, r1, r2
	ldrh	r1, [r4, #0xe]
	mov	r2, #0xe
	ldrsh	r0, [r4, r2]
	cmp	r0, #0
	beq	.L161	@cond_branch
	sub	r0, r1, #0x1
	strh	r0, [r4, #0xe]
	b	.L162
.L166:
	.align	2, 0
.L165:
	.word	gTasks
.L161:
	ldr	r2, .L167
	mov	r3, #0x10
	ldrsh	r1, [r4, r3]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r1, r0, r2
	ldrh	r2, [r1, #0x20]
	mov	r3, #0x20
	ldrsh	r0, [r1, r3]
	cmp	r0, #0xa0
	beq	.L163	@cond_branch
	add	r0, r2, #0x1
	strh	r0, [r1, #0x20]
	b	.L162
.L168:
	.align	2, 0
.L167:
	.word	gSprites
.L163:
	mov	r0, #0x1
	mov	r1, #0x2
	mov	r2, #0xf
	mov	r3, #0x9
	bl	MenuDrawTextWindow
	mov	r0, #0x1
	mov	r1, #0x2
	bl	HallOfFame_PrintPlayerInfo
	mov	r0, #0x2
	mov	r1, #0xe
	mov	r2, #0x1b
	mov	r3, #0x13
	bl	MenuDrawTextWindow
	ldr	r0, .L169
	mov	r1, #0x4
	mov	r2, #0xf
	bl	MenuPrint
	ldr	r0, .L169+0x4
	str	r0, [r4]
.L162:
	pop	{r4}
	pop	{r0}
	bx	r0
.L170:
	.align	2, 0
.L169:
	.word	gMenuText_HOFCongratulations
	.word	sub_8142818
.Lfe18:
	.size	 sub_8142794,.Lfe18-sub_8142794
	.align	2, 0
	.type	 sub_8142818,function
	.thumb_func
sub_8142818:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L173
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L172	@cond_branch
	mov	r0, #0x4
	bl	FadeOutBGM
	ldr	r0, .L173+0x4
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L173+0x8
	str	r0, [r1]
.L172:
	pop	{r4}
	pop	{r0}
	bx	r0
.L174:
	.align	2, 0
.L173:
	.word	gMain
	.word	gTasks
	.word	sub_8142850
.Lfe19:
	.size	 sub_8142818,.Lfe19-sub_8142818
	.align	2, 0
	.type	 sub_8142850,function
	.thumb_func
sub_8142850:
	push	{r4, lr}
	add	sp, sp, #0xfffffffc
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L176
	ldr	r1, .L176+0x4
	mov	r2, #0x80
	lsl	r2, r2, #0x2
	bl	CpuSet
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r1, #0x8
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r1, .L176+0x8
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L176+0xc
	str	r1, [r0]
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L177:
	.align	2, 0
.L176:
	.word	gPlttBufferFaded
	.word	gPlttBufferUnfaded
	.word	gTasks
	.word	sub_81428A0
.Lfe20:
	.size	 sub_8142850,.Lfe20-sub_8142850
	.align	2, 0
	.type	 sub_81428A0,function
	.thumb_func
sub_81428A0:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r0, .L180
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L179	@cond_branch
	add	r0, r2, #0
	bl	DestroyTask
	ldr	r0, .L180+0x4
	bl	SetMainCallback2
.L179:
	pop	{r0}
	bx	r0
.L181:
	.align	2, 0
.L180:
	.word	gPaletteFade
	.word	sub_81439D0
.Lfe21:
	.size	 sub_81428A0,.Lfe21-sub_81428A0
	.align	2, 0
	.globl	sub_81428CC
	.type	 sub_81428CC,function
	.thumb_func
sub_81428CC:
	push	{r4, r5, lr}
	ldr	r0, .L194
	ldr	r1, .L194+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x5
	bhi	.L185	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L194+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L195:
	.align	2, 0
.L194:
	.word	gMain
	.word	0x43c
	.word	.L192
	.align	2, 0
	.align	2, 0
.L192:
	.word	.L185
	.word	.L186
	.word	.L187
	.word	.L188
	.word	.L189
	.word	.L191
.L185:
	mov	r0, #0x0
	bl	SetVBlankCallback
	bl	sub_81433E0
	ldr	r0, .L196
	ldr	r2, .L196+0x4
	add	r0, r0, r2
	mov	r1, #0x1
	strb	r1, [r0]
	b	.L183
.L197:
	.align	2, 0
.L196:
	.word	gMain
	.word	0x43c
.L186:
	bl	sub_8143570
	ldr	r1, .L198
	ldr	r3, .L198+0x4
	add	r1, r1, r3
	b	.L193
.L199:
	.align	2, 0
.L198:
	.word	gMain
	.word	0x43c
.L187:
	ldr	r0, .L200
	bl	SetVBlankCallback
	ldr	r3, .L200+0x4
	ldrh	r2, [r3]
	mov	r0, #0x0
	strh	r0, [r3]
	ldr	r4, .L200+0x8
	ldrh	r0, [r4]
	mov	r1, #0x1
	orr	r0, r0, r1
	strh	r0, [r4]
	strh	r2, [r3]
	ldr	r2, .L200+0xc
	ldrh	r0, [r2]
	mov	r1, #0x8
	orr	r0, r0, r1
	strh	r0, [r2]
	ldr	r1, .L200+0x10
	ldr	r4, .L200+0x14
	add	r1, r1, r4
	b	.L193
.L201:
	.align	2, 0
.L200:
	.word	VBlankCB_HallOfFame
	.word	0x4000208
	.word	0x4000200
	.word	0x4000004
	.word	gMain
	.word	0x43c
.L188:
	ldr	r0, .L202
	mov	r1, #0x0
	strh	r1, [r0]
	add	r0, r0, #0x2
	strh	r1, [r0]
	add	r0, r0, #0x2
	strh	r1, [r0]
	bl	sub_81435B8
	ldr	r0, .L202+0x4
	add	r2, r0, #0
	ldr	r1, .L202+0x8
	ldmia	r1!, {r3, r4, r5}
	stmia	r2!, {r3, r4, r5}
	ldmia	r1!, {r3, r5}
	stmia	r2!, {r3, r5}
	bl	sub_80C5CD4
	ldr	r1, .L202+0xc
	ldr	r4, .L202+0x10
	add	r1, r1, r4
	b	.L193
.L203:
	.align	2, 0
.L202:
	.word	0x4000050
	.word	gSharedMem+0x1c000
	.word	sDummyFameMon
	.word	gMain
	.word	0x43c
.L189:
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	UpdatePaletteFade
	bl	sub_80C5DCC
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L183	@cond_branch
	ldr	r1, .L204
	ldr	r5, .L204+0x4
	add	r1, r1, r5
.L193:
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L183
.L205:
	.align	2, 0
.L204:
	.word	gMain
	.word	0x43c
.L191:
	ldr	r1, .L206
	ldr	r2, .L206+0x4
	add	r0, r2, #0
	strh	r0, [r1]
	add	r1, r1, #0x2
	mov	r3, #0xe2
	lsl	r3, r3, #0x3
	add	r0, r3, #0
	strh	r0, [r1]
	add	r1, r1, #0x2
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L206+0x8
	mov	r1, #0x0
	bl	CreateTask
	ldr	r0, .L206+0xc
	bl	SetMainCallback2
.L183:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L207:
	.align	2, 0
.L206:
	.word	0x4000050
	.word	0x3f42
	.word	sub_8142A28
	.word	CB2_HallOfFame
.Lfe22:
	.size	 sub_81428CC,.Lfe22-sub_81428CC
	.align	2, 0
	.type	 sub_8142A28,function
	.thumb_func
sub_8142A28:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r0, #0x3
	bl	sub_8125EC8
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L209	@cond_branch
	ldr	r0, .L225
	lsl	r1, r5, #0x2
	add	r1, r1, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L225+0x4
	str	r0, [r1]
	b	.L210
.L226:
	.align	2, 0
.L225:
	.word	gTasks
	.word	sub_8142FEC
.L209:
	ldr	r2, .L227
	mov	r3, #0x0
	ldrh	r1, [r2, #0x8]
	ldr	r4, .L227+0x4
	add	r0, r4, #0
	and	r0, r0, r1
	ldr	r7, .L227+0x8
	lsl	r6, r5, #0x2
	cmp	r0, #0
	beq	.L212	@cond_branch
.L213:
	add	r0, r3, #0x1
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	add	r2, r2, #0x78
	cmp	r3, #0x31
	bhi	.L217	@cond_branch
	ldrh	r1, [r2, #0x8]
	add	r0, r4, #0
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L213	@cond_branch
.L212:
	cmp	r3, #0x31
	bhi	.L217	@cond_branch
	add	r0, r6, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r7
	sub	r1, r3, #0x1
	b	.L224
.L228:
	.align	2, 0
.L227:
	.word	gSharedMem+0x1e000
	.word	0x1ff
	.word	gTasks
.L217:
	add	r0, r6, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r7
	mov	r1, #0x31
.L224:
	strh	r1, [r0, #0x8]
	mov	r0, #0xa
	bl	GetGameStat
	ldr	r2, .L229
	add	r1, r6, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	strh	r0, [r1, #0xa]
	mov	r3, #0x0
	ldr	r7, .L229+0x4
	ldr	r4, .L229+0x8
.L222:
	lsl	r1, r3, #0x1
	add	r2, r1, r7
	add	r0, r3, #0x3
	strh	r0, [r2]
	add	r1, r1, r4
	add	r0, r0, #0x11
	strh	r0, [r1]
	add	r0, r3, #0x1
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	cmp	r3, #0x10
	bls	.L222	@cond_branch
	ldr	r4, .L229+0xc
	add	r0, r4, #0
	bl	SetUpWindowConfig
	add	r0, r4, #0
	bl	InitMenuWindow
	ldr	r1, .L229
	add	r0, r6, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L229+0x10
	str	r1, [r0]
.L210:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L230:
	.align	2, 0
.L229:
	.word	gTasks
	.word	0x600381a
	.word	0x600385a
	.word	gWindowConfig_81E7198
	.word	sub_8142B04
.Lfe23:
	.size	 sub_8142A28,.Lfe23-sub_8142A28
	.align	2, 0
	.type	 sub_8142B04,function
	.thumb_func
sub_8142B04:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #0xfffffff0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	ldr	r3, .L253
	mov	r5, #0x0
	ldr	r1, .L253+0x4
	lsl	r0, r0, #0x2
	add	r0, r0, r8
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r2, #0x8
	ldrsh	r0, [r0, r2]
	add	r6, r1, #0
	ldr	r2, .L253+0x8
	cmp	r5, r0
	bge	.L233	@cond_branch
	add	r1, r0, #0
.L235:
	add	r3, r3, #0x78
	add	r0, r5, #0x1
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	cmp	r5, r1
	blt	.L235	@cond_branch
.L233:
	add	r4, r3, #0
	mov	r0, #0x0
	str	r0, [r2]
	mov	r5, r8
	lsl	r2, r5, #0x2
	add	r1, r2, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r6
	strh	r0, [r1, #0xc]
	strh	r0, [r1, #0x10]
	mov	r5, #0x0
	str	r2, [sp, #0xc]
	ldr	r6, .L253+0xc
	add	r2, r1, #0
.L240:
	ldrh	r1, [r4, #0x8]
	add	r0, r6, #0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L239	@cond_branch
	ldrh	r0, [r2, #0x10]
	add	r0, r0, #0x1
	strh	r0, [r2, #0x10]
.L239:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	add	r4, r4, #0x14
	cmp	r5, #0x5
	bls	.L240	@cond_branch
	add	r4, r3, #0
	mov	r5, #0x0
	ldr	r1, .L253+0x4
	ldr	r0, [sp, #0xc]
	add	r0, r0, r8
	lsl	r7, r0, #0x3
	add	r6, r7, r1
	str	r6, [sp, #0x8]
	add	r1, r1, #0x8
	mov	r9, r1
	ldr	r0, .L253+0x10
	mov	sl, r0
.L246:
	ldrh	r1, [r4, #0x8]
	ldr	r2, .L253+0xc
	add	r0, r2, #0
	and	r0, r0, r1
	add	r6, r1, #0
	cmp	r0, #0
	beq	.L247	@cond_branch
	ldr	r1, [sp, #0x8]
	mov	r2, #0x10
	ldrsh	r0, [r1, r2]
	cmp	r0, #0x3
	ble	.L248	@cond_branch
	lsl	r1, r5, #0x3
	ldr	r0, .L253+0x14
	add	r0, r0, #0x4
	add	r0, r1, r0
	ldrh	r3, [r0]
	ldr	r0, .L253+0x18
	add	r1, r1, r0
	b	.L252
.L254:
	.align	2, 0
.L253:
	.word	gSharedMem+0x1e000
	.word	gTasks
	.word	sUnknown_0203931C
	.word	0x1ff
	.word	sHallOfFame_MonsHalfTeamPositions
	.word	sHallOfFame_MonsFullTeamPositions
	.word	sHallOfFame_MonsFullTeamPositions+0x6
.L248:
	lsl	r1, r5, #0x3
	mov	r0, sl
	add	r0, r0, #0x4
	add	r0, r1, r0
	ldrh	r3, [r0]
	ldr	r2, .L255
	add	r1, r1, r2
.L252:
	ldrh	r2, [r1]
	lsl	r0, r6, #0x17
	lsr	r0, r0, #0x17
	lsl	r1, r3, #0x10
	asr	r1, r1, #0x10
	lsl	r2, r2, #0x10
	asr	r2, r2, #0x10
	ldr	r3, [r4]
	str	r3, [sp]
	ldr	r3, [r4, #0x4]
	str	r3, [sp, #0x4]
	add	r3, r5, #0
	bl	HallOfFame_LoadPokemonPic
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r2, .L255+0x4
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldrb	r3, [r1, #0x5]
	mov	r6, #0xd
	neg	r6, r6
	add	r2, r6, #0
	and	r3, r3, r2
	mov	r2, #0x4
	orr	r3, r3, r2
	strb	r3, [r1, #0x5]
	add	r1, r5, #0x5
	lsl	r1, r1, #0x1
	add	r1, r1, r7
	add	r1, r1, r9
	strh	r0, [r1]
	b	.L245
.L256:
	.align	2, 0
.L255:
	.word	sHallOfFame_MonsHalfTeamPositions+0x6
	.word	gSprites
.L247:
	add	r0, r5, #0x5
	lsl	r0, r0, #0x1
	add	r0, r0, r7
	add	r0, r0, r9
	mov	r1, #0xff
	strh	r1, [r0]
.L245:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	add	r4, r4, #0x14
	cmp	r5, #0x5
	bls	.L246	@cond_branch
	ldr	r0, .L257
	ldr	r2, .L257+0x4
	mov	r1, #0xc
	bl	BlendPalettes
	ldr	r3, .L257+0x8
	ldr	r1, .L257+0xc
	add	r0, r3, #0
	bl	StringCopy
	add	r3, r0, #0
	mov	r5, #0xfc
	strb	r5, [r3]
	mov	r0, #0x14
	strb	r0, [r3, #0x1]
	mov	r0, #0x6
	strb	r0, [r3, #0x2]
	add	r3, r3, #0x3
	ldr	r0, .L257+0x10
	ldr	r4, [sp, #0xc]
	add	r4, r4, r8
	lsl	r4, r4, #0x3
	add	r4, r4, r0
	mov	r0, #0xa
	ldrsh	r1, [r4, r0]
	add	r0, r3, #0
	bl	ConvertIntToDecimalString
	add	r3, r0, #0
	strb	r5, [r3]
	mov	r0, #0x13
	strb	r0, [r3, #0x1]
	mov	r0, #0xf0
	strb	r0, [r3, #0x2]
	mov	r0, #0xff
	strb	r0, [r3, #0x3]
	ldr	r0, .L257+0x8
	mov	r1, #0x0
	mov	r2, #0x0
	bl	MenuPrint
	ldr	r0, .L257+0x14
	str	r0, [r4]
	add	sp, sp, #0x10
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L258:
	.align	2, 0
.L257:
	.word	0xffff0000
	.word	0x735f
	.word	gStringVar1
	.word	gMenuText_HOFNumber
	.word	gTasks
	.word	sub_8142CC8
.Lfe24:
	.size	 sub_8142B04,.Lfe24-sub_8142B04
	.align	2, 0
	.type	 sub_8142CC8,function
	.thumb_func
sub_8142CC8:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L272
	mov	r8, r0
	mov	r3, #0x0
	ldr	r1, .L272+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r2, #0x8
	ldrsh	r0, [r0, r2]
	cmp	r3, r0
	bge	.L261	@cond_branch
	add	r1, r0, #0
.L263:
	mov	r0, #0x78
	add	r8, r8, r0
	add	r0, r3, #0x1
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	cmp	r3, r1
	blt	.L263	@cond_branch
.L261:
	mov	r3, #0x0
	lsl	r6, r4, #0x2
	add	r0, r6, r4
	lsl	r5, r0, #0x3
	ldr	r1, .L272+0x8
	mov	sl, r1
	ldr	r2, .L272+0xc
	mov	ip, r2
	mov	r0, #0xd
	neg	r0, r0
	mov	r9, r0
	mov	r7, #0x4
.L268:
	add	r0, r3, #0x5
	lsl	r0, r0, #0x1
	add	r0, r0, r5
	add	r0, r0, sl
	ldrh	r1, [r0]
	cmp	r1, #0xff
	beq	.L267	@cond_branch
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, ip
	ldrb	r2, [r0, #0x5]
	mov	r1, r9
	and	r1, r1, r2
	orr	r1, r1, r7
	strb	r1, [r0, #0x5]
.L267:
	add	r0, r3, #0x1
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	cmp	r3, #0x5
	bls	.L268	@cond_branch
	add	r1, r6, r4
	lsl	r1, r1, #0x3
	ldr	r2, .L272+0x4
	add	r5, r1, r2
	mov	r2, #0xc
	ldrsh	r0, [r5, r2]
	add	r0, r0, #0x5
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldr	r1, .L272+0x4
	add	r1, r1, #0x8
	add	r0, r0, r1
	ldrh	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L272+0xc
	add	r0, r0, r1
	ldrb	r2, [r0, #0x5]
	mov	r1, #0xd
	neg	r1, r1
	and	r1, r1, r2
	strb	r1, [r0, #0x5]
	lsr	r1, r1, #0x4
	mov	r0, #0x80
	lsl	r0, r0, #0x9
	lsl	r0, r0, r1
	ldr	r1, .L272+0x10
	eor	r0, r0, r1
	ldr	r2, .L272+0x14
	str	r0, [r2]
	ldr	r2, .L272+0x18
	mov	r1, #0xc
	bl	BlendPalettesUnfaded
	mov	r0, #0xc
	ldrsh	r1, [r5, r0]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	mov	r1, r8
	add	r4, r1, r0
	ldrh	r1, [r4, #0x8]
	ldr	r0, .L272+0x1c
	and	r0, r0, r1
	mov	r1, #0xce
	lsl	r1, r1, #0x1
	cmp	r0, r1
	beq	.L271	@cond_branch
	bl	StopCryAndClearCrySongs
	ldrh	r0, [r4, #0x8]
	lsl	r0, r0, #0x17
	lsr	r0, r0, #0x17
	mov	r1, #0x0
	bl	PlayCry1
.L271:
	add	r0, r4, #0
	mov	r1, #0x0
	mov	r2, #0xe
	bl	HallOfFame_PrintMonInfo
	ldr	r0, .L272+0x20
	str	r0, [r5]
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L273:
	.align	2, 0
.L272:
	.word	gSharedMem+0x1e000
	.word	gTasks
	.word	gTasks+0x8
	.word	gSprites
	.word	0xffff0000
	.word	sUnknown_0203931C
	.word	0x735f
	.word	0x1ff
	.word	sub_8142DF4
.Lfe25:
	.size	 sub_8142CC8,.Lfe25-sub_8142CC8
	.align	2, 0
	.type	 sub_8142DF4,function
	.thumb_func
sub_8142DF4:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r1, .L293
	ldrh	r2, [r1, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r2
	add	r3, r1, #0
	cmp	r0, #0
	beq	.L275	@cond_branch
	ldr	r7, .L293+0x4
	lsl	r0, r6, #0x2
	add	r1, r0, r6
	lsl	r3, r1, #0x3
	add	r4, r3, r7
	ldrh	r2, [r4, #0x8]
	mov	r5, #0x8
	ldrsh	r1, [r4, r5]
	mov	r8, r0
	cmp	r1, #0
	beq	.L276	@cond_branch
	sub	r0, r2, #0x1
	strh	r0, [r4, #0x8]
	mov	r5, #0x0
	add	r7, r7, #0x8
	mov	r9, r7
	add	r7, r3, #0
.L280:
	add	r0, r5, #0x5
	lsl	r0, r0, #0x1
	add	r0, r0, r7
	add	r0, r0, r9
	ldrb	r1, [r0]
	cmp	r1, #0xff
	beq	.L279	@cond_branch
	ldr	r0, .L293+0x8
	lsl	r4, r1, #0x4
	add	r4, r4, r1
	lsl	r4, r4, #0x2
	add	r4, r4, r0
	ldrb	r0, [r4, #0x5]
	lsr	r0, r0, #0x4
	bl	GetSpritePaletteTagByPaletteNum
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	FreeSpritePaletteByTag
	add	r0, r4, #0
	bl	DestroySprite
.L279:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	cmp	r5, #0x5
	bls	.L280	@cond_branch
	ldr	r0, .L293+0x4
	mov	r2, r8
	add	r1, r2, r6
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrh	r2, [r1, #0xa]
	mov	r3, #0xa
	ldrsh	r0, [r1, r3]
	cmp	r0, #0
	beq	.L283	@cond_branch
	sub	r0, r2, #0x1
	strh	r0, [r1, #0xa]
.L283:
	ldr	r0, .L293+0xc
	str	r0, [r1]
	b	.L286
.L294:
	.align	2, 0
.L293:
	.word	gMain
	.word	gTasks
	.word	gSprites
	.word	sub_8142B04
.L276:
	bl	IsCryPlayingOrClearCrySongs
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L285	@cond_branch
	bl	StopCryAndClearCrySongs
	ldr	r0, .L295
	ldr	r1, .L295+0x4
	mov	r2, #0x80
	lsl	r2, r2, #0x1
	bl	m4aMPlayVolumeControl
.L285:
	ldr	r0, .L295+0x8
	str	r0, [r4]
	b	.L286
.L296:
	.align	2, 0
.L295:
	.word	gMPlay_BGM
	.word	0xffff
	.word	sub_8142F78
.L275:
	mov	r0, #0x2
	and	r0, r0, r2
	cmp	r0, #0
	beq	.L287	@cond_branch
	bl	IsCryPlayingOrClearCrySongs
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L288	@cond_branch
	bl	StopCryAndClearCrySongs
	ldr	r0, .L297
	ldr	r1, .L297+0x4
	mov	r2, #0x80
	lsl	r2, r2, #0x1
	bl	m4aMPlayVolumeControl
.L288:
	ldr	r0, .L297+0x8
	lsl	r1, r6, #0x2
	add	r1, r1, r6
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L297+0xc
	str	r0, [r1]
	b	.L286
.L298:
	.align	2, 0
.L297:
	.word	gMPlay_BGM
	.word	0xffff
	.word	gTasks
	.word	sub_8142F78
.L287:
	mov	r0, #0x40
	and	r0, r0, r2
	cmp	r0, #0
	beq	.L290	@cond_branch
	ldr	r0, .L299
	lsl	r1, r6, #0x2
	add	r1, r1, r6
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrh	r2, [r1, #0xc]
	mov	r4, #0xc
	ldrsh	r0, [r1, r4]
	cmp	r0, #0
	beq	.L290	@cond_branch
	sub	r0, r2, #0x1
	strh	r0, [r1, #0xc]
	ldr	r0, .L299+0x4
	str	r0, [r1]
	b	.L286
.L300:
	.align	2, 0
.L299:
	.word	gTasks
	.word	sub_8142CC8
.L290:
	ldrh	r1, [r3, #0x2e]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L286	@cond_branch
	ldr	r1, .L301
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	add	r2, r0, r1
	mov	r5, #0xc
	ldrsh	r1, [r2, r5]
	mov	r3, #0x10
	ldrsh	r0, [r2, r3]
	sub	r0, r0, #0x1
	cmp	r1, r0
	bge	.L286	@cond_branch
	ldrh	r0, [r2, #0xc]
	add	r0, r0, #0x1
	strh	r0, [r2, #0xc]
	ldr	r0, .L301+0x4
	str	r0, [r2]
.L286:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L302:
	.align	2, 0
.L301:
	.word	gTasks
	.word	sub_8142CC8
.Lfe26:
	.size	 sub_8142DF4,.Lfe26-sub_8142DF4
	.align	2, 0
	.type	 sub_8142F78,function
	.thumb_func
sub_8142F78:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L304
	ldr	r1, .L304+0x4
	mov	r2, #0x80
	lsl	r2, r2, #0x2
	bl	CpuSet
	ldr	r0, .L304+0x8
	add	r2, r0, #0
	ldr	r1, .L304+0xc
	ldmia	r1!, {r3, r5, r6}
	stmia	r2!, {r3, r5, r6}
	ldmia	r1!, {r3, r5}
	stmia	r2!, {r3, r5}
	bl	sub_80C5E38
	ldr	r1, .L304+0x10
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L304+0x14
	str	r1, [r0]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L305:
	.align	2, 0
.L304:
	.word	gPlttBufferFaded
	.word	gPlttBufferUnfaded
	.word	gSharedMem+0x1c000
	.word	sDummyFameMon
	.word	gTasks
	.word	sub_8142FCC
.Lfe27:
	.size	 sub_8142F78,.Lfe27-sub_8142F78
	.align	2, 0
	.type	 sub_8142FCC,function
	.thumb_func
sub_8142FCC:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	sub_80C5F98
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L307	@cond_branch
	add	r0, r4, #0
	bl	DestroyTask
	bl	ReturnFromHallOfFamePC
.L307:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe28:
	.size	 sub_8142FCC,.Lfe28-sub_8142FCC
	.align	2, 0
	.type	 sub_8142FEC,function
	.thumb_func
sub_8142FEC:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x2
	mov	r1, #0xe
	mov	r2, #0x1b
	mov	r3, #0x13
	bl	MenuDrawTextWindow
	ldr	r0, .L309
	mov	r1, #0x3
	mov	r2, #0xf
	bl	MenuPrintMessage
	ldr	r1, .L309+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L309+0x8
	str	r1, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L310:
	.align	2, 0
.L309:
	.word	gMenuText_HOFCorrupt
	.word	gTasks
	.word	sub_814302C
.Lfe29:
	.size	 sub_8142FEC,.Lfe29-sub_8142FEC
	.align	2, 0
	.type	 sub_814302C,function
	.thumb_func
sub_814302C:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	MenuUpdateWindowText
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L312	@cond_branch
	ldr	r0, .L313
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L312	@cond_branch
	ldr	r0, .L313+0x4
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L313+0x8
	str	r0, [r1]
.L312:
	pop	{r4}
	pop	{r0}
	bx	r0
.L314:
	.align	2, 0
.L313:
	.word	gMain
	.word	gTasks
	.word	sub_8142F78
.Lfe30:
	.size	 sub_814302C,.Lfe30-sub_814302C
	.align	2, 0
	.type	 sub_8143068,function
	.thumb_func
sub_8143068:
	push	{lr}
	lsl	r2, r1, #0x18
	ldr	r0, .L316
	mov	r1, #0x80
	lsl	r1, r1, #0x11
	add	r2, r2, r1
	lsr	r2, r2, #0x18
	mov	r1, #0x0
	mov	r3, #0xf0
	bl	sub_8072BD8
	pop	{r0}
	bx	r0
.L317:
	.align	2, 0
.L316:
	.word	gMenuText_WelcomeToHOFAndDexRating
.Lfe31:
	.size	 sub_8143068,.Lfe31-sub_8143068
	.align	2, 0
	.type	 HallOfFame_PrintMonInfo,function
	.thumb_func
HallOfFame_PrintMonInfo:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #0xffffffec
	mov	r9, r0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r8, r1
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	sl, r2
	ldr	r7, .L342
	mov	r0, #0xfc
	strb	r0, [r7]
	mov	r0, #0x13
	strb	r0, [r7, #0x1]
	mov	r0, #0x28
	strb	r0, [r7, #0x2]
	mov	r0, #0xff
	strb	r0, [r7, #0x3]
	mov	r0, r9
	ldrh	r2, [r0, #0x8]
	ldr	r0, .L342+0x4
	and	r0, r0, r2
	mov	r1, #0xce
	lsl	r1, r1, #0x1
	cmp	r0, r1
	beq	.L319	@cond_branch
	lsl	r0, r2, #0x17
	lsr	r0, r0, #0x17
	bl	SpeciesToPokedexNum
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	ldr	r0, .L342+0x8
	cmp	r6, r0
	beq	.L319	@cond_branch
	ldr	r1, .L342+0xc
	add	r0, r7, #0
	bl	StringCopy
	add	r7, r0, #0
	add	r1, r6, #0
	mov	r2, #0x2
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
.L319:
	ldr	r5, .L342
	mov	r1, r8
	add	r1, r1, #0x4
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r4, sl
	add	r4, r4, #0x1
	lsl	r2, r4, #0x18
	lsr	r2, r2, #0x18
	add	r0, r5, #0
	bl	MenuPrint
	add	r7, r5, #0
	mov	r3, #0x0
	mov	r1, r9
	ldrb	r0, [r1, #0xa]
	str	r4, [sp]
	mov	r2, r8
	add	r2, r2, #0x9
	str	r2, [sp, #0xc]
	mov	r6, sl
	add	r6, r6, #0x3
	str	r6, [sp, #0x8]
	cmp	r0, #0xff
	beq	.L322	@cond_branch
	mov	r2, r9
	add	r2, r2, #0xa
.L323:
	add	r1, r7, r3
	add	r0, r2, r3
	ldrb	r0, [r0]
	strb	r0, [r1]
	add	r0, r3, #0x1
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	cmp	r3, #0x9
	bhi	.L322	@cond_branch
	add	r0, r2, r3
	ldrb	r0, [r0]
	cmp	r0, #0xff
	bne	.L323	@cond_branch
.L322:
	add	r7, r7, r3
	mov	r2, #0xff
	strb	r2, [r7]
	mov	r1, r9
	ldrh	r0, [r1, #0x8]
	ldr	r1, .L342+0x4
	and	r1, r1, r0
	mov	r0, #0xce
	lsl	r0, r0, #0x1
	cmp	r1, r0
	bne	.L327	@cond_branch
	mov	r0, #0xfc
	strb	r0, [r7]
	mov	r0, #0x13
	strb	r0, [r7, #0x1]
	mov	r0, #0xa0
	strb	r0, [r7, #0x2]
	strb	r2, [r7, #0x3]
	ldr	r0, .L342
	ldr	r2, [sp, #0xc]
	lsl	r1, r2, #0x18
	lsr	r1, r1, #0x18
	ldr	r3, [sp]
	lsl	r2, r3, #0x18
	lsr	r2, r2, #0x18
	bl	MenuPrint
	ldr	r6, [sp, #0x8]
	lsl	r1, r6, #0x18
	lsr	r1, r1, #0x18
	mov	r3, sl
	add	r3, r3, #0x4
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r0, #0x0
	mov	r2, #0x1d
	bl	MenuZeroFillWindowRect
	b	.L328
.L343:
	.align	2, 0
.L342:
	.word	gStringVar1
	.word	0x1ff
	.word	0xffff
	.word	gOtherText_Number2
.L327:
	mov	r0, #0xfc
	strb	r0, [r7]
	mov	r0, #0x13
	strb	r0, [r7, #0x1]
	mov	r0, #0x3e
	strb	r0, [r7, #0x2]
	add	r7, r7, #0x3
	mov	r0, #0xba
	strb	r0, [r7]
	add	r7, r7, #0x1
	mov	r3, #0x0
	ldr	r2, .L344
	mov	r1, r9
	ldrh	r0, [r1, #0x8]
	lsl	r0, r0, #0x17
	lsr	r0, r0, #0x17
	mov	r1, #0xb
	mul	r0, r0, r1
	add	r0, r0, r2
	ldrb	r0, [r0]
	mov	r6, r8
	add	r6, r6, #0x7
	str	r6, [sp, #0x4]
	mov	r1, r8
	add	r1, r1, #0xd
	str	r1, [sp, #0x10]
	cmp	r0, #0xff
	beq	.L330	@cond_branch
	add	r5, r2, #0
	mov	r4, #0xb
.L331:
	add	r1, r7, r3
	mov	r6, r9
	ldrh	r0, [r6, #0x8]
	lsl	r0, r0, #0x17
	lsr	r0, r0, #0x17
	mul	r0, r0, r4
	add	r0, r3, r0
	add	r0, r0, r5
	ldrb	r0, [r0]
	strb	r0, [r1]
	add	r0, r3, #0x1
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	cmp	r3, #0x9
	bhi	.L330	@cond_branch
	ldrh	r0, [r6, #0x8]
	lsl	r0, r0, #0x17
	lsr	r0, r0, #0x17
	mul	r0, r0, r4
	add	r0, r3, r0
	add	r0, r0, r2
	ldrb	r0, [r0]
	cmp	r0, #0xff
	bne	.L331	@cond_branch
.L330:
	add	r7, r7, r3
	mov	r0, #0x0
	strb	r0, [r7]
	add	r7, r7, #0x1
	mov	r1, r9
	ldrh	r0, [r1, #0x8]
	ldr	r1, .L344+0x4
	and	r1, r1, r0
	cmp	r1, #0x20
	beq	.L335	@cond_branch
	cmp	r1, #0x1d
	beq	.L335	@cond_branch
	lsl	r0, r0, #0x17
	lsr	r0, r0, #0x17
	mov	r2, r9
	ldr	r1, [r2, #0x4]
	bl	GetGenderFromSpeciesAndPersonality
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0
	beq	.L337	@cond_branch
	cmp	r0, #0xfe
	beq	.L338	@cond_branch
	b	.L335
.L345:
	.align	2, 0
.L344:
	.word	gSpeciesNames
	.word	0x1ff
.L337:
	mov	r0, #0xb5
	b	.L341
.L338:
	mov	r0, #0xb6
.L341:
	strb	r0, [r7]
	add	r7, r7, #0x1
.L335:
	mov	r4, #0xfc
	strb	r4, [r7]
	mov	r3, #0x13
	mov	r8, r3
	strb	r3, [r7, #0x1]
	mov	r0, #0xa0
	strb	r0, [r7, #0x2]
	mov	r6, #0xff
	mov	sl, r6
	strb	r6, [r7, #0x3]
	ldr	r5, .L346
	ldr	r0, [sp, #0xc]
	lsl	r1, r0, #0x18
	lsr	r1, r1, #0x18
	ldr	r3, [sp]
	lsl	r2, r3, #0x18
	lsr	r2, r2, #0x18
	add	r0, r5, #0
	bl	MenuPrint
	mov	r6, r9
	ldrb	r0, [r6, #0x9]
	lsr	r6, r0, #0x1
	ldr	r1, .L346+0x4
	add	r0, r5, #0
	bl	StringCopy
	add	r7, r0, #0
	strb	r4, [r7]
	mov	r0, #0x14
	strb	r0, [r7, #0x1]
	mov	r0, #0x6
	strb	r0, [r7, #0x2]
	add	r7, r7, #0x3
	add	r0, r7, #0
	add	r1, r6, #0
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	add	r7, r0, #0
	strb	r4, [r7]
	mov	r0, r8
	strb	r0, [r7, #0x1]
	mov	r0, #0x30
	strb	r0, [r7, #0x2]
	mov	r1, sl
	strb	r1, [r7, #0x3]
	ldr	r2, [sp, #0x4]
	lsl	r1, r2, #0x18
	lsr	r1, r1, #0x18
	ldr	r3, [sp, #0x8]
	lsl	r4, r3, #0x18
	lsr	r4, r4, #0x18
	add	r0, r5, #0
	add	r2, r4, #0
	bl	MenuPrint
	mov	r0, r9
	ldrh	r6, [r0]
	ldr	r1, .L346+0x8
	add	r0, r5, #0
	bl	StringCopy
	add	r7, r0, #0
	add	r1, r6, #0
	mov	r2, #0x2
	mov	r3, #0x5
	bl	ConvertIntToDecimalStringN
	ldr	r2, [sp, #0x10]
	lsl	r1, r2, #0x18
	lsr	r1, r1, #0x18
	add	r0, r5, #0
	add	r2, r4, #0
	bl	MenuPrint
.L328:
	add	sp, sp, #0x14
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L347:
	.align	2, 0
.L346:
	.word	gStringVar1
	.word	gOtherText_Level3
	.word	gOtherText_IDNumber
.Lfe32:
	.size	 HallOfFame_PrintMonInfo,.Lfe32-HallOfFame_PrintMonInfo
	.align	2, 0
	.type	 HallOfFame_PrintPlayerInfo,function
	.thumb_func
HallOfFame_PrintPlayerInfo:
	push	{r4, r5, r6, lr}
	mov	r6, sl
	mov	r5, r9
	mov	r4, r8
	push	{r4, r5, r6}
	add	r5, r0, #0
	add	r4, r1, #0
	lsl	r5, r5, #0x18
	lsl	r4, r4, #0x18
	ldr	r0, .L349
	lsr	r1, r5, #0x18
	mov	r8, r1
	mov	r2, #0x80
	lsl	r2, r2, #0x11
	add	r5, r5, r2
	lsr	r5, r5, #0x18
	lsr	r6, r4, #0x18
	add	r4, r4, r2
	lsr	r4, r4, #0x18
	add	r1, r5, #0
	add	r2, r4, #0
	bl	MenuPrint
	ldr	r0, .L349+0x4
	mov	sl, r0
	mov	r1, #0xe
	add	r8, r8, r1
	mov	r2, r8
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r8, r2
	mov	r1, r8
	add	r2, r4, #0
	bl	MenuPrint_RightAligned
	ldr	r0, .L349+0x8
	add	r4, r6, #0x3
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r1, r5, #0
	add	r2, r4, #0
	bl	MenuPrint
	mov	r0, sl
	ldrb	r1, [r0, #0xa]
	ldrb	r0, [r0, #0xb]
	lsl	r0, r0, #0x8
	orr	r1, r1, r0
	ldr	r2, .L349+0xc
	mov	r9, r2
	mov	r0, r9
	mov	r2, #0x2
	mov	r3, #0x5
	bl	ConvertIntToDecimalStringN
	mov	r0, r9
	mov	r1, r8
	add	r2, r4, #0
	bl	MenuPrint_RightAligned
	ldr	r0, .L349+0x10
	add	r6, r6, #0x5
	lsl	r6, r6, #0x18
	lsr	r6, r6, #0x18
	add	r1, r5, #0
	add	r2, r6, #0
	bl	MenuPrint
	mov	r0, sl
	ldrh	r1, [r0, #0xe]
	mov	r0, r9
	bl	ConvertIntToDecimalString
	add	r2, r0, #0
	mov	r1, #0x0
	strb	r1, [r2]
	mov	r0, #0xf0
	strb	r0, [r2, #0x1]
	strb	r1, [r2, #0x2]
	add	r2, r2, #0x3
	mov	r0, sl
	ldrb	r1, [r0, #0x10]
	add	r0, r2, #0
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	add	r2, r0, #0
	mov	r0, #0xff
	strb	r0, [r2]
	mov	r0, r9
	mov	r1, r8
	add	r2, r6, #0
	bl	MenuPrint_RightAligned
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L350:
	.align	2, 0
.L349:
	.word	gOtherText_Name
	.word	gSaveBlock2
	.word	gOtherText_IDNumber2
	.word	gStringVar1
	.word	gMainMenuString_Time
.Lfe33:
	.size	 HallOfFame_PrintPlayerInfo,.Lfe33-HallOfFame_PrintPlayerInfo
	.align	2, 0
	.type	 sub_81433E0,function
	.thumb_func
sub_81433E0:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #0xfffffff8
	mov	r0, #0x80
	lsl	r0, r0, #0x13
	mov	r1, #0x0
	strh	r1, [r0]
	add	r0, r0, #0x8
	strh	r1, [r0]
	add	r0, r0, #0x8
	strh	r1, [r0]
	add	r0, r0, #0x2
	strh	r1, [r0]
	sub	r0, r0, #0x8
	strh	r1, [r0]
	add	r0, r0, #0xa
	strh	r1, [r0]
	add	r0, r0, #0x2
	strh	r1, [r0]
	sub	r0, r0, #0xa
	strh	r1, [r0]
	add	r0, r0, #0xc
	strh	r1, [r0]
	add	r0, r0, #0x2
	strh	r1, [r0]
	sub	r0, r0, #0xc
	strh	r1, [r0]
	add	r0, r0, #0xe
	strh	r1, [r0]
	add	r0, r0, #0x2
	strh	r1, [r0]
	mov	r3, #0xc0
	lsl	r3, r3, #0x13
	mov	r4, #0xc0
	lsl	r4, r4, #0x9
	add	r0, sp, #0x4
	mov	r8, r0
	ldr	r1, .L377
	mov	r9, r1
	mov	r2, sp
	mov	r6, #0x0
	ldr	r1, .L377+0x4
	mov	r5, #0x80
	lsl	r5, r5, #0x5
	ldr	r7, .L377+0x8
	mov	r0, #0x81
	lsl	r0, r0, #0x18
	mov	ip, r0
.L354:
	strh	r6, [r2]
	mov	r0, sp
	str	r0, [r1]
	str	r3, [r1, #0x4]
	str	r7, [r1, #0x8]
	ldr	r0, [r1, #0x8]
	add	r3, r3, r5
	sub	r4, r4, r5
	cmp	r4, r5
	bhi	.L354	@cond_branch
	strh	r6, [r2]
	mov	r2, sp
	str	r2, [r1]
	str	r3, [r1, #0x4]
	lsr	r0, r4, #0x1
	mov	r2, ip
	orr	r0, r0, r2
	str	r0, [r1, #0x8]
	ldr	r0, [r1, #0x8]
	mov	r0, #0xe0
	lsl	r0, r0, #0x13
	mov	r3, #0x80
	lsl	r3, r3, #0x3
	mov	r4, #0x0
	str	r4, [sp, #0x4]
	ldr	r2, .L377+0x4
	mov	r1, r8
	str	r1, [r2]
	str	r0, [r2, #0x4]
	lsr	r0, r3, #0x2
	mov	r1, #0x85
	lsl	r1, r1, #0x18
	orr	r0, r0, r1
	str	r0, [r2, #0x8]
	ldr	r0, [r2, #0x8]
	mov	r1, #0xa0
	lsl	r1, r1, #0x13
	mov	r0, sp
	strh	r4, [r0]
	str	r0, [r2]
	str	r1, [r2, #0x4]
	lsr	r3, r3, #0x1
	mov	r0, #0x81
	lsl	r0, r0, #0x18
	orr	r3, r3, r0
	str	r3, [r2, #0x8]
	ldr	r0, [r2, #0x8]
	mov	r1, #0xc0
	lsl	r1, r1, #0x13
	mov	r0, r9
	bl	LZ77UnCompVram
	mov	r1, #0x0
	ldr	r3, .L377+0xc
	mov	r2, #0x1
.L360:
	lsl	r0, r1, #0x1
	add	r0, r0, r3
	strh	r2, [r0]
	add	r0, r1, #0x1
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	cmp	r1, #0x3f
	bls	.L360	@cond_branch
	mov	r1, #0x0
	ldr	r5, .L377+0x10
	ldr	r3, .L377+0x14
	mov	r2, #0x1
.L365:
	lsl	r0, r1, #0x1
	add	r0, r0, r3
	strh	r2, [r0]
	add	r0, r1, #0x1
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	cmp	r1, #0xbf
	bls	.L365	@cond_branch
	mov	r1, #0x0
	ldr	r4, .L377+0x18
	mov	r3, #0x2
	ldr	r2, .L377+0x1c
.L370:
	lsl	r0, r1, #0x1
	add	r0, r0, r4
	strh	r3, [r0]
	add	r0, r1, #0x1
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	cmp	r1, r2
	bls	.L370	@cond_branch
	add	r2, r5, #0
	mov	r3, #0x80
	lsl	r3, r3, #0x7
	mov	r4, sp
	mov	r6, #0x0
	ldr	r1, .L377+0x4
	mov	r5, #0x80
	lsl	r5, r5, #0x5
	ldr	r7, .L377+0x8
	mov	r0, #0x81
	lsl	r0, r0, #0x18
	mov	ip, r0
.L374:
	strh	r6, [r4]
	mov	r0, sp
	str	r0, [r1]
	str	r2, [r1, #0x4]
	str	r7, [r1, #0x8]
	ldr	r0, [r1, #0x8]
	add	r2, r2, r5
	sub	r3, r3, r5
	cmp	r3, r5
	bhi	.L374	@cond_branch
	strh	r6, [r4]
	mov	r0, sp
	str	r0, [r1]
	str	r2, [r1, #0x4]
	lsr	r0, r3, #0x1
	mov	r2, ip
	orr	r0, r0, r2
	str	r0, [r1, #0x8]
	ldr	r0, [r1, #0x8]
	bl	ResetPaletteFade
	ldr	r0, .L377+0x20
	mov	r1, #0x0
	mov	r2, #0x20
	bl	LoadPalette
	add	sp, sp, #0x8
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L378:
	.align	2, 0
.L377:
	.word	gHallOfFame_Gfx
	.word	0x40000d4
	.word	0x81000800
	.word	0x6003800
	.word	gSharedMem
	.word	0x6003b80
	.word	0x6003000
	.word	0x3ff
	.word	gHallOfFame_Pal
.Lfe34:
	.size	 sub_81433E0,.Lfe34-sub_81433E0
	.align	2, 0
	.type	 sub_8143570,function
	.thumb_func
sub_8143570:
	push	{r4, lr}
	bl	remove_some_task
	bl	ResetTasks
	bl	ResetSpriteData
	bl	FreeAllSpritePalettes
	ldr	r1, .L380
	mov	r0, #0x8
	strb	r0, [r1]
	ldr	r0, .L380+0x4
	bl	LoadCompressedObjectPic
	ldr	r0, .L380+0x8
	bl	LoadCompressedObjectPalette
	ldr	r4, .L380+0xc
	add	r0, r4, #0
	bl	SetUpWindowConfig
	add	r0, r4, #0
	bl	InitMenuWindow
	pop	{r4}
	pop	{r0}
	bx	r0
.L381:
	.align	2, 0
.L380:
	.word	gReservedSpritePaletteCount
	.word	sHallOfFame_ConfettiSpriteSheet
	.word	sHallOfFame_ConfettiSpritePalette
	.word	gWindowConfig_81E71B4
.Lfe35:
	.size	 sub_8143570,.Lfe35-sub_8143570
	.align	2, 0
	.type	 sub_81435B8,function
	.thumb_func
sub_81435B8:
	ldr	r1, .L383
	mov	r2, #0xe0
	lsl	r2, r2, #0x3
	add	r0, r2, #0
	strh	r0, [r1]
	add	r1, r1, #0x4
	sub	r2, r2, #0xfd
	add	r0, r2, #0
	strh	r0, [r1]
	sub	r1, r1, #0xe
	mov	r2, #0xda
	lsl	r2, r2, #0x5
	add	r0, r2, #0
	strh	r0, [r1]
	bx	lr
.L384:
	.align	2, 0
.L383:
	.word	0x400000a
.Lfe36:
	.size	 sub_81435B8,.Lfe36-sub_81435B8
	.align	2, 0
	.type	 sub_81435DC,function
	.thumb_func
sub_81435DC:
	push	{r4, lr}
	add	r2, r0, #0
	ldr	r1, [r2, #0x20]
	ldr	r0, [r2, #0x30]
	cmp	r1, r0
	beq	.L386	@cond_branch
	ldrh	r3, [r2, #0x20]
	mov	r1, #0x20
	ldrsh	r0, [r2, r1]
	mov	r4, #0x30
	ldrsh	r1, [r2, r4]
	cmp	r0, r1
	bge	.L387	@cond_branch
	add	r0, r3, #0
	add	r0, r0, #0xf
	strh	r0, [r2, #0x20]
.L387:
	ldrh	r3, [r2, #0x20]
	mov	r4, #0x20
	ldrsh	r0, [r2, r4]
	cmp	r0, r1
	ble	.L388	@cond_branch
	add	r0, r3, #0
	sub	r0, r0, #0xf
	strh	r0, [r2, #0x20]
.L388:
	ldrh	r3, [r2, #0x22]
	mov	r1, #0x22
	ldrsh	r0, [r2, r1]
	mov	r4, #0x32
	ldrsh	r1, [r2, r4]
	cmp	r0, r1
	bge	.L389	@cond_branch
	add	r0, r3, #0
	add	r0, r0, #0xa
	strh	r0, [r2, #0x22]
.L389:
	ldrh	r3, [r2, #0x22]
	mov	r4, #0x22
	ldrsh	r0, [r2, r4]
	cmp	r0, r1
	ble	.L391	@cond_branch
	add	r0, r3, #0
	sub	r0, r0, #0xa
	strh	r0, [r2, #0x22]
	b	.L391
.L386:
	mov	r0, #0x1
	strh	r0, [r2, #0x2e]
	ldr	r0, .L392
	str	r0, [r2, #0x1c]
.L391:
	pop	{r4}
	pop	{r0}
	bx	r0
.L393:
	.align	2, 0
.L392:
	.word	SpriteCB_HallOfFame_Dummy
.Lfe37:
	.size	 sub_81435DC,.Lfe37-sub_81435DC
	.align	2, 0
	.type	 SpriteCB_HallOfFame_Dummy,function
	.thumb_func
SpriteCB_HallOfFame_Dummy:
	bx	lr
.Lfe38:
	.size	 SpriteCB_HallOfFame_Dummy,.Lfe38-SpriteCB_HallOfFame_Dummy
	.align	2, 0
	.globl	sub_8143648
	.type	 sub_8143648,function
	.thumb_func
sub_8143648:
	push	{r4, r5, r6, r7, lr}
	lsl	r1, r1, #0x18
	ldr	r4, .L396
	add	r3, r4, #0
	ldr	r2, .L396+0x4
	ldmia	r2!, {r5, r6, r7}
	stmia	r3!, {r5, r6, r7}
	ldmia	r2!, {r5, r6, r7}
	stmia	r3!, {r5, r6, r7}
	strh	r0, [r4, #0x2]
	ldr	r0, .L396+0x8
	lsr	r1, r1, #0x16
	add	r1, r1, r0
	ldr	r0, [r1]
	str	r0, [r4, #0xc]
	ldr	r0, .L396+0xc
	str	r0, [r4, #0x8]
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L397:
	.align	2, 0
.L396:
	.word	gUnknown_02024E8C
	.word	sUnknown_0840B6B8
	.word	sUnknown_0840B69C
	.word	gSpriteAnimTable_81E7C64
.Lfe39:
	.size	 sub_8143648,.Lfe39-sub_8143648
	.align	2, 0
	.globl	sub_8143680
	.type	 sub_8143680,function
	.thumb_func
sub_8143680:
	push	{r4, r5, r6, r7, lr}
	lsl	r1, r1, #0x18
	ldr	r4, .L399
	add	r3, r4, #0
	ldr	r2, .L399+0x4
	ldmia	r2!, {r5, r6, r7}
	stmia	r3!, {r5, r6, r7}
	ldmia	r2!, {r5, r6, r7}
	stmia	r3!, {r5, r6, r7}
	strh	r0, [r4, #0x2]
	ldr	r0, .L399+0x8
	lsr	r1, r1, #0x16
	add	r1, r1, r0
	ldr	r0, [r1]
	str	r0, [r4, #0xc]
	ldr	r0, .L399+0xc
	ldr	r0, [r0]
	str	r0, [r4, #0x8]
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L400:
	.align	2, 0
.L399:
	.word	gUnknown_02024E8C
	.word	sUnknown_0840B6B8
	.word	sUnknown_0840B69C
	.word	gUnknown_081EC2A4
.Lfe40:
	.size	 sub_8143680,.Lfe40-sub_8143680
	.align	2, 0
	.type	 HallOfFame_LoadPokemonPic,function
	.thumb_func
HallOfFame_LoadPokemonPic:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #0xfffffff0
	add	r6, r0, #0
	mov	r9, r1
	mov	sl, r2
	mov	r8, r3
	ldr	r7, [sp, #0x34]
	lsl	r6, r6, #0x10
	lsr	r6, r6, #0x10
	mov	r0, r9
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r9, r0
	mov	r1, sl
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	sl, r1
	mov	r2, r8
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	mov	r8, r2
	lsl	r0, r6, #0x3
	ldr	r1, .L402
	add	r0, r0, r1
	ldr	r1, .L402+0x4
	lsl	r2, r6, #0x2
	add	r2, r2, r1
	ldrb	r1, [r2]
	ldrb	r2, [r2, #0x1]
	mov	r3, #0x80
	lsl	r3, r3, #0x12
	ldr	r4, .L402+0x8
	mov	ip, r4
	mov	r5, r8
	lsl	r4, r5, #0x2
	add	r4, r4, ip
	ldr	r4, [r4]
	str	r4, [sp]
	str	r6, [sp, #0x4]
	str	r7, [sp, #0x8]
	mov	r4, #0x1
	str	r4, [sp, #0xc]
	bl	LoadSpecialPokePic
	add	r0, r6, #0
	ldr	r1, [sp, #0x30]
	add	r2, r7, #0
	bl	GetMonSpritePalFromOtIdPersonality
	lsl	r4, r5, #0x4
	mov	r2, #0x80
	lsl	r2, r2, #0x1
	add	r1, r4, r2
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r2, #0x20
	bl	LoadCompressedPalette
	lsl	r1, r5, #0x18
	lsr	r1, r1, #0x18
	mov	r0, r8
	bl	sub_8143648
	ldr	r0, .L402+0xc
	mov	r5, r9
	lsl	r5, r5, #0x10
	asr	r5, r5, #0x10
	mov	r9, r5
	mov	r1, sl
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	mov	sl, r1
	mov	r3, #0xa
	mov	r2, r8
	sub	r3, r3, r2
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r1, r9
	mov	r2, sl
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L402+0x10
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	add	r2, r2, r1
	ldrb	r3, [r2, #0x5]
	mov	r1, #0xf
	and	r1, r1, r3
	orr	r1, r1, r4
	strb	r1, [r2, #0x5]
	add	sp, sp, #0x10
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L403:
	.align	2, 0
.L402:
	.word	gMonFrontPicTable
	.word	gMonFrontPicCoords
	.word	gUnknown_0840B5A0
	.word	gUnknown_02024E8C
	.word	gSprites
.Lfe41:
	.size	 HallOfFame_LoadPokemonPic,.Lfe41-HallOfFame_LoadPokemonPic
	.align	2, 0
	.type	 HallOfFame_LoadTrainerPic,function
	.thumb_func
HallOfFame_LoadTrainerPic:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #0xfffffff8
	mov	r9, r1
	mov	sl, r2
	add	r6, r3, #0
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r9, r1
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	mov	sl, r2
	lsl	r6, r6, #0x10
	lsr	r6, r6, #0x10
	lsl	r7, r0, #0x3
	ldr	r1, .L405
	mov	r8, r1
	add	r8, r8, r7
	ldr	r1, .L405+0x4
	lsl	r2, r0, #0x2
	add	r2, r2, r1
	ldrb	r1, [r2]
	ldrb	r2, [r2, #0x1]
	mov	r3, #0x80
	lsl	r3, r3, #0x12
	ldr	r5, .L405+0x8
	lsl	r4, r6, #0x2
	add	r4, r4, r5
	ldr	r4, [r4]
	str	r4, [sp]
	str	r0, [sp, #0x4]
	mov	r0, r8
	bl	DecompressPicFromTable_2
	ldr	r0, .L405+0xc
	add	r0, r7, r0
	ldr	r0, [r0]
	lsl	r4, r6, #0x4
	mov	r2, #0x80
	lsl	r2, r2, #0x1
	add	r1, r4, r2
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r2, #0x20
	bl	LoadCompressedPalette
	lsl	r1, r6, #0x18
	lsr	r1, r1, #0x18
	add	r0, r6, #0
	bl	sub_8143680
	ldr	r0, .L405+0x10
	mov	r1, r9
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	mov	r9, r1
	mov	r2, sl
	lsl	r2, r2, #0x10
	asr	r2, r2, #0x10
	mov	sl, r2
	mov	r3, #0x1
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L405+0x14
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	add	r2, r2, r1
	ldrb	r3, [r2, #0x5]
	mov	r1, #0xf
	and	r1, r1, r3
	orr	r1, r1, r4
	strb	r1, [r2, #0x5]
	add	sp, sp, #0x8
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L406:
	.align	2, 0
.L405:
	.word	gTrainerFrontPicTable
	.word	gTrainerFrontPicCoords
	.word	gUnknown_0840B5A0
	.word	gTrainerFrontPicPaletteTable
	.word	gUnknown_02024E8C
	.word	gSprites
.Lfe42:
	.size	 HallOfFame_LoadTrainerPic,.Lfe42-HallOfFame_LoadTrainerPic
	.align	2, 0
	.type	 sub_814386C,function
	.thumb_func
sub_814386C:
	push	{r4, r5, lr}
	add	r5, r0, #0
	ldrh	r1, [r5, #0x26]
	mov	r2, #0x26
	ldrsh	r0, [r5, r2]
	cmp	r0, #0x78
	ble	.L408	@cond_branch
	add	r0, r5, #0
	bl	DestroySprite
	b	.L409
.L408:
	add	r0, r1, #0x1
	ldrh	r1, [r5, #0x30]
	add	r0, r0, r1
	strh	r0, [r5, #0x26]
	ldrh	r4, [r5, #0x2e]
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x3
	and	r0, r0, r1
	add	r0, r0, #0x8
	ldr	r1, .L411
	lsl	r4, r4, #0x1
	add	r4, r4, r1
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	mul	r0, r0, r1
	cmp	r0, #0
	bge	.L410	@cond_branch
	add	r0, r0, #0xff
.L410:
	asr	r0, r0, #0x8
	strh	r0, [r5, #0x24]
	ldrh	r0, [r5, #0x2e]
	add	r0, r0, #0x4
	strh	r0, [r5, #0x2e]
.L409:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L412:
	.align	2, 0
.L411:
	.word	gSineTable
.Lfe43:
	.size	 sub_814386C,.Lfe43-sub_814386C
	.align	2, 0
	.type	 sub_81438C4,function
	.thumb_func
sub_81438C4:
	push	{r4, lr}
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0xf0
	bl	__umodsi3
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	bl	Random
	add	r2, r0, #0
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	mov	r0, #0x7
	and	r2, r2, r0
	neg	r2, r2
	ldr	r0, .L417
	lsl	r4, r4, #0x10
	asr	r4, r4, #0x10
	lsl	r2, r2, #0x10
	asr	r2, r2, #0x10
	add	r1, r4, #0
	mov	r3, #0x0
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L417+0x4
	add	r4, r1, r0
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x11
	bl	__umodsi3
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	StartSpriteAnim
	bl	Random
	mov	r1, #0x3
	and	r1, r1, r0
	cmp	r1, #0
	beq	.L414	@cond_branch
	mov	r0, #0x0
	b	.L416
.L418:
	.align	2, 0
.L417:
	.word	sSpriteTemplate_840B7A4
	.word	gSprites
.L414:
	mov	r0, #0x1
.L416:
	strh	r0, [r4, #0x30]
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe44:
	.size	 sub_81438C4,.Lfe44-sub_81438C4
.text
	.align	2, 0
