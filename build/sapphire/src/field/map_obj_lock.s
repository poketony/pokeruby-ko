@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
.text
	.align	2, 0
	.globl	walkrun_is_standing_still
	.type	 walkrun_is_standing_still,function
	.thumb_func
walkrun_is_standing_still:
	push	{lr}
	ldr	r0, .L6
	ldrb	r0, [r0, #0x3]
	cmp	r0, #0x1
	beq	.L3	@cond_branch
	mov	r0, #0x1
	b	.L5
.L7:
	.align	2, 0
.L6:
	.word	gPlayerAvatar
.L3:
	mov	r0, #0x0
.L5:
	pop	{r1}
	bx	r1
.Lfe1:
	.size	 walkrun_is_standing_still,.Lfe1-walkrun_is_standing_still
	.align	2, 0
	.globl	sub_8064CDC
	.type	 sub_8064CDC,function
	.thumb_func
sub_8064CDC:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	walkrun_is_standing_still
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L9	@cond_branch
	bl	sub_80594C0
	add	r0, r4, #0
	bl	DestroyTask
.L9:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe2:
	.size	 sub_8064CDC,.Lfe2-sub_8064CDC
	.align	2, 0
	.globl	sub_8064CFC
	.type	 sub_8064CFC,function
	.thumb_func
sub_8064CFC:
	push	{lr}
	ldr	r0, .L14
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L11	@cond_branch
	bl	sub_80597F4
	mov	r0, #0x1
	b	.L13
.L15:
	.align	2, 0
.L14:
	.word	sub_8064CDC
.L11:
	mov	r0, #0x0
.L13:
	pop	{r1}
	bx	r1
.Lfe3:
	.size	 sub_8064CFC,.Lfe3-sub_8064CFC
	.align	2, 0
	.globl	ScriptFreezeMapObjects
	.type	 ScriptFreezeMapObjects,function
	.thumb_func
ScriptFreezeMapObjects:
	push	{lr}
	bl	FreezeMapObjects
	ldr	r0, .L17
	mov	r1, #0x50
	bl	CreateTask
	pop	{r0}
	bx	r0
.L18:
	.align	2, 0
.L17:
	.word	sub_8064CDC
.Lfe4:
	.size	 ScriptFreezeMapObjects,.Lfe4-ScriptFreezeMapObjects
	.align	2, 0
	.globl	sub_8064D38
	.type	 sub_8064D38,function
	.thumb_func
sub_8064D38:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	ldr	r1, .L23
	add	r5, r0, r1
	mov	r1, #0x8
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	bne	.L20	@cond_branch
	bl	walkrun_is_standing_still
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x1
	bne	.L20	@cond_branch
	bl	sub_80594C0
	strh	r4, [r5, #0x8]
.L20:
	mov	r1, #0xa
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	bne	.L21	@cond_branch
	ldr	r2, .L23+0x4
	ldr	r0, .L23+0x8
	ldrb	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r1, r0, r2
	ldrb	r0, [r1]
	lsl	r0, r0, #0x1e
	cmp	r0, #0
	blt	.L21	@cond_branch
	add	r0, r1, #0
	bl	FreezeMapObject
	mov	r0, #0x1
	strh	r0, [r5, #0xa]
.L21:
	mov	r1, #0x8
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	beq	.L22	@cond_branch
	mov	r1, #0xa
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	beq	.L22	@cond_branch
	add	r0, r6, #0
	bl	DestroyTask
.L22:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L24:
	.align	2, 0
.L23:
	.word	gTasks
	.word	gMapObjects
	.word	gSelectedMapObject
.Lfe5:
	.size	 sub_8064D38,.Lfe5-sub_8064D38
	.align	2, 0
	.globl	sub_8064DB4
	.type	 sub_8064DB4,function
	.thumb_func
sub_8064DB4:
	push	{lr}
	ldr	r0, .L29
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L26	@cond_branch
	bl	sub_80597F4
	mov	r0, #0x1
	b	.L28
.L30:
	.align	2, 0
.L29:
	.word	sub_8064D38
.L26:
	mov	r0, #0x0
.L28:
	pop	{r1}
	bx	r1
.Lfe6:
	.size	 sub_8064DB4,.Lfe6-sub_8064DB4
	.align	2, 0
	.globl	LockSelectedMapObject
	.type	 LockSelectedMapObject,function
	.thumb_func
LockSelectedMapObject:
	push	{r4, r5, lr}
	ldr	r4, .L33
	ldrb	r0, [r4]
	bl	FreezeMapObjectsExceptOne
	ldr	r0, .L33+0x4
	mov	r1, #0x50
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r2, .L33+0x8
	ldrb	r1, [r4]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r1, r0, r2
	ldrb	r0, [r1]
	lsl	r0, r0, #0x1e
	cmp	r0, #0
	blt	.L32	@cond_branch
	add	r0, r1, #0
	bl	FreezeMapObject
	ldr	r0, .L33+0xc
	lsl	r1, r5, #0x2
	add	r1, r1, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r0, #0x1
	strh	r0, [r1, #0xa]
.L32:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L34:
	.align	2, 0
.L33:
	.word	gSelectedMapObject
	.word	sub_8064D38
	.word	gMapObjects
	.word	gTasks
.Lfe7:
	.size	 LockSelectedMapObject,.Lfe7-LockSelectedMapObject
	.align	2, 0
	.globl	sub_8064E2C
	.type	 sub_8064E2C,function
	.thumb_func
sub_8064E2C:
	push	{lr}
	mov	r0, #0xff
	mov	r1, #0x0
	mov	r2, #0x0
	bl	GetFieldObjectIdByLocalIdAndMap
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L36
	add	r0, r0, r1
	bl	FieldObjectClearAnimIfSpecialAnimFinished
	bl	sub_80A2178
	bl	UnfreezeMapObjects
	pop	{r0}
	bx	r0
.L37:
	.align	2, 0
.L36:
	.word	gMapObjects
.Lfe8:
	.size	 sub_8064E2C,.Lfe8-sub_8064E2C
	.align	2, 0
	.globl	unref_sub_8064E5C
	.type	 unref_sub_8064E5C,function
	.thumb_func
unref_sub_8064E5C:
	push	{r4, lr}
	ldr	r4, .L40
	ldr	r0, .L40+0x4
	ldrb	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r1, r0, r4
	ldrb	r0, [r1]
	lsl	r0, r0, #0x1f
	cmp	r0, #0
	beq	.L39	@cond_branch
	add	r0, r1, #0
	bl	FieldObjectClearAnimIfSpecialAnimFinished
.L39:
	mov	r0, #0xff
	mov	r1, #0x0
	mov	r2, #0x0
	bl	GetFieldObjectIdByLocalIdAndMap
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	bl	FieldObjectClearAnimIfSpecialAnimFinished
	bl	sub_80A2178
	bl	UnfreezeMapObjects
	pop	{r4}
	pop	{r0}
	bx	r0
.L41:
	.align	2, 0
.L40:
	.word	gMapObjects
	.word	gSelectedMapObject
.Lfe9:
	.size	 unref_sub_8064E5C,.Lfe9-unref_sub_8064E5C
	.align	2, 0
	.globl	sub_8064EAC
	.type	 sub_8064EAC,function
	.thumb_func
sub_8064EAC:
	push	{lr}
	ldr	r0, .L43
	ldrb	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L43+0x4
	add	r0, r0, r1
	ldr	r1, .L43+0x8
	ldrb	r1, [r1]
	bl	FieldObjectFaceOppositeDirection
	pop	{r0}
	bx	r0
.L44:
	.align	2, 0
.L43:
	.word	gSelectedMapObject
	.word	gMapObjects
	.word	gScriptFacing
.Lfe10:
	.size	 sub_8064EAC,.Lfe10-sub_8064EAC
	.align	2, 0
	.globl	sub_8064ED4
	.type	 sub_8064ED4,function
	.thumb_func
sub_8064ED4:
	push	{lr}
	ldr	r0, .L46
	ldrb	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L46+0x4
	add	r0, r0, r1
	bl	FieldObjectClearAnimIfSpecialAnimActive
	pop	{r0}
	bx	r0
.L47:
	.align	2, 0
.L46:
	.word	gSelectedMapObject
	.word	gMapObjects
.Lfe11:
	.size	 sub_8064ED4,.Lfe11-sub_8064ED4
.text
	.align	2, 0
