@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
.text
	.align	2, 0
	.globl	EasyChat_GetWordText
	.type	 EasyChat_GetWordText,function
	.thumb_func
EasyChat_GetWordText:
	push	{r4, r5, r6, r7, lr}
	add	r5, r0, #0
	lsl	r6, r1, #0x10
	lsr	r4, r6, #0x10
	add	r7, r4, #0
	add	r0, r4, #0
	bl	sub_80EB37C
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L3	@cond_branch
	ldr	r1, .L24
	add	r0, r5, #0
	bl	StringCopy
	b	.L23
.L25:
	.align	2, 0
.L24:
	.word	gOtherText_ThreeQuestions
.L3:
	ldr	r0, .L26
	cmp	r4, r0
	beq	.L6	@cond_branch
	lsr	r1, r6, #0x19
	ldr	r2, .L26+0x4
	and	r2, r2, r7
	cmp	r1, #0x13
	bgt	.L22	@cond_branch
	cmp	r1, #0x12
	bge	.L10	@cond_branch
	cmp	r1, #0
	beq	.L8	@cond_branch
	b	.L11
.L27:
	.align	2, 0
.L26:
	.word	0xffff
	.word	0x1ff
.L22:
	cmp	r1, #0x15
	bne	.L11	@cond_branch
.L8:
	mov	r0, #0xb
	mov	r1, r2
	mul	r1, r1, r0
	ldr	r0, .L28
	add	r1, r1, r0
	b	.L13
.L29:
	.align	2, 0
.L28:
	.word	gSpeciesNames
.L10:
	lsl	r1, r2, #0x4
	sub	r1, r1, r2
	ldr	r0, .L30
	add	r1, r1, r0
	b	.L13
.L31:
	.align	2, 0
.L30:
	.word	gMoveNames
.L11:
	ldr	r0, .L32
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	ldr	r1, [r1]
	sub	r0, r2, #0x1
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	ldr	r0, .L32+0x4
	cmp	r2, r0
	beq	.L13	@cond_branch
	add	r3, r0, #0
.L15:
	ldrb	r0, [r1]
	add	r1, r1, #0x1
	sub	r2, r2, #0x1
	cmp	r0, #0xff
	beq	.L14	@cond_branch
.L16:
	ldrb	r0, [r1]
	add	r1, r1, #0x1
	cmp	r0, #0xff
	bne	.L16	@cond_branch
.L14:
	lsl	r0, r2, #0x10
	lsr	r2, r0, #0x10
	cmp	r2, r3
	bne	.L15	@cond_branch
.L13:
	add	r0, r5, #0
	bl	StringCopy
	add	r5, r0, #0
.L6:
	mov	r0, #0xff
	strb	r0, [r5]
	add	r0, r5, #0
.L23:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L33:
	.align	2, 0
.L32:
	.word	gEasyChatGroupWords
	.word	0xffff
.Lfe1:
	.size	 EasyChat_GetWordText,.Lfe1-EasyChat_GetWordText
	.align	2, 0
	.globl	ConvertEasyChatWordsToString
	.type	 ConvertEasyChatWordsToString,function
	.thumb_func
ConvertEasyChatWordsToString:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #0xfffffffc
	add	r4, r0, #0
	add	r5, r1, #0
	lsl	r2, r2, #0x10
	lsl	r3, r3, #0x10
	lsr	r3, r3, #0x10
	mov	r9, r3
	ldr	r0, .L46
	add	r2, r2, r0
	lsr	r7, r2, #0x10
	mov	r0, #0x0
	cmp	r0, r9
	bcs	.L36	@cond_branch
.L38:
	mov	r6, #0x0
	add	r0, r0, #0x1
	mov	r8, r0
	cmp	r6, r7
	bcs	.L40	@cond_branch
	ldr	r2, .L46+0x4
.L42:
	ldrh	r1, [r5]
	add	r0, r4, #0
	str	r2, [sp]
	bl	EasyChat_GetWordText
	add	r4, r0, #0
	ldrh	r0, [r5]
	ldr	r2, [sp]
	cmp	r0, r2
	beq	.L43	@cond_branch
	mov	r0, #0x0
	strb	r0, [r4]
	add	r4, r4, #0x1
.L43:
	add	r5, r5, #0x2
	add	r0, r6, #0x1
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	cmp	r6, r7
	bcc	.L42	@cond_branch
.L40:
	ldrh	r1, [r5]
	add	r5, r5, #0x2
	add	r0, r4, #0
	bl	EasyChat_GetWordText
	add	r4, r0, #0
	mov	r0, #0xfe
	strb	r0, [r4]
	add	r4, r4, #0x1
	mov	r1, r8
	lsl	r0, r1, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, r9
	bcc	.L38	@cond_branch
.L36:
	sub	r4, r4, #0x1
	mov	r0, #0xff
	strb	r0, [r4]
	add	r0, r4, #0
	add	sp, sp, #0x4
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L47:
	.align	2, 0
.L46:
	.word	0xffff0000
	.word	0xffff
.Lfe2:
	.size	 ConvertEasyChatWordsToString,.Lfe2-ConvertEasyChatWordsToString
	.align	2, 0
	.globl	sub_80EB544
	.type	 sub_80EB544,function
	.thumb_func
sub_80EB544:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #0xfffffffc
	add	r4, r0, #0
	add	r5, r1, #0
	lsl	r2, r2, #0x10
	lsl	r3, r3, #0x10
	lsr	r3, r3, #0x10
	mov	sl, r3
	ldr	r0, .L63
	add	r2, r2, r0
	lsr	r2, r2, #0x10
	mov	r8, r2
	mov	r7, #0x0
	cmp	r7, sl
	bcs	.L50	@cond_branch
.L52:
	mov	r6, #0x0
	add	r1, r7, #0x1
	mov	r9, r1
	cmp	r6, r8
	bcs	.L54	@cond_branch
	ldr	r2, .L63+0x4
.L56:
	ldrh	r1, [r5]
	add	r0, r4, #0
	str	r2, [sp]
	bl	EasyChat_GetWordText
	add	r4, r0, #0
	ldrh	r0, [r5]
	ldr	r2, [sp]
	cmp	r0, r2
	beq	.L57	@cond_branch
	mov	r0, #0x0
	strb	r0, [r4]
	add	r4, r4, #0x1
.L57:
	add	r5, r5, #0x2
	add	r0, r6, #0x1
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	cmp	r6, r8
	bcc	.L56	@cond_branch
.L54:
	ldrh	r1, [r5]
	add	r5, r5, #0x2
	add	r0, r4, #0
	bl	EasyChat_GetWordText
	add	r4, r0, #0
	cmp	r7, #0
	bne	.L59	@cond_branch
	mov	r0, #0xfe
	b	.L62
.L64:
	.align	2, 0
.L63:
	.word	0xffff0000
	.word	0xffff
.L59:
	mov	r0, #0xfa
.L62:
	strb	r0, [r4]
	add	r4, r4, #0x1
	mov	r1, r9
	lsl	r0, r1, #0x10
	lsr	r7, r0, #0x10
	cmp	r7, sl
	bcc	.L52	@cond_branch
.L50:
	sub	r4, r4, #0x1
	mov	r0, #0xff
	strb	r0, [r4]
	add	r0, r4, #0
	add	sp, sp, #0x4
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe3:
	.size	 sub_80EB544,.Lfe3-sub_80EB544
	.align	2, 0
	.globl	unref_sub_80EB5E0
	.type	 unref_sub_80EB5E0,function
	.thumb_func
unref_sub_80EB5E0:
	push	{lr}
	lsl	r1, r0, #0x10
	lsr	r3, r1, #0x10
	ldr	r0, .L90
	cmp	r3, r0
	bne	.L66	@cond_branch
	mov	r0, #0x0
	b	.L88
.L91:
	.align	2, 0
.L90:
	.word	0xffff
.L66:
	lsr	r1, r1, #0x19
	ldr	r2, .L92
	and	r2, r2, r3
	cmp	r1, #0x13
	bgt	.L83	@cond_branch
	cmp	r1, #0x12
	bge	.L71	@cond_branch
	cmp	r1, #0
	beq	.L69	@cond_branch
	b	.L72
.L93:
	.align	2, 0
.L92:
	.word	0x1ff
.L83:
	cmp	r1, #0x15
	bne	.L72	@cond_branch
.L69:
	mov	r0, #0xb
	mov	r1, r2
	mul	r1, r1, r0
	ldr	r0, .L94
	add	r1, r1, r0
	b	.L67
.L95:
	.align	2, 0
.L94:
	.word	gSpeciesNames
.L71:
	lsl	r0, r2, #0x4
	sub	r0, r0, r2
	ldr	r1, .L96
	add	r1, r0, r1
	b	.L67
.L97:
	.align	2, 0
.L96:
	.word	gMoveNames
.L72:
	ldr	r0, .L98
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	ldr	r1, [r1]
	sub	r0, r2, #0x1
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	ldr	r0, .L98+0x4
	cmp	r2, r0
	beq	.L67	@cond_branch
	add	r3, r0, #0
.L76:
	ldrb	r0, [r1]
	add	r1, r1, #0x1
	sub	r2, r2, #0x1
	cmp	r0, #0xff
	beq	.L75	@cond_branch
.L77:
	ldrb	r0, [r1]
	add	r1, r1, #0x1
	cmp	r0, #0xff
	bne	.L77	@cond_branch
.L75:
	lsl	r0, r2, #0x10
	lsr	r2, r0, #0x10
	cmp	r2, r3
	bne	.L76	@cond_branch
.L67:
	mov	r2, #0x0
	b	.L89
.L99:
	.align	2, 0
.L98:
	.word	gEasyChatGroupWords
	.word	0xffff
.L86:
	add	r1, r1, #0x1
	add	r0, r2, #0x1
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
.L89:
	ldrb	r0, [r1]
	cmp	r0, #0xff
	bne	.L86	@cond_branch
	add	r0, r2, #0
.L88:
	pop	{r1}
	bx	r1
.Lfe4:
	.size	 unref_sub_80EB5E0,.Lfe4-unref_sub_80EB5E0
	.align	2, 0
	.type	 sub_80EB680,function
	.thumb_func
sub_80EB680:
	mov	r0, #0x0
	bx	lr
.Lfe5:
	.size	 sub_80EB680,.Lfe5-sub_80EB680
	.align	2, 0
	.globl	unref_sub_80EB684
	.type	 unref_sub_80EB684,function
	.thumb_func
unref_sub_80EB684:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r2, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	cmp	r0, #0x7
	beq	.L104	@cond_branch
	cmp	r0, #0x7
	bgt	.L108	@cond_branch
	cmp	r0, #0x5
	beq	.L103	@cond_branch
	b	.L101
.L108:
	cmp	r2, #0x8
	beq	.L105	@cond_branch
	b	.L101
.L103:
	mov	r2, #0x6
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L114
	b	.L113
.L115:
	.align	2, 0
.L114:
	.word	gSaveBlock1+0x273c
.L104:
	mov	r2, #0x2
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L116
	b	.L113
.L117:
	.align	2, 0
.L116:
	.word	gSaveBlock1+0x2754
.L105:
	mov	r2, #0x1
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L118
.L113:
	add	r1, r0, r1
	sub	r0, r2, #0x1
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	ldr	r0, .L118+0x4
	cmp	r2, r0
	beq	.L101	@cond_branch
	add	r4, r0, #0
	add	r3, r0, #0
.L111:
	strh	r4, [r1]
	add	r1, r1, #0x2
	sub	r0, r2, #0x1
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	cmp	r2, r3
	bne	.L111	@cond_branch
.L101:
	pop	{r4}
	pop	{r0}
	bx	r0
.L119:
	.align	2, 0
.L118:
	.word	gSaveBlock1+0x273a
	.word	0xffff
.Lfe6:
	.size	 unref_sub_80EB684,.Lfe6-unref_sub_80EB684
	.align	2, 0
	.globl	sub_80EB6FC
	.type	 sub_80EB6FC,function
	.thumb_func
sub_80EB6FC:
	push	{lr}
	add	r2, r0, #0
	lsl	r1, r1, #0x10
	ldr	r0, .L126
	add	r1, r1, r0
	lsr	r0, r1, #0x10
	ldr	r1, .L126+0x4
	cmp	r0, r1
	beq	.L122	@cond_branch
	add	r3, r1, #0
.L124:
	strh	r3, [r2]
	add	r2, r2, #0x2
	sub	r0, r0, #0x1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, r1
	bne	.L124	@cond_branch
.L122:
	pop	{r0}
	bx	r0
.L127:
	.align	2, 0
.L126:
	.word	0xffff0000
	.word	0xffff
.Lfe7:
	.size	 sub_80EB6FC,.Lfe7-sub_80EB6FC
	.align	2, 0
	.globl	sub_80EB72C
	.type	 sub_80EB72C,function
	.thumb_func
sub_80EB72C:
	push	{r4, lr}
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r1, .L131
	add	r1, r4, r1
	ldrb	r1, [r1]
	bl	__modsi3
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	cmp	r4, #0
	beq	.L130	@cond_branch
	cmp	r4, #0x15
	beq	.L130	@cond_branch
	cmp	r4, #0x12
	beq	.L130	@cond_branch
	cmp	r4, #0x13
	bne	.L129	@cond_branch
.L130:
	ldr	r1, .L131+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	lsl	r0, r2, #0x1
	add	r0, r0, r1
	ldrh	r2, [r0]
.L129:
	mov	r0, #0x7f
	and	r0, r0, r4
	lsl	r0, r0, #0x9
	ldr	r1, .L131+0x8
	and	r2, r2, r1
	orr	r0, r0, r2
	pop	{r4}
	pop	{r1}
	bx	r1
.L132:
	.align	2, 0
.L131:
	.word	gEasyChatGroupSizes
	.word	gEasyChatGroupWords
	.word	0x1ff
.Lfe8:
	.size	 sub_80EB72C,.Lfe8-sub_80EB72C
	.align	2, 0
	.globl	sub_80EB784
	.type	 sub_80EB784,function
	.thumb_func
sub_80EB784:
	push	{r4, lr}
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	lsl	r0, r4, #0x18
	lsr	r0, r0, #0x18
	bl	sub_80EAD7C
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L134	@cond_branch
	ldr	r0, .L142
	b	.L138
.L143:
	.align	2, 0
.L142:
	.word	0xffff
.L134:
	cmp	r4, #0
	beq	.L135	@cond_branch
	cmp	r4, #0x14
	bne	.L137	@cond_branch
	bl	sub_80EB960
	b	.L140
.L135:
	bl	sub_80EB9D8
	b	.L140
.L137:
	add	r0, r4, #0
	bl	sub_80EB72C
.L140:
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
.L138:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe9:
	.size	 sub_80EB784,.Lfe9-sub_80EB784
	.align	2, 0
	.globl	sub_80EB7C4
	.type	 sub_80EB7C4,function
	.thumb_func
sub_80EB7C4:
	push	{r4, r5, lr}
	ldr	r0, .L157
	ldrh	r0, [r0]
	cmp	r0, #0x1
	beq	.L147	@cond_branch
	cmp	r0, #0x1
	bgt	.L154	@cond_branch
	cmp	r0, #0
	beq	.L146	@cond_branch
	b	.L144
.L158:
	.align	2, 0
.L157:
	.word	gSpecialVar_0x8004
.L154:
	cmp	r0, #0x2
	beq	.L150	@cond_branch
	cmp	r0, #0x3
	beq	.L151	@cond_branch
	b	.L144
.L146:
	ldr	r5, .L159
	mov	r2, #0x2
	b	.L155
.L160:
	.align	2, 0
.L159:
	.word	gSaveBlock1+0x2b1c
.L147:
	ldr	r5, .L161
	add	r0, r5, #0
	mov	r1, #0x3
	mov	r2, #0x2
	mov	r3, #0x14
	bl	sub_80EB680
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L156	@cond_branch
	mov	r2, #0x2
	mov	r3, #0x3
	b	.L145
.L162:
	.align	2, 0
.L161:
	.word	gSaveBlock1+0x2b28
.L150:
	ldr	r5, .L163
	b	.L156
.L164:
	.align	2, 0
.L163:
	.word	gSaveBlock1+0x2b34
.L151:
	ldr	r5, .L165
.L156:
	mov	r2, #0x3
.L155:
	mov	r3, #0x2
.L145:
	ldr	r4, .L165+0x4
	add	r0, r4, #0
	add	r1, r5, #0
	bl	ConvertEasyChatWordsToString
	add	r0, r4, #0
	bl	ShowFieldAutoScrollMessage
.L144:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L166:
	.align	2, 0
.L165:
	.word	gSaveBlock1+0x2b40
	.word	gStringVar4
.Lfe10:
	.size	 sub_80EB7C4,.Lfe10-sub_80EB7C4
	.align	2, 0
	.globl	sub_80EB83C
	.type	 sub_80EB83C,function
	.thumb_func
sub_80EB83C:
	push	{lr}
	bl	Random
	mov	r1, #0x1
	and	r1, r1, r0
	mov	r0, #0xc
	cmp	r1, #0
	beq	.L168	@cond_branch
	mov	r0, #0xd
.L168:
	bl	sub_80EB784
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	ldr	r0, .L170
	bl	EasyChat_GetWordText
	pop	{r0}
	bx	r0
.L171:
	.align	2, 0
.L170:
	.word	gStringVar2
.Lfe11:
	.size	 sub_80EB83C,.Lfe11-sub_80EB83C
	.align	2, 0
	.globl	sub_80EB868
	.type	 sub_80EB868,function
	.thumb_func
sub_80EB868:
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x1b
	mov	r1, #0xe0
	lsl	r1, r1, #0x13
	and	r1, r1, r0
	lsr	r1, r1, #0x18
	ldr	r0, .L173
	ldr	r3, .L173+0x4
	add	r0, r0, r3
	add	r2, r2, r0
	ldrb	r0, [r2]
	asr	r0, r0, r1
	mov	r1, #0x1
	and	r0, r0, r1
	bx	lr
.L174:
	.align	2, 0
.L173:
	.word	gSaveBlock1
	.word	0x2d8c
.Lfe12:
	.size	 sub_80EB868,.Lfe12-sub_80EB868
	.align	2, 0
	.globl	sub_80EB890
	.type	 sub_80EB890,function
	.thumb_func
sub_80EB890:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0x20
	bhi	.L176	@cond_branch
	lsr	r2, r0, #0x1b
	mov	r1, #0x7
	and	r1, r1, r3
	ldr	r0, .L177
	ldr	r3, .L177+0x4
	add	r0, r0, r3
	add	r2, r2, r0
	mov	r0, #0x1
	lsl	r0, r0, r1
	ldrb	r1, [r2]
	orr	r0, r0, r1
	strb	r0, [r2]
.L176:
	pop	{r0}
	bx	r0
.L178:
	.align	2, 0
.L177:
	.word	gSaveBlock1
	.word	0x2d8c
.Lfe13:
	.size	 sub_80EB890,.Lfe13-sub_80EB890
	.align	2, 0
	.globl	sub_80EB8C0
	.type	 sub_80EB8C0,function
	.thumb_func
sub_80EB8C0:
	push	{r4, r5, lr}
	mov	r4, #0x0
	mov	r5, #0x0
.L183:
	add	r0, r4, #0
	bl	sub_80EB868
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L182	@cond_branch
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
.L182:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x20
	bls	.L183	@cond_branch
	add	r0, r5, #0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe14:
	.size	 sub_80EB8C0,.Lfe14-sub_80EB8C0
	.align	2, 0
	.globl	sub_80EB8EC
	.type	 sub_80EB8EC,function
	.thumb_func
sub_80EB8EC:
	push	{r4, r5, r6, lr}
	bl	sub_80EB8C0
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x21
	bne	.L187	@cond_branch
	b	.L197
.L196:
	add	r0, r5, #0
	bl	sub_80EB890
	ldr	r0, .L198
	and	r4, r4, r0
	mov	r1, #0xa0
	lsl	r1, r1, #0x6
	add	r0, r1, #0
	orr	r4, r4, r0
	add	r0, r4, #0
	b	.L195
.L199:
	.align	2, 0
.L198:
	.word	0x1ff
.L187:
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x21
	sub	r1, r1, r4
	bl	__modsi3
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	mov	r4, #0x0
.L191:
	lsl	r0, r4, #0x18
	lsr	r5, r0, #0x18
	add	r0, r5, #0
	bl	sub_80EB868
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L190	@cond_branch
	cmp	r6, #0
	beq	.L196	@cond_branch
	sub	r0, r6, #0x1
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
.L190:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r4, #0x20
	bls	.L191	@cond_branch
.L197:
	ldr	r0, .L200
.L195:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L201:
	.align	2, 0
.L200:
	.word	0xffff
.Lfe15:
	.size	 sub_80EB8EC,.Lfe15-sub_80EB8EC
	.align	2, 0
	.type	 sub_80EB960,function
	.thumb_func
sub_80EB960:
	push	{r4, r5, lr}
	bl	sub_80EB8C0
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0
	bne	.L203	@cond_branch
	b	.L213
.L212:
	ldr	r0, .L214
	and	r4, r4, r0
	mov	r1, #0xa0
	lsl	r1, r1, #0x6
	add	r0, r1, #0
	orr	r4, r4, r0
	add	r0, r4, #0
	b	.L211
.L215:
	.align	2, 0
.L214:
	.word	0x1ff
.L203:
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r1, r5, #0
	bl	__umodsi3
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	mov	r4, #0x0
.L207:
	lsl	r0, r4, #0x18
	lsr	r0, r0, #0x18
	bl	sub_80EB868
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L206	@cond_branch
	cmp	r5, #0
	beq	.L212	@cond_branch
	sub	r0, r5, #0x1
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
.L206:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r4, #0x20
	bls	.L207	@cond_branch
.L213:
	ldr	r0, .L216
.L211:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L217:
	.align	2, 0
.L216:
	.word	0xffff
.Lfe16:
	.size	 sub_80EB960,.Lfe16-sub_80EB960
	.align	2, 0
	.globl	sub_80EB9C8
	.type	 sub_80EB9C8,function
	.thumb_func
sub_80EB9C8:
	push	{lr}
	bl	IsNationalPokedexEnabled
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.Lfe17:
	.size	 sub_80EB9C8,.Lfe17-sub_80EB9C8
	.align	2, 0
	.type	 sub_80EB9D8,function
	.thumb_func
sub_80EB9D8:
	push	{r4, r5, r6, r7, lr}
	mov	r0, #0x0
	bl	sub_80EAE88
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r4, #0
	bne	.L220	@cond_branch
	b	.L222
.L229:
	ldrh	r1, [r5]
	ldr	r0, .L230
	and	r0, r0, r1
	b	.L228
.L231:
	.align	2, 0
.L230:
	.word	0x1ff
.L220:
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r1, r4, #0
	bl	__umodsi3
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	ldr	r0, .L232
	ldr	r5, [r0]
	mov	r6, #0x0
	ldr	r0, .L232+0x4
	ldrb	r0, [r0]
	cmp	r6, r0
	bcs	.L222	@cond_branch
	add	r7, r0, #0
.L224:
	ldrh	r0, [r5]
	bl	SpeciesToNationalPokedexNum
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x0
	bl	GetSetPokedexFlag
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L225	@cond_branch
	cmp	r4, #0
	beq	.L229	@cond_branch
	sub	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
.L225:
	add	r5, r5, #0x2
	add	r0, r6, #0x1
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	cmp	r6, r7
	bcc	.L224	@cond_branch
.L222:
	ldr	r0, .L232+0x8
.L228:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L233:
	.align	2, 0
.L232:
	.word	gEasyChatGroupWords
	.word	gEasyChatGroupSizes
	.word	0xffff
.Lfe18:
	.size	 sub_80EB9D8,.Lfe18-sub_80EB9D8
	.globl	gUnknown_03000740
.bss
	.type	 gUnknown_03000740,object
	.size	 gUnknown_03000740,1
gUnknown_03000740:
	.space	1
.text
	.align	2, 0
