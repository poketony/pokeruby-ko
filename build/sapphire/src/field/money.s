@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section ewram_data,"aw"
	.type	 gUnknown_02038734,object
	.size	 gUnknown_02038734,1
gUnknown_02038734:
	.byte	0x0
	.section .rodata
	.align	2, 0
	.type	 gOamData_83CF558,object
	.size	 gOamData_83CF558,8
gOamData_83CF558:
	.byte	0x0
	.byte	0x40
	.byte	0x0
	.byte	0x80
	.byte	0x0
	.byte	0x0
	.short	0x0
	.globl	gSpriteAnim_83CF560
	.align	2, 0
	.type	 gSpriteAnim_83CF560,object
gSpriteAnim_83CF560:
	.short	0x0
	.byte	0x0
	.space	1
	.short	0xffffffff
	.space	2
	.size	 gSpriteAnim_83CF560,8
	.globl	gSpriteAnimTable_83CF568
	.align	2, 0
	.type	 gSpriteAnimTable_83CF568,object
gSpriteAnimTable_83CF568:
	.word	gSpriteAnim_83CF560
	.size	 gSpriteAnimTable_83CF568,4
	.globl	gSpriteTemplate_83CF56C
	.align	2, 0
	.type	 gSpriteTemplate_83CF56C,object
	.size	 gSpriteTemplate_83CF56C,24
gSpriteTemplate_83CF56C:
	.short	0x2722
	.short	0x2722
	.word	gOamData_83CF558
	.word	gSpriteAnimTable_83CF568
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.globl	gUnknown_083CF584
	.align	2, 0
	.type	 gUnknown_083CF584,object
gUnknown_083CF584:
	.word	gMenuMoneyGfx
	.short	0x100
	.short	0x2722
	.size	 gUnknown_083CF584,8
	.globl	gUnknown_083CF58C
	.align	2, 0
	.type	 gUnknown_083CF58C,object
gUnknown_083CF58C:
	.word	gMenuMoneyPal
	.short	0x2722
	.space	2
	.size	 gUnknown_083CF58C,8
.text
	.align	2, 0
	.globl	IsEnoughMoney
	.type	 IsEnoughMoney,function
	.thumb_func
IsEnoughMoney:
	push	{lr}
	cmp	r0, r1
	bcs	.L3	@cond_branch
	mov	r0, #0x0
	b	.L4
.L3:
	mov	r0, #0x1
.L4:
	pop	{r1}
	bx	r1
.Lfe1:
	.size	 IsEnoughMoney,.Lfe1-IsEnoughMoney
	.align	2, 0
	.globl	AddMoney
	.type	 AddMoney,function
	.thumb_func
AddMoney:
	push	{lr}
	add	r2, r0, #0
	ldr	r0, [r2]
	add	r1, r0, r1
	cmp	r0, r1
	bls	.L6	@cond_branch
	ldr	r0, .L9
	b	.L8
.L10:
	.align	2, 0
.L9:
	.word	0xf423f
.L6:
	str	r1, [r2]
	ldr	r0, .L11
	cmp	r1, r0
	bls	.L5	@cond_branch
.L8:
	str	r0, [r2]
.L5:
	pop	{r0}
	bx	r0
.L12:
	.align	2, 0
.L11:
	.word	0xf423f
.Lfe2:
	.size	 AddMoney,.Lfe2-AddMoney
	.align	2, 0
	.globl	RemoveMoney
	.type	 RemoveMoney,function
	.thumb_func
RemoveMoney:
	push	{lr}
	add	r2, r0, #0
	ldr	r0, [r2]
	cmp	r0, r1
	bcs	.L14	@cond_branch
	mov	r0, #0x0
	b	.L16
.L14:
	sub	r0, r0, r1
.L16:
	str	r0, [r2]
	pop	{r0}
	bx	r0
.Lfe3:
	.size	 RemoveMoney,.Lfe3-RemoveMoney
	.align	2, 0
	.globl	GetMoneyAmountText
	.type	 GetMoneyAmountText,function
	.thumb_func
GetMoneyAmountText:
	push	{r4, lr}
	add	r3, r0, #0
	lsl	r2, r2, #0x18
	lsr	r4, r2, #0x18
	ldr	r0, .L35
	cmp	r1, r0
	bls	.L18	@cond_branch
	mov	r2, #0x7
	b	.L19
.L36:
	.align	2, 0
.L35:
	.word	0xf423f
.L18:
	ldr	r0, .L37
	cmp	r1, r0
	bls	.L20	@cond_branch
	mov	r2, #0x6
	b	.L19
.L38:
	.align	2, 0
.L37:
	.word	0x1869f
.L20:
	ldr	r0, .L39
	cmp	r1, r0
	bls	.L22	@cond_branch
	mov	r2, #0x5
	b	.L19
.L40:
	.align	2, 0
.L39:
	.word	0x2710
.L22:
	ldr	r0, .L41
	mov	r2, #0x4
	cmp	r1, r0
	bhi	.L19	@cond_branch
	mov	r2, #0x3
	cmp	r1, #0x63
	bhi	.L19	@cond_branch
	mov	r2, #0x1
	cmp	r1, #0x9
	bls	.L19	@cond_branch
	mov	r2, #0x2
.L19:
	mov	r0, #0xfc
	strb	r0, [r3]
	mov	r0, #0x14
	strb	r0, [r3, #0x1]
	mov	r0, #0x6
	strb	r0, [r3, #0x2]
	add	r3, r3, #0x3
	mov	r0, #0x0
	sub	r2, r4, r2
	cmp	r0, r2
	bge	.L31	@cond_branch
	mov	r4, #0x0
.L33:
	strb	r4, [r3]
	add	r3, r3, #0x1
	add	r0, r0, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, r2
	blt	.L33	@cond_branch
.L31:
	add	r0, r3, #0
	bl	ConvertIntToDecimalString
	add	r3, r0, #0
	mov	r0, #0xfc
	strb	r0, [r3]
	mov	r0, #0x14
	strb	r0, [r3, #0x1]
	mov	r0, #0x0
	strb	r0, [r3, #0x2]
	mov	r0, #0x3d
	strb	r0, [r3, #0x3]
	mov	r0, #0x40
	strb	r0, [r3, #0x4]
	mov	r0, #0xff
	strb	r0, [r3, #0x5]
	pop	{r4}
	pop	{r0}
	bx	r0
.L42:
	.align	2, 0
.L41:
	.word	0x3e7
.Lfe4:
	.size	 GetMoneyAmountText,.Lfe4-GetMoneyAmountText
	.align	2, 0
	.globl	PrintMoneyAmount
	.type	 PrintMoneyAmount,function
	.thumb_func
PrintMoneyAmount:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #0xfffffff0
	add	r4, r0, #0
	lsl	r1, r1, #0x18
	lsr	r5, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r6, r2, #0x18
	lsl	r3, r3, #0x18
	lsr	r7, r3, #0x18
	mov	r0, sp
	add	r1, r4, #0
	add	r2, r5, #0
	bl	GetMoneyAmountText
	mov	r0, sp
	bl	sub_8072CA4
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	add	r0, r5, #0x1
	lsl	r0, r0, #0x3
	cmp	r2, r0
	blt	.L44	@cond_branch
	mov	r0, sp
	add	r1, r6, #0
	add	r2, r7, #0
	bl	MenuPrint
	b	.L45
.L44:
	add	r1, r6, #0x1
	add	r1, r1, r5
	lsl	r1, r1, #0x3
	sub	r1, r1, r2
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r2, r7, #0x3
	mov	r0, sp
	mov	r3, #0x1
	bl	MenuPrint_PixelCoords
.L45:
	add	sp, sp, #0x10
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe5:
	.size	 PrintMoneyAmount,.Lfe5-PrintMoneyAmount
	.section .rodata
.LC0:
	.byte	0x3d
	.byte	0x40
	.byte	0xff
.text
	.align	2, 0
	.globl	sub_80B7AEC
	.type	 sub_80B7AEC,function
	.thumb_func
sub_80B7AEC:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	sp, sp, #0xffffffdc
	add	r4, r0, #0
	add	r5, r1, #0
	add	r6, r2, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	lsl	r6, r6, #0x18
	lsr	r6, r6, #0x18
	add	r0, sp, #0x20
	mov	r8, r0
	ldr	r1, .L47
	mov	r2, #0x3
	bl	memcpy
	mov	r0, sp
	add	r1, r4, #0
	bl	ConvertIntToDecimalString
	add	r4, r0, #0
	mov	r0, sp
	mov	r1, r8
	bl	StringAppend
	mov	r0, sp
	add	r1, r5, #0
	add	r2, r6, #0
	bl	MenuPrint_RightAligned
	mov	r0, #0xfc
	strb	r0, [r4]
	mov	r0, #0x14
	strb	r0, [r4, #0x1]
	mov	r0, #0x0
	strb	r0, [r4, #0x2]
	mov	r0, #0xff
	strb	r0, [r4, #0x3]
	add	sp, sp, #0x24
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L48:
	.align	2, 0
.L47:
	.word	.LC0
.Lfe6:
	.size	 sub_80B7AEC,.Lfe6-sub_80B7AEC
	.align	2, 0
	.globl	sub_80B7B34
	.type	 sub_80B7B34,function
	.thumb_func
sub_80B7B34:
	.syntax unified
    push {r4-r7,lr}
    mov r7, r9
    mov r6, r8
    push {r6,r7}
    sub sp, 0x4
    mov r8, r0
    adds r5, r1, 0
    mov r9, r2
    lsls r0, 24
    lsrs r0, 24
    mov r8, r0
    lsls r5, 24
    lsrs r5, 24
    mov r1, r9
    lsls r1, 8
    mov r9, r1
    ldr r4, _080B7BD8 @ =gDecoration10000_Gfx
    adds r0, r1, r4
    lsls r6, r5, 4
    subs r6, r5
    lsls r1, r6, 6
    mov r3, r8
    adds r3, 0x1
    lsls r3, 5
    ldr r2, _080B7BDC @ =0x06008000
    adds r3, r2
    adds r1, r3
    movs r2, 0x20
    str r3, [sp]
    bl CpuFastSet
    adds r4, 0x80
    add r9, r4
    adds r0, r5, 0x1
    lsls r4, r0, 4
    subs r4, r0
    lsls r1, r4, 6
    ldr r3, [sp]
    adds r1, r3
    mov r0, r9
    movs r2, 0x20
    bl CpuFastSet
    movs r3, 0
    lsls r5, 5
    mov r0, r8
    adds r7, r5, r0
    lsls r6, 1
    adds r6, 0x1
    add r6, r8
    ldr r1, _080B7BE0 @ =0xfffff000
    adds r5, r1, 0
    ldr r0, _080B7BE4 @ =0x0600f800
    mov r12, r0
    ldr r1, _080B7BE8 @ =0x0600f840
    mov r9, r1
    lsls r4, 1
    adds r4, 0x1
    add r4, r8
_080B7BAA:
    adds r1, r7, r3
    lsls r1, 1
    mov r0, r12
    adds r2, r1, r0
    adds r0, r3, r6
    adds r0, r5
    strh r0, [r2]
    add r1, r9
    adds r0, r3, r4
    adds r0, r5
    strh r0, [r1]
    adds r0, r3, 0x1
    lsls r0, 16
    lsrs r3, r0, 16
    cmp r3, 0x3
    bls _080B7BAA
    add sp, 0x4
    pop {r3,r4}
    mov r8, r3
    mov r9, r4
    pop {r4-r7}
    pop {r0}
    bx r0
    .align 2, 0
_080B7BD8: .4byte gDecoration10000_Gfx
_080B7BDC: .4byte 0x06008000
_080B7BE0: .4byte 0xfffff000
_080B7BE4: .4byte 0x0600f800
_080B7BE8: .4byte 0x0600f840
    .syntax divided

	.code	16
.Lfe7:
	.size	 sub_80B7B34,.Lfe7-sub_80B7B34
	.align	2, 0
	.globl	UpdateMoneyWindow
	.type	 UpdateMoneyWindow,function
	.thumb_func
UpdateMoneyWindow:
	push	{r4, lr}
	add	r4, r1, #0
	add	r3, r2, #0
	lsl	r4, r4, #0x18
	lsl	r3, r3, #0x18
	mov	r1, #0xc0
	lsl	r1, r1, #0x13
	add	r4, r4, r1
	lsr	r4, r4, #0x18
	mov	r1, #0x80
	lsl	r1, r1, #0x11
	add	r3, r3, r1
	lsr	r3, r3, #0x18
	mov	r1, #0x6
	add	r2, r4, #0
	bl	PrintMoneyAmount
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe8:
	.size	 UpdateMoneyWindow,.Lfe8-UpdateMoneyWindow
	.align	2, 0
	.globl	OpenMoneyWindow
	.type	 OpenMoneyWindow,function
	.thumb_func
OpenMoneyWindow:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	mov	r8, r0
	add	r4, r1, #0
	add	r3, r2, #0
	lsl	r4, r4, #0x18
	lsl	r3, r3, #0x18
	lsr	r6, r4, #0x18
	mov	r0, #0xd0
	lsl	r0, r0, #0x14
	add	r4, r4, r0
	lsr	r4, r4, #0x18
	lsr	r5, r3, #0x18
	mov	r1, #0xc0
	lsl	r1, r1, #0x12
	add	r3, r3, r1
	lsr	r3, r3, #0x18
	add	r0, r6, #0
	add	r1, r5, #0
	add	r2, r4, #0
	bl	MenuDrawTextWindow
	mov	r0, r8
	add	r1, r6, #0
	add	r2, r5, #0
	bl	UpdateMoneyWindow
	ldr	r0, .L52
	bl	LoadCompressedObjectPic
	ldr	r0, .L52+0x4
	bl	LoadCompressedObjectPalette
	ldr	r0, .L52+0x8
	lsl	r6, r6, #0x13
	mov	r1, #0x98
	lsl	r1, r1, #0xd
	add	r6, r6, r1
	asr	r6, r6, #0x10
	lsl	r5, r5, #0x13
	mov	r1, #0xb0
	lsl	r1, r1, #0xc
	add	r5, r5, r1
	asr	r5, r5, #0x10
	add	r1, r6, #0
	add	r2, r5, #0
	mov	r3, #0x0
	bl	CreateSprite
	ldr	r1, .L52+0xc
	strb	r0, [r1]
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L53:
	.align	2, 0
.L52:
	.word	gUnknown_083CF584
	.word	gUnknown_083CF58C
	.word	gSpriteTemplate_83CF56C
	.word	gUnknown_02038734
.Lfe9:
	.size	 OpenMoneyWindow,.Lfe9-OpenMoneyWindow
	.align	2, 0
	.globl	CloseMoneyWindow
	.type	 CloseMoneyWindow,function
	.thumb_func
CloseMoneyWindow:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	ldr	r0, .L55
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L55+0x4
	add	r0, r0, r1
	bl	DestroySpriteAndFreeResources
	ldr	r0, .L55+0x8
	bl	FreeSpritePaletteByTag
	add	r2, r4, #0
	add	r2, r2, #0xd
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	add	r3, r5, #0x3
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	add	r0, r4, #0
	add	r1, r5, #0
	bl	MenuZeroFillWindowRect
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L56:
	.align	2, 0
.L55:
	.word	gUnknown_02038734
	.word	gSprites
	.word	0x2722
.Lfe10:
	.size	 CloseMoneyWindow,.Lfe10-CloseMoneyWindow
	.align	2, 0
	.globl	sub_80B7CE8
	.type	 sub_80B7CE8,function
	.thumb_func
sub_80B7CE8:
	push	{lr}
	ldr	r0, .L58
	mov	r1, #0x92
	lsl	r1, r1, #0x3
	add	r0, r0, r1
	ldr	r0, [r0]
	ldr	r1, .L58+0x4
	ldrh	r1, [r1]
	bl	IsEnoughMoney
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L59:
	.align	2, 0
.L58:
	.word	gSaveBlock1
	.word	gSpecialVar_0x8005
.Lfe11:
	.size	 sub_80B7CE8,.Lfe11-sub_80B7CE8
	.align	2, 0
	.globl	sub_80B7D0C
	.type	 sub_80B7D0C,function
	.thumb_func
sub_80B7D0C:
	push	{lr}
	ldr	r0, .L61
	ldr	r1, .L61+0x4
	ldrh	r1, [r1]
	bl	RemoveMoney
	pop	{r0}
	bx	r0
.L62:
	.align	2, 0
.L61:
	.word	gSaveBlock1+0x490
	.word	gSpecialVar_0x8005
.Lfe12:
	.size	 sub_80B7D0C,.Lfe12-sub_80B7D0C
.text
	.align	2, 0
