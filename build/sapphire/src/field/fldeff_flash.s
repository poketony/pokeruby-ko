@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section .rodata
	.align	2, 0
	.type	 gUnknown_083F7FC4,object
gUnknown_083F7FC4:
	.byte	0x1
	.byte	0x4
	.byte	0x1
	.byte	0x0
	.word	sub_810CFF8
	.byte	0x2
	.byte	0x4
	.byte	0x1
	.byte	0x0
	.word	sub_810CFF8
	.byte	0x3
	.byte	0x4
	.byte	0x1
	.byte	0x0
	.word	sub_810CFF8
	.byte	0x5
	.byte	0x4
	.byte	0x1
	.byte	0x0
	.word	sub_810CFF8
	.byte	0x6
	.byte	0x4
	.byte	0x1
	.byte	0x0
	.word	sub_810CFF8
	.byte	0x7
	.byte	0x4
	.byte	0x1
	.byte	0x0
	.word	sub_810CFF8
	.byte	0x8
	.byte	0x4
	.byte	0x1
	.byte	0x0
	.word	sub_810CFF8
	.byte	0x9
	.byte	0x4
	.byte	0x1
	.byte	0x0
	.word	sub_810CFF8
	.byte	0x4
	.byte	0x1
	.byte	0x0
	.byte	0x1
	.word	sub_810CE48
	.byte	0x4
	.byte	0x2
	.byte	0x0
	.byte	0x1
	.word	sub_810CE48
	.byte	0x4
	.byte	0x3
	.byte	0x0
	.byte	0x1
	.word	sub_810CE48
	.byte	0x4
	.byte	0x5
	.byte	0x0
	.byte	0x1
	.word	sub_810CE48
	.byte	0x4
	.byte	0x6
	.byte	0x0
	.byte	0x1
	.word	sub_810CE48
	.byte	0x4
	.byte	0x7
	.byte	0x0
	.byte	0x1
	.word	sub_810CE48
	.byte	0x4
	.byte	0x8
	.byte	0x0
	.byte	0x1
	.word	sub_810CE48
	.byte	0x4
	.byte	0x9
	.byte	0x0
	.byte	0x1
	.word	sub_810CE48
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.word	0x0
	.size	 gUnknown_083F7FC4,136
	.align	1, 0
	.type	 gCaveTransitionPalette_White,object
gCaveTransitionPalette_White:
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.short	0x7fff
	.size	 gCaveTransitionPalette_White,32
	.align	1, 0
	.type	 gCaveTransitionPalette_Black,object
gCaveTransitionPalette_Black:
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.size	 gCaveTransitionPalette_Black,32
	.align	1, 0
	.type	 gUnknown_083F808C,object
gUnknown_083F808C:
	.short	0x5712
	.short	0x842
	.short	0x1084
	.short	0x18c6
	.short	0x2108
	.short	0x294a
	.short	0x318c
	.short	0x39ce
	.size	 gUnknown_083F808C,16
	.align	1, 0
	.type	 gUnknown_083F809C,object
gUnknown_083F809C:
	.short	0x4210
	.short	0x4a52
	.short	0x5294
	.short	0x5ad6
	.short	0x6318
	.short	0x6b5a
	.short	0x739c
	.short	0x7fff
	.size	 gUnknown_083F809C,16
	.align	1, 0
	.type	 gCaveTransitionTilemap,object
gCaveTransitionTilemap:
	.short	0x10
	.short	0x8
	.short	0x13c
	.short	0xf0e0
	.short	0xf001
	.short	0xf001
	.short	0x1001
	.short	0x1
	.short	0x100
	.short	0x0
	.short	0xe001
	.short	0xe011
	.short	0xf012
	.short	0xb001
	.short	0x150
	.short	0xf0e4
	.short	0x3001
	.short	0x1101
	.short	0x1e4
	.short	0x83e4
	.short	0x3f30
	.short	0xe002
	.short	0xe003
	.short	0xf013
	.short	0x3001
	.short	0x6201
	.short	0xf0e4
	.short	0x1001
	.short	0x301
	.short	0x2e4
	.short	0x3fa0
	.short	0x804
	.short	0x14e0
	.short	0x15e0
	.short	0x1f0
	.short	0x15e0
	.short	0x88e4
	.short	0x1f0
	.short	0xe414
	.short	0xf004
	.short	0xe03f
	.short	0xe005
	.short	0x614
	.short	0x16e0
	.short	0x1f0
	.short	0xd0e4
	.short	0x601
	.short	0x60e4
	.short	0xf005
	.short	0x403f
	.short	0x73f
	.short	0x8e0
	.short	0x17e0
	.short	0xb0a3
	.short	0xe401
	.short	0x190
	.short	0xe408
	.short	0xf007
	.short	0xc03f
	.short	0x53f
	.short	0xe009
	.short	0xe018
	.short	0x7019
	.short	0xe401
	.short	0x150
	.short	0x181c
	.short	0x9e4
	.short	0x3ff0
	.short	0x3ff0
	.short	0x3f00
	.short	0xe00a
	.short	0xb14
	.short	0x1ae0
	.short	0x150
	.short	0x30e4
	.short	0xb01
	.short	0x70e4
	.short	0xf00a
	.short	0xf03f
	.short	0x603f
	.short	0xc3f
	.short	0x1be0
	.short	0x40e0
	.short	0x101c
	.short	0xe401
	.short	0xe41c
	.short	0xe41b
	.short	0xe00c
	.short	0x3ff0
	.short	0x3ff0
	.short	0x3fc0
	.short	0xe00d
	.short	0xe00e
	.short	0x30f
	.short	0xfe0
	.short	0xee4
	.short	0xde4
	.short	0x3ff0
	.short	0x3f90
	.short	0xe800
	.short	0xe802
	.short	0xe803
	.short	0xe804
	.short	0x5
	.short	0x6e8
	.short	0x7e8
	.short	0x8e8
	.short	0x9e8
	.short	0xe800
	.short	0xe80a
	.short	0xe80b
	.short	0xe80c
	.short	0xd
	.short	0xee8
	.short	0xfe8
	.short	0xfe8
	.short	0xeec
	.short	0xec00
	.short	0xec0d
	.short	0xec0c
	.short	0xec0b
	.short	0xa
	.short	0x9ec
	.short	0x8ec
	.short	0x7ec
	.short	0x6ec
	.short	0xec00
	.short	0xec05
	.short	0xec04
	.short	0xec03
	.short	0x1802
	.short	0x1ec
	.short	0xf0ec
	.short	0x703f
	.short	0x1b3f
	.short	0x1ce8
	.short	0x1087
	.short	0xec01
	.short	0xec1c
	.short	0xf01b
	.short	0xf03f
	.short	0xc03f
	.short	0x5e3f
	.short	0x501a
	.short	0xec01
	.short	0x130
	.short	0x3ff0
	.short	0x3ff0
	.short	0x3f50
	.short	0x2b18
	.short	0x19e8
	.short	0x170
	.short	0x50ec
	.short	0x1801
	.short	0x3ff0
	.short	0x3ff0
	.short	0xae
	.short	0x173f
	.short	0x1b0
	.short	0x90ec
	.short	0xf001
	.short	0xb03f
	.short	0x163f
	.short	0xf0b8
	.short	0xec01
	.short	0x1d0
	.short	0x3ff0
	.short	0x3f30
	.short	0xe814
	.short	0x8a15
	.short	0x1f0
	.short	0x15e8
	.short	0xf0ec
	.short	0x1401
	.short	0x3ff0
	.short	0x6ee8
	.short	0xf013
	.short	0x3001
	.short	0xec01
	.short	0x1f0
	.short	0x110
	.short	0x3f90
	.short	0x3611
	.short	0x12e8
	.short	0x1f0
	.short	0x150
	.short	0xf0ec
	.short	0x3001
	.short	0x1101
	.short	0x50ff
	.short	0xf43f
	.short	0xf097
	.short	0xf001
	.short	0x6401
	.short	0xf0bf
	.short	0xf001
	.short	0xf001
	.short	0xff01
	.short	0x1f0
	.short	0x1f0
	.short	0x1f0
	.short	0x1f0
	.short	0x1f0
	.short	0x1f0
	.short	0x1f0
	.short	0x1f0
	.short	0xf0ff
	.short	0xf001
	.short	0xf001
	.short	0xf001
	.short	0xf001
	.short	0xf001
	.short	0xf001
	.short	0xf001
	.short	0xff01
	.short	0x1f0
	.short	0x1f0
	.short	0x1f0
	.short	0x1f0
	.short	0x1f0
	.short	0x1f0
	.short	0x1f0
	.short	0x1f0
	.short	0xf0ff
	.short	0xf001
	.short	0xf001
	.short	0xf001
	.short	0xf001
	.short	0xf001
	.short	0xf001
	.short	0xf001
	.short	0xff01
	.short	0x1f0
	.short	0x1f0
	.short	0x1f0
	.short	0x1f0
	.short	0x1f0
	.short	0x1f0
	.short	0x1f0
	.short	0x190
	.size	 gCaveTransitionTilemap,480
	.type	 gCaveTransitionTiles,object
gCaveTransitionTiles:
	.byte	0x10
	.byte	0x0
	.byte	0x4
	.byte	0x0
	.byte	0x33
	.byte	0x0
	.byte	0x0
	.byte	0xf0
	.byte	0x1
	.byte	0x90
	.byte	0x1
	.byte	0x11
	.byte	0x11
	.byte	0xf0
	.byte	0x1
	.byte	0x90
	.byte	0x1
	.byte	0x33
	.byte	0x22
	.byte	0x22
	.byte	0xf0
	.byte	0x1
	.byte	0x90
	.byte	0x1
	.byte	0x33
	.byte	0x33
	.byte	0xf0
	.byte	0x1
	.byte	0x90
	.byte	0x1
	.byte	0x33
	.byte	0x44
	.byte	0x44
	.byte	0xf0
	.byte	0x1
	.byte	0x90
	.byte	0x1
	.byte	0x55
	.byte	0x55
	.byte	0xf0
	.byte	0x1
	.byte	0x90
	.byte	0x1
	.byte	0x33
	.byte	0x66
	.byte	0x66
	.byte	0xf0
	.byte	0x1
	.byte	0x90
	.byte	0x1
	.byte	0x77
	.byte	0x77
	.byte	0xf0
	.byte	0x1
	.byte	0x90
	.byte	0x1
	.byte	0x33
	.byte	0x88
	.byte	0x88
	.byte	0xf0
	.byte	0x1
	.byte	0x90
	.byte	0x1
	.byte	0x99
	.byte	0x99
	.byte	0xf0
	.byte	0x1
	.byte	0x90
	.byte	0x1
	.byte	0x33
	.byte	0xaa
	.byte	0xaa
	.byte	0xf0
	.byte	0x1
	.byte	0x90
	.byte	0x1
	.byte	0xbb
	.byte	0xbb
	.byte	0xf0
	.byte	0x1
	.byte	0x90
	.byte	0x1
	.byte	0x33
	.byte	0xcc
	.byte	0xcc
	.byte	0xf0
	.byte	0x1
	.byte	0x90
	.byte	0x1
	.byte	0xdd
	.byte	0xdd
	.byte	0xf0
	.byte	0x1
	.byte	0x90
	.byte	0x1
	.byte	0x39
	.byte	0xee
	.byte	0xee
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0x30
	.byte	0x1
	.byte	0xff
	.byte	0xff
	.byte	0xf0
	.byte	0x1
	.byte	0xff
	.byte	0xf1
	.byte	0xd1
	.byte	0xb1
	.byte	0xd3
	.byte	0xf0
	.byte	0x13
	.byte	0xb0
	.byte	0x1
	.byte	0xf0
	.byte	0x1f
	.byte	0xf1
	.byte	0xfb
	.byte	0xf1
	.byte	0xef
	.byte	0xf1
	.byte	0xe3
	.byte	0xff
	.byte	0xf0
	.byte	0x1
	.byte	0x30
	.byte	0x1
	.byte	0xf0
	.byte	0x1f
	.byte	0xf1
	.byte	0xf7
	.byte	0xf1
	.byte	0xeb
	.byte	0xf1
	.byte	0xdf
	.byte	0xf1
	.byte	0xd3
	.byte	0xf1
	.byte	0xc7
	.byte	0x9f
	.byte	0xf0
	.byte	0x1
	.byte	0xaa
	.byte	0xaa
	.byte	0xf0
	.byte	0x1f
	.byte	0xf1
	.byte	0xdb
	.byte	0xf1
	.byte	0xcf
	.byte	0xf1
	.byte	0xc3
	.byte	0xf0
	.byte	0x1
	.byte	0xff
	.byte	0x30
	.byte	0x1
	.byte	0xf0
	.byte	0x1f
	.byte	0xb1
	.byte	0xd7
	.byte	0xf3
	.byte	0x91
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0x80
	.byte	0x30
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.size	 gCaveTransitionTiles,180
.text
	.align	2, 0
	.globl	SetUpFieldMove_Flash
	.type	 SetUpFieldMove_Flash,function
	.thumb_func
SetUpFieldMove_Flash:
	push	{lr}
	ldr	r0, .L5
	ldrb	r0, [r0, #0x15]
	cmp	r0, #0x1
	bne	.L3	@cond_branch
	ldr	r0, .L5+0x4
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L3	@cond_branch
	ldr	r1, .L5+0x8
	ldr	r0, .L5+0xc
	str	r0, [r1]
	ldr	r1, .L5+0x10
	ldr	r0, .L5+0x14
	str	r0, [r1]
	mov	r0, #0x1
	b	.L4
.L6:
	.align	2, 0
.L5:
	.word	gMapHeader
	.word	0x828
	.word	gFieldCallback
	.word	FieldCallback_Teleport
	.word	gUnknown_03005CE4
	.word	sub_810CBFC
.L3:
	mov	r0, #0x0
.L4:
	pop	{r1}
	bx	r1
.Lfe1:
	.size	 SetUpFieldMove_Flash,.Lfe1-SetUpFieldMove_Flash
	.align	2, 0
	.globl	sub_810CBFC
	.type	 sub_810CBFC,function
	.thumb_func
sub_810CBFC:
	push	{lr}
	bl	oei_task_add
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L8
	ldr	r1, .L8+0x4
	ldrb	r1, [r1]
	str	r1, [r2]
	ldr	r2, .L8+0x8
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldr	r2, .L8+0xc
	lsr	r0, r2, #0x10
	strh	r0, [r1, #0x18]
	strh	r2, [r1, #0x1a]
	pop	{r0}
	bx	r0
.L9:
	.align	2, 0
.L8:
	.word	gFieldEffectArguments
	.word	gLastFieldPokeMenuOpened
	.word	gTasks
	.word	sub_810CC34
.Lfe2:
	.size	 sub_810CBFC,.Lfe2-sub_810CBFC
	.align	2, 0
	.globl	sub_810CC34
	.type	 sub_810CC34,function
	.thumb_func
sub_810CC34:
	push	{lr}
	mov	r0, #0xcf
	bl	PlaySE
	ldr	r0, .L11
	bl	FlagSet
	ldr	r0, .L11+0x4
	bl	ScriptContext1_SetupScript
	pop	{r0}
	bx	r0
.L12:
	.align	2, 0
.L11:
	.word	0x828
	.word	gUnknown_081B694A
.Lfe3:
	.size	 sub_810CC34,.Lfe3-sub_810CC34
	.align	2, 0
	.globl	sub_810CC54
	.type	 sub_810CC54,function
	.thumb_func
sub_810CC54:
	push	{lr}
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	UpdatePaletteFade
	pop	{r0}
	bx	r0
.Lfe4:
	.size	 sub_810CC54,.Lfe4-sub_810CC54
	.align	2, 0
	.type	 VBlankCB,function
	.thumb_func
VBlankCB:
	push	{lr}
	bl	LoadOam
	bl	ProcessSpriteCopyRequests
	bl	TransferPlttBuffer
	pop	{r0}
	bx	r0
.Lfe5:
	.size	 VBlankCB,.Lfe5-VBlankCB
	.align	2, 0
	.globl	sub_810CC80
	.type	 sub_810CC80,function
	.thumb_func
sub_810CC80:
	push	{r4, lr}
	add	sp, sp, #0xfffffff8
	mov	r0, #0x0
	bl	SetVBlankCallback
	mov	r0, #0x80
	lsl	r0, r0, #0x13
	mov	r1, #0x0
	strh	r1, [r0]
	add	r0, r0, #0xc
	strh	r1, [r0]
	sub	r0, r0, #0x2
	strh	r1, [r0]
	sub	r0, r0, #0x2
	strh	r1, [r0]
	add	r0, r0, #0x10
	strh	r1, [r0]
	add	r0, r0, #0x2
	strh	r1, [r0]
	sub	r0, r0, #0x6
	strh	r1, [r0]
	add	r0, r0, #0x2
	strh	r1, [r0]
	sub	r0, r0, #0x6
	strh	r1, [r0]
	add	r0, r0, #0x2
	strh	r1, [r0]
	mov	r0, sp
	strh	r1, [r0]
	ldr	r1, .L17
	str	r0, [r1]
	mov	r0, #0xc0
	lsl	r0, r0, #0x13
	str	r0, [r1, #0x4]
	ldr	r0, .L17+0x4
	str	r0, [r1, #0x8]
	ldr	r0, [r1, #0x8]
	mov	r4, #0x0
	str	r4, [sp, #0x4]
	add	r0, sp, #0x4
	str	r0, [r1]
	mov	r0, #0xe0
	lsl	r0, r0, #0x13
	str	r0, [r1, #0x4]
	ldr	r0, .L17+0x8
	str	r0, [r1, #0x8]
	ldr	r0, [r1, #0x8]
	mov	r0, sp
	strh	r4, [r0]
	str	r0, [r1]
	ldr	r0, .L17+0xc
	str	r0, [r1, #0x4]
	ldr	r0, .L17+0x10
	str	r0, [r1, #0x8]
	ldr	r0, [r1, #0x8]
	bl	ResetPaletteFade
	bl	ResetTasks
	bl	ResetSpriteData
	ldr	r3, .L17+0x14
	ldrh	r2, [r3]
	strh	r4, [r3]
	ldr	r4, .L17+0x18
	ldrh	r0, [r4]
	mov	r1, #0x1
	orr	r0, r0, r1
	strh	r0, [r4]
	strh	r2, [r3]
	ldr	r0, .L17+0x1c
	bl	SetVBlankCallback
	ldr	r0, .L17+0x20
	bl	SetMainCallback2
	bl	sub_810CD5C
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L16	@cond_branch
	ldr	r0, .L17+0x24
	ldr	r0, [r0, #0x8]
	bl	SetMainCallback2
.L16:
	add	sp, sp, #0x8
	pop	{r4}
	pop	{r0}
	bx	r0
.L18:
	.align	2, 0
.L17:
	.word	0x40000d4
	.word	0x8100c000
	.word	0x85000100
	.word	0x5000002
	.word	0x810001ff
	.word	0x4000208
	.word	0x4000200
	.word	VBlankCB
	.word	sub_810CC54
	.word	gMain
.Lfe6:
	.size	 sub_810CC80,.Lfe6-sub_810CC80
	.align	2, 0
	.globl	sub_810CD5C
	.type	 sub_810CD5C,function
	.thumb_func
sub_810CD5C:
	push	{r4, r5, r6, r7, lr}
	bl	get_map_type_from_warp0
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	bl	Overworld_GetMapTypeOfSaveblockLocation
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r3, #0x0
	ldr	r4, .L27
	ldrb	r0, [r4]
	cmp	r0, #0
	beq	.L21	@cond_branch
	add	r7, r4, #0
	add	r0, r4, #0x4
	mov	ip, r0
.L23:
	lsl	r2, r3, #0x3
	add	r1, r2, r7
	ldrb	r0, [r1]
	cmp	r0, r6
	bne	.L22	@cond_branch
	ldrb	r0, [r1, #0x1]
	cmp	r0, r5
	bne	.L22	@cond_branch
	mov	r1, ip
	add	r0, r2, r1
	ldr	r0, [r0]
	bl	_call_via_r0
	mov	r0, #0x1
	b	.L26
.L28:
	.align	2, 0
.L27:
	.word	gUnknown_083F7FC4
.L22:
	add	r0, r3, #0x1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	lsl	r0, r3, #0x3
	add	r0, r0, r4
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L23	@cond_branch
.L21:
	mov	r0, #0x0
.L26:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe7:
	.size	 sub_810CD5C,.Lfe7-sub_810CD5C
	.align	2, 0
	.globl	sub_810CDB8
	.type	 sub_810CDB8,function
	.thumb_func
sub_810CDB8:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r5, r0, #0x18
	lsr	r4, r1, #0x18
	mov	r3, #0x0
	ldr	r1, .L37
	ldrb	r0, [r1]
	cmp	r0, #0
	beq	.L31	@cond_branch
	add	r6, r1, #0
.L33:
	lsl	r0, r3, #0x3
	add	r2, r0, r6
	ldrb	r0, [r2]
	cmp	r0, r5
	bne	.L32	@cond_branch
	ldrb	r0, [r2, #0x1]
	cmp	r0, r4
	bne	.L32	@cond_branch
	ldrb	r0, [r2, #0x2]
	b	.L36
.L38:
	.align	2, 0
.L37:
	.word	gUnknown_083F7FC4
.L32:
	add	r0, r3, #0x1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	lsl	r0, r3, #0x3
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L33	@cond_branch
.L31:
	mov	r0, #0x0
.L36:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe8:
	.size	 sub_810CDB8,.Lfe8-sub_810CDB8
	.align	2, 0
	.globl	fade_type_for_given_maplight_pair
	.type	 fade_type_for_given_maplight_pair,function
	.thumb_func
fade_type_for_given_maplight_pair:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r5, r0, #0x18
	lsr	r4, r1, #0x18
	mov	r3, #0x0
	ldr	r1, .L47
	ldrb	r0, [r1]
	cmp	r0, #0
	beq	.L41	@cond_branch
	add	r6, r1, #0
.L43:
	lsl	r0, r3, #0x3
	add	r2, r0, r6
	ldrb	r0, [r2]
	cmp	r0, r5
	bne	.L42	@cond_branch
	ldrb	r0, [r2, #0x1]
	cmp	r0, r4
	bne	.L42	@cond_branch
	ldrb	r0, [r2, #0x3]
	b	.L46
.L48:
	.align	2, 0
.L47:
	.word	gUnknown_083F7FC4
.L42:
	add	r0, r3, #0x1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	lsl	r0, r3, #0x3
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L43	@cond_branch
.L41:
	mov	r0, #0x0
.L46:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe9:
	.size	 fade_type_for_given_maplight_pair,.Lfe9-fade_type_for_given_maplight_pair
	.align	2, 0
	.globl	sub_810CE48
	.type	 sub_810CE48,function
	.thumb_func
sub_810CE48:
	push	{lr}
	ldr	r0, .L50
	mov	r1, #0x0
	bl	CreateTask
	pop	{r0}
	bx	r0
.L51:
	.align	2, 0
.L50:
	.word	sub_810CE5C
.Lfe10:
	.size	 sub_810CE48,.Lfe10-sub_810CE48
	.align	2, 0
	.globl	sub_810CE5C
	.type	 sub_810CE5C,function
	.thumb_func
sub_810CE5C:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L53
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldr	r0, .L53+0x4
	str	r0, [r1]
	bx	lr
.L54:
	.align	2, 0
.L53:
	.word	gTasks
	.word	sub_810CE78
.Lfe11:
	.size	 sub_810CE5C,.Lfe11-sub_810CE5C
	.align	2, 0
	.globl	sub_810CE78
	.type	 sub_810CE78,function
	.thumb_func
sub_810CE78:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r6, #0x80
	lsl	r6, r6, #0x13
	mov	r5, #0x0
	strh	r5, [r6]
	ldr	r0, .L56
	ldr	r1, .L56+0x4
	bl	LZ77UnCompVram
	ldr	r0, .L56+0x8
	ldr	r1, .L56+0xc
	bl	LZ77UnCompVram
	ldr	r0, .L56+0x10
	mov	r1, #0xe0
	mov	r2, #0x20
	bl	LoadPalette
	ldr	r0, .L56+0x14
	mov	r1, #0xe0
	mov	r2, #0x10
	bl	LoadPalette
	ldr	r1, .L56+0x18
	ldr	r2, .L56+0x1c
	add	r0, r2, #0
	strh	r0, [r1]
	ldr	r0, .L56+0x20
	strh	r5, [r0]
	add	r0, r0, #0x2
	strh	r5, [r0]
	sub	r1, r1, #0x48
	ldr	r2, .L56+0x24
	add	r0, r2, #0
	strh	r0, [r1]
	mov	r1, #0x8a
	lsl	r1, r1, #0x5
	add	r0, r1, #0
	strh	r0, [r6]
	ldr	r1, .L56+0x28
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L56+0x2c
	str	r1, [r0]
	mov	r2, #0x0
	mov	r1, #0x10
	strh	r1, [r0, #0x8]
	strh	r2, [r0, #0xa]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L57:
	.align	2, 0
.L56:
	.word	gCaveTransitionTiles
	.word	0x600c000
	.word	gCaveTransitionTilemap
	.word	0x600f800
	.word	gCaveTransitionPalette_White
	.word	gUnknown_083F809C
	.word	0x4000050
	.word	0x3e41
	.word	0x4000052
	.word	0x1f0c
	.word	gTasks
	.word	sub_810CF18
.Lfe12:
	.size	 sub_810CE78,.Lfe12-sub_810CE78
	.align	2, 0
	.globl	sub_810CF18
	.type	 sub_810CF18,function
	.thumb_func
sub_810CF18:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L61
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r3, r1, r2
	ldrh	r2, [r3, #0xa]
	mov	r1, #0x80
	lsl	r1, r1, #0x5
	add	r0, r2, r1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r1, .L61+0x4
	strh	r0, [r1]
	cmp	r2, #0x10
	bhi	.L59	@cond_branch
	ldrh	r0, [r3, #0xa]
	add	r0, r0, #0x1
	strh	r0, [r3, #0xa]
	b	.L60
.L62:
	.align	2, 0
.L61:
	.word	gTasks
	.word	0x4000052
.L59:
	mov	r0, #0x0
	strh	r0, [r3, #0xc]
	ldr	r0, .L63
	str	r0, [r3]
.L60:
	pop	{r0}
	bx	r0
.L64:
	.align	2, 0
.L63:
	.word	sub_810CF5C
.Lfe13:
	.size	 sub_810CF18,.Lfe13-sub_810CF18
	.align	2, 0
	.globl	sub_810CF5C
	.type	 sub_810CF5C,function
	.thumb_func
sub_810CF5C:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L68
	ldr	r3, .L68+0x4
	add	r1, r3, #0
	strh	r1, [r2]
	ldr	r2, .L68+0x8
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r4, r1, r2
	ldrh	r1, [r4, #0xc]
	cmp	r1, #0x7
	bhi	.L66	@cond_branch
	add	r0, r1, #0x1
	strh	r0, [r4, #0xc]
	lsl	r1, r1, #0x1
	ldr	r0, .L68+0xc
	add	r0, r1, r0
	mov	r2, #0x10
	sub	r2, r2, r1
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	mov	r1, #0xe0
	bl	LoadPalette
	b	.L67
.L69:
	.align	2, 0
.L68:
	.word	0x4000052
	.word	0x1010
	.word	gTasks
	.word	gUnknown_083F809C
.L66:
	ldr	r0, .L70
	mov	r1, #0x0
	mov	r2, #0x20
	bl	LoadPalette
	ldr	r0, .L70+0x4
	str	r0, [r4]
	mov	r0, #0x8
	strh	r0, [r4, #0xc]
.L67:
	pop	{r4}
	pop	{r0}
	bx	r0
.L71:
	.align	2, 0
.L70:
	.word	gCaveTransitionPalette_White
	.word	sub_810CFC4
.Lfe14:
	.size	 sub_810CF5C,.Lfe14-sub_810CF5C
	.align	2, 0
	.globl	sub_810CFC4
	.type	 sub_810CFC4,function
	.thumb_func
sub_810CFC4:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L75
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldrh	r2, [r1, #0xc]
	mov	r3, #0xc
	ldrsh	r0, [r1, r3]
	cmp	r0, #0
	beq	.L73	@cond_branch
	sub	r0, r2, #0x1
	strh	r0, [r1, #0xc]
	b	.L74
.L76:
	.align	2, 0
.L75:
	.word	gTasks
.L73:
	ldr	r0, .L77
	ldr	r0, [r0, #0x8]
	bl	SetMainCallback2
.L74:
	pop	{r0}
	bx	r0
.L78:
	.align	2, 0
.L77:
	.word	gMain
.Lfe15:
	.size	 sub_810CFC4,.Lfe15-sub_810CFC4
	.align	2, 0
	.globl	sub_810CFF8
	.type	 sub_810CFF8,function
	.thumb_func
sub_810CFF8:
	push	{lr}
	ldr	r0, .L80
	mov	r1, #0x0
	bl	CreateTask
	pop	{r0}
	bx	r0
.L81:
	.align	2, 0
.L80:
	.word	sub_810D00C
.Lfe16:
	.size	 sub_810CFF8,.Lfe16-sub_810CFF8
	.align	2, 0
	.globl	sub_810D00C
	.type	 sub_810D00C,function
	.thumb_func
sub_810D00C:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L83
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldr	r0, .L83+0x4
	str	r0, [r1]
	bx	lr
.L84:
	.align	2, 0
.L83:
	.word	gTasks
	.word	sub_810D028
.Lfe17:
	.size	 sub_810D00C,.Lfe17-sub_810D00C
	.align	2, 0
	.globl	sub_810D028
	.type	 sub_810D028,function
	.thumb_func
sub_810D028:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	mov	r6, #0x80
	lsl	r6, r6, #0x13
	mov	r4, #0x0
	strh	r4, [r6]
	ldr	r0, .L86
	ldr	r1, .L86+0x4
	bl	LZ77UnCompVram
	ldr	r0, .L86+0x8
	ldr	r1, .L86+0xc
	bl	LZ77UnCompVram
	ldr	r0, .L86+0x10
	strh	r4, [r0]
	add	r0, r0, #0x2
	strh	r4, [r0]
	add	r0, r0, #0x2
	strh	r4, [r0]
	ldr	r1, .L86+0x14
	ldr	r2, .L86+0x18
	add	r0, r2, #0
	strh	r0, [r1]
	mov	r1, #0x8a
	lsl	r1, r1, #0x5
	add	r0, r1, #0
	strh	r0, [r6]
	ldr	r0, .L86+0x1c
	mov	r1, #0xe0
	mov	r2, #0x20
	bl	LoadPalette
	ldr	r0, .L86+0x20
	mov	r1, #0x0
	mov	r2, #0x20
	bl	LoadPalette
	ldr	r1, .L86+0x24
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L86+0x28
	str	r1, [r0]
	mov	r2, #0x0
	mov	r1, #0x10
	strh	r1, [r0, #0x8]
	strh	r2, [r0, #0xa]
	strh	r2, [r0, #0xc]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L87:
	.align	2, 0
.L86:
	.word	gCaveTransitionTiles
	.word	0x600c000
	.word	gCaveTransitionTilemap
	.word	0x600f800
	.word	0x4000050
	.word	0x4000008
	.word	0x1f0c
	.word	gCaveTransitionPalette_White
	.word	gCaveTransitionPalette_Black
	.word	gTasks
	.word	sub_810D0C4
.Lfe18:
	.size	 sub_810D028,.Lfe18-sub_810D028
	.align	2, 0
	.globl	sub_810D0C4
	.type	 sub_810D0C4,function
	.thumb_func
sub_810D0C4:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L91
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r3, r1, r2
	ldrh	r1, [r3, #0xc]
	cmp	r1, #0xf
	bhi	.L89	@cond_branch
	add	r2, r1, #0x1
	add	r0, r2, #0x1
	strh	r0, [r3, #0xc]
	mov	r0, #0xf
	sub	r0, r0, r1
	lsl	r0, r0, #0x1
	ldr	r1, .L91+0x4
	add	r0, r0, r1
	lsl	r2, r2, #0x11
	lsr	r2, r2, #0x10
	mov	r1, #0xe0
	bl	LoadPalette
	b	.L90
.L92:
	.align	2, 0
.L91:
	.word	gTasks
	.word	gUnknown_083F808C
.L89:
	ldr	r1, .L93
	ldr	r2, .L93+0x4
	add	r0, r2, #0
	strh	r0, [r1]
	sub	r1, r1, #0x2
	ldr	r2, .L93+0x8
	add	r0, r2, #0
	strh	r0, [r1]
	ldr	r0, .L93+0xc
	str	r0, [r3]
.L90:
	pop	{r0}
	bx	r0
.L94:
	.align	2, 0
.L93:
	.word	0x4000052
	.word	0x1010
	.word	0x3e41
	.word	sub_810D128
.Lfe19:
	.size	 sub_810D0C4,.Lfe19-sub_810D0C4
	.align	2, 0
	.globl	sub_810D128
	.type	 sub_810D128,function
	.thumb_func
sub_810D128:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L98
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r3, r1, r2
	ldrh	r0, [r3, #0xa]
	mov	r1, #0x10
	sub	r1, r1, r0
	lsl	r1, r1, #0x10
	mov	r2, #0x80
	lsl	r2, r2, #0x15
	add	r0, r1, r2
	lsr	r0, r0, #0x10
	ldr	r2, .L98+0x4
	strh	r0, [r2]
	cmp	r1, #0
	beq	.L96	@cond_branch
	ldrh	r0, [r3, #0xa]
	add	r0, r0, #0x1
	strh	r0, [r3, #0xa]
	b	.L97
.L99:
	.align	2, 0
.L98:
	.word	gTasks
	.word	0x4000052
.L96:
	ldr	r0, .L100
	mov	r1, #0x0
	mov	r2, #0x20
	bl	LoadPalette
	ldr	r0, .L100+0x4
	ldr	r0, [r0, #0x8]
	bl	SetMainCallback2
.L97:
	pop	{r0}
	bx	r0
.L101:
	.align	2, 0
.L100:
	.word	gCaveTransitionPalette_Black
	.word	gMain
.Lfe20:
	.size	 sub_810D128,.Lfe20-sub_810D128
.text
	.align	2, 0
