@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.globl	gUnknown_08376364
	.section .rodata
	.align	2, 0
	.type	 gUnknown_08376364,object
gUnknown_08376364:
	.word	DummyPerStepCallback
	.word	PerStepCallback_8069F64
	.word	PerStepCallback_8069AA0
	.word	PerStepCallback_8069864
	.word	PerStepCallback_8069DD4
	.word	EndTruckSequence
	.word	sub_80BCF1C
	.word	PerStepCallback_806A07C
	.size	 gUnknown_08376364,32
.text
	.align	2, 0
	.globl	Task_RunPerStepCallback
	.type	 Task_RunPerStepCallback,function
	.thumb_func
Task_RunPerStepCallback:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L3
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	mov	r2, #0x8
	ldrsh	r1, [r1, r2]
	ldr	r2, .L3+0x4
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	_call_via_r1
	pop	{r0}
	bx	r0
.L4:
	.align	2, 0
.L3:
	.word	gTasks
	.word	gUnknown_08376364
.Lfe1:
	.size	 Task_RunPerStepCallback,.Lfe1-Task_RunPerStepCallback
	.align	2, 0
	.type	 RunTimeBasedEvents,function
	.thumb_func
RunTimeBasedEvents:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r1, #0x0
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	beq	.L7	@cond_branch
	cmp	r0, #0x1
	beq	.L9	@cond_branch
	b	.L6
.L7:
	ldr	r0, .L14
	ldr	r0, [r0, #0x20]
	mov	r1, #0x80
	lsl	r1, r1, #0x5
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L6	@cond_branch
	bl	DoTimeBasedEvents
	ldrh	r0, [r4]
	add	r0, r0, #0x1
	b	.L13
.L15:
	.align	2, 0
.L14:
	.word	gMain
.L9:
	ldr	r0, .L16
	ldr	r0, [r0, #0x20]
	mov	r1, #0x80
	lsl	r1, r1, #0x5
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L6	@cond_branch
	ldrh	r0, [r4]
	sub	r0, r0, #0x1
.L13:
	strh	r0, [r4]
.L6:
	pop	{r4}
	pop	{r0}
	bx	r0
.L17:
	.align	2, 0
.L16:
	.word	gMain
.Lfe2:
	.size	 RunTimeBasedEvents,.Lfe2-RunTimeBasedEvents
	.align	2, 0
	.globl	Task_RunTimeBasedEvents
	.type	 Task_RunTimeBasedEvents,function
	.thumb_func
Task_RunTimeBasedEvents:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L20
	add	r4, r1, r0
	bl	ScriptContext2_IsEnabled
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L19	@cond_branch
	add	r0, r4, #0
	bl	RunTimeBasedEvents
	add	r0, r4, #0x2
	add	r1, r4, #0x4
	bl	UpdateAmbientCry
.L19:
	pop	{r4}
	pop	{r0}
	bx	r0
.L21:
	.align	2, 0
.L20:
	.word	gTasks+0x8
.Lfe3:
	.size	 Task_RunTimeBasedEvents,.Lfe3-Task_RunTimeBasedEvents
	.align	2, 0
	.globl	SetUpFieldTasks
	.type	 SetUpFieldTasks,function
	.thumb_func
SetUpFieldTasks:
	push	{r4, r5, lr}
	ldr	r5, .L26
	add	r0, r5, #0
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0
	bne	.L23	@cond_branch
	add	r0, r5, #0
	mov	r1, #0x50
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L26+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	strh	r4, [r1, #0x8]
.L23:
	ldr	r4, .L26+0x8
	add	r0, r4, #0
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L24	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x50
	bl	CreateTask
.L24:
	ldr	r4, .L26+0xc
	add	r0, r4, #0
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L25	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x50
	bl	CreateTask
.L25:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L27:
	.align	2, 0
.L26:
	.word	Task_RunPerStepCallback
	.word	gTasks
	.word	Task_MuddySlope
	.word	Task_RunTimeBasedEvents
.Lfe4:
	.size	 SetUpFieldTasks,.Lfe4-SetUpFieldTasks
	.align	2, 0
	.globl	ActivatePerStepCallback
	.type	 ActivatePerStepCallback,function
	.thumb_func
ActivatePerStepCallback:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L37
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0xff
	beq	.L29	@cond_branch
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	ldr	r1, .L37+0x4
	add	r1, r0, r1
	mov	r2, #0x0
	add	r0, r1, #0
	add	r0, r0, #0x1e
.L30:
	strh	r2, [r0]
	sub	r0, r0, #0x2
	cmp	r0, r1
	bge	.L30	@cond_branch
	cmp	r4, #0x7
	bls	.L35	@cond_branch
	mov	r0, #0x0
	strh	r0, [r1]
	b	.L29
.L38:
	.align	2, 0
.L37:
	.word	Task_RunPerStepCallback
	.word	gTasks+0x8
.L35:
	strh	r4, [r1]
.L29:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe5:
	.size	 ActivatePerStepCallback,.Lfe5-ActivatePerStepCallback
	.align	2, 0
	.globl	ResetFieldTasksArgs
	.type	 ResetFieldTasksArgs,function
	.thumb_func
ResetFieldTasksArgs:
	push	{lr}
	ldr	r0, .L42
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	ldr	r0, .L42+0x4
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0xff
	beq	.L41	@cond_branch
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	ldr	r1, .L42+0x8
	add	r0, r0, r1
	mov	r1, #0x0
	strh	r1, [r0, #0x2]
	strh	r1, [r0, #0x4]
.L41:
	pop	{r0}
	bx	r0
.L43:
	.align	2, 0
.L42:
	.word	Task_RunPerStepCallback
	.word	Task_RunTimeBasedEvents
	.word	gTasks+0x8
.Lfe6:
	.size	 ResetFieldTasksArgs,.Lfe6-ResetFieldTasksArgs
	.globl	gUnknown_08376384
	.section .rodata
	.align	2, 0
	.type	 gUnknown_08376384,object
gUnknown_08376384:
	.byte	0x0
	.byte	0x0
	.short	0x259
	.byte	0x0
	.byte	0x1
	.short	0x261
	.byte	0x0
	.byte	0xffffffff
	.short	0x259
	.byte	0x0
	.byte	0x0
	.short	0x261
	.byte	0x0
	.byte	0x0
	.short	0x252
	.byte	0x1
	.byte	0x0
	.short	0x253
	.byte	0xffffffff
	.byte	0x0
	.short	0x252
	.byte	0x0
	.byte	0x0
	.short	0x253
	.size	 gUnknown_08376384,32
	.globl	gUnknown_083763A4
	.align	2, 0
	.type	 gUnknown_083763A4,object
gUnknown_083763A4:
	.byte	0x0
	.byte	0x0
	.short	0x25a
	.byte	0x0
	.byte	0x1
	.short	0x262
	.byte	0x0
	.byte	0xffffffff
	.short	0x25a
	.byte	0x0
	.byte	0x0
	.short	0x262
	.byte	0x0
	.byte	0x0
	.short	0x254
	.byte	0x1
	.byte	0x0
	.short	0x255
	.byte	0xffffffff
	.byte	0x0
	.short	0x254
	.byte	0x0
	.byte	0x0
	.short	0x255
	.size	 gUnknown_083763A4,32
	.globl	gUnknown_083763C4
	.align	2, 0
	.type	 gUnknown_083763C4,object
gUnknown_083763C4:
	.byte	0x0
	.byte	0x0
	.short	0x258
	.byte	0x0
	.byte	0x1
	.short	0x260
	.byte	0x0
	.byte	0xffffffff
	.short	0x258
	.byte	0x0
	.byte	0x0
	.short	0x260
	.byte	0x0
	.byte	0x0
	.short	0x250
	.byte	0x1
	.byte	0x0
	.short	0x251
	.byte	0xffffffff
	.byte	0x0
	.short	0x250
	.byte	0x0
	.byte	0x0
	.short	0x251
	.size	 gUnknown_083763C4,32
.text
	.align	2, 0
	.globl	DummyPerStepCallback
	.type	 DummyPerStepCallback,function
	.thumb_func
DummyPerStepCallback:
	bx	lr
.Lfe7:
	.size	 DummyPerStepCallback,.Lfe7-DummyPerStepCallback
	.align	2, 0
	.globl	sub_80695E0
	.type	 sub_80695E0,function
	.thumb_func
sub_80695E0:
	push	{r4, r5, lr}
	add	r5, r0, #0
	lsl	r1, r1, #0x18
	lsr	r4, r1, #0x18
	add	r0, r4, #0
	bl	sub_80576A0
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L46	@cond_branch
	add	r0, r5, #0
	b	.L54
.L46:
	add	r0, r4, #0
	bl	sub_80576B4
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L48	@cond_branch
	add	r0, r5, #0
	add	r0, r0, #0x8
	b	.L55
.L48:
	add	r0, r4, #0
	bl	sub_80576C8
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L50	@cond_branch
	add	r0, r5, #0
	add	r0, r0, #0x10
	b	.L55
.L50:
	add	r0, r4, #0
	bl	sub_80576DC
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L52	@cond_branch
	mov	r0, #0x0
	b	.L54
.L52:
	add	r0, r5, #0
	add	r0, r0, #0x18
.L55:
.L54:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe8:
	.size	 sub_80695E0,.Lfe8-sub_80695E0
	.align	2, 0
	.globl	sub_8069638
	.type	 sub_8069638,function
	.thumb_func
sub_8069638:
	.syntax unified
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	adds r5, r0, 0
	mov r8, r3
	lsls r1, 16
	asrs r6, r1, 16
	lsls r2, 16
	asrs r7, r2, 16
	adds r0, r6, 0
	adds r1, r7, 0
	bl MapGridGetMetatileBehaviorAt
	adds r1, r0, 0
	lsls r1, 16
	lsrs r1, 16
	adds r0, r5, 0
	bl sub_80695E0
	adds r4, r0, 0
	adds r5, r4, 0
	cmp r4, 0
	beq _080696B6
	movs r0, 0
	ldrsb r0, [r4, r0]
	adds r0, r6, r0
	movs r1, 0x1
	ldrsb r1, [r4, r1]
	adds r1, r7, r1
	ldrh r2, [r4, 0x2]
	bl MapGridSetMetatileIdAt
	mov r0, r8
	cmp r0, 0
	beq _0806968E
	movs r0, 0
	ldrsb r0, [r4, r0]
	adds r0, r6, r0
	movs r1, 0x1
	ldrsb r1, [r4, r1]
	adds r1, r7, r1
	bl CurrentMapDrawMetatileAt
_0806968E:
	movs r0, 0x4
	ldrsb r0, [r5, r0]
	adds r0, r6, r0
	movs r1, 0x5
	ldrsb r1, [r5, r1]
	adds r1, r7, r1
	ldrh r2, [r5, 0x6]
	bl MapGridSetMetatileIdAt
	mov r0, r8
	cmp r0, 0
	beq _080696B6
	movs r0, 0x4
	ldrsb r0, [r5, r0]
	adds r0, r6, r0
	movs r1, 0x5
	ldrsb r1, [r5, r1]
	adds r1, r7, r1
	bl CurrentMapDrawMetatileAt
_080696B6:
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
.syntax divided

	.code	16
.Lfe9:
	.size	 sub_8069638,.Lfe9-sub_8069638
	.align	2, 0
	.globl	sub_80696C0
	.type	 sub_80696C0,function
	.thumb_func
sub_80696C0:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	add	r3, r2, #0
	ldr	r0, .L58
	lsl	r4, r4, #0x10
	asr	r4, r4, #0x10
	lsl	r5, r5, #0x10
	asr	r5, r5, #0x10
	add	r1, r4, #0
	add	r2, r5, #0
	bl	sub_8069638
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L59:
	.align	2, 0
.L58:
	.word	gUnknown_08376384
.Lfe10:
	.size	 sub_80696C0,.Lfe10-sub_80696C0
	.align	2, 0
	.globl	sub_80696E4
	.type	 sub_80696E4,function
	.thumb_func
sub_80696E4:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	add	r3, r2, #0
	ldr	r0, .L61
	lsl	r4, r4, #0x10
	asr	r4, r4, #0x10
	lsl	r5, r5, #0x10
	asr	r5, r5, #0x10
	add	r1, r4, #0
	add	r2, r5, #0
	bl	sub_8069638
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L62:
	.align	2, 0
.L61:
	.word	gUnknown_083763A4
.Lfe11:
	.size	 sub_80696E4,.Lfe11-sub_80696E4
	.align	2, 0
	.globl	sub_8069708
	.type	 sub_8069708,function
	.thumb_func
sub_8069708:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	add	r3, r2, #0
	ldr	r0, .L64
	lsl	r4, r4, #0x10
	asr	r4, r4, #0x10
	lsl	r5, r5, #0x10
	asr	r5, r5, #0x10
	add	r1, r4, #0
	add	r2, r5, #0
	bl	sub_8069638
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L65:
	.align	2, 0
.L64:
	.word	gUnknown_083763C4
.Lfe12:
	.size	 sub_8069708,.Lfe12-sub_8069708
	.align	2, 0
	.globl	sub_806972C
	.type	 sub_806972C,function
	.thumb_func
sub_806972C:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r8, r0
	mov	sl, r8
	lsl	r1, r1, #0x10
	lsr	r7, r1, #0x10
	mov	r9, r7
	lsl	r2, r2, #0x10
	asr	r6, r2, #0x10
	lsl	r3, r3, #0x10
	asr	r5, r3, #0x10
	add	r0, r6, #0
	add	r1, r5, #0
	bl	MapGridGetMetatileBehaviorAt
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r0, r4, #0
	bl	sub_80576A0
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L67	@cond_branch
	lsl	r0, r7, #0x10
	asr	r0, r0, #0x10
	cmp	r0, r5
	ble	.L69	@cond_branch
.L81:
	mov	r0, #0x0
	b	.L78
.L67:
	add	r0, r4, #0
	bl	sub_80576B4
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L70	@cond_branch
	mov	r1, r9
	lsl	r0, r1, #0x10
	asr	r0, r0, #0x10
	cmp	r0, r5
	bge	.L69	@cond_branch
	b	.L81
.L70:
	add	r0, r4, #0
	bl	sub_80576C8
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L73	@cond_branch
	mov	r1, r8
	lsl	r0, r1, #0x10
	asr	r0, r0, #0x10
	cmp	r0, r6
	ble	.L69	@cond_branch
	b	.L81
.L73:
	add	r0, r4, #0
	bl	sub_80576DC
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L69	@cond_branch
	mov	r1, sl
	lsl	r0, r1, #0x10
	asr	r0, r0, #0x10
	cmp	r0, r6
	blt	.L81	@cond_branch
.L69:
	mov	r0, #0x1
.L78:
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe13:
	.size	 sub_806972C,.Lfe13-sub_806972C
	.align	2, 0
	.globl	sub_80697C8
	.type	 sub_80697C8,function
	.thumb_func
sub_80697C8:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	mov	r8, r2
	mov	sl, r8
	lsl	r3, r3, #0x10
	lsr	r7, r3, #0x10
	mov	r9, r7
	lsl	r0, r0, #0x10
	asr	r6, r0, #0x10
	lsl	r1, r1, #0x10
	asr	r5, r1, #0x10
	add	r0, r6, #0
	add	r1, r5, #0
	bl	MapGridGetMetatileBehaviorAt
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r0, r4, #0
	bl	sub_80576A0
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L83	@cond_branch
	lsl	r0, r7, #0x10
	asr	r0, r0, #0x10
	cmp	r5, r0
	bge	.L85	@cond_branch
.L97:
	mov	r0, #0x0
	b	.L94
.L83:
	add	r0, r4, #0
	bl	sub_80576B4
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L86	@cond_branch
	mov	r1, r9
	lsl	r0, r1, #0x10
	asr	r0, r0, #0x10
	cmp	r5, r0
	ble	.L85	@cond_branch
	b	.L97
.L86:
	add	r0, r4, #0
	bl	sub_80576C8
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L89	@cond_branch
	mov	r1, r8
	lsl	r0, r1, #0x10
	asr	r0, r0, #0x10
	cmp	r6, r0
	bge	.L85	@cond_branch
	b	.L97
.L89:
	add	r0, r4, #0
	bl	sub_80576DC
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L85	@cond_branch
	mov	r1, sl
	lsl	r0, r1, #0x10
	asr	r0, r0, #0x10
	cmp	r6, r0
	bgt	.L97	@cond_branch
.L85:
	mov	r0, #0x1
.L94:
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe14:
	.size	 sub_80697C8,.Lfe14-sub_80697C8
	.align	2, 0
	.globl	PerStepCallback_8069864
	.type	 PerStepCallback_8069864,function
	.thumb_func
PerStepCallback_8069864:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #0xfffffffc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L114
	add	r4, r1, r0
	mov	r5, sp
	add	r5, r5, #0x2
	mov	r0, sp
	add	r1, r5, #0
	bl	PlayerGetDestCoords
	mov	r1, #0x2
	ldrsh	r0, [r4, r1]
	add	r6, r5, #0
	cmp	r0, #0x1
	beq	.L101	@cond_branch
	cmp	r0, #0x1
	bgt	.L113	@cond_branch
	cmp	r0, #0
	beq	.L100	@cond_branch
	b	.L99
.L115:
	.align	2, 0
.L114:
	.word	gTasks+0x8
.L113:
	cmp	r0, #0x2
	beq	.L108	@cond_branch
	b	.L99
.L100:
	mov	r0, sp
	ldrh	r0, [r0]
	strh	r0, [r4, #0x4]
	ldrh	r0, [r5]
	strh	r0, [r4, #0x6]
	mov	r0, sp
	mov	r2, #0x0
	ldrsh	r0, [r0, r2]
	mov	r3, #0x0
	ldrsh	r1, [r5, r3]
	mov	r2, #0x1
	bl	sub_80696E4
	b	.L110
.L101:
	mov	r0, sp
	mov	r7, #0x0
	ldrsh	r1, [r0, r7]
	mov	r2, #0x4
	ldrsh	r0, [r4, r2]
	cmp	r1, r0
	bne	.L103	@cond_branch
	mov	r3, #0x0
	ldrsh	r1, [r5, r3]
	mov	r7, #0x6
	ldrsh	r0, [r4, r7]
	cmp	r1, r0
	beq	.L99	@cond_branch
.L103:
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x0
	ldrsh	r1, [r5, r2]
	mov	r3, #0x4
	ldrsh	r2, [r4, r3]
	mov	r5, #0x6
	ldrsh	r3, [r4, r5]
	bl	sub_806972C
	cmp	r0, #0
	beq	.L104	@cond_branch
	mov	r7, #0x4
	ldrsh	r0, [r4, r7]
	mov	r2, #0x6
	ldrsh	r1, [r4, r2]
	mov	r2, #0x1
	bl	sub_80696C0
	mov	r3, #0x4
	ldrsh	r0, [r4, r3]
	mov	r5, #0x6
	ldrsh	r1, [r4, r5]
	mov	r2, #0x0
	bl	sub_8069708
	ldrh	r0, [r4, #0x4]
	strh	r0, [r4, #0x8]
	ldrh	r0, [r4, #0x6]
	strh	r0, [r4, #0xa]
	mov	r0, #0x2
	strh	r0, [r4, #0x2]
	mov	r0, #0x8
	strh	r0, [r4, #0xc]
	b	.L105
.L104:
	mov	r7, #0x1
	neg	r7, r7
	add	r0, r7, #0
	strh	r0, [r4, #0x8]
	strh	r0, [r4, #0xa]
.L105:
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	add	r5, r6, #0
	mov	r2, #0x0
	ldrsh	r1, [r5, r2]
	mov	r3, #0x4
	ldrsh	r2, [r4, r3]
	mov	r7, #0x6
	ldrsh	r3, [r4, r7]
	bl	sub_80697C8
	cmp	r0, #0
	beq	.L106	@cond_branch
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x0
	ldrsh	r1, [r5, r2]
	mov	r2, #0x1
	bl	sub_80696C0
	mov	r0, #0x2
	strh	r0, [r4, #0x2]
	mov	r0, #0x8
	strh	r0, [r4, #0xc]
.L106:
	mov	r0, sp
	ldrh	r0, [r0]
	strh	r0, [r4, #0x4]
	ldrh	r0, [r6]
	strh	r0, [r4, #0x6]
	mov	r0, sp
	mov	r3, #0x0
	ldrsh	r0, [r0, r3]
	mov	r5, #0x0
	ldrsh	r1, [r6, r5]
	bl	MapGridGetMetatileBehaviorAt
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	MetatileBehavior_IsPacifidlogLog
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L99	@cond_branch
	mov	r0, #0x46
	bl	PlaySE
	b	.L99
.L108:
	ldrh	r0, [r4, #0xc]
	sub	r0, r0, #0x1
	strh	r0, [r4, #0xc]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L99	@cond_branch
	mov	r0, sp
	mov	r7, #0x0
	ldrsh	r0, [r0, r7]
	mov	r2, #0x0
	ldrsh	r1, [r5, r2]
	mov	r2, #0x1
	bl	sub_80696E4
	mov	r3, #0x8
	ldrsh	r0, [r4, r3]
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L110	@cond_branch
	mov	r5, #0xa
	ldrsh	r0, [r4, r5]
	cmp	r0, r1
	beq	.L110	@cond_branch
	mov	r7, #0x8
	ldrsh	r0, [r4, r7]
	mov	r2, #0xa
	ldrsh	r1, [r4, r2]
	mov	r2, #0x1
	bl	sub_8069708
.L110:
	mov	r0, #0x1
	strh	r0, [r4, #0x2]
.L99:
	add	sp, sp, #0x4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe15:
	.size	 PerStepCallback_8069864,.Lfe15-PerStepCallback_8069864
	.align	2, 0
	.globl	sub_80699D8
	.type	 sub_80699D8,function
	.thumb_func
sub_80699D8:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	lsl	r1, r1, #0x10
	lsr	r5, r1, #0x10
	bl	PlayerGetZCoord
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L117	@cond_branch
	lsl	r0, r4, #0x10
	asr	r4, r0, #0x10
	lsl	r0, r5, #0x10
	asr	r5, r0, #0x10
	add	r0, r4, #0
	add	r1, r5, #0
	bl	MapGridGetMetatileIdAt
	add	r1, r0, #0
	ldr	r0, .L123
	cmp	r1, r0
	beq	.L119	@cond_branch
	add	r0, r0, #0x8
	cmp	r1, r0
	beq	.L120	@cond_branch
	b	.L117
.L124:
	.align	2, 0
.L123:
	.word	0x24e
.L119:
	ldr	r2, .L125
	add	r0, r4, #0
	add	r1, r5, #0
	bl	MapGridSetMetatileIdAt
	b	.L117
.L126:
	.align	2, 0
.L125:
	.word	0x24f
.L120:
	ldr	r2, .L127
	add	r0, r4, #0
	add	r1, r5, #0
	bl	MapGridSetMetatileIdAt
.L117:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L128:
	.align	2, 0
.L127:
	.word	0x257
.Lfe16:
	.size	 sub_80699D8,.Lfe16-sub_80699D8
	.align	2, 0
	.globl	sub_8069A3C
	.type	 sub_8069A3C,function
	.thumb_func
sub_8069A3C:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	lsl	r1, r1, #0x10
	lsr	r5, r1, #0x10
	bl	PlayerGetZCoord
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L130	@cond_branch
	lsl	r0, r4, #0x10
	asr	r4, r0, #0x10
	lsl	r0, r5, #0x10
	asr	r5, r0, #0x10
	add	r0, r4, #0
	add	r1, r5, #0
	bl	MapGridGetMetatileIdAt
	add	r1, r0, #0
	ldr	r0, .L136
	cmp	r1, r0
	beq	.L132	@cond_branch
	add	r0, r0, #0x8
	cmp	r1, r0
	beq	.L133	@cond_branch
	b	.L130
.L137:
	.align	2, 0
.L136:
	.word	0x24f
.L132:
	ldr	r2, .L138
	add	r0, r4, #0
	add	r1, r5, #0
	bl	MapGridSetMetatileIdAt
	b	.L130
.L139:
	.align	2, 0
.L138:
	.word	0x24e
.L133:
	ldr	r2, .L140
	add	r0, r4, #0
	add	r1, r5, #0
	bl	MapGridSetMetatileIdAt
.L130:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L141:
	.align	2, 0
.L140:
	.word	0x256
.Lfe17:
	.size	 sub_8069A3C,.Lfe17-sub_8069A3C
	.align	2, 0
	.globl	PerStepCallback_8069AA0
	.type	 PerStepCallback_8069AA0,function
	.thumb_func
PerStepCallback_8069AA0:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #0xfffffff8
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L170
	add	r6, r1, r0
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	PlayerGetDestCoords
	mov	r0, #0x2
	ldrsh	r5, [r6, r0]
	mov	r9, r4
	cmp	r5, #0x1
	beq	.L147	@cond_branch
	cmp	r5, #0x1
	bgt	.L168	@cond_branch
	cmp	r5, #0
	beq	.L145	@cond_branch
	b	.L143
.L171:
	.align	2, 0
.L170:
	.word	gTasks+0x8
.L168:
	cmp	r5, #0x2
	bne	.LCB1130
	b	.L154	@long jump
.LCB1130:
	b	.L143
.L145:
	mov	r0, sp
	ldrh	r0, [r0]
	strh	r0, [r6, #0x4]
	mov	r1, r9
	ldrh	r0, [r1]
	strh	r0, [r6, #0x6]
	mov	r0, sp
	mov	r2, #0x0
	ldrsh	r0, [r0, r2]
	mov	r3, #0x0
	ldrsh	r1, [r1, r3]
	bl	MapGridGetMetatileBehaviorAt
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	MetatileBehavior_IsFortreeBridge
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB1157
	b	.L169	@long jump
.LCB1157:
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, r9
	mov	r3, #0x0
	ldrsh	r1, [r2, r3]
	bl	sub_80699D8
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, r9
	mov	r3, #0x0
	ldrsh	r1, [r2, r3]
	bl	CurrentMapDrawMetatileAt
	b	.L169
.L147:
	ldrh	r0, [r6, #0x6]
	mov	r8, r0
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	ldrh	r2, [r6, #0x4]
	mov	sl, r2
	mov	r3, #0x4
	ldrsh	r7, [r6, r3]
	cmp	r0, r7
	bne	.L148	@cond_branch
	mov	r0, r9
	mov	r2, #0x0
	ldrsh	r1, [r0, r2]
	mov	r3, r8
	lsl	r0, r3, #0x10
	asr	r0, r0, #0x10
	cmp	r1, r0
	bne	.LCB1197
	b	.L143	@long jump
.LCB1197:
.L148:
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, r9
	mov	r3, #0x0
	ldrsh	r1, [r2, r3]
	bl	MapGridGetMetatileBehaviorAt
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	MetatileBehavior_IsFortreeBridge
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	str	r0, [sp, #0x4]
	mov	r0, r8
	lsl	r4, r0, #0x10
	asr	r1, r4, #0x10
	add	r0, r7, #0
	bl	MapGridGetMetatileBehaviorAt
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	MetatileBehavior_IsFortreeBridge
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	bl	PlayerGetZCoord
	mov	r1, #0x0
	and	r5, r5, r0
	lsl	r0, r5, #0x18
	add	r5, r4, #0
	cmp	r0, #0
	bne	.L149	@cond_branch
	mov	r1, #0x1
.L149:
	cmp	r1, #0
	beq	.L150	@cond_branch
	ldr	r1, [sp, #0x4]
	cmp	r1, #0x1
	beq	.L151	@cond_branch
	cmp	r7, #0x1
	bne	.L150	@cond_branch
.L151:
	mov	r0, #0x47
	bl	PlaySE
.L150:
	cmp	r7, #0
	beq	.L152	@cond_branch
	mov	r2, sl
	lsl	r4, r2, #0x10
	asr	r4, r4, #0x10
	asr	r5, r5, #0x10
	add	r0, r4, #0
	add	r1, r5, #0
	bl	sub_8069A3C
	add	r0, r4, #0
	add	r1, r5, #0
	bl	CurrentMapDrawMetatileAt
	mov	r0, sp
	mov	r3, #0x0
	ldrsh	r0, [r0, r3]
	mov	r2, r9
	mov	r3, #0x0
	ldrsh	r1, [r2, r3]
	bl	sub_80699D8
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, r9
	mov	r3, #0x0
	ldrsh	r1, [r2, r3]
	bl	CurrentMapDrawMetatileAt
.L152:
	mov	r0, sl
	strh	r0, [r6, #0x8]
	mov	r1, r8
	strh	r1, [r6, #0xa]
	mov	r0, sp
	ldrh	r0, [r0]
	strh	r0, [r6, #0x4]
	mov	r2, r9
	ldrh	r0, [r2]
	strh	r0, [r6, #0x6]
	cmp	r7, #0
	beq	.L143	@cond_branch
	mov	r0, #0x10
	strh	r0, [r6, #0xc]
	mov	r0, #0x2
	strh	r0, [r6, #0x2]
.L154:
	ldrh	r0, [r6, #0xc]
	sub	r0, r0, #0x1
	strh	r0, [r6, #0xc]
	ldrh	r3, [r6, #0x8]
	mov	sl, r3
	ldrh	r0, [r6, #0xa]
	mov	r8, r0
	mov	r1, #0xc
	ldrsh	r0, [r6, r1]
	mov	r1, #0x7
	bl	__modsi3
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x7
	bhi	.L155	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L172
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L173:
	.align	2, 0
.L172:
	.word	.L164
	.align	2, 0
	.align	2, 0
.L164:
	.word	.L156
	.word	.L155
	.word	.L155
	.word	.L155
	.word	.L160
	.word	.L155
	.word	.L155
	.word	.L155
.L156:
	mov	r2, sl
	lsl	r0, r2, #0x10
	asr	r0, r0, #0x10
	mov	r3, r8
	lsl	r1, r3, #0x10
	asr	r1, r1, #0x10
	bl	CurrentMapDrawMetatileAt
	b	.L155
.L160:
	mov	r0, sl
	lsl	r5, r0, #0x10
	asr	r5, r5, #0x10
	mov	r1, r8
	lsl	r4, r1, #0x10
	asr	r4, r4, #0x10
	add	r0, r5, #0
	add	r1, r4, #0
	bl	sub_80699D8
	add	r0, r5, #0
	add	r1, r4, #0
	bl	CurrentMapDrawMetatileAt
	add	r0, r5, #0
	add	r1, r4, #0
	bl	sub_8069A3C
.L155:
	mov	r2, #0xc
	ldrsh	r0, [r6, r2]
	cmp	r0, #0
	bne	.L143	@cond_branch
.L169:
	mov	r0, #0x1
	strh	r0, [r6, #0x2]
.L143:
	add	sp, sp, #0x8
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe18:
	.size	 PerStepCallback_8069AA0,.Lfe18-PerStepCallback_8069AA0
	.globl	gUnknown_083763E4
	.section .rodata
	.align	1, 0
	.type	 gUnknown_083763E4,object
gUnknown_083763E4:
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x4001
	.short	0x4002
	.short	0x4003
	.short	0x4004
	.short	0x0
	.short	0x0
	.short	0x4005
	.short	0x4006
	.short	0x4007
	.short	0x0
	.short	0x0
	.short	0x4008
	.short	0x4009
	.short	0x400a
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.size	 gUnknown_083763E4,52
.text
	.align	2, 0
	.globl	sub_8069CB8
	.type	 sub_8069CB8,function
	.thumb_func
sub_8069CB8:
	push	{lr}
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	lsl	r0, r0, #0x10
	ldr	r2, .L177
	add	r0, r0, r2
	lsr	r0, r0, #0x10
	cmp	r0, #0xa
	bhi	.L175	@cond_branch
	lsl	r0, r1, #0x10
	asr	r1, r0, #0x10
	ldr	r2, .L177+0x4
	add	r0, r0, r2
	lsr	r0, r0, #0x10
	cmp	r0, #0xd
	bhi	.L175	@cond_branch
	ldr	r0, .L177+0x8
	lsl	r1, r1, #0x1
	add	r1, r1, r0
	ldrh	r0, [r1]
	cmp	r0, #0
	beq	.L175	@cond_branch
	mov	r0, #0x1
	b	.L176
.L178:
	.align	2, 0
.L177:
	.word	0xfffd0000
	.word	0xfffa0000
	.word	gUnknown_083763E4
.L175:
	mov	r0, #0x0
.L176:
	pop	{r1}
	bx	r1
.Lfe19:
	.size	 sub_8069CB8,.Lfe19-sub_8069CB8
	.align	2, 0
	.globl	sub_8069CFC
	.type	 sub_8069CFC,function
	.thumb_func
sub_8069CFC:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x10
	asr	r5, r0, #0x10
	lsl	r1, r1, #0x10
	asr	r4, r1, #0x10
	add	r0, r5, #0
	add	r1, r4, #0
	bl	sub_8069CB8
	cmp	r0, #0
	beq	.L180	@cond_branch
	ldr	r1, .L181
	lsl	r0, r4, #0x1
	add	r0, r0, r1
	ldrh	r0, [r0]
	bl	GetVarPointer
	sub	r2, r5, #0x3
	mov	r1, #0x1
	lsl	r1, r1, r2
	ldrh	r2, [r0]
	orr	r1, r1, r2
	strh	r1, [r0]
.L180:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L182:
	.align	2, 0
.L181:
	.word	gUnknown_083763E4
.Lfe20:
	.size	 sub_8069CFC,.Lfe20-sub_8069CFC
	.align	2, 0
	.globl	sub_8069D34
	.type	 sub_8069D34,function
	.thumb_func
sub_8069D34:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x10
	asr	r5, r0, #0x10
	lsl	r1, r1, #0x10
	asr	r4, r1, #0x10
	add	r0, r5, #0
	add	r1, r4, #0
	bl	sub_8069CB8
	cmp	r0, #0
	beq	.L187	@cond_branch
	ldr	r1, .L188
	lsl	r0, r4, #0x1
	add	r0, r0, r1
	ldrh	r0, [r0]
	bl	VarGet
	lsl	r0, r0, #0x10
	sub	r2, r5, #0x3
	mov	r1, #0x80
	lsl	r1, r1, #0x9
	lsl	r1, r1, r2
	and	r1, r1, r0
	cmp	r1, #0
	bne	.L185	@cond_branch
.L187:
	mov	r0, #0x0
	b	.L186
.L189:
	.align	2, 0
.L188:
	.word	gUnknown_083763E4
.L185:
	mov	r0, #0x1
.L186:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe21:
	.size	 sub_8069D34,.Lfe21-sub_8069D34
	.align	2, 0
	.globl	sub_8069D78
	.type	 sub_8069D78,function
	.thumb_func
sub_8069D78:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	ldr	r0, .L202
	ldr	r0, [r0]
	ldr	r1, [r0]
	mov	r9, r1
	ldr	r7, [r0, #0x4]
	mov	r5, #0x0
	cmp	r5, r9
	bge	.L192	@cond_branch
.L194:
	mov	r4, #0x0
	add	r0, r5, #0x1
	mov	r8, r0
	cmp	r4, r7
	bge	.L193	@cond_branch
	lsl	r6, r5, #0x10
.L198:
	lsl	r1, r4, #0x10
	asr	r1, r1, #0x10
	asr	r0, r6, #0x10
	bl	sub_8069D34
	cmp	r0, #0x1
	bne	.L197	@cond_branch
	add	r1, r4, #0x7
	add	r0, r5, #0x7
	ldr	r2, .L202+0x4
	bl	MapGridSetMetatileIdAt
.L197:
	add	r4, r4, #0x1
	cmp	r4, r7
	blt	.L198	@cond_branch
.L193:
	mov	r5, r8
	cmp	r5, r9
	blt	.L194	@cond_branch
.L192:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L203:
	.align	2, 0
.L202:
	.word	gMapHeader
	.word	0x20e
.Lfe22:
	.size	 sub_8069D78,.Lfe22-sub_8069D78
	.align	2, 0
	.globl	PerStepCallback_8069DD4
	.type	 PerStepCallback_8069DD4,function
	.thumb_func
PerStepCallback_8069DD4:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #0xfffffffc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L225
	add	r5, r1, r0
	mov	r1, #0x2
	ldrsh	r0, [r5, r1]
	cmp	r0, #0x1
	beq	.L207	@cond_branch
	cmp	r0, #0x1
	bgt	.L221	@cond_branch
	cmp	r0, #0
	beq	.L206	@cond_branch
	b	.L205
.L226:
	.align	2, 0
.L225:
	.word	gTasks+0x8
.L221:
	cmp	r0, #0x2
	beq	.L213	@cond_branch
	cmp	r0, #0x3
	bne	.LCB1654
	b	.L216	@long jump
.LCB1654:
	b	.L205
.L206:
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	PlayerGetDestCoords
	mov	r0, sp
	ldrh	r0, [r0]
	strh	r0, [r5, #0x4]
	ldrh	r0, [r4]
	strh	r0, [r5, #0x6]
	b	.L222
.L207:
	mov	r7, sp
	add	r7, r7, #0x2
	mov	r0, sp
	add	r1, r7, #0
	bl	PlayerGetDestCoords
	mov	r0, sp
	ldrh	r2, [r0]
	mov	r3, #0x0
	ldrsh	r1, [r0, r3]
	mov	r3, #0x4
	ldrsh	r0, [r5, r3]
	cmp	r1, r0
	bne	.L209	@cond_branch
	mov	r0, #0x0
	ldrsh	r1, [r7, r0]
	mov	r3, #0x6
	ldrsh	r0, [r5, r3]
	cmp	r1, r0
	bne	.LCB1694
	b	.L205	@long jump
.LCB1694:
.L209:
	strh	r2, [r5, #0x4]
	ldrh	r0, [r7]
	strh	r0, [r5, #0x6]
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x0
	ldrsh	r1, [r7, r2]
	bl	MapGridGetMetatileBehaviorAt
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	ldr	r0, .L227
	bl	GetVarPointer
	add	r6, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r4, #0
	bl	MetatileBehavior_IsThinIce
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L210	@cond_branch
	ldrh	r0, [r6]
	add	r0, r0, #0x1
	strh	r0, [r6]
	mov	r0, #0x4
	strh	r0, [r5, #0xc]
	mov	r0, #0x2
	b	.L223
.L228:
	.align	2, 0
.L227:
	.word	0x4022
.L210:
	add	r0, r4, #0
	bl	MetatileBehavior_IsCrackedIce
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L205	@cond_branch
	mov	r0, #0x0
	strh	r0, [r6]
	mov	r0, #0x4
	strh	r0, [r5, #0xc]
	mov	r0, #0x3
.L223:
	strh	r0, [r5, #0x2]
	mov	r0, sp
	ldrh	r0, [r0]
	strh	r0, [r5, #0x8]
	ldrh	r0, [r7]
	strh	r0, [r5, #0xa]
	b	.L205
.L213:
	ldrh	r1, [r5, #0xc]
	mov	r3, #0xc
	ldrsh	r0, [r5, r3]
	cmp	r0, #0
	bne	.L224	@cond_branch
	mov	r1, sp
	ldrh	r0, [r5, #0x8]
	strh	r0, [r1]
	mov	r4, sp
	add	r4, r4, #0x2
	ldrh	r0, [r5, #0xa]
	strh	r0, [r4]
	mov	r0, #0x2a
	bl	PlaySE
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	ldr	r2, .L229
	bl	MapGridSetMetatileIdAt
	mov	r0, sp
	mov	r3, #0x0
	ldrsh	r0, [r0, r3]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	bl	CurrentMapDrawMetatileAt
	mov	r0, sp
	ldrh	r0, [r0]
	sub	r0, r0, #0x7
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	ldrh	r1, [r4]
	sub	r1, r1, #0x7
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	bl	sub_8069CFC
	b	.L222
.L230:
	.align	2, 0
.L229:
	.word	0x20e
.L216:
	ldrh	r1, [r5, #0xc]
	mov	r3, #0xc
	ldrsh	r0, [r5, r3]
	cmp	r0, #0
	beq	.L217	@cond_branch
.L224:
	sub	r0, r1, #0x1
	strh	r0, [r5, #0xc]
	b	.L205
.L217:
	mov	r1, sp
	ldrh	r0, [r5, #0x8]
	strh	r0, [r1]
	mov	r4, sp
	add	r4, r4, #0x2
	ldrh	r0, [r5, #0xa]
	strh	r0, [r4]
	mov	r0, #0x29
	bl	PlaySE
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	ldr	r2, .L231
	bl	MapGridSetMetatileIdAt
	mov	r0, sp
	mov	r3, #0x0
	ldrsh	r0, [r0, r3]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	bl	CurrentMapDrawMetatileAt
.L222:
	mov	r0, #0x1
	strh	r0, [r5, #0x2]
.L205:
	add	sp, sp, #0x4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L232:
	.align	2, 0
.L231:
	.word	0x206
.Lfe23:
	.size	 PerStepCallback_8069DD4,.Lfe23-PerStepCallback_8069DD4
	.align	2, 0
	.globl	PerStepCallback_8069F64
	.type	 PerStepCallback_8069F64,function
	.thumb_func
PerStepCallback_8069F64:
	push	{r4, r5, lr}
	add	sp, sp, #0xfffffffc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L241
	add	r5, r1, r0
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	PlayerGetDestCoords
	mov	r0, sp
	ldrh	r2, [r0]
	mov	r3, #0x0
	ldrsh	r1, [r0, r3]
	mov	r3, #0x2
	ldrsh	r0, [r5, r3]
	cmp	r1, r0
	bne	.L235	@cond_branch
	mov	r0, #0x0
	ldrsh	r1, [r4, r0]
	mov	r3, #0x4
	ldrsh	r0, [r5, r3]
	cmp	r1, r0
	beq	.L234	@cond_branch
.L235:
	strh	r2, [r5, #0x2]
	ldrh	r0, [r4]
	strh	r0, [r5, #0x4]
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	bl	MapGridGetMetatileBehaviorAt
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	MetatileBehavior_IsAshGrass
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L234	@cond_branch
	mov	r0, sp
	mov	r3, #0x0
	ldrsh	r0, [r0, r3]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	bl	MapGridGetMetatileIdAt
	ldr	r1, .L241+0x4
	cmp	r0, r1
	bne	.L237	@cond_branch
	mov	r0, sp
	mov	r3, #0x0
	ldrsh	r0, [r0, r3]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	ldr	r2, .L241+0x8
	mov	r3, #0x4
	bl	ash
	b	.L238
.L242:
	.align	2, 0
.L241:
	.word	gTasks+0x8
	.word	0x20a
	.word	0x212
.L237:
	mov	r0, sp
	mov	r3, #0x0
	ldrsh	r0, [r0, r3]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	ldr	r2, .L243
	mov	r3, #0x4
	bl	ash
.L238:
	mov	r0, #0x87
	lsl	r0, r0, #0x1
	mov	r1, #0x1
	bl	CheckBagHasItem
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L234	@cond_branch
	ldr	r0, .L243+0x4
	bl	GetVarPointer
	add	r2, r0, #0
	ldrh	r1, [r2]
	ldr	r0, .L243+0x8
	cmp	r1, r0
	bhi	.L234	@cond_branch
	add	r0, r1, #0x1
	strh	r0, [r2]
.L234:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L244:
	.align	2, 0
.L243:
	.word	0x206
	.word	0x4048
	.word	0x270e
.Lfe24:
	.size	 PerStepCallback_8069F64,.Lfe24-PerStepCallback_8069F64
	.align	2, 0
	.globl	sub_806A040
	.type	 sub_806A040,function
	.thumb_func
sub_806A040:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x10
	asr	r5, r0, #0x10
	lsl	r1, r1, #0x10
	asr	r4, r1, #0x10
	add	r0, r5, #0
	add	r1, r4, #0
	bl	MapGridGetMetatileIdAt
	ldr	r1, .L248
	ldr	r2, .L248+0x4
	cmp	r0, r1
	bne	.L246	@cond_branch
	sub	r2, r2, #0x31
.L246:
	add	r0, r5, #0
	add	r1, r4, #0
	bl	MapGridSetMetatileIdAt
	add	r0, r5, #0
	add	r1, r4, #0
	bl	CurrentMapDrawMetatileAt
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L249:
	.align	2, 0
.L248:
	.word	0x22f
	.word	0x237
.Lfe25:
	.size	 sub_806A040,.Lfe25-sub_806A040
	.align	2, 0
	.globl	PerStepCallback_806A07C
	.type	 PerStepCallback_806A07C,function
	.thumb_func
PerStepCallback_806A07C:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #0xfffffffc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L261
	add	r5, r1, r0
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	PlayerGetDestCoords
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	bl	MapGridGetMetatileBehaviorAt
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	ldrh	r1, [r5, #0x8]
	mov	r3, #0x8
	ldrsh	r0, [r5, r3]
	add	r7, r4, #0
	cmp	r0, #0
	beq	.L251	@cond_branch
	sub	r0, r1, #0x1
	strh	r0, [r5, #0x8]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L251	@cond_branch
	mov	r1, #0xa
	ldrsh	r0, [r5, r1]
	mov	r2, #0xc
	ldrsh	r1, [r5, r2]
	bl	sub_806A040
.L251:
	ldrh	r1, [r5, #0xe]
	mov	r3, #0xe
	ldrsh	r0, [r5, r3]
	cmp	r0, #0
	beq	.L252	@cond_branch
	sub	r0, r1, #0x1
	strh	r0, [r5, #0xe]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L252	@cond_branch
	mov	r1, #0x10
	ldrsh	r0, [r5, r1]
	mov	r2, #0x12
	ldrsh	r1, [r5, r2]
	bl	sub_806A040
.L252:
	lsl	r0, r6, #0x18
	lsr	r6, r0, #0x18
	add	r0, r6, #0
	bl	MetatileBehavior_IsCrackedFloorHole
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L253	@cond_branch
	ldr	r0, .L261+0x4
	mov	r1, #0x0
	bl	VarSet
.L253:
	mov	r0, sp
	ldrh	r2, [r0]
	mov	r3, #0x0
	ldrsh	r1, [r0, r3]
	mov	r3, #0x4
	ldrsh	r0, [r5, r3]
	cmp	r1, r0
	bne	.L255	@cond_branch
	mov	r0, #0x0
	ldrsh	r1, [r7, r0]
	mov	r3, #0x6
	ldrsh	r0, [r5, r3]
	cmp	r1, r0
	beq	.L254	@cond_branch
.L255:
	strh	r2, [r5, #0x4]
	add	r4, r7, #0
	ldrh	r0, [r4]
	strh	r0, [r5, #0x6]
	add	r0, r6, #0
	bl	MetatileBehavior_IsCrackedFloor
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L254	@cond_branch
	bl	GetPlayerSpeed
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x4
	beq	.L257	@cond_branch
	ldr	r0, .L261+0x4
	mov	r1, #0x0
	bl	VarSet
.L257:
	mov	r1, #0x8
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	bne	.L258	@cond_branch
	mov	r0, #0x3
	strh	r0, [r5, #0x8]
	mov	r0, sp
	ldrh	r0, [r0]
	strh	r0, [r5, #0xa]
	ldrh	r0, [r4]
	strh	r0, [r5, #0xc]
	b	.L254
.L262:
	.align	2, 0
.L261:
	.word	gTasks+0x8
	.word	0x4022
.L258:
	mov	r2, #0xe
	ldrsh	r0, [r5, r2]
	cmp	r0, #0
	bne	.L254	@cond_branch
	mov	r0, #0x3
	strh	r0, [r5, #0xe]
	mov	r0, sp
	ldrh	r0, [r0]
	strh	r0, [r5, #0x10]
	ldrh	r0, [r7]
	strh	r0, [r5, #0x12]
.L254:
	add	sp, sp, #0x4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe26:
	.size	 PerStepCallback_806A07C,.Lfe26-PerStepCallback_806A07C
	.globl	gUnknown_08376418
	.section .rodata
	.align	1, 0
	.type	 gUnknown_08376418,object
gUnknown_08376418:
	.short	0xe8
	.short	0xeb
	.short	0xea
	.short	0xe9
	.size	 gUnknown_08376418,8
.text
	.align	2, 0
	.globl	sub_806A18C
	.type	 sub_806A18C,function
	.thumb_func
sub_806A18C:
	push	{r4, r5, lr}
	add	r3, r0, #0
	lsl	r1, r1, #0x10
	lsr	r5, r1, #0x10
	lsl	r2, r2, #0x10
	lsr	r4, r2, #0x10
	ldrh	r0, [r3]
	sub	r0, r0, #0x1
	strh	r0, [r3]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L264	@cond_branch
	mov	r2, #0xe8
	b	.L265
.L264:
	ldr	r1, .L267
	mov	r2, #0x0
	ldrsh	r0, [r3, r2]
	cmp	r0, #0
	bge	.L266	@cond_branch
	add	r0, r0, #0x7
.L266:
	asr	r0, r0, #0x3
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrh	r2, [r0]
.L265:
	lsl	r5, r5, #0x10
	asr	r5, r5, #0x10
	lsl	r4, r4, #0x10
	asr	r4, r4, #0x10
	add	r0, r5, #0
	add	r1, r4, #0
	bl	MapGridSetMetatileIdAt
	add	r0, r5, #0
	add	r1, r4, #0
	bl	CurrentMapDrawMetatileAt
	add	r0, r5, #0
	add	r1, r4, #0
	mov	r2, #0xe8
	bl	MapGridSetMetatileIdAt
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L268:
	.align	2, 0
.L267:
	.word	gUnknown_08376418
.Lfe27:
	.size	 sub_806A18C,.Lfe27-sub_806A18C
	.align	2, 0
	.globl	Task_MuddySlope
	.type	 Task_MuddySlope,function
	.thumb_func
Task_MuddySlope:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #0xfffffffc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L293
	add	r4, r1, r0
	mov	r5, sp
	add	r5, r5, #0x2
	mov	r0, sp
	add	r1, r5, #0
	bl	PlayerGetDestCoords
	ldr	r0, .L293+0x4
	mov	r1, #0x4
	ldrsb	r1, [r0, r1]
	lsl	r1, r1, #0x8
	ldrb	r0, [r0, #0x5]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	orr	r0, r0, r1
	lsl	r0, r0, #0x10
	lsr	r7, r0, #0x10
	mov	r0, #0x2
	ldrsh	r1, [r4, r0]
	mov	r8, r5
	cmp	r1, #0
	beq	.L271	@cond_branch
	cmp	r1, #0x1
	beq	.L272	@cond_branch
	b	.L270
.L294:
	.align	2, 0
.L293:
	.word	gTasks+0x8
	.word	gSaveBlock1
.L271:
	strh	r7, [r4]
	mov	r0, sp
	ldrh	r0, [r0]
	strh	r0, [r4, #0x4]
	ldrh	r0, [r5]
	strh	r0, [r4, #0x6]
	mov	r0, #0x1
	strh	r0, [r4, #0x2]
	strh	r1, [r4, #0x8]
	strh	r1, [r4, #0xe]
	strh	r1, [r4, #0x14]
	strh	r1, [r4, #0x1a]
	b	.L270
.L292:
	mov	r0, #0x20
	strh	r0, [r1]
	mov	r0, sp
	ldrh	r0, [r0]
	strh	r0, [r1, #0x2]
	mov	r2, r8
	ldrh	r0, [r2]
	strh	r0, [r1, #0x4]
	b	.L270
.L272:
	mov	r0, sp
	mov	r3, #0x4
	ldrsh	r1, [r4, r3]
	ldrh	r2, [r0]
	mov	r3, #0x0
	ldrsh	r0, [r0, r3]
	cmp	r1, r0
	bne	.L274	@cond_branch
	mov	r0, #0x6
	ldrsh	r1, [r4, r0]
	mov	r3, #0x0
	ldrsh	r0, [r5, r3]
	cmp	r1, r0
	beq	.L270	@cond_branch
.L274:
	strh	r2, [r4, #0x4]
	ldrh	r0, [r5]
	strh	r0, [r4, #0x6]
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x0
	ldrsh	r1, [r5, r2]
	bl	MapGridGetMetatileBehaviorAt
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	MetatileBehavior_IsMuddySlope
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L270	@cond_branch
	mov	r6, #0x4
	add	r1, r4, #0
	add	r1, r1, #0x8
.L279:
	mov	r3, #0x0
	ldrsh	r0, [r1, r3]
	cmp	r0, #0
	beq	.L292	@cond_branch
	add	r1, r1, #0x6
	add	r6, r6, #0x3
	cmp	r6, #0xd
	ble	.L279	@cond_branch
.L270:
	ldr	r2, .L295
	ldrb	r1, [r2]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L284	@cond_branch
	mov	r1, #0x0
	ldrsh	r0, [r4, r1]
	cmp	r7, r0
	beq	.L284	@cond_branch
	strh	r7, [r4]
	ldrh	r0, [r2, #0x4]
	ldrh	r1, [r2, #0x8]
	b	.L285
.L296:
	.align	2, 0
.L295:
	.word	gCamera
.L284:
	mov	r0, #0x0
	mov	r1, #0x0
.L285:
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	mov	r8, r0
	lsl	r0, r1, #0x10
	asr	r7, r0, #0x10
	add	r5, r4, #0
	add	r5, r5, #0x8
	add	r4, r5, #0
	mov	r6, #0x9
.L289:
	mov	r2, #0x0
	ldrsh	r0, [r4, r2]
	cmp	r0, #0
	beq	.L288	@cond_branch
	ldrh	r0, [r4, #0x2]
	mov	r3, r8
	sub	r0, r0, r3
	strh	r0, [r4, #0x2]
	ldrh	r0, [r4, #0x4]
	sub	r0, r0, r7
	strh	r0, [r4, #0x4]
	mov	r0, #0x2
	ldrsh	r1, [r4, r0]
	mov	r3, #0x4
	ldrsh	r2, [r4, r3]
	add	r0, r5, #0
	bl	sub_806A18C
.L288:
	add	r4, r4, #0x6
	add	r5, r5, #0x6
	sub	r6, r6, #0x3
	cmp	r6, #0
	bge	.L289	@cond_branch
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe28:
	.size	 Task_MuddySlope,.Lfe28-Task_MuddySlope
.text
	.align	2, 0
