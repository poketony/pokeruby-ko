@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section .rodata
	.align	2, 0
	.type	 sHealLocations,object
sHealLocations:
	.byte	0x1
	.byte	0x1
	.short	0x4
	.short	0x2
	.space	2
	.byte	0x1
	.byte	0x3
	.short	0x4
	.short	0x2
	.space	2
	.byte	0x0
	.byte	0x0
	.short	0x14
	.short	0x11
	.space	2
	.byte	0x0
	.byte	0x1
	.short	0x13
	.short	0x14
	.space	2
	.byte	0x0
	.byte	0x2
	.short	0x16
	.short	0x6
	.space	2
	.byte	0x0
	.byte	0x3
	.short	0x10
	.short	0x27
	.space	2
	.byte	0x0
	.byte	0x4
	.short	0x5
	.short	0x7
	.space	2
	.byte	0x0
	.byte	0x5
	.short	0x18
	.short	0xf
	.space	2
	.byte	0x0
	.byte	0x6
	.short	0x1c
	.short	0x11
	.space	2
	.byte	0x0
	.byte	0x7
	.short	0x2b
	.short	0x20
	.space	2
	.byte	0x0
	.byte	0x8
	.short	0x1b
	.short	0x31
	.space	2
	.byte	0x0
	.byte	0x9
	.short	0x5
	.short	0x9
	.space	2
	.byte	0x0
	.byte	0x9
	.short	0xe
	.short	0x9
	.space	2
	.byte	0x0
	.byte	0xa
	.short	0x6
	.short	0x11
	.space	2
	.byte	0x0
	.byte	0xb
	.short	0x2
	.short	0xb
	.space	2
	.byte	0x0
	.byte	0xc
	.short	0x9
	.short	0x7
	.space	2
	.byte	0x0
	.byte	0xd
	.short	0xe
	.short	0x8
	.space	2
	.byte	0x0
	.byte	0xe
	.short	0x10
	.short	0x4
	.space	2
	.byte	0x0
	.byte	0xf
	.short	0x8
	.short	0x10
	.space	2
	.byte	0x0
	.byte	0x8
	.short	0x12
	.short	0x6
	.space	2
	.byte	0x1a
	.byte	0x4
	.short	0xe
	.short	0x9
	.space	2
	.byte	0x1a
	.byte	0x9
	.short	0xf
	.short	0x14
	.space	2
	.size	 sHealLocations,176
.text
	.align	2, 0
	.globl	GetHealLocationIndexByMap
	.type	 GetHealLocationIndexByMap,function
	.thumb_func
GetHealLocationIndexByMap:
	push	{r4, lr}
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r3, #0x0
	ldr	r2, .L10
.L6:
	mov	r0, #0x0
	ldrsb	r0, [r2, r0]
	cmp	r0, r4
	bne	.L5	@cond_branch
	mov	r0, #0x1
	ldrsb	r0, [r2, r0]
	cmp	r0, r1
	bne	.L5	@cond_branch
	add	r0, r3, #0x1
	b	.L9
.L11:
	.align	2, 0
.L10:
	.word	sHealLocations
.L5:
	add	r2, r2, #0x8
	add	r3, r3, #0x1
	cmp	r3, #0x15
	bls	.L6	@cond_branch
	mov	r0, #0x0
.L9:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe1:
	.size	 GetHealLocationIndexByMap,.Lfe1-GetHealLocationIndexByMap
	.align	2, 0
	.globl	GetHealLocationByMap
	.type	 GetHealLocationByMap,function
	.thumb_func
GetHealLocationByMap:
	push	{lr}
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	bl	GetHealLocationIndexByMap
	cmp	r0, #0
	beq	.L13	@cond_branch
	lsl	r0, r0, #0x3
	ldr	r1, .L16
	add	r0, r0, r1
	b	.L15
.L17:
	.align	2, 0
.L16:
	.word	sHealLocations+0xfffffff8
.L13:
	mov	r0, #0x0
.L15:
	pop	{r1}
	bx	r1
.Lfe2:
	.size	 GetHealLocationByMap,.Lfe2-GetHealLocationByMap
	.align	2, 0
	.globl	GetHealLocation
	.type	 GetHealLocation,function
	.thumb_func
GetHealLocation:
	push	{lr}
	cmp	r0, #0
	beq	.L21	@cond_branch
	cmp	r0, #0x16
	bhi	.L21	@cond_branch
	lsl	r0, r0, #0x3
	ldr	r1, .L24
	add	r0, r0, r1
	b	.L23
.L25:
	.align	2, 0
.L24:
	.word	sHealLocations+0xfffffff8
.L21:
	mov	r0, #0x0
.L23:
	pop	{r1}
	bx	r1
.Lfe3:
	.size	 GetHealLocation,.Lfe3-GetHealLocation
.text
	.align	2, 0
