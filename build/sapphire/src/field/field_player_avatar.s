@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.globl	gPlayerAvatar
	.section ewram_data,"aw"
	.align	2, 0
	.type	 gPlayerAvatar,object
	.size	 gPlayerAvatar,36
gPlayerAvatar:
	.byte	0x0
	.space	35
	.section .rodata
	.align	2, 0
	.type	 gUnknown_0830FB58,object
gUnknown_0830FB58:
	.word	MetatileBehavior_IsTrickHouseSlipperyFloor
	.word	MetatileBehavior_IsIce_2
	.word	MetatileBehavior_IsWalkSouth
	.word	MetatileBehavior_IsWalkNorth
	.word	MetatileBehavior_IsWalkWest
	.word	MetatileBehavior_IsWalkEast
	.word	MetatileBehavior_IsSouthwardCurrent
	.word	MetatileBehavior_IsNorthwardCurrent
	.word	MetatileBehavior_IsWestwardCurrent
	.word	MetatileBehavior_IsEastwardCurrent
	.word	MetatileBehavior_IsSlideSouth
	.word	MetatileBehavior_IsSlideNorth
	.word	MetatileBehavior_IsSlideWest
	.word	MetatileBehavior_IsSlideEast
	.word	MetatileBehavior_IsWaterfall
	.word	MetatileBehavior_0xBB
	.word	MetatileBehavior_0xBC
	.word	MetatileBehavior_IsMuddySlope
	.size	 gUnknown_0830FB58,72
	.align	2, 0
	.type	 gUnknown_0830FBA0,object
gUnknown_0830FBA0:
	.word	ForcedMovement_None
	.word	ForcedMovement_Slip
	.word	ForcedMovement_Slip
	.word	sub_8058AAC
	.word	sub_8058AC4
	.word	sub_8058ADC
	.word	sub_8058AF4
	.word	sub_8058B0C
	.word	sub_8058B24
	.word	sub_8058B3C
	.word	sub_8058B54
	.word	ForcedMovement_SlideSouth
	.word	ForcedMovement_SlideNorth
	.word	ForcedMovement_SlideWest
	.word	ForcedMovement_SlideEast
	.word	sub_8058B0C
	.word	ForcedMovement_MatJump
	.word	sub_8058C10
	.word	ForcedMovement_MuddySlope
	.size	 gUnknown_0830FBA0,76
	.align	2, 0
	.type	 gUnknown_0830FBEC,object
gUnknown_0830FBEC:
	.word	PlayerNotOnBikeNotMoving
	.word	PlayerNotOnBikeTurningInPlace
	.word	sub_8058D0C
	.size	 gUnknown_0830FBEC,12
	.align	2, 0
	.type	 gUnknown_0830FBF8,object
gUnknown_0830FBF8:
	.word	MetatileBehavior_IsBumpySlope
	.word	MetatileBehavior_IsIsolatedVerticalRail
	.word	MetatileBehavior_IsIsolatedHorizontalRail
	.word	MetatileBehavior_IsVerticalRail
	.word	MetatileBehavior_IsHorizontalRail
	.size	 gUnknown_0830FBF8,20
	.type	 gUnknown_0830FC0C,object
gUnknown_0830FC0C:
	.byte	0x9
	.byte	0xa
	.byte	0xb
	.byte	0xc
	.byte	0xd
	.size	 gUnknown_0830FC0C,5
	.align	2, 0
	.type	 gUnknown_0830FC14,object
gUnknown_0830FC14:
	.word	PlayerAvatarTransition_Normal
	.word	PlayerAvatarTransition_MachBike
	.word	PlayerAvatarTransition_AcroBike
	.word	PlayerAvatarTransition_Surfing
	.word	PlayerAvatarTransition_Underwater
	.word	sub_80591F4
	.word	nullsub_49
	.word	nullsub_49
	.size	 gUnknown_0830FC14,32
	.align	2, 0
	.type	 gUnknown_0830FC34,object
gUnknown_0830FC34:
	.word	MetatileBehavior_IsSouthArrowWarp
	.word	MetatileBehavior_IsNorthArrowWarp
	.word	MetatileBehavior_IsWestArrowWarp
	.word	MetatileBehavior_IsEastArrowWarp
	.size	 gUnknown_0830FC34,16
	.type	 sRivalAvatarGfxIds,object
sRivalAvatarGfxIds:
	.byte	0x64
	.byte	0x69
	.byte	0x65
	.byte	0x6a
	.byte	0x66
	.byte	0x6b
	.byte	0x67
	.byte	0x6c
	.byte	0x6f
	.byte	0x70
	.byte	0x68
	.byte	0x6d
	.byte	0x89
	.byte	0x8a
	.byte	0xbf
	.byte	0xc0
	.size	 sRivalAvatarGfxIds,16
	.type	 sPlayerAvatarGfxIds,object
sPlayerAvatarGfxIds:
	.byte	0x0
	.byte	0x59
	.byte	0x1
	.byte	0x5a
	.byte	0x3f
	.byte	0x5b
	.byte	0x2
	.byte	0x5c
	.byte	0x6f
	.byte	0x70
	.byte	0x3
	.byte	0x5d
	.byte	0x89
	.byte	0x8a
	.byte	0xbf
	.byte	0xc0
	.size	 sPlayerAvatarGfxIds,16
	.type	 gUnknown_0830FC64,object
	.size	 gUnknown_0830FC64,20
gUnknown_0830FC64:
	.byte	0x0
	.byte	0x1
	.byte	0x1
	.byte	0x2
	.byte	0x3f
	.byte	0x4
	.byte	0x2
	.byte	0x8
	.byte	0x6f
	.byte	0x10
	.byte	0x59
	.byte	0x1
	.byte	0x5a
	.byte	0x2
	.byte	0x5b
	.byte	0x4
	.byte	0x5c
	.byte	0x8
	.byte	0x70
	.byte	0x10
	.align	2, 0
	.type	 gUnknown_0830FC78,object
gUnknown_0830FC78:
	.word	MetatileBehavior_IsSouthArrowWarp
	.word	MetatileBehavior_IsNorthArrowWarp
	.word	MetatileBehavior_IsWestArrowWarp
	.word	MetatileBehavior_IsEastArrowWarp
	.size	 gUnknown_0830FC78,16
	.align	2, 0
	.type	 gUnknown_0830FC88,object
gUnknown_0830FC88:
	.word	sub_8059E84
	.word	sub_8059EA4
	.word	sub_8059F40
	.size	 gUnknown_0830FC88,12
	.align	2, 0
	.type	 sPlayerAvatarSecretBaseMatJump,object
sPlayerAvatarSecretBaseMatJump:
	.word	PlayerAvatar_DoSecretBaseMatJump
	.size	 sPlayerAvatarSecretBaseMatJump,4
	.align	2, 0
	.type	 gUnknown_0830FC98,object
gUnknown_0830FC98:
	.word	sub_805A0D8
	.word	sub_805A100
	.word	sub_805A178
	.word	sub_805A1B8
	.size	 gUnknown_0830FC98,16
.text
	.align	2, 0
	.globl	sub_80587B4
	.type	 sub_80587B4,function
	.thumb_func
sub_80587B4:
	push	{lr}
	add	r1, r0, #0
	mov	r0, #0x2e
	ldrsh	r2, [r1, r0]
	lsl	r0, r2, #0x3
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	ldr	r2, .L3
	add	r0, r0, r2
	ldr	r2, .L3+0x4
	bl	meta_step
	pop	{r0}
	bx	r0
.L4:
	.align	2, 0
.L3:
	.word	gMapObjects
	.word	sub_80587D8
.Lfe1:
	.size	 sub_80587B4,.Lfe1-sub_80587B4
	.align	2, 0
	.type	 sub_80587D8,function
	.thumb_func
sub_80587D8:
	mov	r0, #0x0
	bx	lr
.Lfe2:
	.size	 sub_80587D8,.Lfe2-sub_80587D8
	.align	2, 0
	.globl	player_step
	.type	 player_step,function
	.thumb_func
player_step:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	lsl	r1, r1, #0x10
	lsr	r7, r1, #0x10
	lsl	r2, r2, #0x10
	lsr	r6, r2, #0x10
	ldr	r4, .L10
	ldrb	r1, [r4, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L10+0x4
	add	r5, r0, r1
	add	r0, r5, #0
	bl	sub_8059D60
	ldrb	r0, [r4, #0x6]
	cmp	r0, #0
	bne	.L7	@cond_branch
	add	r0, r7, #0
	add	r1, r6, #0
	bl	Bike_TryAcroBikeHistoryUpdate
	add	r0, r5, #0
	mov	r1, r8
	bl	sub_8058854
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L7	@cond_branch
	add	r0, r5, #0
	bl	npc_clear_strange_bits
	bl	DoPlayerAvatarTransition
	bl	TryDoMetatileBehaviorForcedMovement
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L7	@cond_branch
	mov	r0, r8
	add	r1, r7, #0
	add	r2, r6, #0
	bl	MovePlayerAvatarUsingKeypadInput
	bl	PlayerAllowForcedMovementIfMovingSameDirection
.L7:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L11:
	.align	2, 0
.L10:
	.word	gPlayerAvatar
	.word	gMapObjects
.Lfe3:
	.size	 player_step,.Lfe3-player_step
	.align	2, 0
	.type	 sub_8058854,function
	.thumb_func
sub_8058854:
	push	{r4, r5, lr}
	add	r4, r0, #0
	lsl	r1, r1, #0x18
	lsr	r5, r1, #0x18
	bl	FieldObjectIsSpecialAnimOrDirectionSequenceAnimActive
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L13	@cond_branch
	add	r0, r4, #0
	bl	FieldObjectClearAnimIfSpecialAnimFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L13	@cond_branch
	add	r0, r4, #0
	bl	FieldObjectGetSpecialAnim
	lsl	r0, r0, #0x18
	mov	r1, #0xe7
	lsl	r1, r1, #0x18
	add	r0, r0, r1
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	bhi	.L14	@cond_branch
	cmp	r5, #0
	beq	.L14	@cond_branch
	ldrb	r0, [r4, #0x18]
	lsr	r0, r0, #0x4
	cmp	r0, r5
	beq	.L14	@cond_branch
	add	r0, r4, #0
	bl	FieldObjectClearAnim
	b	.L13
.L14:
	mov	r0, #0x1
	b	.L16
.L13:
	mov	r0, #0x0
.L16:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe4:
	.size	 sub_8058854,.Lfe4-sub_8058854
	.align	2, 0
	.type	 npc_clear_strange_bits,function
	.thumb_func
npc_clear_strange_bits:
	ldrb	r2, [r0, #0x1]
	mov	r1, #0x11
	neg	r1, r1
	and	r1, r1, r2
	mov	r2, #0x5
	neg	r2, r2
	and	r1, r1, r2
	add	r2, r2, #0x2
	and	r1, r1, r2
	strb	r1, [r0, #0x1]
	ldr	r2, .L18
	ldrb	r1, [r2]
	mov	r0, #0x7f
	and	r0, r0, r1
	strb	r0, [r2]
	bx	lr
.L19:
	.align	2, 0
.L18:
	.word	gPlayerAvatar
.Lfe5:
	.size	 npc_clear_strange_bits,.Lfe5-npc_clear_strange_bits
	.align	2, 0
	.type	 MovePlayerAvatarUsingKeypadInput,function
	.thumb_func
MovePlayerAvatarUsingKeypadInput:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	lsl	r1, r1, #0x10
	lsr	r4, r1, #0x10
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	ldr	r0, .L23
	ldrb	r1, [r0]
	mov	r0, #0x6
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L21	@cond_branch
	add	r0, r3, #0
	add	r1, r4, #0
	bl	MovePlayerOnBike
	b	.L22
.L24:
	.align	2, 0
.L23:
	.word	gPlayerAvatar
.L21:
	add	r0, r3, #0
	add	r1, r2, #0
	bl	MovePlayerNotOnBike
.L22:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe6:
	.size	 MovePlayerAvatarUsingKeypadInput,.Lfe6-MovePlayerAvatarUsingKeypadInput
	.align	2, 0
	.type	 PlayerAllowForcedMovementIfMovingSameDirection,function
	.thumb_func
PlayerAllowForcedMovementIfMovingSameDirection:
	push	{lr}
	ldr	r2, .L27
	ldrb	r0, [r2, #0x2]
	cmp	r0, #0x2
	bne	.L26	@cond_branch
	ldrb	r1, [r2]
	mov	r0, #0xdf
	and	r0, r0, r1
	strb	r0, [r2]
.L26:
	pop	{r0}
	bx	r0
.L28:
	.align	2, 0
.L27:
	.word	gPlayerAvatar
.Lfe7:
	.size	 PlayerAllowForcedMovementIfMovingSameDirection,.Lfe7-PlayerAllowForcedMovementIfMovingSameDirection
	.align	2, 0
	.type	 TryDoMetatileBehaviorForcedMovement,function
	.thumb_func
TryDoMetatileBehaviorForcedMovement:
	push	{r4, lr}
	ldr	r4, .L30
	bl	GetForcedMovementByMetatileBehavior
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x16
	add	r0, r0, r4
	ldr	r0, [r0]
	bl	_call_via_r0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r4}
	pop	{r1}
	bx	r1
.L31:
	.align	2, 0
.L30:
	.word	gUnknown_0830FBA0
.Lfe8:
	.size	 TryDoMetatileBehaviorForcedMovement,.Lfe8-TryDoMetatileBehaviorForcedMovement
	.align	2, 0
	.type	 GetForcedMovementByMetatileBehavior,function
	.thumb_func
GetForcedMovementByMetatileBehavior:
	push	{r4, r5, r6, lr}
	ldr	r3, .L41
	ldrb	r1, [r3]
	mov	r0, #0x20
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L33	@cond_branch
	ldr	r2, .L41+0x4
	ldrb	r1, [r3, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r5, [r0, #0x1e]
	mov	r4, #0x0
	ldr	r6, .L41+0x8
.L37:
	lsl	r0, r4, #0x2
	add	r0, r0, r6
	ldr	r1, [r0]
	add	r0, r5, #0
	bl	_call_via_r1
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L36	@cond_branch
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	b	.L40
.L42:
	.align	2, 0
.L41:
	.word	gPlayerAvatar
	.word	gMapObjects
	.word	gUnknown_0830FB58
.L36:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x11
	bls	.L37	@cond_branch
.L33:
	mov	r0, #0x0
.L40:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe9:
	.size	 GetForcedMovementByMetatileBehavior,.Lfe9-GetForcedMovementByMetatileBehavior
	.align	2, 0
	.globl	ForcedMovement_None
	.type	 ForcedMovement_None,function
	.thumb_func
ForcedMovement_None:
	push	{r4, lr}
	ldr	r4, .L45
	ldrb	r1, [r4]
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L44	@cond_branch
	ldrb	r1, [r4, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L45+0x4
	add	r0, r0, r1
	ldrb	r2, [r0, #0x1]
	mov	r1, #0x3
	neg	r1, r1
	and	r1, r1, r2
	mov	r2, #0x8
	orr	r1, r1, r2
	strb	r1, [r0, #0x1]
	ldrb	r1, [r0, #0x18]
	lsl	r1, r1, #0x1c
	lsr	r1, r1, #0x1c
	bl	FieldObjectSetDirection
	ldrb	r1, [r4]
	mov	r0, #0xbf
	and	r0, r0, r1
	strb	r0, [r4]
.L44:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L46:
	.align	2, 0
.L45:
	.word	gPlayerAvatar
	.word	gMapObjects
.Lfe10:
	.size	 ForcedMovement_None,.Lfe10-ForcedMovement_None
	.align	2, 0
	.type	 DoForcedMovement,function
	.thumb_func
DoForcedMovement:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	mov	r9, r1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r6, .L55
	add	r0, r5, #0
	bl	CheckForPlayerAvatarCollision
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r7, r4, #0
	ldrb	r0, [r6]
	mov	r1, #0x40
	mov	sl, r1
	mov	r1, #0x0
	mov	r8, r1
	mov	r1, sl
	orr	r0, r0, r1
	strb	r0, [r6]
	cmp	r4, #0
	beq	.L48	@cond_branch
	bl	ForcedMovement_None
	cmp	r4, #0x4
	bhi	.L49	@cond_branch
	mov	r0, #0x0
	b	.L53
.L56:
	.align	2, 0
.L55:
	.word	gPlayerAvatar
.L49:
	cmp	r7, #0x6
	bne	.L51	@cond_branch
	add	r0, r5, #0
	bl	PlayerJumpLedge
.L51:
	ldrb	r0, [r6]
	mov	r1, sl
	orr	r0, r0, r1
	strb	r0, [r6]
	mov	r0, #0x2
	strb	r0, [r6, #0x2]
	b	.L54
.L48:
	mov	r0, #0x2
	strb	r0, [r6, #0x2]
	add	r0, r5, #0
	bl	_call_via_r9
.L54:
	mov	r0, #0x1
.L53:
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe11:
	.size	 DoForcedMovement,.Lfe11-DoForcedMovement
	.align	2, 0
	.type	 DoForcedMovementInCurrentDirection,function
	.thumb_func
DoForcedMovementInCurrentDirection:
	push	{lr}
	add	r1, r0, #0
	ldr	r0, .L58
	ldrb	r2, [r0, #0x5]
	lsl	r0, r2, #0x3
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	ldr	r2, .L58+0x4
	add	r0, r0, r2
	ldrb	r2, [r0, #0x1]
	mov	r3, #0x4
	orr	r2, r2, r3
	strb	r2, [r0, #0x1]
	ldrb	r0, [r0, #0x18]
	lsr	r0, r0, #0x4
	bl	DoForcedMovement
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L59:
	.align	2, 0
.L58:
	.word	gPlayerAvatar
	.word	gMapObjects
.Lfe12:
	.size	 DoForcedMovementInCurrentDirection,.Lfe12-DoForcedMovementInCurrentDirection
	.align	2, 0
	.globl	ForcedMovement_Slip
	.type	 ForcedMovement_Slip,function
	.thumb_func
ForcedMovement_Slip:
	push	{lr}
	ldr	r0, .L61
	bl	DoForcedMovementInCurrentDirection
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L62:
	.align	2, 0
.L61:
	.word	PlayerGoSpeed2
.Lfe13:
	.size	 ForcedMovement_Slip,.Lfe13-ForcedMovement_Slip
	.align	2, 0
	.globl	sub_8058AAC
	.type	 sub_8058AAC,function
	.thumb_func
sub_8058AAC:
	push	{lr}
	ldr	r1, .L64
	mov	r0, #0x1
	bl	DoForcedMovement
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L65:
	.align	2, 0
.L64:
	.word	PlayerGoSpeed1
.Lfe14:
	.size	 sub_8058AAC,.Lfe14-sub_8058AAC
	.align	2, 0
	.globl	sub_8058AC4
	.type	 sub_8058AC4,function
	.thumb_func
sub_8058AC4:
	push	{lr}
	ldr	r1, .L67
	mov	r0, #0x2
	bl	DoForcedMovement
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L68:
	.align	2, 0
.L67:
	.word	PlayerGoSpeed1
.Lfe15:
	.size	 sub_8058AC4,.Lfe15-sub_8058AC4
	.align	2, 0
	.globl	sub_8058ADC
	.type	 sub_8058ADC,function
	.thumb_func
sub_8058ADC:
	push	{lr}
	ldr	r1, .L70
	mov	r0, #0x3
	bl	DoForcedMovement
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L71:
	.align	2, 0
.L70:
	.word	PlayerGoSpeed1
.Lfe16:
	.size	 sub_8058ADC,.Lfe16-sub_8058ADC
	.align	2, 0
	.globl	sub_8058AF4
	.type	 sub_8058AF4,function
	.thumb_func
sub_8058AF4:
	push	{lr}
	ldr	r1, .L73
	mov	r0, #0x4
	bl	DoForcedMovement
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L74:
	.align	2, 0
.L73:
	.word	PlayerGoSpeed1
.Lfe17:
	.size	 sub_8058AF4,.Lfe17-sub_8058AF4
	.align	2, 0
	.globl	sub_8058B0C
	.type	 sub_8058B0C,function
	.thumb_func
sub_8058B0C:
	push	{lr}
	ldr	r1, .L76
	mov	r0, #0x1
	bl	DoForcedMovement
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L77:
	.align	2, 0
.L76:
	.word	npc_use_some_d2s
.Lfe18:
	.size	 sub_8058B0C,.Lfe18-sub_8058B0C
	.align	2, 0
	.globl	sub_8058B24
	.type	 sub_8058B24,function
	.thumb_func
sub_8058B24:
	push	{lr}
	ldr	r1, .L79
	mov	r0, #0x2
	bl	DoForcedMovement
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L80:
	.align	2, 0
.L79:
	.word	npc_use_some_d2s
.Lfe19:
	.size	 sub_8058B24,.Lfe19-sub_8058B24
	.align	2, 0
	.globl	sub_8058B3C
	.type	 sub_8058B3C,function
	.thumb_func
sub_8058B3C:
	push	{lr}
	ldr	r1, .L82
	mov	r0, #0x3
	bl	DoForcedMovement
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L83:
	.align	2, 0
.L82:
	.word	npc_use_some_d2s
.Lfe20:
	.size	 sub_8058B3C,.Lfe20-sub_8058B3C
	.align	2, 0
	.globl	sub_8058B54
	.type	 sub_8058B54,function
	.thumb_func
sub_8058B54:
	push	{lr}
	ldr	r1, .L85
	mov	r0, #0x4
	bl	DoForcedMovement
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L86:
	.align	2, 0
.L85:
	.word	npc_use_some_d2s
.Lfe21:
	.size	 sub_8058B54,.Lfe21-sub_8058B54
	.align	2, 0
	.type	 ForcedMovement_Slide,function
	.thumb_func
ForcedMovement_Slide:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L88
	ldrb	r3, [r2, #0x5]
	lsl	r2, r3, #0x3
	add	r2, r2, r3
	lsl	r2, r2, #0x2
	ldr	r3, .L88+0x4
	add	r2, r2, r3
	ldrb	r3, [r2, #0x1]
	mov	r4, #0x4
	orr	r3, r3, r4
	mov	r4, #0x2
	orr	r3, r3, r4
	strb	r3, [r2, #0x1]
	bl	DoForcedMovement
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r4}
	pop	{r1}
	bx	r1
.L89:
	.align	2, 0
.L88:
	.word	gPlayerAvatar
	.word	gMapObjects
.Lfe22:
	.size	 ForcedMovement_Slide,.Lfe22-ForcedMovement_Slide
	.align	2, 0
	.globl	ForcedMovement_SlideSouth
	.type	 ForcedMovement_SlideSouth,function
	.thumb_func
ForcedMovement_SlideSouth:
	push	{lr}
	ldr	r1, .L91
	mov	r0, #0x1
	bl	ForcedMovement_Slide
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L92:
	.align	2, 0
.L91:
	.word	PlayerGoSpeed2
.Lfe23:
	.size	 ForcedMovement_SlideSouth,.Lfe23-ForcedMovement_SlideSouth
	.align	2, 0
	.globl	ForcedMovement_SlideNorth
	.type	 ForcedMovement_SlideNorth,function
	.thumb_func
ForcedMovement_SlideNorth:
	push	{lr}
	ldr	r1, .L94
	mov	r0, #0x2
	bl	ForcedMovement_Slide
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L95:
	.align	2, 0
.L94:
	.word	PlayerGoSpeed2
.Lfe24:
	.size	 ForcedMovement_SlideNorth,.Lfe24-ForcedMovement_SlideNorth
	.align	2, 0
	.globl	ForcedMovement_SlideWest
	.type	 ForcedMovement_SlideWest,function
	.thumb_func
ForcedMovement_SlideWest:
	push	{lr}
	ldr	r1, .L97
	mov	r0, #0x3
	bl	ForcedMovement_Slide
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L98:
	.align	2, 0
.L97:
	.word	PlayerGoSpeed2
.Lfe25:
	.size	 ForcedMovement_SlideWest,.Lfe25-ForcedMovement_SlideWest
	.align	2, 0
	.globl	ForcedMovement_SlideEast
	.type	 ForcedMovement_SlideEast,function
	.thumb_func
ForcedMovement_SlideEast:
	push	{lr}
	ldr	r1, .L100
	mov	r0, #0x4
	bl	ForcedMovement_Slide
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L101:
	.align	2, 0
.L100:
	.word	PlayerGoSpeed2
.Lfe26:
	.size	 ForcedMovement_SlideEast,.Lfe26-ForcedMovement_SlideEast
	.align	2, 0
	.globl	ForcedMovement_MatJump
	.type	 ForcedMovement_MatJump,function
	.thumb_func
ForcedMovement_MatJump:
	push	{lr}
	bl	DoPlayerMatJump
	mov	r0, #0x1
	pop	{r1}
	bx	r1
.Lfe27:
	.size	 ForcedMovement_MatJump,.Lfe27-ForcedMovement_MatJump
	.align	2, 0
	.globl	sub_8058C10
	.type	 sub_8058C10,function
	.thumb_func
sub_8058C10:
	push	{lr}
	bl	sub_805A06C
	mov	r0, #0x1
	pop	{r1}
	bx	r1
.Lfe28:
	.size	 sub_8058C10,.Lfe28-sub_8058C10
	.align	2, 0
	.globl	ForcedMovement_MuddySlope
	.type	 ForcedMovement_MuddySlope,function
	.thumb_func
ForcedMovement_MuddySlope:
	push	{r4, lr}
	ldr	r0, .L109
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L109+0x4
	add	r4, r0, r1
	ldrb	r1, [r4, #0x18]
	mov	r0, #0xf0
	and	r0, r0, r1
	cmp	r0, #0x20
	bne	.L106	@cond_branch
	bl	GetPlayerSpeed
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x3
	bgt	.L105	@cond_branch
.L106:
	mov	r0, #0x0
	bl	Bike_UpdateBikeCounterSpeed
	ldrb	r0, [r4, #0x1]
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r4, #0x1]
	ldr	r1, .L109+0x8
	mov	r0, #0x1
	bl	DoForcedMovement
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	b	.L108
.L110:
	.align	2, 0
.L109:
	.word	gPlayerAvatar
	.word	gMapObjects
	.word	PlayerGoSpeed2
.L105:
	mov	r0, #0x0
.L108:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe29:
	.size	 ForcedMovement_MuddySlope,.Lfe29-ForcedMovement_MuddySlope
	.align	2, 0
	.type	 MovePlayerNotOnBike,function
	.thumb_func
MovePlayerNotOnBike:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	ldr	r6, .L112
	add	r0, r4, #0
	bl	CheckMovementInputNotOnBike
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x16
	add	r0, r0, r6
	ldr	r2, [r0]
	add	r0, r4, #0
	add	r1, r5, #0
	bl	_call_via_r2
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L113:
	.align	2, 0
.L112:
	.word	gUnknown_0830FBEC
.Lfe30:
	.size	 MovePlayerNotOnBike,.Lfe30-MovePlayerNotOnBike
	.align	2, 0
	.type	 CheckMovementInputNotOnBike,function
	.thumb_func
CheckMovementInputNotOnBike:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0
	bne	.L115	@cond_branch
	ldr	r0, .L122
	strb	r4, [r0, #0x2]
	mov	r0, #0x0
	b	.L119
.L123:
	.align	2, 0
.L122:
	.word	gPlayerAvatar
.L115:
	bl	player_get_direction_upper_nybble
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r4, r0
	beq	.L117	@cond_branch
	ldr	r1, .L124
	ldrb	r0, [r1, #0x2]
	cmp	r0, #0x2
	beq	.L117	@cond_branch
	mov	r0, #0x1
	b	.L121
.L125:
	.align	2, 0
.L124:
	.word	gPlayerAvatar
.L117:
	ldr	r1, .L126
	mov	r0, #0x2
.L121:
	strb	r0, [r1, #0x2]
.L119:
	pop	{r4}
	pop	{r1}
	bx	r1
.L127:
	.align	2, 0
.L126:
	.word	gPlayerAvatar
.Lfe31:
	.size	 CheckMovementInputNotOnBike,.Lfe31-CheckMovementInputNotOnBike
	.align	2, 0
	.globl	PlayerNotOnBikeNotMoving
	.type	 PlayerNotOnBikeNotMoving,function
	.thumb_func
PlayerNotOnBikeNotMoving:
	push	{lr}
	bl	player_get_direction_lower_nybble
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	PlayerFaceDirection
	pop	{r0}
	bx	r0
.Lfe32:
	.size	 PlayerNotOnBikeNotMoving,.Lfe32-PlayerNotOnBikeNotMoving
	.align	2, 0
	.globl	PlayerNotOnBikeTurningInPlace
	.type	 PlayerNotOnBikeTurningInPlace,function
	.thumb_func
PlayerNotOnBikeTurningInPlace:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	PlayerTurnInPlace
	pop	{r0}
	bx	r0
.Lfe33:
	.size	 PlayerNotOnBikeTurningInPlace,.Lfe33-PlayerNotOnBikeTurningInPlace
	.align	2, 0
	.globl	sub_8058D0C
	.type	 sub_8058D0C,function
	.thumb_func
sub_8058D0C:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r1, r1, #0x10
	lsr	r4, r1, #0x10
	add	r0, r5, #0
	bl	CheckForPlayerAvatarCollision
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r1, r0, #0
	cmp	r0, #0
	beq	.L135	@cond_branch
	cmp	r0, #0x6
	bne	.L133	@cond_branch
	add	r0, r5, #0
	bl	PlayerJumpLedge
	b	.L130
.L133:
	sub	r0, r1, #0x5
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	bls	.L130	@cond_branch
	add	r0, r5, #0
	bl	PlayerNotOnBikeCollide
	b	.L130
.L135:
	ldr	r6, .L140
	ldrb	r1, [r6]
	mov	r0, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L136	@cond_branch
	add	r0, r5, #0
	bl	PlayerGoSpeed2
	b	.L130
.L141:
	.align	2, 0
.L140:
	.word	gPlayerAvatar
.L136:
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L137	@cond_branch
	mov	r0, #0x2
	and	r4, r4, r0
	cmp	r4, #0
	beq	.L137	@cond_branch
	mov	r0, #0x86
	lsl	r0, r0, #0x4
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L137	@cond_branch
	ldr	r2, .L142
	ldrb	r1, [r6, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r0, [r0, #0x1e]
	bl	IsRunningDisallowed
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L137	@cond_branch
	add	r0, r5, #0
	bl	sub_805940C
	ldrb	r1, [r6]
	mov	r0, #0x80
	orr	r0, r0, r1
	strb	r0, [r6]
	b	.L130
.L143:
	.align	2, 0
.L142:
	.word	gMapObjects
.L137:
	add	r0, r5, #0
	bl	PlayerGoSpeed1
.L130:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe34:
	.size	 sub_8058D0C,.Lfe34-sub_8058D0C
	.align	2, 0
	.type	 CheckForPlayerAvatarCollision,function
	.thumb_func
CheckForPlayerAvatarCollision:
	push	{r4, r5, r6, lr}
	add	sp, sp, #0xfffffff8
	add	r6, r0, #0
	lsl	r6, r6, #0x18
	lsr	r6, r6, #0x18
	ldr	r0, .L145
	ldrb	r0, [r0, #0x5]
	lsl	r4, r0, #0x3
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L145+0x4
	add	r4, r4, r0
	ldrh	r1, [r4, #0x10]
	add	r0, sp, #0x4
	strh	r1, [r0]
	ldrh	r0, [r4, #0x12]
	mov	r5, sp
	add	r5, r5, #0x6
	strh	r0, [r5]
	add	r0, r6, #0
	add	r1, sp, #0x4
	add	r2, r5, #0
	bl	MoveCoords
	add	r0, sp, #0x4
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x0
	ldrsh	r1, [r5, r2]
	bl	MapGridGetMetatileBehaviorAt
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r1, sp, #0x4
	mov	r3, #0x0
	ldrsh	r1, [r1, r3]
	mov	r3, #0x0
	ldrsh	r2, [r5, r3]
	str	r0, [sp]
	add	r0, r4, #0
	add	r3, r6, #0
	bl	CheckForFieldObjectCollision
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	sp, sp, #0x8
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L146:
	.align	2, 0
.L145:
	.word	gPlayerAvatar
	.word	gMapObjects
.Lfe35:
	.size	 CheckForPlayerAvatarCollision,.Lfe35-CheckForPlayerAvatarCollision
	.align	2, 0
	.globl	CheckForFieldObjectCollision
	.type	 CheckForFieldObjectCollision,function
	.thumb_func
CheckForFieldObjectCollision:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #0xfffffffc
	ldr	r4, [sp, #0x24]
	lsl	r1, r1, #0x10
	lsl	r2, r2, #0x10
	lsl	r3, r3, #0x18
	lsr	r6, r3, #0x18
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	sl, r4
	lsr	r7, r1, #0x10
	asr	r5, r1, #0x10
	lsr	r1, r2, #0x10
	mov	r9, r1
	asr	r4, r2, #0x10
	add	r1, r5, #0
	add	r2, r4, #0
	add	r3, r6, #0
	bl	npc_block_way
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, sp
	strb	r0, [r1]
	cmp	r0, #0x3
	bne	.L148	@cond_branch
	add	r0, r5, #0
	add	r1, r4, #0
	add	r2, r6, #0
	bl	sub_8058EF0
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L148	@cond_branch
	mov	r0, #0x5
	b	.L153
.L148:
	lsl	r5, r7, #0x10
	asr	r0, r5, #0x10
	mov	r8, r0
	mov	r1, r9
	lsl	r4, r1, #0x10
	asr	r7, r4, #0x10
	add	r1, r7, #0
	add	r2, r6, #0
	bl	ShouldJumpLedge
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L149	@cond_branch
	mov	r0, #0x2b
	bl	IncrementGameStat
	mov	r0, #0x6
	b	.L153
.L149:
	mov	r0, sp
	ldrb	r0, [r0]
	cmp	r0, #0x4
	bne	.L150	@cond_branch
	mov	r0, r8
	add	r1, r7, #0
	add	r2, r6, #0
	bl	sub_8058F6C
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L150	@cond_branch
	mov	r0, #0x7
	b	.L153
.L150:
	mov	r0, sp
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L151	@cond_branch
	asr	r5, r5, #0x10
	asr	r4, r4, #0x10
	add	r0, r6, #0
	add	r1, r5, #0
	add	r2, r4, #0
	bl	CheckForRotatingGatePuzzleCollision
	cmp	r0, #0
	beq	.L152	@cond_branch
	mov	r0, #0x8
	b	.L153
.L152:
	add	r0, r5, #0
	add	r1, r4, #0
	mov	r2, sl
	mov	r3, sp
	bl	check_acro_bike_metatile
.L151:
	mov	r0, sp
	ldrb	r0, [r0]
.L153:
	add	sp, sp, #0x4
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe36:
	.size	 CheckForFieldObjectCollision,.Lfe36-CheckForFieldObjectCollision
	.align	2, 0
	.type	 sub_8058EF0,function
	.thumb_func
sub_8058EF0:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	lsl	r1, r1, #0x10
	lsr	r4, r1, #0x10
	lsl	r2, r2, #0x18
	lsr	r6, r2, #0x18
	ldr	r0, .L158
	ldrb	r1, [r0]
	mov	r0, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L155	@cond_branch
	lsl	r5, r3, #0x10
	asr	r0, r5, #0x10
	lsl	r4, r4, #0x10
	asr	r1, r4, #0x10
	bl	MapGridGetZCoordAt
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	bne	.L155	@cond_branch
	lsr	r0, r5, #0x10
	lsr	r1, r4, #0x10
	mov	r2, #0x3
	bl	GetFieldObjectIdByXYZ
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x10
	bne	.L155	@cond_branch
	add	r0, r6, #0
	bl	sub_805A20C
	mov	r0, #0x1
	b	.L157
.L159:
	.align	2, 0
.L158:
	.word	gPlayerAvatar
.L155:
	mov	r0, #0x0
.L157:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe37:
	.size	 sub_8058EF0,.Lfe37-sub_8058EF0
	.align	2, 0
	.type	 ShouldJumpLedge,function
	.thumb_func
ShouldJumpLedge:
	push	{lr}
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	bl	GetLedgeJumpDirection
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L161	@cond_branch
	mov	r0, #0x0
	b	.L163
.L161:
	mov	r0, #0x1
.L163:
	pop	{r1}
	bx	r1
.Lfe38:
	.size	 ShouldJumpLedge,.Lfe38-ShouldJumpLedge
	.align	2, 0
	.type	 sub_8058F6C,function
	.thumb_func
sub_8058F6C:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #0xfffffffc
	mov	r3, sp
	strh	r0, [r3]
	mov	r5, sp
	add	r5, r5, #0x2
	strh	r1, [r5]
	lsl	r2, r2, #0x18
	lsr	r7, r2, #0x18
	ldr	r0, .L170
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L165	@cond_branch
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x0
	ldrsh	r1, [r5, r2]
	bl	GetFieldObjectIdByXY
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0x10
	beq	.L165	@cond_branch
	ldr	r0, .L170+0x4
	lsl	r1, r6, #0x3
	add	r1, r1, r6
	lsl	r1, r1, #0x2
	add	r4, r1, r0
	ldrb	r0, [r4, #0x5]
	cmp	r0, #0x57
	bne	.L165	@cond_branch
	ldrh	r1, [r4, #0x10]
	mov	r0, sp
	strh	r1, [r0]
	ldrh	r0, [r4, #0x12]
	strh	r0, [r5]
	add	r0, r7, #0
	mov	r1, sp
	add	r2, r5, #0
	bl	MoveCoords
	mov	r0, sp
	mov	r2, #0x0
	ldrsh	r1, [r0, r2]
	mov	r0, #0x0
	ldrsh	r2, [r5, r0]
	add	r0, r4, #0
	add	r3, r7, #0
	bl	npc_block_way
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L165	@cond_branch
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x0
	ldrsh	r1, [r5, r2]
	bl	MapGridGetMetatileBehaviorAt
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	MetatileBehavior_IsNonAnimDoor
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L165	@cond_branch
	add	r0, r6, #0
	add	r1, r7, #0
	bl	StartStrengthAnim
	mov	r0, #0x1
	b	.L169
.L171:
	.align	2, 0
.L170:
	.word	0x829
	.word	gMapObjects
.L165:
	mov	r0, #0x0
.L169:
	add	sp, sp, #0x4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe39:
	.size	 sub_8058F6C,.Lfe39-sub_8058F6C
	.align	2, 0
	.type	 check_acro_bike_metatile,function
	.thumb_func
check_acro_bike_metatile:
	push	{r4, r5, r6, r7, lr}
	add	r6, r3, #0
	lsl	r2, r2, #0x18
	lsr	r5, r2, #0x18
	mov	r4, #0x0
	ldr	r7, .L179
.L176:
	lsl	r0, r4, #0x2
	add	r0, r0, r7
	ldr	r1, [r0]
	add	r0, r5, #0
	bl	_call_via_r1
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L175	@cond_branch
	ldr	r0, .L179+0x4
	add	r0, r4, r0
	ldrb	r0, [r0]
	strb	r0, [r6]
	b	.L172
.L180:
	.align	2, 0
.L179:
	.word	gUnknown_0830FBF8
	.word	gUnknown_0830FC0C
.L175:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x4
	bls	.L176	@cond_branch
.L172:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe40:
	.size	 check_acro_bike_metatile,.Lfe40-check_acro_bike_metatile
	.align	2, 0
	.globl	SetPlayerAvatarTransitionFlags
	.type	 SetPlayerAvatarTransitionFlags,function
	.thumb_func
SetPlayerAvatarTransitionFlags:
	push	{lr}
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r2, .L182
	ldrb	r1, [r2, #0x1]
	orr	r0, r0, r1
	strb	r0, [r2, #0x1]
	bl	DoPlayerAvatarTransition
	pop	{r0}
	bx	r0
.L183:
	.align	2, 0
.L182:
	.word	gPlayerAvatar
.Lfe41:
	.size	 SetPlayerAvatarTransitionFlags,.Lfe41-SetPlayerAvatarTransitionFlags
	.align	2, 0
	.type	 DoPlayerAvatarTransition,function
	.thumb_func
DoPlayerAvatarTransition:
	push	{r4, r5, lr}
	ldr	r0, .L192
	ldrb	r4, [r0, #0x1]
	cmp	r4, #0
	beq	.L185	@cond_branch
	mov	r5, #0x0
.L189:
	mov	r0, #0x1
	and	r0, r0, r4
	cmp	r0, #0
	beq	.L188	@cond_branch
	ldr	r0, .L192+0x4
	lsl	r2, r5, #0x2
	add	r2, r2, r0
	ldr	r0, .L192
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L192+0x8
	add	r0, r0, r1
	ldr	r1, [r2]
	bl	_call_via_r1
.L188:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsr	r4, r4, #0x1
	cmp	r5, #0x7
	bls	.L189	@cond_branch
	ldr	r1, .L192
	mov	r0, #0x0
	strb	r0, [r1, #0x1]
.L185:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L193:
	.align	2, 0
.L192:
	.word	gPlayerAvatar
	.word	gUnknown_0830FC14
	.word	gMapObjects
.Lfe42:
	.size	 DoPlayerAvatarTransition,.Lfe42-DoPlayerAvatarTransition
	.align	2, 0
	.globl	nullsub_49
	.type	 nullsub_49,function
	.thumb_func
nullsub_49:
	bx	lr
.Lfe43:
	.size	 nullsub_49,.Lfe43-nullsub_49
	.align	2, 0
	.globl	PlayerAvatarTransition_Normal
	.type	 PlayerAvatarTransition_Normal,function
	.thumb_func
PlayerAvatarTransition_Normal:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r0, #0x0
	bl	GetPlayerAvatarGraphicsIdByStateId
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	sub_805B980
	ldrb	r1, [r4, #0x18]
	lsr	r1, r1, #0x4
	add	r0, r4, #0
	bl	FieldObjectTurn
	mov	r0, #0x1
	bl	SetPlayerAvatarStateMask
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe44:
	.size	 PlayerAvatarTransition_Normal,.Lfe44-PlayerAvatarTransition_Normal
	.align	2, 0
	.globl	PlayerAvatarTransition_MachBike
	.type	 PlayerAvatarTransition_MachBike,function
	.thumb_func
PlayerAvatarTransition_MachBike:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r0, #0x1
	bl	GetPlayerAvatarGraphicsIdByStateId
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	sub_805B980
	ldrb	r1, [r4, #0x18]
	lsr	r1, r1, #0x4
	add	r0, r4, #0
	bl	FieldObjectTurn
	mov	r0, #0x2
	bl	SetPlayerAvatarStateMask
	mov	r0, #0x0
	mov	r1, #0x0
	bl	BikeClearState
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe45:
	.size	 PlayerAvatarTransition_MachBike,.Lfe45-PlayerAvatarTransition_MachBike
	.align	2, 0
	.globl	PlayerAvatarTransition_AcroBike
	.type	 PlayerAvatarTransition_AcroBike,function
	.thumb_func
PlayerAvatarTransition_AcroBike:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r0, #0x2
	bl	GetPlayerAvatarGraphicsIdByStateId
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	sub_805B980
	ldrb	r1, [r4, #0x18]
	lsr	r1, r1, #0x4
	add	r0, r4, #0
	bl	FieldObjectTurn
	mov	r0, #0x4
	bl	SetPlayerAvatarStateMask
	mov	r0, #0x0
	mov	r1, #0x0
	bl	BikeClearState
	bl	Bike_HandleBumpySlopeJump
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe46:
	.size	 PlayerAvatarTransition_AcroBike,.Lfe46-PlayerAvatarTransition_AcroBike
	.align	2, 0
	.globl	PlayerAvatarTransition_Surfing
	.type	 PlayerAvatarTransition_Surfing,function
	.thumb_func
PlayerAvatarTransition_Surfing:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r0, #0x3
	bl	GetPlayerAvatarGraphicsIdByStateId
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	sub_805B980
	ldrb	r1, [r4, #0x18]
	lsr	r1, r1, #0x4
	add	r0, r4, #0
	bl	FieldObjectTurn
	mov	r0, #0x8
	bl	SetPlayerAvatarStateMask
	ldr	r1, .L199
	mov	r2, #0x10
	ldrsh	r0, [r4, r2]
	str	r0, [r1]
	mov	r2, #0x12
	ldrsh	r0, [r4, r2]
	str	r0, [r1, #0x4]
	ldr	r0, .L199+0x4
	ldrb	r0, [r0, #0x5]
	str	r0, [r1, #0x8]
	mov	r0, #0x8
	bl	FieldEffectStart
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strb	r0, [r4, #0x1a]
	mov	r1, #0x1
	bl	sub_8127ED0
	pop	{r4}
	pop	{r0}
	bx	r0
.L200:
	.align	2, 0
.L199:
	.word	gFieldEffectArguments
	.word	gPlayerAvatar
.Lfe47:
	.size	 PlayerAvatarTransition_Surfing,.Lfe47-PlayerAvatarTransition_Surfing
	.align	2, 0
	.globl	PlayerAvatarTransition_Underwater
	.type	 PlayerAvatarTransition_Underwater,function
	.thumb_func
PlayerAvatarTransition_Underwater:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r0, #0x4
	bl	GetPlayerAvatarGraphicsIdByStateId
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	sub_805B980
	ldrb	r1, [r4, #0x18]
	lsr	r1, r1, #0x4
	add	r0, r4, #0
	bl	FieldObjectTurn
	mov	r0, #0x10
	bl	SetPlayerAvatarStateMask
	ldrb	r0, [r4, #0x4]
	bl	sub_8128124
	strb	r0, [r4, #0x1a]
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe48:
	.size	 PlayerAvatarTransition_Underwater,.Lfe48-PlayerAvatarTransition_Underwater
	.align	2, 0
	.globl	sub_80591F4
	.type	 sub_80591F4,function
	.thumb_func
sub_80591F4:
	ldr	r2, .L203
	ldrb	r1, [r2]
	mov	r0, #0x20
	orr	r0, r0, r1
	strb	r0, [r2]
	bx	lr
.L204:
	.align	2, 0
.L203:
	.word	gPlayerAvatar
.Lfe49:
	.size	 sub_80591F4,.Lfe49-sub_80591F4
	.align	2, 0
	.globl	sub_8059204
	.type	 sub_8059204,function
	.thumb_func
sub_8059204:
	push	{r4, lr}
	ldr	r4, .L212
	mov	r0, #0x0
	strb	r0, [r4, #0x3]
	bl	PlayerIsAnimActive
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L206	@cond_branch
	bl	PlayerCheckIfAnimFinishedOrInactive
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L207	@cond_branch
	bl	player_is_anim_in_certain_ranges
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L206	@cond_branch
	mov	r0, #0x1
	b	.L211
.L213:
	.align	2, 0
.L212:
	.word	gPlayerAvatar
.L207:
	bl	sub_80592A4
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L206	@cond_branch
	mov	r0, #0x2
.L211:
	strb	r0, [r4, #0x3]
.L206:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe50:
	.size	 sub_8059204,.Lfe50-sub_8059204
	.align	2, 0
	.type	 player_is_anim_in_certain_ranges,function
	.thumb_func
player_is_anim_in_certain_ranges:
	push	{lr}
	ldr	r2, .L219
	ldr	r0, .L219+0x4
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r1, [r0, #0x1c]
	cmp	r1, #0x3
	bls	.L216	@cond_branch
	add	r0, r1, #0
	sub	r0, r0, #0x10
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x4
	bls	.L216	@cond_branch
	add	r0, r1, #0
	sub	r0, r0, #0x19
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xf
	bls	.L216	@cond_branch
	add	r0, r1, #0
	sub	r0, r0, #0x62
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xb
	bls	.L216	@cond_branch
	add	r0, r1, #0
	sub	r0, r0, #0x7a
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	bhi	.L215	@cond_branch
.L216:
	mov	r0, #0x1
	b	.L218
.L220:
	.align	2, 0
.L219:
	.word	gMapObjects
	.word	gPlayerAvatar
.L215:
	mov	r0, #0x0
.L218:
	pop	{r1}
	bx	r1
.Lfe51:
	.size	 player_is_anim_in_certain_ranges,.Lfe51-player_is_anim_in_certain_ranges
	.align	2, 0
	.type	 sub_80592A4,function
	.thumb_func
sub_80592A4:
	push	{lr}
	bl	player_is_anim_in_certain_ranges
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L222	@cond_branch
	ldr	r0, .L225
	ldrb	r0, [r0, #0x2]
	cmp	r0, #0x1
	beq	.L222	@cond_branch
	mov	r0, #0x1
	b	.L224
.L226:
	.align	2, 0
.L225:
	.word	gPlayerAvatar
.L222:
	mov	r0, #0x0
.L224:
	pop	{r1}
	bx	r1
.Lfe52:
	.size	 sub_80592A4,.Lfe52-sub_80592A4
	.align	2, 0
	.type	 PlayerIsAnimActive,function
	.thumb_func
PlayerIsAnimActive:
	push	{lr}
	ldr	r0, .L228
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L228+0x4
	add	r0, r0, r1
	bl	FieldObjectIsSpecialAnimOrDirectionSequenceAnimActive
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L229:
	.align	2, 0
.L228:
	.word	gPlayerAvatar
	.word	gMapObjects
.Lfe53:
	.size	 PlayerIsAnimActive,.Lfe53-PlayerIsAnimActive
	.align	2, 0
	.type	 PlayerCheckIfAnimFinishedOrInactive,function
	.thumb_func
PlayerCheckIfAnimFinishedOrInactive:
	push	{lr}
	ldr	r0, .L231
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L231+0x4
	add	r0, r0, r1
	bl	FieldObjectCheckIfSpecialAnimFinishedOrInactive
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L232:
	.align	2, 0
.L231:
	.word	gPlayerAvatar
	.word	gMapObjects
.Lfe54:
	.size	 PlayerCheckIfAnimFinishedOrInactive,.Lfe54-PlayerCheckIfAnimFinishedOrInactive
	.align	2, 0
	.type	 player_set_x22,function
	.thumb_func
player_set_x22:
	ldr	r3, .L234
	ldr	r1, .L234+0x4
	ldrb	r2, [r1, #0x5]
	lsl	r1, r2, #0x3
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r3
	add	r1, r1, #0x22
	strb	r0, [r1]
	bx	lr
.L235:
	.align	2, 0
.L234:
	.word	gMapObjects
	.word	gPlayerAvatar
.Lfe55:
	.size	 player_set_x22,.Lfe55-player_set_x22
	.align	2, 0
	.globl	player_get_x22
	.type	 player_get_x22,function
	.thumb_func
player_get_x22:
	ldr	r2, .L237
	ldr	r0, .L237+0x4
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	add	r0, r0, #0x22
	ldrb	r0, [r0]
	bx	lr
.L238:
	.align	2, 0
.L237:
	.word	gMapObjects
	.word	gPlayerAvatar
.Lfe56:
	.size	 player_get_x22,.Lfe56-player_get_x22
	.align	2, 0
	.type	 sub_8059348,function
	.thumb_func
sub_8059348:
	push	{lr}
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldr	r0, .L240
	ldrb	r2, [r0, #0x5]
	lsl	r0, r2, #0x3
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	ldr	r2, .L240+0x4
	add	r0, r0, r2
	bl	FieldObjectForceSetSpecialAnim
	pop	{r0}
	bx	r0
.L241:
	.align	2, 0
.L240:
	.word	gPlayerAvatar
	.word	gMapObjects
.Lfe57:
	.size	 sub_8059348,.Lfe57-sub_8059348
	.align	2, 0
	.globl	PlayerSetAnimId
	.type	 PlayerSetAnimId,function
	.thumb_func
PlayerSetAnimId:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r4, r1, #0x18
	bl	PlayerIsAnimActive
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L243	@cond_branch
	add	r0, r4, #0
	bl	player_set_x22
	ldr	r0, .L244
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L244+0x4
	add	r0, r0, r1
	add	r1, r5, #0
	bl	FieldObjectSetSpecialAnim
.L243:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L245:
	.align	2, 0
.L244:
	.word	gPlayerAvatar
	.word	gMapObjects
.Lfe58:
	.size	 PlayerSetAnimId,.Lfe58-PlayerSetAnimId
	.align	2, 0
	.globl	PlayerGoSpeed1
	.type	 PlayerGoSpeed1,function
	.thumb_func
PlayerGoSpeed1:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetGoSpeed0AnimId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x2
	bl	PlayerSetAnimId
	pop	{r0}
	bx	r0
.Lfe59:
	.size	 PlayerGoSpeed1,.Lfe59-PlayerGoSpeed1
	.align	2, 0
	.globl	PlayerGoSpeed2
	.type	 PlayerGoSpeed2,function
	.thumb_func
PlayerGoSpeed2:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	sub_8060744
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x2
	bl	PlayerSetAnimId
	pop	{r0}
	bx	r0
.Lfe60:
	.size	 PlayerGoSpeed2,.Lfe60-PlayerGoSpeed2
	.align	2, 0
	.globl	npc_use_some_d2s
	.type	 npc_use_some_d2s,function
	.thumb_func
npc_use_some_d2s:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	d2s_08064034
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x2
	bl	PlayerSetAnimId
	pop	{r0}
	bx	r0
.Lfe61:
	.size	 npc_use_some_d2s,.Lfe61-npc_use_some_d2s
	.align	2, 0
	.globl	PlayerGoSpeed4
	.type	 PlayerGoSpeed4,function
	.thumb_func
PlayerGoSpeed4:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	sub_806079C
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x2
	bl	PlayerSetAnimId
	pop	{r0}
	bx	r0
.Lfe62:
	.size	 PlayerGoSpeed4,.Lfe62-PlayerGoSpeed4
	.align	2, 0
	.globl	sub_805940C
	.type	 sub_805940C,function
	.thumb_func
sub_805940C:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	sub_80607F4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x2
	bl	PlayerSetAnimId
	pop	{r0}
	bx	r0
.Lfe63:
	.size	 sub_805940C,.Lfe63-sub_805940C
	.align	2, 0
	.globl	PlayerOnBikeCollide
	.type	 PlayerOnBikeCollide,function
	.thumb_func
PlayerOnBikeCollide:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r4, #0
	bl	PlayCollisionSoundIfNotFacingWarp
	add	r0, r4, #0
	bl	GetStepInPlaceDelay16AnimId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x2
	bl	PlayerSetAnimId
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe64:
	.size	 PlayerOnBikeCollide,.Lfe64-PlayerOnBikeCollide
	.align	2, 0
	.type	 PlayerNotOnBikeCollide,function
	.thumb_func
PlayerNotOnBikeCollide:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r4, #0
	bl	PlayCollisionSoundIfNotFacingWarp
	add	r0, r4, #0
	bl	GetStepInPlaceDelay32AnimId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x2
	bl	PlayerSetAnimId
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe65:
	.size	 PlayerNotOnBikeCollide,.Lfe65-PlayerNotOnBikeCollide
	.align	2, 0
	.globl	PlayerFaceDirection
	.type	 PlayerFaceDirection,function
	.thumb_func
PlayerFaceDirection:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetFaceDirectionAnimId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x1
	bl	PlayerSetAnimId
	pop	{r0}
	bx	r0
.Lfe66:
	.size	 PlayerFaceDirection,.Lfe66-PlayerFaceDirection
	.align	2, 0
	.globl	PlayerTurnInPlace
	.type	 PlayerTurnInPlace,function
	.thumb_func
PlayerTurnInPlace:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetStepInPlaceDelay8AnimId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x1
	bl	PlayerSetAnimId
	pop	{r0}
	bx	r0
.Lfe67:
	.size	 PlayerTurnInPlace,.Lfe67-PlayerTurnInPlace
	.align	2, 0
	.globl	PlayerJumpLedge
	.type	 PlayerJumpLedge,function
	.thumb_func
PlayerJumpLedge:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0xa
	bl	PlaySE
	add	r0, r4, #0
	bl	GetJumpLedgeAnimId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x8
	bl	PlayerSetAnimId
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe68:
	.size	 PlayerJumpLedge,.Lfe68-PlayerJumpLedge
	.align	2, 0
	.globl	sub_80594C0
	.type	 sub_80594C0,function
	.thumb_func
sub_80594C0:
	push	{r4, lr}
	ldr	r4, .L260
	ldrb	r0, [r4, #0x3]
	cmp	r0, #0x2
	beq	.L258	@cond_branch
	cmp	r0, #0
	bne	.L257	@cond_branch
.L258:
	bl	player_should_look_direction_be_enforced_upon_movement
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L257	@cond_branch
	ldr	r2, .L260+0x4
	ldrb	r1, [r4, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r0, [r0, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	bl	GetFaceDirectionAnimId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	sub_8059348
.L257:
	pop	{r4}
	pop	{r0}
	bx	r0
.L261:
	.align	2, 0
.L260:
	.word	gPlayerAvatar
	.word	gMapObjects
.Lfe69:
	.size	 sub_80594C0,.Lfe69-sub_80594C0
	.align	2, 0
	.globl	PlayerIdleWheelie
	.type	 PlayerIdleWheelie,function
	.thumb_func
PlayerIdleWheelie:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	sub_80609D8
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x1
	bl	PlayerSetAnimId
	pop	{r0}
	bx	r0
.Lfe70:
	.size	 PlayerIdleWheelie,.Lfe70-PlayerIdleWheelie
	.align	2, 0
	.globl	PlayerStartWheelie
	.type	 PlayerStartWheelie,function
	.thumb_func
PlayerStartWheelie:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	sub_8060A04
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x1
	bl	PlayerSetAnimId
	pop	{r0}
	bx	r0
.Lfe71:
	.size	 PlayerStartWheelie,.Lfe71-PlayerStartWheelie
	.align	2, 0
	.globl	PlayerEndWheelie
	.type	 PlayerEndWheelie,function
	.thumb_func
PlayerEndWheelie:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	sub_8060A30
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x1
	bl	PlayerSetAnimId
	pop	{r0}
	bx	r0
.Lfe72:
	.size	 PlayerEndWheelie,.Lfe72-PlayerEndWheelie
	.align	2, 0
	.globl	PlayerStandingHoppingWheelie
	.type	 PlayerStandingHoppingWheelie,function
	.thumb_func
PlayerStandingHoppingWheelie:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x22
	bl	PlaySE
	add	r0, r4, #0
	bl	sub_8060A5C
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x1
	bl	PlayerSetAnimId
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe73:
	.size	 PlayerStandingHoppingWheelie,.Lfe73-PlayerStandingHoppingWheelie
	.align	2, 0
	.globl	PlayerMovingHoppingWheelie
	.type	 PlayerMovingHoppingWheelie,function
	.thumb_func
PlayerMovingHoppingWheelie:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x22
	bl	PlaySE
	add	r0, r4, #0
	bl	sub_8060A88
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x2
	bl	PlayerSetAnimId
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe74:
	.size	 PlayerMovingHoppingWheelie,.Lfe74-PlayerMovingHoppingWheelie
	.align	2, 0
	.globl	PlayerLedgeHoppingWheelie
	.type	 PlayerLedgeHoppingWheelie,function
	.thumb_func
PlayerLedgeHoppingWheelie:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x22
	bl	PlaySE
	add	r0, r4, #0
	bl	sub_8060AB4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x8
	bl	PlayerSetAnimId
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe75:
	.size	 PlayerLedgeHoppingWheelie,.Lfe75-PlayerLedgeHoppingWheelie
	.align	2, 0
	.globl	PlayerAcroTurnJump
	.type	 PlayerAcroTurnJump,function
	.thumb_func
PlayerAcroTurnJump:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x22
	bl	PlaySE
	add	r0, r4, #0
	bl	sub_8060878
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x1
	bl	PlayerSetAnimId
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe76:
	.size	 PlayerAcroTurnJump,.Lfe76-PlayerAcroTurnJump
	.align	2, 0
	.globl	sub_80595DC
	.type	 sub_80595DC,function
	.thumb_func
sub_80595DC:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x7
	bl	PlaySE
	add	r0, r4, #0
	bl	sub_8060AE0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x2
	bl	PlayerSetAnimId
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe77:
	.size	 sub_80595DC,.Lfe77-sub_80595DC
	.align	2, 0
	.globl	sub_8059600
	.type	 sub_8059600,function
	.thumb_func
sub_8059600:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	sub_8060B0C
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x2
	bl	PlayerSetAnimId
	pop	{r0}
	bx	r0
.Lfe78:
	.size	 sub_8059600,.Lfe78-sub_8059600
	.align	2, 0
	.globl	sub_8059618
	.type	 sub_8059618,function
	.thumb_func
sub_8059618:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	sub_8060B38
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x2
	bl	PlayerSetAnimId
	pop	{r0}
	bx	r0
.Lfe79:
	.size	 sub_8059618,.Lfe79-sub_8059618
	.align	2, 0
	.globl	sub_8059630
	.type	 sub_8059630,function
	.thumb_func
sub_8059630:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	sub_8060B64
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x2
	bl	PlayerSetAnimId
	pop	{r0}
	bx	r0
.Lfe80:
	.size	 sub_8059630,.Lfe80-sub_8059630
	.align	2, 0
	.type	 PlayCollisionSoundIfNotFacingWarp,function
	.thumb_func
PlayCollisionSoundIfNotFacingWarp:
	push	{r4, lr}
	add	sp, sp, #0xfffffffc
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r2, .L277
	ldr	r0, .L277+0x4
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r0, [r0, #0x1e]
	ldr	r2, .L277+0x8
	sub	r1, r4, #0x1
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	_call_via_r1
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L273	@cond_branch
	cmp	r4, #0x2
	bne	.L275	@cond_branch
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	PlayerGetDestCoords
	mov	r0, #0x2
	mov	r1, sp
	add	r2, r4, #0
	bl	MoveCoords
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	bl	MapGridGetMetatileBehaviorAt
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	MetatileBehavior_IsWarpDoor
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L273	@cond_branch
.L275:
	mov	r0, #0x7
	bl	PlaySE
.L273:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L278:
	.align	2, 0
.L277:
	.word	gMapObjects
	.word	gPlayerAvatar
	.word	gUnknown_0830FC34
.Lfe81:
	.size	 PlayCollisionSoundIfNotFacingWarp,.Lfe81-PlayCollisionSoundIfNotFacingWarp
	.align	2, 0
	.globl	GetXYCoordsOneStepInFrontOfPlayer
	.type	 GetXYCoordsOneStepInFrontOfPlayer,function
	.thumb_func
GetXYCoordsOneStepInFrontOfPlayer:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	ldr	r3, .L280
	ldr	r2, .L280+0x4
	ldrb	r1, [r2, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	ldrh	r0, [r0, #0x10]
	strh	r0, [r4]
	ldrb	r1, [r2, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	ldrh	r0, [r0, #0x12]
	strh	r0, [r5]
	bl	player_get_direction_lower_nybble
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r1, r4, #0
	add	r2, r5, #0
	bl	MoveCoords
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L281:
	.align	2, 0
.L280:
	.word	gMapObjects
	.word	gPlayerAvatar
.Lfe82:
	.size	 GetXYCoordsOneStepInFrontOfPlayer,.Lfe82-GetXYCoordsOneStepInFrontOfPlayer
	.align	2, 0
	.globl	PlayerGetDestCoords
	.type	 PlayerGetDestCoords,function
	.thumb_func
PlayerGetDestCoords:
	push	{r4, r5, lr}
	ldr	r5, .L283
	ldr	r4, .L283+0x4
	ldrb	r3, [r4, #0x5]
	lsl	r2, r3, #0x3
	add	r2, r2, r3
	lsl	r2, r2, #0x2
	add	r2, r2, r5
	ldrh	r2, [r2, #0x10]
	strh	r2, [r0]
	ldrb	r2, [r4, #0x5]
	lsl	r0, r2, #0x3
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldrh	r0, [r0, #0x12]
	strh	r0, [r1]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L284:
	.align	2, 0
.L283:
	.word	gMapObjects
	.word	gPlayerAvatar
.Lfe83:
	.size	 PlayerGetDestCoords,.Lfe83-PlayerGetDestCoords
	.align	2, 0
	.globl	player_get_direction_lower_nybble
	.type	 player_get_direction_lower_nybble,function
	.thumb_func
player_get_direction_lower_nybble:
	ldr	r2, .L286
	ldr	r0, .L286+0x4
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r0, [r0, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	bx	lr
.L287:
	.align	2, 0
.L286:
	.word	gMapObjects
	.word	gPlayerAvatar
.Lfe84:
	.size	 player_get_direction_lower_nybble,.Lfe84-player_get_direction_lower_nybble
	.align	2, 0
	.globl	player_get_direction_upper_nybble
	.type	 player_get_direction_upper_nybble,function
	.thumb_func
player_get_direction_upper_nybble:
	ldr	r2, .L289
	ldr	r0, .L289+0x4
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r0, [r0, #0x18]
	lsr	r0, r0, #0x4
	bx	lr
.L290:
	.align	2, 0
.L289:
	.word	gMapObjects
	.word	gPlayerAvatar
.Lfe85:
	.size	 player_get_direction_upper_nybble,.Lfe85-player_get_direction_upper_nybble
	.align	2, 0
	.globl	PlayerGetZCoord
	.type	 PlayerGetZCoord,function
	.thumb_func
PlayerGetZCoord:
	ldr	r2, .L292
	ldr	r0, .L292+0x4
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r0, [r0, #0xb]
	lsr	r0, r0, #0x4
	bx	lr
.L293:
	.align	2, 0
.L292:
	.word	gMapObjects
	.word	gPlayerAvatar
.Lfe86:
	.size	 PlayerGetZCoord,.Lfe86-PlayerGetZCoord
	.align	2, 0
	.globl	unref_sub_8059790
	.type	 unref_sub_8059790,function
	.thumb_func
unref_sub_8059790:
	push	{lr}
	add	r3, r0, #0
	add	r2, r1, #0
	ldr	r0, .L295
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L295+0x4
	add	r0, r0, r1
	lsl	r3, r3, #0x10
	asr	r3, r3, #0x10
	lsl	r2, r2, #0x10
	asr	r2, r2, #0x10
	add	r1, r3, #0
	bl	sub_805C058
	pop	{r0}
	bx	r0
.L296:
	.align	2, 0
.L295:
	.word	gPlayerAvatar
	.word	gMapObjects
.Lfe87:
	.size	 unref_sub_8059790,.Lfe87-unref_sub_8059790
	.align	2, 0
	.globl	TestPlayerAvatarFlags
	.type	 TestPlayerAvatarFlags,function
	.thumb_func
TestPlayerAvatarFlags:
	ldr	r1, .L298
	ldrb	r1, [r1]
	and	r1, r1, r0
	add	r0, r1, #0
	bx	lr
.L299:
	.align	2, 0
.L298:
	.word	gPlayerAvatar
.Lfe88:
	.size	 TestPlayerAvatarFlags,.Lfe88-TestPlayerAvatarFlags
	.align	2, 0
	.globl	sub_80597D0
	.type	 sub_80597D0,function
	.thumb_func
sub_80597D0:
	ldr	r0, .L301
	ldrb	r0, [r0]
	bx	lr
.L302:
	.align	2, 0
.L301:
	.word	gPlayerAvatar
.Lfe89:
	.size	 sub_80597D0,.Lfe89-sub_80597D0
	.align	2, 0
	.globl	GetPlayerAvatarObjectId
	.type	 GetPlayerAvatarObjectId,function
	.thumb_func
GetPlayerAvatarObjectId:
	ldr	r0, .L304
	ldrb	r0, [r0, #0x4]
	bx	lr
.L305:
	.align	2, 0
.L304:
	.word	gPlayerAvatar
.Lfe90:
	.size	 GetPlayerAvatarObjectId,.Lfe90-GetPlayerAvatarObjectId
	.align	2, 0
	.globl	sub_80597E8
	.type	 sub_80597E8,function
	.thumb_func
sub_80597E8:
	push	{lr}
	bl	ForcedMovement_None
	pop	{r0}
	bx	r0
.Lfe91:
	.size	 sub_80597E8,.Lfe91-sub_80597E8
	.align	2, 0
	.globl	sub_80597F4
	.type	 sub_80597F4,function
	.thumb_func
sub_80597F4:
	push	{r4, lr}
	ldr	r0, .L309
	ldrb	r0, [r0, #0x5]
	lsl	r4, r0, #0x3
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L309+0x4
	add	r4, r4, r0
	add	r0, r4, #0
	bl	npc_clear_strange_bits
	ldrb	r1, [r4, #0x18]
	lsl	r1, r1, #0x1c
	lsr	r1, r1, #0x1c
	add	r0, r4, #0
	bl	FieldObjectSetDirection
	mov	r0, #0x6
	bl	TestPlayerAvatarFlags
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L308	@cond_branch
	bl	Bike_HandleBumpySlopeJump
	mov	r0, #0x0
	bl	Bike_UpdateBikeCounterSpeed
.L308:
	pop	{r4}
	pop	{r0}
	bx	r0
.L310:
	.align	2, 0
.L309:
	.word	gPlayerAvatar
	.word	gMapObjects
.Lfe92:
	.size	 sub_80597F4,.Lfe92-sub_80597F4
	.align	2, 0
	.globl	GetRivalAvatarGraphicsIdByStateIdAndGender
	.type	 GetRivalAvatarGraphicsIdByStateIdAndGender,function
	.thumb_func
GetRivalAvatarGraphicsIdByStateIdAndGender:
	lsl	r0, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldr	r2, .L312
	lsr	r0, r0, #0x17
	add	r1, r1, r0
	add	r1, r1, r2
	ldrb	r0, [r1]
	bx	lr
.L313:
	.align	2, 0
.L312:
	.word	sRivalAvatarGfxIds
.Lfe93:
	.size	 GetRivalAvatarGraphicsIdByStateIdAndGender,.Lfe93-GetRivalAvatarGraphicsIdByStateIdAndGender
	.align	2, 0
	.type	 GetPlayerAvatarGraphicsIdByStateIdAndGender,function
	.thumb_func
GetPlayerAvatarGraphicsIdByStateIdAndGender:
	lsl	r0, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldr	r2, .L315
	lsr	r0, r0, #0x17
	add	r1, r1, r0
	add	r1, r1, r2
	ldrb	r0, [r1]
	bx	lr
.L316:
	.align	2, 0
.L315:
	.word	sPlayerAvatarGfxIds
.Lfe94:
	.size	 GetPlayerAvatarGraphicsIdByStateIdAndGender,.Lfe94-GetPlayerAvatarGraphicsIdByStateIdAndGender
	.align	2, 0
	.globl	GetPlayerAvatarGraphicsIdByStateId
	.type	 GetPlayerAvatarGraphicsIdByStateId,function
	.thumb_func
GetPlayerAvatarGraphicsIdByStateId:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L318
	ldrb	r1, [r1, #0x7]
	bl	GetPlayerAvatarGraphicsIdByStateIdAndGender
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L319:
	.align	2, 0
.L318:
	.word	gPlayerAvatar
.Lfe95:
	.size	 GetPlayerAvatarGraphicsIdByStateId,.Lfe95-GetPlayerAvatarGraphicsIdByStateId
	.align	2, 0
	.globl	unref_GetRivalAvatarGenderByGraphcsId
	.type	 unref_GetRivalAvatarGenderByGraphcsId,function
	.thumb_func
unref_GetRivalAvatarGenderByGraphcsId:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r1, r0, #0
	cmp	r0, #0x70
	beq	.L329	@cond_branch
	cmp	r0, #0x70
	bgt	.L332	@cond_branch
	cmp	r0, #0x6d
	bgt	.L330	@cond_branch
	cmp	r0, #0x69
	blt	.L330	@cond_branch
	b	.L329
.L332:
	cmp	r1, #0x8a
	beq	.L329	@cond_branch
	cmp	r1, #0xc0
	bne	.L330	@cond_branch
.L329:
	mov	r0, #0x1
	b	.L333
.L330:
	mov	r0, #0x0
.L333:
	pop	{r1}
	bx	r1
.Lfe96:
	.size	 unref_GetRivalAvatarGenderByGraphcsId,.Lfe96-unref_GetRivalAvatarGenderByGraphcsId
	.align	2, 0
	.globl	GetPlayerAvatarGenderByGraphicsId
	.type	 GetPlayerAvatarGenderByGraphicsId,function
	.thumb_func
GetPlayerAvatarGenderByGraphicsId:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r1, r0, #0
	cmp	r0, #0x70
	beq	.L343	@cond_branch
	cmp	r0, #0x70
	bgt	.L346	@cond_branch
	cmp	r0, #0x5d
	bgt	.L344	@cond_branch
	cmp	r0, #0x59
	blt	.L344	@cond_branch
	b	.L343
.L346:
	cmp	r1, #0x8a
	beq	.L343	@cond_branch
	cmp	r1, #0xc0
	bne	.L344	@cond_branch
.L343:
	mov	r0, #0x1
	b	.L347
.L344:
	mov	r0, #0x0
.L347:
	pop	{r1}
	bx	r1
.Lfe97:
	.size	 GetPlayerAvatarGenderByGraphicsId,.Lfe97-GetPlayerAvatarGenderByGraphicsId
	.align	2, 0
	.globl	PartyHasMonWithSurf
	.type	 PartyHasMonWithSurf,function
	.thumb_func
PartyHasMonWithSurf:
	push	{r4, r5, lr}
	mov	r0, #0x8
	bl	TestPlayerAvatarFlags
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L349	@cond_branch
	mov	r5, #0x0
	b	.L350
.L354:
	add	r0, r4, #0
	mov	r1, #0x39
	bl	pokemon_has_move
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L352	@cond_branch
	mov	r0, #0x1
	b	.L357
.L352:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
.L350:
	cmp	r5, #0x5
	bhi	.L349	@cond_branch
	mov	r0, #0x64
	mov	r1, r5
	mul	r1, r1, r0
	ldr	r0, .L358
	add	r4, r1, r0
	add	r0, r4, #0
	mov	r1, #0xb
	bl	GetMonData
	cmp	r0, #0
	bne	.L354	@cond_branch
.L349:
	mov	r0, #0x0
.L357:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L359:
	.align	2, 0
.L358:
	.word	gPlayerParty
.Lfe98:
	.size	 PartyHasMonWithSurf,.Lfe98-PartyHasMonWithSurf
	.align	2, 0
	.globl	IsPlayerSurfingNorth
	.type	 IsPlayerSurfingNorth,function
	.thumb_func
IsPlayerSurfingNorth:
	push	{lr}
	bl	player_get_direction_upper_nybble
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x2
	bne	.L361	@cond_branch
	mov	r0, #0x8
	bl	TestPlayerAvatarFlags
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L361	@cond_branch
	mov	r0, #0x1
	b	.L363
.L361:
	mov	r0, #0x0
.L363:
	pop	{r1}
	bx	r1
.Lfe99:
	.size	 IsPlayerSurfingNorth,.Lfe99-IsPlayerSurfingNorth
	.align	2, 0
	.globl	IsPlayerFacingSurfableFishableWater
	.type	 IsPlayerFacingSurfableFishableWater,function
	.thumb_func
IsPlayerFacingSurfableFishableWater:
	push	{r4, r5, lr}
	add	sp, sp, #0xfffffffc
	ldr	r0, .L368
	ldrb	r0, [r0, #0x5]
	lsl	r4, r0, #0x3
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L368+0x4
	add	r4, r4, r0
	ldrh	r1, [r4, #0x10]
	mov	r0, sp
	strh	r1, [r0]
	ldrh	r0, [r4, #0x12]
	mov	r5, sp
	add	r5, r5, #0x2
	strh	r0, [r5]
	ldrb	r0, [r4, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	mov	r1, sp
	add	r2, r5, #0
	bl	MoveCoords
	mov	r0, sp
	mov	r2, #0x0
	ldrsh	r1, [r0, r2]
	mov	r0, #0x0
	ldrsh	r2, [r5, r0]
	ldrb	r3, [r4, #0x18]
	lsl	r3, r3, #0x1c
	lsr	r3, r3, #0x1c
	add	r0, r4, #0
	bl	npc_block_way
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	bne	.L365	@cond_branch
	bl	PlayerGetZCoord
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	bne	.L365	@cond_branch
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x0
	ldrsh	r1, [r5, r2]
	bl	MapGridGetMetatileBehaviorAt
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	MetatileBehavior_IsSurfableFishableWater
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L365	@cond_branch
	mov	r0, #0x1
	b	.L367
.L369:
	.align	2, 0
.L368:
	.word	gPlayerAvatar
	.word	gMapObjects
.L365:
	mov	r0, #0x0
.L367:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe100:
	.size	 IsPlayerFacingSurfableFishableWater,.Lfe100-IsPlayerFacingSurfableFishableWater
	.align	2, 0
	.globl	ClearPlayerAvatarInfo
	.type	 ClearPlayerAvatarInfo,function
	.thumb_func
ClearPlayerAvatarInfo:
	push	{lr}
	ldr	r0, .L371
	mov	r1, #0x0
	mov	r2, #0x24
	bl	memset
	pop	{r0}
	bx	r0
.L372:
	.align	2, 0
.L371:
	.word	gPlayerAvatar
.Lfe101:
	.size	 ClearPlayerAvatarInfo,.Lfe101-ClearPlayerAvatarInfo
	.align	2, 0
	.globl	SetPlayerAvatarStateMask
	.type	 SetPlayerAvatarStateMask,function
	.thumb_func
SetPlayerAvatarStateMask:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r3, .L374
	ldrb	r2, [r3]
	mov	r1, #0xe0
	and	r1, r1, r2
	orr	r0, r0, r1
	strb	r0, [r3]
	bx	lr
.L375:
	.align	2, 0
.L374:
	.word	gPlayerAvatar
.Lfe102:
	.size	 SetPlayerAvatarStateMask,.Lfe102-SetPlayerAvatarStateMask
	.align	2, 0
	.type	 GetPlayerAvatarStateTransitionByGraphicsId,function
	.thumb_func
GetPlayerAvatarStateTransitionByGraphicsId:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r2, #0x0
	ldr	r3, .L384
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r4, r0, #0x1
	add	r6, r3, #0x1
.L380:
	lsl	r0, r2, #0x1
	add	r1, r0, r4
	add	r0, r1, r3
	ldrb	r0, [r0]
	cmp	r0, r5
	bne	.L379	@cond_branch
	add	r0, r1, r6
	ldrb	r0, [r0]
	b	.L383
.L385:
	.align	2, 0
.L384:
	.word	gUnknown_0830FC64
.L379:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x4
	bls	.L380	@cond_branch
	mov	r0, #0x1
.L383:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe103:
	.size	 GetPlayerAvatarStateTransitionByGraphicsId,.Lfe103-GetPlayerAvatarStateTransitionByGraphicsId
	.align	2, 0
	.globl	GetPlayerAvatarGraphicsIdByCurrentState
	.type	 GetPlayerAvatarGraphicsIdByCurrentState,function
	.thumb_func
GetPlayerAvatarGraphicsIdByCurrentState:
	push	{r4, r5, r6, lr}
	ldr	r0, .L394
	ldrb	r5, [r0]
	mov	r2, #0x0
	ldr	r3, .L394+0x4
	ldrb	r1, [r0, #0x7]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r4, r0, #0x1
	add	r6, r3, #0x1
.L390:
	lsl	r0, r2, #0x1
	add	r1, r0, r4
	add	r0, r1, r6
	ldrb	r0, [r0]
	and	r0, r0, r5
	cmp	r0, #0
	beq	.L389	@cond_branch
	add	r0, r1, r3
	ldrb	r0, [r0]
	b	.L393
.L395:
	.align	2, 0
.L394:
	.word	gPlayerAvatar
	.word	gUnknown_0830FC64
.L389:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x4
	bls	.L390	@cond_branch
	mov	r0, #0x0
.L393:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe104:
	.size	 GetPlayerAvatarGraphicsIdByCurrentState,.Lfe104-GetPlayerAvatarGraphicsIdByCurrentState
	.align	2, 0
	.globl	SetPlayerAvatarExtraStateTransition
	.type	 SetPlayerAvatarExtraStateTransition,function
	.thumb_func
SetPlayerAvatarExtraStateTransition:
	push	{r4, r5, lr}
	add	r4, r1, #0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r5, .L397
	ldrb	r1, [r5, #0x7]
	bl	GetPlayerAvatarStateTransitionByGraphicsId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	orr	r0, r0, r4
	ldrb	r1, [r5, #0x1]
	orr	r0, r0, r1
	strb	r0, [r5, #0x1]
	bl	DoPlayerAvatarTransition
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L398:
	.align	2, 0
.L397:
	.word	gPlayerAvatar
.Lfe105:
	.size	 SetPlayerAvatarExtraStateTransition,.Lfe105-SetPlayerAvatarExtraStateTransition
	.align	2, 0
	.globl	InitPlayerAvatar
	.type	 InitPlayerAvatar,function
	.thumb_func
InitPlayerAvatar:
	push	{r4, r5, r6, lr}
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6}
	add	sp, sp, #0xffffffe8
	add	r4, r0, #0
	add	r5, r1, #0
	mov	r9, r2
	mov	r8, r3
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	mov	r0, r9
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r9, r0
	mov	r1, r8
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r8, r1
	mov	r1, sp
	mov	r0, #0xff
	strb	r0, [r1]
	mov	r0, #0x0
	mov	r1, r8
	bl	GetPlayerAvatarGraphicsIdByStateIdAndGender
	mov	r1, sp
	mov	r3, #0x0
	strb	r0, [r1, #0x1]
	mov	r0, sp
	lsl	r4, r4, #0x10
	asr	r4, r4, #0x10
	sub	r4, r4, #0x7
	mov	r6, #0x0
	strh	r4, [r0, #0x4]
	lsl	r5, r5, #0x10
	asr	r5, r5, #0x10
	sub	r5, r5, #0x7
	strh	r5, [r0, #0x6]
	strb	r6, [r0, #0x8]
	mov	r0, #0xb
	strb	r0, [r1, #0x9]
	mov	r2, sp
	ldrb	r1, [r2, #0xa]
	sub	r0, r0, #0x1b
	and	r0, r0, r1
	strb	r0, [r2, #0xa]
	mov	r0, sp
	strb	r6, [r0, #0xa]
	strh	r3, [r0, #0xc]
	strh	r3, [r0, #0xe]
	str	r3, [sp, #0x10]
	strh	r3, [r0, #0x14]
	bl	SpawnSpecialFieldObject
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	lsl	r4, r5, #0x3
	add	r4, r4, r5
	lsl	r4, r4, #0x2
	ldr	r0, .L400
	add	r4, r4, r0
	ldrb	r0, [r4, #0x2]
	mov	r1, #0x1
	orr	r0, r0, r1
	strb	r0, [r4, #0x2]
	bl	sub_8126B54
	strb	r0, [r4, #0x1b]
	add	r0, r4, #0
	mov	r1, r9
	bl	FieldObjectTurn
	bl	ClearPlayerAvatarInfo
	ldr	r0, .L400+0x4
	strb	r6, [r0, #0x2]
	strb	r6, [r0, #0x3]
	strb	r5, [r0, #0x5]
	ldrb	r1, [r4, #0x4]
	strb	r1, [r0, #0x4]
	mov	r1, r8
	strb	r1, [r0, #0x7]
	mov	r0, #0x21
	bl	SetPlayerAvatarStateMask
	add	sp, sp, #0x18
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L401:
	.align	2, 0
.L400:
	.word	gMapObjects
	.word	gPlayerAvatar
.Lfe106:
	.size	 InitPlayerAvatar,.Lfe106-InitPlayerAvatar
	.align	2, 0
	.globl	sub_8059B88
	.type	 sub_8059B88,function
	.thumb_func
sub_8059B88:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r6, .L404
	ldr	r5, .L404+0x4
	ldrb	r0, [r5, #0x5]
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r6
	mov	r0, #0x1
	and	r4, r4, r0
	lsl	r3, r4, #0x5
	ldrb	r2, [r1, #0x1]
	mov	r0, #0x21
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r3
	strb	r0, [r1, #0x1]
	mov	r0, #0x8
	bl	TestPlayerAvatarFlags
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L403	@cond_branch
	ldr	r2, .L404+0x8
	ldrb	r1, [r5, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	ldrb	r0, [r0, #0x1a]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	add	r1, r1, #0x3e
	lsl	r3, r4, #0x2
	ldrb	r2, [r1]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r3
	strb	r0, [r1]
.L403:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L405:
	.align	2, 0
.L404:
	.word	gMapObjects
	.word	gPlayerAvatar
	.word	gSprites
.Lfe107:
	.size	 sub_8059B88,.Lfe107-sub_8059B88
	.align	2, 0
	.globl	sub_8059BF4
	.type	 sub_8059BF4,function
	.thumb_func
sub_8059BF4:
	push	{r4, r5, lr}
	ldr	r5, .L407
	ldrb	r0, [r5, #0x5]
	lsl	r4, r0, #0x3
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L407+0x4
	add	r4, r4, r0
	mov	r0, #0x5
	bl	GetPlayerAvatarGraphicsIdByStateId
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	sub_805B980
	ldrb	r1, [r5, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L407+0x8
	add	r0, r0, r1
	mov	r1, #0x0
	bl	StartSpriteAnim
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L408:
	.align	2, 0
.L407:
	.word	gPlayerAvatar
	.word	gMapObjects
	.word	gSprites
.Lfe108:
	.size	 sub_8059BF4,.Lfe108-sub_8059BF4
	.align	2, 0
	.globl	sub_8059C3C
	.type	 sub_8059C3C,function
	.thumb_func
sub_8059C3C:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	ldr	r6, .L410
	ldrb	r0, [r6, #0x5]
	lsl	r4, r0, #0x3
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L410+0x4
	add	r4, r4, r0
	mov	r0, #0x6
	bl	GetPlayerAvatarGraphicsIdByStateId
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	sub_805B980
	ldrb	r0, [r6, #0x4]
	lsl	r4, r0, #0x4
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L410+0x8
	add	r4, r4, r0
	add	r0, r5, #0
	bl	sub_805FDE8
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	StartSpriteAnim
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L411:
	.align	2, 0
.L410:
	.word	gPlayerAvatar
	.word	gMapObjects
	.word	gSprites
.Lfe109:
	.size	 sub_8059C3C,.Lfe109-sub_8059C3C
	.align	2, 0
	.globl	sub_8059C94
	.type	 sub_8059C94,function
	.thumb_func
sub_8059C94:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	ldr	r6, .L413
	ldrb	r0, [r6, #0x5]
	lsl	r4, r0, #0x3
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L413+0x4
	add	r4, r4, r0
	mov	r0, #0x2
	bl	GetPlayerAvatarGraphicsIdByStateId
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	sub_805B980
	ldrb	r0, [r6, #0x4]
	lsl	r4, r0, #0x4
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L413+0x8
	mov	r8, r0
	add	r4, r4, r8
	add	r0, r5, #0
	bl	sub_805FD98
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	StartSpriteAnim
	ldrb	r1, [r6, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r8
	mov	r1, #0x1
	bl	SeekSpriteAnim
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L414:
	.align	2, 0
.L413:
	.word	gPlayerAvatar
	.word	gMapObjects
	.word	gSprites
.Lfe110:
	.size	 sub_8059C94,.Lfe110-sub_8059C94
	.align	2, 0
	.globl	sub_8059D08
	.type	 sub_8059D08,function
	.thumb_func
sub_8059D08:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	ldr	r6, .L416
	ldrb	r0, [r6, #0x5]
	lsl	r4, r0, #0x3
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L416+0x4
	add	r4, r4, r0
	mov	r0, #0x7
	bl	GetPlayerAvatarGraphicsIdByStateId
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	sub_805B980
	ldrb	r0, [r6, #0x4]
	lsl	r4, r0, #0x4
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L416+0x8
	add	r4, r4, r0
	add	r0, r5, #0
	bl	FieldObjectDirectionToImageAnimId
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	StartSpriteAnim
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L417:
	.align	2, 0
.L416:
	.word	gPlayerAvatar
	.word	gMapObjects
	.word	gSprites
.Lfe111:
	.size	 sub_8059D08,.Lfe111-sub_8059D08
	.align	2, 0
	.type	 sub_8059D60,function
	.thumb_func
sub_8059D60:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #0xfffffffc
	add	r5, r0, #0
	ldrb	r0, [r5, #0x1e]
	mov	r8, r0
	mov	r1, #0x0
	mov	r0, sp
	strh	r1, [r0]
	mov	r6, #0x1
	ldr	r1, .L425
	mov	r9, r1
	mov	r4, sp
	mov	r7, sp
	add	r7, r7, #0x2
.L422:
	mov	r1, #0x0
	ldrsh	r0, [r4, r1]
	lsl	r0, r0, #0x2
	add	r0, r0, r9
	ldr	r1, [r0]
	mov	r0, r8
	bl	_call_via_r1
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L421	@cond_branch
	ldrb	r0, [r5, #0x18]
	lsr	r0, r0, #0x4
	cmp	r6, r0
	bne	.L421	@cond_branch
	ldrh	r0, [r5, #0x10]
	strh	r0, [r4]
	ldrh	r0, [r5, #0x12]
	strh	r0, [r7]
	add	r0, r6, #0
	mov	r1, sp
	add	r2, r7, #0
	bl	MoveCoords
	ldrb	r0, [r5, #0x1b]
	mov	r1, #0x0
	ldrsh	r2, [r4, r1]
	mov	r1, #0x0
	ldrsh	r3, [r7, r1]
	add	r1, r6, #0
	bl	sub_8126BC4
	b	.L418
.L426:
	.align	2, 0
.L425:
	.word	gUnknown_0830FC78
.L421:
	ldrh	r1, [r4]
	add	r1, r1, #0x1
	strh	r1, [r4]
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	cmp	r1, #0x3
	ble	.L422	@cond_branch
	ldrb	r0, [r5, #0x1b]
	bl	objid_set_invisible
.L418:
	add	sp, sp, #0x4
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe112:
	.size	 sub_8059D60,.Lfe112-sub_8059D60
	.align	2, 0
	.type	 StartStrengthAnim,function
	.thumb_func
StartStrengthAnim:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	ldr	r6, .L428
	add	r0, r6, #0
	mov	r1, #0xff
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L428+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	strh	r4, [r1, #0xa]
	strh	r5, [r1, #0xc]
	bl	_call_via_r6
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L429:
	.align	2, 0
.L428:
	.word	sub_8059E2C
	.word	gTasks
.Lfe113:
	.size	 StartStrengthAnim,.Lfe113-StartStrengthAnim
	.align	2, 0
	.type	 sub_8059E2C,function
	.thumb_func
sub_8059E2C:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r6, .L435
	ldr	r2, .L435+0x4
	ldr	r5, .L435+0x8
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r4, r1, r2
.L431:
	mov	r0, #0x8
	ldrsh	r3, [r4, r0]
	lsl	r3, r3, #0x2
	add	r3, r3, r6
	ldr	r0, .L435+0xc
	ldrb	r0, [r0, #0x5]
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r5
	mov	r2, #0xa
	ldrsh	r0, [r4, r2]
	lsl	r2, r0, #0x3
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	add	r2, r2, r5
	ldr	r3, [r3]
	add	r0, r4, #0
	bl	_call_via_r3
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L431	@cond_branch
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L436:
	.align	2, 0
.L435:
	.word	gUnknown_0830FC88
	.word	gTasks
	.word	gMapObjects
	.word	gPlayerAvatar
.Lfe114:
	.size	 sub_8059E2C,.Lfe114-sub_8059E2C
	.align	2, 0
	.globl	sub_8059E84
	.type	 sub_8059E84,function
	.thumb_func
sub_8059E84:
	push	{r4, lr}
	add	r4, r0, #0
	bl	ScriptContext2_Enable
	ldr	r1, .L438
	mov	r0, #0x1
	strb	r0, [r1, #0x6]
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L439:
	.align	2, 0
.L438:
	.word	gPlayerAvatar
.Lfe115:
	.size	 sub_8059E84,.Lfe115-sub_8059E84
	.align	2, 0
	.globl	sub_8059EA4
	.type	 sub_8059EA4,function
	.thumb_func
sub_8059EA4:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	add	r5, r1, #0
	add	r4, r2, #0
	add	r0, r5, #0
	bl	FieldObjectIsSpecialAnimOrDirectionSequenceAnimActive
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L441	@cond_branch
	add	r0, r4, #0
	bl	FieldObjectIsSpecialAnimOrDirectionSequenceAnimActive
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L441	@cond_branch
	add	r0, r5, #0
	bl	FieldObjectClearAnimIfSpecialAnimFinished
	add	r0, r4, #0
	bl	FieldObjectClearAnimIfSpecialAnimFinished
	ldrb	r0, [r6, #0xc]
	bl	GetStepInPlaceDelay16AnimId
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r5, #0
	bl	FieldObjectSetSpecialAnim
	ldrb	r0, [r6, #0xc]
	bl	GetSimpleGoAnimId
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	FieldObjectSetSpecialAnim
	ldr	r2, .L442
	mov	r1, #0x10
	ldrsh	r0, [r4, r1]
	str	r0, [r2]
	mov	r1, #0x12
	ldrsh	r0, [r4, r1]
	str	r0, [r2, #0x4]
	ldrb	r0, [r4, #0xb]
	lsr	r0, r0, #0x4
	str	r0, [r2, #0x8]
	ldr	r3, .L442+0x4
	ldrb	r1, [r4, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	ldrb	r0, [r0, #0x5]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1e
	str	r0, [r2, #0xc]
	mov	r0, #0xa
	bl	FieldEffectStart
	mov	r0, #0xd6
	bl	PlaySE
	ldrh	r0, [r6, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r6, #0x8]
.L441:
	mov	r0, #0x0
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L443:
	.align	2, 0
.L442:
	.word	gFieldEffectArguments
	.word	gSprites
.Lfe116:
	.size	 sub_8059EA4,.Lfe116-sub_8059EA4
	.align	2, 0
	.globl	sub_8059F40
	.type	 sub_8059F40,function
	.thumb_func
sub_8059F40:
	push	{r4, r5, lr}
	add	r4, r1, #0
	add	r5, r2, #0
	add	r0, r4, #0
	bl	FieldObjectCheckIfSpecialAnimFinishedOrInactive
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L445	@cond_branch
	add	r0, r5, #0
	bl	FieldObjectCheckIfSpecialAnimFinishedOrInactive
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L445	@cond_branch
	add	r0, r4, #0
	bl	FieldObjectClearAnimIfSpecialAnimFinished
	add	r0, r5, #0
	bl	FieldObjectClearAnimIfSpecialAnimFinished
	ldr	r1, .L446
	mov	r0, #0x0
	strb	r0, [r1, #0x6]
	bl	ScriptContext2_Disable
	ldr	r0, .L446+0x4
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
.L445:
	mov	r0, #0x0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L447:
	.align	2, 0
.L446:
	.word	gPlayerAvatar
	.word	sub_8059E2C
.Lfe117:
	.size	 sub_8059F40,.Lfe117-sub_8059F40
	.align	2, 0
	.type	 DoPlayerMatJump,function
	.thumb_func
DoPlayerMatJump:
	push	{r4, lr}
	ldr	r4, .L449
	add	r0, r4, #0
	mov	r1, #0xff
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	_call_via_r4
	pop	{r4}
	pop	{r0}
	bx	r0
.L450:
	.align	2, 0
.L449:
	.word	DoPlayerAvatarSecretBaseMatJump
.Lfe118:
	.size	 DoPlayerMatJump,.Lfe118-DoPlayerMatJump
	.align	2, 0
	.type	 DoPlayerAvatarSecretBaseMatJump,function
	.thumb_func
DoPlayerAvatarSecretBaseMatJump:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r5, .L456
	ldr	r2, .L456+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r4, r1, r2
.L452:
	mov	r0, #0x8
	ldrsh	r2, [r4, r0]
	lsl	r2, r2, #0x2
	add	r2, r2, r5
	ldr	r0, .L456+0x8
	ldrb	r0, [r0, #0x5]
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L456+0xc
	add	r1, r1, r0
	ldr	r2, [r2]
	add	r0, r4, #0
	bl	_call_via_r2
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L452	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L457:
	.align	2, 0
.L456:
	.word	sPlayerAvatarSecretBaseMatJump
	.word	gTasks
	.word	gPlayerAvatar
	.word	gMapObjects
.Lfe119:
	.size	 DoPlayerAvatarSecretBaseMatJump,.Lfe119-DoPlayerAvatarSecretBaseMatJump
	.align	2, 0
	.globl	PlayerAvatar_DoSecretBaseMatJump
	.type	 PlayerAvatar_DoSecretBaseMatJump,function
	.thumb_func
PlayerAvatar_DoSecretBaseMatJump:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	add	r4, r1, #0
	ldr	r5, .L461
	mov	r0, #0x1
	strb	r0, [r5, #0x6]
	add	r0, r4, #0
	bl	FieldObjectClearAnimIfSpecialAnimFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L459	@cond_branch
	mov	r0, #0xa
	bl	PlaySE
	ldrb	r0, [r4, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	bl	sub_806084C
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	FieldObjectSetSpecialAnim
	ldrh	r0, [r6, #0xa]
	add	r0, r0, #0x1
	strh	r0, [r6, #0xa]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x1
	ble	.L459	@cond_branch
	mov	r0, #0x0
	strb	r0, [r5, #0x6]
	ldrb	r0, [r5, #0x1]
	mov	r1, #0x20
	orr	r0, r0, r1
	strb	r0, [r5, #0x1]
	ldr	r0, .L461+0x4
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
.L459:
	mov	r0, #0x0
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L462:
	.align	2, 0
.L461:
	.word	gPlayerAvatar
	.word	DoPlayerAvatarSecretBaseMatJump
.Lfe120:
	.size	 PlayerAvatar_DoSecretBaseMatJump,.Lfe120-PlayerAvatar_DoSecretBaseMatJump
	.align	2, 0
	.type	 sub_805A06C,function
	.thumb_func
sub_805A06C:
	push	{r4, lr}
	ldr	r4, .L464
	add	r0, r4, #0
	mov	r1, #0xff
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	_call_via_r4
	pop	{r4}
	pop	{r0}
	bx	r0
.L465:
	.align	2, 0
.L464:
	.word	sub_805A08C
.Lfe121:
	.size	 sub_805A06C,.Lfe121-sub_805A06C
	.align	2, 0
	.type	 sub_805A08C,function
	.thumb_func
sub_805A08C:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r5, .L471
	ldr	r2, .L471+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r4, r1, r2
.L467:
	mov	r0, #0x8
	ldrsh	r2, [r4, r0]
	lsl	r2, r2, #0x2
	add	r2, r2, r5
	ldr	r0, .L471+0x8
	ldrb	r0, [r0, #0x5]
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L471+0xc
	add	r1, r1, r0
	ldr	r2, [r2]
	add	r0, r4, #0
	bl	_call_via_r2
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L467	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L472:
	.align	2, 0
.L471:
	.word	gUnknown_0830FC98
	.word	gTasks
	.word	gPlayerAvatar
	.word	gMapObjects
.Lfe122:
	.size	 sub_805A08C,.Lfe122-sub_805A08C
	.align	2, 0
	.globl	sub_805A0D8
	.type	 sub_805A0D8,function
	.thumb_func
sub_805A0D8:
	push	{lr}
	ldrh	r2, [r0, #0x8]
	add	r2, r2, #0x1
	strh	r2, [r0, #0x8]
	ldrb	r1, [r1, #0x18]
	lsr	r1, r1, #0x4
	strh	r1, [r0, #0xa]
	ldr	r1, .L474
	mov	r0, #0x1
	strb	r0, [r1, #0x6]
	bl	ScriptContext2_Enable
	mov	r0, #0x2d
	bl	PlaySE
	mov	r0, #0x1
	pop	{r1}
	bx	r1
.L475:
	.align	2, 0
.L474:
	.word	gPlayerAvatar
.Lfe123:
	.size	 sub_805A0D8,.Lfe123-sub_805A0D8
	.section .rodata
.LC213:
	.byte	0x3
	.byte	0x4
	.byte	0x2
	.byte	0x1
.text
	.align	2, 0
	.globl	sub_805A100
	.type	 sub_805A100,function
	.thumb_func
sub_805A100:
	push	{r4, r5, r6, lr}
	add	sp, sp, #0xfffffffc
	add	r4, r0, #0
	add	r5, r1, #0
	ldr	r1, .L480
	mov	r0, sp
	mov	r2, #0x4
	bl	memcpy
	add	r0, r5, #0
	bl	FieldObjectClearAnimIfSpecialAnimFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L477	@cond_branch
	ldrb	r0, [r5, #0x18]
	lsr	r0, r0, #0x4
	sub	r0, r0, #0x1
	add	r0, r0, sp
	ldrb	r6, [r0]
	add	r0, r6, #0
	bl	GetFaceDirectionAnimId
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r5, #0
	bl	FieldObjectSetSpecialAnim
	ldrb	r0, [r4, #0xa]
	cmp	r6, r0
	bne	.L478	@cond_branch
	ldrh	r0, [r4, #0xc]
	add	r0, r0, #0x1
	strh	r0, [r4, #0xc]
.L478:
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	mov	r1, #0xc
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x3
	ble	.L477	@cond_branch
	ldrb	r0, [r4, #0xa]
	bl	GetOppositeDirection
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r6, r0
	bne	.L477	@cond_branch
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
.L477:
	mov	r0, #0x0
	add	sp, sp, #0x4
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L481:
	.align	2, 0
.L480:
	.word	.LC213
.Lfe124:
	.size	 sub_805A100,.Lfe124-sub_805A100
	.section .rodata
.LC215:
	.byte	0x10
	.byte	0x10
	.byte	0x11
	.byte	0x12
	.byte	0x13
.text
	.align	2, 0
	.globl	sub_805A178
	.type	 sub_805A178,function
	.thumb_func
sub_805A178:
	push	{r4, r5, lr}
	add	sp, sp, #0xfffffff8
	add	r5, r0, #0
	add	r4, r1, #0
	ldr	r1, .L484
	mov	r0, sp
	mov	r2, #0x5
	bl	memcpy
	add	r0, r4, #0
	bl	FieldObjectClearAnimIfSpecialAnimFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L483	@cond_branch
	mov	r1, #0xc
	ldrsh	r0, [r5, r1]
	add	r0, r0, sp
	ldrb	r1, [r0]
	add	r0, r4, #0
	bl	FieldObjectSetSpecialAnim
	mov	r0, #0x1
	strh	r0, [r5, #0x8]
.L483:
	mov	r0, #0x0
	add	sp, sp, #0x8
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L485:
	.align	2, 0
.L484:
	.word	.LC215
.Lfe125:
	.size	 sub_805A178,.Lfe125-sub_805A178
	.align	2, 0
	.globl	sub_805A1B8
	.type	 sub_805A1B8,function
	.thumb_func
sub_805A1B8:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	add	r0, r5, #0
	bl	FieldObjectClearAnimIfSpecialAnimFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L487	@cond_branch
	ldrb	r0, [r4, #0xa]
	bl	GetOppositeDirection
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetSimpleGoAnimId
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r5, #0
	bl	FieldObjectSetSpecialAnim
	bl	ScriptContext2_Disable
	ldr	r1, .L488
	mov	r0, #0x0
	strb	r0, [r1, #0x6]
	ldr	r0, .L488+0x4
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
.L487:
	mov	r0, #0x0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L489:
	.align	2, 0
.L488:
	.word	gPlayerAvatar
	.word	sub_805A08C
.Lfe126:
	.size	 sub_805A1B8,.Lfe126-sub_805A1B8
	.align	2, 0
	.globl	sub_805A20C
	.type	 sub_805A20C,function
	.thumb_func
sub_805A20C:
	push	{r4, r5, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	ScriptContext2_Enable
	bl	Overworld_ClearSavedMusic
	bl	Overworld_ChangeMusicToDefault
	ldr	r2, .L491
	ldrb	r1, [r2]
	mov	r0, #0xf7
	and	r0, r0, r1
	mov	r1, #0x1
	orr	r0, r0, r1
	strb	r0, [r2]
	mov	r0, #0x1
	strb	r0, [r2, #0x6]
	ldr	r5, .L491+0x4
	add	r0, r5, #0
	mov	r1, #0xff
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L491+0x8
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	strh	r4, [r1, #0x8]
	bl	_call_via_r5
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L492:
	.align	2, 0
.L491:
	.word	gPlayerAvatar
	.word	taskFF_0805D1D4
	.word	gTasks
.Lfe127:
	.size	 sub_805A20C,.Lfe127-sub_805A20C
	.align	2, 0
	.type	 taskFF_0805D1D4,function
	.thumb_func
taskFF_0805D1D4:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r0, .L496
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L496+0x4
	add	r5, r0, r1
	add	r0, r5, #0
	bl	FieldObjectIsSpecialAnimOrDirectionSequenceAnimActive
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L494	@cond_branch
	add	r0, r5, #0
	bl	FieldObjectClearAnimIfSpecialAnimFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L493	@cond_branch
.L494:
	ldrb	r0, [r5, #0x1a]
	mov	r1, #0x2
	bl	sub_8127ED0
	ldr	r0, .L496+0x8
	lsl	r4, r6, #0x2
	add	r4, r4, r6
	lsl	r4, r4, #0x3
	add	r4, r4, r0
	ldrb	r0, [r4, #0x8]
	bl	sub_80608D0
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r5, #0
	bl	FieldObjectSetSpecialAnim
	ldr	r0, .L496+0xc
	str	r0, [r4]
.L493:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L497:
	.align	2, 0
.L496:
	.word	gPlayerAvatar
	.word	gMapObjects
	.word	gTasks
	.word	sub_805A2D0
.Lfe128:
	.size	 taskFF_0805D1D4,.Lfe128-taskFF_0805D1D4
	.align	2, 0
	.type	 sub_805A2D0,function
	.thumb_func
sub_805A2D0:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r6, .L500
	ldrb	r1, [r6, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L500+0x4
	add	r4, r0, r1
	add	r0, r4, #0
	bl	FieldObjectClearAnimIfSpecialAnimFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L499	@cond_branch
	mov	r0, #0x0
	bl	GetPlayerAvatarGraphicsIdByStateId
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	sub_805B980
	ldrb	r0, [r4, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	bl	GetFaceDirectionAnimId
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	FieldObjectSetSpecialAnim
	mov	r0, #0x0
	strb	r0, [r6, #0x6]
	bl	ScriptContext2_Disable
	ldrb	r1, [r4, #0x1a]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L500+0x8
	add	r0, r0, r1
	bl	DestroySprite
	add	r0, r5, #0
	bl	DestroyTask
.L499:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L501:
	.align	2, 0
.L500:
	.word	gPlayerAvatar
	.word	gMapObjects
	.word	gSprites
.Lfe129:
	.size	 sub_805A2D0,.Lfe129-sub_805A2D0
	.section .rodata
	.align	2, 0
	.type	 sFishingStateFuncs,object
sFishingStateFuncs:
	.word	Fishing1
	.word	Fishing2
	.word	Fishing3
	.word	Fishing4
	.word	Fishing5
	.word	Fishing6
	.word	Fishing7
	.word	Fishing8
	.word	Fishing9
	.word	Fishing10
	.word	Fishing11
	.word	Fishing12
	.word	Fishing13
	.word	Fishing14
	.word	Fishing15
	.word	Fishing16
	.size	 sFishingStateFuncs,64
.text
	.align	2, 0
	.globl	StartFishing
	.type	 StartFishing,function
	.thumb_func
StartFishing:
	push	{r4, r5, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r5, .L503
	add	r0, r5, #0
	mov	r1, #0xff
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L503+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	strh	r4, [r1, #0x26]
	bl	_call_via_r5
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L504:
	.align	2, 0
.L503:
	.word	Task_Fishing
	.word	gTasks
.Lfe130:
	.size	 StartFishing,.Lfe130-StartFishing
	.align	2, 0
	.type	 Task_Fishing,function
	.thumb_func
Task_Fishing:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r5, .L510
	ldr	r2, .L510+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r4, r1, r2
.L506:
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	_call_via_r1
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L506	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L511:
	.align	2, 0
.L510:
	.word	sFishingStateFuncs
	.word	gTasks
.Lfe131:
	.size	 Task_Fishing,.Lfe131-Task_Fishing
	.align	2, 0
	.globl	Fishing1
	.type	 Fishing1,function
	.thumb_func
Fishing1:
	push	{r4, lr}
	add	r4, r0, #0
	bl	ScriptContext2_Enable
	ldr	r1, .L513
	mov	r0, #0x1
	strb	r0, [r1, #0x6]
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L514:
	.align	2, 0
.L513:
	.word	gPlayerAvatar
.Lfe132:
	.size	 Fishing1,.Lfe132-Fishing1
	.section .rodata
	.align	1, 0
.LC240:
	.short	0x1
	.short	0x1
	.short	0x1
	.align	1, 0
.LC242:
	.short	0x1
	.short	0x3
	.short	0x6
.text
	.align	2, 0
	.globl	Fishing2
	.type	 Fishing2,function
	.thumb_func
Fishing2:
	push	{r4, r5, r6, lr}
	add	sp, sp, #0xfffffff0
	add	r5, r0, #0
	ldr	r1, .L516
	mov	r0, sp
	mov	r2, #0x6
	bl	memcpy
	add	r4, sp, #0x8
	ldr	r1, .L516+0x4
	add	r0, r4, #0
	mov	r2, #0x6
	bl	memcpy
	mov	r0, #0x0
	strh	r0, [r5, #0x20]
	bl	Random
	mov	r2, #0x26
	ldrsh	r1, [r5, r2]
	lsl	r1, r1, #0x1
	mov	r2, sp
	add	r6, r2, r1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r4, r4, r1
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	bl	__modsi3
	ldrh	r1, [r6]
	add	r1, r1, r0
	strh	r1, [r5, #0x22]
	ldr	r3, .L516+0x8
	ldr	r2, .L516+0xc
	ldrb	r1, [r2, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	ldrb	r0, [r0, #0x5]
	strh	r0, [r5, #0x24]
	ldrb	r0, [r2, #0x5]
	lsl	r4, r0, #0x3
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	add	r4, r4, r3
	add	r0, r4, #0
	bl	FieldObjectClearAnimIfSpecialAnimActive
	ldrb	r0, [r4, #0x1]
	mov	r1, #0x8
	orr	r0, r0, r1
	strb	r0, [r4, #0x1]
	ldrb	r0, [r4, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	bl	sub_8059C3C
	ldrh	r0, [r5, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x8]
	mov	r0, #0x0
	add	sp, sp, #0x10
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L517:
	.align	2, 0
.L516:
	.word	.LC240
	.word	.LC242
	.word	gMapObjects
	.word	gPlayerAvatar
.Lfe133:
	.size	 Fishing2,.Lfe133-Fishing2
	.align	2, 0
	.globl	Fishing3
	.type	 Fishing3,function
	.thumb_func
Fishing3:
	push	{r4, lr}
	add	r4, r0, #0
	bl	sub_805A954
	ldrh	r0, [r4, #0xa]
	add	r0, r0, #0x1
	strh	r0, [r4, #0xa]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x3b
	ble	.L519	@cond_branch
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
.L519:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe134:
	.size	 Fishing3,.Lfe134-Fishing3
	.align	2, 0
	.globl	Fishing4
	.type	 Fishing4,function
	.thumb_func
Fishing4:
	push	{r4, lr}
	add	r4, r0, #0
	bl	MenuDisplayMessageBox
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	mov	r1, #0x0
	strh	r0, [r4, #0x8]
	strh	r1, [r4, #0xa]
	strh	r1, [r4, #0xc]
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0xa
	bl	__umodsi3
	add	r1, r0, #0
	add	r0, r1, #0x1
	strh	r0, [r4, #0xe]
	mov	r2, #0x20
	ldrsh	r0, [r4, r2]
	cmp	r0, #0
	bne	.L521	@cond_branch
	add	r0, r1, #0x4
	strh	r0, [r4, #0xe]
.L521:
	mov	r1, #0xe
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x9
	ble	.L522	@cond_branch
	mov	r0, #0xa
	strh	r0, [r4, #0xe]
.L522:
	mov	r0, #0x1
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe135:
	.size	 Fishing4,.Lfe135-Fishing4
	.section .rodata
.LC247:
	.byte	0xaf
	.byte	0xff
.text
	.align	2, 0
	.globl	Fishing5
	.type	 Fishing5,function
	.thumb_func
Fishing5:
	push	{r4, lr}
	add	sp, sp, #0xfffffffc
	add	r4, r0, #0
	ldr	r1, .L532
	mov	r0, sp
	mov	r2, #0x2
	bl	memcpy
	bl	sub_805A954
	ldrh	r0, [r4, #0xa]
	add	r2, r0, #0x1
	strh	r2, [r4, #0xa]
	ldr	r0, .L532+0x4
	ldrh	r0, [r0, #0x2e]
	mov	r1, #0x1
	and	r1, r1, r0
	cmp	r1, #0
	beq	.L524	@cond_branch
	mov	r0, #0xb
	strh	r0, [r4, #0x8]
	mov	r1, #0x20
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	beq	.L525	@cond_branch
	mov	r0, #0xc
	strh	r0, [r4, #0x8]
.L525:
	mov	r0, #0x1
	b	.L531
.L533:
	.align	2, 0
.L532:
	.word	.LC247
	.word	gMain
.L524:
	lsl	r0, r2, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x13
	ble	.L527	@cond_branch
	strh	r1, [r4, #0xa]
	ldrh	r2, [r4, #0xc]
	mov	r3, #0xc
	ldrsh	r1, [r4, r3]
	mov	r3, #0xe
	ldrsh	r0, [r4, r3]
	cmp	r1, r0
	blt	.L528	@cond_branch
	ldrh	r0, [r4, #0x8]
	add	r1, r0, #0x1
	strh	r1, [r4, #0x8]
	ldrh	r2, [r4, #0x20]
	mov	r3, #0x20
	ldrsh	r0, [r4, r3]
	cmp	r0, #0
	beq	.L529	@cond_branch
	add	r0, r1, #0x1
	strh	r0, [r4, #0x8]
.L529:
	add	r0, r2, #0x1
	strh	r0, [r4, #0x20]
	b	.L527
.L528:
	add	r1, r2, #0x4
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r0, sp
	mov	r2, #0xf
	bl	MenuPrint
	ldrh	r0, [r4, #0xc]
	add	r0, r0, #0x1
	strh	r0, [r4, #0xc]
.L527:
	mov	r0, #0x0
.L531:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe136:
	.size	 Fishing5,.Lfe136-Fishing5
	.align	2, 0
	.globl	Fishing6
	.type	 Fishing6,function
	.thumb_func
Fishing6:
	push	{r4, lr}
	add	r4, r0, #0
	bl	sub_805A954
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	bl	DoesCurrentMapHaveFishingMons
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L536	@cond_branch
	bl	Random
	mov	r1, #0x1
	and	r1, r1, r0
	cmp	r1, #0
	beq	.L535	@cond_branch
.L536:
	mov	r0, #0xb
	strh	r0, [r4, #0x8]
	b	.L537
.L535:
	ldr	r0, .L538
	ldrb	r0, [r0, #0x4]
	lsl	r4, r0, #0x4
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L538+0x4
	add	r4, r4, r0
	bl	player_get_direction_lower_nybble
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	sub_805FE08
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	StartSpriteAnim
.L537:
	mov	r0, #0x1
	pop	{r4}
	pop	{r1}
	bx	r1
.L539:
	.align	2, 0
.L538:
	.word	gPlayerAvatar
	.word	gSprites
.Lfe137:
	.size	 Fishing6,.Lfe137-Fishing6
	.align	2, 0
	.globl	Fishing7
	.type	 Fishing7,function
	.thumb_func
Fishing7:
	push	{r4, lr}
	add	r4, r0, #0
	bl	sub_805A954
	ldr	r0, .L541
	mov	r1, #0x4
	mov	r2, #0x11
	bl	MenuPrint
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	mov	r1, #0x0
	strh	r0, [r4, #0x8]
	strh	r1, [r4, #0xa]
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L542:
	.align	2, 0
.L541:
	.word	gOtherText_OhABite
.Lfe138:
	.size	 Fishing7,.Lfe138-Fishing7
	.section .rodata
	.align	1, 0
.LC255:
	.short	0x24
	.short	0x21
	.short	0x1e
.text
	.align	2, 0
	.globl	Fishing8
	.type	 Fishing8,function
	.thumb_func
Fishing8:
	push	{r4, lr}
	add	sp, sp, #0xfffffff8
	add	r4, r0, #0
	ldr	r1, .L548
	mov	r0, sp
	mov	r2, #0x6
	bl	memcpy
	bl	sub_805A954
	ldrh	r1, [r4, #0xa]
	add	r1, r1, #0x1
	strh	r1, [r4, #0xa]
	mov	r2, #0x26
	ldrsh	r0, [r4, r2]
	lsl	r0, r0, #0x1
	add	r0, r0, sp
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	mov	r2, #0x0
	ldrsh	r0, [r0, r2]
	cmp	r1, r0
	blt	.L544	@cond_branch
	mov	r0, #0xc
	b	.L547
.L549:
	.align	2, 0
.L548:
	.word	.LC255
.L544:
	ldr	r0, .L550
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L545	@cond_branch
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
.L547:
	strh	r0, [r4, #0x8]
.L545:
	mov	r0, #0x0
	add	sp, sp, #0x8
	pop	{r4}
	pop	{r1}
	bx	r1
.L551:
	.align	2, 0
.L550:
	.word	gMain
.Lfe139:
	.size	 Fishing8,.Lfe139-Fishing8
	.section .rodata
	.align	1, 0
.LC259:
	.short	0x0
	.short	0x0
	.short	0x28
	.short	0xa
	.short	0x46
	.short	0x1e
.text
	.align	2, 0
	.globl	Fishing9
	.type	 Fishing9,function
	.thumb_func
Fishing9:
	push	{r4, lr}
	add	sp, sp, #0xfffffff4
	add	r4, r0, #0
	ldr	r1, .L558
	mov	r0, sp
	mov	r2, #0xc
	bl	memcpy
	bl	sub_805A954
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	mov	r0, #0x20
	ldrsh	r1, [r4, r0]
	mov	r2, #0x22
	ldrsh	r0, [r4, r2]
	cmp	r1, r0
	blt	.L557	@cond_branch
	cmp	r1, #0x1
	bgt	.L554	@cond_branch
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x64
	bl	__umodsi3
	mov	r3, #0x20
	ldrsh	r2, [r4, r3]
	lsl	r2, r2, #0x1
	mov	r3, #0x26
	ldrsh	r1, [r4, r3]
	lsl	r1, r1, #0x2
	add	r2, r2, r1
	mov	r3, sp
	add	r1, r3, r2
	mov	r2, #0x0
	ldrsh	r1, [r1, r2]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r1, r0
	ble	.L554	@cond_branch
.L557:
	mov	r0, #0x3
	strh	r0, [r4, #0x8]
.L554:
	mov	r0, #0x0
	add	sp, sp, #0xc
	pop	{r4}
	pop	{r1}
	bx	r1
.L559:
	.align	2, 0
.L558:
	.word	.LC259
.Lfe140:
	.size	 Fishing9,.Lfe140-Fishing9
	.align	2, 0
	.globl	Fishing10
	.type	 Fishing10,function
	.thumb_func
Fishing10:
	push	{r4, lr}
	add	r4, r0, #0
	bl	sub_805A954
	ldr	r0, .L561
	bl	MenuPrintMessageDefaultCoords
	bl	MenuDisplayMessageBox
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	mov	r1, #0x0
	strh	r0, [r4, #0x8]
	strh	r1, [r4, #0xa]
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L562:
	.align	2, 0
.L561:
	.word	gOtherText_PokeOnHook
.Lfe141:
	.size	 Fishing10,.Lfe141-Fishing10
	.align	2, 0
	.globl	Fishing11
	.type	 Fishing11,function
	.thumb_func
Fishing11:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	r5, r0, #0
	mov	r1, #0xa
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	bne	.L570	@cond_branch
	bl	sub_805A954
	mov	r0, #0xa
	ldrsh	r6, [r5, r0]
	cmp	r6, #0
	bne	.L570	@cond_branch
	bl	MenuUpdateWindowText
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L565	@cond_branch
	ldr	r7, .L571
	ldrb	r0, [r7, #0x5]
	lsl	r4, r0, #0x3
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r1, .L571+0x4
	mov	r8, r1
	add	r4, r4, r8
	ldrh	r1, [r5, #0x24]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	sub_805B980
	ldrb	r1, [r4, #0x18]
	lsr	r1, r1, #0x4
	add	r0, r4, #0
	bl	FieldObjectTurn
	ldrb	r1, [r7]
	mov	r0, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L567	@cond_branch
	ldrb	r0, [r7, #0x5]
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r8
	ldrb	r0, [r1, #0x1a]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	sub_8127F28
.L567:
	ldr	r2, .L571+0x8
	ldrb	r1, [r7, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	strh	r6, [r0, #0x24]
	ldrb	r1, [r7, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	strh	r6, [r0, #0x26]
	bl	MenuZeroFillScreen
	ldrh	r0, [r5, #0xa]
	add	r0, r0, #0x1
	strh	r0, [r5, #0xa]
	b	.L568
.L572:
	.align	2, 0
.L571:
	.word	gPlayerAvatar
	.word	gMapObjects
	.word	gSprites
.L565:
	mov	r1, #0xa
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	beq	.L568	@cond_branch
.L570:
	ldr	r1, .L573
	mov	r0, #0x0
	strb	r0, [r1, #0x6]
	bl	ScriptContext2_Disable
	ldrh	r0, [r5, #0x26]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	FishingWildEncounter
	mov	r0, #0x1
	bl	sub_80BE97C
	ldr	r0, .L573+0x4
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
.L568:
	mov	r0, #0x0
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L574:
	.align	2, 0
.L573:
	.word	gPlayerAvatar
	.word	Task_Fishing
.Lfe142:
	.size	 Fishing11,.Lfe142-Fishing11
	.align	2, 0
	.globl	Fishing12
	.type	 Fishing12,function
	.thumb_func
Fishing12:
	push	{r4, r5, lr}
	add	r5, r0, #0
	bl	sub_805A954
	ldr	r0, .L576
	ldrb	r0, [r0, #0x4]
	lsl	r4, r0, #0x4
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L576+0x4
	add	r4, r4, r0
	bl	player_get_direction_lower_nybble
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	sub_805FDF8
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	StartSpriteAnim
	ldr	r0, .L576+0x8
	bl	MenuPrintMessageDefaultCoords
	mov	r0, #0xd
	strh	r0, [r5, #0x8]
	mov	r0, #0x1
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L577:
	.align	2, 0
.L576:
	.word	gPlayerAvatar
	.word	gSprites
	.word	gOtherText_NotEvenANibble
.Lfe143:
	.size	 Fishing12,.Lfe143-Fishing12
	.align	2, 0
	.globl	Fishing13
	.type	 Fishing13,function
	.thumb_func
Fishing13:
	push	{r4, r5, lr}
	add	r5, r0, #0
	bl	sub_805A954
	ldr	r0, .L579
	ldrb	r0, [r0, #0x4]
	lsl	r4, r0, #0x4
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L579+0x4
	add	r4, r4, r0
	bl	player_get_direction_lower_nybble
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	sub_805FDF8
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	StartSpriteAnim
	ldr	r0, .L579+0x8
	bl	MenuPrintMessageDefaultCoords
	ldrh	r0, [r5, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x8]
	mov	r0, #0x1
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L580:
	.align	2, 0
.L579:
	.word	gPlayerAvatar
	.word	gSprites
	.word	gOtherText_ItGotAway
.Lfe144:
	.size	 Fishing13,.Lfe144-Fishing13
	.align	2, 0
	.globl	Fishing14
	.type	 Fishing14,function
	.thumb_func
Fishing14:
	push	{r4, lr}
	add	r4, r0, #0
	bl	sub_805A954
	bl	MenuDisplayMessageBox
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe145:
	.size	 Fishing14,.Lfe145-Fishing14
	.align	2, 0
	.globl	Fishing15
	.type	 Fishing15,function
	.thumb_func
Fishing15:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	r6, r0, #0
	bl	sub_805A954
	ldr	r7, .L585
	ldr	r5, .L585+0x4
	ldrb	r0, [r5, #0x4]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r7
	add	r1, r1, #0x3f
	ldrb	r0, [r1]
	lsl	r0, r0, #0x1b
	cmp	r0, #0
	bge	.L583	@cond_branch
	ldrb	r0, [r5, #0x5]
	lsl	r4, r0, #0x3
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L585+0x8
	mov	r8, r0
	add	r4, r4, r8
	ldrh	r1, [r6, #0x24]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	sub_805B980
	ldrb	r1, [r4, #0x18]
	lsr	r1, r1, #0x4
	add	r0, r4, #0
	bl	FieldObjectTurn
	ldrb	r1, [r5]
	mov	r0, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L584	@cond_branch
	ldrb	r0, [r5, #0x5]
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r8
	ldrb	r0, [r1, #0x1a]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	sub_8127F28
.L584:
	ldrb	r1, [r5, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r7
	mov	r2, #0x0
	strh	r2, [r0, #0x24]
	ldrb	r1, [r5, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r7
	strh	r2, [r0, #0x26]
	ldrh	r0, [r6, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r6, #0x8]
.L583:
	mov	r0, #0x0
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L586:
	.align	2, 0
.L585:
	.word	gSprites
	.word	gPlayerAvatar
	.word	gMapObjects
.Lfe146:
	.size	 Fishing15,.Lfe146-Fishing15
	.align	2, 0
	.globl	Fishing16
	.type	 Fishing16,function
	.thumb_func
Fishing16:
	push	{lr}
	bl	MenuUpdateWindowText
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L588	@cond_branch
	ldr	r1, .L589
	mov	r0, #0x0
	strb	r0, [r1, #0x6]
	bl	ScriptContext2_Disable
	bl	UnfreezeMapObjects
	bl	MenuZeroFillScreen
	mov	r0, #0x0
	bl	sub_80BE97C
	ldr	r0, .L589+0x4
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
.L588:
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L590:
	.align	2, 0
.L589:
	.word	gPlayerAvatar
	.word	Task_Fishing
.Lfe147:
	.size	 Fishing16,.Lfe147-Fishing16
	.align	2, 0
	.type	 sub_805A954,function
	.thumb_func
sub_805A954:
	push	{r4, r5, r6, r7, lr}
	ldr	r0, .L601
	ldrb	r1, [r0, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L601+0x4
	add	r4, r0, r1
	add	r0, r4, #0
	bl	AnimateSprite
	mov	r0, #0x0
	strh	r0, [r4, #0x24]
	strh	r0, [r4, #0x26]
	add	r0, r4, #0
	add	r0, r0, #0x2b
	ldrb	r5, [r0]
	mov	r0, #0x2a
	add	r0, r0, r4
	mov	ip, r0
	ldrb	r0, [r0]
	ldr	r1, [r4, #0x8]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	lsl	r6, r5, #0x2
	add	r0, r6, r0
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r7, #0x1
	neg	r7, r7
	cmp	r0, r7
	beq	.L600	@cond_branch
	add	r3, r4, #0
	add	r3, r3, #0x2c
	ldrb	r2, [r3]
	lsl	r1, r2, #0x1a
	lsr	r1, r1, #0x1a
	add	r1, r1, #0x1
	mov	r0, #0x3f
	and	r1, r1, r0
	mov	r0, #0x40
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r3]
	mov	r1, ip
	ldrb	r0, [r1]
	ldr	r1, [r4, #0x8]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	add	r0, r6, r0
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp	r0, r7
	bne	.L593	@cond_branch
.L600:
	sub	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
.L593:
	add	r0, r4, #0
	add	r0, r0, #0x2a
	ldrb	r0, [r0]
	ldr	r1, [r4, #0x8]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	lsl	r0, r5, #0x2
	add	r0, r0, r1
	ldrb	r5, [r0]
	sub	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x2
	bhi	.L595	@cond_branch
	mov	r0, #0x8
	strh	r0, [r4, #0x24]
	bl	player_get_direction_lower_nybble
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	bne	.L595	@cond_branch
	ldr	r0, .L601+0x8
	strh	r0, [r4, #0x24]
.L595:
	cmp	r5, #0x5
	bne	.L597	@cond_branch
	ldr	r0, .L601+0x8
	strh	r0, [r4, #0x26]
.L597:
	add	r0, r5, #0
	sub	r0, r0, #0xa
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bhi	.L598	@cond_branch
	mov	r0, #0x8
	strh	r0, [r4, #0x26]
.L598:
	ldr	r3, .L601
	ldrb	r1, [r3]
	mov	r0, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L599	@cond_branch
	ldr	r2, .L601+0xc
	ldrb	r1, [r3, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r0, [r0, #0x1a]
	mov	r1, #0x26
	ldrsh	r2, [r4, r1]
	mov	r1, #0x1
	bl	sub_8127F28
.L599:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L602:
	.align	2, 0
.L601:
	.word	gPlayerAvatar
	.word	gSprites
	.word	0xfff8
	.word	gMapObjects
.Lfe148:
	.size	 sub_805A954,.Lfe148-sub_805A954
.text
	.align	2, 0
