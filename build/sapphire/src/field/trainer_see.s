@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.globl	gSpriteImage_839B308
	.section .rodata
	.type	 gSpriteImage_839B308,object
gSpriteImage_839B308:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xe0
	.byte	0xfe
	.byte	0xff
	.byte	0xff
	.byte	0xe0
	.byte	0xef
	.byte	0xee
	.byte	0xee
	.byte	0xe0
	.byte	0xef
	.byte	0xee
	.byte	0xff
	.byte	0xe0
	.byte	0xef
	.byte	0xee
	.byte	0xff
	.byte	0xe0
	.byte	0xef
	.byte	0xee
	.byte	0xff
	.byte	0xe0
	.byte	0xef
	.byte	0xee
	.byte	0xfe
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0x0
	.byte	0xff
	.byte	0xff
	.byte	0xef
	.byte	0xe
	.byte	0xee
	.byte	0xee
	.byte	0xfe
	.byte	0xe
	.byte	0xff
	.byte	0xee
	.byte	0xfe
	.byte	0xe
	.byte	0xff
	.byte	0xee
	.byte	0xfe
	.byte	0xe
	.byte	0xff
	.byte	0xee
	.byte	0xfe
	.byte	0xe
	.byte	0xef
	.byte	0xee
	.byte	0xfe
	.byte	0xe
	.byte	0xe0
	.byte	0xef
	.byte	0xee
	.byte	0xfe
	.byte	0xe0
	.byte	0xef
	.byte	0xee
	.byte	0xee
	.byte	0xe0
	.byte	0xef
	.byte	0xee
	.byte	0xfe
	.byte	0xe0
	.byte	0xef
	.byte	0xee
	.byte	0xfe
	.byte	0xe0
	.byte	0xef
	.byte	0xee
	.byte	0xee
	.byte	0xe0
	.byte	0xfe
	.byte	0xff
	.byte	0xff
	.byte	0x0
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xef
	.byte	0xee
	.byte	0xfe
	.byte	0xe
	.byte	0xee
	.byte	0xee
	.byte	0xfe
	.byte	0xe
	.byte	0xef
	.byte	0xee
	.byte	0xfe
	.byte	0xe
	.byte	0xef
	.byte	0xee
	.byte	0xfe
	.byte	0xe
	.byte	0xee
	.byte	0xee
	.byte	0xfe
	.byte	0xe
	.byte	0xff
	.byte	0xff
	.byte	0xef
	.byte	0xe
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.size	 gSpriteImage_839B308,128
	.globl	gSpriteImage_839B388
	.type	 gSpriteImage_839B388,object
gSpriteImage_839B388:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xe0
	.byte	0xfe
	.byte	0xff
	.byte	0xff
	.byte	0xe0
	.byte	0xef
	.byte	0xee
	.byte	0xee
	.byte	0xe0
	.byte	0xef
	.byte	0xee
	.byte	0xff
	.byte	0xe0
	.byte	0xef
	.byte	0xfe
	.byte	0xef
	.byte	0xe0
	.byte	0xef
	.byte	0xfe
	.byte	0xef
	.byte	0xe0
	.byte	0xef
	.byte	0xee
	.byte	0xee
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0x0
	.byte	0xff
	.byte	0xff
	.byte	0xef
	.byte	0xe
	.byte	0xee
	.byte	0xee
	.byte	0xfe
	.byte	0xe
	.byte	0xff
	.byte	0xee
	.byte	0xfe
	.byte	0xe
	.byte	0xfe
	.byte	0xef
	.byte	0xfe
	.byte	0xe
	.byte	0xfe
	.byte	0xef
	.byte	0xfe
	.byte	0xe
	.byte	0xff
	.byte	0xee
	.byte	0xfe
	.byte	0xe
	.byte	0xe0
	.byte	0xef
	.byte	0xee
	.byte	0xfe
	.byte	0xe0
	.byte	0xef
	.byte	0xee
	.byte	0xfe
	.byte	0xe0
	.byte	0xef
	.byte	0xee
	.byte	0xee
	.byte	0xe0
	.byte	0xef
	.byte	0xee
	.byte	0xfe
	.byte	0xe0
	.byte	0xef
	.byte	0xee
	.byte	0xee
	.byte	0xe0
	.byte	0xfe
	.byte	0xff
	.byte	0xff
	.byte	0x0
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xef
	.byte	0xee
	.byte	0xfe
	.byte	0xe
	.byte	0xef
	.byte	0xee
	.byte	0xfe
	.byte	0xe
	.byte	0xee
	.byte	0xee
	.byte	0xfe
	.byte	0xe
	.byte	0xef
	.byte	0xee
	.byte	0xfe
	.byte	0xe
	.byte	0xee
	.byte	0xee
	.byte	0xfe
	.byte	0xe
	.byte	0xff
	.byte	0xff
	.byte	0xef
	.byte	0xe
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.size	 gSpriteImage_839B388,128
	.globl	gSpriteImage_839B408
	.type	 gSpriteImage_839B408,object
gSpriteImage_839B408:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x40
	.byte	0xf4
	.byte	0xff
	.byte	0xff
	.byte	0x40
	.byte	0x4f
	.byte	0x44
	.byte	0x44
	.byte	0x40
	.byte	0x4f
	.byte	0xf4
	.byte	0x4f
	.byte	0x40
	.byte	0x4f
	.byte	0x9f
	.byte	0xf9
	.byte	0x40
	.byte	0x4f
	.byte	0x9f
	.byte	0x99
	.byte	0x40
	.byte	0x4f
	.byte	0x9f
	.byte	0x99
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x0
	.byte	0xff
	.byte	0xff
	.byte	0x4f
	.byte	0x4
	.byte	0x44
	.byte	0x44
	.byte	0xf4
	.byte	0x4
	.byte	0xf4
	.byte	0x4f
	.byte	0xf4
	.byte	0x4
	.byte	0x9f
	.byte	0xf9
	.byte	0xf4
	.byte	0x4
	.byte	0x99
	.byte	0xf9
	.byte	0xf4
	.byte	0x4
	.byte	0x99
	.byte	0xf9
	.byte	0xf4
	.byte	0x4
	.byte	0x40
	.byte	0x4f
	.byte	0x9f
	.byte	0x99
	.byte	0x40
	.byte	0x4f
	.byte	0xf4
	.byte	0x99
	.byte	0x40
	.byte	0x4f
	.byte	0x44
	.byte	0x9f
	.byte	0x40
	.byte	0x4f
	.byte	0x44
	.byte	0xf4
	.byte	0x40
	.byte	0x4f
	.byte	0x44
	.byte	0x44
	.byte	0x40
	.byte	0xf4
	.byte	0xff
	.byte	0xff
	.byte	0x0
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x99
	.byte	0xf9
	.byte	0xf4
	.byte	0x4
	.byte	0x99
	.byte	0x4f
	.byte	0xf4
	.byte	0x4
	.byte	0xf9
	.byte	0x44
	.byte	0xf4
	.byte	0x4
	.byte	0x4f
	.byte	0x44
	.byte	0xf4
	.byte	0x4
	.byte	0x44
	.byte	0x44
	.byte	0xf4
	.byte	0x4
	.byte	0xff
	.byte	0xff
	.byte	0x4f
	.byte	0x4
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.size	 gSpriteImage_839B408,128
	.align	2, 0
	.type	 sDirectionalApproachDistanceFuncs,object
sDirectionalApproachDistanceFuncs:
	.word	GetTrainerApproachDistanceSouth
	.word	GetTrainerApproachDistanceNorth
	.word	GetTrainerApproachDistanceWest
	.word	GetTrainerApproachDistanceEast
	.size	 sDirectionalApproachDistanceFuncs,16
.text
	.align	2, 0
	.globl	CheckTrainers
	.type	 CheckTrainers,function
	.thumb_func
CheckTrainers:
	push	{r4, r5, lr}
	mov	r4, #0x0
	ldr	r5, .L11
.L6:
	lsl	r0, r4, #0x3
	add	r0, r0, r4
	lsl	r0, r0, #0x2
	add	r1, r0, r5
	ldrb	r0, [r1]
	lsl	r0, r0, #0x1f
	cmp	r0, #0
	beq	.L5	@cond_branch
	ldrb	r0, [r1, #0x7]
	cmp	r0, #0x1
	beq	.L8	@cond_branch
	cmp	r0, #0x3
	bne	.L5	@cond_branch
.L8:
	add	r0, r4, #0
	bl	CheckTrainer
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L5	@cond_branch
	mov	r0, #0x1
	b	.L10
.L12:
	.align	2, 0
.L11:
	.word	gMapObjects
.L5:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0xf
	bls	.L6	@cond_branch
	mov	r0, #0x0
.L10:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe1:
	.size	 CheckTrainers,.Lfe1-CheckTrainers
	.align	2, 0
	.globl	CheckTrainer
	.type	 CheckTrainer,function
	.thumb_func
CheckTrainer:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r7, r4, #0
	add	r0, r4, #0
	bl	GetFieldObjectScriptPointerByFieldObjectId
	add	r6, r0, #0
	bl	GetTrainerFlagFromScriptPointer
	cmp	r0, #0
	bne	.L19	@cond_branch
	lsl	r0, r4, #0x3
	add	r0, r0, r4
	lsl	r0, r0, #0x2
	ldr	r1, .L20
	add	r5, r0, r1
	add	r0, r5, #0
	bl	TrainerCanApproachPlayer
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0
	bne	.L16	@cond_branch
.L19:
	mov	r0, #0x0
	b	.L18
.L21:
	.align	2, 0
.L20:
	.word	gMapObjects
.L16:
	add	r0, r7, #0
	add	r1, r6, #0
	bl	TrainerWantsBattle
	sub	r1, r4, #0x1
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r5, #0
	bl	sub_80842C8
	mov	r0, #0x1
.L18:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe2:
	.size	 CheckTrainer,.Lfe2-CheckTrainer
	.align	2, 0
	.globl	TrainerCanApproachPlayer
	.type	 TrainerCanApproachPlayer,function
	.thumb_func
TrainerCanApproachPlayer:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #0xfffffffc
	add	r7, r0, #0
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	PlayerGetDestCoords
	ldrb	r0, [r7, #0x7]
	mov	r8, r4
	cmp	r0, #0x1
	bne	.L23	@cond_branch
	ldr	r1, .L33
	ldrb	r0, [r7, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1a
	sub	r0, r0, #0x4
	add	r0, r0, r1
	ldrb	r1, [r7, #0x1d]
	mov	r2, sp
	mov	r3, #0x0
	ldrsh	r2, [r2, r3]
	mov	r5, #0x0
	ldrsh	r3, [r4, r5]
	ldr	r4, [r0]
	add	r0, r7, #0
	bl	_call_via_r4
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldrb	r2, [r7, #0x18]
	lsl	r2, r2, #0x1c
	lsr	r2, r2, #0x1c
	add	r0, r7, #0
	add	r1, r6, #0
	bl	CheckPathBetweenTrainerAndPlayer
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	b	.L31
.L34:
	.align	2, 0
.L33:
	.word	sDirectionalApproachDistanceFuncs
.L32:
	add	r0, r6, #0
	b	.L31
.L23:
	mov	r5, #0x0
.L28:
	ldr	r0, .L35
	lsl	r4, r5, #0x2
	add	r4, r4, r0
	ldrb	r1, [r7, #0x1d]
	mov	r0, sp
	mov	r6, #0x0
	ldrsh	r2, [r0, r6]
	mov	r0, r8
	mov	r6, #0x0
	ldrsh	r3, [r0, r6]
	ldr	r4, [r4]
	add	r0, r7, #0
	bl	_call_via_r4
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r0, r7, #0
	add	r1, r6, #0
	add	r2, r4, #0
	bl	CheckPathBetweenTrainerAndPlayer
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L32	@cond_branch
	add	r5, r4, #0
	cmp	r5, #0x3
	bls	.L28	@cond_branch
	mov	r0, #0x0
.L31:
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L36:
	.align	2, 0
.L35:
	.word	sDirectionalApproachDistanceFuncs
.Lfe3:
	.size	 TrainerCanApproachPlayer,.Lfe3-TrainerCanApproachPlayer
	.align	2, 0
	.globl	GetTrainerApproachDistanceSouth
	.type	 GetTrainerApproachDistanceSouth,function
	.thumb_func
GetTrainerApproachDistanceSouth:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	lsl	r1, r1, #0x10
	lsr	r6, r1, #0x10
	lsl	r3, r3, #0x10
	lsr	r5, r3, #0x10
	mov	r1, #0x10
	ldrsh	r0, [r4, r1]
	lsl	r2, r2, #0x10
	asr	r2, r2, #0x10
	cmp	r0, r2
	bne	.L38	@cond_branch
	lsl	r0, r5, #0x10
	asr	r2, r0, #0x10
	ldrh	r3, [r4, #0x12]
	mov	r1, #0x12
	ldrsh	r0, [r4, r1]
	cmp	r2, r0
	ble	.L38	@cond_branch
	add	r1, r0, #0
	lsl	r0, r6, #0x10
	asr	r0, r0, #0x10
	add	r1, r1, r0
	cmp	r2, r1
	bgt	.L38	@cond_branch
	sub	r0, r5, r3
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	b	.L40
.L38:
	mov	r0, #0x0
.L40:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe4:
	.size	 GetTrainerApproachDistanceSouth,.Lfe4-GetTrainerApproachDistanceSouth
	.align	2, 0
	.globl	GetTrainerApproachDistanceNorth
	.type	 GetTrainerApproachDistanceNorth,function
	.thumb_func
GetTrainerApproachDistanceNorth:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	lsl	r1, r1, #0x10
	lsr	r6, r1, #0x10
	lsl	r3, r3, #0x10
	lsr	r5, r3, #0x10
	mov	r1, #0x10
	ldrsh	r0, [r4, r1]
	lsl	r2, r2, #0x10
	asr	r2, r2, #0x10
	cmp	r0, r2
	bne	.L42	@cond_branch
	lsl	r0, r5, #0x10
	asr	r2, r0, #0x10
	ldrh	r3, [r4, #0x12]
	mov	r1, #0x12
	ldrsh	r0, [r4, r1]
	cmp	r2, r0
	bge	.L42	@cond_branch
	add	r1, r0, #0
	lsl	r0, r6, #0x10
	asr	r0, r0, #0x10
	sub	r1, r1, r0
	cmp	r2, r1
	blt	.L42	@cond_branch
	sub	r0, r3, r5
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	b	.L44
.L42:
	mov	r0, #0x0
.L44:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe5:
	.size	 GetTrainerApproachDistanceNorth,.Lfe5-GetTrainerApproachDistanceNorth
	.align	2, 0
	.globl	GetTrainerApproachDistanceWest
	.type	 GetTrainerApproachDistanceWest,function
	.thumb_func
GetTrainerApproachDistanceWest:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	lsl	r1, r1, #0x10
	lsr	r6, r1, #0x10
	lsl	r2, r2, #0x10
	lsr	r5, r2, #0x10
	mov	r1, #0x12
	ldrsh	r0, [r4, r1]
	lsl	r3, r3, #0x10
	asr	r3, r3, #0x10
	cmp	r0, r3
	bne	.L46	@cond_branch
	lsl	r0, r5, #0x10
	asr	r3, r0, #0x10
	ldrh	r2, [r4, #0x10]
	mov	r1, #0x10
	ldrsh	r0, [r4, r1]
	cmp	r3, r0
	bge	.L46	@cond_branch
	add	r1, r0, #0
	lsl	r0, r6, #0x10
	asr	r0, r0, #0x10
	sub	r1, r1, r0
	cmp	r3, r1
	blt	.L46	@cond_branch
	sub	r0, r2, r5
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	b	.L48
.L46:
	mov	r0, #0x0
.L48:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe6:
	.size	 GetTrainerApproachDistanceWest,.Lfe6-GetTrainerApproachDistanceWest
	.align	2, 0
	.globl	GetTrainerApproachDistanceEast
	.type	 GetTrainerApproachDistanceEast,function
	.thumb_func
GetTrainerApproachDistanceEast:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	lsl	r1, r1, #0x10
	lsr	r6, r1, #0x10
	lsl	r2, r2, #0x10
	lsr	r5, r2, #0x10
	mov	r1, #0x12
	ldrsh	r0, [r4, r1]
	lsl	r3, r3, #0x10
	asr	r3, r3, #0x10
	cmp	r0, r3
	bne	.L50	@cond_branch
	lsl	r0, r5, #0x10
	asr	r3, r0, #0x10
	ldrh	r2, [r4, #0x10]
	mov	r1, #0x10
	ldrsh	r0, [r4, r1]
	cmp	r3, r0
	ble	.L50	@cond_branch
	add	r1, r0, #0
	lsl	r0, r6, #0x10
	asr	r0, r0, #0x10
	add	r1, r1, r0
	cmp	r3, r1
	bgt	.L50	@cond_branch
	sub	r0, r5, r2
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	b	.L52
.L50:
	mov	r0, #0x0
.L52:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe7:
	.size	 GetTrainerApproachDistanceEast,.Lfe7-GetTrainerApproachDistanceEast
	.align	2, 0
	.globl	CheckPathBetweenTrainerAndPlayer
	.type	 CheckPathBetweenTrainerAndPlayer,function
	.thumb_func
CheckPathBetweenTrainerAndPlayer:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #0xfffffffc
	add	r6, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r9, r1
	lsl	r2, r2, #0x18
	lsr	r7, r2, #0x18
	cmp	r1, #0
	beq	.L64	@cond_branch
	ldrh	r1, [r6, #0x10]
	mov	r0, sp
	strh	r1, [r0]
	ldrh	r0, [r6, #0x12]
	mov	r1, sp
	add	r1, r1, #0x2
	strh	r0, [r1]
	mov	r4, #0x0
	mov	r8, r1
	mov	r5, r9
	sub	r5, r5, #0x1
	cmp	r4, r5
	bgt	.L56	@cond_branch
.L58:
	mov	r0, sp
	mov	r2, #0x0
	ldrsh	r1, [r0, r2]
	mov	r3, r8
	mov	r0, #0x0
	ldrsh	r2, [r3, r0]
	add	r0, r6, #0
	add	r3, r7, #0
	bl	sub_8060024
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L57	@cond_branch
	mov	r0, #0x1
	and	r1, r1, r0
	cmp	r1, #0
	bne	.L63	@cond_branch
.L57:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r0, r7, #0
	mov	r1, sp
	mov	r2, r8
	bl	MoveCoords
	cmp	r4, r5
	ble	.L58	@cond_branch
.L56:
	ldrb	r4, [r6, #0x19]
	lsl	r5, r4, #0x1c
	lsr	r5, r5, #0x1c
	lsr	r4, r4, #0x4
	mov	r0, #0x0
	strb	r0, [r6, #0x19]
	mov	r0, sp
	mov	r2, #0x0
	ldrsh	r1, [r0, r2]
	mov	r3, r8
	mov	r0, #0x0
	ldrsh	r2, [r3, r0]
	add	r0, r6, #0
	add	r3, r7, #0
	bl	npc_block_way
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	lsl	r4, r4, #0x4
	orr	r5, r5, r4
	strb	r5, [r6, #0x19]
	cmp	r1, #0x4
	beq	.L61	@cond_branch
.L64:
.L63:
	mov	r0, #0x0
	b	.L62
.L61:
	mov	r0, r9
.L62:
	add	sp, sp, #0x4
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe8:
	.size	 CheckPathBetweenTrainerAndPlayer,.Lfe8-CheckPathBetweenTrainerAndPlayer
	.align	2, 0
	.globl	sub_80842C8
	.type	 sub_80842C8,function
	.thumb_func
sub_80842C8:
	push	{r4, r5, lr}
	add	r5, r0, #0
	lsl	r4, r1, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L66
	mov	r1, #0x50
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L66+0x4
	add	r1, r1, r0
	lsr	r0, r5, #0x10
	strh	r0, [r1, #0xa]
	strh	r5, [r1, #0xc]
	strh	r4, [r1, #0xe]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L67:
	.align	2, 0
.L66:
	.word	RunTrainerSeeFuncList
	.word	gTasks
.Lfe9:
	.size	 sub_80842C8,.Lfe9-sub_80842C8
	.align	2, 0
	.globl	sub_80842FC
	.type	 sub_80842FC,function
	.thumb_func
sub_80842FC:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	ldr	r5, .L69
	add	r0, r5, #0
	bl	FindTaskIdByFunc
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r4, #0
	add	r1, r5, #0
	add	r2, r6, #0
	bl	SetTaskFuncWithFollowupFunc
	ldr	r1, .L69+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r1, #0x1
	strh	r1, [r0, #0x8]
	add	r0, r4, #0
	bl	_call_via_r5
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L70:
	.align	2, 0
.L69:
	.word	RunTrainerSeeFuncList
	.word	gTasks
.Lfe10:
	.size	 sub_80842FC,.Lfe10-sub_80842FC
	.section .rodata
	.align	2, 0
	.type	 gTrainerSeeFuncList,object
gTrainerSeeFuncList:
	.word	sub_8084394
	.word	sub_8084398
	.word	sub_80843DC
	.word	sub_808441C
	.word	sub_8084478
	.word	sub_8084534
	.word	sub_8084578
	.word	sub_80845AC
	.word	sub_80845C8
	.word	sub_80845FC
	.word	sub_8084654
	.word	sub_80846C8
	.size	 gTrainerSeeFuncList,48
.text
	.align	2, 0
	.globl	RunTrainerSeeFuncList
	.type	 RunTrainerSeeFuncList,function
	.thumb_func
RunTrainerSeeFuncList:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	ldr	r1, .L78
	add	r4, r0, r1
	mov	r1, #0xa
	ldrsh	r0, [r4, r1]
	lsl	r5, r0, #0x10
	mov	r1, #0xc
	ldrsh	r0, [r4, r1]
	orr	r5, r5, r0
	ldrb	r0, [r5]
	lsl	r0, r0, #0x1f
	cmp	r0, #0
	bne	.L72	@cond_branch
	add	r0, r6, #0
	bl	SwitchTaskToFollowupFunc
	b	.L73
.L79:
	.align	2, 0
.L78:
	.word	gTasks
.L72:
	ldr	r7, .L80
.L74:
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	lsl	r0, r0, #0x2
	add	r0, r0, r7
	ldr	r3, [r0]
	add	r0, r6, #0
	add	r1, r4, #0
	add	r2, r5, #0
	bl	_call_via_r3
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L74	@cond_branch
.L73:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L81:
	.align	2, 0
.L80:
	.word	gTrainerSeeFuncList
.Lfe11:
	.size	 RunTrainerSeeFuncList,.Lfe11-RunTrainerSeeFuncList
	.align	2, 0
	.type	 sub_8084394,function
	.thumb_func
sub_8084394:
	mov	r0, #0x0
	bx	lr
.Lfe12:
	.size	 sub_8084394,.Lfe12-sub_8084394
	.align	2, 0
	.type	 sub_8084398,function
	.thumb_func
sub_8084398:
	push	{r4, r5, lr}
	add	r5, r1, #0
	add	r4, r2, #0
	ldr	r1, .L84
	add	r2, r1, #0x4
	add	r3, r1, #0
	add	r3, r3, #0x8
	add	r0, r4, #0
	bl	FieldObjectGetLocalIdAndMap
	mov	r0, #0x0
	bl	FieldEffectStart
	ldrb	r0, [r4, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	bl	GetFaceDirectionAnimId
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	FieldObjectSetSpecialAnim
	ldrh	r0, [r5, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x8]
	mov	r0, #0x1
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L85:
	.align	2, 0
.L84:
	.word	gFieldEffectArguments
.Lfe13:
	.size	 sub_8084398,.Lfe13-sub_8084398
	.align	2, 0
	.type	 sub_80843DC,function
	.thumb_func
sub_80843DC:
	push	{r4, r5, lr}
	add	r4, r1, #0
	add	r5, r2, #0
	mov	r0, #0x0
	bl	FieldEffectActiveListContains
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L87	@cond_branch
	mov	r0, #0x0
	b	.L91
.L87:
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	ldrb	r0, [r5, #0x6]
	sub	r0, r0, #0x39
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bhi	.L89	@cond_branch
	mov	r0, #0x6
	strh	r0, [r4, #0x8]
.L89:
	ldrb	r0, [r5, #0x6]
	cmp	r0, #0x3f
	bne	.L90	@cond_branch
	mov	r0, #0x8
	strh	r0, [r4, #0x8]
.L90:
	mov	r0, #0x1
.L91:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe14:
	.size	 sub_80843DC,.Lfe14-sub_80843DC
	.align	2, 0
	.type	 sub_808441C,function
	.thumb_func
sub_808441C:
	push	{r4, r5, lr}
	add	r5, r1, #0
	add	r4, r2, #0
	add	r0, r4, #0
	bl	FieldObjectIsSpecialAnimOrDirectionSequenceAnimActive
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L94	@cond_branch
	add	r0, r4, #0
	bl	FieldObjectClearAnimIfSpecialAnimFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L93	@cond_branch
.L94:
	mov	r1, #0xe
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	beq	.L95	@cond_branch
	ldrb	r0, [r4, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	bl	GetGoSpeed0AnimId
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	FieldObjectSetSpecialAnim
	ldrh	r0, [r5, #0xe]
	sub	r0, r0, #0x1
	strh	r0, [r5, #0xe]
	b	.L93
.L95:
	add	r0, r4, #0
	mov	r1, #0x3e
	bl	FieldObjectSetSpecialAnim
	ldrh	r0, [r5, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x8]
.L93:
	mov	r0, #0x0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe15:
	.size	 sub_808441C,.Lfe15-sub_808441C
	.align	2, 0
	.type	 sub_8084478,function
	.thumb_func
sub_8084478:
	push	{r4, r5, r6, lr}
	add	r6, r1, #0
	add	r5, r2, #0
	add	r0, r5, #0
	bl	FieldObjectIsSpecialAnimOrDirectionSequenceAnimActive
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L98	@cond_branch
	add	r0, r5, #0
	bl	FieldObjectClearAnimIfSpecialAnimFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L101	@cond_branch
.L98:
	ldrb	r0, [r5, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	bl	npc_running_behaviour_by_direction
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r5, #0
	bl	npc_set_running_behaviour_etc
	ldrb	r0, [r5, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	bl	npc_running_behaviour_by_direction
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r5, #0
	bl	sub_805C774
	add	r0, r5, #0
	bl	sub_805C754
	ldr	r0, .L102
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L102+0x4
	add	r4, r0, r1
	add	r0, r4, #0
	bl	FieldObjectIsSpecialAnimOrDirectionSequenceAnimActive
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L99	@cond_branch
	add	r0, r4, #0
	bl	FieldObjectClearAnimIfSpecialAnimFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L101	@cond_branch
.L99:
	bl	sub_80597E8
	ldr	r0, .L102
	ldrb	r0, [r0, #0x5]
	lsl	r4, r0, #0x3
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L102+0x4
	add	r4, r4, r0
	ldrb	r0, [r5, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	bl	GetOppositeDirection
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetFaceDirectionAnimId
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	FieldObjectSetSpecialAnim
	ldrh	r0, [r6, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r6, #0x8]
.L101:
	mov	r0, #0x0
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L103:
	.align	2, 0
.L102:
	.word	gPlayerAvatar
	.word	gMapObjects
.Lfe16:
	.size	 sub_8084478,.Lfe16-sub_8084478
	.align	2, 0
	.type	 sub_8084534,function
	.thumb_func
sub_8084534:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r0, .L107
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L107+0x4
	add	r4, r0, r1
	add	r0, r4, #0
	bl	FieldObjectIsSpecialAnimOrDirectionSequenceAnimActive
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L106	@cond_branch
	add	r0, r4, #0
	bl	FieldObjectClearAnimIfSpecialAnimFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L105	@cond_branch
.L106:
	add	r0, r5, #0
	bl	SwitchTaskToFollowupFunc
.L105:
	mov	r0, #0x0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L108:
	.align	2, 0
.L107:
	.word	gPlayerAvatar
	.word	gMapObjects
.Lfe17:
	.size	 sub_8084534,.Lfe17-sub_8084534
	.align	2, 0
	.type	 sub_8084578,function
	.thumb_func
sub_8084578:
	push	{r4, r5, lr}
	add	r5, r1, #0
	add	r4, r2, #0
	add	r0, r4, #0
	bl	FieldObjectIsSpecialAnimOrDirectionSequenceAnimActive
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L111	@cond_branch
	add	r0, r4, #0
	bl	FieldObjectClearAnimIfSpecialAnimFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L110	@cond_branch
.L111:
	add	r0, r4, #0
	mov	r1, #0x59
	bl	FieldObjectSetSpecialAnim
	ldrh	r0, [r5, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x8]
.L110:
	mov	r0, #0x0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe18:
	.size	 sub_8084578,.Lfe18-sub_8084578
	.align	2, 0
	.type	 sub_80845AC,function
	.thumb_func
sub_80845AC:
	push	{r4, lr}
	add	r4, r1, #0
	add	r0, r2, #0
	bl	FieldObjectClearAnimIfSpecialAnimFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L113	@cond_branch
	mov	r0, #0x3
	strh	r0, [r4, #0x8]
.L113:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe19:
	.size	 sub_80845AC,.Lfe19-sub_80845AC
	.align	2, 0
	.type	 sub_80845C8,function
	.thumb_func
sub_80845C8:
	push	{r4, r5, lr}
	add	r5, r1, #0
	add	r4, r2, #0
	add	r0, r4, #0
	bl	FieldObjectIsSpecialAnimOrDirectionSequenceAnimActive
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L116	@cond_branch
	add	r0, r4, #0
	bl	FieldObjectClearAnimIfSpecialAnimFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L115	@cond_branch
.L116:
	add	r0, r4, #0
	mov	r1, #0x3e
	bl	FieldObjectSetSpecialAnim
	ldrh	r0, [r5, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x8]
.L115:
	mov	r0, #0x0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe20:
	.size	 sub_80845C8,.Lfe20-sub_80845C8
	.align	2, 0
	.type	 sub_80845FC,function
	.thumb_func
sub_80845FC:
	push	{r4, r5, lr}
	add	r5, r1, #0
	add	r4, r2, #0
	add	r0, r4, #0
	bl	FieldObjectCheckIfSpecialAnimFinishedOrInactive
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L118	@cond_branch
	ldr	r2, .L119
	mov	r1, #0x10
	ldrsh	r0, [r4, r1]
	str	r0, [r2]
	mov	r1, #0x12
	ldrsh	r0, [r4, r1]
	str	r0, [r2, #0x4]
	ldr	r3, .L119+0x4
	ldrb	r1, [r4, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	add	r0, r0, #0x43
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	str	r0, [r2, #0x8]
	mov	r0, #0x2
	str	r0, [r2, #0xc]
	mov	r0, #0x31
	bl	FieldEffectStart
	strh	r0, [r5, #0x10]
	ldrh	r0, [r5, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x8]
.L118:
	mov	r0, #0x0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L120:
	.align	2, 0
.L119:
	.word	gFieldEffectArguments
	.word	gSprites
.Lfe21:
	.size	 sub_80845FC,.Lfe21-sub_80845FC
	.align	2, 0
	.type	 sub_8084654,function
	.thumb_func
sub_8084654:
	push	{r4, r5, lr}
	add	r5, r1, #0
	add	r4, r2, #0
	ldr	r2, .L123
	mov	r1, #0x10
	ldrsh	r0, [r5, r1]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	add	r1, r1, #0x2b
	ldrb	r0, [r1]
	cmp	r0, #0x2
	bne	.L122	@cond_branch
	ldrb	r1, [r4, #0x3]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r4, #0x3]
	ldrb	r0, [r4]
	mov	r1, #0x4
	orr	r0, r0, r1
	strb	r0, [r4]
	ldrb	r1, [r4, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r2, [r0, #0x5]
	mov	r1, #0xd
	neg	r1, r1
	and	r1, r1, r2
	mov	r2, #0x8
	orr	r1, r1, r2
	strb	r1, [r0, #0x5]
	add	r0, r4, #0
	bl	FieldObjectClearAnimIfSpecialAnimFinished
	ldrb	r0, [r4, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	bl	sub_806084C
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	FieldObjectSetSpecialAnim
	ldrh	r0, [r5, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x8]
.L122:
	mov	r0, #0x0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L124:
	.align	2, 0
.L123:
	.word	gSprites
.Lfe22:
	.size	 sub_8084654,.Lfe22-sub_8084654
	.align	2, 0
	.type	 sub_80846C8,function
	.thumb_func
sub_80846C8:
	push	{r4, lr}
	add	r4, r1, #0
	mov	r0, #0x31
	bl	FieldEffectActiveListContains
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L126	@cond_branch
	mov	r0, #0x3
	strh	r0, [r4, #0x8]
.L126:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe23:
	.size	 sub_80846C8,.Lfe23-sub_80846C8
	.section .rodata
	.align	2, 0
	.type	 gTrainerSeeFuncList2,object
gTrainerSeeFuncList2:
	.word	sub_80845C8
	.word	sub_80845FC
	.word	sub_8084654
	.word	sub_80846C8
	.size	 gTrainerSeeFuncList2,16
.text
	.align	2, 0
	.globl	sub_80846E4
	.type	 sub_80846E4,function
	.thumb_func
sub_80846E4:
	push	{r4, r5, lr}
	add	sp, sp, #0xfffffffc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r5, r0, #0
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L131
	add	r4, r0, r1
	add	r0, r4, #0
	add	r0, r0, #0xa
	mov	r1, sp
	bl	LoadWordFromTwoHalfwords
	mov	r1, #0x16
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	bne	.L128	@cond_branch
	ldr	r0, [sp]
	bl	FieldObjectClearAnim
	ldrh	r0, [r4, #0x16]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x16]
.L128:
	ldr	r1, .L131+0x4
	mov	r2, #0x8
	ldrsh	r0, [r4, r2]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r2, [sp]
	ldr	r3, [r0]
	add	r0, r5, #0
	add	r1, r4, #0
	bl	_call_via_r3
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x3
	bne	.L129	@cond_branch
	mov	r0, #0x31
	bl	FieldEffectActiveListContains
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L129	@cond_branch
	ldr	r4, [sp]
	ldrb	r0, [r4, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	bl	npc_running_behaviour_by_direction
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	npc_set_running_behaviour_etc
	ldr	r4, [sp]
	ldrb	r0, [r4, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	bl	npc_running_behaviour_by_direction
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	sub_805C774
	add	r0, r5, #0
	bl	DestroyTask
	b	.L130
.L132:
	.align	2, 0
.L131:
	.word	gTasks
	.word	gTrainerSeeFuncList2
.L129:
	ldr	r2, [sp]
	ldrb	r1, [r2]
	mov	r0, #0x7f
	and	r0, r0, r1
	strb	r0, [r2]
.L130:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe24:
	.size	 sub_80846E4,.Lfe24-sub_80846E4
	.align	2, 0
	.globl	sub_8084794
	.type	 sub_8084794,function
	.thumb_func
sub_8084794:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r0, .L134
	mov	r1, #0x0
	bl	CreateTask
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	ldr	r1, .L134+0x4
	add	r0, r0, r1
	add	r0, r0, #0x2
	add	r1, r4, #0
	bl	StoreWordInTwoHalfwords
	pop	{r4}
	pop	{r0}
	bx	r0
.L135:
	.align	2, 0
.L134:
	.word	sub_80846E4
	.word	gTasks+0x8
.Lfe25:
	.size	 sub_8084794,.Lfe25-sub_8084794
	.align	2, 0
	.globl	ScrSpecial_EndTrainerApproach
	.type	 ScrSpecial_EndTrainerApproach,function
	.thumb_func
ScrSpecial_EndTrainerApproach:
	push	{lr}
	ldr	r0, .L137
	bl	sub_80842FC
	pop	{r0}
	bx	r0
.L138:
	.align	2, 0
.L137:
	.word	Task_DestroyTrainerApproachTask
.Lfe26:
	.size	 ScrSpecial_EndTrainerApproach,.Lfe26-ScrSpecial_EndTrainerApproach
	.align	2, 0
	.type	 Task_DestroyTrainerApproachTask,function
	.thumb_func
Task_DestroyTrainerApproachTask:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
	bl	EnableBothScriptContexts
	pop	{r0}
	bx	r0
.Lfe27:
	.size	 Task_DestroyTrainerApproachTask,.Lfe27-Task_DestroyTrainerApproachTask
	.align	2, 0
	.globl	FldEff_ExclamationMarkIcon1
	.type	 FldEff_ExclamationMarkIcon1,function
	.thumb_func
FldEff_ExclamationMarkIcon1:
	push	{lr}
	ldr	r0, .L142
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x53
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x40
	beq	.L141	@cond_branch
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L142+0x4
	add	r0, r0, r1
	mov	r1, #0x0
	mov	r2, #0x0
	bl	sub_8084894
.L141:
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L143:
	.align	2, 0
.L142:
	.word	gSpriteTemplate_839B510
	.word	gSprites
.Lfe28:
	.size	 FldEff_ExclamationMarkIcon1,.Lfe28-FldEff_ExclamationMarkIcon1
	.align	2, 0
	.globl	FldEff_ExclamationMarkIcon2
	.type	 FldEff_ExclamationMarkIcon2,function
	.thumb_func
FldEff_ExclamationMarkIcon2:
	push	{lr}
	ldr	r0, .L146
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x52
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x40
	beq	.L145	@cond_branch
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L146+0x4
	add	r0, r0, r1
	mov	r1, #0x21
	mov	r2, #0x1
	bl	sub_8084894
.L145:
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L147:
	.align	2, 0
.L146:
	.word	gSpriteTemplate_839B510
	.word	gSprites
.Lfe29:
	.size	 FldEff_ExclamationMarkIcon2,.Lfe29-FldEff_ExclamationMarkIcon2
	.align	2, 0
	.globl	FldEff_HeartIcon
	.type	 FldEff_HeartIcon,function
	.thumb_func
FldEff_HeartIcon:
	push	{lr}
	ldr	r0, .L150
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x52
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x40
	beq	.L149	@cond_branch
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L150+0x4
	add	r0, r0, r1
	mov	r1, #0x2e
	mov	r2, #0x0
	bl	sub_8084894
.L149:
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L151:
	.align	2, 0
.L150:
	.word	gSpriteTemplate_839B528
	.word	gSprites
.Lfe30:
	.size	 FldEff_HeartIcon,.Lfe30-FldEff_HeartIcon
	.align	2, 0
	.globl	sub_8084894
	.type	 sub_8084894,function
	.thumb_func
sub_8084894:
	push	{r4, lr}
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	ldrb	r4, [r0, #0x5]
	mov	r3, #0xd
	neg	r3, r3
	and	r3, r3, r4
	mov	r4, #0x4
	orr	r3, r3, r4
	strb	r3, [r0, #0x5]
	mov	r3, #0x3e
	add	r3, r3, r0
	mov	ip, r3
	ldrb	r3, [r3]
	mov	r4, #0x2
	orr	r3, r3, r4
	mov	r4, ip
	strb	r3, [r4]
	ldr	r4, .L153
	ldr	r3, [r4]
	strh	r3, [r0, #0x2e]
	ldr	r3, [r4, #0x4]
	strh	r3, [r0, #0x30]
	ldr	r3, [r4, #0x8]
	strh	r3, [r0, #0x32]
	ldr	r3, .L153+0x4
	strh	r3, [r0, #0x34]
	strh	r1, [r0, #0x3c]
	add	r1, r2, #0
	bl	StartSpriteAnim
	pop	{r4}
	pop	{r0}
	bx	r0
.L154:
	.align	2, 0
.L153:
	.word	gFieldEffectArguments
	.word	0xfffb
.Lfe31:
	.size	 sub_8084894,.Lfe31-sub_8084894
	.align	2, 0
	.globl	objc_exclamation_mark_probably
	.type	 objc_exclamation_mark_probably,function
	.thumb_func
objc_exclamation_mark_probably:
	push	{r4, lr}
	add	sp, sp, #0xfffffffc
	add	r4, r0, #0
	ldrh	r0, [r4, #0x2e]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrh	r1, [r4, #0x30]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldrh	r2, [r4, #0x32]
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r3, sp
	bl	TryGetFieldObjectIdByLocalIdAndMap
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L157	@cond_branch
	add	r0, r4, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L156	@cond_branch
.L157:
	ldrh	r1, [r4, #0x3c]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	FieldEffectStop
	b	.L158
.L156:
	ldr	r2, .L161
	mov	r0, sp
	ldrb	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r0, [r0, #0x4]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L161+0x4
	add	r1, r1, r0
	ldrh	r3, [r4, #0x34]
	ldrh	r0, [r4, #0x36]
	add	r2, r3, r0
	strh	r2, [r4, #0x36]
	ldrh	r0, [r1, #0x20]
	strh	r0, [r4, #0x20]
	ldrh	r0, [r1, #0x22]
	sub	r0, r0, #0x10
	strh	r0, [r4, #0x22]
	ldrh	r0, [r1, #0x24]
	strh	r0, [r4, #0x24]
	ldrh	r0, [r1, #0x26]
	add	r0, r0, r2
	strh	r0, [r4, #0x26]
	lsl	r2, r2, #0x10
	asr	r2, r2, #0x10
	cmp	r2, #0
	beq	.L159	@cond_branch
	add	r0, r3, #0x1
	strh	r0, [r4, #0x34]
	b	.L158
.L162:
	.align	2, 0
.L161:
	.word	gMapObjects
	.word	gSprites
.L159:
	strh	r2, [r4, #0x34]
.L158:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe32:
	.size	 objc_exclamation_mark_probably,.Lfe32-objc_exclamation_mark_probably
.text
	.align	2, 0
