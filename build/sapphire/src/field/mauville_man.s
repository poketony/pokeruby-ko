@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section ewram_data,"aw"
	.align	1, 0
	.type	 gUnknown_020388BC,object
	.size	 gUnknown_020388BC,2
gUnknown_020388BC:
	.short	0x0
	.section .rodata
	.align	1, 0
	.type	 sDefaultBardSongLyrics,object
sDefaultBardSongLyrics:
	.short	0xa0f
	.short	0x1629
	.short	0x1a04
	.short	0x2015
	.short	0xe15
	.short	0x200e
	.size	 sDefaultBardSongLyrics,12
	.align	2, 0
	.type	 sGiddyAdjectives,object
sGiddyAdjectives:
	.word	OtherText_SoPretty
	.word	OtherText_SoDarling
	.word	OtherText_SoRelaxed
	.word	OtherText_SoSunny
	.word	OtherText_SoDesirable
	.word	OtherText_SoExciting
	.word	OtherText_SoAmusing
	.word	OtherText_SoMagical
	.size	 sGiddyAdjectives,32
	.align	2, 0
	.type	 sGiddyQuestions,object
sGiddyQuestions:
	.word	OtherText_WantVacationNicePlace
	.word	OtherText_BoughtCrayonsIsNice
	.word	OtherText_IfWeCouldFloat
	.word	OtherText_SandWashesAwayMakeSad
	.word	OtherText_WhatsBottomSeaLike
	.word	OtherText_SeeSettingSun
	.word	OtherText_LyingInGreenGrass
	.word	OtherText_SecretBasesWonderful
	.size	 sGiddyQuestions,32
.text
	.align	2, 0
	.type	 SetupBard,function
	.thumb_func
SetupBard:
	push	{r4, lr}
	ldr	r0, .L8
	mov	r1, #0x0
	strb	r1, [r0]
	add	r2, r0, #0
	add	r2, r2, #0x29
	strb	r1, [r2]
	mov	r2, #0x0
	add	r4, r0, #0x2
	ldr	r3, .L8+0x4
.L6:
	lsl	r0, r2, #0x1
	add	r1, r4, r0
	add	r0, r0, r3
	ldrh	r0, [r0]
	strh	r0, [r1]
	add	r0, r2, #0x1
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	cmp	r2, #0x5
	bls	.L6	@cond_branch
	pop	{r4}
	pop	{r0}
	bx	r0
.L9:
	.align	2, 0
.L8:
	.word	gSaveBlock1+0x2d94
	.word	sDefaultBardSongLyrics
.Lfe1:
	.size	 SetupBard,.Lfe1-SetupBard
	.align	2, 0
	.type	 SetupHipster,function
	.thumb_func
SetupHipster:
	ldr	r0, .L11
	mov	r2, #0x0
	mov	r1, #0x1
	strb	r1, [r0]
	strb	r2, [r0, #0x1]
	bx	lr
.L12:
	.align	2, 0
.L11:
	.word	gSaveBlock1+0x2d94
.Lfe2:
	.size	 SetupHipster,.Lfe2-SetupHipster
	.align	2, 0
	.type	 SetupStoryteller,function
	.thumb_func
SetupStoryteller:
	push	{lr}
	bl	StorytellerSetup
	pop	{r0}
	bx	r0
.Lfe3:
	.size	 SetupStoryteller,.Lfe3-SetupStoryteller
	.align	2, 0
	.type	 SetupGiddy,function
	.thumb_func
SetupGiddy:
	ldr	r0, .L15
	mov	r2, #0x0
	mov	r1, #0x4
	strb	r1, [r0]
	strb	r2, [r0, #0x1]
	bx	lr
.L16:
	.align	2, 0
.L15:
	.word	gSaveBlock1+0x2d94
.Lfe4:
	.size	 SetupGiddy,.Lfe4-SetupGiddy
	.align	2, 0
	.type	 SetupTrader,function
	.thumb_func
SetupTrader:
	push	{lr}
	bl	TraderSetup
	pop	{r0}
	bx	r0
.Lfe5:
	.size	 SetupTrader,.Lfe5-SetupTrader
	.align	2, 0
	.globl	SetupMauvilleOldMan
	.type	 SetupMauvilleOldMan,function
	.thumb_func
SetupMauvilleOldMan:
	push	{lr}
	ldr	r0, .L27
	ldrb	r1, [r0, #0xb]
	lsl	r1, r1, #0x8
	ldrb	r0, [r0, #0xa]
	orr	r0, r0, r1
	mov	r1, #0xa
	bl	__umodsi3
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x11
	cmp	r0, #0x4
	bhi	.L19	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L27+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L28:
	.align	2, 0
.L27:
	.word	gSaveBlock2
	.word	.L25
	.align	2, 0
	.align	2, 0
.L25:
	.word	.L20
	.word	.L21
	.word	.L22
	.word	.L23
	.word	.L24
.L20:
	bl	SetupBard
	b	.L19
.L21:
	bl	SetupHipster
	b	.L19
.L22:
	bl	SetupTrader
	b	.L19
.L23:
	bl	SetupStoryteller
	b	.L19
.L24:
	bl	SetupGiddy
.L19:
	bl	sub_80F83D0
	pop	{r0}
	bx	r0
.Lfe6:
	.size	 SetupMauvilleOldMan,.Lfe6-SetupMauvilleOldMan
	.align	2, 0
	.type	 GetCurrentMauvilleOldMan,function
	.thumb_func
GetCurrentMauvilleOldMan:
	ldr	r0, .L30
	ldrb	r0, [r0]
	bx	lr
.L31:
	.align	2, 0
.L30:
	.word	gSaveBlock1+0x2d94
.Lfe7:
	.size	 GetCurrentMauvilleOldMan,.Lfe7-GetCurrentMauvilleOldMan
	.align	2, 0
	.globl	ScrSpecial_GetCurrentMauvilleMan
	.type	 ScrSpecial_GetCurrentMauvilleMan,function
	.thumb_func
ScrSpecial_GetCurrentMauvilleMan:
	push	{r4, lr}
	ldr	r4, .L33
	bl	GetCurrentMauvilleOldMan
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4]
	pop	{r4}
	pop	{r0}
	bx	r0
.L34:
	.align	2, 0
.L33:
	.word	gScriptResult
.Lfe8:
	.size	 ScrSpecial_GetCurrentMauvilleMan,.Lfe8-ScrSpecial_GetCurrentMauvilleMan
	.align	2, 0
	.globl	ScrSpecial_HasBardSongBeenChanged
	.type	 ScrSpecial_HasBardSongBeenChanged,function
	.thumb_func
ScrSpecial_HasBardSongBeenChanged:
	ldr	r0, .L36
	ldr	r1, .L36+0x4
	add	r1, r1, #0x29
	ldrb	r1, [r1]
	strh	r1, [r0]
	bx	lr
.L37:
	.align	2, 0
.L36:
	.word	gScriptResult
	.word	gSaveBlock1+0x2d94
.Lfe9:
	.size	 ScrSpecial_HasBardSongBeenChanged,.Lfe9-ScrSpecial_HasBardSongBeenChanged
	.align	2, 0
	.globl	ScrSpecial_SaveBardSongLyrics
	.type	 ScrSpecial_SaveBardSongLyrics,function
	.thumb_func
ScrSpecial_SaveBardSongLyrics:
	push	{r4, r5, lr}
	ldr	r5, .L49
	add	r0, r5, #0
	add	r0, r0, #0x1a
	ldr	r4, .L49+0x4
	add	r1, r4, #0
	bl	StringCopy
	mov	r2, #0x0
	add	r3, r5, #0
	add	r3, r3, #0x25
	add	r4, r4, #0xa
.L42:
	add	r1, r3, r2
	add	r0, r2, r4
	ldrb	r0, [r0]
	strb	r0, [r1]
	add	r0, r2, #0x1
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	cmp	r2, #0x3
	bls	.L42	@cond_branch
	mov	r2, #0x0
	mov	r0, #0x29
	add	r0, r0, r5
	mov	ip, r0
	add	r4, r5, #0x2
	add	r3, r5, #0
	add	r3, r3, #0xe
.L47:
	lsl	r0, r2, #0x1
	add	r1, r4, r0
	add	r0, r3, r0
	ldrh	r0, [r0]
	strh	r0, [r1]
	add	r0, r2, #0x1
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	cmp	r2, #0x5
	bls	.L47	@cond_branch
	mov	r0, #0x1
	mov	r1, ip
	strb	r0, [r1]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L50:
	.align	2, 0
.L49:
	.word	gSaveBlock1+0x2d94
	.word	gSaveBlock2
.Lfe10:
	.size	 ScrSpecial_SaveBardSongLyrics,.Lfe10-ScrSpecial_SaveBardSongLyrics
	.align	2, 0
	.globl	PrepareSongText
	.type	 PrepareSongText,function
	.thumb_func
PrepareSongText:
	push	{r4, r5, r6, r7, lr}
	ldr	r1, .L74
	ldr	r0, .L74+0x4
	ldrh	r0, [r0]
	add	r5, r1, #0
	add	r5, r5, #0xe
	cmp	r0, #0
	bne	.L52	@cond_branch
	add	r5, r1, #0x2
.L52:
	ldr	r2, .L74+0x8
	add	r4, r2, #0
	mov	r6, #0x0
.L56:
	ldrh	r1, [r5]
	add	r5, r5, #0x2
	add	r0, r2, #0
	bl	EasyChat_GetWordText
	add	r2, r0, #0
	add	r7, r6, #0x1
	cmp	r2, r4
	beq	.L58	@cond_branch
	mov	r1, #0x37
.L59:
	ldrb	r0, [r4]
	cmp	r0, #0
	bne	.L60	@cond_branch
	strb	r1, [r4]
.L60:
	add	r4, r4, #0x1
	cmp	r2, r4
	bne	.L59	@cond_branch
.L58:
	add	r4, r4, #0x1
	mov	r0, #0x0
	strb	r0, [r2]
	add	r2, r2, #0x1
	ldrh	r1, [r5]
	add	r5, r5, #0x2
	add	r0, r2, #0
	bl	EasyChat_GetWordText
	add	r2, r0, #0
	cmp	r2, r4
	beq	.L63	@cond_branch
	mov	r1, #0x37
.L64:
	ldrb	r0, [r4]
	cmp	r0, #0
	bne	.L65	@cond_branch
	strb	r1, [r4]
.L65:
	add	r4, r4, #0x1
	cmp	r2, r4
	bne	.L64	@cond_branch
.L63:
	add	r4, r4, #0x1
	mov	r0, #0xfe
	strb	r0, [r2]
	add	r2, r2, #0x1
	ldrh	r1, [r5]
	add	r5, r5, #0x2
	add	r0, r2, #0
	bl	EasyChat_GetWordText
	add	r2, r0, #0
	cmp	r2, r4
	beq	.L68	@cond_branch
	mov	r1, #0x37
.L69:
	ldrb	r0, [r4]
	cmp	r0, #0
	bne	.L70	@cond_branch
	strb	r1, [r4]
.L70:
	add	r4, r4, #0x1
	cmp	r2, r4
	bne	.L69	@cond_branch
.L68:
	cmp	r6, #0
	bne	.L55	@cond_branch
	mov	r0, #0xfc
	strb	r0, [r2]
	add	r2, r2, #0x1
	mov	r0, #0xf
	strb	r0, [r2]
	add	r2, r2, #0x1
.L55:
	lsl	r0, r7, #0x10
	lsr	r6, r0, #0x10
	cmp	r6, #0x1
	bls	.L56	@cond_branch
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L75:
	.align	2, 0
.L74:
	.word	gSaveBlock1+0x2d94
	.word	gSpecialVar_0x8004
	.word	gStringVar4
.Lfe11:
	.size	 PrepareSongText,.Lfe11-PrepareSongText
	.align	2, 0
	.globl	ScrSpecial_PlayBardSong
	.type	 ScrSpecial_PlayBardSong,function
	.thumb_func
ScrSpecial_PlayBardSong:
	push	{lr}
	ldr	r0, .L77
	ldrb	r0, [r0]
	bl	StartBardSong
	bl	MenuDisplayMessageBox
	bl	ScriptContext1_Stop
	pop	{r0}
	bx	r0
.L78:
	.align	2, 0
.L77:
	.word	gSpecialVar_0x8004
.Lfe12:
	.size	 ScrSpecial_PlayBardSong,.Lfe12-ScrSpecial_PlayBardSong
	.align	2, 0
	.globl	ScrSpecial_GetHipsterSpokenFlag
	.type	 ScrSpecial_GetHipsterSpokenFlag,function
	.thumb_func
ScrSpecial_GetHipsterSpokenFlag:
	ldr	r0, .L80
	ldr	r1, .L80+0x4
	ldrb	r1, [r1, #0x1]
	strh	r1, [r0]
	bx	lr
.L81:
	.align	2, 0
.L80:
	.word	gScriptResult
	.word	gSaveBlock1+0x2d94
.Lfe13:
	.size	 ScrSpecial_GetHipsterSpokenFlag,.Lfe13-ScrSpecial_GetHipsterSpokenFlag
	.align	2, 0
	.globl	ScrSpecial_SetHipsterSpokenFlag
	.type	 ScrSpecial_SetHipsterSpokenFlag,function
	.thumb_func
ScrSpecial_SetHipsterSpokenFlag:
	ldr	r1, .L83
	mov	r0, #0x1
	strb	r0, [r1, #0x1]
	bx	lr
.L84:
	.align	2, 0
.L83:
	.word	gSaveBlock1+0x2d94
.Lfe14:
	.size	 ScrSpecial_SetHipsterSpokenFlag,.Lfe14-ScrSpecial_SetHipsterSpokenFlag
	.align	2, 0
	.globl	ScrSpecial_HipsterTeachWord
	.type	 ScrSpecial_HipsterTeachWord,function
	.thumb_func
ScrSpecial_HipsterTeachWord:
	push	{lr}
	bl	sub_80EB8EC
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	ldr	r0, .L89
	cmp	r1, r0
	bne	.L86	@cond_branch
	ldr	r1, .L89+0x4
	mov	r0, #0x0
	b	.L88
.L90:
	.align	2, 0
.L89:
	.word	0xffff
	.word	gScriptResult
.L86:
	ldr	r0, .L91
	bl	EasyChat_GetWordText
	ldr	r1, .L91+0x4
	mov	r0, #0x1
.L88:
	strh	r0, [r1]
	pop	{r0}
	bx	r0
.L92:
	.align	2, 0
.L91:
	.word	gStringVar1
	.word	gScriptResult
.Lfe15:
	.size	 ScrSpecial_HipsterTeachWord,.Lfe15-ScrSpecial_HipsterTeachWord
	.align	2, 0
	.globl	ScrSpecial_GiddyShouldTellAnotherTale
	.type	 ScrSpecial_GiddyShouldTellAnotherTale,function
	.thumb_func
ScrSpecial_GiddyShouldTellAnotherTale:
	push	{lr}
	ldr	r2, .L96
	ldrb	r0, [r2, #0x1]
	cmp	r0, #0xa
	bne	.L94	@cond_branch
	ldr	r1, .L96+0x4
	mov	r0, #0x0
	strh	r0, [r1]
	strb	r0, [r2, #0x1]
	b	.L95
.L97:
	.align	2, 0
.L96:
	.word	gSaveBlock1+0x2d94
	.word	gScriptResult
.L94:
	ldr	r1, .L98
	mov	r0, #0x1
	strh	r0, [r1]
.L95:
	pop	{r0}
	bx	r0
.L99:
	.align	2, 0
.L98:
	.word	gScriptResult
.Lfe16:
	.size	 ScrSpecial_GiddyShouldTellAnotherTale,.Lfe16-ScrSpecial_GiddyShouldTellAnotherTale
	.align	2, 0
	.globl	ScrSpecial_GenerateGiddyLine
	.type	 ScrSpecial_GenerateGiddyLine,function
	.thumb_func
ScrSpecial_GenerateGiddyLine:
	push	{r4, r5, r6, lr}
	ldr	r5, .L107
	ldrb	r0, [r5, #0x1]
	cmp	r0, #0
	bne	.L101	@cond_branch
	bl	sub_80F7DC0
.L101:
	ldrb	r0, [r5, #0x1]
	lsl	r0, r0, #0x1
	add	r6, r5, #0x4
	add	r0, r0, r6
	ldrh	r1, [r0]
	ldr	r0, .L107+0x4
	cmp	r1, r0
	beq	.L102	@cond_branch
	bl	Random
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	mov	r0, #0x7
	and	r4, r4, r0
	ldr	r0, .L107+0x8
	ldrb	r1, [r5, #0x1]
	lsl	r1, r1, #0x1
	add	r1, r1, r6
	ldrh	r1, [r1]
	bl	EasyChat_GetWordText
	add	r2, r0, #0
	ldr	r1, .L107+0xc
	bl	StringCopy
	add	r2, r0, #0
	ldr	r0, .L107+0x10
	lsl	r4, r4, #0x2
	add	r4, r4, r0
	ldr	r1, [r4]
	add	r0, r2, #0
	bl	StringCopy
	add	r2, r0, #0
	ldr	r1, .L107+0x14
	bl	StringCopy
	b	.L103
.L108:
	.align	2, 0
.L107:
	.word	gSaveBlock1+0x2d94
	.word	0xffff
	.word	gStringVar4
	.word	gOtherText_Is
	.word	sGiddyAdjectives
	.word	gOtherText_DontYouAgree
.L102:
	ldr	r0, .L109
	ldr	r3, .L109+0x4
	ldrb	r1, [r5, #0x2]
	add	r2, r1, #0x1
	strb	r2, [r5, #0x2]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r2, r5, #0
	add	r2, r2, #0x18
	add	r1, r1, r2
	ldrb	r1, [r1]
	lsl	r1, r1, #0x2
	add	r1, r1, r3
	ldr	r1, [r1]
	bl	StringCopy
.L103:
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0xa
	bl	__umodsi3
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L104	@cond_branch
	mov	r0, #0xa
	b	.L106
.L110:
	.align	2, 0
.L109:
	.word	gStringVar4
	.word	sGiddyQuestions
.L104:
	ldrb	r0, [r5, #0x1]
	add	r0, r0, #0x1
.L106:
	strb	r0, [r5, #0x1]
	ldr	r1, .L111
	mov	r0, #0x1
	strh	r0, [r1]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L112:
	.align	2, 0
.L111:
	.word	gScriptResult
.Lfe17:
	.size	 ScrSpecial_GenerateGiddyLine,.Lfe17-ScrSpecial_GenerateGiddyLine
	.section .rodata
	.align	1, 0
	.type	 gUnknown_083E53C8,object
gUnknown_083E53C8:
	.short	0x0
	.short	0x0
	.short	0xc
	.short	0x0
	.short	0xd
	.short	0x0
	.short	0x12
	.short	0x0
	.short	0x13
	.short	0x0
	.short	0x15
	.short	0x0
	.size	 gUnknown_083E53C8,24
.text
	.align	2, 0
	.type	 sub_80F7DC0,function
	.thumb_func
sub_80F7DC0:
	.syntax unified
    push {r4-r7,lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5-r7}
    sub sp, 0x18
    ldr r1, _080F7E84 @ =gUnknown_083E53C8
    mov r0, sp
    movs r2, 0x18
    bl memcpy
    movs r5, 0
    movs r0, 0x2
    add r0, sp
    mov r8, r0
    ldr r1, _080F7E88 @ =gSaveBlock1 + 0x2D94
    adds r1, 0x18
    adds r3, r1, 0
_080F7DE4:
    adds r0, r3, r5
    strb r5, [r0]
    adds r0, r5, 0x1
    lsls r0, 16
    lsrs r5, r0, 16
    cmp r5, 0x7
    bls _080F7DE4
    movs r5, 0
    ldr r2, _080F7E88 @ =gSaveBlock1 + 0x2D94
    adds r2, 0x4
    mov r9, r2
    adds r6, r1, 0
_080F7DFC:
    bl Random
    lsls r0, 16
    lsrs r0, 16
    adds r4, r5, 0x1
    adds r1, r4, 0
    bl __modsi3
    lsls r0, 16
    lsrs r1, r0, 16
    adds r2, r6, r5
    ldrb r7, [r2]
    adds r1, r6, r1
    ldrb r0, [r1]
    strb r0, [r2]
    strb r7, [r1]
    lsls r4, 16
    lsrs r5, r4, 16
    cmp r5, 0x7
    bls _080F7DFC
    movs r3, 0
    mov r10, r3
    movs r5, 0
_080F7E2A:
    lsls r4, r5, 2
    mov r1, sp
    adds r0, r1, r4
    ldrb r0, [r0]
    bl sub_80EAE88
    add r4, r8
    strh r0, [r4]
    add r0, r10
    lsls r0, 16
    lsrs r0, 16
    mov r10, r0
    adds r0, r5, 0x1
    lsls r0, 16
    lsrs r5, r0, 16
    cmp r5, 0x5
    bls _080F7E2A
    movs r0, 0
    ldr r2, _080F7E88 @ =gSaveBlock1 + 0x2D94
    strb r0, [r2, 0x2]
    movs r7, 0
    movs r5, 0
_080F7E56:
    bl Random
    lsls r0, 16
    lsrs r0, 16
    movs r1, 0xA
    bl __umodsi3
    lsls r0, 16
    lsrs r1, r0, 16
    cmp r1, 0x2
    bhi _080F7E90
    cmp r7, 0x7
    bhi _080F7E90
    lsls r0, r5, 1
    add r0, r9
    ldr r1, _080F7E8C @ =0x0000ffff
    strh r1, [r0]
    adds r0, r7, 0x1
    lsls r0, 16
    lsrs r7, r0, 16
    adds r4, r5, 0x1
    b _080F7EE2
    .align 2, 0
_080F7E84: .4byte gUnknown_083E53C8
_080F7E88: .4byte gSaveBlock1 + 0x2D94
_080F7E8C: .4byte 0x0000ffff
_080F7E90:
    bl Random
    lsls r0, 16
    lsrs r0, 16
    mov r1, r10
    bl __umodsi3
    lsls r0, 16
    lsrs r2, r0, 16
    movs r1, 0
    adds r4, r5, 0x1
    lsls r6, r5, 1
    cmp r5, 0x5
    bhi _080F7ECC
    mov r3, r8
    ldrh r0, [r3]
    b _080F7EC2
_080F7EB2:
    adds r0, r1, 0x1
    lsls r0, 16
    lsrs r1, r0, 16
    cmp r5, 0x5
    bhi _080F7ECC
    lsls r0, r1, 2
    adds r0, r3, r0
    ldrh r0, [r0]
_080F7EC2:
    subs r0, r2, r0
    lsls r0, 16
    lsrs r2, r0, 16
    cmp r0, 0
    bgt _080F7EB2
_080F7ECC:
    cmp r1, 0x6
    bne _080F7ED2
    movs r1, 0
_080F7ED2:
    lsls r0, r1, 2
    add r0, sp
    ldrh r0, [r0]
    bl sub_80EB784
    mov r2, r9
    adds r1, r2, r6
    strh r0, [r1]
_080F7EE2:
    lsls r0, r4, 16
    lsrs r5, r0, 16
    cmp r5, 0x9
    bls _080F7E56
    add sp, 0x18
    pop {r3-r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4-r7}
    pop {r0}
    bx r0
    .syntax divided

	.code	16
.Lfe18:
	.size	 sub_80F7DC0,.Lfe18-sub_80F7DC0
	.align	2, 0
	.type	 sub_80F7EFC,function
	.thumb_func
sub_80F7EFC:
	ldr	r0, .L115
	add	r0, r0, #0x29
	mov	r1, #0x0
	strb	r1, [r0]
	bx	lr
.L116:
	.align	2, 0
.L115:
	.word	gSaveBlock1+0x2d94
.Lfe19:
	.size	 sub_80F7EFC,.Lfe19-sub_80F7EFC
	.align	2, 0
	.type	 sub_80F7F0C,function
	.thumb_func
sub_80F7F0C:
	ldr	r1, .L118
	mov	r0, #0x0
	strb	r0, [r1, #0x1]
	bx	lr
.L119:
	.align	2, 0
.L118:
	.word	gSaveBlock1+0x2d94
.Lfe20:
	.size	 sub_80F7F0C,.Lfe20-sub_80F7F0C
	.align	2, 0
	.type	 sub_80F7F18,function
	.thumb_func
sub_80F7F18:
	push	{lr}
	bl	sub_8109A20
	pop	{r0}
	bx	r0
.Lfe21:
	.size	 sub_80F7F18,.Lfe21-sub_80F7F18
	.align	2, 0
	.type	 sub_80F7F24,function
	.thumb_func
sub_80F7F24:
	push	{lr}
	bl	sub_80F8428
	pop	{r0}
	bx	r0
.Lfe22:
	.size	 sub_80F7F24,.Lfe22-sub_80F7F24
	.align	2, 0
	.globl	sub_80F7F30
	.type	 sub_80F7F30,function
	.thumb_func
sub_80F7F30:
	push	{lr}
	bl	GetCurrentMauvilleOldMan
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x4
	bhi	.L123	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L131
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L132:
	.align	2, 0
.L131:
	.word	.L129
	.align	2, 0
	.align	2, 0
.L129:
	.word	.L124
	.word	.L125
	.word	.L127
	.word	.L126
	.word	.L123
.L124:
	bl	sub_80F7EFC
	b	.L123
.L125:
	bl	sub_80F7F0C
	b	.L123
.L126:
	bl	sub_80F7F24
	b	.L123
.L127:
	bl	sub_80F7F18
.L123:
	bl	sub_80F83D0
	pop	{r0}
	bx	r0
.Lfe23:
	.size	 sub_80F7F30,.Lfe23-sub_80F7F30
	.align	2, 0
	.type	 StartBardSong,function
	.thumb_func
StartBardSong:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L134
	mov	r1, #0x50
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L134+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	strh	r4, [r1, #0x12]
	pop	{r4}
	pop	{r0}
	bx	r0
.L135:
	.align	2, 0
.L134:
	.word	Task_BardSong
	.word	gTasks
.Lfe24:
	.size	 StartBardSong,.Lfe24-StartBardSong
	.align	2, 0
	.type	 BardSing,function
	.thumb_func
BardSing:
	push	{r4, r5, r6, r7, lr}
	add	r6, r1, #0
	mov	r1, #0x8
	ldrsh	r0, [r0, r1]
	cmp	r0, #0x5
	bls	.LCB902
	b	.L137	@long jump
.LCB902:
	lsl	r0, r0, #0x2
	ldr	r1, .L176
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L177:
	.align	2, 0
.L176:
	.word	.L172
	.align	2, 0
	.align	2, 0
.L172:
	.word	.L138
	.word	.L137
	.word	.L152
	.word	.L154
	.word	.L154
	.word	.L137
.L138:
	ldr	r2, .L178
	ldr	r0, .L178+0x4
	ldrh	r0, [r0]
	add	r1, r2, #0
	add	r1, r1, #0xe
	cmp	r0, #0
	bne	.L139	@cond_branch
	add	r1, r2, #0x2
.L139:
	add	r2, r1, #0
	add	r1, r6, #0
	add	r1, r1, #0xc
	mov	r3, #0x5
.L144:
	ldrh	r0, [r2]
	strh	r0, [r1]
	add	r2, r2, #0x2
	add	r1, r1, #0x2
	sub	r3, r3, #0x1
	cmp	r3, #0
	bge	.L144	@cond_branch
	ldr	r2, .L178+0x8
	add	r4, r2, #0
	mov	r2, #0x0
	add	r1, r6, #0
	add	r1, r1, #0x18
	mov	r3, #0x5
.L149:
	ldrh	r0, [r1]
	orr	r0, r0, r4
	strh	r0, [r1]
	strh	r2, [r1, #0x2]
	strh	r2, [r1, #0x4]
	strh	r2, [r1, #0x6]
	add	r1, r1, #0x8
	sub	r3, r3, #0x1
	cmp	r3, #0
	bge	.L149	@cond_branch
	mov	r0, #0x0
	strb	r0, [r6]
	strb	r0, [r6, #0x1]
	strh	r0, [r6, #0x4]
	b	.L137
.L179:
	.align	2, 0
.L178:
	.word	gSaveBlock1+0x2d94
	.word	gSpecialVar_0x8004
	.word	0xffff
.L152:
	ldrb	r1, [r6]
	lsl	r1, r1, #0x1
	add	r0, r6, #0
	add	r0, r0, #0xc
	add	r0, r0, r1
	ldrh	r4, [r0]
	lsr	r0, r4, #0x9
	ldr	r1, .L180
	and	r1, r1, r4
	bl	GetWordSounds
	add	r1, r0, #0
	mov	r0, #0x0
	strh	r0, [r6, #0x4]
	mov	r2, #0x3
	and	r2, r2, r4
	lsr	r4, r4, #0x3
	mov	r0, #0x1
	and	r4, r4, r0
	add	r2, r2, r4
	add	r0, r6, #0
	bl	GetWordPhonemes
	b	.L137
.L181:
	.align	2, 0
.L180:
	.word	0x1ff
.L154:
	ldrb	r1, [r6, #0x1]
	lsl	r0, r1, #0x3
	add	r0, r0, #0x18
	add	r7, r6, r0
	ldrb	r0, [r6, #0x3]
	cmp	r0, #0x1
	beq	.L165	@cond_branch
	cmp	r0, #0x1
	bgt	.L170	@cond_branch
	cmp	r0, #0
	beq	.L156	@cond_branch
	b	.L137
.L170:
	cmp	r0, #0xfe
	beq	.L167	@cond_branch
	b	.L137
.L156:
	ldrb	r0, [r6, #0x2]
	cmp	r0, #0
	bne	.L157	@cond_branch
	cmp	r1, #0x6
	beq	.L159	@cond_branch
	ldrh	r0, [r7]
	cmp	r0, #0xff
	bne	.L158	@cond_branch
.L159:
	mov	r0, #0xfe
	b	.L174
.L158:
	ldrh	r0, [r7, #0x2]
	strb	r0, [r6, #0x2]
	ldrh	r0, [r7]
	cmp	r0, #0x32
	bhi	.L160	@cond_branch
	mov	r1, #0x3
	bl	__udivsi3
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	add	r0, r0, #0xf9
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	m4aSongNumStart
.L160:
	mov	r0, #0x1
	strb	r0, [r6, #0x3]
	b	.L161
.L157:
	ldrh	r1, [r6, #0xa]
	mov	r2, #0xa
	ldrsh	r0, [r6, r2]
	cmp	r0, #0xa
	ble	.L162	@cond_branch
	ldrh	r0, [r6, #0x6]
	sub	r0, r0, #0x2
	strh	r0, [r6, #0x6]
.L162:
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L163	@cond_branch
	ldrh	r0, [r6, #0x8]
	add	r0, r0, #0x40
	b	.L175
.L163:
	ldrh	r0, [r6, #0x8]
	sub	r0, r0, #0x40
.L175:
	strh	r0, [r6, #0x8]
	ldr	r4, .L182
	ldr	r5, .L182+0x4
	ldrh	r2, [r6, #0x6]
	add	r0, r4, #0
	add	r1, r5, #0
	bl	m4aMPlayVolumeControl
	mov	r0, #0x8
	ldrsh	r2, [r6, r0]
	add	r0, r4, #0
	add	r1, r5, #0
	bl	m4aMPlayPitchControl
	ldrh	r0, [r6, #0xa]
	add	r0, r0, #0x1
	strh	r0, [r6, #0xa]
.L161:
	ldrb	r0, [r6, #0x2]
	sub	r0, r0, #0x1
	strb	r0, [r6, #0x2]
	b	.L137
.L183:
	.align	2, 0
.L182:
	.word	gMPlay_SE2
	.word	0xffff
.L165:
	add	r0, r1, #0x1
	mov	r1, #0x0
	strb	r0, [r6, #0x1]
	strb	r1, [r6, #0x3]
	ldrh	r0, [r7]
	cmp	r0, #0x32
	bhi	.L137	@cond_branch
	ldrh	r0, [r7, #0x6]
	lsl	r0, r0, #0x4
	mov	r1, #0x80
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	strh	r0, [r6, #0x6]
	ldr	r4, .L184
	ldr	r5, .L184+0x4
	ldrh	r2, [r6, #0x6]
	add	r0, r4, #0
	add	r1, r5, #0
	bl	m4aMPlayVolumeControl
	mov	r2, #0x80
	lsl	r2, r2, #0x2
	add	r0, r2, #0
	ldrh	r7, [r7, #0x4]
	add	r0, r0, r7
	strh	r0, [r6, #0x8]
	mov	r0, #0x8
	ldrsh	r2, [r6, r0]
	add	r0, r4, #0
	add	r1, r5, #0
	bl	m4aMPlayPitchControl
	b	.L137
.L185:
	.align	2, 0
.L184:
	.word	gMPlay_SE2
	.word	0xffff
.L167:
	ldr	r0, .L186
	bl	m4aMPlayStop
	mov	r0, #0xff
.L174:
	strb	r0, [r6, #0x3]
.L137:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L187:
	.align	2, 0
.L186:
	.word	gMPlay_SE2
.Lfe25:
	.size	 BardSing,.Lfe25-BardSing
	.align	2, 0
	.type	 Task_BardSong,function
	.thumb_func
Task_BardSong:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #0xfffffffc
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	ldr	r1, .L234
	add	r5, r0, r1
	ldr	r1, .L234+0x4
	add	r0, r5, #0
	bl	BardSing
	mov	r1, #0x8
	ldrsh	r0, [r5, r1]
	cmp	r0, #0x5
	bls	.LCB1261
	b	.L189	@long jump
.LCB1261:
	lsl	r0, r0, #0x2
	ldr	r1, .L234+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L235:
	.align	2, 0
.L234:
	.word	gTasks
	.word	gUnknown_03005DA0
	.word	.L227
	.align	2, 0
	.align	2, 0
.L227:
	.word	.L190
	.word	.L191
	.word	.L193
	.word	.L207
	.word	.L225
	.word	.L204
.L190:
	bl	PrepareSongText
	ldr	r4, .L236
	ldr	r0, [r4]
	ldr	r1, .L236+0x4
	bl	InitWindowFromConfig
	ldr	r0, [r4]
	ldr	r1, .L236+0x8
	mov	r2, #0xf
	str	r2, [sp]
	mov	r2, #0x2
	mov	r3, #0x4
	bl	sub_8002EB0
	mov	r0, #0x0
	strh	r0, [r5, #0xa]
	strh	r0, [r5, #0xc]
	strh	r0, [r5, #0xe]
	strh	r0, [r5, #0x10]
	mov	r0, #0x4
	bl	FadeOutBGMTemporarily
	mov	r0, #0x1
	b	.L229
.L237:
	.align	2, 0
.L236:
	.word	gMenuWindowPtr
	.word	gWindowConfig_81E6CE4
	.word	gStringVar4
.L191:
	bl	IsBGMPausedOrStopped
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB1322
	b	.L189	@long jump
.LCB1322:
	mov	r0, #0x2
	b	.L229
.L193:
	ldr	r4, .L238
	mov	r2, #0xe
	ldrsh	r1, [r5, r2]
	ldr	r0, .L238+0x4
	add	r1, r1, r0
	mov	r3, #0x0
	ldrb	r0, [r1]
	ldr	r7, .L238+0x8
	ldrh	r2, [r5, #0x12]
	ldr	r6, .L238+0xc
	b	.L230
.L239:
	.align	2, 0
.L238:
	.word	gSaveBlock1+0x2d94
	.word	gStringVar4
	.word	gUnknown_03005DA0
	.word	gUnknown_020388BC
.L196:
	add	r1, r1, #0x1
	add	r0, r3, #0x1
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	ldrb	r0, [r1]
.L230:
	cmp	r0, #0
	beq	.L195	@cond_branch
	cmp	r0, #0xfe
	beq	.L195	@cond_branch
	cmp	r0, #0xfc
	beq	.L195	@cond_branch
	cmp	r0, #0xff
	bne	.L196	@cond_branch
.L195:
	cmp	r2, #0
	bne	.L199	@cond_branch
	mov	r0, #0x10
	ldrsh	r1, [r5, r0]
	lsl	r1, r1, #0x1
	add	r0, r4, #0x2
	b	.L231
.L199:
	mov	r2, #0x10
	ldrsh	r1, [r5, r2]
	lsl	r1, r1, #0x1
	add	r0, r4, #0
	add	r0, r0, #0xe
.L231:
	add	r0, r0, r1
	ldrh	r0, [r0]
	mov	r1, #0x3
	and	r1, r1, r0
	lsr	r0, r0, #0x3
	mov	r2, #0x1
	and	r0, r0, r2
	add	r1, r1, r0
	strh	r1, [r6]
	mov	r1, #0x4
	ldrsh	r0, [r7, r1]
	add	r1, r3, #0
	bl	__divsi3
	mov	r1, #0x0
	strh	r0, [r7, #0x4]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bgt	.L201	@cond_branch
	mov	r0, #0x1
	strh	r0, [r7, #0x4]
.L201:
	ldrh	r0, [r5, #0x10]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x10]
	mov	r2, #0xc
	ldrsh	r0, [r5, r2]
	cmp	r0, #0
	bne	.L202	@cond_branch
	mov	r0, #0x3
	b	.L232
.L202:
	mov	r0, #0x5
.L232:
	strh	r0, [r5, #0x8]
	strh	r1, [r5, #0xa]
	b	.L189
.L204:
	ldrh	r1, [r5, #0xc]
	mov	r2, #0xc
	ldrsh	r0, [r5, r2]
	cmp	r0, #0
	bne	.LCB1450
	b	.L233	@long jump
.LCB1450:
	sub	r0, r1, #0x1
	strh	r0, [r5, #0xc]
	b	.L189
.L207:
	ldr	r1, .L240
	mov	r2, #0xe
	ldrsh	r0, [r5, r2]
	add	r0, r0, r1
	ldrb	r4, [r0]
	cmp	r4, #0xff
	bne	.L208	@cond_branch
	mov	r0, #0xc8
	lsl	r0, r0, #0x1
	mov	r1, #0x6
	bl	FadeInNewBGM
	ldr	r0, .L240+0x4
	mov	r1, #0x2
	bl	m4aMPlayFadeOutTemporarily
	bl	EnableBothScriptContexts
	add	r0, r6, #0
	bl	DestroyTask
	b	.L189
.L241:
	.align	2, 0
.L240:
	.word	gStringVar4
	.word	gMPlay_SE2
.L208:
	cmp	r4, #0
	bne	.L210	@cond_branch
	ldr	r0, .L242
	ldr	r0, [r0]
	bl	sub_8003418
	ldrh	r0, [r5, #0xe]
	add	r0, r0, #0x1
	strh	r0, [r5, #0xe]
	mov	r0, #0x2
	strh	r0, [r5, #0x8]
	strh	r4, [r5, #0xc]
	b	.L189
.L243:
	.align	2, 0
.L242:
	.word	gMenuWindowPtr
.L210:
	cmp	r4, #0xfe
	bne	.L212	@cond_branch
	ldrh	r0, [r5, #0xe]
	add	r0, r0, #0x1
	mov	r1, #0x0
	strh	r0, [r5, #0xe]
	mov	r0, #0x2
	strh	r0, [r5, #0x8]
	strh	r1, [r5, #0xc]
	b	.L189
.L212:
	cmp	r4, #0xfc
	bne	.L214	@cond_branch
	ldrh	r0, [r5, #0xe]
	add	r0, r0, #0x2
	strh	r0, [r5, #0xe]
	mov	r0, #0x2
	strh	r0, [r5, #0x8]
	mov	r0, #0x8
	strh	r0, [r5, #0xc]
	b	.L189
.L214:
	cmp	r4, #0x37
	bne	.L216	@cond_branch
	mov	r4, #0x0
	strb	r4, [r0]
	ldr	r0, .L244
	ldr	r0, [r0]
	bl	sub_8003418
	ldrh	r0, [r5, #0xe]
	add	r0, r0, #0x1
	strh	r0, [r5, #0xe]
	strh	r4, [r5, #0xc]
	b	.L189
.L245:
	.align	2, 0
.L244:
	.word	gMenuWindowPtr
.L216:
	mov	r1, #0xa
	ldrsh	r0, [r5, r1]
	cmp	r0, #0x1
	beq	.L220	@cond_branch
	cmp	r0, #0x1
	bgt	.L224	@cond_branch
	cmp	r0, #0
	beq	.L219	@cond_branch
	b	.L189
.L224:
	cmp	r0, #0x2
	beq	.L221	@cond_branch
	b	.L189
.L219:
	ldr	r0, .L246
	ldr	r0, [r0]
	bl	sub_8003418
.L220:
	ldrh	r0, [r5, #0xa]
	add	r0, r0, #0x1
	strh	r0, [r5, #0xa]
	b	.L189
.L247:
	.align	2, 0
.L246:
	.word	gMenuWindowPtr
.L221:
	ldrh	r0, [r5, #0xe]
	add	r0, r0, #0x1
	mov	r1, #0x0
	strh	r0, [r5, #0xe]
	strh	r1, [r5, #0xa]
	ldr	r0, .L248
	ldrh	r0, [r0, #0x4]
	strh	r0, [r5, #0xc]
	mov	r0, #0x4
	b	.L229
.L249:
	.align	2, 0
.L248:
	.word	gUnknown_03005DA0
.L225:
	ldrh	r0, [r5, #0xc]
	sub	r0, r0, #0x1
	strh	r0, [r5, #0xc]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L189	@cond_branch
.L233:
	mov	r0, #0x3
.L229:
	strh	r0, [r5, #0x8]
.L189:
	add	sp, sp, #0x4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe26:
	.size	 Task_BardSong,.Lfe26-Task_BardSong
	.align	2, 0
	.globl	sub_80F83D0
	.type	 sub_80F83D0,function
	.thumb_func
sub_80F83D0:
	push	{r4, lr}
	ldr	r4, .L251
	bl	GetCurrentMauvilleOldMan
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x8
	mov	r0, #0x8a
	lsl	r0, r0, #0xf
	add	r1, r1, r0
	lsr	r1, r1, #0x10
	add	r0, r4, #0
	bl	VarSet
	pop	{r4}
	pop	{r0}
	bx	r0
.L252:
	.align	2, 0
.L251:
	.word	0x4010
.Lfe27:
	.size	 sub_80F83D0,.Lfe27-sub_80F83D0
	.section .rodata
	.align	2, 0
	.type	 sStorytellerStories,object
sStorytellerStories:
	.byte	0x32
	.byte	0x1
	.space	2
	.word	gTextStoryteller_Story1Title
	.word	gTextStoryteller_Story1Action
	.word	gTextStoryteller_Story1Text
	.byte	0x2
	.byte	0x1
	.space	2
	.word	gTextStoryteller_Story2Title
	.word	gTextStoryteller_Story2Action
	.word	gTextStoryteller_Story2Text
	.byte	0x3
	.byte	0x1
	.space	2
	.word	gTextStoryteller_Story3Title
	.word	gTextStoryteller_Story3Action
	.word	gTextStoryteller_Story3Text
	.byte	0x4
	.byte	0x1
	.space	2
	.word	gTextStoryteller_Story4Title
	.word	gTextStoryteller_Story4Action
	.word	gTextStoryteller_Story4Text
	.byte	0x6
	.byte	0x1
	.space	2
	.word	gTextStoryteller_Story5Title
	.word	gTextStoryteller_Story5Action
	.word	gTextStoryteller_Story5Text
	.byte	0x9
	.byte	0x1
	.space	2
	.word	gTextStoryteller_Story6Title
	.word	gTextStoryteller_Story6Action
	.word	gTextStoryteller_Story6Text
	.byte	0xb
	.byte	0x1
	.space	2
	.word	gTextStoryteller_Story7Title
	.word	gTextStoryteller_Story7Action
	.word	gTextStoryteller_Story7Text
	.byte	0xc
	.byte	0x1
	.space	2
	.word	gTextStoryteller_Story8Title
	.word	gTextStoryteller_Story8Action
	.word	gTextStoryteller_Story8Text
	.byte	0xd
	.byte	0x1
	.space	2
	.word	gTextStoryteller_Story9Title
	.word	gTextStoryteller_Story9Action
	.word	gTextStoryteller_Story9Text
	.byte	0xe
	.byte	0x1
	.space	2
	.word	gTextStoryteller_Story10Title
	.word	gTextStoryteller_Story10Action
	.word	gTextStoryteller_Story10Text
	.byte	0xf
	.byte	0x1
	.space	2
	.word	gTextStoryteller_Story11Title
	.word	gTextStoryteller_Story11Action
	.word	gTextStoryteller_Story11Text
	.byte	0x10
	.byte	0x1
	.space	2
	.word	gTextStoryteller_Story12Title
	.word	gTextStoryteller_Story12Action
	.word	gTextStoryteller_Story12Text
	.byte	0x11
	.byte	0x1
	.space	2
	.word	gTextStoryteller_Story13Title
	.word	gTextStoryteller_Story13Action
	.word	gTextStoryteller_Story13Text
	.byte	0x12
	.byte	0x1
	.space	2
	.word	gTextStoryteller_Story14Title
	.word	gTextStoryteller_Story14Action
	.word	gTextStoryteller_Story14Text
	.byte	0x13
	.byte	0x1
	.space	2
	.word	gTextStoryteller_Story15Title
	.word	gTextStoryteller_Story15Action
	.word	gTextStoryteller_Story15Text
	.byte	0x14
	.byte	0x1
	.space	2
	.word	gTextStoryteller_Story16Title
	.word	gTextStoryteller_Story16Action
	.word	gTextStoryteller_Story16Text
	.byte	0x1a
	.byte	0x1
	.space	2
	.word	gTextStoryteller_Story17Title
	.word	gTextStoryteller_Story17Action
	.word	gTextStoryteller_Story17Text
	.byte	0x1b
	.byte	0x1
	.space	2
	.word	gTextStoryteller_Story18Title
	.word	gTextStoryteller_Story18Action
	.word	gTextStoryteller_Story18Text
	.byte	0x1c
	.byte	0x1
	.space	2
	.word	gTextStoryteller_Story19Title
	.word	gTextStoryteller_Story19Action
	.word	gTextStoryteller_Story19Text
	.byte	0x1d
	.byte	0x2
	.space	2
	.word	gTextStoryteller_Story20Title
	.word	gTextStoryteller_Story20Action
	.word	gTextStoryteller_Story20Text
	.byte	0x1e
	.byte	0x1
	.space	2
	.word	gTextStoryteller_Story21Title
	.word	gTextStoryteller_Story21Action
	.word	gTextStoryteller_Story21Text
	.byte	0x21
	.byte	0x1
	.space	2
	.word	gTextStoryteller_Story22Title
	.word	gTextStoryteller_Story22Action
	.word	gTextStoryteller_Story22Text
	.byte	0x24
	.byte	0x1
	.space	2
	.word	gTextStoryteller_Story23Title
	.word	gTextStoryteller_Story23Action
	.word	gTextStoryteller_Story23Text
	.byte	0x25
	.byte	0x1
	.space	2
	.word	gTextStoryteller_Story24Title
	.word	gTextStoryteller_Story24Action
	.word	gTextStoryteller_Story24Text
	.byte	0x26
	.byte	0x1
	.space	2
	.word	gTextStoryteller_Story25Title
	.word	gTextStoryteller_Story25Action
	.word	gTextStoryteller_Story25Text
	.byte	0x27
	.byte	0x1
	.space	2
	.word	gTextStoryteller_Story26Title
	.word	gTextStoryteller_Story26Action
	.word	gTextStoryteller_Story26Text
	.byte	0x28
	.byte	0x1
	.space	2
	.word	gTextStoryteller_Story27Title
	.word	gTextStoryteller_Story27Action
	.word	gTextStoryteller_Story27Text
	.byte	0x29
	.byte	0x1
	.space	2
	.word	gTextStoryteller_Story28Title
	.word	gTextStoryteller_Story28Action
	.word	gTextStoryteller_Story28Text
	.byte	0x2a
	.byte	0x1
	.space	2
	.word	gTextStoryteller_Story29Title
	.word	gTextStoryteller_Story29Action
	.word	gTextStoryteller_Story29Text
	.byte	0x2b
	.byte	0x1
	.space	2
	.word	gTextStoryteller_Story30Title
	.word	gTextStoryteller_Story30Action
	.word	gTextStoryteller_Story30Text
	.byte	0x2c
	.byte	0x1
	.space	2
	.word	gTextStoryteller_Story31Title
	.word	gTextStoryteller_Story31Action
	.word	gTextStoryteller_Story31Text
	.byte	0x2d
	.byte	0x1
	.space	2
	.word	gTextStoryteller_Story32Title
	.word	gTextStoryteller_Story32Action
	.word	gTextStoryteller_Story32Text
	.byte	0x2e
	.byte	0x1
	.space	2
	.word	gTextStoryteller_Story33Title
	.word	gTextStoryteller_Story33Action
	.word	gTextStoryteller_Story33Text
	.byte	0x2f
	.byte	0x1
	.space	2
	.word	gTextStoryteller_Story34Title
	.word	gTextStoryteller_Story34Action
	.word	gTextStoryteller_Story34Text
	.byte	0x30
	.byte	0x1
	.space	2
	.word	gTextStoryteller_Story35Title
	.word	gTextStoryteller_Story35Action
	.word	gTextStoryteller_Story35Text
	.byte	0x31
	.byte	0x1
	.space	2
	.word	gTextStoryteller_Story36Title
	.word	gTextStoryteller_Story36Action
	.word	gTextStoryteller_Story36Text
	.size	 sStorytellerStories,576
.text
	.align	2, 0
	.type	 StorytellerSetup,function
	.thumb_func
StorytellerSetup:
	push	{r4, lr}
	ldr	r0, .L259
	mov	r2, #0x0
	mov	r1, #0x3
	strb	r1, [r0]
	strb	r2, [r0, #0x1]
	mov	r4, #0x0
	mov	r3, #0xff
	add	r1, r0, #0x4
	mov	r2, #0x3
.L257:
	strb	r4, [r1]
	ldrb	r0, [r1, #0x4]
	orr	r0, r0, r3
	strb	r0, [r1, #0x4]
	add	r1, r1, #0x1
	sub	r2, r2, #0x1
	cmp	r2, #0
	bge	.L257	@cond_branch
	pop	{r4}
	pop	{r0}
	bx	r0
.L260:
	.align	2, 0
.L259:
	.word	gSaveBlock1+0x2d94
.Lfe28:
	.size	 StorytellerSetup,.Lfe28-StorytellerSetup
	.align	2, 0
	.type	 sub_80F8428,function
	.thumb_func
sub_80F8428:
	ldr	r0, .L262
	mov	r2, #0x0
	mov	r1, #0x3
	strb	r1, [r0]
	strb	r2, [r0, #0x1]
	bx	lr
.L263:
	.align	2, 0
.L262:
	.word	gSaveBlock1+0x2d94
.Lfe29:
	.size	 sub_80F8428,.Lfe29-sub_80F8428
	.align	2, 0
	.type	 StorytellerGetGameStat,function
	.thumb_func
StorytellerGetGameStat:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x32
	bne	.L265	@cond_branch
	mov	r0, #0x0
.L265:
	bl	GetGameStat
	pop	{r1}
	bx	r1
.Lfe30:
	.size	 StorytellerGetGameStat,.Lfe30-StorytellerGetGameStat
	.align	2, 0
	.type	 GetStoryByStat,function
	.thumb_func
GetStoryByStat:
	push	{lr}
	add	r3, r0, #0
	mov	r2, #0x0
	ldr	r1, .L274
.L270:
	ldrb	r0, [r1]
	cmp	r0, r3
	bne	.L269	@cond_branch
	add	r0, r1, #0
	b	.L273
.L275:
	.align	2, 0
.L274:
	.word	sStorytellerStories
.L269:
	add	r1, r1, #0x10
	add	r2, r2, #0x1
	cmp	r2, #0x23
	ble	.L270	@cond_branch
	ldr	r0, .L276
.L273:
	pop	{r1}
	bx	r1
.L277:
	.align	2, 0
.L276:
	.word	sStorytellerStories+0x230
.Lfe31:
	.size	 GetStoryByStat,.Lfe31-GetStoryByStat
	.align	2, 0
	.type	 GetStoryTitleByStat,function
	.thumb_func
GetStoryTitleByStat:
	push	{lr}
	bl	GetStoryByStat
	ldr	r0, [r0, #0x4]
	pop	{r1}
	bx	r1
.Lfe32:
	.size	 GetStoryTitleByStat,.Lfe32-GetStoryTitleByStat
	.align	2, 0
	.type	 GetStoryTextByStat,function
	.thumb_func
GetStoryTextByStat:
	push	{lr}
	bl	GetStoryByStat
	ldr	r0, [r0, #0xc]
	pop	{r1}
	bx	r1
.Lfe33:
	.size	 GetStoryTextByStat,.Lfe33-GetStoryTextByStat
	.align	2, 0
	.type	 GetStoryActionByStat,function
	.thumb_func
GetStoryActionByStat:
	push	{lr}
	bl	GetStoryByStat
	ldr	r0, [r0, #0x8]
	pop	{r1}
	bx	r1
.Lfe34:
	.size	 GetStoryActionByStat,.Lfe34-GetStoryActionByStat
	.align	2, 0
	.type	 GetFreeStorySlot,function
	.thumb_func
GetFreeStorySlot:
	push	{lr}
	mov	r1, #0x0
	ldr	r2, .L288
	ldrb	r0, [r2, #0x4]
	cmp	r0, #0
	beq	.L283	@cond_branch
	add	r2, r2, #0x4
.L284:
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x3
	bhi	.L283	@cond_branch
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L284	@cond_branch
.L283:
	add	r0, r1, #0
	pop	{r1}
	bx	r1
.L289:
	.align	2, 0
.L288:
	.word	gSaveBlock1+0x2d94
.Lfe35:
	.size	 GetFreeStorySlot,.Lfe35-GetFreeStorySlot
	.align	2, 0
	.type	 StorytellerGetRecordedTrainerStat,function
	.thumb_func
StorytellerGetRecordedTrainerStat:
	lsl	r0, r0, #0x2
	ldr	r1, .L291
	add	r0, r0, r1
	ldrb	r2, [r0]
	ldrb	r1, [r0, #0x1]
	lsl	r1, r1, #0x8
	orr	r2, r2, r1
	ldrb	r1, [r0, #0x2]
	lsl	r1, r1, #0x10
	orr	r2, r2, r1
	ldrb	r0, [r0, #0x3]
	lsl	r0, r0, #0x18
	orr	r2, r2, r0
	add	r0, r2, #0
	bx	lr
.L292:
	.align	2, 0
.L291:
	.word	gSaveBlock1+0x2db8
.Lfe36:
	.size	 StorytellerGetRecordedTrainerStat,.Lfe36-StorytellerGetRecordedTrainerStat
	.align	2, 0
	.type	 StorytellerSetRecordedTrainerStat,function
	.thumb_func
StorytellerSetRecordedTrainerStat:
	lsl	r0, r0, #0x2
	ldr	r2, .L294
	add	r0, r0, r2
	strb	r1, [r0]
	lsr	r2, r1, #0x8
	strb	r2, [r0, #0x1]
	lsr	r2, r1, #0x10
	strb	r2, [r0, #0x2]
	lsr	r1, r1, #0x18
	strb	r1, [r0, #0x3]
	bx	lr
.L295:
	.align	2, 0
.L294:
	.word	gSaveBlock1+0x2db8
.Lfe37:
	.size	 StorytellerSetRecordedTrainerStat,.Lfe37-StorytellerSetRecordedTrainerStat
	.align	2, 0
	.type	 HasTrainerStatIncreased,function
	.thumb_func
HasTrainerStatIncreased:
	push	{r4, r5, lr}
	add	r5, r0, #0
	ldr	r0, .L300
	add	r0, r0, #0x4
	add	r0, r5, r0
	ldrb	r0, [r0]
	bl	StorytellerGetGameStat
	add	r4, r0, #0
	add	r0, r5, #0
	bl	StorytellerGetRecordedTrainerStat
	cmp	r4, r0
	bhi	.L297	@cond_branch
	mov	r0, #0x0
	b	.L299
.L301:
	.align	2, 0
.L300:
	.word	gSaveBlock1+0x2d94
.L297:
	mov	r0, #0x1
.L299:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe38:
	.size	 HasTrainerStatIncreased,.Lfe38-HasTrainerStatIncreased
	.align	2, 0
	.type	 GetStoryByStattellerPlayerName,function
	.thumb_func
GetStoryByStattellerPlayerName:
	push	{r4, r5, lr}
	add	r5, r1, #0
	lsl	r4, r0, #0x3
	sub	r4, r4, r0
	ldr	r0, .L303
	add	r4, r4, r0
	add	r0, r5, #0
	mov	r1, #0xff
	mov	r2, #0x8
	bl	memset
	add	r0, r5, #0
	add	r1, r4, #0
	mov	r2, #0x7
	bl	memcpy
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L304:
	.align	2, 0
.L303:
	.word	gSaveBlock1+0x2d9c
.Lfe39:
	.size	 GetStoryByStattellerPlayerName,.Lfe39-GetStoryByStattellerPlayerName
	.align	2, 0
	.type	 StorytellerSetPlayerName,function
	.thumb_func
StorytellerSetPlayerName:
	push	{r4, r5, r6, lr}
	add	r6, r1, #0
	lsl	r5, r0, #0x3
	sub	r5, r5, r0
	ldr	r0, .L306
	add	r5, r5, r0
	add	r0, r6, #0
	bl	StringLength
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r5, #0
	mov	r1, #0xff
	mov	r2, #0x7
	bl	memset
	add	r0, r5, #0
	add	r1, r6, #0
	add	r2, r4, #0
	bl	StringCopyN
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L307:
	.align	2, 0
.L306:
	.word	gSaveBlock1+0x2d9c
.Lfe40:
	.size	 StorytellerSetPlayerName,.Lfe40-StorytellerSetPlayerName
	.align	2, 0
	.type	 StorytellerRecordNewStat,function
	.thumb_func
StorytellerRecordNewStat:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	add	r6, r1, #0
	ldr	r0, .L309
	add	r0, r0, #0x4
	add	r0, r5, r0
	strb	r6, [r0]
	ldr	r1, .L309+0x4
	add	r0, r5, #0
	bl	StorytellerSetPlayerName
	lsl	r4, r6, #0x18
	lsr	r4, r4, #0x18
	add	r0, r4, #0
	bl	StorytellerGetGameStat
	add	r1, r0, #0
	add	r0, r5, #0
	bl	StorytellerSetRecordedTrainerStat
	ldr	r5, .L309+0x8
	add	r0, r4, #0
	bl	StorytellerGetGameStat
	add	r1, r0, #0
	add	r0, r5, #0
	mov	r2, #0x0
	mov	r3, #0xa
	bl	ConvertIntToDecimalStringN
	ldr	r4, .L309+0xc
	add	r0, r6, #0
	bl	GetStoryActionByStat
	add	r1, r0, #0
	add	r0, r4, #0
	bl	StringCopy
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L310:
	.align	2, 0
.L309:
	.word	gSaveBlock1+0x2d94
	.word	gSaveBlock2
	.word	gStringVar1
	.word	gStringVar2
.Lfe41:
	.size	 StorytellerRecordNewStat,.Lfe41-StorytellerRecordNewStat
	.align	2, 0
	.type	 ScrambleStatList,function
	.thumb_func
ScrambleStatList:
	push	{r4, r5, r6, r7, lr}
	add	r7, r0, #0
	add	r6, r1, #0
	mov	r5, #0x0
	cmp	r5, r6
	bge	.L313	@cond_branch
.L315:
	add	r0, r7, r5
	strb	r5, [r0]
	add	r5, r5, #0x1
	cmp	r5, r6
	blt	.L315	@cond_branch
.L313:
	cmp	r6, #0
	ble	.L318	@cond_branch
	add	r5, r6, #0
.L320:
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r1, r6, #0
	bl	__modsi3
	add	r4, r0, #0
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r1, r6, #0
	bl	__modsi3
	add	r4, r7, r4
	ldrb	r2, [r4]
	add	r0, r7, r0
	ldrb	r1, [r0]
	strb	r1, [r4]
	strb	r2, [r0]
	sub	r5, r5, #0x1
	cmp	r5, #0
	bne	.L320	@cond_branch
.L318:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe42:
	.size	 ScrambleStatList,.Lfe42-ScrambleStatList
	.section .rodata
	.align	2, 0
	.type	 sStorytellerStuff,object
	.size	 sStorytellerStuff,12
sStorytellerStuff:
	.word	0x24
	.word	gSaveBlock1+0x2d94
	.word	0xc
.text
	.align	2, 0
	.type	 StorytellerInitializeRandomStat,function
	.thumb_func
StorytellerInitializeRandomStat:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #0xfffffffc
	mov	r7, sp
	mov	sl, sp
	ldr	r0, .L336
	ldr	r0, [r0]
	lsl	r0, r0, #0x3
	lsr	r0, r0, #0x3
	add	r0, r0, #0x3
	lsr	r0, r0, #0x2
	lsl	r0, r0, #0x2
	mov	r1, sp
	sub	r1, r1, r0
	mov	sp, r1
	mov	r8, sp
	mov	r0, sp
	mov	r1, #0x24
	bl	ScrambleStatList
	mov	r5, #0x0
	ldr	r0, .L336+0x4
	mov	r9, r0
	ldr	r3, .L336+0x8
.L326:
	mov	r1, r8
	add	r0, r1, r5
	ldrb	r0, [r0]
	lsl	r0, r0, #0x4
	add	r0, r0, r9
	ldrb	r4, [r0]
	ldrb	r6, [r0, #0x1]
	mov	r1, #0x0
	ldrb	r0, [r3, #0x4]
	cmp	r0, r4
	beq	.L328	@cond_branch
	ldr	r2, .L336+0xc
.L329:
	add	r1, r1, #0x1
	cmp	r1, #0x3
	bgt	.L328	@cond_branch
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, r4
	bne	.L329	@cond_branch
.L328:
	cmp	r1, #0x4
	bne	.L325	@cond_branch
	add	r0, r4, #0
	str	r3, [r7]
	bl	StorytellerGetGameStat
	ldr	r3, [r7]
	cmp	r0, r6
	bcc	.L325	@cond_branch
	mov	r0, #0x1
	strb	r0, [r3, #0x1]
	bl	GetFreeStorySlot
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r1, r4, #0
	bl	StorytellerRecordNewStat
	mov	r0, #0x1
	b	.L335
.L337:
	.align	2, 0
.L336:
	.word	sStorytellerStuff
	.word	sStorytellerStories
	.word	gSaveBlock1+0x2d94
	.word	gSaveBlock1+0x2d98
.L325:
	add	r5, r5, #0x1
	cmp	r5, #0x23
	ble	.L326	@cond_branch
	mov	r0, #0x0
.L335:
	mov	sp, sl
	add	sp, sp, #0x4
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe43:
	.size	 StorytellerInitializeRandomStat,.Lfe43-StorytellerInitializeRandomStat
	.align	2, 0
	.type	 StorytellerDisplayStory,function
	.thumb_func
StorytellerDisplayStory:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	ldr	r0, .L339
	add	r0, r0, #0x4
	add	r0, r5, r0
	ldrb	r6, [r0]
	ldr	r4, .L339+0x4
	add	r0, r5, #0
	bl	StorytellerGetRecordedTrainerStat
	add	r1, r0, #0
	add	r0, r4, #0
	mov	r2, #0x0
	mov	r3, #0xa
	bl	ConvertIntToDecimalStringN
	ldr	r4, .L339+0x8
	add	r0, r6, #0
	bl	GetStoryActionByStat
	add	r1, r0, #0
	add	r0, r4, #0
	bl	StringCopy
	ldr	r1, .L339+0xc
	add	r0, r5, #0
	bl	GetStoryByStattellerPlayerName
	add	r0, r6, #0
	bl	GetStoryTextByStat
	bl	ShowFieldMessage
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L340:
	.align	2, 0
.L339:
	.word	gSaveBlock1+0x2d94
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar3
.Lfe44:
	.size	 StorytellerDisplayStory,.Lfe44-StorytellerDisplayStory
	.align	2, 0
	.type	 PrintStoryList,function
	.thumb_func
PrintStoryList:
	push	{r4, r5, r6, lr}
	bl	GetFreeStorySlot
	add	r3, r0, #0
	lsl	r3, r3, #0x19
	mov	r0, #0x80
	lsl	r0, r0, #0x13
	add	r3, r3, r0
	lsr	r3, r3, #0x18
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x19
	bl	MenuDrawTextWindow
	mov	r4, #0x0
	ldr	r1, .L348
	ldrb	r0, [r1, #0x4]
	cmp	r0, #0
	beq	.L343	@cond_branch
	add	r6, r1, #0x4
	mov	r5, #0x80
	lsl	r5, r5, #0x12
.L346:
	bl	GetStoryTitleByStat
	lsr	r2, r5, #0x18
	mov	r1, #0x1
	bl	MenuPrint
	mov	r1, #0x80
	lsl	r1, r1, #0x12
	add	r5, r5, r1
	add	r4, r4, #0x1
	cmp	r4, #0x3
	bgt	.L343	@cond_branch
	add	r0, r4, r6
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L346	@cond_branch
.L343:
	ldr	r0, .L348+0x4
	lsl	r2, r4, #0x19
	mov	r1, #0x80
	lsl	r1, r1, #0x12
	add	r2, r2, r1
	lsr	r2, r2, #0x18
	mov	r1, #0x1
	bl	MenuPrint
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L349:
	.align	2, 0
.L348:
	.word	gSaveBlock1+0x2d94
	.word	gPCText_Cancel
.Lfe45:
	.size	 PrintStoryList,.Lfe45-PrintStoryList
	.align	2, 0
	.type	 Task_StoryListMenu,function
	.thumb_func
Task_StoryListMenu:
	push	{r4, r5, r6, lr}
	add	sp, sp, #0xfffffff8
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	ldr	r1, .L360
	add	r4, r0, r1
	mov	r0, #0x8
	ldrsh	r5, [r4, r0]
	cmp	r5, #0
	beq	.L352	@cond_branch
	cmp	r5, #0x1
	beq	.L353	@cond_branch
	b	.L351
.L361:
	.align	2, 0
.L360:
	.word	gTasks
.L352:
	bl	PrintStoryList
	bl	GetFreeStorySlot
	add	r3, r0, #0
	add	r3, r3, #0x1
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	str	r5, [sp]
	mov	r0, #0x18
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	mov	r1, #0x1
	mov	r2, #0x2
	bl	InitMenu
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	b	.L351
.L353:
	bl	ProcessMenuInput
	lsl	r0, r0, #0x18
	asr	r4, r0, #0x18
	mov	r0, #0x2
	neg	r0, r0
	cmp	r4, r0
	beq	.L351	@cond_branch
	add	r0, r0, #0x1
	cmp	r4, r0
	beq	.L356	@cond_branch
	bl	GetFreeStorySlot
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r4, r0
	bne	.L355	@cond_branch
.L356:
	ldr	r1, .L362
	mov	r0, #0x0
	strh	r0, [r1]
	b	.L357
.L363:
	.align	2, 0
.L362:
	.word	gScriptResult
.L355:
	ldr	r0, .L364
	strh	r5, [r0]
	ldr	r0, .L364+0x4
	strb	r4, [r0]
.L357:
	bl	HandleDestroyMenuCursors
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x19
	mov	r3, #0xc
	bl	MenuZeroFillWindowRect
	add	r0, r6, #0
	bl	DestroyTask
	bl	EnableBothScriptContexts
.L351:
	add	sp, sp, #0x8
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L365:
	.align	2, 0
.L364:
	.word	gScriptResult
	.word	gUnknown_03000748
.Lfe46:
	.size	 Task_StoryListMenu,.Lfe46-Task_StoryListMenu
	.align	2, 0
	.globl	ScrSpecial_StorytellerStoryListMenu
	.type	 ScrSpecial_StorytellerStoryListMenu,function
	.thumb_func
ScrSpecial_StorytellerStoryListMenu:
	push	{lr}
	ldr	r0, .L367
	mov	r1, #0x50
	bl	CreateTask
	pop	{r0}
	bx	r0
.L368:
	.align	2, 0
.L367:
	.word	Task_StoryListMenu
.Lfe47:
	.size	 ScrSpecial_StorytellerStoryListMenu,.Lfe47-ScrSpecial_StorytellerStoryListMenu
	.align	2, 0
	.globl	ScrSpecial_StorytellerDisplayStory
	.type	 ScrSpecial_StorytellerDisplayStory,function
	.thumb_func
ScrSpecial_StorytellerDisplayStory:
	push	{lr}
	ldr	r0, .L370
	ldrb	r0, [r0]
	bl	StorytellerDisplayStory
	pop	{r0}
	bx	r0
.L371:
	.align	2, 0
.L370:
	.word	gUnknown_03000748
.Lfe48:
	.size	 ScrSpecial_StorytellerDisplayStory,.Lfe48-ScrSpecial_StorytellerDisplayStory
	.align	2, 0
	.globl	ScrSpecial_StorytellerGetFreeStorySlot
	.type	 ScrSpecial_StorytellerGetFreeStorySlot,function
	.thumb_func
ScrSpecial_StorytellerGetFreeStorySlot:
	push	{lr}
	bl	GetFreeStorySlot
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.Lfe49:
	.size	 ScrSpecial_StorytellerGetFreeStorySlot,.Lfe49-ScrSpecial_StorytellerGetFreeStorySlot
	.align	2, 0
	.globl	ScrSpecial_StorytellerUpdateStat
	.type	 ScrSpecial_StorytellerUpdateStat,function
	.thumb_func
ScrSpecial_StorytellerUpdateStat:
	push	{r4, r5, lr}
	ldr	r1, .L376
	ldr	r5, .L376+0x4
	ldrb	r0, [r5]
	add	r1, r1, #0x4
	add	r1, r0, r1
	ldrb	r4, [r1]
	bl	HasTrainerStatIncreased
	cmp	r0, #0x1
	beq	.L374	@cond_branch
	mov	r0, #0x0
	b	.L375
.L377:
	.align	2, 0
.L376:
	.word	gSaveBlock1+0x2d94
	.word	gUnknown_03000748
.L374:
	ldrb	r0, [r5]
	add	r1, r4, #0
	bl	StorytellerRecordNewStat
	mov	r0, #0x1
.L375:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe50:
	.size	 ScrSpecial_StorytellerUpdateStat,.Lfe50-ScrSpecial_StorytellerUpdateStat
	.align	2, 0
	.globl	ScrSpecial_HasStorytellerAlreadyRecorded
	.type	 ScrSpecial_HasStorytellerAlreadyRecorded,function
	.thumb_func
ScrSpecial_HasStorytellerAlreadyRecorded:
	push	{lr}
	ldr	r0, .L382
	ldrb	r0, [r0, #0x1]
	cmp	r0, #0
	beq	.L379	@cond_branch
	mov	r0, #0x1
	b	.L381
.L383:
	.align	2, 0
.L382:
	.word	gSaveBlock1+0x2d94
.L379:
	mov	r0, #0x0
.L381:
	pop	{r1}
	bx	r1
.Lfe51:
	.size	 ScrSpecial_HasStorytellerAlreadyRecorded,.Lfe51-ScrSpecial_HasStorytellerAlreadyRecorded
	.align	2, 0
	.globl	ScrSpecial_StorytellerInitializeRandomStat
	.type	 ScrSpecial_StorytellerInitializeRandomStat,function
	.thumb_func
ScrSpecial_StorytellerInitializeRandomStat:
	push	{lr}
	bl	StorytellerInitializeRandomStat
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.Lfe52:
	.size	 ScrSpecial_StorytellerInitializeRandomStat,.Lfe52-ScrSpecial_StorytellerInitializeRandomStat

	.lcomm	gUnknown_03000748,1
.text
	.align	2, 0
