@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.globl	gUnknown_020297F0
	.section ewram_data,"aw"
	.align	2, 0
	.type	 gUnknown_020297F0,object
	.size	 gUnknown_020297F0,8
gUnknown_020297F0:
	.byte	0x0
	.space	7
	.globl	gWarpDestination
	.align	2, 0
	.type	 gWarpDestination,object
	.size	 gWarpDestination,8
gWarpDestination:
	.byte	0x0
	.space	7
	.globl	gUnknown_02029800
	.align	2, 0
	.type	 gUnknown_02029800,object
	.size	 gUnknown_02029800,8
gUnknown_02029800:
	.byte	0x0
	.space	7
	.globl	gUnknown_02029808
	.align	2, 0
	.type	 gUnknown_02029808,object
	.size	 gUnknown_02029808,8
gUnknown_02029808:
	.byte	0x0
	.space	7
	.globl	gUnknown_02029810
	.align	2, 0
	.type	 gUnknown_02029810,object
	.size	 gUnknown_02029810,4
gUnknown_02029810:
	.byte	0x0
	.space	3
	.align	1, 0
	.type	 sAmbientCrySpecies,object
	.size	 sAmbientCrySpecies,2
sAmbientCrySpecies:
	.short	0x0
	.type	 sIsAmbientCryWaterMon,object
	.size	 sIsAmbientCryWaterMon,1
sIsAmbientCryWaterMon:
	.byte	0x0
	.globl	gLinkPlayerMapObjects
	.align	2, 0
	.type	 gLinkPlayerMapObjects,object
	.size	 gLinkPlayerMapObjects,16
gLinkPlayerMapObjects:
	.byte	0x0
	.space	3
	.space	12
	.section .rodata
	.align	2, 0
	.type	 sDummyWarpData,object
	.size	 sDummyWarpData,8
sDummyWarpData:
	.byte	0xffffffff
	.byte	0xffffffff
	.byte	0xffffffff
	.space	1
	.short	0xffffffff
	.short	0xffffffff
	.type	 sUnusedData,object
sUnusedData:
	.byte	0xb0
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.byte	0x10
	.byte	0xe
	.byte	0x0
	.byte	0x0
	.byte	0xb0
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.byte	0x60
	.byte	0x9
	.byte	0x0
	.byte	0x0
	.byte	0x32
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x50
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xd4
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0x2c
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.size	 sUnusedData,32
	.globl	gUnknown_0821664C
	.align	2, 0
	.type	 gUnknown_0821664C,object
gUnknown_0821664C:
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x1
	.word	0x0
	.word	0xffffffff
	.word	0xffffffff
	.word	0x0
	.word	0x1
	.word	0x0
	.word	0xffffffff
	.word	0x1
	.word	0x1
	.word	0x1
	.word	0xffffffff
	.word	0xffffffff
	.word	0x1
	.word	0xffffffff
	.size	 gUnknown_0821664C,72
	.globl	gUnknown_08216694
	.align	2, 0
	.type	 gUnknown_08216694,object
	.size	 gUnknown_08216694,12
gUnknown_08216694:
	.word	0x4000040
	.word	0xa2600001
	.byte	0x1
	.byte	0x0
	.space	2
	.align	2, 0
	.type	 gUnknown_082166A0,object
gUnknown_082166A0:
	.word	sub_8055C68
	.word	sub_8055C88
	.word	sub_8055C8C
	.size	 gUnknown_082166A0,12
	.align	2, 0
	.type	 gUnknown_082166AC,object
gUnknown_082166AC:
	.word	sub_8055CAC
	.word	sub_8055CB0
	.word	sub_8055CB0
	.word	sub_8055CB0
	.word	sub_8055CB0
	.word	sub_8055CAC
	.word	sub_8055CAC
	.word	sub_8055D18
	.word	sub_8055D18
	.word	sub_8055D18
	.word	sub_8055D18
	.size	 gUnknown_082166AC,44
	.align	2, 0
	.type	 gUnknown_082166D8,object
gUnknown_082166D8:
	.word	sub_8055D30
	.word	sub_8055D38
	.size	 gUnknown_082166D8,8
.text
	.align	2, 0
	.type	 DoWhiteOut,function
	.thumb_func
DoWhiteOut:
	push	{lr}
	ldr	r0, .L3
	bl	ScriptContext2_RunNewScript
	ldr	r1, .L3+0x4
	mov	r0, #0x92
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	ldr	r0, [r1]
	lsr	r0, r0, #0x1
	str	r0, [r1]
	bl	ScrSpecial_HealPlayerParty
	bl	Overworld_ResetStateAfterWhiteOut
	bl	Overworld_SetWarpDestToLastHealLoc
	bl	warp_in
	pop	{r0}
	bx	r0
.L4:
	.align	2, 0
.L3:
	.word	S_WhiteOut
	.word	gSaveBlock1
.Lfe1:
	.size	 DoWhiteOut,.Lfe1-DoWhiteOut
	.align	2, 0
	.globl	Overworld_ResetStateAfterFly
	.type	 Overworld_ResetStateAfterFly,function
	.thumb_func
Overworld_ResetStateAfterFly:
	push	{lr}
	bl	player_avatar_init_params_reset
	ldr	r0, .L6
	bl	FlagClear
	ldr	r0, .L6+0x4
	bl	FlagClear
	ldr	r0, .L6+0x8
	bl	FlagClear
	ldr	r0, .L6+0xc
	bl	FlagClear
	ldr	r0, .L6+0x10
	bl	FlagClear
	pop	{r0}
	bx	r0
.L7:
	.align	2, 0
.L6:
	.word	0x82b
	.word	0x82d
	.word	0x82c
	.word	0x829
	.word	0x828
.Lfe2:
	.size	 Overworld_ResetStateAfterFly,.Lfe2-Overworld_ResetStateAfterFly
	.align	2, 0
	.globl	Overworld_ResetStateAfterTeleport
	.type	 Overworld_ResetStateAfterTeleport,function
	.thumb_func
Overworld_ResetStateAfterTeleport:
	push	{lr}
	bl	player_avatar_init_params_reset
	ldr	r0, .L9
	bl	FlagClear
	ldr	r0, .L9+0x4
	bl	FlagClear
	ldr	r0, .L9+0x8
	bl	FlagClear
	ldr	r0, .L9+0xc
	bl	FlagClear
	ldr	r0, .L9+0x10
	bl	FlagClear
	ldr	r0, .L9+0x14
	bl	ScriptContext2_RunNewScript
	pop	{r0}
	bx	r0
.L10:
	.align	2, 0
.L9:
	.word	0x82b
	.word	0x82d
	.word	0x82c
	.word	0x829
	.word	0x828
	.word	gUnknown_0819FC9F
.Lfe3:
	.size	 Overworld_ResetStateAfterTeleport,.Lfe3-Overworld_ResetStateAfterTeleport
	.align	2, 0
	.globl	Overworld_ResetStateAfterDigEscRope
	.type	 Overworld_ResetStateAfterDigEscRope,function
	.thumb_func
Overworld_ResetStateAfterDigEscRope:
	push	{lr}
	bl	player_avatar_init_params_reset
	ldr	r0, .L12
	bl	FlagClear
	ldr	r0, .L12+0x4
	bl	FlagClear
	ldr	r0, .L12+0x8
	bl	FlagClear
	ldr	r0, .L12+0xc
	bl	FlagClear
	ldr	r0, .L12+0x10
	bl	FlagClear
	pop	{r0}
	bx	r0
.L13:
	.align	2, 0
.L12:
	.word	0x82b
	.word	0x82d
	.word	0x82c
	.word	0x829
	.word	0x828
.Lfe4:
	.size	 Overworld_ResetStateAfterDigEscRope,.Lfe4-Overworld_ResetStateAfterDigEscRope
	.align	2, 0
	.globl	Overworld_ResetStateAfterWhiteOut
	.type	 Overworld_ResetStateAfterWhiteOut,function
	.thumb_func
Overworld_ResetStateAfterWhiteOut:
	push	{lr}
	bl	player_avatar_init_params_reset
	ldr	r0, .L15
	bl	FlagClear
	ldr	r0, .L15+0x4
	bl	FlagClear
	ldr	r0, .L15+0x8
	bl	FlagClear
	ldr	r0, .L15+0xc
	bl	FlagClear
	ldr	r0, .L15+0x10
	bl	FlagClear
	pop	{r0}
	bx	r0
.L16:
	.align	2, 0
.L15:
	.word	0x82b
	.word	0x82d
	.word	0x82c
	.word	0x829
	.word	0x828
.Lfe5:
	.size	 Overworld_ResetStateAfterWhiteOut,.Lfe5-Overworld_ResetStateAfterWhiteOut
	.align	2, 0
	.globl	sub_805308C
	.type	 sub_805308C,function
	.thumb_func
sub_805308C:
	push	{lr}
	ldr	r0, .L18
	bl	FlagClear
	bl	ChooseAmbientCrySpecies
	bl	ResetCyclingRoadChallengeData
	bl	UpdateLocationHistoryForRoamer
	bl	RoamerMoveToOtherLocationSet
	pop	{r0}
	bx	r0
.L19:
	.align	2, 0
.L18:
	.word	0x82c
.Lfe6:
	.size	 sub_805308C,.Lfe6-sub_805308C
	.align	2, 0
	.globl	ResetGameStats
	.type	 ResetGameStats,function
	.thumb_func
ResetGameStats:
	push	{lr}
	ldr	r0, .L26
	mov	r2, #0x0
	mov	r1, #0x31
	ldr	r3, .L26+0x4
	add	r0, r0, r3
.L24:
	str	r2, [r0]
	sub	r0, r0, #0x4
	sub	r1, r1, #0x1
	cmp	r1, #0
	bge	.L24	@cond_branch
	pop	{r0}
	bx	r0
.L27:
	.align	2, 0
.L26:
	.word	gSaveBlock1
	.word	0x1604
.Lfe7:
	.size	 ResetGameStats,.Lfe7-ResetGameStats
	.align	2, 0
	.globl	IncrementGameStat
	.type	 IncrementGameStat,function
	.thumb_func
IncrementGameStat:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x31
	bhi	.L29	@cond_branch
	ldr	r0, .L33
	lsl	r1, r1, #0x2
	mov	r2, #0xaa
	lsl	r2, r2, #0x5
	add	r0, r0, r2
	add	r1, r1, r0
	ldr	r2, [r1]
	ldr	r0, .L33+0x4
	cmp	r2, r0
	bhi	.L30	@cond_branch
	add	r0, r2, #0x1
	b	.L32
.L34:
	.align	2, 0
.L33:
	.word	gSaveBlock1
	.word	0xfffffe
.L30:
	ldr	r0, .L35
.L32:
	str	r0, [r1]
.L29:
	pop	{r0}
	bx	r0
.L36:
	.align	2, 0
.L35:
	.word	0xffffff
.Lfe8:
	.size	 IncrementGameStat,.Lfe8-IncrementGameStat
	.align	2, 0
	.globl	GetGameStat
	.type	 GetGameStat,function
	.thumb_func
GetGameStat:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x31
	bhi	.L38	@cond_branch
	ldr	r0, .L40
	lsl	r1, r1, #0x2
	mov	r2, #0xaa
	lsl	r2, r2, #0x5
	add	r0, r0, r2
	add	r1, r1, r0
	ldr	r0, [r1]
	b	.L39
.L41:
	.align	2, 0
.L40:
	.word	gSaveBlock1
.L38:
	mov	r0, #0x0
.L39:
	pop	{r1}
	bx	r1
.Lfe9:
	.size	 GetGameStat,.Lfe9-GetGameStat
	.align	2, 0
	.globl	SetGameStat
	.type	 SetGameStat,function
	.thumb_func
SetGameStat:
	push	{lr}
	add	r2, r1, #0
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x31
	bhi	.L43	@cond_branch
	ldr	r0, .L44
	lsl	r1, r1, #0x2
	mov	r3, #0xaa
	lsl	r3, r3, #0x5
	add	r0, r0, r3
	add	r1, r1, r0
	str	r2, [r1]
.L43:
	pop	{r0}
	bx	r0
.L45:
	.align	2, 0
.L44:
	.word	gSaveBlock1
.Lfe10:
	.size	 SetGameStat,.Lfe10-SetGameStat
	.align	2, 0
	.globl	LoadMapObjTemplatesFromHeader
	.type	 LoadMapObjTemplatesFromHeader,function
	.thumb_func
LoadMapObjTemplatesFromHeader:
	push	{r4, lr}
	add	sp, sp, #0xfffffffc
	mov	r0, #0x0
	str	r0, [sp]
	ldr	r4, .L47
	ldr	r2, .L47+0x4
	mov	r0, sp
	add	r1, r4, #0
	bl	CpuSet
	ldr	r0, .L47+0x8
	ldr	r1, [r0, #0x4]
	ldr	r0, [r1, #0x4]
	ldrb	r1, [r1]
	lsl	r2, r1, #0x1
	add	r2, r2, r1
	lsl	r2, r2, #0x1
	mov	r1, #0x80
	lsl	r1, r1, #0x13
	orr	r2, r2, r1
	add	r1, r4, #0
	bl	CpuSet
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L48:
	.align	2, 0
.L47:
	.word	gSaveBlock1+0xc20
	.word	0x5000180
	.word	gMapHeader
.Lfe11:
	.size	 LoadMapObjTemplatesFromHeader,.Lfe11-LoadMapObjTemplatesFromHeader
	.align	2, 0
	.type	 LoadSaveblockMapObjScripts,function
	.thumb_func
LoadSaveblockMapObjScripts:
	push	{lr}
	ldr	r0, .L55
	ldr	r0, [r0, #0x4]
	ldr	r1, [r0, #0x4]
	ldr	r3, .L55+0x4
	mov	r2, #0x3f
.L53:
	ldr	r0, [r1, #0x10]
	str	r0, [r3, #0x10]
	add	r1, r1, #0x18
	add	r3, r3, #0x18
	sub	r2, r2, #0x1
	cmp	r2, #0
	bge	.L53	@cond_branch
	pop	{r0}
	bx	r0
.L56:
	.align	2, 0
.L55:
	.word	gMapHeader
	.word	gSaveBlock1+0xc20
.Lfe12:
	.size	 LoadSaveblockMapObjScripts,.Lfe12-LoadSaveblockMapObjScripts
	.align	2, 0
	.globl	Overworld_SetMapObjTemplateCoords
	.type	 Overworld_SetMapObjTemplateCoords,function
	.thumb_func
Overworld_SetMapObjTemplateCoords:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r1, r1, #0x10
	lsr	r4, r1, #0x10
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	mov	r1, #0x0
	ldr	r3, .L64
.L61:
	ldrb	r0, [r3]
	cmp	r0, r5
	bne	.L60	@cond_branch
	strh	r4, [r3, #0x4]
	strh	r2, [r3, #0x6]
	b	.L57
.L65:
	.align	2, 0
.L64:
	.word	gSaveBlock1+0xc20
.L60:
	add	r3, r3, #0x18
	add	r1, r1, #0x1
	cmp	r1, #0x3f
	ble	.L61	@cond_branch
.L57:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe13:
	.size	 Overworld_SetMapObjTemplateCoords,.Lfe13-Overworld_SetMapObjTemplateCoords
	.align	2, 0
	.globl	Overworld_SetMapObjTemplateMovementType
	.type	 Overworld_SetMapObjTemplateMovementType,function
	.thumb_func
Overworld_SetMapObjTemplateMovementType:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r3, #0x0
	ldr	r2, .L73
.L70:
	ldrb	r0, [r2]
	cmp	r0, r4
	bne	.L69	@cond_branch
	strb	r1, [r2, #0x9]
	b	.L66
.L74:
	.align	2, 0
.L73:
	.word	gSaveBlock1+0xc20
.L69:
	add	r2, r2, #0x18
	add	r3, r3, #0x1
	cmp	r3, #0x3f
	ble	.L70	@cond_branch
.L66:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe14:
	.size	 Overworld_SetMapObjTemplateMovementType,.Lfe14-Overworld_SetMapObjTemplateMovementType
	.align	2, 0
	.type	 mapdata_load_assets_to_gpu_and_full_redraw,function
	.thumb_func
mapdata_load_assets_to_gpu_and_full_redraw:
	push	{r4, lr}
	bl	move_tilemap_camera_to_upper_left_corner
	ldr	r4, .L76
	ldr	r0, [r4]
	bl	copy_map_tileset1_tileset2_to_vram
	ldr	r0, [r4]
	bl	apply_map_tileset1_tileset2_palette
	bl	DrawWholeMapView
	bl	cur_mapheader_run_tileset_funcs_after_some_cpuset
	pop	{r4}
	pop	{r0}
	bx	r0
.L77:
	.align	2, 0
.L76:
	.word	gMapHeader
.Lfe15:
	.size	 mapdata_load_assets_to_gpu_and_full_redraw,.Lfe15-mapdata_load_assets_to_gpu_and_full_redraw
	.align	2, 0
	.type	 get_mapdata_header,function
	.thumb_func
get_mapdata_header:
	push	{lr}
	ldr	r0, .L81
	ldrh	r1, [r0, #0x32]
	cmp	r1, #0
	bne	.L79	@cond_branch
	mov	r0, #0x0
	b	.L80
.L82:
	.align	2, 0
.L81:
	.word	gSaveBlock1
.L79:
	ldr	r0, .L83
	sub	r1, r1, #0x1
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
.L80:
	pop	{r1}
	bx	r1
.L84:
	.align	2, 0
.L83:
	.word	gMapAttributes
.Lfe16:
	.size	 get_mapdata_header,.Lfe16-get_mapdata_header
	.align	2, 0
	.type	 ApplyCurrentWarp,function
	.thumb_func
ApplyCurrentWarp:
	ldr	r2, .L86
	ldr	r3, .L86+0x4
	ldr	r0, [r3, #0x4]		@ created by thumb_load_double_from_address
	ldr	r1, [r3, #0x8]		@ created by thumb_load_double_from_address
	str	r0, [r2]
	str	r1, [r2, #0x4]
	ldr	r0, .L86+0x8
	ldr	r1, [r0, #0x4]		@ created by thumb_load_double_from_address
	ldr	r0, [r0]		@ created by thumb_load_double_from_address
	str	r0, [r3, #0x4]
	str	r1, [r3, #0x8]
	ldr	r2, .L86+0xc
	ldr	r0, .L86+0x10
	ldr	r1, [r0, #0x4]		@ created by thumb_load_double_from_address
	ldr	r0, [r0]		@ created by thumb_load_double_from_address
	str	r0, [r2]
	str	r1, [r2, #0x4]
	ldr	r2, .L86+0x14
	str	r0, [r2]
	str	r1, [r2, #0x4]
	bx	lr
.L87:
	.align	2, 0
.L86:
	.word	gUnknown_020297F0
	.word	gSaveBlock1
	.word	gWarpDestination
	.word	gUnknown_02029800
	.word	sDummyWarpData
	.word	gUnknown_02029808
.Lfe17:
	.size	 ApplyCurrentWarp,.Lfe17-ApplyCurrentWarp
	.align	2, 0
	.type	 SetWarpData,function
	.thumb_func
SetWarpData:
	push	{r4, r5, lr}
	ldr	r4, [sp, #0xc]
	ldr	r5, [sp, #0x10]
	strb	r1, [r0]
	strb	r2, [r0, #0x1]
	strb	r3, [r0, #0x2]
	lsl	r4, r4, #0x18
	asr	r4, r4, #0x18
	strh	r4, [r0, #0x4]
	lsl	r5, r5, #0x18
	asr	r5, r5, #0x18
	strh	r5, [r0, #0x6]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe18:
	.size	 SetWarpData,.Lfe18-SetWarpData
	.align	2, 0
	.type	 warp_data_is_not_neg_1,function
	.thumb_func
warp_data_is_not_neg_1:
	push	{lr}
	add	r1, r0, #0
	mov	r2, #0x0
	ldrsb	r2, [r1, r2]
	mov	r0, #0x1
	neg	r0, r0
	cmp	r2, r0
	bne	.L94	@cond_branch
	mov	r0, #0x1
	ldrsb	r0, [r1, r0]
	cmp	r0, r2
	bne	.L94	@cond_branch
	mov	r2, #0x2
	ldrsb	r2, [r1, r2]
	cmp	r2, r0
	bne	.L94	@cond_branch
	mov	r0, #0x4
	ldrsh	r3, [r1, r0]
	cmp	r3, r2
	bne	.L94	@cond_branch
	mov	r2, #0x6
	ldrsh	r0, [r1, r2]
	cmp	r0, r3
	bne	.L94	@cond_branch
	mov	r0, #0x1
	b	.L95
.L94:
	mov	r0, #0x0
.L95:
	pop	{r1}
	bx	r1
.Lfe19:
	.size	 warp_data_is_not_neg_1,.Lfe19-warp_data_is_not_neg_1
	.align	2, 0
	.globl	Overworld_GetMapHeaderByGroupAndId
	.type	 Overworld_GetMapHeaderByGroupAndId,function
	.thumb_func
Overworld_GetMapHeaderByGroupAndId:
	lsl	r0, r0, #0x10
	lsl	r1, r1, #0x10
	ldr	r2, .L97
	lsr	r0, r0, #0xe
	add	r0, r0, r2
	ldr	r0, [r0]
	lsr	r1, r1, #0xe
	add	r1, r1, r0
	ldr	r0, [r1]
	bx	lr
.L98:
	.align	2, 0
.L97:
	.word	gMapGroups
.Lfe20:
	.size	 Overworld_GetMapHeaderByGroupAndId,.Lfe20-Overworld_GetMapHeaderByGroupAndId
	.align	2, 0
	.globl	warp1_get_mapheader
	.type	 warp1_get_mapheader,function
	.thumb_func
warp1_get_mapheader:
	push	{lr}
	ldr	r1, .L100
	mov	r0, #0x0
	ldrsb	r0, [r1, r0]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldrb	r1, [r1, #0x1]
	lsl	r1, r1, #24
	asr	r1, r1, #24
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	bl	Overworld_GetMapHeaderByGroupAndId
	pop	{r1}
	bx	r1
.L101:
	.align	2, 0
.L100:
	.word	gWarpDestination
.Lfe21:
	.size	 warp1_get_mapheader,.Lfe21-warp1_get_mapheader
	.align	2, 0
	.type	 set_current_map_header_from_sav1_save_old_name,function
	.thumb_func
set_current_map_header_from_sav1_save_old_name:
	push	{r4, r5, r6, lr}
	ldr	r5, .L103
	ldr	r4, .L103+0x4
	mov	r0, #0x4
	ldrsb	r0, [r4, r0]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x5
	ldrsb	r1, [r4, r1]
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	bl	Overworld_GetMapHeaderByGroupAndId
	add	r1, r5, #0
	ldmia	r0!, {r2, r3, r6}
	stmia	r1!, {r2, r3, r6}
	ldmia	r0!, {r2, r3, r6}
	stmia	r1!, {r2, r3, r6}
	ldr	r0, [r0]
	str	r0, [r1]
	ldrh	r0, [r5, #0x12]
	strh	r0, [r4, #0x32]
	bl	get_mapdata_header
	str	r0, [r5]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L104:
	.align	2, 0
.L103:
	.word	gMapHeader
	.word	gSaveBlock1
.Lfe22:
	.size	 set_current_map_header_from_sav1_save_old_name,.Lfe22-set_current_map_header_from_sav1_save_old_name
	.align	2, 0
	.type	 LoadSaveblockMapHeader,function
	.thumb_func
LoadSaveblockMapHeader:
	push	{r4, r5, lr}
	ldr	r4, .L106
	ldr	r1, .L106+0x4
	mov	r0, #0x4
	ldrsb	r0, [r1, r0]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldrb	r1, [r1, #0x5]
	lsl	r1, r1, #24
	asr	r1, r1, #24
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	bl	Overworld_GetMapHeaderByGroupAndId
	add	r1, r4, #0
	ldmia	r0!, {r2, r3, r5}
	stmia	r1!, {r2, r3, r5}
	ldmia	r0!, {r2, r3, r5}
	stmia	r1!, {r2, r3, r5}
	ldr	r0, [r0]
	str	r0, [r1]
	bl	get_mapdata_header
	str	r0, [r4]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L107:
	.align	2, 0
.L106:
	.word	gMapHeader
	.word	gSaveBlock1
.Lfe23:
	.size	 LoadSaveblockMapHeader,.Lfe23-LoadSaveblockMapHeader
	.align	2, 0
	.globl	sub_80533CC
	.type	 sub_80533CC,function
	.thumb_func
sub_80533CC:
	push	{r4, lr}
	ldr	r0, .L114
	mov	r1, #0x6
	ldrsb	r1, [r0, r1]
	add	r3, r0, #0
	cmp	r1, #0
	blt	.L109	@cond_branch
	mov	r1, #0x6
	ldrsb	r1, [r3, r1]
	ldr	r0, .L114+0x4
	ldr	r2, [r0, #0x4]
	ldrb	r0, [r2, #0x1]
	cmp	r1, r0
	bge	.L109	@cond_branch
	ldr	r0, [r2, #0x8]
	lsl	r1, r1, #0x3
	add	r0, r1, r0
	ldrh	r0, [r0]
	strh	r0, [r3]
	ldr	r0, [r2, #0x8]
	add	r1, r1, r0
	ldrh	r0, [r1, #0x2]
	b	.L113
.L115:
	.align	2, 0
.L114:
	.word	gSaveBlock1
	.word	gMapHeader
.L109:
	ldrh	r2, [r3, #0x8]
	mov	r1, #0x8
	ldrsh	r0, [r3, r1]
	cmp	r0, #0
	blt	.L111	@cond_branch
	ldrh	r1, [r3, #0xa]
	mov	r4, #0xa
	ldrsh	r0, [r3, r4]
	cmp	r0, #0
	blt	.L111	@cond_branch
	strh	r2, [r3]
	strh	r1, [r3, #0x2]
	b	.L110
.L111:
	ldr	r0, .L116
	ldr	r2, [r0]
	ldr	r0, [r2]
	lsr	r1, r0, #0x1f
	add	r0, r0, r1
	asr	r0, r0, #0x1
	strh	r0, [r3]
	ldr	r0, [r2, #0x4]
	lsr	r1, r0, #0x1f
	add	r0, r0, r1
	asr	r0, r0, #0x1
.L113:
	strh	r0, [r3, #0x2]
.L110:
	pop	{r4}
	pop	{r0}
	bx	r0
.L117:
	.align	2, 0
.L116:
	.word	gMapHeader
.Lfe24:
	.size	 sub_80533CC,.Lfe24-sub_80533CC
	.align	2, 0
	.globl	warp_in
	.type	 warp_in,function
	.thumb_func
warp_in:
	push	{lr}
	bl	ApplyCurrentWarp
	bl	set_current_map_header_from_sav1_save_old_name
	bl	sub_80533CC
	pop	{r0}
	bx	r0
.Lfe25:
	.size	 warp_in,.Lfe25-warp_in
	.align	2, 0
	.globl	Overworld_SetWarpDestination
	.type	 Overworld_SetWarpDestination,function
	.thumb_func
Overworld_SetWarpDestination:
	push	{r4, r5, r6, lr}
	add	sp, sp, #0xfffffff8
	add	r4, r0, #0
	add	r5, r1, #0
	add	r6, r2, #0
	ldr	r1, [sp, #0x18]
	ldr	r0, .L120
	lsl	r4, r4, #0x18
	asr	r4, r4, #0x18
	lsl	r5, r5, #0x18
	asr	r5, r5, #0x18
	lsl	r6, r6, #0x18
	asr	r6, r6, #0x18
	lsl	r3, r3, #0x18
	asr	r3, r3, #0x18
	str	r3, [sp]
	lsl	r1, r1, #0x18
	asr	r1, r1, #0x18
	str	r1, [sp, #0x4]
	add	r1, r4, #0
	add	r2, r5, #0
	add	r3, r6, #0
	bl	SetWarpData
	add	sp, sp, #0x8
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L121:
	.align	2, 0
.L120:
	.word	gWarpDestination
.Lfe26:
	.size	 Overworld_SetWarpDestination,.Lfe26-Overworld_SetWarpDestination
	.align	2, 0
	.globl	warp1_set_2
	.type	 warp1_set_2,function
	.thumb_func
warp1_set_2:
	push	{lr}
	add	sp, sp, #0xfffffffc
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	lsl	r1, r1, #0x18
	asr	r1, r1, #0x18
	lsl	r2, r2, #0x18
	asr	r2, r2, #0x18
	mov	r3, #0x1
	neg	r3, r3
	str	r3, [sp]
	bl	Overworld_SetWarpDestination
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.Lfe27:
	.size	 warp1_set_2,.Lfe27-warp1_set_2
	.align	2, 0
	.globl	saved_warp2_set
	.type	 saved_warp2_set,function
	.thumb_func
saved_warp2_set:
	push	{r4, r5, lr}
	add	sp, sp, #0xfffffff8
	ldr	r0, .L124
	lsl	r1, r1, #0x18
	asr	r1, r1, #0x18
	lsl	r2, r2, #0x18
	asr	r2, r2, #0x18
	lsl	r3, r3, #0x18
	asr	r3, r3, #0x18
	mov	r4, #0x14
	neg	r4, r4
	add	r4, r4, r0
	mov	ip, r4
	ldrb	r4, [r4, #0]
	lsl	r4, r4, #24
	asr	r4, r4, #24
	str	r4, [sp]
	mov	r5, ip
	mov	r4, #0x2
	ldrsb	r4, [r5, r4]
	str	r4, [sp, #0x4]
	bl	SetWarpData
	add	sp, sp, #0x8
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L125:
	.align	2, 0
.L124:
	.word	gSaveBlock1+0x14
.Lfe28:
	.size	 saved_warp2_set,.Lfe28-saved_warp2_set
	.align	2, 0
	.globl	saved_warp2_set_2
	.type	 saved_warp2_set_2,function
	.thumb_func
saved_warp2_set_2:
	push	{r4, r5, lr}
	add	sp, sp, #0xfffffff8
	ldr	r4, [sp, #0x14]
	ldr	r5, [sp, #0x18]
	ldr	r0, .L127
	lsl	r1, r1, #0x18
	asr	r1, r1, #0x18
	lsl	r2, r2, #0x18
	asr	r2, r2, #0x18
	lsl	r3, r3, #0x18
	asr	r3, r3, #0x18
	lsl	r4, r4, #0x18
	asr	r4, r4, #0x18
	str	r4, [sp]
	lsl	r5, r5, #0x18
	asr	r5, r5, #0x18
	str	r5, [sp, #0x4]
	bl	SetWarpData
	add	sp, sp, #0x8
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L128:
	.align	2, 0
.L127:
	.word	gSaveBlock1+0x14
.Lfe29:
	.size	 saved_warp2_set_2,.Lfe29-saved_warp2_set_2
	.align	2, 0
	.globl	copy_saved_warp2_bank_and_enter_x_to_warp1
	.type	 copy_saved_warp2_bank_and_enter_x_to_warp1,function
	.thumb_func
copy_saved_warp2_bank_and_enter_x_to_warp1:
	ldr	r2, .L130
	ldr	r0, .L130+0x4
	ldr	r1, [r0, #0x18]		@ created by thumb_load_double_from_address
	ldr	r0, [r0, #0x14]		@ created by thumb_load_double_from_address
	str	r0, [r2]
	str	r1, [r2, #0x4]
	bx	lr
.L131:
	.align	2, 0
.L130:
	.word	gWarpDestination
	.word	gSaveBlock1
.Lfe30:
	.size	 copy_saved_warp2_bank_and_enter_x_to_warp1,.Lfe30-copy_saved_warp2_bank_and_enter_x_to_warp1
	.align	2, 0
	.globl	sub_8053538
	.type	 sub_8053538,function
	.thumb_func
sub_8053538:
	push	{r4, lr}
	add	sp, sp, #0xfffffffc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetHealLocation
	add	r4, r0, #0
	cmp	r4, #0
	beq	.L133	@cond_branch
	mov	r0, #0x0
	ldrsb	r0, [r4, r0]
	mov	r1, #0x1
	ldrsb	r1, [r4, r1]
	mov	r2, #0x1
	neg	r2, r2
	mov	r3, #0x2
	ldrsb	r3, [r4, r3]
	ldrb	r4, [r4, #0x4]
	lsl	r4, r4, #24
	asr	r4, r4, #24
	str	r4, [sp]
	bl	Overworld_SetWarpDestination
.L133:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe31:
	.size	 sub_8053538,.Lfe31-sub_8053538
	.align	2, 0
	.globl	Overworld_SetWarpDestToLastHealLoc
	.type	 Overworld_SetWarpDestToLastHealLoc,function
	.thumb_func
Overworld_SetWarpDestToLastHealLoc:
	ldr	r2, .L135
	ldr	r0, .L135+0x4
	ldr	r1, [r0, #0x20]		@ created by thumb_load_double_from_address
	ldr	r0, [r0, #0x1c]		@ created by thumb_load_double_from_address
	str	r0, [r2]
	str	r1, [r2, #0x4]
	bx	lr
.L136:
	.align	2, 0
.L135:
	.word	gWarpDestination
	.word	gSaveBlock1
.Lfe32:
	.size	 Overworld_SetWarpDestToLastHealLoc,.Lfe32-Overworld_SetWarpDestToLastHealLoc
	.align	2, 0
	.globl	Overworld_SetHealLocationWarp
	.type	 Overworld_SetHealLocationWarp,function
	.thumb_func
Overworld_SetHealLocationWarp:
	push	{r4, r5, lr}
	add	sp, sp, #0xfffffff8
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetHealLocation
	add	r5, r0, #0
	cmp	r5, #0
	beq	.L138	@cond_branch
	ldr	r0, .L139
	mov	r1, #0x0
	ldrsb	r1, [r5, r1]
	mov	r2, #0x1
	ldrsb	r2, [r5, r2]
	mov	r3, #0x1
	neg	r3, r3
	mov	r4, #0x2
	ldrsb	r4, [r5, r4]
	str	r4, [sp]
	mov	r4, #0x4
	ldrsb	r4, [r5, r4]
	str	r4, [sp, #0x4]
	bl	SetWarpData
.L138:
	add	sp, sp, #0x8
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L140:
	.align	2, 0
.L139:
	.word	gSaveBlock1+0x1c
.Lfe33:
	.size	 Overworld_SetHealLocationWarp,.Lfe33-Overworld_SetHealLocationWarp
	.align	2, 0
	.globl	sub_80535C4
	.type	 sub_80535C4,function
	.thumb_func
sub_80535C4:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #0xfffffffc
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	lsl	r1, r1, #0x10
	lsr	r7, r1, #0x10
	bl	Overworld_GetMapTypeOfSaveblockLocation
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r1, .L143
	mov	r0, #0x0
	ldrsb	r0, [r1, r0]
	ldrb	r1, [r1, #0x1]
	lsl	r1, r1, #24
	asr	r1, r1, #24
	bl	GetMapTypeByGroupAndId
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r0, r4, #0
	bl	is_map_type_1_2_3_5_or_6
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L142	@cond_branch
	add	r0, r5, #0
	bl	is_map_type_1_2_3_5_or_6
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L142	@cond_branch
	ldr	r1, .L143+0x4
	mov	r0, #0x4
	ldrsb	r0, [r1, r0]
	ldrb	r1, [r1, #0x5]
	lsl	r1, r1, #24
	asr	r1, r1, #24
	mov	r2, #0x1
	neg	r2, r2
	sub	r3, r6, #0x7
	lsl	r3, r3, #0x18
	asr	r3, r3, #0x18
	sub	r4, r7, #0x6
	lsl	r4, r4, #0x18
	asr	r4, r4, #0x18
	str	r4, [sp]
	bl	sub_805363C
.L142:
	add	sp, sp, #0x4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L144:
	.align	2, 0
.L143:
	.word	gWarpDestination
	.word	gSaveBlock1
.Lfe34:
	.size	 sub_80535C4,.Lfe34-sub_80535C4
	.align	2, 0
	.globl	sub_805363C
	.type	 sub_805363C,function
	.thumb_func
sub_805363C:
	push	{r4, r5, r6, lr}
	add	sp, sp, #0xfffffff8
	add	r4, r0, #0
	add	r5, r1, #0
	add	r6, r2, #0
	ldr	r1, [sp, #0x18]
	ldr	r0, .L146
	lsl	r4, r4, #0x18
	asr	r4, r4, #0x18
	lsl	r5, r5, #0x18
	asr	r5, r5, #0x18
	lsl	r6, r6, #0x18
	asr	r6, r6, #0x18
	lsl	r3, r3, #0x18
	asr	r3, r3, #0x18
	str	r3, [sp]
	lsl	r1, r1, #0x18
	asr	r1, r1, #0x18
	str	r1, [sp, #0x4]
	add	r1, r4, #0
	add	r2, r5, #0
	add	r3, r6, #0
	bl	SetWarpData
	add	sp, sp, #0x8
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L147:
	.align	2, 0
.L146:
	.word	gSaveBlock1+0x24
.Lfe35:
	.size	 sub_805363C,.Lfe35-sub_805363C
	.align	2, 0
	.globl	sub_8053678
	.type	 sub_8053678,function
	.thumb_func
sub_8053678:
	ldr	r2, .L149
	ldr	r0, .L149+0x4
	ldr	r1, [r0, #0x28]		@ created by thumb_load_double_from_address
	ldr	r0, [r0, #0x24]		@ created by thumb_load_double_from_address
	str	r0, [r2]
	str	r1, [r2, #0x4]
	bx	lr
.L150:
	.align	2, 0
.L149:
	.word	gWarpDestination
	.word	gSaveBlock1
.Lfe36:
	.size	 sub_8053678,.Lfe36-sub_8053678
	.align	2, 0
	.globl	sub_8053690
	.type	 sub_8053690,function
	.thumb_func
sub_8053690:
	push	{r4, r5, r6, lr}
	add	sp, sp, #0xfffffff8
	add	r4, r0, #0
	add	r5, r1, #0
	add	r6, r2, #0
	ldr	r1, [sp, #0x18]
	ldr	r0, .L152
	lsl	r4, r4, #0x18
	asr	r4, r4, #0x18
	lsl	r5, r5, #0x18
	asr	r5, r5, #0x18
	lsl	r6, r6, #0x18
	asr	r6, r6, #0x18
	lsl	r3, r3, #0x18
	asr	r3, r3, #0x18
	str	r3, [sp]
	lsl	r1, r1, #0x18
	asr	r1, r1, #0x18
	str	r1, [sp, #0x4]
	add	r1, r4, #0
	add	r2, r5, #0
	add	r3, r6, #0
	bl	SetWarpData
	add	sp, sp, #0x8
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L153:
	.align	2, 0
.L152:
	.word	gUnknown_02029800
.Lfe37:
	.size	 sub_8053690,.Lfe37-sub_8053690
	.align	2, 0
	.type	 warp1_set_to_warp2,function
	.thumb_func
warp1_set_to_warp2:
	ldr	r2, .L155
	ldr	r0, .L155+0x4
	ldr	r1, [r0, #0x4]		@ created by thumb_load_double_from_address
	ldr	r0, [r0]		@ created by thumb_load_double_from_address
	str	r0, [r2]
	str	r1, [r2, #0x4]
	bx	lr
.L156:
	.align	2, 0
.L155:
	.word	gWarpDestination
	.word	gUnknown_02029800
.Lfe38:
	.size	 warp1_set_to_warp2,.Lfe38-warp1_set_to_warp2
	.align	2, 0
	.globl	sub_80536E4
	.type	 sub_80536E4,function
	.thumb_func
sub_80536E4:
	push	{r4, r5, r6, lr}
	add	sp, sp, #0xfffffff8
	add	r4, r0, #0
	add	r5, r1, #0
	add	r6, r2, #0
	ldr	r1, [sp, #0x18]
	ldr	r0, .L158
	lsl	r4, r4, #0x18
	asr	r4, r4, #0x18
	lsl	r5, r5, #0x18
	asr	r5, r5, #0x18
	lsl	r6, r6, #0x18
	asr	r6, r6, #0x18
	lsl	r3, r3, #0x18
	asr	r3, r3, #0x18
	str	r3, [sp]
	lsl	r1, r1, #0x18
	asr	r1, r1, #0x18
	str	r1, [sp, #0x4]
	add	r1, r4, #0
	add	r2, r5, #0
	add	r3, r6, #0
	bl	SetWarpData
	add	sp, sp, #0x8
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L159:
	.align	2, 0
.L158:
	.word	gUnknown_02029808
.Lfe39:
	.size	 sub_80536E4,.Lfe39-sub_80536E4
	.align	2, 0
	.globl	sub_8053720
	.type	 sub_8053720,function
	.thumb_func
sub_8053720:
	push	{r4, r5, r6, lr}
	add	sp, sp, #0xfffffffc
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	lsl	r1, r1, #0x10
	lsr	r6, r1, #0x10
	ldr	r4, .L163
	add	r0, r4, #0
	bl	warp_data_is_not_neg_1
	cmp	r0, #0x1
	bne	.L161	@cond_branch
	ldr	r2, .L163+0x4
	ldr	r0, .L163+0x8
	ldr	r1, [r0, #0x4]		@ created by thumb_load_double_from_address
	ldr	r0, [r0]		@ created by thumb_load_double_from_address
	str	r0, [r2]
	str	r1, [r2, #0x4]
	b	.L162
.L164:
	.align	2, 0
.L163:
	.word	gUnknown_02029808
	.word	gWarpDestination
	.word	gUnknown_020297F0
.L161:
	mov	r0, #0x0
	ldrsb	r0, [r4, r0]
	mov	r1, #0x1
	ldrsb	r1, [r4, r1]
	mov	r2, #0x1
	neg	r2, r2
	lsl	r3, r5, #0x18
	asr	r3, r3, #0x18
	lsl	r4, r6, #0x18
	asr	r4, r4, #0x18
	str	r4, [sp]
	bl	Overworld_SetWarpDestination
.L162:
	add	sp, sp, #0x4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe40:
	.size	 sub_8053720,.Lfe40-sub_8053720
	.align	2, 0
	.globl	sub_8053778
	.type	 sub_8053778,function
	.thumb_func
sub_8053778:
	ldr	r2, .L166
	ldr	r0, .L166+0x4
	ldr	r1, [r0, #0x10]		@ created by thumb_load_double_from_address
	ldr	r0, [r0, #0xc]		@ created by thumb_load_double_from_address
	str	r0, [r2]
	str	r1, [r2, #0x4]
	bx	lr
.L167:
	.align	2, 0
.L166:
	.word	gWarpDestination
	.word	gSaveBlock1
.Lfe41:
	.size	 sub_8053778,.Lfe41-sub_8053778
	.align	2, 0
	.globl	unref_sub_8053790
	.type	 unref_sub_8053790,function
	.thumb_func
unref_sub_8053790:
	push	{r4, r5, r6, lr}
	add	sp, sp, #0xfffffff8
	add	r4, r0, #0
	add	r5, r1, #0
	add	r6, r2, #0
	ldr	r1, [sp, #0x18]
	ldr	r0, .L169
	lsl	r4, r4, #0x18
	asr	r4, r4, #0x18
	lsl	r5, r5, #0x18
	asr	r5, r5, #0x18
	lsl	r6, r6, #0x18
	asr	r6, r6, #0x18
	lsl	r3, r3, #0x18
	asr	r3, r3, #0x18
	str	r3, [sp]
	lsl	r1, r1, #0x18
	asr	r1, r1, #0x18
	str	r1, [sp, #0x4]
	add	r1, r4, #0
	add	r2, r5, #0
	add	r3, r6, #0
	bl	SetWarpData
	add	sp, sp, #0x8
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L170:
	.align	2, 0
.L169:
	.word	gSaveBlock1+0xc
.Lfe42:
	.size	 unref_sub_8053790,.Lfe42-unref_sub_8053790
	.align	2, 0
	.globl	sub_80537CC
	.type	 sub_80537CC,function
	.thumb_func
sub_80537CC:
	push	{r4, r5, lr}
	add	sp, sp, #0xfffffff8
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetHealLocation
	add	r5, r0, #0
	cmp	r5, #0
	beq	.L172	@cond_branch
	ldr	r0, .L173
	mov	r1, #0x0
	ldrsb	r1, [r5, r1]
	mov	r2, #0x1
	ldrsb	r2, [r5, r2]
	mov	r3, #0x1
	neg	r3, r3
	mov	r4, #0x2
	ldrsb	r4, [r5, r4]
	str	r4, [sp]
	mov	r4, #0x4
	ldrsb	r4, [r5, r4]
	str	r4, [sp, #0x4]
	bl	SetWarpData
.L172:
	add	sp, sp, #0x8
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L174:
	.align	2, 0
.L173:
	.word	gSaveBlock1+0xc
.Lfe43:
	.size	 sub_80537CC,.Lfe43-sub_80537CC
	.align	2, 0
	.globl	gpu_sync_bg_hide
	.type	 gpu_sync_bg_hide,function
	.thumb_func
gpu_sync_bg_hide:
	ldr	r2, .L176
	ldr	r0, [r2, #0x14]		@ created by thumb_load_double_from_address
	ldr	r1, [r2, #0x18]		@ created by thumb_load_double_from_address
	str	r0, [r2, #0xc]
	str	r1, [r2, #0x10]
	bx	lr
.L177:
	.align	2, 0
.L176:
	.word	gSaveBlock1
.Lfe44:
	.size	 gpu_sync_bg_hide,.Lfe44-gpu_sync_bg_hide
	.align	2, 0
	.globl	GetMapConnection
	.type	 GetMapConnection,function
	.thumb_func
GetMapConnection:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L188
	ldr	r0, [r0, #0xc]
	ldr	r3, [r0]
	ldr	r1, [r0, #0x4]
	cmp	r1, #0
	bne	.L179	@cond_branch
	b	.L181
.L189:
	.align	2, 0
.L188:
	.word	gMapHeader
.L187:
	add	r0, r1, #0
	b	.L186
.L179:
	mov	r2, #0x0
	cmp	r2, r3
	bge	.L181	@cond_branch
.L183:
	ldrb	r0, [r1]
	cmp	r0, r4
	beq	.L187	@cond_branch
	add	r2, r2, #0x1
	add	r1, r1, #0xc
	cmp	r2, r3
	blt	.L183	@cond_branch
.L181:
	mov	r0, #0x0
.L186:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe45:
	.size	 GetMapConnection,.Lfe45-GetMapConnection
	.align	2, 0
	.globl	sub_8053850
	.type	 sub_8053850,function
	.thumb_func
sub_8053850:
	push	{r4, r5, lr}
	add	sp, sp, #0xfffffffc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r1, #0x10
	lsr	r4, r1, #0x10
	lsl	r2, r2, #0x10
	lsr	r5, r2, #0x10
	bl	GetMapConnection
	add	r1, r0, #0
	cmp	r1, #0
	beq	.L191	@cond_branch
	mov	r0, #0x8
	ldrsb	r0, [r1, r0]
	ldrb	r1, [r1, #0x9]
	lsl	r1, r1, #24
	asr	r1, r1, #24
	mov	r2, #0x1
	neg	r2, r2
	lsl	r3, r4, #0x18
	asr	r3, r3, #0x18
	lsl	r4, r5, #0x18
	asr	r4, r4, #0x18
	str	r4, [sp]
	bl	Overworld_SetWarpDestination
	b	.L192
.L191:
	bl	mapheader_run_script_with_tag_x6
	ldr	r0, .L195
	bl	warp_data_is_not_neg_1
	cmp	r0, #0
	beq	.L193	@cond_branch
	mov	r0, #0x0
	b	.L194
.L196:
	.align	2, 0
.L195:
	.word	gUnknown_02029800
.L193:
	bl	warp1_set_to_warp2
.L192:
	mov	r0, #0x1
.L194:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe46:
	.size	 sub_8053850,.Lfe46-sub_8053850
	.align	2, 0
	.globl	sub_80538B0
	.type	 sub_80538B0,function
	.thumb_func
sub_80538B0:
	push	{lr}
	add	r3, r0, #0
	add	r2, r1, #0
	lsl	r3, r3, #0x10
	lsr	r3, r3, #0x10
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	mov	r0, #0x6
	add	r1, r3, #0
	bl	sub_8053850
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.Lfe47:
	.size	 sub_80538B0,.Lfe47-sub_80538B0
	.align	2, 0
	.globl	sub_80538D0
	.type	 sub_80538D0,function
	.thumb_func
sub_80538D0:
	push	{lr}
	add	r3, r0, #0
	add	r2, r1, #0
	lsl	r3, r3, #0x10
	lsr	r3, r3, #0x10
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	mov	r0, #0x5
	add	r1, r3, #0
	bl	sub_8053850
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.Lfe48:
	.size	 sub_80538D0,.Lfe48-sub_80538D0
	.align	2, 0
	.globl	sub_80538F0
	.type	 sub_80538F0,function
	.thumb_func
sub_80538F0:
	push	{r4, r5, lr}
	add	sp, sp, #0xfffffffc
	lsl	r0, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r5, r0, #0x18
	asr	r0, r0, #0x18
	lsr	r4, r1, #0x18
	asr	r1, r1, #0x18
	mov	r3, #0x1
	neg	r3, r3
	str	r3, [sp]
	add	r2, r3, #0
	bl	Overworld_SetWarpDestination
	bl	sub_8053F0C
	bl	ApplyCurrentWarp
	bl	set_current_map_header_from_sav1_save_old_name
	bl	LoadMapObjTemplatesFromHeader
	bl	ClearTempFieldEventData
	bl	ResetCyclingRoadChallengeData
	bl	prev_quest_postbuffer_cursor_backup_reset
	add	r0, r5, #0
	add	r1, r4, #0
	bl	sub_8082BD0
	bl	DoTimeBasedEvents
	bl	sub_80806E4
	bl	ChooseAmbientCrySpecies
	bl	SetDefaultFlashLevel
	bl	Overworld_ClearSavedMusic
	bl	mapheader_run_script_with_tag_x3
	bl	not_trainer_hill_battle_pyramid
	ldr	r4, .L205
	ldr	r0, [r4]
	bl	sub_8056D38
	ldr	r0, [r4]
	bl	apply_map_tileset2_palette
	mov	r4, #0x6
.L203:
	lsl	r0, r4, #0x18
	lsr	r0, r0, #0x18
	bl	sub_807D874
	add	r4, r4, #0x1
	cmp	r4, #0xb
	ble	.L203	@cond_branch
	bl	sub_8072ED0
	bl	UpdateLocationHistoryForRoamer
	bl	RoamerMove
	bl	DoCurrentWeather
	bl	ResetFieldTasksArgs
	bl	mapheader_run_script_with_tag_x5
	bl	ShowMapNamePopup
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L206:
	.align	2, 0
.L205:
	.word	gMapHeader
.Lfe49:
	.size	 sub_80538F0,.Lfe49-sub_80538F0
	.align	2, 0
	.globl	sub_8053994
	.type	 sub_8053994,function
	.thumb_func
sub_8053994:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	bl	set_current_map_header_from_sav1_save_old_name
	bl	LoadMapObjTemplatesFromHeader
	ldr	r4, .L211
	ldrb	r0, [r4, #0x17]
	bl	is_map_type_1_2_3_5_or_6
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldrb	r0, [r4, #0x17]
	bl	Overworld_MapTypeIsIndoors
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	ClearTempFieldEventData
	bl	ResetCyclingRoadChallengeData
	bl	prev_quest_postbuffer_cursor_backup_reset
	ldr	r1, .L211+0x4
	mov	r0, #0x4
	ldrsb	r0, [r1, r0]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldrb	r1, [r1, #0x5]
	lsl	r1, r1, #24
	asr	r1, r1, #24
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	bl	sub_8082BD0
	cmp	r6, #0x1
	beq	.L208	@cond_branch
	bl	DoTimeBasedEvents
.L208:
	bl	sub_80806E4
	bl	ChooseAmbientCrySpecies
	cmp	r5, #0
	beq	.L209	@cond_branch
	ldr	r0, .L211+0x8
	bl	FlagClear
.L209:
	bl	SetDefaultFlashLevel
	bl	Overworld_ClearSavedMusic
	bl	mapheader_run_script_with_tag_x3
	bl	UpdateLocationHistoryForRoamer
	bl	RoamerMoveToOtherLocationSet
	bl	not_trainer_hill_battle_pyramid
	cmp	r6, #0x1
	beq	.L210	@cond_branch
	cmp	r4, #0
	beq	.L210	@cond_branch
	ldr	r1, .L211+0xc
	ldr	r0, [r1]
	ldr	r1, [r1, #0x4]
	bl	UpdateTVScreensOnMap
	mov	r0, #0x1
	bl	sub_80BBCCC
.L210:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L212:
	.align	2, 0
.L211:
	.word	gMapHeader
	.word	gSaveBlock1
	.word	0x828
	.word	gUnknown_03004870
.Lfe50:
	.size	 sub_8053994,.Lfe50-sub_8053994
	.align	2, 0
	.globl	player_avatar_init_params_reset
	.type	 player_avatar_init_params_reset,function
	.thumb_func
player_avatar_init_params_reset:
	ldr	r1, .L214
	mov	r0, #0x1
	strb	r0, [r1, #0x1]
	strb	r0, [r1]
	bx	lr
.L215:
	.align	2, 0
.L214:
	.word	gUnknown_02029810
.Lfe51:
	.size	 player_avatar_init_params_reset,.Lfe51-player_avatar_init_params_reset
	.align	2, 0
	.globl	walkrun_find_lowest_active_bit_in_bitfield
	.type	 walkrun_find_lowest_active_bit_in_bitfield,function
	.thumb_func
walkrun_find_lowest_active_bit_in_bitfield:
	push	{r4, lr}
	bl	player_get_direction_lower_nybble
	ldr	r4, .L226
	strb	r0, [r4, #0x1]
	mov	r0, #0x2
	bl	TestPlayerAvatarFlags
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L217	@cond_branch
	mov	r0, #0x2
	b	.L225
.L227:
	.align	2, 0
.L226:
	.word	gUnknown_02029810
.L217:
	mov	r0, #0x4
	bl	TestPlayerAvatarFlags
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L219	@cond_branch
	mov	r0, #0x4
	b	.L225
.L219:
	mov	r0, #0x8
	bl	TestPlayerAvatarFlags
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L221	@cond_branch
	mov	r0, #0x8
	b	.L225
.L221:
	mov	r0, #0x10
	bl	TestPlayerAvatarFlags
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L223	@cond_branch
	mov	r0, #0x10
	b	.L225
.L223:
	mov	r0, #0x1
.L225:
	strb	r0, [r4]
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe52:
	.size	 walkrun_find_lowest_active_bit_in_bitfield,.Lfe52-walkrun_find_lowest_active_bit_in_bitfield
	.align	2, 0
	.globl	sub_8053AA8
	.type	 sub_8053AA8,function
	.thumb_func
sub_8053AA8:
	push	{r4, r5, r6, r7, lr}
	bl	Overworld_GetMapTypeOfSaveblockLocation
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	bl	cur_mapdata_block_role_at_screen_center_acc_to_sav1
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	ldr	r6, .L229
	add	r0, r6, #0
	add	r1, r4, #0
	add	r2, r5, #0
	bl	sub_8053B00
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldr	r0, .L229+0x4
	and	r7, r7, r0
	orr	r7, r7, r1
	add	r0, r6, #0
	add	r2, r4, #0
	add	r3, r5, #0
	bl	sub_8053B60
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x10
	ldr	r1, .L229+0x8
	and	r7, r7, r1
	orr	r7, r7, r0
	str	r7, [r6]
	add	r0, r6, #0
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L230:
	.align	2, 0
.L229:
	.word	gUnknown_02029810
	.word	0xffffff00
	.word	0xffff00ff
.Lfe53:
	.size	 sub_8053AA8,.Lfe53-sub_8053AA8
	.align	2, 0
	.globl	sub_8053B00
	.type	 sub_8053B00,function
	.thumb_func
sub_8053B00:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	lsl	r1, r1, #0x10
	lsr	r5, r1, #0x10
	lsl	r2, r2, #0x18
	lsr	r4, r2, #0x18
	cmp	r4, #0x8
	beq	.L232	@cond_branch
	ldr	r0, .L239
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L237	@cond_branch
.L232:
	cmp	r4, #0x5
	bne	.L233	@cond_branch
	mov	r0, #0x10
	b	.L238
.L240:
	.align	2, 0
.L239:
	.word	0x82d
.L233:
	lsl	r0, r5, #0x18
	lsr	r0, r0, #0x18
	bl	MetatileBehavior_IsSurfableWaterOrUnderwater
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L234	@cond_branch
	mov	r0, #0x8
	b	.L238
.L234:
	bl	Overworld_IsBikingAllowed
	cmp	r0, #0x1
	bne	.L237	@cond_branch
	ldrb	r0, [r6]
	cmp	r0, #0x2
	bne	.L236	@cond_branch
	mov	r0, #0x2
	b	.L238
.L236:
	cmp	r0, #0x4
	bne	.L237	@cond_branch
	mov	r0, #0x4
	b	.L238
.L237:
	mov	r0, #0x1
.L238:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe54:
	.size	 sub_8053B00,.Lfe54-sub_8053B00
	.align	2, 0
	.globl	sub_8053B60
	.type	 sub_8053B60,function
	.thumb_func
sub_8053B60:
	push	{r4, r5, r6, r7, lr}
	add	r6, r0, #0
	lsl	r1, r1, #0x18
	lsr	r7, r1, #0x18
	lsl	r2, r2, #0x10
	lsr	r4, r2, #0x10
	lsl	r3, r3, #0x18
	lsr	r5, r3, #0x18
	ldr	r0, .L259
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L242	@cond_branch
	cmp	r5, #0x6
	beq	.L255	@cond_branch
.L242:
	lsl	r4, r4, #0x18
	lsr	r5, r4, #0x18
	add	r0, r5, #0
	bl	MetatileBehavior_IsDeepSouthWarp
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L256	@cond_branch
	add	r0, r5, #0
	bl	MetatileBehavior_IsNonAnimDoor
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L257	@cond_branch
	add	r0, r5, #0
	bl	MetatileBehavior_IsDoor
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L257	@cond_branch
	add	r0, r5, #0
	bl	MetatileBehavior_IsSouthArrowWarp
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L246	@cond_branch
.L256:
	mov	r0, #0x2
	b	.L254
.L260:
	.align	2, 0
.L259:
	.word	0x82d
.L246:
	add	r0, r5, #0
	bl	MetatileBehavior_IsNorthArrowWarp
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L257	@cond_branch
	add	r0, r5, #0
	bl	MetatileBehavior_IsWestArrowWarp
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L248	@cond_branch
.L255:
	mov	r0, #0x4
	b	.L254
.L248:
	add	r0, r5, #0
	bl	MetatileBehavior_IsEastArrowWarp
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L249	@cond_branch
	mov	r0, #0x3
	b	.L254
.L249:
	ldrb	r0, [r6]
	cmp	r0, #0x10
	bne	.L252	@cond_branch
	cmp	r7, #0x8
	beq	.L253	@cond_branch
.L252:
	cmp	r0, #0x8
	bne	.L250	@cond_branch
	cmp	r7, #0x10
	beq	.L253	@cond_branch
.L250:
	lsr	r0, r4, #0x18
	bl	MetatileBehavior_IsLadder
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L253	@cond_branch
.L257:
	mov	r0, #0x1
	b	.L254
.L253:
	ldrb	r0, [r6, #0x1]
.L254:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe55:
	.size	 sub_8053B60,.Lfe55-sub_8053B60
	.align	2, 0
	.globl	cur_mapdata_block_role_at_screen_center_acc_to_sav1
	.type	 cur_mapdata_block_role_at_screen_center_acc_to_sav1,function
	.thumb_func
cur_mapdata_block_role_at_screen_center_acc_to_sav1:
	push	{lr}
	ldr	r1, .L262
	mov	r2, #0x0
	ldrsh	r0, [r1, r2]
	add	r0, r0, #0x7
	mov	r2, #0x2
	ldrsh	r1, [r1, r2]
	add	r1, r1, #0x7
	bl	MapGridGetMetatileBehaviorAt
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	pop	{r1}
	bx	r1
.L263:
	.align	2, 0
.L262:
	.word	gSaveBlock1
.Lfe56:
	.size	 cur_mapdata_block_role_at_screen_center_acc_to_sav1,.Lfe56-cur_mapdata_block_role_at_screen_center_acc_to_sav1
	.align	2, 0
	.globl	Overworld_IsBikingAllowed
	.type	 Overworld_IsBikingAllowed,function
	.thumb_func
Overworld_IsBikingAllowed:
	push	{lr}
	ldr	r0, .L273
	mov	r1, #0x4
	ldrsb	r1, [r0, r1]
	add	r2, r0, #0
	cmp	r1, #0x1d
	bne	.L265	@cond_branch
	ldrb	r0, [r2, #0x5]
	sub	r0, r0, #0xb
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bls	.L272	@cond_branch
.L265:
	ldr	r0, .L273+0x4
	ldrb	r0, [r0, #0x17]
	cmp	r0, #0x8
	beq	.L270	@cond_branch
	cmp	r0, #0x9
	beq	.L270	@cond_branch
	cmp	r0, #0x5
	beq	.L270	@cond_branch
	ldrh	r1, [r2, #0x4]
	ldr	r0, .L273+0x8
	cmp	r1, r0
	beq	.L270	@cond_branch
	ldr	r0, .L273+0xc
	cmp	r1, r0
	beq	.L270	@cond_branch
.L272:
	mov	r0, #0x1
	b	.L271
.L274:
	.align	2, 0
.L273:
	.word	gSaveBlock1
	.word	gMapHeader
	.word	0x2418
	.word	0x2a18
.L270:
	mov	r0, #0x0
.L271:
	pop	{r1}
	bx	r1
.Lfe57:
	.size	 Overworld_IsBikingAllowed,.Lfe57-Overworld_IsBikingAllowed
	.align	2, 0
	.globl	SetDefaultFlashLevel
	.type	 SetDefaultFlashLevel,function
	.thumb_func
SetDefaultFlashLevel:
	push	{lr}
	ldr	r0, .L282
	ldrb	r1, [r0, #0x15]
	cmp	r1, #0
	bne	.L276	@cond_branch
	ldr	r0, .L282+0x4
	b	.L280
.L283:
	.align	2, 0
.L282:
	.word	gMapHeader
	.word	gSaveBlock1
.L276:
	ldr	r0, .L284
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L278	@cond_branch
	ldr	r0, .L284+0x4
	add	r0, r0, #0x30
	mov	r1, #0x1
	b	.L281
.L285:
	.align	2, 0
.L284:
	.word	0x828
	.word	gSaveBlock1
.L278:
	ldr	r0, .L286
	ldr	r1, .L286+0x4
	ldr	r1, [r1]
.L280:
	add	r0, r0, #0x30
.L281:
	strb	r1, [r0]
	pop	{r0}
	bx	r0
.L287:
	.align	2, 0
.L286:
	.word	gSaveBlock1
	.word	gMaxFlashLevel
.Lfe58:
	.size	 SetDefaultFlashLevel,.Lfe58-SetDefaultFlashLevel
	.align	2, 0
	.globl	Overworld_SetFlashLevel
	.type	 Overworld_SetFlashLevel,function
	.thumb_func
Overworld_SetFlashLevel:
	push	{lr}
	add	r1, r0, #0
	cmp	r1, #0
	blt	.L290	@cond_branch
	ldr	r0, .L291
	ldr	r0, [r0]
	cmp	r1, r0
	ble	.L289	@cond_branch
.L290:
	mov	r1, #0x0
.L289:
	ldr	r0, .L291+0x4
	add	r0, r0, #0x30
	strb	r1, [r0]
	pop	{r0}
	bx	r0
.L292:
	.align	2, 0
.L291:
	.word	gMaxFlashLevel
	.word	gSaveBlock1
.Lfe59:
	.size	 Overworld_SetFlashLevel,.Lfe59-Overworld_SetFlashLevel
	.align	2, 0
	.globl	Overworld_GetFlashLevel
	.type	 Overworld_GetFlashLevel,function
	.thumb_func
Overworld_GetFlashLevel:
	ldr	r0, .L294
	add	r0, r0, #0x30
	ldrb	r0, [r0]
	bx	lr
.L295:
	.align	2, 0
.L294:
	.word	gSaveBlock1
.Lfe60:
	.size	 Overworld_GetFlashLevel,.Lfe60-Overworld_GetFlashLevel
	.align	2, 0
	.globl	sub_8053D14
	.type	 sub_8053D14,function
	.thumb_func
sub_8053D14:
	push	{lr}
	ldr	r1, .L297
	strh	r0, [r1, #0x32]
	bl	get_mapdata_header
	ldr	r1, .L297+0x4
	str	r0, [r1]
	pop	{r0}
	bx	r0
.L298:
	.align	2, 0
.L297:
	.word	gSaveBlock1
	.word	gMapHeader
.Lfe61:
	.size	 sub_8053D14,.Lfe61-sub_8053D14
	.align	2, 0
	.type	 ShouldLegendaryMusicPlayAtLocation,function
	.thumb_func
ShouldLegendaryMusicPlayAtLocation:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r0, .L316
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L301	@cond_branch
	mov	r0, #0x0
	ldrsb	r0, [r4, r0]
	cmp	r0, #0
	bne	.L301	@cond_branch
	mov	r0, #0x1
	ldrsb	r0, [r4, r0]
	cmp	r0, #0x5
	blt	.L301	@cond_branch
	cmp	r0, #0x8
	ble	.L315	@cond_branch
	cmp	r0, #0x2b
	bgt	.L301	@cond_branch
	cmp	r0, #0x27
	blt	.L301	@cond_branch
.L315:
	mov	r0, #0x1
	b	.L314
.L317:
	.align	2, 0
.L316:
	.word	0x82a
.L301:
	mov	r0, #0x0
.L314:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe62:
	.size	 ShouldLegendaryMusicPlayAtLocation,.Lfe62-ShouldLegendaryMusicPlayAtLocation
	.align	2, 0
	.type	 IsInfiltratedWeatherInstitute,function
	.thumb_func
IsInfiltratedWeatherInstitute:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r0, .L324
	bl	VarGet
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L323	@cond_branch
	mov	r0, #0x0
	ldrsb	r0, [r4, r0]
	cmp	r0, #0x20
	bne	.L323	@cond_branch
	ldrb	r0, [r4, #0x1]
	cmp	r0, #0x1
	bls	.L321	@cond_branch
.L323:
	mov	r0, #0x0
	b	.L322
.L325:
	.align	2, 0
.L324:
	.word	0x40b3
.L321:
	mov	r0, #0x1
.L322:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe63:
	.size	 IsInfiltratedWeatherInstitute,.Lfe63-IsInfiltratedWeatherInstitute
	.align	2, 0
	.type	 GetLocationMusic,function
	.thumb_func
GetLocationMusic:
	push	{r4, lr}
	add	r4, r0, #0
	bl	ShouldLegendaryMusicPlayAtLocation
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x1
	bne	.L327	@cond_branch
	ldr	r0, .L332
	b	.L331
.L333:
	.align	2, 0
.L332:
	.word	0x1bb
.L327:
	add	r0, r4, #0
	bl	IsInfiltratedWeatherInstitute
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x1
	beq	.L329	@cond_branch
	mov	r0, #0x0
	ldrsb	r0, [r4, r0]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x1
	ldrsb	r1, [r4, r1]
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	bl	Overworld_GetMapHeaderByGroupAndId
	ldrh	r0, [r0, #0x10]
	b	.L331
.L329:
	mov	r0, #0xcb
	lsl	r0, r0, #0x1
.L331:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe64:
	.size	 GetLocationMusic,.Lfe64-GetLocationMusic
	.align	2, 0
	.globl	GetCurrLocationDefaultMusic
	.type	 GetCurrLocationDefaultMusic,function
	.thumb_func
GetCurrLocationDefaultMusic:
	push	{r4, lr}
	ldr	r0, .L341
	ldrh	r1, [r0, #0x4]
	mov	r0, #0xd0
	lsl	r0, r0, #0x5
	cmp	r1, r0
	bne	.L335	@cond_branch
	bl	GetSav1Weather
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x8
	bne	.L335	@cond_branch
	ldr	r0, .L341+0x4
	b	.L340
.L342:
	.align	2, 0
.L341:
	.word	gSaveBlock1
	.word	0x199
.L335:
	ldr	r4, .L343
	add	r0, r4, #0
	bl	GetLocationMusic
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	ldr	r0, .L343+0x4
	cmp	r1, r0
	beq	.L336	@cond_branch
	add	r0, r1, #0
	b	.L340
.L344:
	.align	2, 0
.L343:
	.word	gSaveBlock1+0x4
	.word	0x7fff
.L336:
	sub	r0, r4, #0x4
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp	r0, #0x17
	ble	.L338	@cond_branch
	mov	r0, #0xc9
	lsl	r0, r0, #0x1
	b	.L340
.L338:
	mov	r0, #0xb4
	lsl	r0, r0, #0x1
.L340:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe65:
	.size	 GetCurrLocationDefaultMusic,.Lfe65-GetCurrLocationDefaultMusic
	.align	2, 0
	.globl	GetWarpDestinationMusic
	.type	 GetWarpDestinationMusic,function
	.thumb_func
GetWarpDestinationMusic:
	push	{lr}
	ldr	r0, .L351
	bl	GetLocationMusic
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	ldr	r0, .L351+0x4
	cmp	r1, r0
	beq	.L346	@cond_branch
	add	r0, r1, #0
	b	.L350
.L352:
	.align	2, 0
.L351:
	.word	gWarpDestination
	.word	0x7fff
.L346:
	ldr	r0, .L353
	ldrh	r1, [r0, #0x4]
	mov	r0, #0x80
	lsl	r0, r0, #0x2
	cmp	r1, r0
	beq	.L348	@cond_branch
	sub	r0, r0, #0x6e
	b	.L350
.L354:
	.align	2, 0
.L353:
	.word	gSaveBlock1
.L348:
	mov	r0, #0xb4
	lsl	r0, r0, #0x1
.L350:
	pop	{r1}
	bx	r1
.Lfe66:
	.size	 GetWarpDestinationMusic,.Lfe66-GetWarpDestinationMusic
	.align	2, 0
	.globl	Overworld_ResetMapMusic
	.type	 Overworld_ResetMapMusic,function
	.thumb_func
Overworld_ResetMapMusic:
	push	{lr}
	bl	ResetMapMusic
	pop	{r0}
	bx	r0
.Lfe67:
	.size	 Overworld_ResetMapMusic,.Lfe67-Overworld_ResetMapMusic
	.align	2, 0
	.globl	Overworld_PlaySpecialMapMusic
	.type	 Overworld_PlaySpecialMapMusic,function
	.thumb_func
Overworld_PlaySpecialMapMusic:
	push	{r4, lr}
	bl	GetCurrLocationDefaultMusic
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	ldr	r0, .L364
	cmp	r4, r0
	beq	.L357	@cond_branch
	ldr	r1, .L364+0x4
	ldrh	r0, [r1, #0x2c]
	cmp	r0, #0
	beq	.L358	@cond_branch
	add	r4, r0, #0
	b	.L357
.L365:
	.align	2, 0
.L364:
	.word	0x1bb
	.word	gSaveBlock1
.L358:
	bl	Overworld_GetMapTypeOfSaveblockLocation
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x5
	bne	.L360	@cond_branch
	ldr	r4, .L366
	b	.L357
.L367:
	.align	2, 0
.L366:
	.word	0x19b
.L360:
	mov	r0, #0x8
	bl	TestPlayerAvatarFlags
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L357	@cond_branch
	ldr	r4, .L368
.L357:
	bl	GetCurrentMapMusic
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r4, r0
	beq	.L363	@cond_branch
	add	r0, r4, #0
	bl	PlayNewMapMusic
.L363:
	pop	{r4}
	pop	{r0}
	bx	r0
.L369:
	.align	2, 0
.L368:
	.word	0x16d
.Lfe68:
	.size	 Overworld_PlaySpecialMapMusic,.Lfe68-Overworld_PlaySpecialMapMusic
	.align	2, 0
	.globl	Overworld_SetSavedMusic
	.type	 Overworld_SetSavedMusic,function
	.thumb_func
Overworld_SetSavedMusic:
	ldr	r1, .L371
	strh	r0, [r1, #0x2c]
	bx	lr
.L372:
	.align	2, 0
.L371:
	.word	gSaveBlock1
.Lfe69:
	.size	 Overworld_SetSavedMusic,.Lfe69-Overworld_SetSavedMusic
	.align	2, 0
	.globl	Overworld_ClearSavedMusic
	.type	 Overworld_ClearSavedMusic,function
	.thumb_func
Overworld_ClearSavedMusic:
	ldr	r1, .L374
	mov	r0, #0x0
	strh	r0, [r1, #0x2c]
	bx	lr
.L375:
	.align	2, 0
.L374:
	.word	gSaveBlock1
.Lfe70:
	.size	 Overworld_ClearSavedMusic,.Lfe70-Overworld_ClearSavedMusic
	.align	2, 0
	.globl	sub_8053F0C
	.type	 sub_8053F0C,function
	.thumb_func
sub_8053F0C:
	push	{r4, r5, r6, lr}
	ldr	r0, .L385
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L376	@cond_branch
	bl	GetWarpDestinationMusic
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	bl	GetCurrentMapMusic
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	ldr	r0, .L385+0x4
	cmp	r5, r0
	beq	.L378	@cond_branch
	sub	r0, r0, #0x20
	cmp	r4, r0
	beq	.L376	@cond_branch
	ldr	r6, .L385+0x8
	cmp	r4, r6
	beq	.L376	@cond_branch
	mov	r0, #0x8
	bl	TestPlayerAvatarFlags
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L378	@cond_branch
	add	r5, r6, #0
.L378:
	cmp	r5, r4
	beq	.L376	@cond_branch
	mov	r0, #0x6
	bl	TestPlayerAvatarFlags
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L383	@cond_branch
	add	r0, r5, #0
	mov	r1, #0x4
	mov	r2, #0x4
	bl	FadeOutAndFadeInNewMapMusic
	b	.L376
.L386:
	.align	2, 0
.L385:
	.word	0x4001
	.word	0x1bb
	.word	0x16d
.L383:
	add	r0, r5, #0
	mov	r1, #0x8
	bl	FadeOutAndPlayNewMapMusic
.L376:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe71:
	.size	 sub_8053F0C,.Lfe71-sub_8053F0C
	.align	2, 0
	.globl	Overworld_ChangeMusicToDefault
	.type	 Overworld_ChangeMusicToDefault,function
	.thumb_func
Overworld_ChangeMusicToDefault:
	push	{r4, lr}
	bl	GetCurrentMapMusic
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	bl	GetCurrLocationDefaultMusic
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r4, r0
	beq	.L388	@cond_branch
	bl	GetCurrLocationDefaultMusic
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x8
	bl	FadeOutAndPlayNewMapMusic
.L388:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe72:
	.size	 Overworld_ChangeMusicToDefault,.Lfe72-Overworld_ChangeMusicToDefault
	.align	2, 0
	.globl	Overworld_ChangeMusicTo
	.type	 Overworld_ChangeMusicTo,function
	.thumb_func
Overworld_ChangeMusicTo:
	push	{r4, lr}
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	bl	GetCurrentMapMusic
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	cmp	r1, r4
	beq	.L390	@cond_branch
	ldr	r0, .L391
	cmp	r1, r0
	beq	.L390	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x8
	bl	FadeOutAndPlayNewMapMusic
.L390:
	pop	{r4}
	pop	{r0}
	bx	r0
.L392:
	.align	2, 0
.L391:
	.word	0x1bb
.Lfe73:
	.size	 Overworld_ChangeMusicTo,.Lfe73-Overworld_ChangeMusicTo
	.align	2, 0
	.globl	GetMapMusicFadeoutSpeed
	.type	 GetMapMusicFadeoutSpeed,function
	.thumb_func
GetMapMusicFadeoutSpeed:
	push	{lr}
	bl	warp1_get_mapheader
	ldrb	r0, [r0, #0x17]
	bl	Overworld_MapTypeIsIndoors
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L394	@cond_branch
	mov	r0, #0x4
	b	.L396
.L394:
	mov	r0, #0x2
.L396:
	pop	{r1}
	bx	r1
.Lfe74:
	.size	 GetMapMusicFadeoutSpeed,.Lfe74-GetMapMusicFadeoutSpeed
	.align	2, 0
	.globl	sub_8053FF8
	.type	 sub_8053FF8,function
	.thumb_func
sub_8053FF8:
	push	{r4, lr}
	bl	GetWarpDestinationMusic
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	ldr	r0, .L399
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L398	@cond_branch
	bl	GetCurrentMapMusic
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r4, r0
	beq	.L398	@cond_branch
	bl	GetMapMusicFadeoutSpeed
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	FadeOutMapMusic
.L398:
	pop	{r4}
	pop	{r0}
	bx	r0
.L400:
	.align	2, 0
.L399:
	.word	0x4001
.Lfe75:
	.size	 sub_8053FF8,.Lfe75-sub_8053FF8
	.align	2, 0
	.globl	sub_8054034
	.type	 sub_8054034,function
	.thumb_func
sub_8054034:
	push	{lr}
	bl	IsNotWaitingForBGMStop
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.Lfe76:
	.size	 sub_8054034,.Lfe76-sub_8054034
	.align	2, 0
	.globl	Overworld_FadeOutMapMusic
	.type	 Overworld_FadeOutMapMusic,function
	.thumb_func
Overworld_FadeOutMapMusic:
	push	{lr}
	mov	r0, #0x4
	bl	FadeOutMapMusic
	pop	{r0}
	bx	r0
.Lfe77:
	.size	 Overworld_FadeOutMapMusic,.Lfe77-Overworld_FadeOutMapMusic
	.align	2, 0
	.type	 PlayAmbientCry,function
	.thumb_func
PlayAmbientCry:
	push	{r4, lr}
	add	sp, sp, #0xfffffffc
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	PlayerGetDestCoords
	ldr	r0, .L405
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L404	@cond_branch
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	bl	MapGridGetMetatileBehaviorAt
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	MetatileBehavior_IsSurfableWaterOrUnderwater
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L403	@cond_branch
.L404:
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x58
	bl	__umodsi3
	add	r4, r0, #0
	add	r4, r4, #0xd4
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x1e
	bl	__umodsi3
	add	r2, r0, #0
	add	r2, r2, #0x32
	ldr	r0, .L405+0x4
	ldrh	r0, [r0]
	lsl	r4, r4, #0x18
	asr	r4, r4, #0x18
	lsl	r2, r2, #0x18
	asr	r2, r2, #0x18
	add	r1, r4, #0
	mov	r3, #0x1
	bl	PlayCry2
.L403:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L406:
	.align	2, 0
.L405:
	.word	sIsAmbientCryWaterMon
	.word	sAmbientCrySpecies
.Lfe78:
	.size	 PlayAmbientCry,.Lfe78-PlayAmbientCry
	.align	2, 0
	.globl	UpdateAmbientCry
	.type	 UpdateAmbientCry,function
	.thumb_func
UpdateAmbientCry:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	add	r5, r1, #0
	mov	r1, #0x0
	ldrsh	r0, [r6, r1]
	cmp	r0, #0x4
	bhi	.L408	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L420
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L421:
	.align	2, 0
.L420:
	.word	.L417
	.align	2, 0
	.align	2, 0
.L417:
	.word	.L409
	.word	.L412
	.word	.L413
	.word	.L414
	.word	.L408
.L409:
	ldr	r0, .L422
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L410	@cond_branch
	mov	r0, #0x4
	b	.L419
.L423:
	.align	2, 0
.L422:
	.word	sAmbientCrySpecies
.L410:
	mov	r0, #0x1
	b	.L419
.L412:
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x96
	lsl	r1, r1, #0x4
	bl	__umodsi3
	mov	r1, #0x96
	lsl	r1, r1, #0x3
	add	r0, r0, r1
	strh	r0, [r5]
	mov	r0, #0x3
	b	.L419
.L413:
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r4, #0x96
	lsl	r4, r4, #0x3
	add	r1, r4, #0
	bl	__umodsi3
	add	r0, r0, r4
	strh	r0, [r5]
	mov	r0, #0x3
	b	.L419
.L414:
	ldrh	r0, [r5]
	sub	r0, r0, #0x1
	strh	r0, [r5]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L408	@cond_branch
	bl	PlayAmbientCry
	mov	r0, #0x2
.L419:
	strh	r0, [r6]
.L408:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe79:
	.size	 UpdateAmbientCry,.Lfe79-UpdateAmbientCry
	.align	2, 0
	.globl	ChooseAmbientCrySpecies
	.type	 ChooseAmbientCrySpecies,function
	.thumb_func
ChooseAmbientCrySpecies:
	push	{lr}
	ldr	r0, .L428
	ldrh	r1, [r0, #0x4]
	mov	r0, #0xb4
	lsl	r0, r0, #0x6
	cmp	r1, r0
	bne	.L425	@cond_branch
	bl	IsMirageIslandPresent
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L425	@cond_branch
	ldr	r1, .L428+0x4
	mov	r0, #0x1
	strb	r0, [r1]
	bl	GetLocalWaterMon
	b	.L427
.L429:
	.align	2, 0
.L428:
	.word	gSaveBlock1
	.word	sIsAmbientCryWaterMon
.L425:
	ldr	r0, .L430
	bl	GetLocalWildMon
.L427:
	ldr	r1, .L430+0x4
	strh	r0, [r1]
	pop	{r0}
	bx	r0
.L431:
	.align	2, 0
.L430:
	.word	sIsAmbientCryWaterMon
	.word	sAmbientCrySpecies
.Lfe80:
	.size	 ChooseAmbientCrySpecies,.Lfe80-ChooseAmbientCrySpecies
	.align	2, 0
	.globl	GetMapTypeByGroupAndId
	.type	 GetMapTypeByGroupAndId,function
	.thumb_func
GetMapTypeByGroupAndId:
	push	{lr}
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x8
	lsr	r0, r0, #0x10
	lsl	r1, r1, #0x18
	asr	r1, r1, #0x8
	lsr	r1, r1, #0x10
	bl	Overworld_GetMapHeaderByGroupAndId
	ldrb	r0, [r0, #0x17]
	pop	{r1}
	bx	r1
.Lfe81:
	.size	 GetMapTypeByGroupAndId,.Lfe81-GetMapTypeByGroupAndId
	.align	2, 0
	.globl	GetMapTypeByWarpData
	.type	 GetMapTypeByWarpData,function
	.thumb_func
GetMapTypeByWarpData:
	push	{lr}
	mov	r2, #0x0
	ldrsb	r2, [r0, r2]
	mov	r1, #0x1
	ldrsb	r1, [r0, r1]
	add	r0, r2, #0
	bl	GetMapTypeByGroupAndId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.Lfe82:
	.size	 GetMapTypeByWarpData,.Lfe82-GetMapTypeByWarpData
	.align	2, 0
	.globl	Overworld_GetMapTypeOfSaveblockLocation
	.type	 Overworld_GetMapTypeOfSaveblockLocation,function
	.thumb_func
Overworld_GetMapTypeOfSaveblockLocation:
	push	{lr}
	ldr	r0, .L435
	bl	GetMapTypeByWarpData
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L436:
	.align	2, 0
.L435:
	.word	gSaveBlock1+0x4
.Lfe83:
	.size	 Overworld_GetMapTypeOfSaveblockLocation,.Lfe83-Overworld_GetMapTypeOfSaveblockLocation
	.align	2, 0
	.globl	get_map_type_from_warp0
	.type	 get_map_type_from_warp0,function
	.thumb_func
get_map_type_from_warp0:
	push	{lr}
	ldr	r0, .L438
	bl	GetMapTypeByWarpData
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L439:
	.align	2, 0
.L438:
	.word	gUnknown_020297F0
.Lfe84:
	.size	 get_map_type_from_warp0,.Lfe84-get_map_type_from_warp0
	.align	2, 0
	.globl	is_map_type_1_2_3_5_or_6
	.type	 is_map_type_1_2_3_5_or_6,function
	.thumb_func
is_map_type_1_2_3_5_or_6:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	beq	.L442	@cond_branch
	cmp	r0, #0x1
	beq	.L442	@cond_branch
	cmp	r0, #0x5
	beq	.L442	@cond_branch
	cmp	r0, #0x2
	beq	.L442	@cond_branch
	cmp	r0, #0x6
	bne	.L441	@cond_branch
.L442:
	mov	r0, #0x1
	b	.L444
.L441:
	mov	r0, #0x0
.L444:
	pop	{r1}
	bx	r1
.Lfe85:
	.size	 is_map_type_1_2_3_5_or_6,.Lfe85-is_map_type_1_2_3_5_or_6
	.align	2, 0
	.globl	Overworld_MapTypeAllowsTeleportAndFly
	.type	 Overworld_MapTypeAllowsTeleportAndFly,function
	.thumb_func
Overworld_MapTypeAllowsTeleportAndFly:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	beq	.L447	@cond_branch
	cmp	r0, #0x1
	beq	.L447	@cond_branch
	cmp	r0, #0x6
	beq	.L447	@cond_branch
	cmp	r0, #0x2
	bne	.L446	@cond_branch
.L447:
	mov	r0, #0x1
	b	.L449
.L446:
	mov	r0, #0x0
.L449:
	pop	{r1}
	bx	r1
.Lfe86:
	.size	 Overworld_MapTypeAllowsTeleportAndFly,.Lfe86-Overworld_MapTypeAllowsTeleportAndFly
	.align	2, 0
	.globl	Overworld_MapTypeIsIndoors
	.type	 Overworld_MapTypeIsIndoors,function
	.thumb_func
Overworld_MapTypeIsIndoors:
	push	{lr}
	lsl	r0, r0, #0x18
	mov	r1, #0xf8
	lsl	r1, r1, #0x18
	add	r0, r0, r1
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bls	.L451	@cond_branch
	mov	r0, #0x0
	b	.L453
.L451:
	mov	r0, #0x1
.L453:
	pop	{r1}
	bx	r1
.Lfe87:
	.size	 Overworld_MapTypeIsIndoors,.Lfe87-Overworld_MapTypeIsIndoors
	.align	2, 0
	.globl	unref_sub_8054260
	.type	 unref_sub_8054260,function
	.thumb_func
unref_sub_8054260:
	push	{lr}
	ldr	r1, .L455
	mov	r0, #0x14
	ldrsb	r0, [r1, r0]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldrb	r1, [r1, #0x15]
	lsl	r1, r1, #24
	asr	r1, r1, #24
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	bl	Overworld_GetMapHeaderByGroupAndId
	ldrb	r0, [r0, #0x14]
	pop	{r1}
	bx	r1
.L456:
	.align	2, 0
.L455:
	.word	gSaveBlock1
.Lfe88:
	.size	 unref_sub_8054260,.Lfe88-unref_sub_8054260
	.align	2, 0
	.globl	sav1_map_get_name
	.type	 sav1_map_get_name,function
	.thumb_func
sav1_map_get_name:
	push	{lr}
	ldr	r1, .L458
	mov	r0, #0x4
	ldrsb	r0, [r1, r0]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldrb	r1, [r1, #0x5]
	lsl	r1, r1, #24
	asr	r1, r1, #24
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	bl	Overworld_GetMapHeaderByGroupAndId
	ldrb	r0, [r0, #0x14]
	pop	{r1}
	bx	r1
.L459:
	.align	2, 0
.L458:
	.word	gSaveBlock1
.Lfe89:
	.size	 sav1_map_get_name,.Lfe89-sav1_map_get_name
	.align	2, 0
	.globl	sav1_map_get_battletype
	.type	 sav1_map_get_battletype,function
	.thumb_func
sav1_map_get_battletype:
	push	{lr}
	ldr	r1, .L461
	mov	r0, #0x4
	ldrsb	r0, [r1, r0]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldrb	r1, [r1, #0x5]
	lsl	r1, r1, #24
	asr	r1, r1, #24
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	bl	Overworld_GetMapHeaderByGroupAndId
	ldrb	r0, [r0, #0x1b]
	pop	{r1}
	bx	r1
.L462:
	.align	2, 0
.L461:
	.word	gSaveBlock1
.Lfe90:
	.size	 sav1_map_get_battletype,.Lfe90-sav1_map_get_battletype
	.align	2, 0
	.globl	ResetSafariZoneFlag_
	.type	 ResetSafariZoneFlag_,function
	.thumb_func
ResetSafariZoneFlag_:
	push	{lr}
	bl	ResetSafariZoneFlag
	pop	{r0}
	bx	r0
.Lfe91:
	.size	 ResetSafariZoneFlag_,.Lfe91-ResetSafariZoneFlag_
	.align	2, 0
	.globl	is_c1_link_related_active
	.type	 is_c1_link_related_active,function
	.thumb_func
is_c1_link_related_active:
	push	{lr}
	ldr	r0, .L468
	ldr	r1, [r0]
	ldr	r0, .L468+0x4
	cmp	r1, r0
	beq	.L465	@cond_branch
	mov	r0, #0x0
	b	.L467
.L469:
	.align	2, 0
.L468:
	.word	gMain
	.word	sub_8055354
.L465:
	mov	r0, #0x1
.L467:
	pop	{r1}
	bx	r1
.Lfe92:
	.size	 is_c1_link_related_active,.Lfe92-is_c1_link_related_active
	.align	2, 0
	.globl	c1_overworld_normal
	.type	 c1_overworld_normal,function
	.thumb_func
c1_overworld_normal:
	push	{r4, r5, r6, lr}
	add	sp, sp, #0xfffffffc
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r5, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r4, r1, #0
	bl	sub_8059204
	mov	r6, sp
	mov	r0, sp
	bl	FieldClearPlayerInput
	mov	r0, sp
	add	r1, r5, #0
	add	r2, r4, #0
	bl	FieldGetPlayerInput
	bl	ScriptContext2_IsEnabled
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L471	@cond_branch
	mov	r0, sp
	bl	sub_8068024
	cmp	r0, #0x1
	bne	.L472	@cond_branch
	bl	ScriptContext2_Enable
	bl	HideMapNamePopup
	b	.L471
.L472:
	ldrb	r0, [r6, #0x2]
	add	r1, r5, #0
	add	r2, r4, #0
	bl	player_step
.L471:
	add	sp, sp, #0x4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe93:
	.size	 c1_overworld_normal,.Lfe93-c1_overworld_normal
	.align	2, 0
	.globl	c1_overworld
	.type	 c1_overworld,function
	.thumb_func
c1_overworld:
	push	{lr}
	ldr	r2, .L476
	ldr	r1, [r2, #0x4]
	ldr	r0, .L476+0x4
	cmp	r1, r0
	bne	.L475	@cond_branch
	ldrh	r0, [r2, #0x2e]
	ldrh	r1, [r2, #0x2c]
	bl	c1_overworld_normal
.L475:
	pop	{r0}
	bx	r0
.L477:
	.align	2, 0
.L476:
	.word	gMain
	.word	c2_overworld
.Lfe94:
	.size	 c1_overworld,.Lfe94-c1_overworld
	.align	2, 0
	.globl	OverworldBasic
	.type	 OverworldBasic,function
	.thumb_func
OverworldBasic:
	push	{lr}
	bl	ScriptContext2_RunScript
	bl	RunTasks
	bl	AnimateSprites
	bl	CameraUpdate
	bl	UpdateCameraPanning
	bl	BuildOamBuffer
	bl	UpdatePaletteFade
	bl	sub_8072EDC
	pop	{r0}
	bx	r0
.Lfe95:
	.size	 OverworldBasic,.Lfe95-OverworldBasic
	.align	2, 0
	.globl	CB2_OverworldBasic
	.type	 CB2_OverworldBasic,function
	.thumb_func
CB2_OverworldBasic:
	push	{lr}
	bl	OverworldBasic
	pop	{r0}
	bx	r0
.Lfe96:
	.size	 CB2_OverworldBasic,.Lfe96-CB2_OverworldBasic
	.align	2, 0
	.globl	c2_overworld
	.type	 c2_overworld,function
	.thumb_func
c2_overworld:
	push	{r4, lr}
	ldr	r0, .L483
	ldrb	r0, [r0, #0x7]
	lsr	r0, r0, #0x7
	add	r4, r0, #0
	cmp	r4, #0
	beq	.L481	@cond_branch
	mov	r0, #0x0
	bl	SetVBlankCallback
.L481:
	bl	OverworldBasic
	cmp	r4, #0
	beq	.L482	@cond_branch
	bl	SetFieldVBlankCallback
.L482:
	pop	{r4}
	pop	{r0}
	bx	r0
.L484:
	.align	2, 0
.L483:
	.word	gPaletteFade
.Lfe97:
	.size	 c2_overworld,.Lfe97-c2_overworld
	.align	2, 0
	.globl	set_callback1
	.type	 set_callback1,function
	.thumb_func
set_callback1:
	ldr	r1, .L486
	str	r0, [r1]
	bx	lr
.L487:
	.align	2, 0
.L486:
	.word	gMain
.Lfe98:
	.size	 set_callback1,.Lfe98-set_callback1
	.align	2, 0
	.globl	sub_80543DC
	.type	 sub_80543DC,function
	.thumb_func
sub_80543DC:
	ldr	r1, .L489
	str	r0, [r1]
	bx	lr
.L490:
	.align	2, 0
.L489:
	.word	gUnknown_03000584
.Lfe99:
	.size	 sub_80543DC,.Lfe99-sub_80543DC
	.align	2, 0
	.globl	sub_80543E8
	.type	 sub_80543E8,function
	.thumb_func
sub_80543E8:
	push	{lr}
	ldr	r0, .L494
	ldr	r0, [r0]
	cmp	r0, #0
	beq	.L492	@cond_branch
	bl	_call_via_r0
	b	.L493
.L495:
	.align	2, 0
.L494:
	.word	gFieldCallback
.L492:
	bl	mapldr_default
.L493:
	ldr	r1, .L496
	mov	r0, #0x0
	str	r0, [r1]
	pop	{r0}
	bx	r0
.L497:
	.align	2, 0
.L496:
	.word	gFieldCallback
.Lfe100:
	.size	 sub_80543E8,.Lfe100-sub_80543E8
	.align	2, 0
	.globl	CB2_NewGame
	.type	 CB2_NewGame,function
	.thumb_func
CB2_NewGame:
	push	{lr}
	bl	FieldClearVBlankHBlankCallbacks
	bl	StopMapMusic
	bl	ResetSafariZoneFlag_
	bl	NewGameInitData
	bl	player_avatar_init_params_reset
	bl	PlayTimeCounter_Start
	bl	ScriptContext1_Init
	bl	ScriptContext2_Disable
	ldr	r1, .L499
	ldr	r0, .L499+0x4
	str	r0, [r1]
	ldr	r0, .L499+0x8
	bl	do_load_map_stuff_loop
	bl	SetFieldVBlankCallback
	ldr	r0, .L499+0xc
	bl	set_callback1
	ldr	r0, .L499+0x10
	bl	SetMainCallback2
	pop	{r0}
	bx	r0
.L500:
	.align	2, 0
.L499:
	.word	gFieldCallback
	.word	ExecuteTruckSequence
	.word	gMain+0x43c
	.word	c1_overworld
	.word	c2_overworld
.Lfe101:
	.size	 CB2_NewGame,.Lfe101-CB2_NewGame
	.align	2, 0
	.globl	CB2_WhiteOut
	.type	 CB2_WhiteOut,function
	.thumb_func
CB2_WhiteOut:
	push	{lr}
	add	sp, sp, #0xfffffffc
	ldr	r1, .L503
	ldr	r0, .L503+0x4
	add	r1, r1, r0
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x77
	bls	.L502	@cond_branch
	bl	FieldClearVBlankHBlankCallbacks
	bl	StopMapMusic
	bl	ResetSafariZoneFlag_
	bl	DoWhiteOut
	bl	player_avatar_init_params_reset
	bl	ScriptContext1_Init
	bl	ScriptContext2_Disable
	ldr	r1, .L503+0x8
	ldr	r0, .L503+0xc
	str	r0, [r1]
	mov	r1, sp
	mov	r0, #0x0
	strb	r0, [r1]
	mov	r0, sp
	bl	do_load_map_stuff_loop
	bl	SetFieldVBlankCallback
	ldr	r0, .L503+0x10
	bl	set_callback1
	ldr	r0, .L503+0x14
	bl	SetMainCallback2
.L502:
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.L504:
	.align	2, 0
.L503:
	.word	gMain
	.word	0x43c
	.word	gFieldCallback
	.word	sub_8080B60
	.word	c1_overworld
	.word	c2_overworld
.Lfe102:
	.size	 CB2_WhiteOut,.Lfe102-CB2_WhiteOut
	.align	2, 0
	.globl	CB2_LoadMap
	.type	 CB2_LoadMap,function
	.thumb_func
CB2_LoadMap:
	push	{lr}
	bl	FieldClearVBlankHBlankCallbacks
	bl	ScriptContext1_Init
	bl	ScriptContext2_Disable
	mov	r0, #0x0
	bl	set_callback1
	ldr	r0, .L506
	bl	SetMainCallback2
	ldr	r1, .L506+0x4
	ldr	r0, .L506+0x8
	str	r0, [r1, #0x8]
	pop	{r0}
	bx	r0
.L507:
	.align	2, 0
.L506:
	.word	sub_810CC80
	.word	gMain
	.word	CB2_LoadMap2
.Lfe103:
	.size	 CB2_LoadMap,.Lfe103-CB2_LoadMap
	.align	2, 0
	.globl	CB2_LoadMap2
	.type	 CB2_LoadMap2,function
	.thumb_func
CB2_LoadMap2:
	push	{lr}
	ldr	r0, .L509
	bl	do_load_map_stuff_loop
	bl	SetFieldVBlankCallback
	ldr	r0, .L509+0x4
	bl	set_callback1
	ldr	r0, .L509+0x8
	bl	SetMainCallback2
	pop	{r0}
	bx	r0
.L510:
	.align	2, 0
.L509:
	.word	gMain+0x43c
	.word	c1_overworld
	.word	c2_overworld
.Lfe104:
	.size	 CB2_LoadMap2,.Lfe104-CB2_LoadMap2
	.align	2, 0
	.globl	sub_8054534
	.type	 sub_8054534,function
	.thumb_func
sub_8054534:
	push	{r4, lr}
	ldr	r0, .L514
	ldr	r1, .L514+0x4
	add	r4, r0, r1
	ldrb	r0, [r4]
	cmp	r0, #0
	bne	.L512	@cond_branch
	bl	FieldClearVBlankHBlankCallbacks
	bl	ScriptContext1_Init
	bl	ScriptContext2_Disable
	mov	r0, #0x0
	bl	set_callback1
.L512:
	add	r0, r4, #0
	mov	r1, #0x1
	bl	sub_805493C
	cmp	r0, #0
	beq	.L513	@cond_branch
	bl	SetFieldVBlankCallback
	ldr	r0, .L514+0x8
	bl	set_callback1
	ldr	r0, .L514+0xc
	bl	SetMainCallback2
.L513:
	pop	{r4}
	pop	{r0}
	bx	r0
.L515:
	.align	2, 0
.L514:
	.word	gMain
	.word	0x43c
	.word	c1_overworld
	.word	c2_overworld
.Lfe105:
	.size	 sub_8054534,.Lfe105-sub_8054534
	.align	2, 0
	.globl	sub_8054588
	.type	 sub_8054588,function
	.thumb_func
sub_8054588:
	push	{lr}
	bl	FieldClearVBlankHBlankCallbacks
	ldr	r0, .L517
	ldr	r1, .L517+0x4
	str	r1, [r0]
	ldr	r0, .L517+0x8
	bl	SetMainCallback2
	pop	{r0}
	bx	r0
.L518:
	.align	2, 0
.L517:
	.word	gFieldCallback
	.word	sub_8080AC4
	.word	c2_80567AC
.Lfe106:
	.size	 sub_8054588,.Lfe106-sub_8054588
	.align	2, 0
	.globl	c2_80567AC
	.type	 c2_80567AC,function
	.thumb_func
c2_80567AC:
	push	{lr}
	ldr	r0, .L521
	bl	sub_805483C
	cmp	r0, #0
	beq	.L520	@cond_branch
	bl	SetFieldVBlankCallback
	ldr	r0, .L521+0x4
	bl	set_callback1
	ldr	r0, .L521+0x8
	bl	sub_80543DC
	ldr	r0, .L521+0xc
	bl	SetMainCallback2
.L520:
	pop	{r0}
	bx	r0
.L522:
	.align	2, 0
.L521:
	.word	gMain+0x43c
	.word	sub_8055354
	.word	sub_8055390
	.word	c2_overworld
.Lfe107:
	.size	 c2_80567AC,.Lfe107-c2_80567AC
	.align	2, 0
	.globl	c2_exit_to_overworld_2_switch
	.type	 c2_exit_to_overworld_2_switch,function
	.thumb_func
c2_exit_to_overworld_2_switch:
	push	{lr}
	bl	is_c1_link_related_active
	cmp	r0, #0x1
	bne	.L524	@cond_branch
	ldr	r0, .L526
	bl	SetMainCallback2
	b	.L525
.L527:
	.align	2, 0
.L526:
	.word	c2_exit_to_overworld_2_link
.L524:
	bl	FieldClearVBlankHBlankCallbacks
	ldr	r0, .L528
	bl	SetMainCallback2
.L525:
	pop	{r0}
	bx	r0
.L529:
	.align	2, 0
.L528:
	.word	c2_exit_to_overworld_2_local
.Lfe108:
	.size	 c2_exit_to_overworld_2_switch,.Lfe108-c2_exit_to_overworld_2_switch
	.align	2, 0
	.globl	c2_exit_to_overworld_2_local
	.type	 c2_exit_to_overworld_2_local,function
	.thumb_func
c2_exit_to_overworld_2_local:
	push	{lr}
	ldr	r0, .L532
	bl	sub_8054A4C
	cmp	r0, #0
	beq	.L531	@cond_branch
	bl	SetFieldVBlankCallback
	ldr	r0, .L532+0x4
	bl	SetMainCallback2
.L531:
	pop	{r0}
	bx	r0
.L533:
	.align	2, 0
.L532:
	.word	gMain+0x43c
	.word	c2_overworld
.Lfe109:
	.size	 c2_exit_to_overworld_2_local,.Lfe109-c2_exit_to_overworld_2_local
	.align	2, 0
	.globl	c2_exit_to_overworld_2_link
	.type	 c2_exit_to_overworld_2_link,function
	.thumb_func
c2_exit_to_overworld_2_link:
	push	{lr}
	bl	sub_8055870
	cmp	r0, #0
	bne	.L535	@cond_branch
	ldr	r0, .L536
	bl	sub_8054A9C
	cmp	r0, #0
	beq	.L535	@cond_branch
	ldr	r0, .L536+0x4
	bl	SetMainCallback2
.L535:
	pop	{r0}
	bx	r0
.L537:
	.align	2, 0
.L536:
	.word	gMain+0x43c
	.word	c2_overworld
.Lfe110:
	.size	 c2_exit_to_overworld_2_link,.Lfe110-c2_exit_to_overworld_2_link
	.align	2, 0
	.globl	sub_805465C
	.type	 sub_805465C,function
	.thumb_func
sub_805465C:
	push	{lr}
	bl	FieldClearVBlankHBlankCallbacks
	bl	StopMapMusic
	bl	sub_8054F70
	ldr	r0, .L539
	bl	set_callback1
	ldr	r0, .L539+0x4
	bl	sub_80543DC
	ldr	r1, .L539+0x8
	ldr	r0, .L539+0xc
	str	r0, [r1]
	bl	ScriptContext1_Init
	bl	ScriptContext2_Disable
	bl	c2_exit_to_overworld_2_switch
	pop	{r0}
	bx	r0
.L540:
	.align	2, 0
.L539:
	.word	sub_8055354
	.word	sub_8055390
	.word	gFieldCallback
	.word	sub_8080A3C
.Lfe111:
	.size	 sub_805465C,.Lfe111-sub_805465C
	.align	2, 0
	.globl	sub_805469C
	.type	 sub_805469C,function
	.thumb_func
sub_805469C:
	push	{lr}
	bl	FieldClearVBlankHBlankCallbacks
	ldr	r1, .L542
	ldr	r0, .L542+0x4
	str	r0, [r1]
	bl	c2_exit_to_overworld_2_switch
	pop	{r0}
	bx	r0
.L543:
	.align	2, 0
.L542:
	.word	gFieldCallback
	.word	atk17_seteffectuser
.Lfe112:
	.size	 sub_805469C,.Lfe112-sub_805469C
	.align	2, 0
	.globl	sub_80546B8
	.type	 sub_80546B8,function
	.thumb_func
sub_80546B8:
	push	{lr}
	bl	FieldClearVBlankHBlankCallbacks
	ldr	r1, .L545
	ldr	r0, .L545+0x4
	str	r0, [r1]
	bl	c2_exit_to_overworld_2_switch
	pop	{r0}
	bx	r0
.L546:
	.align	2, 0
.L545:
	.word	gFieldCallback
	.word	sub_80809B0
.Lfe113:
	.size	 sub_80546B8,.Lfe113-sub_80546B8
	.align	2, 0
	.globl	c2_exit_to_overworld_1_continue_scripts_restart_music
	.type	 c2_exit_to_overworld_1_continue_scripts_restart_music,function
	.thumb_func
c2_exit_to_overworld_1_continue_scripts_restart_music:
	push	{lr}
	bl	FieldClearVBlankHBlankCallbacks
	ldr	r1, .L548
	ldr	r0, .L548+0x4
	str	r0, [r1]
	bl	c2_exit_to_overworld_2_switch
	pop	{r0}
	bx	r0
.L549:
	.align	2, 0
.L548:
	.word	gFieldCallback
	.word	sub_8080990
.Lfe114:
	.size	 c2_exit_to_overworld_1_continue_scripts_restart_music,.Lfe114-c2_exit_to_overworld_1_continue_scripts_restart_music
	.align	2, 0
	.globl	sub_80546F0
	.type	 sub_80546F0,function
	.thumb_func
sub_80546F0:
	push	{lr}
	bl	FieldClearVBlankHBlankCallbacks
	ldr	r1, .L551
	ldr	r0, .L551+0x4
	str	r0, [r1]
	bl	c2_exit_to_overworld_2_switch
	pop	{r0}
	bx	r0
.L552:
	.align	2, 0
.L551:
	.word	gFieldCallback
	.word	sub_8080B60
.Lfe115:
	.size	 sub_80546F0,.Lfe115-sub_80546F0
	.align	2, 0
	.globl	sub_805470C
	.type	 sub_805470C,function
	.thumb_func
sub_805470C:
	push	{lr}
	ldr	r0, .L555
	ldrb	r0, [r0, #0x1a]
	cmp	r0, #0x1
	bne	.L554	@cond_branch
	bl	sub_80BBB24
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L554	@cond_branch
	bl	ShowMapNamePopup
.L554:
	bl	sub_8080B60
	pop	{r0}
	bx	r0
.L556:
	.align	2, 0
.L555:
	.word	gMapHeader
.Lfe116:
	.size	 sub_805470C,.Lfe116-sub_805470C
	.align	2, 0
	.globl	CB2_ContinueSavedGame
	.type	 CB2_ContinueSavedGame,function
	.thumb_func
CB2_ContinueSavedGame:
	push	{lr}
	bl	FieldClearVBlankHBlankCallbacks
	bl	StopMapMusic
	bl	ResetSafariZoneFlag_
	bl	LoadSaveblockMapHeader
	bl	LoadSaveblockMapObjScripts
	bl	UnfreezeMapObjects
	bl	DoTimeBasedEvents
	bl	sub_805308C
	bl	sub_8055FC0
	bl	PlayTimeCounter_Start
	bl	ScriptContext1_Init
	bl	ScriptContext2_Disable
	bl	GetSecretBase2Field_9
	cmp	r0, #0x1
	bne	.L558	@cond_branch
	bl	ClearSecretBase2Field_9
	bl	sub_8053778
	bl	warp_in
	ldr	r0, .L560
	bl	SetMainCallback2
	b	.L559
.L561:
	.align	2, 0
.L560:
	.word	CB2_LoadMap
.L558:
	ldr	r0, .L562
	ldr	r1, .L562+0x4
	str	r1, [r0]
	ldr	r0, .L562+0x8
	bl	set_callback1
	bl	c2_exit_to_overworld_2_switch
.L559:
	pop	{r0}
	bx	r0
.L563:
	.align	2, 0
.L562:
	.word	gFieldCallback
	.word	sub_805470C
	.word	c1_overworld
.Lfe117:
	.size	 CB2_ContinueSavedGame,.Lfe117-CB2_ContinueSavedGame
	.align	2, 0
	.globl	FieldClearVBlankHBlankCallbacks
	.type	 FieldClearVBlankHBlankCallbacks,function
	.thumb_func
FieldClearVBlankHBlankCallbacks:
	push	{r4, lr}
	ldr	r4, .L565
	ldrh	r3, [r4]
	mov	r0, #0x0
	strh	r0, [r4]
	ldr	r2, .L565+0x4
	ldrh	r1, [r2]
	ldr	r0, .L565+0x8
	and	r0, r0, r1
	strh	r0, [r2]
	ldrh	r0, [r2]
	mov	r1, #0x1
	orr	r0, r0, r1
	strh	r0, [r2]
	strh	r3, [r4]
	mov	r0, #0x0
	bl	SetVBlankCallback
	mov	r0, #0x0
	bl	SetHBlankCallback
	pop	{r4}
	pop	{r0}
	bx	r0
.L566:
	.align	2, 0
.L565:
	.word	0x4000208
	.word	0x4000200
	.word	0xfffd
.Lfe118:
	.size	 FieldClearVBlankHBlankCallbacks,.Lfe118-FieldClearVBlankHBlankCallbacks
	.align	2, 0
	.globl	SetFieldVBlankCallback
	.type	 SetFieldVBlankCallback,function
	.thumb_func
SetFieldVBlankCallback:
	push	{lr}
	ldr	r0, .L568
	bl	SetVBlankCallback
	pop	{r0}
	bx	r0
.L569:
	.align	2, 0
.L568:
	.word	VBlankCB_Field
.Lfe119:
	.size	 SetFieldVBlankCallback,.Lfe119-SetFieldVBlankCallback
	.align	2, 0
	.globl	VBlankCB_Field
	.type	 VBlankCB_Field,function
	.thumb_func
VBlankCB_Field:
	push	{lr}
	bl	LoadOam
	bl	ProcessSpriteCopyRequests
	bl	sub_8089668
	bl	sub_8057A58
	bl	TransferPlttBuffer
	bl	sub_8072E74
	pop	{r0}
	bx	r0
.Lfe120:
	.size	 VBlankCB_Field,.Lfe120-VBlankCB_Field
	.align	2, 0
	.globl	sub_8054814
	.type	 sub_8054814,function
	.thumb_func
sub_8054814:
	push	{lr}
	bl	Overworld_GetFlashLevel
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0
	beq	.L572	@cond_branch
	bl	sub_80815E0
	ldr	r2, .L573
	ldr	r0, [r2]
	ldr	r1, [r2, #0x4]
	ldr	r2, [r2, #0x8]
	bl	sub_80895F8
.L572:
	pop	{r0}
	bx	r0
.L574:
	.align	2, 0
.L573:
	.word	gUnknown_08216694
.Lfe121:
	.size	 sub_8054814,.Lfe121-sub_8054814
	.align	2, 0
	.globl	sub_805483C
	.type	 sub_805483C,function
	.thumb_func
sub_805483C:
	push	{r4, lr}
	add	r4, r0, #0
	ldrb	r0, [r4]
	cmp	r0, #0xd
	bhi	.L576	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L594
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L595:
	.align	2, 0
.L594:
	.word	.L591
	.align	2, 0
	.align	2, 0
.L591:
	.word	.L577
	.word	.L578
	.word	.L579
	.word	.L580
	.word	.L581
	.word	.L582
	.word	.L583
	.word	.L584
	.word	.L585
	.word	.L586
	.word	.L587
	.word	.L589
	.word	.L588
	.word	.L590
.L577:
	bl	FieldClearVBlankHBlankCallbacks
	bl	ScriptContext1_Init
	bl	ScriptContext2_Disable
	bl	sub_8054F70
	bl	sub_8054BA8
	b	.L589
.L578:
	mov	r0, #0x1
	bl	sub_8053994
	b	.L589
.L579:
	mov	r0, #0x1
	bl	sub_8054D4C
	b	.L589
.L580:
	bl	sub_8054E98
	bl	sub_8054D90
	bl	sub_8054EC8
	bl	sub_8054E60
	b	.L589
.L581:
	bl	sub_8054814
	bl	sub_8054C54
	ldr	r0, .L596
	bl	SetUpWindowConfig
	ldr	r0, .L596+0x4
	bl	InitMenuWindow
	b	.L589
.L597:
	.align	2, 0
.L596:
	.word	gWindowConfig_81E6C3C
	.word	gWindowConfig_81E6CE4
.L582:
	bl	move_tilemap_camera_to_upper_left_corner
	b	.L589
.L583:
	ldr	r0, .L598
	ldr	r0, [r0]
	bl	sub_8056D28
	b	.L589
.L599:
	.align	2, 0
.L598:
	.word	gMapHeader
.L584:
	ldr	r0, .L600
	ldr	r0, [r0]
	bl	sub_8056D38
	b	.L589
.L601:
	.align	2, 0
.L600:
	.word	gMapHeader
.L585:
	ldr	r0, .L602
	ldr	r0, [r0]
	bl	apply_map_tileset1_tileset2_palette
	b	.L589
.L603:
	.align	2, 0
.L602:
	.word	gMapHeader
.L586:
	bl	DrawWholeMapView
	b	.L589
.L587:
	bl	cur_mapheader_run_tileset_funcs_after_some_cpuset
	b	.L589
.L588:
	bl	sub_80543E8
.L589:
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	strb	r0, [r4]
	b	.L576
.L590:
	mov	r0, #0x1
	b	.L593
.L576:
	mov	r0, #0x0
.L593:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe122:
	.size	 sub_805483C,.Lfe122-sub_805483C
	.align	2, 0
	.globl	sub_805493C
	.type	 sub_805493C,function
	.thumb_func
sub_805493C:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	ldrb	r0, [r4]
	cmp	r0, #0xd
	bls	.LCB4948
	b	.L605	@long jump
.LCB4948:
	lsl	r0, r0, #0x2
	ldr	r1, .L625
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L626:
	.align	2, 0
.L625:
	.word	.L621
	.align	2, 0
	.align	2, 0
.L621:
	.word	.L606
	.word	.L607
	.word	.L608
	.word	.L609
	.word	.L610
	.word	.L611
	.word	.L612
	.word	.L613
	.word	.L614
	.word	.L615
	.word	.L616
	.word	.L617
	.word	.L619
	.word	.L620
.L606:
	bl	FieldClearVBlankHBlankCallbacks
	add	r0, r5, #0
	bl	sub_8053994
	b	.L624
.L607:
	bl	sub_8054BA8
	b	.L624
.L608:
	add	r0, r5, #0
	bl	sub_8054D4C
	b	.L624
.L609:
	bl	mli4_mapscripts_and_other
	bl	sub_8054E34
	b	.L624
.L610:
	bl	sub_8054814
	bl	sub_8054C54
	ldr	r0, .L627
	bl	SetUpWindowConfig
	ldr	r0, .L627+0x4
	bl	InitMenuWindow
	b	.L624
.L628:
	.align	2, 0
.L627:
	.word	gWindowConfig_81E6C3C
	.word	gWindowConfig_81E6CE4
.L611:
	bl	move_tilemap_camera_to_upper_left_corner
	b	.L624
.L612:
	ldr	r0, .L629
	ldr	r0, [r0]
	bl	sub_8056D28
	b	.L624
.L630:
	.align	2, 0
.L629:
	.word	gMapHeader
.L613:
	ldr	r0, .L631
	ldr	r0, [r0]
	bl	sub_8056D38
	b	.L624
.L632:
	.align	2, 0
.L631:
	.word	gMapHeader
.L614:
	ldr	r0, .L633
	ldr	r0, [r0]
	bl	apply_map_tileset1_tileset2_palette
	b	.L624
.L634:
	.align	2, 0
.L633:
	.word	gMapHeader
.L615:
	bl	DrawWholeMapView
	b	.L624
.L616:
	bl	cur_mapheader_run_tileset_funcs_after_some_cpuset
	b	.L624
.L617:
	ldr	r0, .L635
	ldrb	r0, [r0, #0x1a]
	cmp	r0, #0x1
	bne	.L624	@cond_branch
	bl	sub_80BBB24
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L624	@cond_branch
	bl	ShowMapNamePopup
	b	.L624
.L636:
	.align	2, 0
.L635:
	.word	gMapHeader
.L619:
	bl	sub_80543E8
.L624:
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	strb	r0, [r4]
	b	.L605
.L620:
	mov	r0, #0x1
	b	.L623
.L605:
	mov	r0, #0x0
.L623:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe123:
	.size	 sub_805493C,.Lfe123-sub_805493C
	.align	2, 0
	.globl	sub_8054A4C
	.type	 sub_8054A4C,function
	.thumb_func
sub_8054A4C:
	push	{r4, lr}
	add	r4, r0, #0
	ldrb	r0, [r4]
	cmp	r0, #0x1
	beq	.L640	@cond_branch
	cmp	r0, #0x1
	bgt	.L645	@cond_branch
	cmp	r0, #0
	beq	.L639	@cond_branch
	b	.L638
.L645:
	cmp	r0, #0x2
	beq	.L641	@cond_branch
	cmp	r0, #0x3
	beq	.L642	@cond_branch
	b	.L638
.L639:
	bl	sub_8054BA8
	mov	r0, #0x0
	bl	sub_8054D4C
	bl	sub_8054E20
	bl	sub_8054E34
	b	.L647
.L640:
	bl	sub_8054C2C
	b	.L647
.L641:
	bl	sub_80543E8
.L647:
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	strb	r0, [r4]
	b	.L638
.L642:
	mov	r0, #0x1
	b	.L646
.L638:
	mov	r0, #0x0
.L646:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe124:
	.size	 sub_8054A4C,.Lfe124-sub_8054A4C
	.align	2, 0
	.globl	sub_8054A9C
	.type	 sub_8054A9C,function
	.thumb_func
sub_8054A9C:
	push	{r4, lr}
	add	r4, r0, #0
	ldrb	r0, [r4]
	cmp	r0, #0xd
	bhi	.L649	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L667
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L668:
	.align	2, 0
.L667:
	.word	.L664
	.align	2, 0
	.align	2, 0
.L664:
	.word	.L650
	.word	.L651
	.word	.L652
	.word	.L653
	.word	.L654
	.word	.L655
	.word	.L656
	.word	.L657
	.word	.L658
	.word	.L659
	.word	.L662
	.word	.L662
	.word	.L660
	.word	.L663
.L650:
	bl	FieldClearVBlankHBlankCallbacks
	bl	sub_8054BA8
	b	.L662
.L651:
	mov	r0, #0x1
	bl	sub_8054D4C
	b	.L662
.L652:
	bl	sub_8054F48
	bl	sub_8054E20
	bl	sub_8054E7C
	b	.L662
.L653:
	bl	sub_8054814
	bl	sub_8054C54
	ldr	r0, .L669
	bl	SetUpWindowConfig
	ldr	r0, .L669+0x4
	bl	InitMenuWindow
	b	.L662
.L670:
	.align	2, 0
.L669:
	.word	gWindowConfig_81E6C3C
	.word	gWindowConfig_81E6CE4
.L654:
	bl	move_tilemap_camera_to_upper_left_corner
	b	.L662
.L655:
	ldr	r0, .L671
	ldr	r0, [r0]
	bl	sub_8056D28
	b	.L662
.L672:
	.align	2, 0
.L671:
	.word	gMapHeader
.L656:
	ldr	r0, .L673
	ldr	r0, [r0]
	bl	sub_8056D38
	b	.L662
.L674:
	.align	2, 0
.L673:
	.word	gMapHeader
.L657:
	ldr	r0, .L675
	ldr	r0, [r0]
	bl	apply_map_tileset1_tileset2_palette
	b	.L662
.L676:
	.align	2, 0
.L675:
	.word	gMapHeader
.L658:
	bl	DrawWholeMapView
	b	.L662
.L659:
	bl	cur_mapheader_run_tileset_funcs_after_some_cpuset
	b	.L662
.L660:
	bl	sub_80543E8
.L662:
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	strb	r0, [r4]
	b	.L649
.L663:
	bl	SetFieldVBlankCallback
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	strb	r0, [r4]
	mov	r0, #0x1
	b	.L666
.L649:
	mov	r0, #0x0
.L666:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe125:
	.size	 sub_8054A9C,.Lfe125-sub_8054A9C
	.align	2, 0
	.globl	do_load_map_stuff_loop
	.type	 do_load_map_stuff_loop,function
	.thumb_func
do_load_map_stuff_loop:
	push	{r4, lr}
	add	r4, r0, #0
.L678:
	add	r0, r4, #0
	mov	r1, #0x0
	bl	sub_805493C
	cmp	r0, #0
	beq	.L678	@cond_branch
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe126:
	.size	 do_load_map_stuff_loop,.Lfe126-do_load_map_stuff_loop
	.align	2, 0
	.globl	sub_8054BA8
	.type	 sub_8054BA8,function
	.thumb_func
sub_8054BA8:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #0xfffffffc
	mov	r0, #0x80
	lsl	r0, r0, #0x13
	mov	r4, #0x0
	strh	r4, [r0]
	bl	remove_some_task
	ldr	r2, .L688
	mov	r0, sp
	strh	r4, [r0]
	ldr	r1, .L688+0x4
	str	r0, [r1]
	str	r2, [r1, #0x4]
	ldr	r0, .L688+0x8
	str	r0, [r1, #0x8]
	ldr	r0, [r1, #0x8]
	mov	r2, #0xc0
	lsl	r2, r2, #0x13
	mov	r3, #0xc0
	lsl	r3, r3, #0x9
	mov	r4, sp
	mov	r6, #0x0
	mov	r5, #0x80
	lsl	r5, r5, #0x5
	ldr	r7, .L688+0xc
	mov	r0, #0x81
	lsl	r0, r0, #0x18
	mov	ip, r0
.L685:
	strh	r6, [r4]
	mov	r0, sp
	str	r0, [r1]
	str	r2, [r1, #0x4]
	str	r7, [r1, #0x8]
	ldr	r0, [r1, #0x8]
	add	r2, r2, r5
	sub	r3, r3, r5
	cmp	r3, r5
	bhi	.L685	@cond_branch
	strh	r6, [r4]
	mov	r0, sp
	str	r0, [r1]
	str	r2, [r1, #0x4]
	lsr	r0, r3, #0x1
	mov	r2, ip
	orr	r0, r0, r2
	str	r0, [r1, #0x8]
	ldr	r0, [r1, #0x8]
	mov	r0, #0x0
	mov	r1, #0x80
	bl	ResetOamRange
	bl	LoadOam
	add	sp, sp, #0x4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L689:
	.align	2, 0
.L688:
	.word	0x5000002
	.word	0x40000d4
	.word	0x810001ff
	.word	0x81000800
.Lfe127:
	.size	 sub_8054BA8,.Lfe127-sub_8054BA8
	.align	2, 0
	.globl	sub_8054C2C
	.type	 sub_8054C2C,function
	.thumb_func
sub_8054C2C:
	push	{lr}
	bl	sub_8054814
	bl	sub_8054C54
	ldr	r0, .L691
	bl	SetUpWindowConfig
	ldr	r0, .L691+0x4
	bl	InitMenuWindow
	bl	mapdata_load_assets_to_gpu_and_full_redraw
	pop	{r0}
	bx	r0
.L692:
	.align	2, 0
.L691:
	.word	gWindowConfig_81E6C3C
	.word	gWindowConfig_81E6CE4
.Lfe128:
	.size	 sub_8054C2C,.Lfe128-sub_8054C2C
	.align	2, 0
	.globl	sub_8054C54
	.type	 sub_8054C54,function
	.thumb_func
sub_8054C54:
	push	{r4, r5, r6, lr}
	ldr	r0, .L694
	mov	r3, #0x0
	strh	r3, [r0]
	ldr	r1, .L694+0x4
	ldr	r2, .L694+0x8
	add	r0, r2, #0
	strh	r0, [r1]
	add	r1, r1, #0x2
	ldr	r4, .L694+0xc
	add	r0, r4, #0
	strh	r0, [r1]
	ldr	r0, .L694+0x10
	mov	r1, #0xff
	strh	r1, [r0]
	add	r0, r0, #0x4
	strh	r1, [r0]
	sub	r0, r0, #0x2
	ldr	r6, .L694+0x14
	add	r1, r6, #0
	strh	r1, [r0]
	add	r0, r0, #0x4
	strh	r1, [r0]
	ldr	r4, .L694+0x18
	ldr	r1, .L694+0x1c
	ldrh	r0, [r1, #0x2]
	ldrh	r2, [r1, #0x4]
	orr	r0, r0, r2
	ldrh	r1, [r1, #0x6]
	orr	r0, r0, r1
	mov	r2, #0x82
	lsl	r2, r2, #0x5
	add	r1, r2, #0
	orr	r0, r0, r1
	strh	r0, [r4]
	ldr	r1, .L694+0x20
	ldr	r4, .L694+0x24
	add	r0, r4, #0
	strh	r0, [r1]
	ldr	r5, .L694+0x28
	ldr	r0, [r5]
	strh	r3, [r0]
	ldr	r4, .L694+0x2c
	ldr	r0, [r4]
	strh	r3, [r0]
	ldr	r2, .L694+0x30
	ldr	r0, [r2]
	strh	r3, [r0]
	ldr	r0, [r5, #0x4]
	strh	r3, [r0]
	ldr	r0, [r4, #0x4]
	strh	r3, [r0]
	ldr	r1, [r2, #0x4]
	ldr	r6, .L694+0x34
	add	r0, r6, #0
	strh	r0, [r1]
	ldr	r0, [r5, #0x8]
	strh	r3, [r0]
	ldr	r0, [r4, #0x8]
	strh	r3, [r0]
	ldr	r1, [r2, #0x8]
	sub	r6, r6, #0xff
	add	r0, r6, #0
	strh	r0, [r1]
	ldr	r0, [r5, #0xc]
	strh	r3, [r0]
	ldr	r0, [r4, #0xc]
	strh	r3, [r0]
	ldr	r1, [r2, #0xc]
	ldr	r2, .L694+0x38
	add	r0, r2, #0
	strh	r0, [r1]
	mov	r3, #0x80
	lsl	r3, r3, #0x13
	ldr	r2, .L694+0x3c
	ldrh	r0, [r2, #0x2]
	ldr	r4, .L694+0x40
	add	r1, r4, #0
	orr	r0, r0, r1
	ldrh	r1, [r2, #0x4]
	orr	r0, r0, r1
	ldrh	r1, [r2]
	orr	r0, r0, r1
	ldrh	r1, [r2, #0x6]
	orr	r0, r0, r1
	strh	r0, [r3]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L695:
	.align	2, 0
.L694:
	.word	0x400004c
	.word	0x4000048
	.word	0x1f1f
	.word	0x101
	.word	0x4000040
	.word	0xffff
	.word	0x4000050
	.word	gUnknown_081E29E0
	.word	0x4000052
	.word	0x70d
	.word	gBGHOffsetRegs
	.word	gBGVOffsetRegs
	.word	gBGControlRegs
	.word	0x1d41
	.word	0x1e43
	.word	gUnknown_081E29D8
	.word	0x7060
.Lfe129:
	.size	 sub_8054C54,.Lfe129-sub_8054C54
	.align	2, 0
	.globl	sub_8054D4C
	.type	 sub_8054D4C,function
	.thumb_func
sub_8054D4C:
	push	{r4, lr}
	add	r4, r0, #0
	bl	ResetTasks
	bl	ResetSpriteData
	bl	ResetPaletteFade
	bl	dp12_8087EA4
	bl	ResetCameraUpdateInfo
	bl	InstallCameraPanAheadCallback
	mov	r0, #0x0
	bl	sub_805C7C4
	bl	FieldEffectActiveListClear
	bl	InitFieldMessageBox
	bl	sub_807C828
	bl	sub_8080750
	cmp	r4, #0
	bne	.L697	@cond_branch
	bl	SetUpFieldTasks
.L697:
	bl	mapheader_run_script_with_tag_x5
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe130:
	.size	 sub_8054D4C,.Lfe130-sub_8054D4C
	.align	2, 0
	.globl	sub_8054D90
	.type	 sub_8054D90,function
	.thumb_func
sub_8054D90:
	push	{lr}
	ldr	r0, .L699
	mov	r1, #0x0
	strh	r1, [r0]
	ldr	r0, .L699+0x4
	strh	r1, [r0]
	bl	sub_805AA98
	mov	r0, #0x0
	mov	r1, #0x0
	bl	sub_805B55C
	bl	mapheader_run_first_tag4_script_list_match
	pop	{r0}
	bx	r0
.L700:
	.align	2, 0
.L699:
	.word	gUnknown_0300489C
	.word	gUnknown_03004898
.Lfe131:
	.size	 sub_8054D90,.Lfe131-sub_8054D90
	.align	2, 0
	.globl	mli4_mapscripts_and_other
	.type	 mli4_mapscripts_and_other,function
	.thumb_func
mli4_mapscripts_and_other:
	push	{r4, r5, lr}
	add	sp, sp, #0xfffffffc
	ldr	r0, .L702
	mov	r1, #0x0
	strh	r1, [r0]
	ldr	r0, .L702+0x4
	strh	r1, [r0]
	bl	sub_805AA98
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	sav1_camera_get_focus_coords
	bl	sub_8053AA8
	add	r5, r0, #0
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	ldrb	r2, [r5, #0x1]
	ldr	r3, .L702+0x8
	ldrb	r3, [r3, #0x8]
	bl	InitPlayerAvatar
	ldrb	r0, [r5]
	bl	SetPlayerAvatarTransitionFlags
	bl	player_avatar_init_params_reset
	mov	r0, #0x0
	mov	r1, #0x0
	bl	sub_805B55C
	bl	ResetBerryTreeSparkleFlags
	bl	mapheader_run_first_tag4_script_list_match
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L703:
	.align	2, 0
.L702:
	.word	gUnknown_0300489C
	.word	gUnknown_03004898
	.word	gSaveBlock2
.Lfe132:
	.size	 mli4_mapscripts_and_other,.Lfe132-mli4_mapscripts_and_other
	.align	2, 0
	.globl	sub_8054E20
	.type	 sub_8054E20,function
	.thumb_func
sub_8054E20:
	push	{lr}
	mov	r0, #0x0
	mov	r1, #0x0
	bl	sub_805B710
	bl	RotatingGate_InitPuzzleAndGraphics
	pop	{r0}
	bx	r0
.Lfe133:
	.size	 sub_8054E20,.Lfe133-sub_8054E20
	.align	2, 0
	.globl	sub_8054E34
	.type	 sub_8054E34,function
	.thumb_func
sub_8054E34:
	push	{lr}
	ldr	r2, .L706
	ldr	r3, .L706+0x4
	ldrb	r1, [r3, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r1, [r0, #0x1]
	mov	r2, #0x80
	orr	r1, r1, r2
	strb	r1, [r0, #0x1]
	ldrb	r0, [r3, #0x4]
	bl	InitCameraUpdateCallback
	pop	{r0}
	bx	r0
.L707:
	.align	2, 0
.L706:
	.word	gMapObjects
	.word	gPlayerAvatar
.Lfe134:
	.size	 sub_8054E34,.Lfe134-sub_8054E34
	.align	2, 0
	.globl	sub_8054E60
	.type	 sub_8054E60,function
	.thumb_func
sub_8054E60:
	push	{lr}
	ldr	r0, .L709
	ldrb	r0, [r0]
	bl	sub_8055AE8
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	InitCameraUpdateCallback
	pop	{r0}
	bx	r0
.L710:
	.align	2, 0
.L709:
	.word	gUnknown_03004860
.Lfe135:
	.size	 sub_8054E60,.Lfe135-sub_8054E60
	.align	2, 0
	.globl	sub_8054E7C
	.type	 sub_8054E7C,function
	.thumb_func
sub_8054E7C:
	push	{lr}
	ldr	r0, .L712
	ldrb	r0, [r0]
	bl	sub_8055AE8
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	InitCameraUpdateCallback
	pop	{r0}
	bx	r0
.L713:
	.align	2, 0
.L712:
	.word	gUnknown_03004860
.Lfe136:
	.size	 sub_8054E7C,.Lfe136-sub_8054E7C
	.align	2, 0
	.globl	sub_8054E98
	.type	 sub_8054E98,function
	.thumb_func
sub_8054E98:
	push	{r4, lr}
	add	sp, sp, #0xfffffffc
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	sav1_camera_get_focus_coords
	mov	r2, sp
	ldr	r0, .L715
	ldrb	r1, [r0]
	ldrh	r0, [r2]
	add	r0, r0, r1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldrh	r1, [r4]
	bl	sub_8056C50
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L716:
	.align	2, 0
.L715:
	.word	gUnknown_03004860
.Lfe137:
	.size	 sub_8054E98,.Lfe137-sub_8054E98
	.align	2, 0
	.globl	sub_8054EC8
	.type	 sub_8054EC8,function
	.thumb_func
sub_8054EC8:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #0xfffffffc
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	sav1_camera_get_focus_coords
	mov	r3, sp
	mov	r2, sp
	ldr	r0, .L723
	ldrb	r1, [r0]
	ldrh	r0, [r2]
	sub	r0, r0, r1
	strh	r0, [r3]
	mov	r5, #0x0
	ldr	r0, .L723+0x4
	add	r7, r4, #0
	ldrb	r0, [r0]
	cmp	r5, r0
	bcs	.L719	@cond_branch
	ldr	r6, .L723+0x8
.L721:
	lsl	r4, r5, #0x18
	lsr	r4, r4, #0x18
	mov	r0, sp
	ldrh	r1, [r0]
	add	r1, r5, r1
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	mov	r0, #0x0
	ldrsh	r2, [r7, r0]
	lsl	r0, r5, #0x3
	sub	r0, r0, r5
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	ldrb	r3, [r0, #0x13]
	add	r0, r4, #0
	bl	SpawnLinkPlayerMapObject
	add	r0, r4, #0
	bl	CreateLinkPlayerSprite
	add	r0, r5, #0x1
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	ldr	r0, .L723+0x4
	ldrb	r0, [r0]
	cmp	r5, r0
	bcc	.L721	@cond_branch
.L719:
	ldr	r0, .L723+0xc
	bl	sub_8055340
	add	sp, sp, #0x4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L724:
	.align	2, 0
.L723:
	.word	gUnknown_03004860
	.word	gFieldLinkPlayerCount
	.word	gLinkPlayers
	.word	word_3002910
.Lfe138:
	.size	 sub_8054EC8,.Lfe138-sub_8054EC8
	.align	2, 0
	.globl	sub_8054F48
	.type	 sub_8054F48,function
	.thumb_func
sub_8054F48:
	push	{r4, lr}
	mov	r4, #0x0
	b	.L731
.L729:
	lsl	r0, r4, #0x18
	lsr	r0, r0, #0x18
	bl	CreateLinkPlayerSprite
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
.L731:
	ldr	r0, .L732
	ldrb	r0, [r0]
	cmp	r4, r0
	bcc	.L729	@cond_branch
	pop	{r4}
	pop	{r0}
	bx	r0
.L733:
	.align	2, 0
.L732:
	.word	gFieldLinkPlayerCount
.Lfe139:
	.size	 sub_8054F48,.Lfe139-sub_8054F48
	.align	2, 0
	.globl	sub_8054F70
	.type	 sub_8054F70,function
	.thumb_func
sub_8054F70:
	push	{lr}
	ldr	r1, .L740
	mov	r2, #0x80
	add	r0, r1, #0x3
.L738:
	strb	r2, [r0]
	sub	r0, r0, #0x1
	cmp	r0, r1
	bge	.L738	@cond_branch
	pop	{r0}
	bx	r0
.L741:
	.align	2, 0
.L740:
	.word	gUnknown_03000580
.Lfe140:
	.size	 sub_8054F70,.Lfe140-sub_8054F70
	.align	2, 0
	.globl	sub_8054F88
	.type	 sub_8054F88,function
	.thumb_func
sub_8054F88:
	push	{r4, lr}
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	ldr	r0, .L750
	ldrb	r2, [r0]
	mov	r1, #0x0
	cmp	r1, r2
	bge	.L744	@cond_branch
	ldr	r4, .L750+0x4
.L746:
	add	r0, r1, r4
	ldrb	r0, [r0]
	cmp	r0, r3
	beq	.L745	@cond_branch
	mov	r0, #0x0
	b	.L749
.L751:
	.align	2, 0
.L750:
	.word	gFieldLinkPlayerCount
	.word	gUnknown_03000580
.L745:
	add	r1, r1, #0x1
	cmp	r1, r2
	blt	.L746	@cond_branch
.L744:
	mov	r0, #0x1
.L749:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe141:
	.size	 sub_8054F88,.Lfe141-sub_8054F88
	.align	2, 0
	.globl	sub_8054FC0
	.type	 sub_8054FC0,function
	.thumb_func
sub_8054FC0:
	push	{r4, lr}
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	ldr	r0, .L760
	ldrb	r2, [r0]
	mov	r1, #0x0
	cmp	r1, r2
	bge	.L754	@cond_branch
	ldr	r4, .L760+0x4
.L756:
	add	r0, r1, r4
	ldrb	r0, [r0]
	cmp	r0, r3
	bne	.L755	@cond_branch
	mov	r0, #0x1
	b	.L759
.L761:
	.align	2, 0
.L760:
	.word	gFieldLinkPlayerCount
	.word	gUnknown_03000580
.L755:
	add	r1, r1, #0x1
	cmp	r1, r2
	blt	.L756	@cond_branch
.L754:
	mov	r0, #0x0
.L759:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe142:
	.size	 sub_8054FC0,.Lfe142-sub_8054FC0
	.align	2, 0
	.globl	sub_8054FF8
	.type	 sub_8054FF8,function
	.thumb_func
sub_8054FF8:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	r7, r0, #0
	add	r6, r2, #0
	mov	r9, r3
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r8, r1
	ldr	r0, .L796
	add	r5, r7, r0
	ldrb	r0, [r5]
	cmp	r0, #0x80
	beq	.LCB6065
	b	.L763	@long jump
.LCB6065:
	add	r0, r6, #0
	bl	sub_8055648
	add	r4, r0, #0
	cmp	r4, #0
	beq	.L764	@cond_branch
	bl	sub_8055758
	mov	r1, r9
	strh	r0, [r1]
	mov	r0, #0x81
	strb	r0, [r5]
	ldrb	r0, [r6, #0x1]
	cmp	r0, #0
	bne	.LCB6083
	b	.L762	@long jump
.LCB6083:
	ldr	r0, .L796+0x4
	bl	sub_80543DC
	add	r0, r4, #0
	bl	sub_8055808
	b	.L762
.L797:
	.align	2, 0
.L796:
	.word	gUnknown_03000580
	.word	sub_80553E4
.L764:
	mov	r0, #0x83
	bl	sub_8054FC0
	cmp	r0, #0x1
	bne	.L766	@cond_branch
	mov	r0, #0x81
	strb	r0, [r5]
	ldrb	r0, [r6, #0x1]
	cmp	r0, #0
	bne	.LCB6112
	b	.L762	@long jump
.LCB6112:
	ldr	r0, .L798
	bl	sub_80543DC
	bl	sub_805585C
	b	.L762
.L799:
	.align	2, 0
.L798:
	.word	sub_80553E4
.L766:
	mov	r0, r8
	sub	r0, r0, #0x12
	cmp	r0, #0xa
	bls	.LCB6131
	b	.L763	@long jump
.LCB6131:
	lsl	r0, r0, #0x2
	ldr	r1, .L800
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L801:
	.align	2, 0
.L800:
	.word	.L784
	.align	2, 0
	.align	2, 0
.L784:
	.word	.L772
	.word	.L763
	.word	.L763
	.word	.L763
	.word	.L763
	.word	.L763
	.word	.L769
	.word	.L775
	.word	.L763
	.word	.L778
	.word	.L781
.L769:
	add	r0, r6, #0
	bl	sub_8055630
	cmp	r0, #0
	beq	.L763	@cond_branch
	ldr	r0, .L802
	add	r0, r7, r0
	mov	r1, #0x81
	strb	r1, [r0]
	ldrb	r0, [r6, #0x1]
	cmp	r0, #0
	beq	.L763	@cond_branch
	ldr	r0, .L802+0x4
	bl	sub_80543DC
	bl	sub_80557F4
	b	.L763
.L803:
	.align	2, 0
.L802:
	.word	gUnknown_03000580
	.word	sub_80553E4
.L772:
	add	r0, r6, #0
	bl	sub_8055660
	cmp	r0, #0x1
	bne	.L763	@cond_branch
	ldr	r0, .L804
	add	r0, r7, r0
	mov	r1, #0x81
	strb	r1, [r0]
	ldrb	r0, [r6, #0x1]
	cmp	r0, #0
	beq	.L763	@cond_branch
	ldr	r0, .L804+0x4
	bl	sub_80543DC
	bl	sub_8055824
	b	.L763
.L805:
	.align	2, 0
.L804:
	.word	gUnknown_03000580
	.word	sub_80553E4
.L775:
	add	r0, r6, #0
	bl	sub_805568C
	add	r4, r0, #0
	cmp	r4, #0
	beq	.L763	@cond_branch
	ldr	r0, .L806
	add	r0, r7, r0
	mov	r1, #0x81
	strb	r1, [r0]
	ldrb	r0, [r6, #0x1]
	cmp	r0, #0
	beq	.L763	@cond_branch
	ldr	r0, .L806+0x4
	bl	sub_80543DC
	add	r0, r4, #0
	bl	sub_8055840
	b	.L763
.L807:
	.align	2, 0
.L806:
	.word	gUnknown_03000580
	.word	sub_80553E4
.L778:
	add	r0, r6, #0
	bl	sub_8055618
	cmp	r0, #0
	beq	.L763	@cond_branch
	ldr	r0, .L808
	add	r0, r7, r0
	mov	r1, #0x81
	strb	r1, [r0]
	ldrb	r0, [r6, #0x1]
	cmp	r0, #0
	beq	.L763	@cond_branch
	ldr	r0, .L808+0x4
	bl	sub_80543DC
	bl	sub_80557E8
	b	.L763
.L809:
	.align	2, 0
.L808:
	.word	gUnknown_03000580
	.word	sub_8055408
.L781:
	add	r0, r6, #0
	bl	sub_8055618
	cmp	r0, #0
	beq	.L763	@cond_branch
	ldr	r0, .L810
	add	r0, r7, r0
	mov	r1, #0x81
	strb	r1, [r0]
	ldrb	r0, [r6, #0x1]
	cmp	r0, #0
	beq	.L763	@cond_branch
	ldr	r0, .L810+0x4
	bl	sub_80543DC
	bl	sub_80557E8
.L763:
	mov	r0, r8
	cmp	r0, #0x17
	beq	.L787	@cond_branch
	cmp	r0, #0x17
	bgt	.L795	@cond_branch
	cmp	r0, #0x16
	beq	.L788	@cond_branch
	b	.L762
.L811:
	.align	2, 0
.L810:
	.word	gUnknown_03000580
	.word	sub_8055438
.L795:
	mov	r1, r8
	cmp	r1, #0x1a
	beq	.L789	@cond_branch
	cmp	r1, #0x1d
	beq	.L791	@cond_branch
	b	.L762
.L787:
	ldr	r0, .L812
	add	r0, r7, r0
	mov	r1, #0x83
	strb	r1, [r0]
	b	.L762
.L813:
	.align	2, 0
.L812:
	.word	gUnknown_03000580
.L788:
	ldr	r0, .L814
	add	r0, r7, r0
	mov	r1, #0x82
	strb	r1, [r0]
	b	.L762
.L815:
	.align	2, 0
.L814:
	.word	gUnknown_03000580
.L789:
	ldr	r0, .L816
	add	r0, r7, r0
	mov	r1, #0x80
	strb	r1, [r0]
	ldrb	r0, [r6, #0x1]
	cmp	r0, #0
	beq	.L762	@cond_branch
	ldr	r0, .L816+0x4
	bl	sub_80543DC
	b	.L762
.L817:
	.align	2, 0
.L816:
	.word	gUnknown_03000580
	.word	sub_8055390
.L791:
	ldr	r0, .L818
	add	r1, r7, r0
	ldrb	r0, [r1]
	cmp	r0, #0x82
	bne	.L762	@cond_branch
	mov	r0, #0x81
	strb	r0, [r1]
.L762:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L819:
	.align	2, 0
.L818:
	.word	gUnknown_03000580
.Lfe143:
	.size	 sub_8054FF8,.Lfe143-sub_8054FF8
	.align	2, 0
	.globl	sub_8055218
	.type	 sub_8055218,function
	.thumb_func
sub_8055218:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #0xffffffec
	mov	r8, r1
	mov	r6, #0x0
	add	r4, sp, #0x10
	mov	r9, r4
	add	r7, r0, #0
.L824:
	ldrh	r5, [r7]
	mov	r0, #0x0
	strh	r0, [r4]
	add	r0, r6, #0
	mov	r1, r8
	mov	r2, sp
	bl	sub_80555B0
	add	r0, r6, #0
	add	r1, r5, #0
	mov	r2, sp
	add	r3, r4, #0
	bl	sub_8054FF8
	ldr	r0, .L827
	add	r0, r6, r0
	ldrb	r0, [r0]
	cmp	r0, #0x80
	bne	.L825	@cond_branch
	add	r0, r5, #0
	bl	sub_805530C
	mov	r1, r9
	strh	r0, [r1]
.L825:
	lsl	r0, r6, #0x18
	lsr	r0, r0, #0x18
	ldrb	r1, [r4]
	bl	sub_8055BFC
	add	r7, r7, #0x2
	add	r6, r6, #0x1
	cmp	r6, #0x3
	ble	.L824	@cond_branch
	add	sp, sp, #0x14
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L828:
	.align	2, 0
.L827:
	.word	gUnknown_03000580
.Lfe144:
	.size	 sub_8055218,.Lfe144-sub_8055218
	.align	2, 0
	.globl	sub_8055280
	.type	 sub_8055280,function
	.thumb_func
sub_8055280:
	push	{lr}
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	ldr	r2, .L832
	add	r0, r0, r2
	lsr	r0, r0, #0x10
	cmp	r0, #0xc
	bhi	.L830	@cond_branch
	ldr	r0, .L832+0x4
	strh	r1, [r0]
	b	.L831
.L833:
	.align	2, 0
.L832:
	.word	0xffef0000
	.word	word_3004858
.L830:
	ldr	r1, .L834
	mov	r0, #0x11
	strh	r0, [r1]
.L831:
	pop	{r0}
	bx	r0
.L835:
	.align	2, 0
.L834:
	.word	word_3004858
.Lfe145:
	.size	 sub_8055280,.Lfe145-sub_8055280
	.align	2, 0
	.globl	sub_80552B0
	.type	 sub_80552B0,function
	.thumb_func
sub_80552B0:
	push	{lr}
	ldr	r2, .L850
	ldrh	r1, [r2, #0x2c]
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L837	@cond_branch
	mov	r0, #0x13
	b	.L849
.L851:
	.align	2, 0
.L850:
	.word	gMain
.L837:
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L839	@cond_branch
	mov	r0, #0x12
	b	.L849
.L839:
	mov	r0, #0x20
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L841	@cond_branch
	mov	r0, #0x14
	b	.L849
.L841:
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L843	@cond_branch
	mov	r0, #0x15
	b	.L849
.L843:
	ldrh	r1, [r2, #0x2e]
	mov	r0, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L845	@cond_branch
	mov	r0, #0x18
	b	.L849
.L845:
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L847	@cond_branch
	mov	r0, #0x11
	b	.L849
.L847:
	mov	r0, #0x19
.L849:
	pop	{r1}
	bx	r1
.Lfe146:
	.size	 sub_80552B0,.Lfe146-sub_80552B0
	.align	2, 0
	.globl	sub_805530C
	.type	 sub_805530C,function
	.thumb_func
sub_805530C:
	push	{lr}
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r1, r0, #0
	cmp	r0, #0x13
	beq	.L856	@cond_branch
	cmp	r0, #0x13
	bgt	.L860	@cond_branch
	cmp	r0, #0x12
	beq	.L857	@cond_branch
	b	.L858
.L860:
	cmp	r1, #0x14
	beq	.L855	@cond_branch
	cmp	r1, #0x15
	bne	.L858	@cond_branch
	mov	r0, #0x4
	b	.L861
.L855:
	mov	r0, #0x3
	b	.L861
.L856:
	mov	r0, #0x1
	b	.L861
.L857:
	mov	r0, #0x2
	b	.L861
.L858:
	mov	r0, #0x0
.L861:
	pop	{r1}
	bx	r1
.Lfe147:
	.size	 sub_805530C,.Lfe147-sub_805530C
	.align	2, 0
	.globl	sub_8055340
	.type	 sub_8055340,function
	.thumb_func
sub_8055340:
	push	{lr}
	mov	r2, #0x11
	add	r1, r0, #0x6
.L866:
	strh	r2, [r1]
	sub	r1, r1, #0x2
	cmp	r1, r0
	bge	.L866	@cond_branch
	pop	{r0}
	bx	r0
.Lfe148:
	.size	 sub_8055340,.Lfe148-sub_8055340
	.align	2, 0
	.globl	sub_8055354
	.type	 sub_8055354,function
	.thumb_func
sub_8055354:
	push	{r4, r5, lr}
	ldr	r0, .L869
	ldrb	r4, [r0]
	ldr	r5, .L869+0x4
	add	r0, r5, #0
	add	r1, r4, #0
	bl	sub_8055218
	ldr	r0, .L869+0x8
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	_call_via_r1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	sub_8055280
	add	r0, r5, #0
	bl	sub_8055340
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L870:
	.align	2, 0
.L869:
	.word	gUnknown_03004860
	.word	word_3002910
	.word	gUnknown_03000584
.Lfe149:
	.size	 sub_8055354,.Lfe149-sub_8055354
	.align	2, 0
	.globl	sub_8055390
	.type	 sub_8055390,function
	.thumb_func
sub_8055390:
	push	{r4, lr}
	add	r4, r0, #0
	bl	ScriptContext2_IsEnabled
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L872	@cond_branch
	mov	r0, #0x11
	b	.L875
.L872:
	ldr	r1, .L876
	ldr	r2, .L876+0x4
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0x4
	bls	.L873	@cond_branch
	mov	r0, #0x1b
	b	.L875
.L877:
	.align	2, 0
.L876:
	.word	gLink
	.word	0xfbd
.L873:
	ldr	r2, .L878
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0x4
	bls	.L874	@cond_branch
	mov	r0, #0x1c
	b	.L875
.L879:
	.align	2, 0
.L878:
	.word	0x339
.L874:
	add	r0, r4, #0
	bl	sub_80552B0
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
.L875:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe150:
	.size	 sub_8055390,.Lfe150-sub_8055390
	.align	2, 0
	.globl	sub_80553E0
	.type	 sub_80553E0,function
	.thumb_func
sub_80553E0:
	mov	r0, #0x11
	bx	lr
.Lfe151:
	.size	 sub_80553E0,.Lfe151-sub_80553E0
	.align	2, 0
	.globl	sub_80553E4
	.type	 sub_80553E4,function
	.thumb_func
sub_80553E4:
	push	{r4, lr}
	bl	ScriptContext2_IsEnabled
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r4, #0x11
	cmp	r0, #0x1
	beq	.L883	@cond_branch
	mov	r4, #0x1a
	ldr	r0, .L884
	bl	sub_80543DC
.L883:
	add	r0, r4, #0
	pop	{r4}
	pop	{r1}
	bx	r1
.L885:
	.align	2, 0
.L884:
	.word	sub_80553E0
.Lfe152:
	.size	 sub_80553E4,.Lfe152-sub_80553E4
	.align	2, 0
	.globl	sub_8055408
	.type	 sub_8055408,function
	.thumb_func
sub_8055408:
	push	{r4, lr}
	ldr	r0, .L889
	ldr	r1, .L889+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	mov	r4, #0x11
	cmp	r0, #0x2
	bhi	.L888	@cond_branch
	mov	r4, #0x1a
	bl	ScriptContext2_Disable
	ldr	r0, .L889+0x8
	bl	sub_80543DC
.L888:
	add	r0, r4, #0
	pop	{r4}
	pop	{r1}
	bx	r1
.L890:
	.align	2, 0
.L889:
	.word	gLink
	.word	0xfbd
	.word	sub_80553E0
.Lfe153:
	.size	 sub_8055408,.Lfe153-sub_8055408
	.align	2, 0
	.globl	sub_8055438
	.type	 sub_8055438,function
	.thumb_func
sub_8055438:
	push	{r4, lr}
	ldr	r0, .L894
	ldr	r1, .L894+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	mov	r4, #0x11
	cmp	r0, #0x2
	bhi	.L893	@cond_branch
	mov	r4, #0x1a
	bl	ScriptContext2_Disable
	ldr	r0, .L894+0x8
	bl	sub_80543DC
.L893:
	add	r0, r4, #0
	pop	{r4}
	pop	{r1}
	bx	r1
.L895:
	.align	2, 0
.L894:
	.word	gLink
	.word	0x339
	.word	sub_80553E0
.Lfe154:
	.size	 sub_8055438,.Lfe154-sub_8055438
	.align	2, 0
	.globl	sub_8055468
	.type	 sub_8055468,function
	.thumb_func
sub_8055468:
	mov	r0, #0x11
	bx	lr
.Lfe155:
	.size	 sub_8055468,.Lfe155-sub_8055468
	.align	2, 0
	.globl	sub_805546C
	.type	 sub_805546C,function
	.thumb_func
sub_805546C:
	push	{lr}
	ldr	r1, .L901
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x82
	bne	.L898	@cond_branch
	ldr	r0, .L901+0x4
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L898	@cond_branch
	ldr	r0, .L901+0x8
	bl	sub_80543DC
	mov	r0, #0x1d
	b	.L900
.L902:
	.align	2, 0
.L901:
	.word	gUnknown_03000580
	.word	gMain
	.word	sub_8055468
.L898:
	mov	r0, #0x11
.L900:
	pop	{r1}
	bx	r1
.Lfe156:
	.size	 sub_805546C,.Lfe156-sub_805546C
	.align	2, 0
	.globl	sub_80554A4
	.type	 sub_80554A4,function
	.thumb_func
sub_80554A4:
	push	{lr}
	ldr	r0, .L904
	bl	sub_80543DC
	mov	r0, #0x16
	pop	{r1}
	bx	r1
.L905:
	.align	2, 0
.L904:
	.word	sub_805546C
.Lfe157:
	.size	 sub_80554A4,.Lfe157-sub_80554A4
	.align	2, 0
	.globl	sub_80554B8
	.type	 sub_80554B8,function
	.thumb_func
sub_80554B8:
	mov	r0, #0x11
	bx	lr
.Lfe158:
	.size	 sub_80554B8,.Lfe158-sub_80554B8
	.align	2, 0
	.globl	sub_80554BC
	.type	 sub_80554BC,function
	.thumb_func
sub_80554BC:
	push	{lr}
	mov	r0, #0x83
	bl	sub_8054F88
	cmp	r0, #0x1
	bne	.L908	@cond_branch
	ldr	r0, .L909
	bl	ScriptContext1_SetupScript
	ldr	r0, .L909+0x4
	bl	sub_80543DC
.L908:
	mov	r0, #0x11
	pop	{r1}
	bx	r1
.L910:
	.align	2, 0
.L909:
	.word	gUnknown_081A4508
	.word	sub_80554B8
.Lfe159:
	.size	 sub_80554BC,.Lfe159-sub_80554BC
	.align	2, 0
	.globl	sub_80554E4
	.type	 sub_80554E4,function
	.thumb_func
sub_80554E4:
	push	{lr}
	ldr	r0, .L912
	bl	sub_80543DC
	mov	r0, #0x17
	pop	{r1}
	bx	r1
.L913:
	.align	2, 0
.L912:
	.word	sub_80554BC
.Lfe160:
	.size	 sub_80554E4,.Lfe160-sub_80554E4
	.align	2, 0
	.globl	sub_80554F8
	.type	 sub_80554F8,function
	.thumb_func
sub_80554F8:
	push	{lr}
	mov	r0, #0x83
	bl	sub_8054FC0
	cmp	r0, #0x1
	beq	.L919	@cond_branch
	ldr	r0, .L920
	ldr	r2, [r0]
	ldr	r1, .L920+0x4
	add	r3, r0, #0
	cmp	r2, r1
	bne	.L916	@cond_branch
	ldr	r1, .L920+0x8
	ldr	r0, .L920+0xc
	ldrb	r0, [r0]
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x82
	beq	.L916	@cond_branch
	mov	r0, #0x0
	b	.L918
.L921:
	.align	2, 0
.L920:
	.word	gUnknown_03000584
	.word	sub_805546C
	.word	gUnknown_03000580
	.word	gUnknown_03004860
.L916:
	ldr	r1, [r3]
	ldr	r0, .L922
	cmp	r1, r0
	bne	.L917	@cond_branch
	ldr	r1, .L922+0x4
	ldr	r0, .L922+0x8
	ldrb	r0, [r0]
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x81
	bne	.L917	@cond_branch
.L919:
	mov	r0, #0x2
	b	.L918
.L923:
	.align	2, 0
.L922:
	.word	sub_8055468
	.word	gUnknown_03000580
	.word	gUnknown_03004860
.L917:
	mov	r0, #0x82
	bl	sub_8054F88
.L918:
	pop	{r1}
	bx	r1
.Lfe161:
	.size	 sub_80554F8,.Lfe161-sub_80554F8
	.align	2, 0
	.globl	unref_sub_8055568
	.type	 unref_sub_8055568,function
	.thumb_func
unref_sub_8055568:
	push	{lr}
	mov	r0, #0x83
	bl	sub_8054FC0
	pop	{r1}
	bx	r1
.Lfe162:
	.size	 unref_sub_8055568,.Lfe162-unref_sub_8055568
	.align	2, 0
	.globl	sub_8055574
	.type	 sub_8055574,function
	.thumb_func
sub_8055574:
	push	{lr}
	ldr	r0, .L926
	bl	sub_80543DC
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L927:
	.align	2, 0
.L926:
	.word	sub_80554A4
.Lfe163:
	.size	 sub_8055574,.Lfe163-sub_8055574
	.align	2, 0
	.globl	sub_8055588
	.type	 sub_8055588,function
	.thumb_func
sub_8055588:
	push	{lr}
	ldr	r0, .L929
	bl	sub_80543DC
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L930:
	.align	2, 0
.L929:
	.word	sub_80553E4
.Lfe164:
	.size	 sub_8055588,.Lfe164-sub_8055588
	.align	2, 0
	.globl	sub_805559C
	.type	 sub_805559C,function
	.thumb_func
sub_805559C:
	push	{lr}
	ldr	r0, .L932
	bl	sub_80543DC
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L933:
	.align	2, 0
.L932:
	.word	sub_80554E4
.Lfe165:
	.size	 sub_805559C,.Lfe165-sub_805559C
	.align	2, 0
	.globl	sub_80555B0
	.type	 sub_80555B0,function
	.thumb_func
sub_80555B0:
	push	{r4, r5, r6, lr}
	add	sp, sp, #0xfffffffc
	add	r4, r0, #0
	add	r6, r2, #0
	strb	r4, [r6]
	mov	r0, #0x0
	cmp	r4, r1
	bne	.L935	@cond_branch
	mov	r0, #0x1
.L935:
	strb	r0, [r6, #0x1]
	ldr	r1, .L936
	lsl	r0, r4, #0x2
	add	r0, r0, r1
	ldrb	r0, [r0, #0x3]
	strb	r0, [r6, #0x2]
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r4, #0
	bl	sub_8055B30
	strb	r0, [r6, #0x3]
	mov	r5, sp
	add	r5, r5, #0x2
	add	r0, r4, #0
	mov	r1, sp
	add	r2, r5, #0
	bl	sub_8055B08
	mov	r0, sp
	ldrh	r0, [r0]
	strh	r0, [r6, #0x4]
	ldrh	r0, [r5]
	strh	r0, [r6, #0x6]
	add	r0, r4, #0
	bl	sub_8055B50
	strb	r0, [r6, #0x8]
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x0
	ldrsh	r1, [r5, r2]
	bl	MapGridGetMetatileBehaviorAt
	strh	r0, [r6, #0xc]
	add	sp, sp, #0x4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L937:
	.align	2, 0
.L936:
	.word	gLinkPlayerMapObjects
.Lfe166:
	.size	 sub_80555B0,.Lfe166-sub_80555B0
	.align	2, 0
	.globl	sub_8055618
	.type	 sub_8055618,function
	.thumb_func
sub_8055618:
	push	{lr}
	ldrb	r0, [r0, #0x2]
	cmp	r0, #0x2
	beq	.L940	@cond_branch
	cmp	r0, #0
	bne	.L939	@cond_branch
.L940:
	mov	r0, #0x1
	b	.L942
.L939:
	mov	r0, #0x0
.L942:
	pop	{r1}
	bx	r1
.Lfe167:
	.size	 sub_8055618,.Lfe167-sub_8055618
	.align	2, 0
	.globl	sub_8055630
	.type	 sub_8055630,function
	.thumb_func
sub_8055630:
	push	{lr}
	ldrb	r0, [r0, #0x2]
	cmp	r0, #0x2
	beq	.L945	@cond_branch
	cmp	r0, #0
	bne	.L944	@cond_branch
.L945:
	mov	r0, #0x1
	b	.L947
.L944:
	mov	r0, #0x0
.L947:
	pop	{r1}
	bx	r1
.Lfe168:
	.size	 sub_8055630,.Lfe168-sub_8055630
	.align	2, 0
	.globl	sub_8055648
	.type	 sub_8055648,function
	.thumb_func
sub_8055648:
	push	{lr}
	add	r1, r0, #0
	ldrb	r0, [r1, #0x2]
	cmp	r0, #0x2
	bne	.L949	@cond_branch
	add	r0, r1, #0x4
	bl	sub_8068E24
	b	.L950
.L949:
	mov	r0, #0x0
.L950:
	pop	{r1}
	bx	r1
.Lfe169:
	.size	 sub_8055648,.Lfe169-sub_8055648
	.align	2, 0
	.globl	sub_8055660
	.type	 sub_8055660,function
	.thumb_func
sub_8055660:
	push	{r4, lr}
	add	r4, r0, #0
	ldrb	r0, [r4, #0x2]
	cmp	r0, #0x2
	beq	.L952	@cond_branch
	cmp	r0, #0
	bne	.L954	@cond_branch
.L952:
	ldrb	r0, [r4, #0xc]
	bl	MetatileBehavior_IsSouthArrowWarp
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L954	@cond_branch
	ldrb	r0, [r4, #0x3]
	cmp	r0, #0x1
	bne	.L954	@cond_branch
	mov	r0, #0x1
	b	.L955
.L954:
	mov	r0, #0x0
.L955:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe170:
	.size	 sub_8055660,.Lfe170-sub_8055660
	.align	2, 0
	.globl	sub_805568C
	.type	 sub_805568C,function
	.thumb_func
sub_805568C:
	push	{r4, lr}
	add	sp, sp, #0xfffffff8
	add	r4, r0, #0
	ldrb	r0, [r4, #0x2]
	cmp	r0, #0
	beq	.L957	@cond_branch
	cmp	r0, #0x2
	beq	.L957	@cond_branch
	mov	r0, #0x0
	b	.L963
.L957:
	ldr	r0, [r4, #0x4]		@ created by thumb_load_double_from_address
	ldr	r1, [r4, #0x8]		@ created by thumb_load_double_from_address
	str	r0, [sp]
	str	r1, [sp, #0x4]
	ldr	r3, .L965
	ldrb	r0, [r4, #0x3]
	lsl	r0, r0, #0x3
	add	r0, r0, r3
	ldr	r0, [r0]
	mov	r1, sp
	ldrh	r1, [r1]
	add	r0, r0, r1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r1, .L965+0x4
	ldr	r2, [sp]
	and	r2, r2, r1
	orr	r2, r2, r0
	str	r2, [sp]
	asr	r1, r2, #0x10
	ldrb	r0, [r4, #0x3]
	lsl	r0, r0, #0x3
	add	r3, r3, #0x4
	add	r0, r0, r3
	ldr	r0, [r0]
	add	r0, r0, r1
	lsl	r0, r0, #0x10
	ldr	r1, .L965+0x8
	and	r1, r1, r2
	orr	r1, r1, r0
	str	r1, [sp]
	ldr	r2, .L965+0xc
	ldr	r0, [sp, #0x4]
	and	r0, r0, r2
	str	r0, [sp, #0x4]
	mov	r0, sp
	mov	r2, #0x0
	ldrsh	r0, [r0, r2]
	asr	r1, r1, #0x10
	bl	GetLinkPlayerIdAt
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	add	r2, r1, #0
	cmp	r1, #0x4
	beq	.L958	@cond_branch
	ldrb	r0, [r4, #0x1]
	cmp	r0, #0
	beq	.L964	@cond_branch
	ldr	r0, .L965+0x10
	add	r0, r1, r0
	ldrb	r0, [r0]
	cmp	r0, #0x80
	beq	.L960	@cond_branch
.L964:
	ldr	r0, .L965+0x14
	b	.L963
.L966:
	.align	2, 0
.L965:
	.word	gUnknown_0821664C
	.word	0xffff0000
	.word	0xffff
	.word	0xffffff00
	.word	gUnknown_03000580
	.word	TradeRoom_TooBusyToNotice
.L960:
	add	r0, r2, #0
	bl	sub_8083BF4
	cmp	r0, #0
	bne	.L961	@cond_branch
	ldr	r0, .L967
	b	.L963
.L968:
	.align	2, 0
.L967:
	.word	TradeRoom_ReadTrainerCard1
.L961:
	ldr	r0, .L969
	b	.L963
.L970:
	.align	2, 0
.L969:
	.word	TradeRoom_ReadTrainerCard2
.L958:
	ldrb	r1, [r4, #0xc]
	ldrb	r2, [r4, #0x3]
	mov	r0, sp
	bl	sub_80682A8
.L963:
	add	sp, sp, #0x8
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe171:
	.size	 sub_805568C,.Lfe171-sub_805568C
	.align	2, 0
	.globl	sub_8055758
	.type	 sub_8055758,function
	.thumb_func
sub_8055758:
	push	{lr}
	add	r1, r0, #0
	ldr	r0, .L986
	cmp	r1, r0
	beq	.L985	@cond_branch
	ldr	r0, .L986+0x4
	cmp	r1, r0
	beq	.L983	@cond_branch
	ldr	r0, .L986+0x8
	cmp	r1, r0
	beq	.L985	@cond_branch
	ldr	r0, .L986+0xc
	cmp	r1, r0
	beq	.L983	@cond_branch
	ldr	r0, .L986+0x10
	cmp	r1, r0
	beq	.L985	@cond_branch
	ldr	r0, .L986+0x14
	cmp	r1, r0
	beq	.L983	@cond_branch
	ldr	r0, .L986+0x18
	cmp	r1, r0
	beq	.L985	@cond_branch
	ldr	r0, .L986+0x1c
	cmp	r1, r0
	beq	.L983	@cond_branch
	ldr	r0, .L986+0x20
	cmp	r1, r0
	beq	.L985	@cond_branch
	ldr	r0, .L986+0x24
	cmp	r1, r0
	beq	.L983	@cond_branch
	ldr	r0, .L986+0x28
	cmp	r1, r0
	bne	.L982	@cond_branch
.L985:
	mov	r0, #0xa
	b	.L984
.L987:
	.align	2, 0
.L986:
	.word	DoubleBattleColosseum_EventScript_1A4383
	.word	DoubleBattleColosseum_EventScript_1A439E
	.word	DoubleBattleColosseum_EventScript_1A43B9
	.word	DoubleBattleColosseum_EventScript_1A43D4
	.word	RecordCorner_EventScript_1A4418
	.word	RecordCorner_EventScript_1A442D
	.word	RecordCorner_EventScript_1A4442
	.word	RecordCorner_EventScript_1A4457
	.word	SingleBattleColosseum_EventScript_1A436F
	.word	SingleBattleColosseum_EventScript_1A4379
	.word	TradeCenter_EventScript_1A43F0
.L982:
	ldr	r0, .L988
	cmp	r1, r0
	beq	.L983	@cond_branch
	mov	r0, #0x0
	b	.L984
.L989:
	.align	2, 0
.L988:
	.word	TradeCenter_EventScript_1A43FA
.L983:
	mov	r0, #0x9
.L984:
	pop	{r1}
	bx	r1
.Lfe172:
	.size	 sub_8055758,.Lfe172-sub_8055758
	.align	2, 0
	.globl	sub_80557E8
	.type	 sub_80557E8,function
	.thumb_func
sub_80557E8:
	push	{lr}
	bl	ScriptContext2_Enable
	pop	{r0}
	bx	r0
.Lfe173:
	.size	 sub_80557E8,.Lfe173-sub_80557E8
	.align	2, 0
	.globl	sub_80557F4
	.type	 sub_80557F4,function
	.thumb_func
sub_80557F4:
	push	{lr}
	mov	r0, #0x6
	bl	PlaySE
	bl	sub_8071310
	bl	ScriptContext2_Enable
	pop	{r0}
	bx	r0
.Lfe174:
	.size	 sub_80557F4,.Lfe174-sub_80557F4
	.align	2, 0
	.globl	sub_8055808
	.type	 sub_8055808,function
	.thumb_func
sub_8055808:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r4, #0
	bl	ScriptContext1_SetupScript
	bl	ScriptContext2_Enable
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe175:
	.size	 sub_8055808,.Lfe175-sub_8055808
	.align	2, 0
	.globl	sub_8055824
	.type	 sub_8055824,function
	.thumb_func
sub_8055824:
	push	{lr}
	mov	r0, #0x6
	bl	PlaySE
	ldr	r0, .L994
	bl	ScriptContext1_SetupScript
	bl	ScriptContext2_Enable
	pop	{r0}
	bx	r0
.L995:
	.align	2, 0
.L994:
	.word	TradeRoom_PromptToCancelLink
.Lfe176:
	.size	 sub_8055824,.Lfe176-sub_8055824
	.align	2, 0
	.globl	sub_8055840
	.type	 sub_8055840,function
	.thumb_func
sub_8055840:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r4, #0
	bl	ScriptContext1_SetupScript
	bl	ScriptContext2_Enable
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe177:
	.size	 sub_8055840,.Lfe177-sub_8055840
	.align	2, 0
	.globl	sub_805585C
	.type	 sub_805585C,function
	.thumb_func
sub_805585C:
	push	{lr}
	ldr	r0, .L998
	bl	ScriptContext1_SetupScript
	bl	ScriptContext2_Enable
	pop	{r0}
	bx	r0
.L999:
	.align	2, 0
.L998:
	.word	TradeRoom_TerminateLink
.Lfe178:
	.size	 sub_805585C,.Lfe178-sub_805585C
	.align	2, 0
	.globl	sub_8055870
	.type	 sub_8055870,function
	.thumb_func
sub_8055870:
	push	{lr}
	bl	is_c1_link_related_active
	cmp	r0, #0
	bne	.L1001	@cond_branch
	mov	r0, #0x0
	b	.L1004
.L1001:
	ldr	r0, .L1006
	ldr	r1, .L1006+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x2
	bls	.L1002	@cond_branch
	ldr	r1, .L1006+0x8
	mov	r0, #0x1
	b	.L1005
.L1007:
	.align	2, 0
.L1006:
	.word	gLink
	.word	0xfbd
	.word	gUnknown_03000588
.L1002:
	ldr	r1, .L1008
	mov	r0, #0x0
.L1005:
	strb	r0, [r1]
	ldrb	r0, [r1]
.L1004:
	pop	{r1}
	bx	r1
.L1009:
	.align	2, 0
.L1008:
	.word	gUnknown_03000588
.Lfe179:
	.size	 sub_8055870,.Lfe179-sub_8055870
	.align	2, 0
	.globl	sub_80558AC
	.type	 sub_80558AC,function
	.thumb_func
sub_80558AC:
	push	{lr}
	bl	is_c1_link_related_active
	cmp	r0, #0x1
	bne	.L1016	@cond_branch
	bl	sub_8007B24
	cmp	r0, #0x1
	bne	.L1016	@cond_branch
	ldr	r0, .L1019
	ldr	r1, [r0]
	ldr	r0, .L1019+0x4
	cmp	r1, r0
	beq	.L1018	@cond_branch
	ldr	r0, .L1019+0x8
	cmp	r1, r0
	bne	.L1016	@cond_branch
	ldr	r0, .L1019+0xc
	ldrb	r2, [r0]
	mov	r1, #0x0
	strb	r1, [r0]
	cmp	r2, #0x1
	beq	.L1018	@cond_branch
	ldr	r2, .L1019+0x10
	ldrb	r1, [r2, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1016	@cond_branch
	ldrb	r1, [r2, #0xa]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1016	@cond_branch
.L1018:
	mov	r0, #0x1
	b	.L1017
.L1020:
	.align	2, 0
.L1019:
	.word	gUnknown_03000584
	.word	sub_8055408
	.word	sub_80553E4
	.word	gUnknown_03000588
	.word	gPaletteFade
.L1016:
	mov	r0, #0x0
.L1017:
	pop	{r1}
	bx	r1
.Lfe180:
	.size	 sub_80558AC,.Lfe180-sub_80558AC
	.align	2, 0
	.globl	sub_8055910
	.type	 sub_8055910,function
	.thumb_func
sub_8055910:
	push	{lr}
	bl	is_c1_link_related_active
	cmp	r0, #0x1
	bne	.L1026	@cond_branch
	bl	sub_8007B24
	cmp	r0, #0x1
	bne	.L1026	@cond_branch
	ldr	r0, .L1027
	ldr	r1, [r0]
	ldr	r0, .L1027+0x4
	cmp	r1, r0
	beq	.L1024	@cond_branch
.L1026:
	mov	r0, #0x0
	b	.L1025
.L1028:
	.align	2, 0
.L1027:
	.word	gUnknown_03000584
	.word	sub_8055438
.L1024:
	mov	r0, #0x1
.L1025:
	pop	{r1}
	bx	r1
.Lfe181:
	.size	 sub_8055910,.Lfe181-sub_8055910
	.align	2, 0
	.globl	sub_8055940
	.type	 sub_8055940,function
	.thumb_func
sub_8055940:
	push	{lr}
	bl	sub_8007B24
	cmp	r0, #0
	beq	.L1030	@cond_branch
	mov	r0, #0x1
	b	.L1031
.L1030:
	mov	r0, #0x0
.L1031:
	pop	{r1}
	bx	r1
.Lfe182:
	.size	 sub_8055940,.Lfe182-sub_8055940
	.align	2, 0
	.globl	ZeroLinkPlayerMapObject
	.type	 ZeroLinkPlayerMapObject,function
	.thumb_func
ZeroLinkPlayerMapObject:
	mov	r1, #0x0
	str	r1, [r0]
	bx	lr
.Lfe183:
	.size	 ZeroLinkPlayerMapObject,.Lfe183-ZeroLinkPlayerMapObject
	.align	2, 0
	.globl	strange_npc_table_clear
	.type	 strange_npc_table_clear,function
	.thumb_func
strange_npc_table_clear:
	push	{lr}
	ldr	r0, .L1034
	mov	r1, #0x0
	mov	r2, #0x10
	bl	memset
	pop	{r0}
	bx	r0
.L1035:
	.align	2, 0
.L1034:
	.word	gLinkPlayerMapObjects
.Lfe184:
	.size	 strange_npc_table_clear,.Lfe184-strange_npc_table_clear
	.align	2, 0
	.globl	ZeroMapObject
	.type	 ZeroMapObject,function
	.thumb_func
ZeroMapObject:
	push	{lr}
	mov	r1, #0x0
	mov	r2, #0x24
	bl	memset
	pop	{r0}
	bx	r0
.Lfe185:
	.size	 ZeroMapObject,.Lfe185-ZeroMapObject
	.align	2, 0
	.globl	SpawnLinkPlayerMapObject
	.type	 SpawnLinkPlayerMapObject,function
	.thumb_func
SpawnLinkPlayerMapObject:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	mov	r9, r1
	mov	sl, r2
	mov	r8, r3
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	mov	r0, r9
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r9, r0
	mov	r1, sl
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	sl, r1
	mov	r2, r8
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r8, r2
	bl	sub_805AB54
	add	r6, r0, #0
	lsl	r6, r6, #0x18
	lsr	r6, r6, #0x18
	lsl	r4, r7, #0x2
	ldr	r0, .L1038
	add	r4, r4, r0
	lsl	r5, r6, #0x3
	add	r5, r5, r6
	lsl	r5, r5, #0x2
	ldr	r0, .L1038+0x4
	add	r5, r5, r0
	add	r0, r4, #0
	bl	ZeroLinkPlayerMapObject
	add	r0, r5, #0
	bl	ZeroMapObject
	mov	r2, #0x0
	mov	r1, #0x1
	mov	r0, #0x1
	strb	r0, [r4]
	strb	r7, [r4, #0x1]
	strb	r6, [r4, #0x2]
	strb	r2, [r4, #0x3]
	ldrb	r0, [r5]
	orr	r0, r0, r1
	mov	r2, r8
	and	r2, r2, r1
	lsl	r2, r2, #0x1
	mov	r1, #0x3
	neg	r1, r1
	and	r0, r0, r1
	orr	r0, r0, r2
	strb	r0, [r5]
	mov	r0, #0x2
	strb	r0, [r5, #0x19]
	mov	r0, #0x40
	strb	r0, [r5, #0x4]
	mov	r0, r9
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	mov	r9, r0
	mov	r1, sl
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	mov	sl, r1
	add	r0, r5, #0
	mov	r1, r9
	mov	r2, sl
	bl	InitLinkPlayerMapObjectPos
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1039:
	.align	2, 0
.L1038:
	.word	gLinkPlayerMapObjects
	.word	gMapObjects
.Lfe186:
	.size	 SpawnLinkPlayerMapObject,.Lfe186-SpawnLinkPlayerMapObject
	.align	2, 0
	.globl	InitLinkPlayerMapObjectPos
	.type	 InitLinkPlayerMapObjectPos,function
	.thumb_func
InitLinkPlayerMapObjectPos:
	push	{r4, lr}
	add	r4, r0, #0
	add	r0, r1, #0
	add	r1, r2, #0
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	strh	r0, [r4, #0x10]
	strh	r1, [r4, #0x12]
	strh	r0, [r4, #0x14]
	strh	r1, [r4, #0x16]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	add	r2, r4, #0
	add	r2, r2, #0xc
	add	r3, r4, #0
	add	r3, r3, #0xe
	bl	sub_80603CC
	ldrh	r0, [r4, #0xc]
	add	r0, r0, #0x8
	strh	r0, [r4, #0xc]
	add	r0, r4, #0
	bl	FieldObjectUpdateZCoord
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe187:
	.size	 InitLinkPlayerMapObjectPos,.Lfe187-InitLinkPlayerMapObjectPos
	.align	2, 0
	.globl	unref_sub_8055A6C
	.type	 unref_sub_8055A6C,function
	.thumb_func
unref_sub_8055A6C:
	push	{lr}
	lsl	r0, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r2, r1, #0x18
	ldr	r1, .L1043
	lsr	r0, r0, #0x16
	add	r1, r0, r1
	ldrb	r0, [r1]
	cmp	r0, #0
	beq	.L1042	@cond_branch
	ldrb	r0, [r1, #0x2]
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L1043+0x4
	add	r1, r1, r0
	strb	r2, [r1, #0x19]
.L1042:
	pop	{r0}
	bx	r0
.L1044:
	.align	2, 0
.L1043:
	.word	gLinkPlayerMapObjects
	.word	gMapObjects
.Lfe188:
	.size	 unref_sub_8055A6C,.Lfe188-unref_sub_8055A6C
	.align	2, 0
	.globl	unref_sub_8055A9C
	.type	 unref_sub_8055A9C,function
	.thumb_func
unref_sub_8055A9C:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x16
	ldr	r1, .L1047
	add	r5, r0, r1
	ldrb	r1, [r5, #0x2]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L1047+0x4
	add	r4, r0, r1
	ldrb	r0, [r4, #0x4]
	cmp	r0, #0x40
	beq	.L1046	@cond_branch
	add	r1, r0, #0
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L1047+0x8
	add	r0, r0, r1
	bl	DestroySprite
.L1046:
	mov	r0, #0x0
	strb	r0, [r5]
	ldrb	r1, [r4]
	sub	r0, r0, #0x2
	and	r0, r0, r1
	strb	r0, [r4]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1048:
	.align	2, 0
.L1047:
	.word	gLinkPlayerMapObjects
	.word	gMapObjects
	.word	gSprites
.Lfe189:
	.size	 unref_sub_8055A9C,.Lfe189-unref_sub_8055A9C
	.align	2, 0
	.globl	sub_8055AE8
	.type	 sub_8055AE8,function
	.thumb_func
sub_8055AE8:
	lsl	r0, r0, #0x18
	ldr	r1, .L1050
	lsr	r0, r0, #0x16
	add	r0, r0, r1
	ldrb	r1, [r0, #0x2]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L1050+0x4
	add	r0, r0, r1
	ldrb	r0, [r0, #0x4]
	bx	lr
.L1051:
	.align	2, 0
.L1050:
	.word	gLinkPlayerMapObjects
	.word	gMapObjects
.Lfe190:
	.size	 sub_8055AE8,.Lfe190-sub_8055AE8
	.align	2, 0
	.globl	sub_8055B08
	.type	 sub_8055B08,function
	.thumb_func
sub_8055B08:
	lsl	r0, r0, #0x18
	ldr	r3, .L1053
	lsr	r0, r0, #0x16
	add	r0, r0, r3
	ldrb	r3, [r0, #0x2]
	lsl	r0, r3, #0x3
	add	r0, r0, r3
	lsl	r0, r0, #0x2
	ldr	r3, .L1053+0x4
	add	r0, r0, r3
	ldrh	r3, [r0, #0x10]
	strh	r3, [r1]
	ldrh	r0, [r0, #0x12]
	strh	r0, [r2]
	bx	lr
.L1054:
	.align	2, 0
.L1053:
	.word	gLinkPlayerMapObjects
	.word	gMapObjects
.Lfe191:
	.size	 sub_8055B08,.Lfe191-sub_8055B08
	.align	2, 0
	.globl	sub_8055B30
	.type	 sub_8055B30,function
	.thumb_func
sub_8055B30:
	lsl	r0, r0, #0x18
	ldr	r1, .L1056
	lsr	r0, r0, #0x16
	add	r0, r0, r1
	ldrb	r1, [r0, #0x2]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L1056+0x4
	add	r0, r0, r1
	ldrb	r0, [r0, #0x19]
	bx	lr
.L1057:
	.align	2, 0
.L1056:
	.word	gLinkPlayerMapObjects
	.word	gMapObjects
.Lfe192:
	.size	 sub_8055B30,.Lfe192-sub_8055B30
	.align	2, 0
	.globl	sub_8055B50
	.type	 sub_8055B50,function
	.thumb_func
sub_8055B50:
	lsl	r0, r0, #0x18
	ldr	r1, .L1059
	lsr	r0, r0, #0x16
	add	r0, r0, r1
	ldrb	r1, [r0, #0x2]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L1059+0x4
	add	r0, r0, r1
	ldrb	r0, [r0, #0xb]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	bx	lr
.L1060:
	.align	2, 0
.L1059:
	.word	gLinkPlayerMapObjects
	.word	gMapObjects
.Lfe193:
	.size	 sub_8055B50,.Lfe193-sub_8055B50
	.align	2, 0
	.globl	unref_sub_8055B74
	.type	 unref_sub_8055B74,function
	.thumb_func
unref_sub_8055B74:
	lsl	r0, r0, #0x18
	ldr	r1, .L1062
	lsr	r0, r0, #0x16
	add	r0, r0, r1
	ldrb	r1, [r0, #0x2]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L1062+0x4
	add	r0, r0, r1
	add	r0, r0, #0x21
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	mov	r0, #0x10
	sub	r0, r0, r1
	bx	lr
.L1063:
	.align	2, 0
.L1062:
	.word	gLinkPlayerMapObjects
	.word	gMapObjects
.Lfe194:
	.size	 unref_sub_8055B74,.Lfe194-unref_sub_8055B74
	.align	2, 0
	.globl	GetLinkPlayerIdAt
	.type	 GetLinkPlayerIdAt,function
	.thumb_func
GetLinkPlayerIdAt:
	push	{r4, r5, r6, lr}
	mov	r2, #0x0
	ldr	r5, .L1074
	lsl	r0, r0, #0x10
	asr	r4, r0, #0x10
	lsl	r1, r1, #0x10
	asr	r3, r1, #0x10
.L1068:
	lsl	r0, r2, #0x2
	add	r1, r0, r5
	ldrb	r0, [r1]
	cmp	r0, #0
	beq	.L1067	@cond_branch
	ldrb	r0, [r1, #0x3]
	cmp	r0, #0
	beq	.L1070	@cond_branch
	cmp	r0, #0x2
	bne	.L1067	@cond_branch
.L1070:
	ldrb	r1, [r1, #0x2]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L1074+0x4
	add	r1, r0, r1
	mov	r6, #0x10
	ldrsh	r0, [r1, r6]
	cmp	r0, r4
	bne	.L1067	@cond_branch
	mov	r6, #0x12
	ldrsh	r0, [r1, r6]
	cmp	r0, r3
	bne	.L1067	@cond_branch
	add	r0, r2, #0
	b	.L1073
.L1075:
	.align	2, 0
.L1074:
	.word	gLinkPlayerMapObjects
	.word	gMapObjects
.L1067:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x3
	bls	.L1068	@cond_branch
	mov	r0, #0x4
.L1073:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe195:
	.size	 GetLinkPlayerIdAt,.Lfe195-GetLinkPlayerIdAt
	.align	2, 0
	.globl	sub_8055BFC
	.type	 sub_8055BFC,function
	.thumb_func
sub_8055BFC:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r3, r1, #0x18
	add	r2, r3, #0
	lsr	r0, r0, #0x16
	ldr	r1, .L1080
	add	r5, r0, r1
	ldrb	r1, [r5, #0x2]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L1080+0x4
	add	r6, r0, r1
	ldrb	r0, [r5]
	cmp	r0, #0
	beq	.L1077	@cond_branch
	cmp	r3, #0xa
	bls	.L1078	@cond_branch
	ldrb	r0, [r6]
	mov	r1, #0x4
	orr	r0, r0, r1
	strb	r0, [r6]
	b	.L1077
.L1081:
	.align	2, 0
.L1080:
	.word	gLinkPlayerMapObjects
	.word	gMapObjects
.L1078:
	ldr	r4, .L1082
	ldr	r1, .L1082+0x4
	ldrb	r0, [r5, #0x3]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r3, [r0]
	add	r0, r5, #0
	add	r1, r6, #0
	bl	_call_via_r3
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x16
	add	r0, r0, r4
	ldr	r2, [r0]
	add	r0, r5, #0
	add	r1, r6, #0
	bl	_call_via_r2
.L1077:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1083:
	.align	2, 0
.L1082:
	.word	gUnknown_082166D8
	.word	gUnknown_082166A0
.Lfe196:
	.size	 sub_8055BFC,.Lfe196-sub_8055BFC
	.align	2, 0
	.type	 sub_8055C68,function
	.thumb_func
sub_8055C68:
	push	{r4, lr}
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	ldr	r4, .L1085
	lsl	r3, r2, #0x2
	add	r3, r3, r4
	ldr	r3, [r3]
	bl	_call_via_r3
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r4}
	pop	{r1}
	bx	r1
.L1086:
	.align	2, 0
.L1085:
	.word	gUnknown_082166AC
.Lfe197:
	.size	 sub_8055C68,.Lfe197-sub_8055C68
	.align	2, 0
	.type	 sub_8055C88,function
	.thumb_func
sub_8055C88:
	mov	r0, #0x1
	bx	lr
.Lfe198:
	.size	 sub_8055C88,.Lfe198-sub_8055C88
	.align	2, 0
	.type	 sub_8055C8C,function
	.thumb_func
sub_8055C8C:
	push	{r4, lr}
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	ldr	r4, .L1089
	lsl	r3, r2, #0x2
	add	r3, r3, r4
	ldr	r3, [r3]
	bl	_call_via_r3
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r4}
	pop	{r1}
	bx	r1
.L1090:
	.align	2, 0
.L1089:
	.word	gUnknown_082166AC
.Lfe199:
	.size	 sub_8055C8C,.Lfe199-sub_8055C8C
	.align	2, 0
	.type	 sub_8055CAC,function
	.thumb_func
sub_8055CAC:
	mov	r0, #0x0
	bx	lr
.Lfe200:
	.size	 sub_8055CAC,.Lfe200-sub_8055CAC
	.align	2, 0
	.type	 sub_8055CB0,function
	.thumb_func
sub_8055CB0:
	push	{r4, r5, r6, lr}
	add	sp, sp, #0xfffffffc
	add	r4, r0, #0
	add	r5, r1, #0
	lsl	r0, r2, #0x18
	lsr	r0, r0, #0x18
	ldrb	r1, [r5, #0x19]
	bl	npc_something3
	strb	r0, [r5, #0x19]
	ldrb	r1, [r5, #0x19]
	mov	r6, sp
	add	r6, r6, #0x2
	add	r0, r5, #0
	mov	r2, sp
	add	r3, r6, #0
	bl	FieldObjectMoveDestCoords
	ldrb	r0, [r4, #0x2]
	ldrb	r1, [r5, #0x19]
	mov	r2, sp
	mov	r3, #0x0
	ldrsh	r2, [r2, r3]
	mov	r4, #0x0
	ldrsh	r3, [r6, r4]
	bl	LinkPlayerDetectCollision
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L1093	@cond_branch
	add	r1, r5, #0
	add	r1, r1, #0x21
	mov	r0, #0x10
	strb	r0, [r1]
	mov	r0, sp
	mov	r2, #0x0
	ldrsh	r1, [r0, r2]
	mov	r3, #0x0
	ldrsh	r2, [r6, r3]
	add	r0, r5, #0
	bl	npc_coords_shift
	add	r0, r5, #0
	bl	FieldObjectUpdateZCoord
	mov	r0, #0x1
	b	.L1095
.L1093:
	mov	r0, #0x0
.L1095:
	add	sp, sp, #0x4
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe201:
	.size	 sub_8055CB0,.Lfe201-sub_8055CB0
	.align	2, 0
	.type	 sub_8055D18,function
	.thumb_func
sub_8055D18:
	push	{r4, lr}
	add	r4, r1, #0
	lsl	r0, r2, #0x18
	lsr	r0, r0, #0x18
	ldrb	r1, [r4, #0x19]
	bl	npc_something3
	strb	r0, [r4, #0x19]
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe202:
	.size	 sub_8055D18,.Lfe202-sub_8055D18
	.align	2, 0
	.type	 sub_8055D30,function
	.thumb_func
sub_8055D30:
	mov	r1, #0x0
	strb	r1, [r0, #0x3]
	bx	lr
.Lfe203:
	.size	 sub_8055D30,.Lfe203-sub_8055D30
	.align	2, 0
	.type	 sub_8055D38,function
	.thumb_func
sub_8055D38:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	add	r4, r1, #0
	add	r5, r4, #0
	add	r5, r5, #0x21
	ldrb	r0, [r5]
	sub	r0, r0, #0x1
	strb	r0, [r5]
	mov	r0, #0x1
	strb	r0, [r6, #0x3]
	ldrb	r0, [r4, #0x19]
	add	r1, r1, #0xc
	add	r2, r4, #0
	add	r2, r2, #0xe
	bl	MoveCoords
	ldrb	r0, [r5]
	cmp	r0, #0
	bne	.L1099	@cond_branch
	add	r0, r4, #0
	bl	npc_coords_shift_still
	mov	r0, #0x2
	strb	r0, [r6, #0x3]
.L1099:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe204:
	.size	 sub_8055D38,.Lfe204-sub_8055D38
	.align	2, 0
	.globl	npc_something3
	.type	 npc_something3,function
	.thumb_func
npc_something3:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r2, r1, #0x18
	sub	r0, r0, #0x1
	cmp	r0, #0x9
	bhi	.L1101	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L1113
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1114:
	.align	2, 0
.L1113:
	.word	.L1110
	.align	2, 0
	.align	2, 0
.L1110:
	.word	.L1103
	.word	.L1105
	.word	.L1107
	.word	.L1109
	.word	.L1101
	.word	.L1101
	.word	.L1103
	.word	.L1105
	.word	.L1107
	.word	.L1109
.L1103:
	mov	r0, #0x2
	b	.L1112
.L1105:
	mov	r0, #0x1
	b	.L1112
.L1107:
	mov	r0, #0x3
	b	.L1112
.L1109:
	mov	r0, #0x4
	b	.L1112
.L1101:
	add	r0, r2, #0
.L1112:
	pop	{r1}
	bx	r1
.Lfe205:
	.size	 npc_something3,.Lfe205-npc_something3
	.align	2, 0
	.globl	LinkPlayerDetectCollision
	.type	 LinkPlayerDetectCollision,function
	.thumb_func
LinkPlayerDetectCollision:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	mov	ip, r2
	lsl	r3, r3, #0x10
	mov	r4, #0x0
	ldr	r0, .L1126
	mov	r9, r0
	lsr	r2, r3, #0x10
	mov	sl, r2
	asr	r6, r3, #0x10
.L1119:
	mov	r7, ip
	lsl	r3, r7, #0x10
	mov	r0, sl
	lsl	r5, r0, #0x10
	cmp	r4, r8
	beq	.L1118	@cond_branch
	lsl	r0, r4, #0x3
	add	r0, r0, r4
	lsl	r0, r0, #0x2
	mov	r2, r9
	add	r1, r0, r2
	mov	r7, #0x10
	ldrsh	r0, [r1, r7]
	asr	r2, r3, #0x10
	cmp	r0, r2
	bne	.L1123	@cond_branch
	mov	r7, #0x12
	ldrsh	r0, [r1, r7]
	cmp	r0, r6
	beq	.L1122	@cond_branch
.L1123:
	mov	r7, #0x14
	ldrsh	r0, [r1, r7]
	cmp	r0, r2
	bne	.L1118	@cond_branch
	mov	r0, #0x16
	ldrsh	r1, [r1, r0]
	asr	r0, r5, #0x10
	cmp	r1, r0
	bne	.L1118	@cond_branch
.L1122:
	mov	r0, #0x1
	b	.L1125
.L1127:
	.align	2, 0
.L1126:
	.word	gMapObjects
.L1118:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0xf
	bls	.L1119	@cond_branch
	asr	r0, r3, #0x10
	asr	r1, r5, #0x10
	bl	MapGridIsImpassableAt
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
.L1125:
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe206:
	.size	 LinkPlayerDetectCollision,.Lfe206-LinkPlayerDetectCollision
	.align	2, 0
	.globl	CreateLinkPlayerSprite
	.type	 CreateLinkPlayerSprite,function
	.thumb_func
CreateLinkPlayerSprite:
	push	{r4, r5, lr}
	add	sp, sp, #0xfffffffc
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r2, r5, #0x2
	ldr	r0, .L1130
	add	r2, r2, r0
	ldrb	r1, [r2, #0x2]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L1130+0x4
	add	r4, r0, r1
	ldrb	r0, [r2]
	cmp	r0, #0
	beq	.L1129	@cond_branch
	ldrb	r1, [r4]
	lsl	r1, r1, #0x1e
	lsr	r1, r1, #0x1f
	mov	r0, #0x0
	bl	GetRivalAvatarGraphicsIdByStateIdAndGender
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L1130+0x8
	mov	r2, #0x0
	str	r2, [sp]
	mov	r3, #0x0
	bl	AddPseudoFieldObject
	strb	r0, [r4, #0x4]
	ldrb	r1, [r4, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L1130+0xc
	add	r0, r0, r1
	add	r3, r0, #0
	add	r3, r3, #0x3e
	ldrb	r1, [r3]
	mov	r2, #0x2
	orr	r1, r1, r2
	strb	r1, [r3]
	strh	r5, [r0, #0x2e]
	ldrb	r1, [r4]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r4]
.L1129:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1131:
	.align	2, 0
.L1130:
	.word	gLinkPlayerMapObjects
	.word	gMapObjects
	.word	SpriteCB_LinkPlayer
	.word	gSprites
.Lfe207:
	.size	 CreateLinkPlayerSprite,.Lfe207-CreateLinkPlayerSprite
	.align	2, 0
	.globl	SpriteCB_LinkPlayer
	.type	 SpriteCB_LinkPlayer,function
	.thumb_func
SpriteCB_LinkPlayer:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	mov	r0, #0x2e
	ldrsh	r4, [r5, r0]
	lsl	r4, r4, #0x2
	ldr	r0, .L1136
	add	r4, r4, r0
	ldrb	r1, [r4, #0x2]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L1136+0x4
	add	r6, r0, r1
	ldrh	r0, [r6, #0xc]
	strh	r0, [r5, #0x20]
	ldrh	r0, [r6, #0xe]
	strh	r0, [r5, #0x22]
	ldrb	r0, [r6, #0xb]
	lsr	r0, r0, #0x4
	add	r1, r5, #0
	mov	r2, #0x1
	bl	SetObjectSubpriorityByZCoord
	ldrb	r0, [r6, #0xb]
	lsr	r0, r0, #0x4
	bl	ZCoordToPriority
	mov	r1, #0x3
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r2, [r5, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r5, #0x5]
	ldrb	r0, [r4, #0x3]
	cmp	r0, #0
	bne	.L1133	@cond_branch
	ldrb	r0, [r6, #0x19]
	bl	FieldObjectDirectionToImageAnimId
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r5, #0
	bl	StartSpriteAnim
	b	.L1134
.L1137:
	.align	2, 0
.L1136:
	.word	gLinkPlayerMapObjects
	.word	gMapObjects
.L1133:
	ldrb	r0, [r6, #0x19]
	bl	get_go_image_anim_num
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r5, #0
	bl	StartSpriteAnimIfDifferent
.L1134:
	add	r0, r5, #0
	mov	r1, #0x0
	bl	sub_806487C
	ldrb	r0, [r6]
	lsl	r0, r0, #0x1d
	cmp	r0, #0
	bge	.L1135	@cond_branch
	ldrh	r0, [r5, #0x3c]
	mov	r1, #0x4
	and	r1, r1, r0
	lsl	r1, r1, #0x10
	add	r3, r5, #0
	add	r3, r3, #0x3e
	lsr	r1, r1, #0x12
	lsl	r1, r1, #0x2
	ldrb	r2, [r3]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r3]
	ldrh	r0, [r5, #0x3c]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x3c]
.L1135:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe208:
	.size	 SpriteCB_LinkPlayer,.Lfe208-SpriteCB_LinkPlayer
	.comm	gFieldCallback, 4	@ 4

	.lcomm	gUnknown_03000580,4

	.lcomm	gUnknown_03000584,4

	.lcomm	gUnknown_03000588,1
	.comm	word_3004858, 4	@ 2
	.comm	gUnknown_03004860, 4	@ 1
	.comm	gFieldLinkPlayerCount, 4	@ 1
.text
	.align	2, 0
