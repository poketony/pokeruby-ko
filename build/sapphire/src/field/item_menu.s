@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section ewram_data,"aw"
	.align	2, 0
	.type	 gUnknown_0203853C,object
	.size	 gUnknown_0203853C,4
gUnknown_0203853C:
	.byte	0x0
	.space	3
	.align	2, 0
	.type	 gUnknown_02038540,object
	.size	 gUnknown_02038540,4
gUnknown_02038540:
	.byte	0x0
	.space	3
	.align	2, 0
	.type	 gUnknown_02038544,object
	.size	 gUnknown_02038544,12
gUnknown_02038544:
	.byte	0x0
	.space	11
	.align	2, 0
	.type	 gUnknown_02038550,object
	.size	 gUnknown_02038550,4
gUnknown_02038550:
	.byte	0x0
	.space	3
	.align	2, 0
	.type	 gUnknown_02038554,object
	.size	 gUnknown_02038554,4
gUnknown_02038554:
	.byte	0x0
	.space	3
	.type	 gUnknown_02038558,object
	.size	 gUnknown_02038558,1
gUnknown_02038558:
	.byte	0x0
	.type	 sCurrentBagPocket,object
	.size	 sCurrentBagPocket,1
sCurrentBagPocket:
	.byte	0x0
	.type	 gUnknown_0203855A,object
	.size	 gUnknown_0203855A,1
gUnknown_0203855A:
	.byte	0x0
	.type	 gUnknown_0203855B,object
	.size	 gUnknown_0203855B,1
gUnknown_0203855B:
	.byte	0x0
	.type	 gUnknown_0203855C,object
	.size	 gUnknown_0203855C,1
gUnknown_0203855C:
	.byte	0x0
	.globl	gScriptItemId
	.align	1, 0
	.type	 gScriptItemId,object
	.size	 gScriptItemId,2
gScriptItemId:
	.short	0x0
	.globl	gUnknown_02038560
	.type	 gUnknown_02038560,object
	.size	 gUnknown_02038560,1
gUnknown_02038560:
	.byte	0x0
	.globl	gUnknown_02038561
	.type	 gUnknown_02038561,object
	.size	 gUnknown_02038561,1
gUnknown_02038561:
	.byte	0x0
	.type	 gUnknown_02038562,object
	.size	 gUnknown_02038562,1
gUnknown_02038562:
	.byte	0x0
	.type	 gUnknown_02038563,object
	.size	 gUnknown_02038563,1
gUnknown_02038563:
	.byte	0x0
	.type	 gUnknown_02038564,object
	.size	 gUnknown_02038564,1
gUnknown_02038564:
	.byte	0x0
	.align	2, 0
	.type	 sPokeballSpriteId,object
	.size	 sPokeballSpriteId,1
sPokeballSpriteId:
	.byte	0x0
	.globl	gFieldItemUseCallback
.data
	.align	2, 0
	.type	 gFieldItemUseCallback,object
	.size	 gFieldItemUseCallback,4
gFieldItemUseCallback:
	.word	0x0
	.globl	gBagPockets
	.section .rodata
	.align	2, 0
	.type	 gBagPockets,object
	.size	 gBagPockets,40
gBagPockets:
	.word	gSaveBlock1+0x560
	.byte	0x14
	.space	3
	.word	gSaveBlock1+0x600
	.byte	0x10
	.space	3
	.word	gSaveBlock1+0x640
	.byte	0x40
	.space	3
	.word	gSaveBlock1+0x740
	.byte	0x2e
	.space	3
	.word	gSaveBlock1+0x5b0
	.byte	0x14
	.space	3
	.align	2, 0
	.type	 sItemPopupMenuActions,object
sItemPopupMenuActions:
	.word	OtherText_Use
	.word	HandlePopupMenuAction_UseOnField
	.word	OtherText_Toss
	.word	HandlePopupMenuAction_Toss
	.word	gOtherText_CancelNoTerminator
	.word	sub_80A5F80
	.word	OtherText_Register
	.word	HandlePopupMenuAction_Register
	.word	OtherText_Use
	.word	HandlePopupMenuAction_UseInBattle
	.word	gOtherText_CancelNoTerminator
	.word	sub_80A7124
	.word	OtherText_Give2
	.word	HandlePopupMenuAction_Give
	.word	OtherText_CheckTag
	.word	HandlePopupMenuAction_CheckTag
	.word	gOtherText_CancelWithTerminator
	.word	0x0
	.word	OtherText_Confirm
	.word	HandlePopupMenuAction_Confirm
	.size	 sItemPopupMenuActions,80
	.type	 sItemPopupMenuChoicesTable,object
sItemPopupMenuChoicesTable:
	.byte	0x0
	.byte	0x1
	.byte	0x6
	.byte	0x2
	.space	2
	.byte	0x6
	.byte	0x1
	.byte	0x8
	.byte	0x2
	.space	2
	.byte	0x0
	.byte	0x8
	.byte	0x6
	.byte	0x2
	.space	2
	.byte	0x7
	.byte	0x0
	.byte	0x1
	.byte	0x8
	.byte	0x6
	.byte	0x2
	.byte	0x0
	.byte	0x8
	.byte	0x3
	.byte	0x2
	.space	2
	.size	 sItemPopupMenuChoicesTable,30
	.globl	gUnknown_083C16AE
	.type	 gUnknown_083C16AE,object
gUnknown_083C16AE:
	.byte	0x6
	.byte	0x2
	.byte	0x6
	.byte	0x2
	.byte	0x6
	.byte	0x2
	.byte	0x6
	.byte	0x2
	.byte	0x2
	.byte	0x0
	.size	 gUnknown_083C16AE,10
	.globl	gUnknown_083C16B8
	.type	 gUnknown_083C16B8,object
gUnknown_083C16B8:
	.byte	0x7
	.byte	0x9
	.byte	0x8
	.byte	0x2
	.size	 gUnknown_083C16B8,4
	.align	2, 0
	.type	 gUnknown_083C16BC,object
gUnknown_083C16BC:
	.word	OnItemSelect_Field05
	.word	OnBagClose_Field0
	.word	OnItemSelect_Battle
	.word	OnBagClose_Battle
	.word	OnItemSelect_PkmnList
	.word	OnBagClose_PkmnList
	.word	OnItemSelect_Shop
	.word	OnBagClose_Shop
	.word	OnItemSelect_Field4
	.word	OnBagClose_Field4
	.word	OnItemSelect_Field05
	.word	OnBagClose_Field5
	.word	OnItemSelect_PC
	.word	OnBagClose_PC
	.size	 gUnknown_083C16BC,56
	.align	2, 0
	.type	 gUnknown_083C16F4,object
	.size	 gUnknown_083C16F4,8
gUnknown_083C16F4:
	.word	sub_80A5E60
	.word	sub_80A5E90
	.globl	gUnknown_083C16FC
	.align	2, 0
	.type	 gUnknown_083C16FC,object
	.size	 gUnknown_083C16FC,8
gUnknown_083C16FC:
	.word	sub_80A65AC
	.word	sub_80A6618
.text
	.align	2, 0
	.type	 sub_80A3118,function
	.thumb_func
sub_80A3118:
	push	{lr}
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	RunTasks
	bl	sub_80A740C
	bl	UpdatePaletteFade
	pop	{r0}
	bx	r0
.Lfe1:
	.size	 sub_80A3118,.Lfe1-sub_80A3118
	.align	2, 0
	.type	 sub_80A3134,function
	.thumb_func
sub_80A3134:
	push	{lr}
	bl	LoadOam
	bl	ProcessSpriteCopyRequests
	bl	TransferPlttBuffer
	ldr	r1, .L4
	ldr	r2, .L4+0x4
	ldr	r0, .L4+0x8
	str	r1, [r0]
	str	r2, [r0, #0x4]
	ldr	r3, .L4+0xc
	str	r3, [r0, #0x8]
	ldr	r2, [r0, #0x8]
	mov	r2, #0x80
	lsl	r2, r2, #0x4
	add	r1, r1, r2
	ldr	r2, .L4+0x10
	str	r1, [r0]
	str	r2, [r0, #0x4]
	str	r3, [r0, #0x8]
	ldr	r0, [r0, #0x8]
	pop	{r0}
	bx	r0
.L5:
	.align	2, 0
.L4:
	.word	gBGTilemapBuffers+0x800
	.word	0x6002000
	.word	0x40000d4
	.word	0x80000400
	.word	0x6006000
.Lfe2:
	.size	 sub_80A3134,.Lfe2-sub_80A3134
	.align	2, 0
	.type	 SetupBagMultistep,function
	.thumb_func
SetupBagMultistep:
	push	{r4, r5, lr}
	add	sp, sp, #0xfffffffc
	ldr	r0, .L34
	ldr	r1, .L34+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x10
	bls	.LCB74
	b	.L7	@long jump
.LCB74:
	lsl	r0, r0, #0x2
	ldr	r1, .L34+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L35:
	.align	2, 0
.L34:
	.word	gMain
	.word	0x43c
	.word	.L29
	.align	2, 0
	.align	2, 0
.L29:
	.word	.L8
	.word	.L9
	.word	.L10
	.word	.L11
	.word	.L12
	.word	.L13
	.word	.L14
	.word	.L16
	.word	.L17
	.word	.L18
	.word	.L20
	.word	.L22
	.word	.L23
	.word	.L24
	.word	.L25
	.word	.L26
	.word	.L28
.L8:
	bl	sub_80F9438
	bl	sub_80A34E8
	b	.L32
.L9:
	bl	remove_some_task
	ldr	r1, .L36
	ldr	r0, .L36+0x4
	add	r1, r1, r0
	b	.L33
.L37:
	.align	2, 0
.L36:
	.word	gMain
	.word	0x43c
.L10:
	bl	gpu_pal_allocator_reset__manage_upper_four
	b	.L32
.L11:
	bl	sub_80F9020
	ldr	r0, .L38
	ldr	r1, .L38+0x4
	add	r0, r0, r1
	mov	r1, #0x0
	strb	r1, [r0]
	b	.L32
.L39:
	.align	2, 0
.L38:
	.word	gSharedMem
	.word	0x1ffff
.L12:
	bl	ResetPaletteFade
	ldr	r2, .L40
	ldrb	r0, [r2, #0x8]
	mov	r1, #0x80
	orr	r0, r0, r1
	strb	r0, [r2, #0x8]
	ldr	r1, .L40+0x4
	ldr	r0, .L40+0x8
	add	r1, r1, r0
	b	.L33
.L41:
	.align	2, 0
.L40:
	.word	gPaletteFade
	.word	gMain
	.word	0x43c
.L13:
	bl	ResetSpriteData
	b	.L32
.L14:
	bl	LoadBagGraphicsMultistep
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB170
	b	.L7	@long jump
.LCB170:
	ldr	r1, .L42
	ldr	r0, .L42+0x4
	add	r1, r1, r0
	b	.L33
.L43:
	.align	2, 0
.L42:
	.word	gMain
	.word	0x43c
.L16:
	ldr	r0, .L44
	bl	SetUpWindowConfig
	b	.L32
.L45:
	.align	2, 0
.L44:
	.word	gWindowConfig_81E6DFC
.L17:
	ldr	r0, .L46
	bl	MultistepInitMenuWindowBegin
	ldr	r1, .L46+0x4
	ldr	r0, .L46+0x8
	add	r1, r1, r0
	b	.L33
.L47:
	.align	2, 0
.L46:
	.word	gWindowConfig_81E6DFC
	.word	gMain
	.word	0x43c
.L18:
	bl	MultistepInitMenuWindowContinue
	cmp	r0, #0
	bne	.LCB219
	b	.L7	@long jump
.LCB219:
	b	.L32
.L20:
	bl	sub_80F944C
	bl	LoadScrollIndicatorPalette
	mov	r0, #0x0
	mov	r1, #0xac
	mov	r2, #0xc
	bl	CreateVerticalScrollIndicators
	mov	r0, #0x1
	mov	r1, #0xac
	mov	r2, #0x94
	bl	CreateVerticalScrollIndicators
	mov	r0, #0x2
	mov	r1, #0x1c
	mov	r2, #0x58
	bl	CreateVerticalScrollIndicators
	mov	r0, #0x3
	mov	r1, #0x64
	mov	r2, #0x58
	bl	CreateVerticalScrollIndicators
	mov	r0, #0x0
	mov	r1, #0x2
	bl	sub_80F9988
	mov	r0, #0x1
	mov	r1, #0x2
	bl	sub_80F9988
	mov	r0, #0x2
	mov	r1, #0x2
	bl	sub_80F9988
	mov	r0, #0x3
	mov	r1, #0x2
	bl	sub_80F9988
	ldr	r0, .L48
	ldrb	r0, [r0]
	sub	r0, r0, #0x4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bhi	.L21	@cond_branch
	mov	r0, #0x2
	mov	r1, #0x1
	bl	sub_80F979C
	mov	r0, #0x3
	mov	r1, #0x1
	bl	sub_80F979C
.L21:
	ldr	r1, .L48+0x4
	ldr	r0, .L48+0x8
	add	r1, r1, r0
	b	.L33
.L49:
	.align	2, 0
.L48:
	.word	sReturnLocation
	.word	gMain
	.word	0x43c
.L22:
	ldr	r1, .L50
	mov	r0, #0x10
	strb	r0, [r1]
	ldr	r4, .L50+0x4
	ldr	r5, .L50+0x8
	ldrb	r1, [r5]
	add	r1, r1, #0x1
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	sub_80A39B8
	ldrb	r1, [r5]
	add	r0, r4, #0
	bl	DrawPocketIndicatorDots
	bl	UpdateAllBagPockets
	ldr	r4, .L50+0xc
	ldr	r0, [r4, #0x10]		@ created by thumb_load_double_from_address
	ldr	r1, [r4, #0x14]		@ created by thumb_load_double_from_address
	bl	SortItemSlots
	ldr	r0, [r4, #0x18]		@ created by thumb_load_double_from_address
	ldr	r1, [r4, #0x1c]		@ created by thumb_load_double_from_address
	bl	SortItemSlots
	bl	sub_80A3D40
	ldr	r1, .L50+0x10
	mov	r0, #0x0
	ldrsb	r0, [r5, r0]
	lsl	r0, r0, #0x3
	add	r0, r0, r4
	ldr	r0, [r0]
	str	r0, [r1]
	bl	sub_80A362C
	b	.L32
.L51:
	.align	2, 0
.L50:
	.word	gUnknown_0203855A
	.word	gBGTilemapBuffers+0x1000
	.word	sCurrentBagPocket
	.word	gBagPockets
	.word	gCurrentBagPocketItemSlots
.L23:
	ldr	r0, .L52
	mov	r1, #0x0
	mov	r2, #0x7
	bl	sub_80A48E8
	ldr	r1, .L52+0x4
	ldr	r4, .L52+0x8
	mov	r0, #0x0
	ldrsb	r0, [r4, r0]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r1, [r0, #0x1]
	ldrb	r0, [r0]
	add	r1, r1, r0
	ldr	r0, .L52+0xc
	ldr	r0, [r0]
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	mov	r2, #0x0
	ldrsh	r0, [r1, r2]
	bl	ItemListMenu_InitDescription
	bl	ItemListMenu_InitMenu
	ldr	r1, .L52+0x10
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	strb	r0, [r1]
	ldr	r1, .L52+0x14
	mov	r0, #0x0
	strb	r0, [r1]
	ldr	r1, .L52+0x18
	ldr	r0, .L52+0x1c
	add	r1, r1, r0
	b	.L33
.L53:
	.align	2, 0
.L52:
	.word	0xffff
	.word	gBagPocketScrollStates
	.word	sCurrentBagPocket
	.word	gCurrentBagPocketItemSlots
	.word	gUnknown_0203855B
	.word	gUnknown_0203855C
	.word	gMain
	.word	0x43c
.L24:
	bl	CreateBagSprite
	mov	r0, #0x0
	bl	CreateBagPokeballSprite
	bl	sub_80A3740
	b	.L32
.L25:
	ldr	r3, .L54
	ldrh	r2, [r3]
	mov	r0, #0x0
	strh	r0, [r3]
	ldr	r4, .L54+0x4
	ldrh	r0, [r4]
	mov	r1, #0x1
	orr	r0, r0, r1
	strh	r0, [r4]
	strh	r2, [r3]
	ldr	r2, .L54+0x8
	ldrh	r0, [r2]
	mov	r1, #0x8
	orr	r0, r0, r1
	strh	r0, [r2]
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	ldr	r2, .L54+0xc
	ldrb	r1, [r2, #0x8]
	mov	r0, #0x7f
	and	r0, r0, r1
	strb	r0, [r2, #0x8]
	ldr	r1, .L54+0x10
	ldr	r0, .L54+0x14
	add	r1, r1, r0
	b	.L33
.L55:
	.align	2, 0
.L54:
	.word	0x4000208
	.word	0x4000200
	.word	0x4000004
	.word	gPaletteFade
	.word	gMain
	.word	0x43c
.L26:
	bl	sub_8055870
	cmp	r0, #0x1
	beq	.L7	@cond_branch
.L32:
	ldr	r1, .L56
	ldr	r2, .L56+0x4
	add	r1, r1, r2
.L33:
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L7
.L57:
	.align	2, 0
.L56:
	.word	gMain
	.word	0x43c
.L28:
	ldr	r0, .L58
	bl	SetVBlankCallback
	ldr	r0, .L58+0x4
	bl	SetMainCallback2
	bl	sub_80A751C
	bl	sub_80A7630
	bl	sub_80A770C
	bl	sub_80A7828
	bl	sub_80A78B8
	mov	r0, #0x1
	b	.L31
.L59:
	.align	2, 0
.L58:
	.word	sub_80A3134
	.word	sub_80A3118
.L7:
	mov	r0, #0x0
.L31:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe3:
	.size	 SetupBagMultistep,.Lfe3-SetupBagMultistep
	.align	2, 0
	.type	 sub_80A34B4,function
	.thumb_func
sub_80A34B4:
	push	{lr}
.L61:
	bl	SetupBagMultistep
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L64	@cond_branch
	bl	sub_80F9344
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L61	@cond_branch
	mov	r0, #0x0
	b	.L67
.L64:
	ldr	r1, .L68
	mov	r0, #0x0
	strb	r0, [r1]
	bl	ResetTasks
	mov	r0, #0x1
.L67:
	pop	{r1}
	bx	r1
.L69:
	.align	2, 0
.L68:
	.word	sPopupMenuSelection
.Lfe4:
	.size	 sub_80A34B4,.Lfe4-sub_80A34B4
	.align	2, 0
	.globl	sub_80A34E8
	.type	 sub_80A34E8,function
	.thumb_func
sub_80A34E8:
	push	{lr}
	bl	sub_80F9368
	ldr	r1, .L71
	ldr	r2, .L71+0x4
	add	r0, r2, #0
	strh	r0, [r1]
	sub	r1, r1, #0x2
	ldr	r2, .L71+0x8
	add	r0, r2, #0
	strh	r0, [r1]
	sub	r1, r1, #0xa
	mov	r2, #0xba
	lsl	r2, r2, #0x5
	add	r0, r2, #0
	strh	r0, [r1]
	add	r1, r1, #0x50
	mov	r0, #0x0
	strh	r0, [r1]
	pop	{r0}
	bx	r0
.L72:
	.align	2, 0
.L71:
	.word	0x400000c
	.word	0xc06
	.word	0x405
.Lfe5:
	.size	 sub_80A34E8,.Lfe5-sub_80A34E8
	.align	2, 0
	.type	 LoadBagGraphicsMultistep,function
	.thumb_func
LoadBagGraphicsMultistep:
	push	{lr}
	ldr	r0, .L90
	ldr	r1, .L90+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x4
	bls	.LCB582
	b	.L74	@long jump
.LCB582:
	lsl	r0, r0, #0x2
	ldr	r1, .L90+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L91:
	.align	2, 0
.L90:
	.word	gSharedMem
	.word	0x1ffff
	.word	.L86
	.align	2, 0
	.align	2, 0
.L86:
	.word	.L75
	.word	.L76
	.word	.L77
	.word	.L81
	.word	.L85
.L75:
	ldr	r0, .L92
	ldr	r1, .L92+0x4
	bl	LZDecompressVram
	b	.L84
.L93:
	.align	2, 0
.L92:
	.word	gBagScreen_Gfx
	.word	0x6004000
.L76:
	ldr	r0, .L94
	ldr	r1, .L94+0x4
	mov	r2, #0x80
	lsl	r2, r2, #0x3
	bl	CpuSet
	b	.L84
.L95:
	.align	2, 0
.L94:
	.word	gUnknown_08E77004
	.word	gBGTilemapBuffers+0x1000
.L77:
	ldr	r0, .L96
	ldrb	r0, [r0, #0x8]
	cmp	r0, #0
	beq	.L79	@cond_branch
	ldr	r0, .L96+0x4
	ldrb	r0, [r0]
	cmp	r0, #0x7
	bne	.L78	@cond_branch
.L79:
	ldr	r0, .L96+0x8
	mov	r1, #0x0
	mov	r2, #0x40
	bl	LoadCompressedPalette
	b	.L84
.L97:
	.align	2, 0
.L96:
	.word	gSaveBlock2
	.word	sReturnLocation
	.word	gBagScreenMale_Pal
.L78:
	ldr	r0, .L98
	mov	r1, #0x0
	mov	r2, #0x40
	bl	LoadCompressedPalette
	b	.L89
.L99:
	.align	2, 0
.L98:
	.word	gBagScreenFemale_Pal
.L81:
	ldr	r0, .L100
	ldrb	r0, [r0, #0x8]
	cmp	r0, #0
	beq	.L83	@cond_branch
	ldr	r0, .L100+0x4
	ldrb	r0, [r0]
	cmp	r0, #0x7
	bne	.L82	@cond_branch
.L83:
	ldr	r0, .L100+0x8
	bl	LoadCompressedObjectPic
	b	.L84
.L101:
	.align	2, 0
.L100:
	.word	gSaveBlock2
	.word	sReturnLocation
	.word	sMaleBagSpriteSheet
.L82:
	ldr	r0, .L102
	bl	LoadCompressedObjectPic
.L89:
.L84:
	ldr	r1, .L102+0x4
	ldr	r0, .L102+0x8
	add	r1, r1, r0
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L74
.L103:
	.align	2, 0
.L102:
	.word	sFemaleBagSpriteSheet
	.word	gSharedMem
	.word	0x1ffff
.L85:
	ldr	r0, .L104
	bl	LoadCompressedObjectPalette
	ldr	r0, .L104+0x4
	ldr	r1, .L104+0x8
	add	r0, r0, r1
	mov	r1, #0x0
	strb	r1, [r0]
	mov	r0, #0x1
	b	.L88
.L105:
	.align	2, 0
.L104:
	.word	sBagSpritePalette
	.word	gSharedMem
	.word	0x1ffff
.L74:
	mov	r0, #0x0
.L88:
	pop	{r1}
	bx	r1
.Lfe6:
	.size	 LoadBagGraphicsMultistep,.Lfe6-LoadBagGraphicsMultistep
	.align	2, 0
	.type	 sub_80A362C,function
	.thumb_func
sub_80A362C:
	push	{r4, r5, r6, lr}
	mov	r4, #0x0
	ldr	r6, .L118
	ldr	r5, .L118+0x4
.L110:
	ldrb	r0, [r6]
	cmp	r0, #0x5
	bne	.L111	@cond_branch
	lsl	r1, r4, #0x2
	add	r0, r1, r5
	ldrb	r0, [r0, #0x2]
	sub	r0, r0, #0x1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	b	.L112
.L119:
	.align	2, 0
.L118:
	.word	sReturnLocation
	.word	gBagPocketScrollStates
.L111:
	lsl	r1, r4, #0x2
	add	r0, r1, r5
	ldrb	r3, [r0, #0x2]
.L112:
	add	r1, r1, r5
	ldrb	r0, [r1, #0x1]
	cmp	r0, #0
	beq	.L113	@cond_branch
	ldrb	r2, [r1, #0x3]
	add	r0, r0, r2
	cmp	r0, r3
	ble	.L109	@cond_branch
	sub	r0, r3, r2
	strb	r0, [r1, #0x1]
	b	.L109
.L113:
	ldrb	r0, [r1]
	cmp	r0, r3
	bls	.L109	@cond_branch
	strb	r3, [r1]
.L109:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x4
	bls	.L110	@cond_branch
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe7:
	.size	 sub_80A362C,.Lfe7-sub_80A362C
	.align	2, 0
	.globl	ResetBagScrollPositions
	.type	 ResetBagScrollPositions,function
	.thumb_func
ResetBagScrollPositions:
	push	{r4, lr}
	mov	r2, #0x0
	ldr	r4, .L126
	ldr	r3, .L126+0x4
	mov	r1, #0x0
.L124:
	lsl	r0, r2, #0x2
	add	r0, r0, r3
	strb	r1, [r0]
	strb	r1, [r0, #0x1]
	strb	r1, [r0, #0x2]
	strb	r1, [r0, #0x3]
	add	r0, r2, #0x1
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	cmp	r2, #0x4
	bls	.L124	@cond_branch
	mov	r0, #0x0
	strb	r0, [r4]
	pop	{r4}
	pop	{r0}
	bx	r0
.L127:
	.align	2, 0
.L126:
	.word	sCurrentBagPocket
	.word	gBagPocketScrollStates
.Lfe8:
	.size	 ResetBagScrollPositions,.Lfe8-ResetBagScrollPositions
	.align	2, 0
	.type	 sub_80A36B8,function
	.thumb_func
sub_80A36B8:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	r6, r0, #0
	ldr	r0, [sp, #0x18]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r8, r1
	lsl	r2, r2, #0x18
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	ip, r3
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsr	r2, r2, #0x18
	add	r0, r2, r0
	cmp	r2, r0
	bgt	.L130	@cond_branch
	add	r7, r0, #0
.L132:
	mov	r1, r8
	mov	r3, ip
	add	r0, r1, r3
	add	r4, r2, #0x1
	cmp	r1, r0
	bgt	.L131	@cond_branch
	lsl	r3, r2, #0x5
	mov	r5, #0x0
	add	r2, r0, #0
.L136:
	add	r0, r1, r3
	lsl	r0, r0, #0x1
	add	r0, r0, r6
	strh	r5, [r0]
	add	r0, r1, #0x1
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	cmp	r1, r2
	ble	.L136	@cond_branch
.L131:
	lsl	r0, r4, #0x10
	lsr	r2, r0, #0x10
	cmp	r2, r7
	ble	.L132	@cond_branch
.L130:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe9:
	.size	 sub_80A36B8,.Lfe9-sub_80A36B8
	.align	2, 0
	.globl	ClearBag
	.type	 ClearBag,function
	.thumb_func
ClearBag:
	push	{r4, r5, lr}
	mov	r4, #0x0
	ldr	r5, .L145
.L143:
	lsl	r1, r4, #0x3
	add	r1, r1, r5
	ldr	r0, [r1]
	ldrb	r1, [r1, #0x4]
	bl	ClearItemSlots
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r4, #0x4
	bls	.L143	@cond_branch
	bl	ResetBagScrollPositions
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L146:
	.align	2, 0
.L145:
	.word	gBagPockets
.Lfe10:
	.size	 ClearBag,.Lfe10-ClearBag
	.section .rodata
	.align	1, 0
.LC43:
	.short	0x41ee
	.short	0x7fff
.text
	.align	2, 0
	.type	 sub_80A3740,function
	.thumb_func
sub_80A3740:
	push	{lr}
	add	sp, sp, #0xfffffffc
	ldr	r1, .L148
	mov	r0, sp
	mov	r2, #0x4
	bl	memcpy
	mov	r0, sp
	add	r0, r0, #0x2
	mov	r1, #0xd1
	mov	r2, #0x2
	bl	LoadPalette
	mov	r0, sp
	mov	r1, #0xd8
	mov	r2, #0x2
	bl	LoadPalette
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.L149:
	.align	2, 0
.L148:
	.word	.LC43
.Lfe11:
	.size	 sub_80A3740,.Lfe11-sub_80A3740
	.align	2, 0
	.type	 sub_80A3770,function
	.thumb_func
sub_80A3770:
	push	{lr}
	ldr	r0, .L155
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L151	@cond_branch
	ldr	r3, .L155+0x4
	ldr	r2, .L155+0x8
	mov	r1, #0x0
	ldrsb	r1, [r2, r1]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x1
	ldr	r1, .L155+0xc
	add	r0, r0, r1
	str	r0, [r3]
	mov	r0, #0x0
	ldrsb	r0, [r2, r0]
	cmp	r0, #0x3
	beq	.L152	@cond_branch
	ldr	r1, .L155+0x10
	mov	r0, #0x4
	b	.L154
.L156:
	.align	2, 0
.L155:
	.word	sReturnLocation
	.word	sPopupMenuActionList
	.word	sCurrentBagPocket
	.word	sItemPopupMenuChoicesTable
	.word	gUnknown_02038564
.L152:
	ldr	r1, .L157
	mov	r0, #0x6
.L154:
	strb	r0, [r1]
.L151:
	pop	{r0}
	bx	r0
.L158:
	.align	2, 0
.L157:
	.word	gUnknown_02038564
.Lfe12:
	.size	 sub_80A3770,.Lfe12-sub_80A3770
	.align	2, 0
	.type	 sub_80A37C0,function
	.thumb_func
sub_80A37C0:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L160
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldr	r0, .L160+0x4
	str	r0, [r1]
	mov	r0, #0x0
	bl	StartVerticalScrollIndicators
	mov	r0, #0x1
	bl	StartVerticalScrollIndicators
	mov	r0, #0x2
	bl	StartVerticalScrollIndicators
	mov	r0, #0x3
	bl	StartVerticalScrollIndicators
	pop	{r0}
	bx	r0
.L161:
	.align	2, 0
.L160:
	.word	gTasks
	.word	sub_80A50C8
.Lfe13:
	.size	 sub_80A37C0,.Lfe13-sub_80A37C0
	.align	2, 0
	.type	 sub_80A37F8,function
	.thumb_func
sub_80A37F8:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	ldr	r6, .L171
	ldrb	r5, [r6]
	cmp	r5, #0xf
	bhi	.L163	@cond_branch
	add	r0, r5, #0x1
	strb	r0, [r6]
	ldr	r4, .L171+0x4
	ldrb	r2, [r6]
	add	r0, r4, #0
	add	r1, r5, #0
	mov	r3, #0x4f
	bl	sub_80A396C
	ldr	r0, .L171+0x8
	ldrb	r1, [r0]
	add	r1, r1, #0x1
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldrb	r2, [r6]
	lsr	r2, r2, #0x1
	ldr	r3, .L171+0xc
	lsl	r0, r7, #0x2
	add	r0, r0, r7
	lsl	r0, r0, #0x3
	add	r0, r0, r3
	mov	r3, #0x12
	ldrsb	r3, [r0, r3]
	add	r0, r4, #0
	bl	sub_80A39E4
	ldr	r4, .L171+0x10
	mov	r0, #0x1
	strb	r0, [r4]
	lsr	r1, r5, #0x1
	ldrb	r2, [r6]
	lsr	r2, r2, #0x1
	sub	r2, r2, #0x1
	add	r0, r7, #0
	bl	sub_80A48E8
	mov	r0, #0x0
	strb	r0, [r4]
	b	.L162
.L172:
	.align	2, 0
.L171:
	.word	gUnknown_0203855A
	.word	gBGTilemapBuffers+0x1000
	.word	sCurrentBagPocket
	.word	gTasks
	.word	gUnknown_02038558
.L163:
	ldr	r0, .L173
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L164	@cond_branch
	ldr	r1, .L173+0x4
	ldr	r0, .L173+0x8
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r1, [r0, #0x1]
	ldrb	r0, [r0]
	add	r1, r1, r0
	ldr	r0, .L173+0xc
	ldr	r0, [r0]
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	mov	r2, #0x0
	ldrsh	r0, [r1, r2]
	ldr	r4, .L173+0x10
	ldrb	r1, [r4]
	bl	ItemListMenu_ChangeDescription
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	strb	r0, [r4]
	b	.L165
.L174:
	.align	2, 0
.L173:
	.word	gLinkOpen
	.word	gBagPocketScrollStates
	.word	sCurrentBagPocket
	.word	gCurrentBagPocketItemSlots
	.word	gUnknown_02038562
.L164:
	ldr	r1, .L175
	ldrb	r0, [r1]
	cmp	r0, #0x2
	bhi	.L165	@cond_branch
	ldr	r5, .L175+0x4
	add	r4, r1, #0
.L168:
	ldr	r0, .L175+0x8
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldrb	r1, [r0, #0x1]
	ldrb	r0, [r0]
	add	r1, r1, r0
	ldr	r0, .L175+0xc
	ldr	r0, [r0]
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	mov	r2, #0x0
	ldrsh	r0, [r1, r2]
	ldrb	r1, [r4]
	bl	ItemListMenu_ChangeDescription
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	strb	r0, [r4]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x2
	bls	.L168	@cond_branch
.L165:
	ldr	r0, .L175
	ldrb	r0, [r0]
	cmp	r0, #0x3
	bne	.L162	@cond_branch
	ldr	r1, .L175+0x10
	mov	r0, #0x10
	strb	r0, [r1]
	ldr	r1, .L175+0x14
	ldr	r0, .L175+0x8
	ldrb	r0, [r0]
	add	r0, r0, #0x1
	strb	r0, [r1]
	ldr	r0, .L175+0x18
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	sub_80A37C0
	add	r0, r7, #0
	bl	DestroyTask
	bl	ItemListMenu_InitMenu
	mov	r0, #0x2
	mov	r1, #0x0
	bl	sub_80F979C
	mov	r0, #0x3
	mov	r1, #0x0
	bl	sub_80F979C
.L162:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L176:
	.align	2, 0
.L175:
	.word	gUnknown_02038562
	.word	gBagPocketScrollStates
	.word	sCurrentBagPocket
	.word	gCurrentBagPocketItemSlots
	.word	gUnknown_0203855A
	.word	gUnknown_0203855B
	.word	sub_80A4F68
.Lfe14:
	.size	 sub_80A37F8,.Lfe14-sub_80A37F8
	.align	2, 0
	.type	 sub_80A3954,function
	.thumb_func
sub_80A3954:
	push	{lr}
	add	r1, r0, #0
	ldr	r0, .L178
	mov	r2, #0x80
	lsl	r2, r2, #0x3
	bl	CpuSet
	pop	{r0}
	bx	r0
.L179:
	.align	2, 0
.L178:
	.word	gUnknown_08E77004
.Lfe15:
	.size	 sub_80A3954,.Lfe15-sub_80A3954
	.align	2, 0
	.type	 sub_80A396C,function
	.thumb_func
sub_80A396C:
	push	{r4, r5, r6, r7, lr}
	lsl	r1, r1, #0x18
	lsr	r5, r1, #0x18
	add	r4, r5, #0
	lsl	r2, r2, #0x18
	lsr	r7, r2, #0x18
	lsl	r3, r3, #0x18
	lsr	r6, r3, #0x18
	add	r1, r4, #0x2
	lsl	r1, r1, #0x6
	add	r1, r1, #0x1c
	add	r2, r0, r1
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r7, r4
	bls	.L182	@cond_branch
.L183:
	mov	r1, #0x0
	add	r3, r5, #0x1
	add	r4, r2, #0
	add	r4, r4, #0x40
.L187:
	lsl	r0, r1, #0x1
	add	r0, r0, r2
	strh	r6, [r0]
	add	r0, r1, #0x1
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	cmp	r1, #0xe
	bls	.L187	@cond_branch
	add	r2, r4, #0
	add	r1, r5, #0
	lsl	r0, r3, #0x18
	lsr	r5, r0, #0x18
	cmp	r7, r1
	bhi	.L183	@cond_branch
.L182:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe16:
	.size	 sub_80A396C,.Lfe16-sub_80A396C
	.align	2, 0
	.type	 sub_80A39B8,function
	.thumb_func
sub_80A39B8:
	push	{lr}
	add	sp, sp, #0xfffffff0
	lsl	r1, r1, #0x19
	lsr	r1, r1, #0x18
	ldr	r3, .L191
	mov	r2, #0x0
	str	r2, [sp]
	str	r1, [sp, #0x4]
	mov	r1, #0x8
	str	r1, [sp, #0x8]
	mov	r1, #0x2
	str	r1, [sp, #0xc]
	mov	r1, #0x4
	mov	r2, #0xa
	bl	sub_809D104
	add	sp, sp, #0x10
	pop	{r0}
	bx	r0
.L192:
	.align	2, 0
.L191:
	.word	gUnknown_08E96EC8
.Lfe17:
	.size	 sub_80A39B8,.Lfe17-sub_80A39B8
	.align	2, 0
	.type	 sub_80A39E4,function
	.thumb_func
sub_80A39E4:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #0xfffffff0
	mov	r8, r0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r4, r1, #0
	lsl	r2, r2, #0x18
	lsr	r6, r2, #0x18
	add	r5, r6, #0
	lsl	r2, r1, #0x1
	mov	r9, r2
	lsl	r3, r3, #0x18
	asr	r3, r3, #0x18
	mov	r0, #0x1
	neg	r0, r0
	cmp	r3, r0
	bne	.L194	@cond_branch
	add	r0, r1, #0x1
	lsl	r7, r0, #0x1
	cmp	r1, #0x5
	bne	.L195	@cond_branch
	mov	r7, #0x2
.L195:
	ldr	r0, .L199
	mov	sl, r0
	mov	r4, #0x8
	sub	r4, r4, r6
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	str	r4, [sp]
	str	r2, [sp, #0x4]
	str	r6, [sp, #0x8]
	mov	r0, #0x2
	mov	r9, r0
	str	r0, [sp, #0xc]
	mov	r0, r8
	mov	r1, #0x4
	mov	r2, #0xa
	mov	r3, sl
	bl	sub_809D104
	add	r1, r6, #0x4
	mov	r0, #0x0
	str	r0, [sp]
	str	r7, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r0, r9
	str	r0, [sp, #0xc]
	mov	r0, r8
	mov	r2, #0xa
	mov	r3, sl
	bl	sub_809D104
	b	.L196
.L200:
	.align	2, 0
.L199:
	.word	gUnknown_08E96EC8
.L194:
	cmp	r3, #0x1
	bne	.L196	@cond_branch
	sub	r0, r4, #0x1
	lsl	r0, r0, #0x11
	lsr	r7, r0, #0x10
	cmp	r4, #0x1
	bne	.L198	@cond_branch
	mov	r7, #0xa
.L198:
	ldr	r6, .L201
	str	r5, [sp]
	str	r7, [sp, #0x4]
	mov	r0, #0x8
	sub	r0, r0, r5
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	str	r0, [sp, #0x8]
	mov	r4, #0x2
	str	r4, [sp, #0xc]
	mov	r0, r8
	mov	r1, #0x4
	mov	r2, #0xa
	add	r3, r6, #0
	bl	sub_809D104
	mov	r1, #0xc
	sub	r1, r1, r5
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r0, #0x0
	str	r0, [sp]
	mov	r0, r9
	str	r0, [sp, #0x4]
	str	r5, [sp, #0x8]
	str	r4, [sp, #0xc]
	mov	r0, r8
	mov	r2, #0xa
	add	r3, r6, #0
	bl	sub_809D104
.L196:
	add	sp, sp, #0x10
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L202:
	.align	2, 0
.L201:
	.word	gUnknown_08E96EC8
.Lfe18:
	.size	 sub_80A39E4,.Lfe18-sub_80A39E4
	.align	2, 0
	.type	 DrawPocketIndicatorDots,function
	.thumb_func
DrawPocketIndicatorDots:
	push	{r4, r5, r6, lr}
	add	r3, r0, #0
	lsl	r1, r1, #0x18
	lsr	r4, r1, #0x18
	mov	r2, #0x0
	ldr	r1, .L211
	ldr	r0, .L211+0x4
	add	r6, r0, #0
	sub	r0, r0, #0x1
	add	r5, r0, #0
.L207:
	cmp	r2, r4
	bne	.L208	@cond_branch
	lsl	r0, r2, #0x1
	add	r0, r0, r3
	add	r0, r0, r1
	strh	r6, [r0]
	b	.L206
.L212:
	.align	2, 0
.L211:
	.word	0x24a
	.word	0x107d
.L208:
	lsl	r0, r2, #0x1
	add	r0, r0, r3
	add	r0, r0, r1
	strh	r5, [r0]
.L206:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x4
	bls	.L207	@cond_branch
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe19:
	.size	 DrawPocketIndicatorDots,.Lfe19-DrawPocketIndicatorDots
	.align	2, 0
	.type	 ChangePocket,function
	.thumb_func
ChangePocket:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	ldr	r4, .L217
	ldrb	r0, [r4]
	lsl	r1, r1, #0x18
	asr	r6, r1, #0x18
	add	r0, r6, r0
	strb	r0, [r4]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	cmp	r0, #0x4
	ble	.L214	@cond_branch
	mov	r0, #0x0
	strb	r0, [r4]
.L214:
	mov	r0, #0x0
	ldrsb	r0, [r4, r0]
	cmp	r0, #0
	bge	.L215	@cond_branch
	mov	r0, #0x4
	strb	r0, [r4]
.L215:
	bl	sub_80A76A0
	bl	sub_80A7590
	ldr	r2, .L217+0x4
	ldr	r1, .L217+0x8
	mov	r0, #0x0
	ldrsb	r0, [r4, r0]
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r0, [r0]
	str	r0, [r2]
	ldrb	r0, [r4]
	bl	sub_80A3D24
	ldr	r0, .L217+0xc
	mov	r4, #0x0
	strb	r4, [r0]
	add	r0, r5, #0
	bl	sub_80A3954
	add	r0, r5, #0
	mov	r1, #0x0
	mov	r2, #0x10
	mov	r3, #0x3
	bl	sub_80A396C
	add	r0, r5, #0
	mov	r1, #0x0
	bl	sub_80A39B8
	ldr	r1, .L217+0x10
	mov	r0, #0x6
	strb	r0, [r1]
	ldr	r0, .L217+0x14
	strb	r4, [r0]
	ldr	r4, .L217+0x18
	add	r0, r4, #0
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0xff
	bne	.L216	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x8
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
.L216:
	ldr	r1, .L217+0x1c
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	strh	r6, [r0, #0x12]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L218:
	.align	2, 0
.L217:
	.word	sCurrentBagPocket
	.word	gCurrentBagPocketItemSlots
	.word	gBagPockets
	.word	gUnknown_0203855A
	.word	gUnknown_0203855B
	.word	gUnknown_02038562
	.word	sub_80A37F8
	.word	gTasks
.Lfe20:
	.size	 ChangePocket,.Lfe20-ChangePocket
	.align	2, 0
	.type	 SwapItemSlots,function
	.thumb_func
SwapItemSlots:
	ldr	r3, [r0]
	ldr	r2, [r1]
	str	r2, [r0]
	str	r3, [r1]
	bx	lr
.Lfe21:
	.size	 SwapItemSlots,.Lfe21-SwapItemSlots
	.align	2, 0
	.type	 RemoveEmptyItemSlots,function
	.thumb_func
RemoveEmptyItemSlots:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #0xfffffffc
	add	r7, r1, #0
	add	r6, r0, #0
	mov	r3, #0x0
	b	.L232
.L224:
	add	r0, r3, #0x1
	lsl	r1, r0, #0x10
	lsr	r4, r1, #0x10
	lsl	r1, r2, #0x18
	lsr	r1, r1, #0x18
	mov	r8, r0
	cmp	r4, r1
	bcs	.L223	@cond_branch
	lsl	r0, r3, #0x2
	add	r5, r0, r6
	add	r2, r1, #0
.L228:
	ldrh	r0, [r5, #0x2]
	cmp	r0, #0
	bne	.L227	@cond_branch
	lsl	r1, r4, #0x2
	add	r1, r1, r6
	add	r0, r5, #0
	str	r2, [sp]
	bl	SwapItemSlots
	ldr	r2, [sp]
.L227:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r4, r2
	bcc	.L228	@cond_branch
.L223:
	mov	r1, r8
	lsl	r0, r1, #0x10
	lsr	r3, r0, #0x10
.L232:
	add	r2, r7, #0
	lsl	r0, r2, #0x18
	lsr	r0, r0, #0x18
	sub	r0, r0, #0x1
	cmp	r3, r0
	blt	.L224	@cond_branch
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe22:
	.size	 RemoveEmptyItemSlots,.Lfe22-RemoveEmptyItemSlots
	.align	2, 0
	.type	 SortItemSlots,function
	.thumb_func
SortItemSlots:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #0xfffffffc
	add	r7, r1, #0
	add	r6, r0, #0
	add	r2, r7, #0
	lsl	r0, r2, #0x18
	mov	r3, #0x0
	cmp	r0, #0
	beq	.L235	@cond_branch
.L237:
	add	r0, r3, #0x1
	lsl	r1, r0, #0x10
	lsr	r4, r1, #0x10
	lsl	r1, r2, #0x18
	lsr	r1, r1, #0x18
	mov	r8, r0
	cmp	r4, r1
	bcs	.L236	@cond_branch
	lsl	r0, r3, #0x2
	add	r5, r0, r6
	add	r2, r1, #0
.L241:
	ldrh	r0, [r5, #0x2]
	cmp	r0, #0
	beq	.L240	@cond_branch
	lsl	r0, r4, #0x2
	add	r1, r0, r6
	ldrh	r0, [r1, #0x2]
	cmp	r0, #0
	beq	.L240	@cond_branch
	ldrh	r0, [r5]
	ldrh	r3, [r1]
	cmp	r0, r3
	bls	.L240	@cond_branch
	add	r0, r5, #0
	str	r2, [sp]
	bl	SwapItemSlots
	ldr	r2, [sp]
.L240:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r4, r2
	bcc	.L241	@cond_branch
.L236:
	mov	r1, r8
	lsl	r0, r1, #0x10
	lsr	r3, r0, #0x10
	add	r2, r7, #0
	lsl	r0, r2, #0x18
	lsr	r0, r0, #0x18
	cmp	r3, r0
	bcc	.L237	@cond_branch
.L235:
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe23:
	.size	 SortItemSlots,.Lfe23-SortItemSlots
	.align	2, 0
	.type	 UpdateBagPocket,function
	.thumb_func
UpdateBagPocket:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r1, .L252
	lsl	r0, r6, #0x2
	add	r3, r0, r1
	mov	r0, #0x0
	strb	r0, [r3, #0x2]
	mov	r4, #0x0
	ldr	r0, .L252+0x4
	lsl	r2, r6, #0x3
	add	r1, r2, r0
	mov	ip, r0
	ldrb	r1, [r1, #0x4]
	cmp	r4, r1
	bcs	.L247	@cond_branch
	mov	r7, ip
	add	r5, r3, #0
.L249:
	add	r3, r2, r7
	ldr	r0, [r3]
	lsl	r1, r4, #0x2
	add	r1, r1, r0
	ldrh	r0, [r1, #0x2]
	cmp	r0, #0
	beq	.L248	@cond_branch
	ldrb	r0, [r5, #0x2]
	add	r0, r0, #0x1
	strb	r0, [r5, #0x2]
.L248:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	ldrb	r3, [r3, #0x4]
	cmp	r4, r3
	bcc	.L249	@cond_branch
.L247:
	lsl	r0, r6, #0x3
	add	r0, r0, ip
	ldr	r1, [r0, #0x4]		@ created by thumb_load_double_from_address
	ldr	r0, [r0]		@ created by thumb_load_double_from_address
	bl	RemoveEmptyItemSlots
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L253:
	.align	2, 0
.L252:
	.word	gBagPocketScrollStates
	.word	gBagPockets
.Lfe24:
	.size	 UpdateBagPocket,.Lfe24-UpdateBagPocket
	.align	2, 0
	.type	 UpdateAllBagPockets,function
	.thumb_func
UpdateAllBagPockets:
	push	{r4, lr}
	mov	r4, #0x0
.L258:
	add	r0, r4, #0
	bl	UpdateBagPocket
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x4
	bls	.L258	@cond_branch
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe25:
	.size	 UpdateAllBagPockets,.Lfe25-UpdateAllBagPockets
	.align	2, 0
	.type	 sub_80A3D24,function
	.thumb_func
sub_80A3D24:
	push	{lr}
	lsl	r0, r0, #0x18
	ldr	r1, .L263
	lsr	r0, r0, #0x16
	add	r1, r0, r1
	ldrb	r0, [r1, #0x2]
	cmp	r0, #0x6
	bls	.L261	@cond_branch
	mov	r0, #0x7
.L261:
	strb	r0, [r1, #0x3]
	pop	{r0}
	bx	r0
.L264:
	.align	2, 0
.L263:
	.word	gBagPocketScrollStates
.Lfe26:
	.size	 sub_80A3D24,.Lfe26-sub_80A3D24
	.align	2, 0
	.type	 sub_80A3D40,function
	.thumb_func
sub_80A3D40:
	push	{r4, lr}
	mov	r4, #0x0
.L269:
	add	r0, r4, #0
	bl	sub_80A3D24
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x4
	bls	.L269	@cond_branch
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe27:
	.size	 sub_80A3D40,.Lfe27-sub_80A3D40
	.align	2, 0
	.type	 sub_80A3D5C,function
	.thumb_func
sub_80A3D5C:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L275
	mov	r9, r1
	ldr	r2, .L275+0x4
	mov	r8, r2
	mov	r1, #0x0
	ldrsb	r1, [r2, r1]
	lsl	r1, r1, #0x2
	add	r1, r1, r9
	ldrb	r2, [r1, #0x1]
	ldrb	r1, [r1]
	add	r2, r2, r1
	ldr	r7, .L275+0x8
	ldr	r1, [r7]
	lsl	r6, r2, #0x2
	add	r3, r6, r1
	ldr	r2, .L275+0xc
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldrh	r0, [r3, #0x2]
	ldrh	r1, [r1, #0xa]
	sub	r0, r0, r1
	strh	r0, [r3, #0x2]
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r4, #0
	bne	.L272	@cond_branch
	ldr	r0, .L275+0x10
	ldr	r1, .L275+0x14
	add	r5, r0, r1
	ldrh	r0, [r5]
	ldrh	r3, [r3]
	cmp	r0, r3
	bne	.L273	@cond_branch
	bl	RemoveSelectIconFromRegisteredItem
	strh	r4, [r5]
.L273:
	ldr	r0, [r7]
	add	r0, r6, r0
	strh	r4, [r0]
	mov	r2, r8
	mov	r0, #0x0
	ldrsb	r0, [r2, r0]
	lsl	r0, r0, #0x2
	mov	r3, r9
	add	r2, r0, r3
	ldrb	r1, [r2, #0x1]
	add	r0, r1, #0x7
	ldrb	r3, [r2, #0x2]
	cmp	r0, r3
	bne	.L274	@cond_branch
	cmp	r1, #0
	beq	.L274	@cond_branch
	sub	r0, r1, #0x1
	strb	r0, [r2, #0x1]
.L274:
	ldr	r0, .L275+0x4
	ldrb	r0, [r0]
	bl	UpdateBagPocket
.L272:
	ldr	r0, .L275+0x4
	ldrb	r0, [r0]
	bl	sub_80A3D24
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L276:
	.align	2, 0
.L275:
	.word	gBagPocketScrollStates
	.word	sCurrentBagPocket
	.word	gCurrentBagPocketItemSlots
	.word	gTasks
	.word	gSaveBlock1
	.word	0x496
.Lfe28:
	.size	 sub_80A3D5C,.Lfe28-sub_80A3D5C
	.align	2, 0
	.globl	sub_80A3E0C
	.type	 sub_80A3E0C,function
	.thumb_func
sub_80A3E0C:
	push	{lr}
	ldr	r3, .L280
	ldr	r2, .L280+0x4
	mov	r0, #0x0
	ldrsb	r0, [r2, r0]
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	ldrb	r1, [r0, #0x1]
	ldrb	r0, [r0]
	add	r1, r1, r0
	ldr	r0, .L280+0x8
	ldr	r0, [r0]
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	ldrh	r0, [r1, #0x2]
	cmp	r0, #0
	bne	.L278	@cond_branch
	strh	r0, [r1]
	mov	r0, #0x0
	ldrsb	r0, [r2, r0]
	lsl	r0, r0, #0x2
	add	r2, r0, r3
	ldrb	r1, [r2, #0x1]
	add	r0, r1, #0x7
	ldrb	r3, [r2, #0x2]
	cmp	r0, r3
	bne	.L279	@cond_branch
	cmp	r1, #0
	beq	.L279	@cond_branch
	sub	r0, r1, #0x1
	strb	r0, [r2, #0x1]
.L279:
	ldr	r0, .L280+0x4
	ldrb	r0, [r0]
	bl	UpdateBagPocket
.L278:
	ldr	r0, .L280+0x4
	ldrb	r0, [r0]
	bl	sub_80A3D24
	pop	{r0}
	bx	r0
.L281:
	.align	2, 0
.L280:
	.word	gBagPocketScrollStates
	.word	sCurrentBagPocket
	.word	gCurrentBagPocketItemSlots
.Lfe29:
	.size	 sub_80A3E0C,.Lfe29-sub_80A3E0C
	.align	2, 0
	.type	 nullsub_16,function
	.thumb_func
nullsub_16:
	bx	lr
.Lfe30:
	.size	 nullsub_16,.Lfe30-nullsub_16
	.align	2, 0
	.type	 sub_80A3E70,function
	.thumb_func
sub_80A3E70:
	lsl	r0, r0, #0x18
	lsl	r1, r1, #0x18
	ldr	r2, .L284
	ldr	r2, [r2]
	lsr	r0, r0, #0x16
	add	r0, r0, r2
	ldr	r3, [r0]
	lsr	r1, r1, #0x16
	add	r1, r1, r2
	ldr	r2, [r1]
	str	r2, [r0]
	str	r3, [r1]
	bx	lr
.L285:
	.align	2, 0
.L284:
	.word	gCurrentBagPocketItemSlots
.Lfe31:
	.size	 sub_80A3E70,.Lfe31-sub_80A3E70
	.align	2, 0
	.type	 sub_80A3E90,function
	.thumb_func
sub_80A3E90:
	push	{r4, r5, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x5
	bl	PlaySE
	bl	nullsub_16
	ldr	r0, .L287
	lsl	r5, r4, #0x2
	add	r5, r5, r4
	lsl	r5, r5, #0x3
	add	r5, r5, r0
	ldrb	r0, [r5, #0x1c]
	sub	r0, r0, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r3, .L287+0x4
	ldr	r1, .L287+0x8
	mov	r2, #0x0
	ldrsb	r2, [r1, r2]
	lsl	r2, r2, #0x2
	add	r2, r2, r3
	ldrb	r1, [r2, #0x1]
	ldrb	r2, [r2]
	add	r1, r1, r2
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	bl	sub_80A3E70
	mov	r0, #0x0
	strh	r0, [r5, #0x1c]
	bl	sub_80A763C
	mov	r0, #0x0
	bl	sub_80A7528
	bl	ItemListMenu_InitMenu
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L288:
	.align	2, 0
.L287:
	.word	gTasks
	.word	gBagPocketScrollStates
	.word	sCurrentBagPocket
.Lfe32:
	.size	 sub_80A3E90,.Lfe32-sub_80A3E90
	.align	2, 0
	.type	 sub_80A3EF4,function
	.thumb_func
sub_80A3EF4:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r0, #0x5
	bl	PlaySE
	bl	nullsub_16
	ldr	r0, .L291
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r2, .L291+0x4
	ldr	r0, .L291+0x8
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r0, [r0, #0x1]
	mvn	r0, r0
	ldrb	r2, [r1, #0x1c]
	add	r0, r0, r2
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	mov	r0, #0x0
	strh	r0, [r1, #0x1c]
	cmp	r2, #0x7
	bhi	.L290	@cond_branch
	add	r0, r4, #0
	add	r1, r2, #0
	bl	sub_80A48E8
.L290:
	mov	r0, #0x0
	bl	sub_80A7528
	pop	{r4}
	pop	{r0}
	bx	r0
.L292:
	.align	2, 0
.L291:
	.word	gTasks
	.word	gBagPocketScrollStates
	.word	sCurrentBagPocket
.Lfe33:
	.size	 sub_80A3EF4,.Lfe33-sub_80A3EF4
	.align	2, 0
	.type	 sub_80A3F50,function
	.thumb_func
sub_80A3F50:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L294
	lsl	r3, r0, #0x2
	add	r3, r3, r0
	lsl	r3, r3, #0x3
	add	r3, r3, r1
	ldr	r5, .L294+0x4
	ldr	r4, .L294+0x8
	mov	r1, #0x0
	ldrsb	r1, [r4, r1]
	lsl	r1, r1, #0x2
	add	r1, r1, r5
	ldrb	r2, [r1, #0x1]
	ldrb	r1, [r1]
	add	r2, r2, r1
	add	r2, r2, #0x1
	strh	r2, [r3, #0x1c]
	mov	r1, #0x0
	ldrsb	r1, [r4, r1]
	lsl	r1, r1, #0x2
	add	r1, r1, r5
	ldrb	r2, [r1]
	add	r1, r2, #0
	bl	sub_80A48E8
	mov	r0, #0x1
	bl	sub_80A7528
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L295:
	.align	2, 0
.L294:
	.word	gTasks
	.word	gBagPocketScrollStates
	.word	sCurrentBagPocket
.Lfe34:
	.size	 sub_80A3F50,.Lfe34-sub_80A3F50
	.align	2, 0
	.globl	sub_80A3FA0
	.type	 sub_80A3FA0,function
	.thumb_func
sub_80A3FA0:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	r7, r0, #0
	ldr	r0, [sp, #0x18]
	ldr	r4, [sp, #0x1c]
	lsl	r1, r1, #0x18
	lsr	r5, r1, #0x18
	lsl	r2, r2, #0x18
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r4, r4, #0x10
	lsr	r6, r4, #0x10
	lsr	r2, r2, #0x18
	add	r0, r2, r0
	cmp	r2, r0
	bge	.L298	@cond_branch
	mov	r8, r5
	add	r4, r5, r3
	mov	ip, r0
.L300:
	add	r0, r5, #0
	lsl	r3, r2, #0x10
	cmp	r8, r4
	bge	.L299	@cond_branch
	asr	r2, r3, #0xb
.L304:
	lsl	r1, r0, #0x10
	asr	r1, r1, #0x10
	add	r0, r1, r2
	lsl	r0, r0, #0x1
	add	r0, r0, r7
	strh	r6, [r0]
	add	r1, r1, #0x1
	lsl	r1, r1, #0x10
	lsr	r0, r1, #0x10
	asr	r1, r1, #0x10
	cmp	r1, r4
	blt	.L304	@cond_branch
.L299:
	mov	r1, #0x80
	lsl	r1, r1, #0x9
	add	r0, r3, r1
	lsr	r2, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, ip
	blt	.L300	@cond_branch
.L298:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe35:
	.size	 sub_80A3FA0,.Lfe35-sub_80A3FA0
	.align	2, 0
	.type	 sub_80A4008,function
	.thumb_func
sub_80A4008:
	push	{r4, lr}
	add	sp, sp, #0xfffffff8
	ldr	r4, [sp, #0x10]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	str	r4, [sp]
	mov	r4, #0x1
	str	r4, [sp, #0x4]
	bl	sub_80A3FA0
	add	sp, sp, #0x8
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe36:
	.size	 sub_80A4008,.Lfe36-sub_80A4008
	.align	2, 0
	.type	 DrawSelectIcon,function
	.thumb_func
DrawSelectIcon:
	ldr	r1, .L309
	lsl	r0, r0, #0x7
	add	r1, r0, r1
	mov	r0, #0x5a
	strh	r0, [r1]
	mov	r0, #0x5b
	strh	r0, [r1, #0x2]
	mov	r0, #0x5c
	strh	r0, [r1, #0x4]
	add	r2, r1, #0
	add	r2, r2, #0x40
	mov	r0, #0x6a
	strh	r0, [r2]
	add	r2, r2, #0x2
	mov	r0, #0x6b
	strh	r0, [r2]
	add	r1, r1, #0x44
	mov	r0, #0x6c
	strh	r0, [r1]
	bx	lr
.L310:
	.align	2, 0
.L309:
	.word	gBGTilemapBuffers+0x10b4
.Lfe37:
	.size	 DrawSelectIcon,.Lfe37-DrawSelectIcon
	.align	2, 0
	.type	 MoveSelectIcon,function
	.thumb_func
MoveSelectIcon:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	ldr	r2, .L317
	mov	r0, #0x0
	add	r4, r2, #0
	mov	r1, #0x4f
.L315:
	strh	r1, [r2]
	strh	r1, [r2, #0x2]
	strh	r1, [r2, #0x4]
	add	r2, r2, #0x40
	add	r0, r0, #0x1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0xf
	bls	.L315	@cond_branch
	lsl	r0, r3, #0x7
	add	r2, r0, r4
	mov	r0, #0x5a
	strh	r0, [r2]
	mov	r0, #0x5b
	strh	r0, [r2, #0x2]
	mov	r0, #0x5c
	strh	r0, [r2, #0x4]
	add	r1, r2, #0
	add	r1, r1, #0x40
	mov	r0, #0x6a
	strh	r0, [r1]
	add	r1, r1, #0x2
	mov	r0, #0x6b
	strh	r0, [r1]
	add	r1, r1, #0x2
	mov	r0, #0x6c
	strh	r0, [r1]
	pop	{r4}
	pop	{r0}
	bx	r0
.L318:
	.align	2, 0
.L317:
	.word	gBGTilemapBuffers+0x10b4
.Lfe38:
	.size	 MoveSelectIcon,.Lfe38-MoveSelectIcon
	.align	2, 0
	.type	 EraseSelectIcon,function
	.thumb_func
EraseSelectIcon:
	lsl	r0, r0, #0x18
	ldr	r1, .L320
	lsr	r0, r0, #0x11
	add	r1, r0, r1
	mov	r2, #0x4f
	strh	r2, [r1]
	strh	r2, [r1, #0x2]
	strh	r2, [r1, #0x4]
	add	r0, r1, #0
	add	r0, r0, #0x40
	strh	r2, [r0]
	add	r0, r0, #0x2
	strh	r2, [r0]
	add	r1, r1, #0x44
	strh	r2, [r1]
	bx	lr
.L321:
	.align	2, 0
.L320:
	.word	gBGTilemapBuffers+0x10b4
.Lfe39:
	.size	 EraseSelectIcon,.Lfe39-EraseSelectIcon
	.align	2, 0
	.type	 RemoveSelectIconFromRegisteredItem,function
	.thumb_func
RemoveSelectIconFromRegisteredItem:
	push	{r4, r5, r6, r7, lr}
	mov	r4, #0x0
	ldr	r2, .L330
	ldr	r3, .L330+0x4
	mov	r0, #0x0
	ldrsb	r0, [r3, r0]
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r1, [r0, #0x1]
	add	r7, r2, #0
	add	r6, r3, #0
	ldrb	r0, [r0, #0x2]
	cmp	r1, r0
	beq	.L324	@cond_branch
	ldr	r5, .L330+0x8
.L327:
	mov	r0, #0x0
	ldrsb	r0, [r6, r0]
	lsl	r0, r0, #0x2
	add	r3, r0, r7
	ldrb	r2, [r3, #0x1]
	add	r1, r2, r4
	ldr	r0, .L330+0xc
	ldr	r0, [r0]
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	ldrh	r0, [r1]
	ldrh	r1, [r5]
	cmp	r0, r1
	bne	.L325	@cond_branch
	add	r0, r4, #0
	bl	EraseSelectIcon
	b	.L324
.L331:
	.align	2, 0
.L330:
	.word	gBagPocketScrollStates
	.word	sCurrentBagPocket
	.word	gSaveBlock1+0x496
	.word	gCurrentBagPocketItemSlots
.L325:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x7
	bhi	.L324	@cond_branch
	add	r0, r2, r4
	ldrb	r3, [r3, #0x2]
	cmp	r0, r3
	bne	.L327	@cond_branch
.L324:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe40:
	.size	 RemoveSelectIconFromRegisteredItem,.Lfe40-RemoveSelectIconFromRegisteredItem
	.align	2, 0
	.type	 AddSelectIconToRegisteredItem,function
	.thumb_func
AddSelectIconToRegisteredItem:
	push	{lr}
	bl	RemoveSelectIconFromRegisteredItem
	ldr	r1, .L333
	ldr	r0, .L333+0x4
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r0, [r0]
	bl	MoveSelectIcon
	pop	{r0}
	bx	r0
.L334:
	.align	2, 0
.L333:
	.word	gBagPocketScrollStates
	.word	sCurrentBagPocket
.Lfe41:
	.size	 AddSelectIconToRegisteredItem,.Lfe41-AddSelectIconToRegisteredItem
	.align	2, 0
	.globl	sub_80A4164
	.type	 sub_80A4164,function
	.thumb_func
sub_80A4164:
	push	{r4, lr}
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r4, #0xb9
	strb	r4, [r0]
	add	r0, r0, #0x1
	mov	r4, #0xfc
	strb	r4, [r0]
	mov	r4, #0x14
	strb	r4, [r0, #0x1]
	mov	r4, #0x6
	strb	r4, [r0, #0x2]
	add	r0, r0, #0x3
	bl	ConvertIntToDecimalStringN
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe42:
	.size	 sub_80A4164,.Lfe42-sub_80A4164
	.align	2, 0
	.globl	sub_80A418C
	.type	 sub_80A418C,function
	.thumb_func
sub_80A418C:
	push	{r4, r5, r6, lr}
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6}
	add	r4, r0, #0
	mov	r9, r1
	add	r5, r2, #0
	add	r6, r3, #0
	ldr	r3, [sp, #0x18]
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	lsl	r6, r6, #0x18
	lsr	r6, r6, #0x18
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	ldr	r0, .L337
	mov	r8, r0
	add	r1, r4, #0
	mov	r2, r9
	bl	sub_80A4164
	mov	r0, r8
	add	r1, r5, #0
	add	r2, r6, #0
	bl	MenuPrint
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L338:
	.align	2, 0
.L337:
	.word	gStringVar1
.Lfe43:
	.size	 sub_80A418C,.Lfe43-sub_80A418C
	.align	2, 0
	.type	 sub_80A41D4,function
	.thumb_func
sub_80A41D4:
	push	{lr}
	bl	sub_80A763C
	pop	{r0}
	bx	r0
.Lfe44:
	.size	 sub_80A41D4,.Lfe44-sub_80A41D4
	.align	2, 0
	.type	 sub_80A41E0,function
	.thumb_func
sub_80A41E0:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	r7, r0, #0
	mov	r9, r2
	add	r5, r3, #0
	ldr	r4, [sp, #0x1c]
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0xfc
	mov	r8, r0
	strb	r0, [r7]
	mov	r6, #0x13
	strb	r6, [r7, #0x1]
	mov	r0, #0x8
	strb	r0, [r7, #0x2]
	add	r7, r7, #0x3
	add	r0, r7, #0
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	mov	r1, r8
	strb	r1, [r0]
	strb	r6, [r0, #0x1]
	mov	r1, #0x18
	strb	r1, [r0, #0x2]
	add	r7, r0, #0x3
	add	r4, r4, #0x1
	lsl	r0, r4, #0x1
	add	r0, r0, r4
	lsl	r0, r0, #0x1
	mov	r2, #0x70
	sub	r2, r2, r0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	add	r0, r7, #0
	mov	r1, r9
	mov	r3, #0x0
	bl	sub_8072C74
	mov	r1, #0xb9
	strb	r1, [r0]
	add	r7, r0, #0x1
	add	r0, r7, #0
	add	r1, r5, #0
	mov	r2, #0x70
	mov	r3, #0x1
	bl	sub_8072C14
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe45:
	.size	 sub_80A41E0,.Lfe45-sub_80A41E0
	.section .rodata
.LC107:
	.byte	0xfc
	.byte	0x1
	.byte	0xf
	.byte	0xef
	.byte	0xff
.text
	.align	2, 0
	.type	 sub_80A425C,function
	.thumb_func
sub_80A425C:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #0xfffffff8
	add	r7, r1, #0
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r2, r2, #0x18
	lsr	r4, r2, #0x18
	add	r6, r4, #0
	ldr	r1, .L346
	mov	r0, sp
	mov	r2, #0x5
	bl	memcpy
	ldr	r0, .L346+0x4
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L342	@cond_branch
	mov	r0, #0xe
	mov	r1, #0x2
	mov	r2, #0xe
	mov	r3, #0x11
	bl	MenuFillWindowRectWithBlankTile
	lsl	r2, r4, #0x19
	mov	r0, #0x80
	lsl	r0, r0, #0x12
	add	r2, r2, r0
	lsr	r2, r2, #0x18
	mov	r0, sp
	mov	r1, #0xe
	bl	MenuPrint
	b	.L343
.L347:
	.align	2, 0
.L346:
	.word	.LC107
	.word	sSelect
.L342:
	ldr	r1, .L348
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r2, #0x1c
	ldrsh	r1, [r0, r2]
	ldr	r2, .L348+0x4
	ldr	r0, .L348+0x8
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r0, [r0, #0x1]
	sub	r1, r1, r0
	sub	r1, r1, #0x1
	cmp	r1, r4
	bne	.L344	@cond_branch
	lsl	r0, r4, #0x6
	add	r0, r0, #0x40
	add	r1, r0, #0
	add	r1, r1, #0xe
	ldr	r3, .L348+0xc
	lsl	r1, r1, #0x1
	mov	r2, #0x80
	lsl	r2, r2, #0x5
	add	r3, r3, r2
	add	r1, r1, r3
	mov	r2, #0x5f
	strh	r2, [r1]
	add	r0, r0, #0x2e
	lsl	r0, r0, #0x1
	add	r0, r0, r3
	mov	r1, #0x6f
	strh	r1, [r0]
	b	.L343
.L349:
	.align	2, 0
.L348:
	.word	gTasks
	.word	gBagPocketScrollStates
	.word	sCurrentBagPocket
	.word	gBGTilemapBuffers
.L344:
	lsl	r0, r6, #0x6
	add	r0, r0, #0x40
	add	r1, r0, #0
	add	r1, r1, #0xe
	ldr	r2, .L350
	lsl	r1, r1, #0x1
	mov	r3, #0x80
	lsl	r3, r3, #0x5
	add	r2, r2, r3
	add	r1, r1, r2
	mov	r3, #0x4f
	strh	r3, [r1]
	add	r0, r0, #0x2e
	lsl	r0, r0, #0x1
	add	r0, r0, r2
	strh	r3, [r0]
.L343:
	add	r0, r7, #0
	add	sp, sp, #0x8
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L351:
	.align	2, 0
.L350:
	.word	gBGTilemapBuffers
.Lfe46:
	.size	 sub_80A425C,.Lfe46-sub_80A425C
	.align	2, 0
	.type	 sub_80A42B0,function
	.thumb_func
sub_80A42B0:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	r7, r1, #0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r6, r0, #0
	ldr	r0, .L363
	mov	r8, r0
	ldr	r1, .L363+0x4
	ldr	r0, .L363+0x8
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r1, [r0, #0x1]
	add	r1, r1, r6
	ldrb	r0, [r0, #0x2]
	cmp	r1, r0
	bgt	.L360	@cond_branch
	cmp	r1, r0
	bne	.L354	@cond_branch
	ldr	r0, .L363+0xc
	ldrb	r0, [r0]
	cmp	r0, #0x5
	beq	.L360	@cond_branch
	lsl	r0, r6, #0x19
	mov	r1, #0x80
	lsl	r1, r1, #0x12
	add	r0, r0, r1
	lsr	r5, r0, #0x18
	ldr	r4, .L363+0x10
	ldr	r1, .L363+0x14
	add	r0, r4, #0
	mov	r2, #0x78
	mov	r3, #0x0
	bl	sub_8072C74
	add	r0, r4, #0
	mov	r1, #0xf
	add	r2, r5, #0
	bl	MenuPrint
	lsl	r0, r5, #0x6
	ldr	r1, .L363+0x18
	add	r0, r0, r1
	mov	r2, #0x4f
	strh	r2, [r0]
	strh	r2, [r0, #0x2]
	add	r1, r0, #0
	add	r1, r1, #0x40
	strh	r2, [r1]
	add	r0, r0, #0x42
	strh	r2, [r0]
	cmp	r6, #0x7
	beq	.L360	@cond_branch
	cmp	r7, #0x1
	bne	.L359	@cond_branch
	mov	r1, r8
	ldrb	r0, [r1, #0x2]
	cmp	r0, #0
	bne	.L358	@cond_branch
.L359:
	cmp	r7, #0x2
	bne	.L357	@cond_branch
.L358:
	add	r1, r5, #0x2
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r0, #0xf
	mov	r2, #0x1d
	mov	r3, #0xd
	bl	MenuFillWindowRectWithBlankTile
	b	.L360
.L364:
	.align	2, 0
.L363:
	.word	gUnknown_02038540
	.word	gBagPocketScrollStates
	.word	sCurrentBagPocket
	.word	sReturnLocation
	.word	gStringVar1
	.word	gOtherText_CloseBag
	.word	gBGTilemapBuffers+0x101e
.L357:
	add	r1, r5, #0x2
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r0, #0xf
	mov	r2, #0x1d
	mov	r3, #0x11
	bl	MenuFillWindowRectWithBlankTile
.L360:
	mov	r0, #0x1
	b	.L361
.L354:
	mov	r0, #0x0
.L361:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe47:
	.size	 sub_80A42B0,.Lfe47-sub_80A42B0
	.align	2, 0
	.type	 sub_80A4380,function
	.thumb_func
sub_80A4380:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #0xfffffffc
	str	r2, [sp]
	mov	sl, r3
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r9, r0
	lsl	r1, r1, #0x18
	lsr	r7, r1, #0x18
	ldr	r0, .L372
	mov	r8, r0
	b	.L366
.L373:
	.align	2, 0
.L372:
	.word	gCurrentBagPocketItemSlots
.L370:
	ldr	r1, .L374
	ldr	r0, .L374+0x4
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r4, [r0, #0x1]
	add	r4, r7, r4
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r5, r7, #0x19
	mov	r1, #0x80
	lsl	r1, r1, #0x12
	add	r5, r5, r1
	lsr	r5, r5, #0x18
	ldr	r6, .L374+0x8
	mov	r1, r9
	lsl	r0, r1, #0x18
	lsr	r0, r0, #0x18
	add	r1, r6, #0
	add	r2, r7, #0
	bl	sub_80A425C
	add	r6, r0, #0
	mov	r1, r8
	ldr	r0, [r1]
	lsl	r4, r4, #0x2
	add	r0, r4, r0
	ldrh	r0, [r0]
	bl	ItemId_GetItem
	add	r1, r0, #0
	add	r0, r6, #0
	mov	r2, #0x5e
	mov	r3, #0x0
	bl	sub_8072C74
	add	r6, r0, #0
	mov	r0, #0xb9
	strb	r0, [r6]
	add	r6, r6, #0x1
	mov	r1, r8
	ldr	r0, [r1]
	add	r4, r4, r0
	ldrh	r1, [r4, #0x2]
	add	r0, r6, #0
	mov	r2, #0x70
	mov	r3, #0x1
	bl	sub_8072C14
	ldr	r0, .L374+0x8
	mov	r1, #0xf
	add	r2, r5, #0
	bl	MenuPrint
	add	r0, r7, #0x1
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
.L366:
	ldr	r0, [sp]
	cmp	r7, r0
	bgt	.L367	@cond_branch
	add	r0, r7, #0
	mov	r1, sl
	bl	sub_80A42B0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L370	@cond_branch
.L367:
	add	sp, sp, #0x4
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L375:
	.align	2, 0
.L374:
	.word	gBagPocketScrollStates
	.word	sCurrentBagPocket
	.word	gStringVar1
.Lfe48:
	.size	 sub_80A4380,.Lfe48-sub_80A4380
	.align	2, 0
	.type	 sub_80A444C,function
	.thumb_func
sub_80A444C:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #0xfffffff8
	str	r2, [sp]
	str	r3, [sp, #0x4]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	sl, r0
	lsl	r1, r1, #0x18
	lsr	r6, r1, #0x18
	ldr	r0, .L388
	mov	r9, r0
	b	.L377
.L389:
	.align	2, 0
.L388:
	.word	gSaveBlock1+0x496
.L381:
	ldr	r1, .L390
	ldr	r0, .L390+0x4
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r4, [r0, #0x1]
	add	r4, r6, r4
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r5, r6, #0x19
	mov	r1, #0x80
	lsl	r1, r1, #0x12
	add	r5, r5, r1
	lsr	r5, r5, #0x18
	ldr	r7, .L390+0x8
	mov	r2, sl
	lsl	r0, r2, #0x18
	lsr	r0, r0, #0x18
	add	r1, r7, #0
	add	r2, r6, #0
	bl	sub_80A425C
	add	r7, r0, #0
	ldr	r0, .L390+0xc
	mov	r8, r0
	ldr	r0, [r0]
	lsl	r4, r4, #0x2
	add	r0, r4, r0
	ldrh	r0, [r0]
	bl	ItemId_GetItem
	add	r1, r0, #0
	add	r0, r7, #0
	mov	r2, #0x60
	mov	r3, #0x0
	bl	sub_8072C74
	ldr	r0, .L390+0x8
	mov	r1, #0xf
	add	r2, r5, #0
	bl	MenuPrint
	ldr	r0, .L390+0x10
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L382	@cond_branch
	mov	r1, r8
	ldr	r0, [r1]
	add	r0, r4, r0
	ldrh	r0, [r0]
	mov	r2, r9
	ldrh	r2, [r2]
	cmp	r0, r2
	bne	.L379	@cond_branch
	add	r0, r6, #0
	bl	DrawSelectIcon
	b	.L379
.L391:
	.align	2, 0
.L390:
	.word	gBagPocketScrollStates
	.word	sCurrentBagPocket
	.word	gStringVar1
	.word	gCurrentBagPocketItemSlots
	.word	gUnknown_02038558
.L382:
	mov	r1, r8
	ldr	r0, [r1]
	add	r0, r4, r0
	ldrh	r0, [r0]
	mov	r2, r9
	ldrh	r2, [r2]
	cmp	r0, r2
	bne	.L385	@cond_branch
	add	r0, r6, #0
	bl	MoveSelectIcon
	b	.L379
.L385:
	add	r0, r6, #0
	bl	EraseSelectIcon
.L379:
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
.L377:
	ldr	r0, [sp]
	cmp	r6, r0
	bgt	.L378	@cond_branch
	add	r0, r6, #0
	ldr	r1, [sp, #0x4]
	bl	sub_80A42B0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L381	@cond_branch
.L378:
	add	sp, sp, #0x8
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe49:
	.size	 sub_80A444C,.Lfe49-sub_80A444C
	.align	2, 0
	.type	 sub_80A4548,function
	.thumb_func
sub_80A4548:
	.syntax unified
    push {r4-r7,lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5-r7}
    sub sp, 0x14
    str r2, [sp, 0x8]
    str r3, [sp, 0xC]
    lsls r0, 16
    lsrs r0, 16
    str r0, [sp, 0x4]
    lsls r1, 24
    lsrs r1, 24
    mov r8, r1
    ldr r0, _080A456C @ =gBGTilemapBuffers + 0x1000
    mov r9, r0
    b _080A46C2
    .align 2, 0
_080A456C: .4byte gBGTilemapBuffers + 0x1000
_080A4570:
    ldr r1, _080A461C @ =gBagPocketScrollStates
    ldr r0, _080A4620 @ =sCurrentBagPocket
    ldrb r0, [r0]
    lsls r0, 24
    asrs r0, 24
    lsls r0, 2
    adds r0, r1
    ldrb r4, [r0, 0x1]
    add r4, r8
    lsls r4, 24
    lsrs r4, 24
    mov r1, r8
    lsls r0, r1, 25
    movs r3, 0x80
    lsls r3, 18
    adds r0, r3
    lsrs r0, 24
    str r0, [sp, 0x10]
    lsls r0, 5
    adds r0, 0xF
    adds r5, r0, 0
    ldr r6, _080A4624 @ =gStringVar1
    ldr r1, [sp, 0x4]
    lsls r0, r1, 24
    lsrs r0, 24
    adds r1, r6, 0
    mov r2, r8
    bl sub_80A425C
    adds r6, r0, 0
    ldr r3, _080A4628 @ =gCurrentBagPocketItemSlots
    mov r10, r3
    ldr r0, [r3]
    lsls r7, r4, 2
    adds r3, r7, r0
    ldrh r1, [r3]
    movs r0, 0xA9
    lsls r0, 1
    cmp r1, r0
    bhi _080A4634
    lsls r0, r5, 1
    add r0, r9
    movs r1, 0x59
    strh r1, [r0]
    adds r0, r5, 0x1
    lsls r0, 1
    add r0, r9
    movs r2, 0x4F
    strh r2, [r0]
    adds r0, r5, 0
    adds r0, 0x20
    lsls r0, 1
    add r0, r9
    movs r1, 0x69
    strh r1, [r0]
    adds r0, r5, 0
    adds r0, 0x21
    lsls r0, 1
    add r0, r9
    strh r2, [r0]
    ldrh r0, [r3]
    bl ItemIdToBattleMoveId
    lsls r0, 16
    lsrs r0, 16
    movs r1, 0xF
    adds r2, r0, 0
    muls r2, r1
    ldr r0, _080A462C @ =gMoveNames
    adds r2, r0
    mov r1, r10
    ldr r0, [r1]
    adds r0, r7, r0
    ldr r3, _080A4630 @ =0xfffffee0
    adds r1, r3, 0
    ldrh r3, [r0]
    adds r1, r3
    lsls r1, 16
    lsrs r1, 16
    ldrh r3, [r0, 0x2]
    movs r0, 0x2
    str r0, [sp]
    adds r0, r6, 0
    bl sub_80A41E0
    b _080A46AE
    .align 2, 0
_080A461C: .4byte gBagPocketScrollStates
_080A4620: .4byte sCurrentBagPocket
_080A4624: .4byte gStringVar1
_080A4628: .4byte gCurrentBagPocketItemSlots
_080A462C: .4byte gMoveNames
_080A4630: .4byte 0xfffffee0
_080A4634:
    lsls r0, r5, 1
    add r0, r9
    ldr r1, _080A46EC @ =0x0000105d
    strh r1, [r0]
    adds r0, r5, 0x1
    lsls r0, 1
    add r0, r9
    adds r1, 0x1
    strh r1, [r0]
    adds r0, r5, 0
    adds r0, 0x20
    lsls r0, 1
    add r0, r9
    adds r1, 0xF
    strh r1, [r0]
    adds r0, r5, 0
    adds r0, 0x21
    lsls r0, 1
    add r0, r9
    adds r1, 0x1
    strh r1, [r0]
    movs r0, 0xFC
    strb r0, [r6]
    movs r4, 0x13
    strb r4, [r6, 0x1]
    movs r0, 0x11
    strb r0, [r6, 0x2]
    adds r6, 0x3
    mov r1, r10
    ldr r0, [r1]
    adds r0, r7, r0
    ldrh r1, [r0]
    ldr r3, _080A46F0 @ =0xfffffeae
    adds r1, r3
    adds r0, r6, 0
    bl ConvertIntToDecimalString
    adds r6, r0, 0
    movs r0, 0xFC
    strb r0, [r6]
    strb r4, [r6, 0x1]
    movs r0, 0x18
    strb r0, [r6, 0x2]
    adds r6, 0x3
    mov r1, r10
    ldr r0, [r1]
    adds r0, r7, r0
    ldrh r0, [r0]
    bl ItemIdToBattleMoveId
    lsls r0, 16
    lsrs r0, 16
    movs r1, 0xF
    muls r1, r0
    ldr r0, _080A46F4 @ =gMoveNames
    adds r1, r0
    adds r0, r6, 0
    movs r2, 0x78
    movs r3, 0
    bl sub_8072C74
_080A46AE:
    ldr r0, _080A46F8 @ =gStringVar1
    movs r1, 0xF
    ldr r2, [sp, 0x10]
    bl MenuPrint
    mov r0, r8
    adds r0, 0x1
    lsls r0, 24
    lsrs r0, 24
    mov r8, r0
_080A46C2:
    ldr r3, [sp, 0x8]
    cmp r8, r3
    bgt _080A46DA
    mov r0, r8
    ldr r1, [sp, 0xC]
    bl sub_80A42B0
    lsls r0, 24
    lsrs r0, 24
    cmp r0, 0x1
    beq _080A46DA
    b _080A4570
_080A46DA:
    add sp, 0x14
    pop {r3-r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4-r7}
    pop {r0}
    bx r0
    .align 2, 0
_080A46EC: .4byte 0x0000105d
_080A46F0: .4byte 0xfffffeae
_080A46F4: .4byte gMoveNames
_080A46F8: .4byte gStringVar1
    .syntax divided

	.code	16
.Lfe50:
	.size	 sub_80A4548,.Lfe50-sub_80A4548
	.align	2, 0
	.type	 sub_80A46FC,function
	.thumb_func
sub_80A46FC:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #0xfffffff0
	str	r2, [sp, #0x8]
	str	r3, [sp, #0xc]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	str	r0, [sp, #0x4]
	lsl	r1, r1, #0x18
	lsr	r6, r1, #0x18
	ldr	r0, .L400
	mov	sl, r0
	ldr	r1, .L400+0x4
	mov	r9, r1
	ldr	r0, .L400+0x8
	mov	r8, r0
	b	.L394
.L401:
	.align	2, 0
.L400:
	.word	gBGTilemapBuffers+0x1000
	.word	gStringVar2
	.word	gCurrentBagPocketItemSlots
.L398:
	ldr	r1, .L402
	ldr	r0, .L402+0x4
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r4, [r0, #0x1]
	add	r4, r6, r4
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r5, r6, #0x19
	mov	r1, #0x80
	lsl	r1, r1, #0x12
	add	r5, r5, r1
	lsr	r5, r5, #0x18
	lsl	r0, r5, #0x5
	add	r0, r0, #0xf
	lsl	r1, r0, #0x1
	add	r1, r1, sl
	mov	r2, #0x59
	strh	r2, [r1]
	add	r0, r0, #0x20
	lsl	r0, r0, #0x1
	add	r0, r0, sl
	mov	r1, #0x69
	strh	r1, [r0]
	ldr	r7, .L402+0x8
	ldr	r1, [sp, #0x4]
	lsl	r0, r1, #0x18
	lsr	r0, r0, #0x18
	add	r1, r7, #0
	add	r2, r6, #0
	bl	sub_80A425C
	add	r7, r0, #0
	mov	r1, r8
	ldr	r0, [r1]
	lsl	r4, r4, #0x2
	add	r0, r4, r0
	ldrh	r0, [r0]
	mov	r1, r9
	bl	CopyItemName
	mov	r1, r8
	ldr	r0, [r1]
	add	r4, r4, r0
	ldrh	r1, [r4]
	sub	r1, r1, #0x84
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	ldrh	r3, [r4, #0x2]
	mov	r0, #0x3
	str	r0, [sp]
	add	r0, r7, #0
	mov	r2, r9
	bl	sub_80A41E0
	ldr	r0, .L402+0x8
	mov	r1, #0xf
	add	r2, r5, #0
	bl	MenuPrint
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
.L394:
	ldr	r0, [sp, #0x8]
	cmp	r6, r0
	bgt	.L395	@cond_branch
	add	r0, r6, #0
	ldr	r1, [sp, #0xc]
	bl	sub_80A42B0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L398	@cond_branch
.L395:
	add	sp, sp, #0x10
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L403:
	.align	2, 0
.L402:
	.word	gBagPocketScrollStates
	.word	sCurrentBagPocket
	.word	gStringVar1
.Lfe51:
	.size	 sub_80A46FC,.Lfe51-sub_80A46FC
	.align	2, 0
	.type	 sub_80A47E8,function
	.thumb_func
sub_80A47E8:
	push	{r4, r5, r6, r7, lr}
	add	r5, r1, #0
	add	r6, r2, #0
	add	r7, r3, #0
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	mov	r0, #0x1
	bl	SetCustomFont
	ldr	r0, .L420
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	cmp	r0, #0x4
	bhi	.L405	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L420+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L421:
	.align	2, 0
.L420:
	.word	sCurrentBagPocket
	.word	.L411
	.align	2, 0
	.align	2, 0
.L411:
	.word	.L407
	.word	.L407
	.word	.L409
	.word	.L410
	.word	.L408
.L407:
	add	r0, r4, #0
	add	r1, r5, #0
	add	r2, r6, #0
	add	r3, r7, #0
	bl	sub_80A4380
	b	.L405
.L408:
	add	r0, r4, #0
	add	r1, r5, #0
	add	r2, r6, #0
	add	r3, r7, #0
	bl	sub_80A444C
	b	.L405
.L409:
	add	r0, r4, #0
	add	r1, r5, #0
	add	r2, r6, #0
	add	r3, r7, #0
	bl	sub_80A4548
	b	.L405
.L410:
	add	r0, r4, #0
	add	r1, r5, #0
	add	r2, r6, #0
	add	r3, r7, #0
	bl	sub_80A46FC
.L405:
	mov	r0, #0x0
	bl	SetCustomFont
	ldr	r1, .L422
	ldr	r0, .L422+0x4
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r0, [r0, #0x1]
	cmp	r0, #0
	beq	.L413	@cond_branch
	mov	r0, #0x0
	mov	r1, #0x0
	bl	sub_80F979C
	b	.L414
.L423:
	.align	2, 0
.L422:
	.word	gBagPocketScrollStates
	.word	sCurrentBagPocket
.L413:
	mov	r0, #0x0
	mov	r1, #0x1
	bl	sub_80F979C
.L414:
	ldr	r0, .L424
	ldrb	r0, [r0]
	cmp	r0, #0x5
	beq	.L419	@cond_branch
	ldr	r1, .L424+0x4
	ldr	r0, .L424+0x8
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r1, [r0, #0x1]
	add	r1, r1, #0x8
	ldrb	r0, [r0, #0x2]
	add	r0, r0, #0x1
	cmp	r1, r0
	blt	.L416	@cond_branch
	b	.L415
.L425:
	.align	2, 0
.L424:
	.word	sReturnLocation
	.word	gBagPocketScrollStates
	.word	sCurrentBagPocket
.L419:
	ldr	r2, .L426
	ldr	r0, .L426+0x4
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldrb	r0, [r1, #0x1]
	add	r0, r0, #0x8
	ldrb	r1, [r1, #0x2]
	cmp	r0, r1
	bge	.L415	@cond_branch
.L416:
	mov	r0, #0x1
	mov	r1, #0x0
	bl	sub_80F979C
	b	.L418
.L427:
	.align	2, 0
.L426:
	.word	gBagPocketScrollStates
	.word	sCurrentBagPocket
.L415:
	mov	r0, #0x1
	mov	r1, #0x1
	bl	sub_80F979C
.L418:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe52:
	.size	 sub_80A47E8,.Lfe52-sub_80A47E8
	.align	2, 0
	.type	 sub_80A48E8,function
	.thumb_func
sub_80A48E8:
	push	{lr}
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r3, #0x0
	bl	sub_80A47E8
	pop	{r0}
	bx	r0
.Lfe53:
	.size	 sub_80A48E8,.Lfe53-sub_80A48E8
	.align	2, 0
	.type	 sub_80A48F8,function
	.thumb_func
sub_80A48F8:
	push	{lr}
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x0
	mov	r2, #0x5
	mov	r3, #0x2
	bl	sub_80A47E8
	pop	{r0}
	bx	r0
.Lfe54:
	.size	 sub_80A48F8,.Lfe54-sub_80A48F8
	.align	2, 0
	.type	 ItemListMenu_InitDescription,function
	.thumb_func
ItemListMenu_InitDescription:
	push	{r4, r5, lr}
	add	sp, sp, #0xfffffffc
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	mov	r0, #0x1
	bl	SetCustomFont
	ldr	r1, .L435
	ldr	r0, .L435+0x4
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r1, [r0, #0x1]
	ldrb	r2, [r0]
	add	r1, r1, r2
	ldrb	r0, [r0, #0x2]
	cmp	r1, r0
	bne	.L431	@cond_branch
	ldr	r1, .L435+0x8
	ldr	r0, .L435+0xc
	ldrb	r0, [r0]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	r4, #0x1
	str	r4, [sp]
	mov	r1, #0x8
	mov	r2, #0x68
	mov	r3, #0x68
	bl	sub_8072A18
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r0, .L435+0x10
	str	r4, [sp]
	mov	r1, #0x8
	mov	r2, #0x78
	mov	r3, #0x68
	bl	sub_8072A18
	add	r0, r5, r0
	b	.L434
.L436:
	.align	2, 0
.L435:
	.word	gBagPocketScrollStates
	.word	sCurrentBagPocket
	.word	gUnknown_0840E740
	.word	sReturnLocation
	.word	gOtherText_ReturnTo
.L431:
	add	r0, r4, #0
	bl	ItemId_GetDescription
	mov	r1, #0x1
	str	r1, [sp]
	mov	r1, #0x8
	mov	r2, #0x68
	mov	r3, #0x68
	bl	sub_8072A18
.L434:
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x2
	bhi	.L433	@cond_branch
	lsl	r1, r5, #0x19
	mov	r0, #0xd0
	lsl	r0, r0, #0x14
	add	r1, r1, r0
	lsr	r1, r1, #0x18
	mov	r0, #0x0
	mov	r2, #0xd
	mov	r3, #0x14
	bl	MenuZeroFillWindowRect
.L433:
	mov	r0, #0x0
	bl	SetCustomFont
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe55:
	.size	 ItemListMenu_InitDescription,.Lfe55-ItemListMenu_InitDescription
	.align	2, 0
	.type	 ItemListMenu_ChangeDescription,function
	.thumb_func
ItemListMenu_ChangeDescription:
	push	{r4, r5, lr}
	add	sp, sp, #0xffffff9c
	add	r4, r1, #0
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	mov	r0, #0x1
	bl	SetCustomFont
	ldr	r1, .L445
	ldr	r0, .L445+0x4
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r1, [r0, #0x1]
	ldrb	r2, [r0]
	add	r1, r1, r2
	ldrb	r0, [r0, #0x2]
	cmp	r1, r0
	bne	.L438	@cond_branch
	cmp	r4, #0
	bne	.L439	@cond_branch
	mov	r0, #0x0
	mov	r1, #0xd
	mov	r2, #0xd
	mov	r3, #0x14
	bl	MenuZeroFillWindowRect
	ldr	r0, .L445+0x8
	mov	r1, #0x1
	mov	r2, #0xf
	bl	MenuPrint
	b	.L442
.L446:
	.align	2, 0
.L445:
	.word	gBagPocketScrollStates
	.word	sCurrentBagPocket
	.word	gOtherText_ReturnTo
.L439:
	cmp	r4, #0x1
	bne	.L442	@cond_branch
	ldr	r1, .L447
	ldr	r0, .L447+0x4
	ldrb	r0, [r0]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	r1, #0x1
	mov	r2, #0xd
	bl	MenuPrint
	b	.L442
.L448:
	.align	2, 0
.L447:
	.word	gUnknown_0840E740
	.word	sReturnLocation
.L438:
	cmp	r4, #0
	bne	.L443	@cond_branch
	mov	r0, #0x0
	mov	r1, #0xd
	mov	r2, #0xd
	mov	r3, #0x14
	bl	MenuZeroFillWindowRect
.L443:
	lsl	r1, r5, #0x10
	asr	r1, r1, #0x10
	mov	r0, sp
	add	r2, r4, #0
	bl	ItemId_CopyDescription
	cmp	r0, #0
	beq	.L442	@cond_branch
	lsl	r2, r4, #0x19
	mov	r0, #0xd0
	lsl	r0, r0, #0x14
	add	r2, r2, r0
	lsr	r2, r2, #0x18
	mov	r0, sp
	mov	r1, #0x1
	bl	MenuPrint
.L442:
	mov	r0, #0x0
	bl	SetCustomFont
	add	sp, sp, #0x64
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe56:
	.size	 ItemListMenu_ChangeDescription,.Lfe56-ItemListMenu_ChangeDescription
	.align	2, 0
	.type	 CopyTextLine,function
	.thumb_func
CopyTextLine:
	push	{r4, r5, lr}
	add	r5, r0, #0
	add	r4, r2, #0x1
	add	r2, r1, #0
	add	r1, r5, #0
.L452:
	ldrb	r3, [r2]
	add	r0, r3, #0x2
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bhi	.L453	@cond_branch
	sub	r4, r4, #0x1
	cmp	r4, #0
	bne	.L454	@cond_branch
	mov	r0, #0xff
	strb	r0, [r1]
	mov	r0, #0x1
	b	.L458
.L454:
	lsl	r0, r3, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xff
	bne	.L455	@cond_branch
	mov	r0, #0x0
	b	.L458
.L455:
	add	r1, r5, #0
	add	r2, r2, #0x1
	b	.L452
.L453:
	strb	r3, [r1]
	add	r2, r2, #0x1
	add	r1, r1, #0x1
	b	.L452
.L458:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe57:
	.size	 CopyTextLine,.Lfe57-CopyTextLine
	.align	2, 0
	.type	 sub_80A4A98,function
	.thumb_func
sub_80A4A98:
	push	{r4, r5, lr}
	add	sp, sp, #0xffffff9c
	add	r5, r0, #0
	add	r4, r1, #0
	mov	r0, #0x1
	bl	SetCustomFont
	cmp	r4, #0
	bne	.L460	@cond_branch
	mov	r0, #0x0
	mov	r1, #0xd
	mov	r2, #0xd
	mov	r3, #0x14
	bl	MenuZeroFillWindowRect
.L460:
	mov	r0, sp
	add	r1, r5, #0
	add	r2, r4, #0
	bl	CopyTextLine
	cmp	r0, #0
	beq	.L461	@cond_branch
	lsl	r2, r4, #0x14
	mov	r0, #0xd0
	lsl	r0, r0, #0xf
	add	r2, r2, r0
	lsr	r2, r2, #0x10
	mov	r0, sp
	mov	r1, #0x4
	mov	r3, #0x0
	bl	MenuPrint_PixelCoords
.L461:
	mov	r0, #0x0
	bl	SetCustomFont
	add	sp, sp, #0x64
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe58:
	.size	 sub_80A4A98,.Lfe58-sub_80A4A98
	.align	2, 0
	.type	 sub_80A4ADC,function
	.thumb_func
sub_80A4ADC:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L464
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	mov	r2, #0x1c
	ldrsh	r0, [r1, r2]
	cmp	r0, #0
	bne	.L463	@cond_branch
	mov	r0, #0x0
	bl	sub_80A7528
.L463:
	mov	r0, #0x5
	bl	PlaySE
	ldr	r1, .L464+0x4
	mov	r0, #0x1
	strb	r0, [r1]
	pop	{r0}
	bx	r0
.L465:
	.align	2, 0
.L464:
	.word	gTasks
	.word	gUnknown_0203855C
.Lfe59:
	.size	 sub_80A4ADC,.Lfe59-sub_80A4ADC
	.align	2, 0
	.type	 sub_80A4B14,function
	.thumb_func
sub_80A4B14:
	push	{r4, lr}
	add	r4, r1, #0
	lsl	r0, r0, #0x18
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r2, .L467
	ldr	r1, .L467+0x4
	ldrb	r1, [r1, #0]
	lsl	r1, r1, #24
	asr	r1, r1, #24
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	lsr	r0, r0, #0x18
	ldrb	r2, [r1, #0x1]
	add	r0, r0, r2
	strb	r0, [r1, #0x1]
	mov	r0, #0x0
	bl	MoveMenuCursor
	bl	sub_80A73C0
	bl	sub_80A763C
	add	r0, r4, #0
	bl	sub_80A4ADC
	pop	{r4}
	pop	{r0}
	bx	r0
.L468:
	.align	2, 0
.L467:
	.word	gBagPocketScrollStates
	.word	sCurrentBagPocket
.Lfe60:
	.size	 sub_80A4B14,.Lfe60-sub_80A4B14
	.align	2, 0
	.type	 sub_80A4B58,function
	.thumb_func
sub_80A4B58:
	push	{r4, lr}
	add	r4, r1, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	bl	MoveMenuCursor
	ldr	r2, .L470
	ldr	r1, .L470+0x4
	ldrb	r1, [r1, #0]
	lsl	r1, r1, #24
	asr	r1, r1, #24
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	strb	r0, [r1]
	bl	sub_80A73C0
	add	r0, r4, #0
	bl	sub_80A4ADC
	pop	{r4}
	pop	{r0}
	bx	r0
.L471:
	.align	2, 0
.L470:
	.word	gBagPocketScrollStates
	.word	sCurrentBagPocket
.Lfe61:
	.size	 sub_80A4B58,.Lfe61-sub_80A4B58
	.align	2, 0
	.type	 sub_80A4B90,function
	.thumb_func
sub_80A4B90:
	push	{r4, lr}
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	mov	r0, #0x6
	bl	TestPlayerAvatarFlags
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L473	@cond_branch
	ldr	r0, .L478
	cmp	r4, r0
	beq	.L475	@cond_branch
	add	r0, r0, #0xd
	cmp	r4, r0
	bne	.L473	@cond_branch
.L475:
	ldr	r0, .L478+0x4
	b	.L477
.L479:
	.align	2, 0
.L478:
	.word	0x103
	.word	gOtherText_Walk
.L473:
	add	r0, r4, #0
	bl	ItemIsMail
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L476	@cond_branch
	ldr	r1, .L480
	ldr	r0, .L480+0x4
	ldr	r0, [r0]
	ldrb	r0, [r0]
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r0, [r0]
	b	.L477
.L481:
	.align	2, 0
.L480:
	.word	sItemPopupMenuActions
	.word	sPopupMenuActionList
.L476:
	ldr	r0, .L482
.L477:
	pop	{r4}
	pop	{r1}
	bx	r1
.L483:
	.align	2, 0
.L482:
	.word	gOtherText_Check
.Lfe62:
	.size	 sub_80A4B90,.Lfe62-sub_80A4B90
	.align	2, 0
	.type	 sub_80A4BF0,function
	.thumb_func
sub_80A4BF0:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #0xfffffff8
	add	r5, r0, #0
	mov	r0, #0x1
	bl	SetCustomFont
	ldr	r7, .L503
	ldrb	r4, [r7]
	cmp	r4, #0x4
	beq	.LCB4353
	b	.L485	@long jump
.LCB4353:
	mov	r0, #0x0
	mov	r1, #0x7
	mov	r2, #0xd
	mov	r3, #0xc
	bl	MenuDrawTextWindow
	str	r4, [sp]
	add	r0, r5, #0
	mov	r1, #0x1
	mov	r2, #0x8
	mov	r3, #0xc
	bl	sub_80A4008
	bl	sub_80F9344
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L486	@cond_branch
	ldr	r0, .L503+0x4
	ldrb	r0, [r0]
	cmp	r0, #0x5
	bne	.L486	@cond_branch
	mov	r0, #0x1
	mov	r1, #0x0
	bl	sub_80A7834
	b	.L487
.L504:
	.align	2, 0
.L503:
	.word	gUnknown_02038564
	.word	sReturnLocation
.L486:
	mov	r6, #0x0
	ldr	r0, .L505
	ldrb	r0, [r0]
	cmp	r6, r0
	bcs	.L487	@cond_branch
	ldr	r4, .L505+0x4
.L491:
	cmp	r6, #0
	bne	.L492	@cond_branch
	ldr	r0, .L505+0x8
	ldrh	r0, [r0]
	bl	sub_80A4B90
	add	r3, r0, #0
	b	.L493
.L506:
	.align	2, 0
.L505:
	.word	gUnknown_02038564
	.word	sItemPopupMenuActions
	.word	gScriptItemId
.L492:
	ldr	r0, .L507
	ldr	r0, [r0]
	add	r0, r0, r6
	ldrb	r0, [r0]
	lsl	r0, r0, #0x3
	add	r0, r0, r4
	ldr	r3, [r0]
.L493:
	lsr	r0, r6, #0x1
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x19
	mov	r0, #0x80
	lsl	r0, r0, #0x12
	add	r1, r1, r0
	lsr	r1, r1, #0x18
	mov	r2, #0x1
	and	r2, r2, r6
	lsl	r2, r2, #0x1
	add	r2, r2, #0x8
	add	r0, r3, #0
	bl	MenuPrint
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r0, .L507+0x4
	ldrb	r0, [r0]
	cmp	r6, r0
	bcc	.L491	@cond_branch
.L487:
	ldr	r0, .L507+0x8
	ldrb	r0, [r0]
	cmp	r0, #0x5
	bne	.L495	@cond_branch
	ldr	r0, .L507+0x4
	ldrb	r3, [r0]
	ldr	r0, .L507+0xc
	ldrb	r0, [r0]
	str	r0, [sp]
	mov	r0, #0x1
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	mov	r1, #0x1
	mov	r2, #0x8
	bl	InitMenu
	b	.L496
.L508:
	.align	2, 0
.L507:
	.word	sPopupMenuActionList
	.word	gUnknown_02038564
	.word	sReturnLocation
	.word	sPopupMenuSelection
.L495:
	ldr	r0, .L509
	ldrb	r3, [r0]
	mov	r0, #0x0
	str	r0, [sp]
	mov	r0, #0x1
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	mov	r1, #0x1
	mov	r2, #0x8
	bl	InitMenu
.L496:
	mov	r0, #0x2f
	bl	sub_8072DCC
	b	.L497
.L510:
	.align	2, 0
.L509:
	.word	gUnknown_02038564
.L485:
	mov	r0, #0x0
	mov	r1, #0x5
	mov	r2, #0xd
	mov	r3, #0xc
	bl	MenuDrawTextWindow
	mov	r0, #0x6
	str	r0, [sp]
	add	r0, r5, #0
	mov	r1, #0x1
	mov	r2, #0x6
	mov	r3, #0xc
	bl	sub_80A4008
	mov	r6, #0x0
	ldrb	r7, [r7]
	cmp	r6, r7
	bcs	.L499	@cond_branch
	ldr	r7, .L511
.L501:
	ldr	r0, .L511+0x4
	ldr	r0, [r0]
	add	r0, r0, r6
	ldrb	r0, [r0]
	lsl	r0, r0, #0x3
	add	r0, r0, r7
	ldr	r5, [r0]
	add	r0, r6, #0
	mov	r1, #0x3
	bl	__udivsi3
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r4, r0, #0x1
	add	r4, r4, r0
	lsl	r4, r4, #0x19
	mov	r0, #0x80
	lsl	r0, r0, #0x12
	add	r4, r4, r0
	lsr	r4, r4, #0x18
	add	r0, r6, #0
	mov	r1, #0x3
	bl	__umodsi3
	add	r2, r0, #0
	lsl	r2, r2, #0x19
	mov	r0, #0xc0
	lsl	r0, r0, #0x13
	add	r2, r2, r0
	lsr	r2, r2, #0x18
	add	r0, r5, #0
	add	r1, r4, #0
	bl	MenuPrint
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r0, .L511+0x8
	ldrb	r0, [r0]
	cmp	r6, r0
	bcc	.L501	@cond_branch
.L499:
	ldr	r0, .L511+0x8
	ldrb	r3, [r0]
	mov	r0, #0x0
	str	r0, [sp]
	mov	r0, #0x1
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	mov	r1, #0x1
	mov	r2, #0x6
	bl	InitMenu
	mov	r0, #0x2f
	bl	sub_8072DCC
.L497:
	mov	r0, #0x2
	bl	sub_80A7528
	mov	r0, #0x0
	bl	SetCustomFont
	add	sp, sp, #0x8
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L512:
	.align	2, 0
.L511:
	.word	sItemPopupMenuActions
	.word	sPopupMenuActionList
	.word	gUnknown_02038564
.Lfe63:
	.size	 sub_80A4BF0,.Lfe63-sub_80A4BF0
	.align	2, 0
	.type	 sub_80A4DA4,function
	.thumb_func
sub_80A4DA4:
	push	{r4, lr}
	add	sp, sp, #0xfffffffc
	add	r4, r0, #0
	bl	sub_80A73FC
	mov	r0, #0x6
	str	r0, [sp]
	add	r0, r4, #0
	mov	r1, #0x0
	mov	r2, #0x6
	mov	r3, #0xd
	bl	sub_80A36B8
	mov	r0, #0x0
	mov	r1, #0x5
	mov	r2, #0xd
	mov	r3, #0xc
	bl	MenuZeroFillWindowRect
	bl	sub_80A7590
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe64:
	.size	 sub_80A4DA4,.Lfe64-sub_80A4DA4
	.align	2, 0
	.type	 sub_80A4DD8,function
	.thumb_func
sub_80A4DD8:
	push	{r4, r5, r6, lr}
	mov	r6, sl
	mov	r5, r9
	mov	r4, r8
	push	{r4, r5, r6}
	add	sp, sp, #0xfffffffc
	add	r4, r1, #0
	add	r1, r2, #0
	add	r6, r3, #0
	ldr	r5, [sp, #0x20]
	ldr	r2, [sp, #0x24]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r6, r6, #0x18
	lsr	r6, r6, #0x18
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	sl, r2
	ldr	r3, .L515
	lsl	r2, r0, #0x2
	add	r2, r2, r0
	lsl	r2, r2, #0x3
	add	r2, r2, r3
	mov	r0, #0x1
	strh	r0, [r2, #0xa]
	add	r0, r4, #0x2
	mov	r9, r0
	strh	r0, [r2, #0xc]
	add	r0, r1, #0x1
	mov	r8, r0
	strh	r0, [r2, #0xe]
	add	r2, r4, r6
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	add	r3, r1, r5
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	add	r0, r4, #0
	bl	MenuDrawTextWindow
	ldr	r0, .L515+0x4
	add	r4, r4, #0x1
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r1, r8
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r8, r1
	sub	r6, r6, #0x1
	lsl	r6, r6, #0x18
	lsr	r6, r6, #0x18
	sub	r5, r5, #0x1
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	str	r5, [sp]
	add	r1, r4, #0
	mov	r2, r8
	add	r3, r6, #0
	bl	sub_80A4008
	mov	r2, r9
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r9, r2
	mov	r0, sl
	str	r0, [sp]
	mov	r0, #0x1
	mov	r1, #0x1
	mov	r3, r8
	bl	sub_80A418C
	add	sp, sp, #0x4
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L516:
	.align	2, 0
.L515:
	.word	gTasks
	.word	gBGTilemapBuffers+0x800
.Lfe65:
	.size	 sub_80A4DD8,.Lfe65-sub_80A4DD8
	.align	2, 0
	.type	 sub_80A4E8C,function
	.thumb_func
sub_80A4E8C:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	add	r6, r1, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r6, r6, #0x18
	lsr	r6, r6, #0x18
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x0
	mov	r1, #0x1
	bl	sub_80F979C
	mov	r0, #0x1
	mov	r1, #0x1
	bl	sub_80F979C
	mov	r0, #0x2
	mov	r1, #0x1
	bl	sub_80F979C
	mov	r0, #0x3
	mov	r1, #0x1
	bl	sub_80F979C
	mov	r0, #0x0
	bl	PauseVerticalScrollIndicator
	mov	r0, #0x1
	bl	PauseVerticalScrollIndicator
	mov	r0, #0x2
	bl	PauseVerticalScrollIndicator
	mov	r0, #0x3
	bl	PauseVerticalScrollIndicator
	ldr	r5, .L518
	lsl	r4, r4, #0x18
	asr	r4, r4, #0x18
	add	r0, r5, #0
	add	r1, r4, #0
	bl	ChangePocket
	ldr	r0, .L518+0x4
	ldrb	r1, [r0]
	add	r0, r5, #0
	bl	DrawPocketIndicatorDots
	bl	sub_80A3770
	bl	sub_80A7C64
	add	r0, r6, #0
	bl	CreateBagPokeballSprite
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L519:
	.align	2, 0
.L518:
	.word	gBGTilemapBuffers+0x1000
	.word	sCurrentBagPocket
.Lfe66:
	.size	 sub_80A4E8C,.Lfe66-sub_80A4E8C
	.align	2, 0
	.type	 sub_80A4F0C,function
	.thumb_func
sub_80A4F0C:
	push	{r4, lr}
	ldr	r0, .L528
	ldrb	r0, [r0]
	sub	r0, r0, #0x4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bls	.L524	@cond_branch
	ldr	r4, .L528+0x4
	ldrh	r0, [r4, #0x2e]
	cmp	r0, #0x10
	beq	.L523	@cond_branch
	bl	sub_80F9284
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x2
	bne	.L522	@cond_branch
.L523:
	mov	r0, #0x1
	mov	r1, #0x2
	b	.L527
.L529:
	.align	2, 0
.L528:
	.word	sReturnLocation
	.word	gMain
.L522:
	ldrh	r0, [r4, #0x2e]
	cmp	r0, #0x20
	beq	.L525	@cond_branch
	bl	sub_80F9284
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L524	@cond_branch
.L525:
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x1
.L527:
	bl	sub_80A4E8C
	mov	r0, #0x1
	b	.L526
.L524:
	mov	r0, #0x0
.L526:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe67:
	.size	 sub_80A4F0C,.Lfe67-sub_80A4F0C
	.align	2, 0
	.type	 sub_80A4F68,function
	.thumb_func
sub_80A4F68:
	push	{lr}
	bl	sub_80A4F0C
	pop	{r0}
	bx	r0
.Lfe68:
	.size	 sub_80A4F68,.Lfe68-sub_80A4F68
	.align	2, 0
	.type	 sub_80A4F74,function
	.thumb_func
sub_80A4F74:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r2, r4, #0
	mov	r5, #0x0
	ldr	r0, .L553
	ldrh	r0, [r0, #0x30]
	mov	r1, #0xf0
	and	r1, r1, r0
	cmp	r1, #0x40
	bne	.L532	@cond_branch
	ldr	r1, .L553+0x4
	ldr	r0, .L553+0x8
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	lsl	r0, r0, #0x2
	add	r1, r0, r1
	ldrb	r0, [r1]
	cmp	r0, #0
	beq	.L533	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	add	r1, r4, #0
	bl	sub_80A4B58
	b	.L534
.L554:
	.align	2, 0
.L553:
	.word	gMain
	.word	gBagPocketScrollStates
	.word	sCurrentBagPocket
.L533:
	ldrb	r0, [r1, #0x1]
	cmp	r0, #0
	beq	.L534	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	add	r1, r4, #0
	bl	sub_80A4B14
.L534:
	ldr	r0, .L555
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L551	@cond_branch
	ldr	r1, .L555+0x4
	ldrh	r0, [r1, #0x32]
	cmp	r0, #0x5
	bne	.L551	@cond_branch
	mov	r0, #0xb
	strh	r0, [r1, #0x32]
	b	.L551
.L556:
	.align	2, 0
.L555:
	.word	gLinkOpen
	.word	gMain
.L532:
	cmp	r1, #0x80
	bne	.L538	@cond_branch
	ldr	r0, .L557
	ldrb	r0, [r0]
	cmp	r0, #0x5
	beq	.L539	@cond_branch
	ldr	r1, .L557+0x4
	ldr	r0, .L557+0x8
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	lsl	r0, r0, #0x2
	add	r2, r0, r1
	ldrb	r0, [r2]
	ldrb	r1, [r2, #0x3]
	cmp	r0, r1
	bne	.L552	@cond_branch
	ldrb	r0, [r2, #0x1]
	ldrb	r1, [r2]
	add	r0, r0, r1
	ldrb	r2, [r2, #0x2]
	cmp	r0, r2
	beq	.L543	@cond_branch
	mov	r0, #0x1
	add	r1, r4, #0
	bl	sub_80A4B14
	b	.L543
.L558:
	.align	2, 0
.L557:
	.word	sReturnLocation
	.word	gBagPocketScrollStates
	.word	sCurrentBagPocket
.L539:
	ldr	r1, .L559
	ldr	r0, .L559+0x4
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	lsl	r0, r0, #0x2
	add	r2, r0, r1
	ldrb	r1, [r2, #0x1]
	ldrb	r3, [r2]
	add	r1, r1, r3
	ldrb	r0, [r2, #0x2]
	sub	r0, r0, #0x1
	cmp	r1, r0
	beq	.L543	@cond_branch
	ldrb	r2, [r2, #0x3]
	cmp	r3, r2
	beq	.L545	@cond_branch
.L552:
	mov	r0, #0x1
	add	r1, r4, #0
	bl	sub_80A4B58
	b	.L543
.L560:
	.align	2, 0
.L559:
	.word	gBagPocketScrollStates
	.word	sCurrentBagPocket
.L545:
	mov	r0, #0x1
	add	r1, r4, #0
	bl	sub_80A4B14
.L543:
	mov	r5, #0x1
	ldr	r0, .L561
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L537	@cond_branch
	ldr	r1, .L561+0x4
	ldrh	r0, [r1, #0x32]
	cmp	r0, #0x5
	bne	.L537	@cond_branch
	mov	r0, #0xb
	strh	r0, [r1, #0x32]
	b	.L537
.L562:
	.align	2, 0
.L561:
	.word	gLinkOpen
	.word	gMain
.L538:
	ldr	r0, .L563
	lsl	r1, r2, #0x2
	add	r1, r1, r2
	lsl	r1, r1, #0x3
	add	r4, r1, r0
	mov	r1, #0x1c
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	bne	.L549	@cond_branch
	bl	sub_80A4F0C
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L549	@cond_branch
	bl	sub_80A73F0
	ldr	r0, .L563+0x4
	str	r0, [r4]
.L551:
	mov	r5, #0x1
	b	.L537
.L564:
	.align	2, 0
.L563:
	.word	gTasks
	.word	sub_80A4F68
.L549:
	bl	sub_80A73C0
.L537:
	add	r0, r5, #0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe69:
	.size	 sub_80A4F74,.Lfe69-sub_80A4F74
	.align	2, 0
	.type	 sub_80A50C8,function
	.thumb_func
sub_80A50C8:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L586
	add	r4, r0, r1
	ldr	r1, .L586+0x4
	mov	r0, #0x0
	strb	r0, [r1]
	ldr	r0, .L586+0x8
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.LCB5157
	b	.L565	@long jump
.LCB5157:
	add	r0, r5, #0
	bl	sub_80A4F74
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.LCB5165
	b	.L580	@long jump
.LCB5165:
	ldr	r2, .L586+0xc
	ldrh	r1, [r2, #0x2e]
	mov	r0, #0x4
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L568	@cond_branch
	ldr	r3, .L586+0x10
	ldrb	r0, [r3]
	sub	r0, r0, #0x2
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bls	.L568	@cond_branch
	ldr	r0, .L586+0x14
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bhi	.L568	@cond_branch
	mov	r1, #0x14
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	bne	.L569	@cond_branch
	ldr	r1, .L586+0x18
	mov	r0, #0x0
	ldrsb	r0, [r3, r0]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r1, [r0, #0x1]
	ldrb	r2, [r0]
	add	r1, r1, r2
	ldrb	r0, [r0, #0x2]
	cmp	r1, r0
	bne	.LCB5206
	b	.L580	@long jump
.LCB5206:
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r5, #0
	bl	sub_80A3F50
	b	.L585
.L587:
	.align	2, 0
.L586:
	.word	gTasks+0x8
	.word	sSelect
	.word	gPaletteFade
	.word	gMain
	.word	sCurrentBagPocket
	.word	sReturnLocation
	.word	gBagPocketScrollStates
.L569:
	ldr	r1, .L588
	mov	r0, #0x0
	ldrsb	r0, [r3, r0]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r1, [r0, #0x1]
	ldrb	r2, [r0]
	add	r1, r1, r2
	ldrb	r0, [r0, #0x2]
	cmp	r1, r0
	beq	.L572	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r5, #0
	bl	sub_80A3E90
	b	.L580
.L589:
	.align	2, 0
.L588:
	.word	gBagPocketScrollStates
.L572:
	add	r0, r5, #0
	bl	sub_80A3EF4
	b	.L585
.L568:
	ldrh	r2, [r2, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r2
	cmp	r0, #0
	beq	.L574	@cond_branch
	ldr	r0, .L590
	mov	r8, r0
	ldr	r7, .L590+0x4
	mov	r0, #0x0
	ldrsb	r0, [r7, r0]
	lsl	r0, r0, #0x2
	add	r0, r0, r8
	ldrb	r1, [r0, #0x1]
	ldrb	r2, [r0]
	add	r1, r1, r2
	ldrb	r0, [r0, #0x2]
	cmp	r1, r0
	bne	.L575	@cond_branch
	mov	r0, #0x14
	ldrsh	r1, [r4, r0]
	cmp	r1, #0
	bne	.L576	@cond_branch
	ldr	r0, .L590+0x8
	strh	r1, [r0]
	ldr	r1, .L590+0xc
	ldr	r0, .L590+0x10
	ldrb	r0, [r0]
	lsl	r0, r0, #0x3
	add	r1, r1, #0x4
	add	r0, r0, r1
	ldr	r1, [r0]
	add	r0, r5, #0
	bl	_call_via_r1
	b	.L580
.L591:
	.align	2, 0
.L590:
	.word	gBagPocketScrollStates
	.word	sCurrentBagPocket
	.word	gScriptItemId
	.word	gUnknown_083C16BC
	.word	sReturnLocation
.L576:
	add	r0, r5, #0
	bl	sub_80A3EF4
	b	.L585
.L575:
	mov	r1, #0x14
	ldrsh	r6, [r4, r1]
	cmp	r6, #0
	bne	.L579	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r4, .L592
	mov	r0, #0x1
	strb	r0, [r4]
	ldr	r2, .L592+0x4
	mov	r1, #0x0
	ldrsb	r1, [r7, r1]
	lsl	r1, r1, #0x2
	add	r1, r1, r8
	ldrb	r0, [r1]
	ldrb	r1, [r1, #0x1]
	add	r0, r0, r1
	strb	r0, [r2]
	ldr	r3, .L592+0x8
	ldrb	r0, [r2]
	ldr	r1, .L592+0xc
	ldr	r1, [r1]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrh	r0, [r0]
	strh	r0, [r3]
	ldr	r1, .L592+0x10
	ldr	r0, .L592+0x14
	ldrb	r0, [r0]
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, [r0]
	add	r0, r5, #0
	bl	_call_via_r1
	strb	r6, [r4]
	mov	r0, #0x0
	bl	sub_80F98A4
	mov	r0, #0x1
	bl	sub_80F98A4
	mov	r0, #0x2
	bl	sub_80F98A4
	mov	r0, #0x3
	bl	sub_80F98A4
	bl	sub_80A797C
	b	.L580
.L593:
	.align	2, 0
.L592:
	.word	sSelect
	.word	gUnknown_02038560
	.word	gScriptItemId
	.word	gCurrentBagPocketItemSlots
	.word	gUnknown_083C16BC
	.word	sReturnLocation
.L579:
	add	r0, r5, #0
	bl	sub_80A3E90
.L585:
.L580:
	add	r0, r5, #0
	bl	sub_808B5B4
	b	.L565
.L574:
	mov	r0, #0x2
	and	r0, r0, r2
	cmp	r0, #0
	beq	.L565	@cond_branch
	mov	r0, #0x14
	ldrsh	r1, [r4, r0]
	cmp	r1, #0
	bne	.L582	@cond_branch
	ldr	r2, .L594
	ldrb	r0, [r2]
	cmp	r0, #0x5
	beq	.L584	@cond_branch
	ldr	r0, .L594+0x4
	strh	r1, [r0]
	ldr	r1, .L594+0x8
	ldrb	r0, [r2]
	lsl	r0, r0, #0x3
	add	r1, r1, #0x4
	add	r0, r0, r1
	ldr	r1, [r0]
	add	r0, r5, #0
	bl	_call_via_r1
	b	.L584
.L595:
	.align	2, 0
.L594:
	.word	sReturnLocation
	.word	gScriptItemId
	.word	gUnknown_083C16BC
.L582:
	add	r0, r5, #0
	bl	sub_80A3EF4
.L584:
	add	r0, r5, #0
	bl	sub_808B5B4
.L565:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe70:
	.size	 sub_80A50C8,.Lfe70-sub_80A50C8
	.align	2, 0
	.globl	sub_80A52C4
	.type	 sub_80A52C4,function
	.thumb_func
sub_80A52C4:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r1, #0x10
	lsr	r3, r1, #0x10
	add	r4, r3, #0
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L612
	add	r1, r1, r0
	ldr	r0, .L612+0x4
	ldrh	r0, [r0, #0x30]
	mov	r2, #0xf0
	and	r2, r2, r0
	cmp	r2, #0x40
	bne	.L597	@cond_branch
	mov	r2, #0x2
	ldrsh	r0, [r1, r2]
	cmp	r0, r3
	beq	.L607	@cond_branch
	ldrh	r0, [r1, #0x2]
	add	r0, r0, #0x1
	b	.L611
.L613:
	.align	2, 0
.L612:
	.word	gTasks+0x8
	.word	gMain
.L597:
	cmp	r2, #0x80
	bne	.L600	@cond_branch
	ldrh	r2, [r1, #0x2]
	mov	r4, #0x2
	ldrsh	r0, [r1, r4]
	cmp	r0, #0x1
	beq	.L601	@cond_branch
	sub	r0, r2, #0x1
	b	.L611
.L601:
	strh	r3, [r1, #0x2]
	b	.L608
.L600:
	cmp	r2, #0x10
	bne	.L603	@cond_branch
	mov	r2, #0x2
	ldrsh	r0, [r1, r2]
	add	r0, r0, #0xa
	cmp	r0, r3
	bge	.L604	@cond_branch
	ldrh	r0, [r1, #0x2]
	add	r0, r0, #0xa
	b	.L611
.L604:
	strh	r4, [r1, #0x2]
	b	.L608
.L603:
	cmp	r2, #0x20
	bne	.L606	@cond_branch
	ldrh	r2, [r1, #0x2]
	mov	r3, #0x2
	ldrsh	r0, [r1, r3]
	cmp	r0, #0xa
	ble	.L607	@cond_branch
	add	r0, r2, #0
	sub	r0, r0, #0xa
	b	.L611
.L607:
	mov	r0, #0x1
.L611:
	strh	r0, [r1, #0x2]
.L608:
	mov	r0, #0x1
	b	.L609
.L606:
	mov	r0, #0x0
.L609:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe71:
	.size	 sub_80A52C4,.Lfe71-sub_80A52C4
	.align	2, 0
	.type	 sub_80A5350,function
	.thumb_func
sub_80A5350:
	push	{r4, lr}
	add	sp, sp, #0xfffffffc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r2, .L619
	add	r4, r1, r2
	ldr	r1, .L619+0x4
	ldrb	r1, [r1]
	ldr	r2, .L619+0x8
	ldr	r2, [r2]
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldrh	r1, [r1, #0x2]
	bl	sub_80A52C4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L615	@cond_branch
	ldr	r0, .L619+0xc
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	cmp	r0, #0x3
	bne	.L616	@cond_branch
	ldrh	r0, [r4, #0x2]
	ldrb	r2, [r4, #0x4]
	ldrb	r3, [r4, #0x6]
	mov	r1, #0x3
	str	r1, [sp]
	mov	r1, #0x1
	bl	sub_80A418C
	b	.L617
.L620:
	.align	2, 0
.L619:
	.word	gTasks+0x8
	.word	gUnknown_02038560
	.word	gCurrentBagPocketItemSlots
	.word	sCurrentBagPocket
.L616:
	ldrh	r0, [r4, #0x2]
	ldrb	r2, [r4, #0x4]
	ldrb	r3, [r4, #0x6]
	mov	r1, #0x2
	str	r1, [sp]
	mov	r1, #0x1
	bl	sub_80A418C
.L617:
	mov	r0, #0x1
	b	.L618
.L615:
	mov	r0, #0x0
.L618:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe72:
	.size	 sub_80A5350,.Lfe72-sub_80A5350
	.align	2, 0
	.type	 sub_80A53CC,function
	.thumb_func
sub_80A53CC:
	push	{lr}
	bl	sub_80A34B4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L622	@cond_branch
	bl	sub_80A3770
	ldr	r0, .L623
	mov	r1, #0x0
	bl	CreateTask
	ldr	r1, .L623+0x4
	strb	r0, [r1]
.L622:
	pop	{r0}
	bx	r0
.L624:
	.align	2, 0
.L623:
	.word	sub_80A50C8
	.word	gUnknown_02038563
.Lfe73:
	.size	 sub_80A53CC,.Lfe73-sub_80A53CC
	.align	2, 0
	.globl	sub_80A53F8
	.type	 sub_80A53F8,function
	.thumb_func
sub_80A53F8:
	push	{lr}
	ldr	r0, .L626
	mov	r1, #0x0
	strb	r1, [r0]
	ldr	r0, .L626+0x4
	bl	SetMainCallback2
	pop	{r0}
	bx	r0
.L627:
	.align	2, 0
.L626:
	.word	sReturnLocation
	.word	sub_80A53CC
.Lfe74:
	.size	 sub_80A53F8,.Lfe74-sub_80A53F8
	.align	2, 0
	.type	 sub_80A5414,function
	.thumb_func
sub_80A5414:
	.syntax unified
    push {r4,r5,lr}
    lsls r0, 24
    lsrs r4, r0, 24
    movs r5, 0
    bl sub_80A78A0
    cmp r0, 0
    bne _080A5426
    b _080A5552
_080A5426:
    ldr r2, _080A5460 @ =gMain
    ldrh r0, [r2, 0x30]
    movs r1, 0xF0
    ands r1, r0
    cmp r1, 0x40
    bne _080A546C
    ldr r4, _080A5464 @ =sPopupMenuSelection
    ldrb r1, [r4]
    movs r0, 0x1
    ands r0, r1
    cmp r0, 0
    bne _080A5440
    b _080A5552
_080A5440:
    ldrb r1, [r4]
    ldr r0, _080A5468 @ =sPopupMenuActionList
    ldr r0, [r0]
    adds r1, r0
    subs r1, 0x1
    ldrb r0, [r1]
    cmp r0, 0x8
    bne _080A5452
    b _080A5552
_080A5452:
    movs r0, 0x5
    bl PlaySE
    movs r0, 0x1
    negs r0, r0
    b _080A54EE
    .align 2, 0
_080A5460: .4byte gMain
_080A5464: .4byte sPopupMenuSelection
_080A5468: .4byte sPopupMenuActionList
_080A546C:
    cmp r1, 0x80
    bne _080A549C
    ldr r4, _080A5494 @ =sPopupMenuSelection
    ldrb r1, [r4]
    movs r0, 0x1
    ands r0, r1
    cmp r0, 0
    bne _080A5552
    ldrb r1, [r4]
    ldr r0, _080A5498 @ =sPopupMenuActionList
    ldr r0, [r0]
    adds r1, r0
    ldrb r0, [r1, 0x1]
    cmp r0, 0x8
    beq _080A5552
    movs r0, 0x5
    bl PlaySE
    movs r0, 0x1
    b _080A54EE
    .align 2, 0
_080A5494: .4byte sPopupMenuSelection
_080A5498: .4byte sPopupMenuActionList
_080A549C:
    cmp r1, 0x20
    bne _080A54CC
    ldr r4, _080A54C4 @ =sPopupMenuSelection
    ldrb r0, [r4]
    cmp r0, 0x1
    bls _080A5552
    adds r1, r0, 0
    ldr r0, _080A54C8 @ =sPopupMenuActionList
    ldr r0, [r0]
    adds r1, r0
    subs r1, 0x2
    ldrb r0, [r1]
    cmp r0, 0x8
    beq _080A5552
    movs r0, 0x5
    bl PlaySE
    movs r0, 0x2
    negs r0, r0
    b _080A54EE
    .align 2, 0
_080A54C4: .4byte sPopupMenuSelection
_080A54C8: .4byte sPopupMenuActionList
_080A54CC:
    cmp r1, 0x10
    bne _080A5500
    ldr r4, _080A54F8 @ =sPopupMenuSelection
    ldrb r0, [r4]
    cmp r0, 0x1
    bhi _080A5552
    adds r1, r0, 0
    ldr r0, _080A54FC @ =sPopupMenuActionList
    ldr r0, [r0]
    adds r1, r0
    ldrb r0, [r1, 0x2]
    cmp r0, 0x8
    beq _080A5552
    movs r0, 0x5
    bl PlaySE
    movs r0, 0x2
_080A54EE:
    bl MoveMenuCursor3
    strb r0, [r4]
    b _080A5552
    .align 2, 0
_080A54F8: .4byte sPopupMenuSelection
_080A54FC: .4byte sPopupMenuActionList
_080A5500:
    ldrh r1, [r2, 0x2E]
    movs r0, 0x1
    ands r0, r1
    cmp r0, 0
    bne _080A5590
    movs r0, 0x2
    ands r0, r1
    cmp r0, 0
    beq _080A5552
    ldr r1, _080A5570 @ =gTasks
    lsls r0, r4, 2
    adds r0, r4
    lsls r0, 3
    adds r0, r1
    strh r5, [r0, 0x1C]
    ldr r1, _080A5574 @ =gBagPocketScrollStates
    ldr r0, _080A5578 @ =sCurrentBagPocket
    ldrb r0, [r0]
    lsls r0, 24
    asrs r0, 24
    lsls r0, 2
    adds r0, r1
    ldrb r2, [r0]
    adds r0, r4, 0
    adds r1, r2, 0
    bl sub_80A48E8
    ldr r0, _080A557C @ =gBGTilemapBuffers + 0x800
    bl sub_80A4DA4
    ldr r1, _080A5580 @ =sItemPopupMenuActions
    ldr r0, _080A5584 @ =sPopupMenuActionList
    ldr r0, [r0]
    ldrb r0, [r0, 0x3]
    lsls r0, 3
    adds r1, 0x4
    adds r0, r1
    ldr r5, [r0]
    adds r0, r4, 0
    bl _call_via_r5
_080A5552:
    cmp r5, 0
    bne _080A55FA
    ldr r0, _080A5588 @ =sReturnLocation
    ldrb r0, [r0]
    cmp r0, 0x5
    bne _080A55E0
    ldr r0, _080A558C @ =sPopupMenuSelection
    ldrb r0, [r0]
    cmp r0, 0
    bne _080A55D4
    movs r0, 0xC
    bl sub_8072DDC
    b _080A55FA
    .align 2, 0
_080A5570: .4byte gTasks
_080A5574: .4byte gBagPocketScrollStates
_080A5578: .4byte sCurrentBagPocket
_080A557C: .4byte gBGTilemapBuffers + 0x800
_080A5580: .4byte sItemPopupMenuActions
_080A5584: .4byte sPopupMenuActionList
_080A5588: .4byte sReturnLocation
_080A558C: .4byte sPopupMenuSelection
_080A5590:
    ldr r1, _080A55C0 @ =gTasks
    lsls r0, r4, 2
    adds r0, r4
    lsls r0, 3
    adds r0, r1
    strh r5, [r0, 0x1C]
    ldr r0, _080A55C4 @ =gBGTilemapBuffers + 0x800
    bl sub_80A4DA4
    ldr r1, _080A55C8 @ =sItemPopupMenuActions
    ldr r0, _080A55CC @ =sPopupMenuSelection
    ldrb r2, [r0]
    ldr r0, _080A55D0 @ =sPopupMenuActionList
    ldr r0, [r0]
    adds r0, r2
    ldrb r0, [r0]
    lsls r0, 3
    adds r1, 0x4
    adds r0, r1
    ldr r5, [r0]
    adds r0, r4, 0
    bl _call_via_r5
    b _080A5552
    .align 2, 0
_080A55C0: .4byte gTasks
_080A55C4: .4byte gBGTilemapBuffers + 0x800
_080A55C8: .4byte sItemPopupMenuActions
_080A55CC: .4byte sPopupMenuSelection
_080A55D0: .4byte sPopupMenuActionList
_080A55D4:
    cmp r0, 0x1
    bls _080A55E8
    movs r0, 0x30
    bl sub_8072DCC
    b _080A55FA
_080A55E0:
    ldr r0, _080A55F0 @ =sPopupMenuSelection
    ldrb r0, [r0]
    cmp r0, 0x1
    bhi _080A55F4
_080A55E8:
    movs r0, 0x2F
    bl sub_8072DCC
    b _080A55FA
    .align 2, 0
_080A55F0: .4byte sPopupMenuSelection
_080A55F4:
    movs r0, 0x30
    bl sub_8072DCC
_080A55FA:
    pop {r4,r5}
    pop {r0}
    bx r0
    .syntax divided

	.code	16
.Lfe75:
	.size	 sub_80A5414,.Lfe75-sub_80A5414
	.align	2, 0
	.type	 sub_80A5600,function
	.thumb_func
sub_80A5600:
	.syntax unified
    push {r4,r5,lr}
    lsls r0, 24
    lsrs r4, r0, 24
    movs r5, 0
    ldr r2, _080A563C @ =gMain
    ldrh r0, [r2, 0x30]
    movs r1, 0xF0
    ands r1, r0
    cmp r1, 0x40
    bne _080A5648
    ldr r4, _080A5640 @ =sPopupMenuSelection
    ldrb r0, [r4]
    cmp r0, 0
    bne _080A561E
    b _080A5736
_080A561E:
    adds r1, r0, 0
    ldr r0, _080A5644 @ =sPopupMenuActionList
    ldr r0, [r0]
    adds r1, r0
    subs r1, 0x1
    ldrb r0, [r1]
    cmp r0, 0x8
    bne _080A5630
    b _080A5736
_080A5630:
    movs r0, 0x5
    bl PlaySE
    movs r0, 0x1
    negs r0, r0
    b _080A56D2
    .align 2, 0
_080A563C: .4byte gMain
_080A5640: .4byte sPopupMenuSelection
_080A5644: .4byte sPopupMenuActionList
_080A5648:
    cmp r1, 0x80
    bne _080A5680
    ldr r4, _080A5674 @ =sPopupMenuSelection
    ldrb r1, [r4]
    ldr r0, _080A5678 @ =gUnknown_02038564
    ldrb r0, [r0]
    subs r0, 0x1
    cmp r1, r0
    beq _080A5736
    cmp r1, 0x2
    beq _080A5736
    ldr r0, _080A567C @ =sPopupMenuActionList
    ldr r0, [r0]
    adds r0, r1, r0
    ldrb r0, [r0, 0x1]
    cmp r0, 0x8
    beq _080A5736
    movs r0, 0x5
    bl PlaySE
    movs r0, 0x1
    b _080A56D2
    .align 2, 0
_080A5674: .4byte sPopupMenuSelection
_080A5678: .4byte gUnknown_02038564
_080A567C: .4byte sPopupMenuActionList
_080A5680:
    cmp r1, 0x20
    bne _080A56B0
    ldr r4, _080A56A8 @ =sPopupMenuSelection
    ldrb r0, [r4]
    cmp r0, 0x2
    bls _080A5736
    adds r1, r0, 0
    ldr r0, _080A56AC @ =sPopupMenuActionList
    ldr r0, [r0]
    adds r1, r0
    subs r1, 0x3
    ldrb r0, [r1]
    cmp r0, 0x8
    beq _080A5736
    movs r0, 0x5
    bl PlaySE
    movs r0, 0x3
    negs r0, r0
    b _080A56D2
    .align 2, 0
_080A56A8: .4byte sPopupMenuSelection
_080A56AC: .4byte sPopupMenuActionList
_080A56B0:
    cmp r1, 0x10
    bne _080A56E4
    ldr r4, _080A56DC @ =sPopupMenuSelection
    ldrb r0, [r4]
    cmp r0, 0x2
    bhi _080A5736
    adds r1, r0, 0
    ldr r0, _080A56E0 @ =sPopupMenuActionList
    ldr r0, [r0]
    adds r1, r0
    ldrb r0, [r1, 0x3]
    cmp r0, 0x8
    beq _080A5736
    movs r0, 0x5
    bl PlaySE
    movs r0, 0x3
_080A56D2:
    bl MoveMenuCursor3
    strb r0, [r4]
    b _080A5736
    .align 2, 0
_080A56DC: .4byte sPopupMenuSelection
_080A56E0: .4byte sPopupMenuActionList
_080A56E4:
    ldrh r1, [r2, 0x2E]
    movs r0, 0x1
    ands r0, r1
    cmp r0, 0
    bne _080A5768
    movs r0, 0x2
    ands r0, r1
    cmp r0, 0
    beq _080A5736
    ldr r1, _080A574C @ =gTasks
    lsls r0, r4, 2
    adds r0, r4
    lsls r0, 3
    adds r0, r1
    strh r5, [r0, 0x1C]
    ldr r1, _080A5750 @ =gBagPocketScrollStates
    ldr r0, _080A5754 @ =sCurrentBagPocket
    ldrb r0, [r0]
    lsls r0, 24
    asrs r0, 24
    lsls r0, 2
    adds r0, r1
    ldrb r2, [r0]
    adds r0, r4, 0
    adds r1, r2, 0
    bl sub_80A48E8
    ldr r0, _080A5758 @ =gBGTilemapBuffers + 0x800
    bl sub_80A4DA4
    ldr r1, _080A575C @ =sItemPopupMenuActions
    ldr r0, _080A5760 @ =sPopupMenuActionList
    ldr r0, [r0]
    ldrb r0, [r0, 0x5]
    lsls r0, 3
    adds r1, 0x4
    adds r0, r1
    ldr r5, [r0]
    adds r0, r4, 0
    bl _call_via_r5
_080A5736:
    cmp r5, 0
    bne _080A57BE
    ldr r0, _080A5764 @ =sPopupMenuSelection
    ldrb r0, [r0]
    cmp r0, 0
    bne _080A57AC
    movs r0, 0xC
    bl sub_8072DDC
    b _080A57BE
    .align 2, 0
_080A574C: .4byte gTasks
_080A5750: .4byte gBagPocketScrollStates
_080A5754: .4byte sCurrentBagPocket
_080A5758: .4byte gBGTilemapBuffers + 0x800
_080A575C: .4byte sItemPopupMenuActions
_080A5760: .4byte sPopupMenuActionList
_080A5764: .4byte sPopupMenuSelection
_080A5768:
    ldr r1, _080A5798 @ =gTasks
    lsls r0, r4, 2
    adds r0, r4
    lsls r0, 3
    adds r0, r1
    strh r5, [r0, 0x1C]
    ldr r0, _080A579C @ =gBGTilemapBuffers + 0x800
    bl sub_80A4DA4
    ldr r1, _080A57A0 @ =sItemPopupMenuActions
    ldr r0, _080A57A4 @ =sPopupMenuSelection
    ldrb r2, [r0]
    ldr r0, _080A57A8 @ =sPopupMenuActionList
    ldr r0, [r0]
    adds r0, r2
    ldrb r0, [r0]
    lsls r0, 3
    adds r1, 0x4
    adds r0, r1
    ldr r5, [r0]
    adds r0, r4, 0
    bl _call_via_r5
    b _080A5736
    .align 2, 0
_080A5798: .4byte gTasks
_080A579C: .4byte gBGTilemapBuffers + 0x800
_080A57A0: .4byte sItemPopupMenuActions
_080A57A4: .4byte sPopupMenuSelection
_080A57A8: .4byte sPopupMenuActionList
_080A57AC:
    cmp r0, 0x2
    bhi _080A57B8
    movs r0, 0x2F
    bl sub_8072DCC
    b _080A57BE
_080A57B8:
    movs r0, 0x30
    bl sub_8072DCC
_080A57BE:
    pop {r4,r5}
    pop {r0}
    bx r0
    .syntax divided

	.code	16
.Lfe76:
	.size	 sub_80A5600,.Lfe76-sub_80A5600
	.align	2, 0
	.type	 sub_80A57C4,function
	.thumb_func
sub_80A57C4:
	push	{r4, r5, r6, lr}
	add	sp, sp, #0xfffffff8
	ldr	r5, .L636
	ldr	r0, .L636+0x4
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	lsl	r1, r1, #0x1
	ldr	r4, .L636+0x8
	add	r1, r1, r4
	str	r1, [r5]
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	cmp	r0, #0x4
	bne	.L631	@cond_branch
	ldr	r1, .L636+0xc
	mov	r0, #0x1
	strb	r0, [r1]
	mov	r5, #0x9
	b	.L635
.L637:
	.align	2, 0
.L636:
	.word	sPopupMenuActionList
	.word	sCurrentBagPocket
	.word	gUnknown_083C16AE
	.word	gUnknown_02038564
.L631:
	ldr	r0, .L638
	ldrh	r0, [r0]
	bl	sub_80F92F4
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L633	@cond_branch
	add	r0, r4, #0
	add	r0, r0, #0x8
	str	r0, [r5]
	ldr	r1, .L638+0x4
	mov	r0, #0x1
	strb	r0, [r1]
	mov	r5, #0x9
	b	.L635
.L639:
	.align	2, 0
.L638:
	.word	gScriptItemId
	.word	gUnknown_02038564
.L633:
	ldr	r1, .L640
	mov	r0, #0x2
	strb	r0, [r1]
	mov	r5, #0x7
.L635:
	add	r6, r1, #0
	ldr	r0, .L640+0x4
	add	r4, r5, #0x1
	ldrb	r1, [r6]
	lsl	r1, r1, #0x19
	lsr	r1, r1, #0x18
	str	r1, [sp]
	mov	r1, #0x7
	add	r2, r4, #0
	mov	r3, #0x6
	bl	sub_80A4008
	ldrb	r3, [r6]
	lsl	r3, r3, #0x1
	add	r3, r3, #0x1
	add	r3, r5, r3
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r0, #0x6
	add	r1, r5, #0
	mov	r2, #0xd
	bl	MenuDrawTextWindow
	mov	r0, #0x0
	add	r1, r5, #0
	bl	sub_80A7834
	ldrb	r3, [r6]
	mov	r0, #0x0
	str	r0, [sp]
	mov	r0, #0x6
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	mov	r1, #0x7
	add	r2, r4, #0
	bl	InitMenu
	add	sp, sp, #0x8
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L641:
	.align	2, 0
.L640:
	.word	gUnknown_02038564
	.word	gBGTilemapBuffers+0x800
.Lfe77:
	.size	 sub_80A57C4,.Lfe77-sub_80A57C4
	.align	2, 0
	.type	 sub_80A5888,function
	.thumb_func
sub_80A5888:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r5, r4, #0
	bl	sub_80A78A0
	cmp	r0, #0
	beq	.L643	@cond_branch
	ldr	r2, .L654
	ldrh	r1, [r2, #0x30]
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L644	@cond_branch
	ldr	r4, .L654+0x4
	ldrb	r0, [r4]
	cmp	r0, #0
	beq	.L643	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x1
	neg	r0, r0
	b	.L653
.L655:
	.align	2, 0
.L654:
	.word	gMain
	.word	sPopupMenuSelection
.L644:
	mov	r0, #0x80
	and	r0, r0, r1
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	cmp	r3, #0
	beq	.L647	@cond_branch
	ldr	r4, .L656
	ldrb	r1, [r4]
	ldr	r0, .L656+0x4
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	cmp	r1, r0
	beq	.L643	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x1
.L653:
	bl	MoveMenuCursor
	strb	r0, [r4]
	b	.L643
.L657:
	.align	2, 0
.L656:
	.word	sPopupMenuSelection
	.word	gUnknown_02038564
.L647:
	ldrh	r1, [r2, #0x2e]
	mov	r2, #0x1
	and	r2, r2, r1
	cmp	r2, #0
	beq	.L650	@cond_branch
	ldr	r1, .L658
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	strh	r3, [r0, #0x1c]
	ldr	r1, .L658+0x4
	ldr	r0, .L658+0x8
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r2, [r0]
	add	r0, r4, #0
	add	r1, r2, #0
	bl	sub_80A48E8
	ldr	r0, .L658+0xc
	bl	sub_80A4DA4
	ldr	r1, .L658+0x10
	ldr	r0, .L658+0x14
	ldrb	r2, [r0]
	ldr	r0, .L658+0x18
	ldr	r0, [r0]
	add	r0, r0, r2
	ldrb	r0, [r0]
	lsl	r0, r0, #0x3
	add	r1, r1, #0x4
	add	r0, r0, r1
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	_call_via_r1
	b	.L643
.L659:
	.align	2, 0
.L658:
	.word	gTasks
	.word	gBagPocketScrollStates
	.word	sCurrentBagPocket
	.word	gBGTilemapBuffers+0x800
	.word	sItemPopupMenuActions
	.word	sPopupMenuSelection
	.word	sPopupMenuActionList
.L650:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L643	@cond_branch
	ldr	r1, .L660
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	strh	r2, [r0, #0x1c]
	ldr	r0, .L660+0x4
	bl	sub_80A4DA4
	ldr	r0, .L660+0x8
	ldr	r1, [r0, #0x14]
	add	r0, r5, #0
	bl	_call_via_r1
.L643:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L661:
	.align	2, 0
.L660:
	.word	gTasks
	.word	gBGTilemapBuffers+0x800
	.word	sItemPopupMenuActions
.Lfe78:
	.size	 sub_80A5888,.Lfe78-sub_80A5888
	.align	2, 0
	.type	 OnBagClose_Field0,function
	.thumb_func
OnBagClose_Field0:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L663
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldr	r3, .L663+0x4
	lsr	r2, r3, #0x10
	mov	r4, #0x0
	strh	r2, [r1, #0x18]
	strh	r3, [r1, #0x1a]
	ldr	r1, .L663+0x8
	strb	r4, [r1]
	bl	sub_80A5AE4
	pop	{r4}
	pop	{r0}
	bx	r0
.L664:
	.align	2, 0
.L663:
	.word	gTasks
	.word	sub_805469C
	.word	gLastFieldPokeMenuOpened
.Lfe79:
	.size	 OnBagClose_Field0,.Lfe79-OnBagClose_Field0
	.align	2, 0
	.type	 OnItemSelect_Field05,function
	.thumb_func
OnItemSelect_Field05:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r1, .L673
	mov	r0, #0x0
	strb	r0, [r1]
	ldr	r7, .L673+0x4
	ldrb	r0, [r7]
	cmp	r0, #0x5
	bne	.L666	@cond_branch
	mov	r0, #0x1
	strb	r0, [r1]
.L666:
	ldr	r1, .L673+0x8
	lsl	r4, r5, #0x2
	add	r0, r4, r5
	lsl	r0, r0, #0x3
	add	r6, r0, r1
	ldr	r3, .L673+0xc
	ldr	r2, .L673+0x10
	mov	r0, #0x0
	ldrsb	r0, [r2, r0]
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	ldrb	r1, [r0, #0x1]
	ldrb	r0, [r0]
	add	r1, r1, r0
	add	r1, r1, #0x1
	strh	r1, [r6, #0x1c]
	mov	r0, #0x0
	ldrsb	r0, [r2, r0]
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	ldrb	r2, [r0]
	add	r0, r5, #0
	add	r1, r2, #0
	bl	sub_80A48E8
	bl	sub_80A73FC
	bl	sub_80F9344
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L667	@cond_branch
	ldrb	r0, [r7]
	cmp	r0, #0x5
	beq	.L667	@cond_branch
	bl	sub_80A57C4
	ldr	r0, .L673+0x14
	str	r0, [r6]
	b	.L668
.L674:
	.align	2, 0
.L673:
	.word	sPopupMenuSelection
	.word	sReturnLocation
	.word	gTasks
	.word	gBagPocketScrollStates
	.word	sCurrentBagPocket
	.word	sub_80A5888
.L667:
	ldr	r0, .L675
	bl	sub_80A4BF0
	ldr	r0, .L675+0x4
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	cmp	r0, #0x3
	bne	.L670	@cond_branch
	ldr	r0, .L675+0x8
	ldrb	r0, [r0]
	cmp	r0, #0x5
	bne	.L669	@cond_branch
.L670:
	ldr	r0, .L675+0xc
	add	r1, r4, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L675+0x10
	b	.L672
.L676:
	.align	2, 0
.L675:
	.word	gBGTilemapBuffers+0x800
	.word	sCurrentBagPocket
	.word	sReturnLocation
	.word	gTasks
	.word	sub_80A5414
.L669:
	ldr	r0, .L677
	add	r1, r4, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L677+0x4
.L672:
	str	r0, [r1]
.L668:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L678:
	.align	2, 0
.L677:
	.word	gTasks
	.word	sub_80A5600
.Lfe80:
	.size	 OnItemSelect_Field05,.Lfe80-OnItemSelect_Field05
	.align	2, 0
	.type	 sub_80A5AAC,function
	.thumb_func
sub_80A5AAC:
	push	{r4, lr}
	add	sp, sp, #0xfffffffc
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r1, .L680
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L680+0x4
	str	r1, [r0]
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L681:
	.align	2, 0
.L680:
	.word	gTasks
	.word	HandleItemMenuPaletteFade
.Lfe81:
	.size	 sub_80A5AAC,.Lfe81-sub_80A5AAC
	.align	2, 0
	.type	 sub_80A5AE4,function
	.thumb_func
sub_80A5AE4:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r4, #0
	bl	sub_80A5AAC
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe82:
	.size	 sub_80A5AE4,.Lfe82-sub_80A5AE4
	.align	2, 0
	.globl	HandleItemMenuPaletteFade
	.type	 HandleItemMenuPaletteFade,function
	.thumb_func
HandleItemMenuPaletteFade:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	ldr	r1, .L685
	add	r2, r0, r1
	ldr	r0, .L685+0x4
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L684	@cond_branch
	ldrh	r0, [r2, #0x10]
	lsl	r0, r0, #0x10
	ldrh	r1, [r2, #0x12]
	orr	r0, r0, r1
	bl	SetMainCallback2
	bl	gpu_pal_allocator_reset__manage_upper_four
	add	r0, r4, #0
	bl	DestroyTask
.L684:
	pop	{r4}
	pop	{r0}
	bx	r0
.L686:
	.align	2, 0
.L685:
	.word	gTasks+0x8
	.word	gPaletteFade
.Lfe83:
	.size	 HandleItemMenuPaletteFade,.Lfe83-HandleItemMenuPaletteFade
	.align	2, 0
	.globl	sub_80A5B40
	.type	 sub_80A5B40,function
	.thumb_func
sub_80A5B40:
	push	{lr}
.L688:
	bl	SetupBagMultistep
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L691	@cond_branch
	bl	ResetTasks
	ldr	r0, .L694
	mov	r1, #0x0
	bl	CreateTask
	ldr	r1, .L694+0x4
	strb	r0, [r1]
	b	.L689
.L695:
	.align	2, 0
.L694:
	.word	sub_80A50C8
	.word	gUnknown_02038563
.L691:
	bl	sub_80F9344
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L688	@cond_branch
.L689:
	pop	{r0}
	bx	r0
.Lfe84:
	.size	 sub_80A5B40,.Lfe84-sub_80A5B40
	.align	2, 0
	.type	 HandlePopupMenuAction_UseOnField,function
	.thumb_func
HandlePopupMenuAction_UseOnField:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r5, .L702
	ldrh	r0, [r5]
	bl	ItemId_GetFieldFunc
	cmp	r0, #0
	beq	.L697	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	bl	CalculatePlayerPartyCount
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L698	@cond_branch
	ldrh	r0, [r5]
	bl	ItemId_GetType
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L698	@cond_branch
	add	r0, r4, #0
	bl	sub_80A5BF8
	b	.L697
.L703:
	.align	2, 0
.L702:
	.word	gScriptItemId
.L698:
	ldr	r1, .L704
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r1, #0x0
	strh	r1, [r0, #0xc]
	ldr	r0, .L704+0x4
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	cmp	r0, #0x3
	beq	.L700	@cond_branch
	ldr	r0, .L704+0x8
	ldrh	r0, [r0]
	bl	ItemId_GetFieldFunc
	add	r1, r0, #0
	add	r0, r4, #0
	bl	_call_via_r1
	b	.L697
.L705:
	.align	2, 0
.L704:
	.word	gTasks
	.word	sCurrentBagPocket
	.word	gScriptItemId
.L700:
	add	r0, r4, #0
	bl	sub_80C9C7C
.L697:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe85:
	.size	 HandlePopupMenuAction_UseOnField,.Lfe85-HandlePopupMenuAction_UseOnField
	.align	2, 0
	.type	 sub_80A5BF8,function
	.thumb_func
sub_80A5BF8:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	sub_80A73FC
	bl	sub_80A7590
	ldr	r1, .L707
	ldr	r2, .L707+0x4
	add	r0, r4, #0
	mov	r3, #0x1
	bl	DisplayCannotUseItemMessage
	pop	{r4}
	pop	{r0}
	bx	r0
.L708:
	.align	2, 0
.L707:
	.word	gOtherText_NoPokemon
	.word	CleanUpItemMenuMessage
.Lfe86:
	.size	 sub_80A5BF8,.Lfe86-sub_80A5BF8
	.align	2, 0
	.type	 sub_80A5C24,function
	.thumb_func
sub_80A5C24:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x0
	bl	sub_80A7528
	add	r0, r4, #0
	bl	sub_80A41D4
	bl	ItemListMenu_InitMenu
	add	r0, r4, #0
	bl	sub_80A37C0
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe87:
	.size	 sub_80A5C24,.Lfe87-sub_80A5C24
	.align	2, 0
	.globl	CleanUpItemMenuMessage
	.type	 CleanUpItemMenuMessage,function
	.thumb_func
CleanUpItemMenuMessage:
	push	{r4, lr}
	add	sp, sp, #0xfffffffc
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L711
	mov	r1, #0x1f
	str	r1, [sp]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x1f
	bl	sub_80A36B8
	mov	r0, #0x7
	mov	r1, #0x7
	mov	r2, #0xd
	mov	r3, #0xc
	bl	MenuZeroFillWindowRect
	mov	r0, #0x0
	mov	r1, #0xe
	mov	r2, #0x1d
	mov	r3, #0x13
	bl	MenuZeroFillWindowRect
	ldr	r1, .L711+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L711+0x8
	str	r1, [r0]
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L712:
	.align	2, 0
.L711:
	.word	gBGTilemapBuffers+0x800
	.word	gTasks
	.word	sub_80A5C24
.Lfe88:
	.size	 CleanUpItemMenuMessage,.Lfe88-CleanUpItemMenuMessage
	.align	2, 0
	.globl	CleanUpOverworldMessage
	.type	 CleanUpOverworldMessage,function
	.thumb_func
CleanUpOverworldMessage:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x0
	mov	r1, #0xd
	mov	r2, #0x1d
	mov	r3, #0x13
	bl	MenuZeroFillWindowRect
	add	r0, r4, #0
	bl	DestroyTask
	bl	sub_8064E2C
	bl	ScriptContext2_Disable
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe89:
	.size	 CleanUpOverworldMessage,.Lfe89-CleanUpOverworldMessage
	.align	2, 0
	.globl	ExecuteItemUseFromBlackPalette
	.type	 ExecuteItemUseFromBlackPalette,function
	.thumb_func
ExecuteItemUseFromBlackPalette:
	push	{lr}
	bl	pal_fill_black
	ldr	r0, .L715
	mov	r1, #0x8
	bl	CreateTask
	pop	{r0}
	bx	r0
.L716:
	.align	2, 0
.L715:
	.word	Task_CallItemUseOnFieldCallback
.Lfe90:
	.size	 ExecuteItemUseFromBlackPalette,.Lfe90-ExecuteItemUseFromBlackPalette
	.align	2, 0
	.type	 Task_CallItemUseOnFieldCallback,function
	.thumb_func
Task_CallItemUseOnFieldCallback:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	sub_807D770
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L718	@cond_branch
	ldr	r0, .L719
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	_call_via_r1
.L718:
	pop	{r4}
	pop	{r0}
	bx	r0
.L720:
	.align	2, 0
.L719:
	.word	gFieldItemUseCallback
.Lfe91:
	.size	 Task_CallItemUseOnFieldCallback,.Lfe91-Task_CallItemUseOnFieldCallback
	.align	2, 0
	.globl	sub_80A5D04
	.type	 sub_80A5D04,function
	.thumb_func
sub_80A5D04:
	push	{lr}
.L722:
	bl	SetupBagMultistep
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L725	@cond_branch
	ldr	r0, .L728
	mov	r1, #0x0
	bl	CreateTask
	ldr	r1, .L728+0x4
	strb	r0, [r1]
	b	.L723
.L729:
	.align	2, 0
.L728:
	.word	sub_80A50C8
	.word	gUnknown_02038563
.L725:
	bl	sub_80F9344
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L722	@cond_branch
.L723:
	pop	{r0}
	bx	r0
.Lfe92:
	.size	 sub_80A5D04,.Lfe92-sub_80A5D04
	.align	2, 0
	.type	 sub_80A5D38,function
	.thumb_func
sub_80A5D38:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r1, .L731
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r1, #0x0
	strh	r1, [r0, #0xa]
	ldr	r0, .L731+0x4
	bl	sub_80A4DA4
	mov	r0, #0x0
	bl	sub_80A7528
	add	r0, r4, #0
	bl	sub_80A41D4
	bl	ItemListMenu_InitMenu
	add	r0, r4, #0
	bl	sub_80A37C0
	pop	{r4}
	pop	{r0}
	bx	r0
.L732:
	.align	2, 0
.L731:
	.word	gTasks
	.word	gBGTilemapBuffers+0x800
.Lfe93:
	.size	 sub_80A5D38,.Lfe93-sub_80A5D38
	.align	2, 0
	.type	 sub_80A5D78,function
	.thumb_func
sub_80A5D78:
	push	{lr}
	add	sp, sp, #0xfffffffc
	ldr	r0, .L734
	mov	r1, #0x4
	str	r1, [sp]
	mov	r1, #0x8
	mov	r2, #0x8
	mov	r3, #0x5
	bl	sub_80A4008
	mov	r0, #0x7
	mov	r1, #0x7
	mov	r2, #0x1
	bl	DisplayYesNoMenu
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.L735:
	.align	2, 0
.L734:
	.word	gBGTilemapBuffers+0x800
.Lfe94:
	.size	 sub_80A5D78,.Lfe94-sub_80A5D78
	.align	2, 0
	.type	 sub_80A5DA0,function
	.thumb_func
sub_80A5DA0:
	push	{r4, lr}
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r1, r1, #0x10
	lsr	r4, r1, #0x10
	ldr	r1, .L739
	bl	CopyItemName
	cmp	r4, #0x63
	bls	.L737	@cond_branch
	ldr	r0, .L739+0x4
	add	r1, r4, #0
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	b	.L738
.L740:
	.align	2, 0
.L739:
	.word	gStringVar1
	.word	gStringVar2
.L737:
	ldr	r0, .L741
	add	r1, r4, #0
	mov	r2, #0x0
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
.L738:
	ldr	r0, .L741+0x4
	bl	sub_80A4DA4
	mov	r0, #0x5
	bl	sub_80A7528
	bl	sub_80A5D78
	pop	{r4}
	pop	{r0}
	bx	r0
.L742:
	.align	2, 0
.L741:
	.word	gStringVar2
	.word	gBGTilemapBuffers+0x800
.Lfe95:
	.size	 sub_80A5DA0,.Lfe95-sub_80A5DA0
	.align	2, 0
	.type	 sub_80A5DF8,function
	.thumb_func
sub_80A5DF8:
	push	{lr}
	ldr	r0, .L744
	bl	sub_80A4DA4
	mov	r0, #0x7
	mov	r1, #0x6
	mov	r2, #0xd
	mov	r3, #0xd
	bl	MenuZeroFillWindowRect
	mov	r0, #0x4
	bl	sub_80A7528
	pop	{r0}
	bx	r0
.L745:
	.align	2, 0
.L744:
	.word	gBGTilemapBuffers+0x800
.Lfe96:
	.size	 sub_80A5DF8,.Lfe96-sub_80A5DF8
	.align	2, 0
	.type	 sub_80A5E1C,function
	.thumb_func
sub_80A5E1C:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L749
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L748	@cond_branch
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L747	@cond_branch
.L748:
	ldr	r0, .L749+0x4
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r0, #0x0
	strh	r0, [r1, #0x1c]
	add	r0, r4, #0
	bl	sub_80A41D4
	add	r0, r4, #0
	bl	sub_80A5D38
.L747:
	pop	{r4}
	pop	{r0}
	bx	r0
.L750:
	.align	2, 0
.L749:
	.word	gMain
	.word	gTasks
.Lfe97:
	.size	 sub_80A5E1C,.Lfe97-sub_80A5E1C
	.align	2, 0
	.type	 sub_80A5E60,function
	.thumb_func
sub_80A5E60:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	sub_80A5DF8
	add	r0, r4, #0
	bl	sub_80A3D5C
	ldr	r1, .L752
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L752+0x4
	str	r1, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L753:
	.align	2, 0
.L752:
	.word	gTasks
	.word	sub_80A5E1C
.Lfe98:
	.size	 sub_80A5E60,.Lfe98-sub_80A5E60
	.align	2, 0
	.type	 sub_80A5E90,function
	.thumb_func
sub_80A5E90:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	sub_80A5D38
	pop	{r0}
	bx	r0
.Lfe99:
	.size	 sub_80A5E90,.Lfe99-sub_80A5E90
	.align	2, 0
	.type	 sub_80A5EA0,function
	.thumb_func
sub_80A5EA0:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r5, r4, #0
	add	r0, r4, #0
	bl	sub_80A5350
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L755	@cond_branch
	ldr	r0, .L760
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L757	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L760+0x4
	ldrh	r0, [r0]
	ldr	r2, .L760+0x8
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldrh	r1, [r1, #0xa]
	bl	sub_80A5DA0
	ldr	r1, .L760+0xc
	add	r0, r4, #0
	bl	DoYesNoFuncWithChoice
	b	.L755
.L761:
	.align	2, 0
.L760:
	.word	gMain
	.word	gScriptItemId
	.word	gTasks
	.word	gUnknown_083C16F4
.L757:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L755	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r5, #0
	bl	sub_80A5D38
.L755:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe100:
	.size	 sub_80A5EA0,.Lfe100-sub_80A5EA0
	.align	2, 0
	.type	 HandlePopupMenuAction_Toss,function
	.thumb_func
HandlePopupMenuAction_Toss:
	push	{r4, lr}
	add	sp, sp, #0xfffffff8
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r0, #0x5
	bl	PlaySE
	ldr	r1, .L765
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L765+0x4
	str	r1, [r0]
	mov	r0, #0x3
	bl	sub_80A7528
	ldr	r0, .L765+0x8
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	cmp	r0, #0x3
	bne	.L763	@cond_branch
	mov	r0, #0x3
	str	r0, [sp]
	str	r0, [sp, #0x4]
	add	r0, r4, #0
	mov	r1, #0x6
	mov	r2, #0x9
	mov	r3, #0x7
	bl	sub_80A4DD8
	b	.L764
.L766:
	.align	2, 0
.L765:
	.word	gTasks
	.word	sub_80A5EA0
	.word	sCurrentBagPocket
.L763:
	mov	r0, #0x3
	str	r0, [sp]
	mov	r0, #0x2
	str	r0, [sp, #0x4]
	add	r0, r4, #0
	mov	r1, #0x7
	mov	r2, #0x9
	mov	r3, #0x6
	bl	sub_80A4DD8
.L764:
	add	sp, sp, #0x8
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe101:
	.size	 HandlePopupMenuAction_Toss,.Lfe101-HandlePopupMenuAction_Toss
	.align	2, 0
	.type	 sub_80A5F80,function
	.thumb_func
sub_80A5F80:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x0
	bl	sub_80A7528
	add	r0, r4, #0
	bl	sub_80A41D4
	bl	ItemListMenu_InitMenu
	add	r0, r4, #0
	bl	sub_80A37C0
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe102:
	.size	 sub_80A5F80,.Lfe102-sub_80A5F80
	.align	2, 0
	.type	 HandlePopupMenuAction_Register,function
	.thumb_func
HandlePopupMenuAction_Register:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L772
	ldr	r1, .L772+0x4
	add	r4, r0, r1
	ldr	r5, .L772+0x8
	ldrh	r0, [r4]
	ldrh	r1, [r5]
	cmp	r0, r1
	bne	.L769	@cond_branch
	bl	RemoveSelectIconFromRegisteredItem
	mov	r0, #0x0
	b	.L771
.L773:
	.align	2, 0
.L772:
	.word	gSaveBlock1
	.word	0x496
	.word	gScriptItemId
.L769:
	bl	AddSelectIconToRegisteredItem
	ldrh	r0, [r5]
.L771:
	strh	r0, [r4]
	mov	r0, #0x0
	bl	sub_80A7528
	add	r0, r6, #0
	bl	sub_80A41D4
	bl	ItemListMenu_InitMenu
	add	r0, r6, #0
	bl	sub_80A37C0
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe103:
	.size	 HandlePopupMenuAction_Register,.Lfe103-HandlePopupMenuAction_Register
	.align	2, 0
	.type	 sub_80A6000,function
	.thumb_func
sub_80A6000:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x0
	bl	sub_80A7528
	add	r0, r4, #0
	bl	sub_80A41D4
	bl	ItemListMenu_InitMenu
	add	r0, r4, #0
	bl	sub_80A37C0
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe104:
	.size	 sub_80A6000,.Lfe104-sub_80A6000
	.align	2, 0
	.type	 sub_80A6024,function
	.thumb_func
sub_80A6024:
	push	{r4, lr}
	add	sp, sp, #0xfffffffc
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L777
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L776	@cond_branch
	ldr	r0, .L777+0x4
	mov	r1, #0x1f
	str	r1, [sp]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x1f
	bl	sub_80A36B8
	mov	r0, #0x0
	mov	r1, #0xe
	mov	r2, #0x1d
	mov	r3, #0x13
	bl	MenuZeroFillWindowRect
	ldr	r1, .L777+0x8
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L777+0xc
	str	r1, [r0]
.L776:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L778:
	.align	2, 0
.L777:
	.word	gMain
	.word	gBGTilemapBuffers+0x800
	.word	gTasks
	.word	sub_80A6000
.Lfe105:
	.size	 sub_80A6024,.Lfe105-sub_80A6024
	.align	2, 0
	.type	 DisplayCannotBeHeldMessage,function
	.thumb_func
DisplayCannotBeHeldMessage:
	push	{r4, r5, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	sub_80A73FC
	ldr	r0, .L780
	ldrh	r0, [r0]
	ldr	r1, .L780+0x4
	bl	CopyItemName
	ldr	r5, .L780+0x8
	ldr	r1, .L780+0xc
	add	r0, r5, #0
	bl	StringExpandPlaceholders
	bl	sub_80A7590
	ldr	r2, .L780+0x10
	add	r0, r4, #0
	add	r1, r5, #0
	mov	r3, #0x1
	bl	DisplayCannotUseItemMessage
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L781:
	.align	2, 0
.L780:
	.word	gScriptItemId
	.word	gStringVar1
	.word	gStringVar4
	.word	gOtherText_CantBeHeld
	.word	sub_80A6024
.Lfe106:
	.size	 DisplayCannotBeHeldMessage,.Lfe106-DisplayCannotBeHeldMessage
	.align	2, 0
	.type	 HandlePopupMenuAction_Give,function
	.thumb_func
HandlePopupMenuAction_Give:
	push	{r4, r5, r6, lr}
	add	sp, sp, #0xfffffffc
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r6, r4, #0
	mov	r0, #0x5
	bl	PlaySE
	ldr	r5, .L789
	ldrh	r0, [r5]
	bl	sub_80F931C
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L783	@cond_branch
	bl	sub_80A73FC
	bl	sub_80A7590
	ldr	r1, .L789+0x4
	ldr	r2, .L789+0x8
	add	r0, r4, #0
	mov	r3, #0x1
	bl	DisplayCannotUseItemMessage
	b	.L784
.L790:
	.align	2, 0
.L789:
	.word	gScriptItemId
	.word	gOtherText_CantWriteMail
	.word	sub_80A6024
.L783:
	ldrh	r0, [r5]
	bl	ItemId_GetImportance
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0
	bne	.L785	@cond_branch
	bl	CalculatePlayerPartyCount
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L786	@cond_branch
	add	r0, r4, #0
	bl	sub_80A5BF8
	b	.L784
.L786:
	ldr	r1, .L791
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r2, .L791+0x4
	lsr	r1, r2, #0x10
	strh	r1, [r0, #0x18]
	strh	r2, [r0, #0x1a]
	ldr	r1, .L791+0x8
	str	r1, [r0]
	ldr	r1, .L791+0xc
	mov	r0, #0x1
	strb	r0, [r1]
	mov	r0, #0x1
	neg	r0, r0
	str	r5, [sp]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	b	.L784
.L792:
	.align	2, 0
.L791:
	.word	gTasks
	.word	sub_808B020
	.word	HandleItemMenuPaletteFade
	.word	gUnknown_02038561
.L785:
	add	r0, r6, #0
	bl	DisplayCannotBeHeldMessage
.L784:
	add	sp, sp, #0x4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe107:
	.size	 HandlePopupMenuAction_Give,.Lfe107-HandlePopupMenuAction_Give
	.align	2, 0
	.type	 HandlePopupMenuAction_CheckTag,function
	.thumb_func
HandlePopupMenuAction_CheckTag:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r4, #0
	bl	sub_80A5AE4
	ldr	r1, .L794
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r2, .L794+0x4
	lsr	r1, r2, #0x10
	strh	r1, [r0, #0x18]
	strh	r2, [r0, #0x1a]
	pop	{r4}
	pop	{r0}
	bx	r0
.L795:
	.align	2, 0
.L794:
	.word	gTasks
	.word	BerryTagScreen_814625C
.Lfe108:
	.size	 HandlePopupMenuAction_CheckTag,.Lfe108-HandlePopupMenuAction_CheckTag
	.align	2, 0
	.type	 sub_80A61A8,function
	.thumb_func
sub_80A61A8:
	push	{lr}
	bl	sub_80A34B4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L797	@cond_branch
	ldr	r0, .L798
	mov	r1, #0x0
	bl	CreateTask
	ldr	r1, .L798+0x4
	strb	r0, [r1]
.L797:
	pop	{r0}
	bx	r0
.L799:
	.align	2, 0
.L798:
	.word	sub_80A50C8
	.word	gUnknown_02038563
.Lfe109:
	.size	 sub_80A61A8,.Lfe109-sub_80A61A8
	.align	2, 0
	.globl	sub_80A61D0
	.type	 sub_80A61D0,function
	.thumb_func
sub_80A61D0:
	push	{lr}
	ldr	r0, .L801
	mov	r1, #0x2
	strb	r1, [r0]
	ldr	r0, .L801+0x4
	bl	SetMainCallback2
	pop	{r0}
	bx	r0
.L802:
	.align	2, 0
.L801:
	.word	sReturnLocation
	.word	sub_80A61A8
.Lfe110:
	.size	 sub_80A61D0,.Lfe110-sub_80A61D0
	.align	2, 0
	.type	 OnBagClose_PkmnList,function
	.thumb_func
OnBagClose_PkmnList:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L804
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldr	r3, .L804+0x4
	lsr	r2, r3, #0x10
	strh	r2, [r1, #0x18]
	strh	r3, [r1, #0x1a]
	bl	sub_80A5AE4
	pop	{r0}
	bx	r0
.L805:
	.align	2, 0
.L804:
	.word	gTasks
	.word	sub_808A3F8
.Lfe111:
	.size	 OnBagClose_PkmnList,.Lfe111-OnBagClose_PkmnList
	.align	2, 0
	.type	 OnItemSelect_PkmnList,function
	.thumb_func
OnItemSelect_PkmnList:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r0, .L814
	ldrb	r0, [r0]
	add	r0, r0, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r4, .L814+0x4
	ldrh	r0, [r4]
	bl	sub_80F931C
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L807	@cond_branch
	bl	sub_80A73FC
	bl	sub_80A7590
	ldr	r1, .L814+0x8
	ldr	r2, .L814+0xc
	add	r0, r5, #0
	b	.L813
.L815:
	.align	2, 0
.L814:
	.word	sCurrentBagPocket
	.word	gScriptItemId
	.word	gOtherText_CantWriteMail
	.word	sub_80A6024
.L807:
	ldrh	r0, [r4]
	bl	sub_80F92F4
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L809	@cond_branch
	bl	sub_80A73FC
	ldrh	r0, [r4]
	ldr	r1, .L816
	bl	CopyItemName
	ldr	r4, .L816+0x4
	ldr	r1, .L816+0x8
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	bl	sub_80A7590
	ldr	r2, .L816+0xc
	add	r0, r5, #0
	add	r1, r4, #0
.L813:
	mov	r3, #0x1
	bl	DisplayCannotUseItemMessage
	b	.L808
.L817:
	.align	2, 0
.L816:
	.word	gStringVar1
	.word	gStringVar4
	.word	gOtherText_CantBeHeldHere
	.word	sub_80A6024
.L809:
	cmp	r6, #0x5
	beq	.L811	@cond_branch
	ldrh	r0, [r4]
	bl	ItemId_GetImportance
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L811	@cond_branch
	ldr	r1, .L818
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r2, .L818+0x4
	lsr	r1, r2, #0x10
	strh	r1, [r0, #0x18]
	strh	r2, [r0, #0x1a]
	add	r0, r5, #0
	bl	sub_80A5AAC
	b	.L808
.L819:
	.align	2, 0
.L818:
	.word	gTasks
	.word	sub_808A3F8
.L811:
	add	r0, r5, #0
	bl	DisplayCannotBeHeldMessage
.L808:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe112:
	.size	 OnItemSelect_PkmnList,.Lfe112-OnItemSelect_PkmnList
	.align	2, 0
	.type	 sub_80A62D8,function
	.thumb_func
sub_80A62D8:
	push	{lr}
	bl	sub_80A34B4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L821	@cond_branch
	ldr	r0, .L822
	mov	r1, #0x0
	bl	CreateTask
	ldr	r1, .L822+0x4
	strb	r0, [r1]
.L821:
	pop	{r0}
	bx	r0
.L823:
	.align	2, 0
.L822:
	.word	sub_80A50C8
	.word	gUnknown_02038563
.Lfe113:
	.size	 sub_80A62D8,.Lfe113-sub_80A62D8
	.align	2, 0
	.globl	sub_80A6300
	.type	 sub_80A6300,function
	.thumb_func
sub_80A6300:
	push	{lr}
	ldr	r0, .L825
	mov	r1, #0x3
	strb	r1, [r0]
	ldr	r0, .L825+0x4
	bl	SetMainCallback2
	pop	{r0}
	bx	r0
.L826:
	.align	2, 0
.L825:
	.word	sReturnLocation
	.word	sub_80A62D8
.Lfe114:
	.size	 sub_80A6300,.Lfe114-sub_80A6300
	.align	2, 0
	.type	 OnBagClose_Shop,function
	.thumb_func
OnBagClose_Shop:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L828
	ldr	r1, .L828+0x4
	str	r1, [r2]
	ldr	r2, .L828+0x8
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldr	r3, .L828+0xc
	lsr	r2, r3, #0x10
	strh	r2, [r1, #0x18]
	strh	r3, [r1, #0x1a]
	bl	sub_80A5AE4
	pop	{r0}
	bx	r0
.L829:
	.align	2, 0
.L828:
	.word	gFieldCallback
	.word	sub_80B3050
	.word	gTasks
	.word	c2_exit_to_overworld_2_switch
.Lfe115:
	.size	 OnBagClose_Shop,.Lfe115-OnBagClose_Shop
	.align	2, 0
	.type	 OnItemSelect_Shop,function
	.thumb_func
OnItemSelect_Shop:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	bl	sub_80A7590
	ldr	r0, .L833
	lsl	r2, r5, #0x2
	add	r2, r2, r5
	lsl	r2, r2, #0x3
	add	r2, r2, r0
	ldr	r4, .L833+0x4
	ldr	r3, .L833+0x8
	mov	r0, #0x0
	ldrsb	r0, [r3, r0]
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	ldrb	r1, [r0, #0x1]
	ldrb	r0, [r0]
	add	r1, r1, r0
	add	r1, r1, #0x1
	strh	r1, [r2, #0x1c]
	mov	r0, #0x0
	ldrsb	r0, [r3, r0]
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	ldrb	r2, [r0]
	add	r0, r5, #0
	add	r1, r2, #0
	bl	sub_80A48E8
	bl	sub_80A73FC
	ldr	r4, .L833+0xc
	ldrh	r0, [r4]
	ldr	r1, .L833+0x10
	bl	CopyItemName
	ldrh	r0, [r4]
	bl	ItemId_GetPrice
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L831	@cond_branch
	ldr	r4, .L833+0x14
	ldr	r1, .L833+0x18
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	ldr	r2, .L833+0x1c
	add	r0, r5, #0
	add	r1, r4, #0
	mov	r3, #0x1
	bl	DisplayCannotUseItemMessage
	b	.L832
.L834:
	.align	2, 0
.L833:
	.word	gTasks
	.word	gBagPocketScrollStates
	.word	sCurrentBagPocket
	.word	gScriptItemId
	.word	gStringVar2
	.word	gStringVar4
	.word	gOtherText_CantBuyThat
	.word	sub_80A6444
.L831:
	ldr	r4, .L835
	ldr	r1, .L835+0x4
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	ldr	r2, .L835+0x8
	add	r0, r5, #0
	add	r1, r4, #0
	mov	r3, #0x1
	bl	DisplayCannotUseItemMessage
.L832:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L836:
	.align	2, 0
.L835:
	.word	gStringVar4
	.word	gOtherText_HowManyToSell
	.word	sub_80A648C
.Lfe116:
	.size	 OnItemSelect_Shop,.Lfe116-OnItemSelect_Shop
	.align	2, 0
	.type	 sub_80A640C,function
	.thumb_func
sub_80A640C:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r1, .L838
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r1, #0x0
	strh	r1, [r0, #0x1c]
	mov	r0, #0x0
	bl	sub_80A7528
	add	r0, r4, #0
	bl	sub_80A41D4
	bl	ItemListMenu_InitMenu
	add	r0, r4, #0
	bl	sub_80A37C0
	pop	{r4}
	pop	{r0}
	bx	r0
.L839:
	.align	2, 0
.L838:
	.word	gTasks
.Lfe117:
	.size	 sub_80A640C,.Lfe117-sub_80A640C
	.align	2, 0
	.type	 sub_80A6444,function
	.thumb_func
sub_80A6444:
	push	{r4, lr}
	add	sp, sp, #0xfffffffc
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L841
	mov	r1, #0x1f
	str	r1, [sp]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x1f
	bl	sub_80A36B8
	mov	r0, #0x0
	mov	r1, #0xe
	mov	r2, #0x1d
	mov	r3, #0x13
	bl	MenuZeroFillWindowRect
	ldr	r1, .L841+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L841+0x8
	str	r1, [r0]
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L842:
	.align	2, 0
.L841:
	.word	gBGTilemapBuffers+0x800
	.word	gTasks
	.word	sub_80A640C
.Lfe118:
	.size	 sub_80A6444,.Lfe118-sub_80A6444
	.align	2, 0
	.type	 sub_80A648C,function
	.thumb_func
sub_80A648C:
	push	{r4, r5, lr}
	add	sp, sp, #0xfffffffc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L846
	lsl	r4, r0, #0x2
	add	r4, r4, r0
	lsl	r4, r4, #0x3
	add	r4, r4, r1
	ldr	r0, .L846+0x4
	str	r0, [r4]
	ldr	r0, .L846+0x8
	mov	r5, #0x2
	str	r5, [sp]
	mov	r1, #0x1
	mov	r2, #0xb
	mov	r3, #0xc
	bl	sub_80A4008
	mov	r0, #0x0
	mov	r1, #0xa
	mov	r2, #0xd
	mov	r3, #0xd
	bl	MenuDrawTextWindow
	mov	r0, #0x1
	strh	r0, [r4, #0xa]
	strh	r0, [r4, #0xc]
	mov	r0, #0xb
	strh	r0, [r4, #0xe]
	ldr	r0, .L846+0xc
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	cmp	r0, #0x3
	bne	.L844	@cond_branch
	mov	r0, #0x3
	str	r0, [sp]
	mov	r0, #0x1
	mov	r1, #0x1
	mov	r2, #0x1
	mov	r3, #0xb
	bl	sub_80A418C
	b	.L845
.L847:
	.align	2, 0
.L846:
	.word	gTasks
	.word	Task_BuyHowManyDialogueHandleInput
	.word	gBGTilemapBuffers+0x800
	.word	sCurrentBagPocket
.L844:
	str	r5, [sp]
	mov	r0, #0x1
	mov	r1, #0x1
	mov	r2, #0x1
	mov	r3, #0xb
	bl	sub_80A418C
.L845:
	ldr	r0, .L848
	ldrh	r0, [r0]
	mov	r1, #0x1
	bl	BuyMenuDisplayMessage
	bl	sub_80A683C
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L849:
	.align	2, 0
.L848:
	.word	gScriptItemId
.Lfe119:
	.size	 sub_80A648C,.Lfe119-sub_80A648C
	.align	2, 0
	.type	 sub_80A6520,function
	.thumb_func
sub_80A6520:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L852
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L851	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r4, #0
	bl	BuyMenuPrintItemQuantityAndPrice
.L851:
	pop	{r4}
	pop	{r0}
	bx	r0
.L853:
	.align	2, 0
.L852:
	.word	gMain
.Lfe120:
	.size	 sub_80A6520,.Lfe120-sub_80A6520
	.align	2, 0
	.type	 sub_80A6548,function
	.thumb_func
sub_80A6548:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r4, #0
	bl	sub_80A48F8
	ldr	r1, .L855
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L855+0x4
	str	r1, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L856:
	.align	2, 0
.L855:
	.word	gTasks
	.word	sub_80A6520
.Lfe121:
	.size	 sub_80A6548,.Lfe121-sub_80A6548
	.align	2, 0
	.type	 sub_80A6574,function
	.thumb_func
sub_80A6574:
	push	{r4, r5, lr}
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	mov	r0, #0x5f
	bl	PlaySE
	ldr	r0, .L858
	ldrh	r0, [r0]
	ldr	r1, .L858+0x4
	lsl	r4, r5, #0x2
	add	r4, r4, r5
	lsl	r4, r4, #0x3
	add	r4, r4, r1
	ldrb	r1, [r4, #0xa]
	bl	sub_80A6870
	ldr	r0, .L858+0x8
	str	r0, [r4]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L859:
	.align	2, 0
.L858:
	.word	gScriptItemId
	.word	gTasks
	.word	sub_80A6548
.Lfe122:
	.size	 sub_80A6574,.Lfe122-sub_80A6574
	.align	2, 0
	.type	 sub_80A65AC,function
	.thumb_func
sub_80A65AC:
	push	{r4, r5, lr}
	add	sp, sp, #0xfffffffc
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	mov	r0, #0x7
	mov	r1, #0x6
	mov	r2, #0xd
	mov	r3, #0xc
	bl	MenuZeroFillWindowRect
	ldr	r0, .L861
	mov	r1, #0x6
	str	r1, [sp]
	mov	r1, #0x7
	mov	r2, #0x6
	mov	r3, #0x6
	bl	sub_80A36B8
	ldr	r0, .L861+0x4
	ldrh	r0, [r0]
	ldr	r1, .L861+0x8
	bl	CopyItemName
	ldr	r4, .L861+0xc
	ldr	r1, .L861+0x10
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	ldr	r2, .L861+0x14
	add	r0, r5, #0
	add	r1, r4, #0
	mov	r3, #0x1
	bl	DisplayCannotUseItemMessage
	add	r0, r5, #0
	bl	sub_80A3D5C
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L862:
	.align	2, 0
.L861:
	.word	gBGTilemapBuffers+0x800
	.word	gScriptItemId
	.word	gStringVar2
	.word	gStringVar4
	.word	gOtherText_SoldItem
	.word	sub_80A6574
.Lfe123:
	.size	 sub_80A65AC,.Lfe123-sub_80A65AC
	.align	2, 0
	.type	 sub_80A6618,function
	.thumb_func
sub_80A6618:
	push	{r4, lr}
	add	sp, sp, #0xfffffffc
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x7
	mov	r1, #0x6
	mov	r2, #0xd
	mov	r3, #0xc
	bl	MenuZeroFillWindowRect
	ldr	r0, .L864
	mov	r1, #0x6
	str	r1, [sp]
	mov	r1, #0x7
	mov	r2, #0x6
	mov	r3, #0x6
	bl	sub_80A36B8
	add	r0, r4, #0
	bl	BuyMenuPrintItemQuantityAndPrice
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L865:
	.align	2, 0
.L864:
	.word	gBGTilemapBuffers+0x800
.Lfe124:
	.size	 sub_80A6618,.Lfe124-sub_80A6618
	.align	2, 0
	.type	 sub_80A6650,function
	.thumb_func
sub_80A6650:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	sub_80A5D78
	ldr	r1, .L867
	add	r0, r4, #0
	bl	DoYesNoFuncWithChoice
	pop	{r4}
	pop	{r0}
	bx	r0
.L868:
	.align	2, 0
.L867:
	.word	gUnknown_083C16FC
.Lfe125:
	.size	 sub_80A6650,.Lfe125-sub_80A6650
	.align	2, 0
	.type	 Task_BuyHowManyDialogueHandleInput,function
	.thumb_func
Task_BuyHowManyDialogueHandleInput:
	push	{r4, r5, lr}
	add	sp, sp, #0xfffffffc
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r4, r5, #0
	add	r0, r5, #0
	bl	sub_80A5350
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L870	@cond_branch
	mov	r0, #0x6
	mov	r1, #0xb
	mov	r2, #0xc
	mov	r3, #0xb
	bl	MenuZeroFillWindowRect
	ldr	r0, .L875
	ldrh	r0, [r0]
	ldr	r2, .L875+0x4
	lsl	r1, r5, #0x2
	add	r1, r1, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldrh	r1, [r1, #0xa]
	bl	BuyMenuDisplayMessage
	b	.L871
.L876:
	.align	2, 0
.L875:
	.word	gScriptItemId
	.word	gTasks
.L870:
	ldr	r0, .L877
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L872	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x0
	mov	r1, #0xa
	mov	r2, #0xd
	mov	r3, #0xd
	bl	MenuZeroFillWindowRect
	ldr	r0, .L877+0x4
	mov	r1, #0x3
	str	r1, [sp]
	mov	r1, #0x0
	mov	r2, #0xa
	mov	r3, #0xd
	bl	sub_80A36B8
	ldr	r4, .L877+0x8
	ldr	r0, .L877+0xc
	ldrh	r0, [r0]
	bl	ItemId_GetPrice
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x11
	ldr	r2, .L877+0x10
	lsl	r1, r5, #0x2
	add	r1, r1, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	mov	r2, #0xa
	ldrsh	r1, [r1, r2]
	mul	r1, r1, r0
	add	r0, r4, #0
	mov	r2, #0x0
	mov	r3, #0x6
	bl	ConvertIntToDecimalStringN
	ldr	r4, .L877+0x14
	ldr	r1, .L877+0x18
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	ldr	r2, .L877+0x1c
	add	r0, r5, #0
	add	r1, r4, #0
	mov	r3, #0x1
	bl	DisplayCannotUseItemMessage
	b	.L871
.L878:
	.align	2, 0
.L877:
	.word	gMain
	.word	gBGTilemapBuffers+0x800
	.word	gStringVar1
	.word	gScriptItemId
	.word	gTasks
	.word	gStringVar4
	.word	gOtherText_CanPay
	.word	sub_80A6650
.L872:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L871	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r4, #0
	bl	BuyMenuPrintItemQuantityAndPrice
.L871:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe126:
	.size	 Task_BuyHowManyDialogueHandleInput,.Lfe126-Task_BuyHowManyDialogueHandleInput
	.align	2, 0
	.type	 sub_80A6760,function
	.thumb_func
sub_80A6760:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r1, .L880
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r1, #0x0
	strh	r1, [r0, #0x1c]
	mov	r0, #0x0
	bl	sub_80A7528
	add	r0, r4, #0
	bl	sub_80A41D4
	bl	ItemListMenu_InitMenu
	add	r0, r4, #0
	bl	sub_80A37C0
	pop	{r4}
	pop	{r0}
	bx	r0
.L881:
	.align	2, 0
.L880:
	.word	gTasks
.Lfe127:
	.size	 sub_80A6760,.Lfe127-sub_80A6760
	.align	2, 0
	.type	 BuyMenuPrintItemQuantityAndPrice,function
	.thumb_func
BuyMenuPrintItemQuantityAndPrice:
	push	{r4, lr}
	add	sp, sp, #0xfffffffc
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L883
	mov	r1, #0x1f
	str	r1, [sp]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x1f
	bl	sub_80A36B8
	mov	r0, #0x0
	mov	r1, #0x0
	bl	CloseMoneyWindow
	mov	r0, #0x0
	mov	r1, #0x4
	mov	r2, #0xd
	mov	r3, #0xd
	bl	MenuZeroFillWindowRect
	mov	r0, #0x0
	mov	r1, #0xe
	mov	r2, #0x1d
	mov	r3, #0x13
	bl	MenuZeroFillWindowRect
	ldr	r1, .L883+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L883+0x8
	str	r1, [r0]
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L884:
	.align	2, 0
.L883:
	.word	gBGTilemapBuffers+0x800
	.word	gTasks
	.word	sub_80A6760
.Lfe128:
	.size	 BuyMenuPrintItemQuantityAndPrice,.Lfe128-BuyMenuPrintItemQuantityAndPrice
	.align	2, 0
	.type	 BuyMenuDisplayMessage,function
	.thumb_func
BuyMenuDisplayMessage:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	add	r0, r4, #0
	bl	ItemId_GetPrice
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x11
	mul	r0, r0, r5
	mov	r1, #0x6
	mov	r2, #0x6
	mov	r3, #0xb
	bl	PrintMoneyAmount
	ldr	r6, .L886
	add	r0, r4, #0
	bl	ItemId_GetPrice
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x11
	mov	r1, r0
	mul	r1, r1, r5
	add	r0, r6, #0
	mov	r2, #0x0
	mov	r3, #0x6
	bl	ConvertIntToDecimalStringN
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L887:
	.align	2, 0
.L886:
	.word	gStringVar1
.Lfe129:
	.size	 BuyMenuDisplayMessage,.Lfe129-BuyMenuDisplayMessage
	.align	2, 0
	.type	 sub_80A683C,function
	.thumb_func
sub_80A683C:
	push	{lr}
	add	sp, sp, #0xfffffffc
	ldr	r0, .L889
	mov	r1, #0x92
	lsl	r1, r1, #0x3
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	OpenMoneyWindow
	ldr	r0, .L889+0x4
	mov	r1, #0x2
	str	r1, [sp]
	mov	r1, #0x1
	mov	r2, #0x1
	mov	r3, #0xc
	bl	sub_80A4008
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.L890:
	.align	2, 0
.L889:
	.word	gSaveBlock1
	.word	gBGTilemapBuffers+0x800
.Lfe130:
	.size	 sub_80A683C,.Lfe130-sub_80A683C
	.align	2, 0
	.type	 sub_80A6870,function
	.thumb_func
sub_80A6870:
	push	{r4, r5, lr}
	add	r4, r1, #0
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r5, .L892
	bl	ItemId_GetPrice
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x11
	mov	r1, r0
	mul	r1, r1, r4
	add	r0, r5, #0
	bl	AddMoney
	ldr	r0, [r5]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	UpdateMoneyWindow
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L893:
	.align	2, 0
.L892:
	.word	gSaveBlock1+0x490
.Lfe131:
	.size	 sub_80A6870,.Lfe131-sub_80A6870
	.align	2, 0
	.type	 sub_80A68A4,function
	.thumb_func
sub_80A68A4:
	push	{lr}
	bl	sub_80A34B4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L895	@cond_branch
	ldr	r0, .L896
	mov	r1, #0x0
	bl	CreateTask
	ldr	r1, .L896+0x4
	strb	r0, [r1]
.L895:
	pop	{r0}
	bx	r0
.L897:
	.align	2, 0
.L896:
	.word	sub_80A50C8
	.word	gUnknown_02038563
.Lfe132:
	.size	 sub_80A68A4,.Lfe132-sub_80A68A4
	.align	2, 0
	.globl	sub_80A68CC
	.type	 sub_80A68CC,function
	.thumb_func
sub_80A68CC:
	push	{lr}
	ldr	r1, .L899
	mov	r0, #0x3
	strb	r0, [r1]
	ldr	r1, .L899+0x4
	mov	r0, #0x4
	strb	r0, [r1]
	ldr	r0, .L899+0x8
	bl	SetMainCallback2
	pop	{r0}
	bx	r0
.L900:
	.align	2, 0
.L899:
	.word	sCurrentBagPocket
	.word	sReturnLocation
	.word	sub_80A68A4
.Lfe133:
	.size	 sub_80A68CC,.Lfe133-sub_80A68CC
	.align	2, 0
	.type	 OnBagClose_Field4,function
	.thumb_func
OnBagClose_Field4:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L902
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldr	r3, .L902+0x4
	lsr	r2, r3, #0x10
	strh	r2, [r1, #0x18]
	strh	r3, [r1, #0x1a]
	bl	sub_80A5AE4
	pop	{r0}
	bx	r0
.L903:
	.align	2, 0
.L902:
	.word	gTasks
	.word	sub_80546B8
.Lfe134:
	.size	 OnBagClose_Field4,.Lfe134-OnBagClose_Field4
	.align	2, 0
	.type	 OnItemSelect_Field4,function
	.thumb_func
OnItemSelect_Field4:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L905
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldr	r3, .L905+0x4
	lsr	r2, r3, #0x10
	strh	r2, [r1, #0x18]
	strh	r3, [r1, #0x1a]
	bl	sub_80A5AAC
	pop	{r0}
	bx	r0
.L906:
	.align	2, 0
.L905:
	.word	gTasks
	.word	sub_80546B8
.Lfe135:
	.size	 OnItemSelect_Field4,.Lfe135-OnItemSelect_Field4
	.align	2, 0
	.type	 sub_80A6940,function
	.thumb_func
sub_80A6940:
	push	{lr}
.L908:
	bl	SetupBagMultistep
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L911	@cond_branch
	ldr	r0, .L914
	mov	r1, #0x0
	bl	CreateTask
	ldr	r1, .L914+0x4
	strb	r0, [r1]
	bl	sub_80A699C
	b	.L909
.L915:
	.align	2, 0
.L914:
	.word	sub_80A50C8
	.word	gUnknown_02038563
.L911:
	bl	sub_80F9344
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L908	@cond_branch
.L909:
	pop	{r0}
	bx	r0
.Lfe136:
	.size	 sub_80A6940,.Lfe136-sub_80A6940
	.align	2, 0
	.globl	sub_80A6978
	.type	 sub_80A6978,function
	.thumb_func
sub_80A6978:
	push	{lr}
	ldr	r1, .L917
	mov	r0, #0x3
	strb	r0, [r1]
	ldr	r1, .L917+0x4
	mov	r0, #0x5
	strb	r0, [r1]
	ldr	r0, .L917+0x8
	bl	SetMainCallback2
	pop	{r0}
	bx	r0
.L918:
	.align	2, 0
.L917:
	.word	sCurrentBagPocket
	.word	sReturnLocation
	.word	sub_80A6940
.Lfe137:
	.size	 sub_80A6978,.Lfe137-sub_80A6978
	.align	2, 0
	.type	 sub_80A699C,function
	.thumb_func
sub_80A699C:
	ldr	r1, .L920
	ldr	r0, .L920+0x4
	str	r0, [r1]
	ldr	r1, .L920+0x8
	mov	r0, #0x4
	strb	r0, [r1]
	bx	lr
.L921:
	.align	2, 0
.L920:
	.word	sPopupMenuActionList
	.word	gUnknown_083C16B8
	.word	gUnknown_02038564
.Lfe138:
	.size	 sub_80A699C,.Lfe138-sub_80A699C
	.align	2, 0
	.type	 OnBagClose_Field5,function
	.thumb_func
OnBagClose_Field5:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L923
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldr	r3, .L923+0x4
	lsr	r2, r3, #0x10
	strh	r2, [r1, #0x18]
	strh	r3, [r1, #0x1a]
	bl	sub_80A5AE4
	pop	{r0}
	bx	r0
.L924:
	.align	2, 0
.L923:
	.word	gTasks
	.word	sub_804E990
.Lfe139:
	.size	 OnBagClose_Field5,.Lfe139-OnBagClose_Field5
	.align	2, 0
	.type	 HandlePopupMenuAction_Confirm,function
	.thumb_func
HandlePopupMenuAction_Confirm:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L926
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldr	r3, .L926+0x4
	lsr	r2, r3, #0x10
	strh	r2, [r1, #0x18]
	strh	r3, [r1, #0x1a]
	bl	sub_80A5AAC
	pop	{r0}
	bx	r0
.L927:
	.align	2, 0
.L926:
	.word	gTasks
	.word	sub_804E990
.Lfe140:
	.size	 HandlePopupMenuAction_Confirm,.Lfe140-HandlePopupMenuAction_Confirm
	.align	2, 0
	.type	 sub_80A6A08,function
	.thumb_func
sub_80A6A08:
	push	{lr}
	bl	sub_80A34B4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L929	@cond_branch
	ldr	r0, .L930
	mov	r1, #0x0
	bl	CreateTask
	ldr	r1, .L930+0x4
	strb	r0, [r1]
.L929:
	pop	{r0}
	bx	r0
.L931:
	.align	2, 0
.L930:
	.word	sub_80A50C8
	.word	gUnknown_02038563
.Lfe141:
	.size	 sub_80A6A08,.Lfe141-sub_80A6A08
	.align	2, 0
	.globl	sub_80A6A30
	.type	 sub_80A6A30,function
	.thumb_func
sub_80A6A30:
	push	{lr}
	ldr	r0, .L933
	mov	r1, #0x6
	strb	r1, [r0]
	ldr	r0, .L933+0x4
	bl	SetMainCallback2
	pop	{r0}
	bx	r0
.L934:
	.align	2, 0
.L933:
	.word	sReturnLocation
	.word	sub_80A6A08
.Lfe142:
	.size	 sub_80A6A30,.Lfe142-sub_80A6A30
	.align	2, 0
	.type	 OnBagClose_PC,function
	.thumb_func
OnBagClose_PC:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L936
	ldr	r1, .L936+0x4
	str	r1, [r2]
	ldr	r2, .L936+0x8
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldr	r3, .L936+0xc
	lsr	r2, r3, #0x10
	strh	r2, [r1, #0x18]
	strh	r3, [r1, #0x1a]
	bl	sub_80A5AE4
	pop	{r0}
	bx	r0
.L937:
	.align	2, 0
.L936:
	.word	gFieldCallback
	.word	ItemStorage_ReturnToMenuAfterDeposit
	.word	gTasks
	.word	c2_exit_to_overworld_2_switch
.Lfe143:
	.size	 OnBagClose_PC,.Lfe143-OnBagClose_PC
	.align	2, 0
	.type	 sub_80A6A84,function
	.thumb_func
sub_80A6A84:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	lsl	r4, r5, #0x2
	add	r4, r4, r5
	lsl	r4, r4, #0x3
	ldr	r6, .L939
	add	r0, r4, r6
	mov	r8, r0
	ldr	r0, .L939+0x4
	bl	sub_80A4DA4
	ldr	r0, .L939+0x8
	ldrh	r0, [r0]
	ldr	r1, .L939+0xc
	bl	CopyItemName
	ldr	r0, .L939+0x10
	mov	r2, r8
	mov	r3, #0x2
	ldrsh	r1, [r2, r3]
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	mov	r0, #0x7
	mov	r1, #0x6
	mov	r2, #0xb
	mov	r3, #0xd
	bl	MenuZeroFillWindowRect
	mov	r0, #0x7
	bl	sub_80A7528
	add	r0, r5, #0
	bl	sub_80A3D5C
	sub	r6, r6, #0x8
	add	r4, r4, r6
	ldr	r0, .L939+0x14
	str	r0, [r4]
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L940:
	.align	2, 0
.L939:
	.word	gTasks+0x8
	.word	gBGTilemapBuffers+0x800
	.word	gScriptItemId
	.word	gStringVar1
	.word	gStringVar2
	.word	sub_80A5E1C
.Lfe144:
	.size	 sub_80A6A84,.Lfe144-sub_80A6A84
	.align	2, 0
	.type	 sub_80A6B00,function
	.thumb_func
sub_80A6B00:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L944
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L943	@cond_branch
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L942	@cond_branch
.L943:
	ldr	r1, .L944+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r1, #0x0
	strh	r1, [r0, #0x1c]
	ldr	r1, .L944+0x8
	ldr	r0, .L944+0xc
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r2, [r0]
	add	r0, r4, #0
	add	r1, r2, #0
	bl	sub_80A48E8
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r4, #0
	bl	sub_80A5D38
.L942:
	pop	{r4}
	pop	{r0}
	bx	r0
.L945:
	.align	2, 0
.L944:
	.word	gMain
	.word	gTasks
	.word	gBagPocketScrollStates
	.word	sCurrentBagPocket
.Lfe145:
	.size	 sub_80A6B00,.Lfe145-sub_80A6B00
	.align	2, 0
	.type	 sub_80A6B64,function
	.thumb_func
sub_80A6B64:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r5, r0, #0x3
	ldr	r6, .L951
	add	r7, r5, r6
	ldr	r0, .L951+0x4
	mov	r8, r0
	ldrh	r0, [r0]
	bl	ItemId_GetImportance
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x2
	bne	.L947	@cond_branch
	add	r0, r6, #0
	sub	r0, r0, #0x8
	add	r0, r5, r0
	ldr	r1, .L951+0x8
	str	r1, [r0]
	mov	r0, #0x9
	bl	sub_80A7528
	b	.L948
.L952:
	.align	2, 0
.L951:
	.word	gTasks+0x8
	.word	gScriptItemId
	.word	sub_80A6B00
.L947:
	mov	r1, r8
	ldrh	r0, [r1]
	ldrh	r1, [r7, #0x2]
	bl	AddPCItem
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L949	@cond_branch
	add	r0, r4, #0
	bl	sub_80A6A84
	b	.L948
.L949:
	add	r0, r6, #0
	sub	r0, r0, #0x8
	add	r0, r5, r0
	ldr	r1, .L953
	str	r1, [r0]
	mov	r0, #0x8
	bl	sub_80A7528
.L948:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L954:
	.align	2, 0
.L953:
	.word	sub_80A6B00
.Lfe146:
	.size	 sub_80A6B64,.Lfe146-sub_80A6B64
	.align	2, 0
	.type	 sub_80A6BE0,function
	.thumb_func
sub_80A6BE0:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r5, r4, #0
	add	r0, r4, #0
	bl	sub_80A5350
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L955	@cond_branch
	ldr	r0, .L960
	ldrh	r1, [r0, #0x2e]
	mov	r2, #0x1
	and	r2, r2, r1
	cmp	r2, #0
	beq	.L957	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L960+0x4
	bl	sub_80A4DA4
	add	r0, r4, #0
	bl	sub_80A6B64
	b	.L955
.L961:
	.align	2, 0
.L960:
	.word	gMain
	.word	gBGTilemapBuffers+0x800
.L957:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L955	@cond_branch
	ldr	r1, .L962
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	strh	r2, [r0, #0x1c]
	ldr	r1, .L962+0x4
	ldr	r0, .L962+0x8
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r2, [r0]
	add	r0, r5, #0
	add	r1, r2, #0
	bl	sub_80A48E8
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r5, #0
	bl	sub_80A5D38
.L955:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L963:
	.align	2, 0
.L962:
	.word	gTasks
	.word	gBagPocketScrollStates
	.word	sCurrentBagPocket
.Lfe147:
	.size	 sub_80A6BE0,.Lfe147-sub_80A6BE0
	.align	2, 0
	.type	 OnItemSelect_PC,function
	.thumb_func
OnItemSelect_PC:
	push	{r4, r5, r6, lr}
	add	sp, sp, #0xfffffff8
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r1, .L969
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r5, r0, r1
	ldr	r2, .L969+0x4
	ldr	r6, .L969+0x8
	mov	r0, #0x0
	ldrsb	r0, [r6, r0]
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r1, [r0, #0x1]
	ldrb	r0, [r0]
	add	r1, r1, r0
	add	r1, r1, #0x1
	strh	r1, [r5, #0x1c]
	mov	r0, #0x0
	ldrsb	r0, [r6, r0]
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r2, [r0]
	add	r0, r4, #0
	add	r1, r2, #0
	bl	sub_80A48E8
	bl	sub_80A73FC
	mov	r0, #0x5
	bl	PlaySE
	bl	sub_80A7590
	mov	r0, #0x0
	ldrsb	r0, [r6, r0]
	cmp	r0, #0x4
	beq	.L965	@cond_branch
	ldr	r0, .L969+0xc
	str	r0, [r5]
	mov	r0, #0x6
	bl	sub_80A7528
	mov	r0, #0x0
	ldrsb	r0, [r6, r0]
	cmp	r0, #0x3
	bne	.L966	@cond_branch
	mov	r0, #0x3
	str	r0, [sp]
	str	r0, [sp, #0x4]
	add	r0, r4, #0
	mov	r1, #0x6
	mov	r2, #0x9
	mov	r3, #0x7
	bl	sub_80A4DD8
	b	.L968
.L970:
	.align	2, 0
.L969:
	.word	gTasks
	.word	gBagPocketScrollStates
	.word	sCurrentBagPocket
	.word	sub_80A6BE0
.L966:
	mov	r0, #0x3
	str	r0, [sp]
	mov	r0, #0x2
	str	r0, [sp, #0x4]
	add	r0, r4, #0
	mov	r1, #0x7
	mov	r2, #0x9
	mov	r3, #0x6
	bl	sub_80A4DD8
	b	.L968
.L965:
	mov	r0, #0x1
	strh	r0, [r5, #0xa]
	add	r0, r4, #0
	bl	sub_80A6B64
.L968:
	add	sp, sp, #0x8
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe148:
	.size	 OnItemSelect_PC,.Lfe148-OnItemSelect_PC
	.align	2, 0
	.globl	sub_80A6D1C
	.type	 sub_80A6D1C,function
	.thumb_func
sub_80A6D1C:
	push	{r4, r5, lr}
	bl	HideMapNamePopup
	ldr	r0, .L976
	ldr	r1, .L976+0x4
	add	r4, r0, r1
	ldrh	r0, [r4]
	cmp	r0, #0
	beq	.L972	@cond_branch
	mov	r1, #0x1
	bl	CheckBagHasItem
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x1
	bne	.L973	@cond_branch
	bl	ScriptContext2_Enable
	bl	FreezeMapObjects
	bl	sub_80594C0
	bl	sub_80597F4
	ldr	r1, .L976+0x8
	ldrh	r0, [r4]
	strh	r0, [r1]
	ldrh	r0, [r4]
	bl	ItemId_GetFieldFunc
	mov	r1, #0x8
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L976+0xc
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	strh	r5, [r1, #0xc]
	b	.L975
.L977:
	.align	2, 0
.L976:
	.word	gSaveBlock1
	.word	0x496
	.word	gScriptItemId
	.word	gTasks
.L973:
	mov	r0, #0x0
	strh	r0, [r4]
.L972:
	ldr	r0, .L978
	bl	ScriptContext1_SetupScript
.L975:
	mov	r0, #0x1
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L979:
	.align	2, 0
.L978:
	.word	Event_NoRegisteredItem
.Lfe149:
	.size	 sub_80A6D1C,.Lfe149-sub_80A6D1C
	.align	2, 0
	.type	 sub_80A6D98,function
	.thumb_func
sub_80A6D98:
	push	{lr}
.L981:
	bl	SetupBagMultistep
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L984	@cond_branch
	ldr	r0, .L987
	mov	r1, #0x0
	bl	CreateTask
	ldr	r1, .L987+0x4
	strb	r0, [r1]
	b	.L982
.L988:
	.align	2, 0
.L987:
	.word	sub_80A50C8
	.word	gUnknown_02038563
.L984:
	bl	sub_80F9344
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L981	@cond_branch
.L982:
	pop	{r0}
	bx	r0
.Lfe150:
	.size	 sub_80A6D98,.Lfe150-sub_80A6D98
	.align	2, 0
	.globl	sub_80A6DCC
	.type	 sub_80A6DCC,function
	.thumb_func
sub_80A6DCC:
	push	{lr}
	ldr	r1, .L990
	mov	r0, #0x0
	strb	r0, [r1]
	ldr	r1, .L990+0x4
	mov	r0, #0x1
	strb	r0, [r1]
	ldr	r0, .L990+0x8
	bl	SetMainCallback2
	pop	{r0}
	bx	r0
.L991:
	.align	2, 0
.L990:
	.word	sPopupMenuSelection
	.word	sReturnLocation
	.word	sub_80A6D98
.Lfe151:
	.size	 sub_80A6DCC,.Lfe151-sub_80A6DCC
	.align	2, 0
	.type	 sub_80A6DF0,function
	.thumb_func
sub_80A6DF0:
	push	{r4, r5, r6, lr}
	add	sp, sp, #0xfffffff8
	add	r5, r0, #0
	ldr	r4, .L995
	ldrb	r0, [r4]
	sub	r0, r0, #0x1
	lsl	r0, r0, #0x19
	lsr	r6, r0, #0x18
	mov	r0, #0x1
	bl	SetCustomFont
	mov	r1, #0x9
	sub	r1, r1, r6
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r0, #0x6
	mov	r2, #0xd
	mov	r3, #0xc
	bl	MenuDrawTextWindow
	mov	r2, #0xa
	sub	r2, r2, r6
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	add	r0, r6, #0x2
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	str	r0, [sp]
	add	r0, r5, #0
	mov	r1, #0x7
	mov	r3, #0x5
	bl	sub_80A4008
	ldrb	r0, [r4]
	cmp	r0, #0x1
	bne	.L993	@cond_branch
	ldr	r1, .L995+0x4
	ldr	r0, .L995+0x8
	ldr	r0, [r0]
	ldrb	r0, [r0]
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	r1, #0x8
	mov	r2, #0xa
	bl	MenuPrint
	b	.L994
.L996:
	.align	2, 0
.L995:
	.word	gUnknown_02038564
	.word	sItemPopupMenuActions
	.word	sPopupMenuActionList
.L993:
	ldr	r5, .L997
	ldr	r4, .L997+0x4
	ldr	r0, [r4]
	ldrb	r0, [r0]
	lsl	r0, r0, #0x3
	add	r0, r0, r5
	ldr	r0, [r0]
	mov	r1, #0x8
	mov	r2, #0x8
	bl	MenuPrint
	ldr	r0, [r4]
	ldrb	r0, [r0, #0x1]
	lsl	r0, r0, #0x3
	add	r0, r0, r5
	ldr	r0, [r0]
	mov	r1, #0x8
	mov	r2, #0xa
	bl	MenuPrint
.L994:
	mov	r2, #0xa
	sub	r2, r2, r6
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	ldr	r0, .L997+0x8
	ldrb	r3, [r0]
	mov	r0, #0x0
	str	r0, [sp]
	mov	r0, #0x5
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	mov	r1, #0x7
	bl	InitMenu
	mov	r0, #0x0
	bl	SetCustomFont
	mov	r0, #0x2
	bl	sub_80A7528
	add	sp, sp, #0x8
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L998:
	.align	2, 0
.L997:
	.word	sItemPopupMenuActions
	.word	sPopupMenuActionList
	.word	gUnknown_02038564
.Lfe152:
	.size	 sub_80A6DF0,.Lfe152-sub_80A6DF0
	.align	2, 0
	.type	 sub_80A6EB8,function
	.thumb_func
sub_80A6EB8:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r5, r4, #0
	ldr	r2, .L1010
	ldrh	r0, [r2, #0x30]
	mov	r1, #0xf0
	and	r1, r1, r0
	cmp	r1, #0x40
	bne	.L1000	@cond_branch
	ldr	r4, .L1010+0x4
	ldrb	r0, [r4]
	cmp	r0, #0x1
	bne	.L1002	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x1
	neg	r0, r0
	b	.L1009
.L1011:
	.align	2, 0
.L1010:
	.word	gMain
	.word	sPopupMenuSelection
.L1000:
	cmp	r1, #0x80
	bne	.L1003	@cond_branch
	ldr	r4, .L1012
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	ldr	r1, .L1012+0x4
	ldrb	r1, [r1]
	cmp	r0, r1
	bge	.L1002	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x1
.L1009:
	bl	MoveMenuCursor
	strb	r0, [r4]
	b	.L1002
.L1013:
	.align	2, 0
.L1012:
	.word	sPopupMenuSelection
	.word	gUnknown_02038564
.L1003:
	ldrh	r1, [r2, #0x2e]
	mov	r2, #0x1
	and	r2, r2, r1
	cmp	r2, #0
	beq	.L1006	@cond_branch
	ldr	r1, .L1014
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r1, #0x0
	strh	r1, [r0, #0x1c]
	ldr	r1, .L1014+0x4
	ldr	r0, .L1014+0x8
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r2, [r0]
	add	r0, r4, #0
	add	r1, r2, #0
	bl	sub_80A48E8
	ldr	r0, .L1014+0xc
	bl	sub_80A4DA4
	ldr	r1, .L1014+0x10
	ldr	r0, .L1014+0x14
	ldrb	r2, [r0]
	ldr	r0, .L1014+0x18
	ldr	r0, [r0]
	add	r0, r0, r2
	ldrb	r0, [r0]
	lsl	r0, r0, #0x3
	add	r1, r1, #0x4
	add	r0, r0, r1
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	_call_via_r1
	b	.L1002
.L1015:
	.align	2, 0
.L1014:
	.word	gTasks
	.word	gBagPocketScrollStates
	.word	sCurrentBagPocket
	.word	gBGTilemapBuffers+0x800
	.word	sItemPopupMenuActions
	.word	sPopupMenuSelection
	.word	sPopupMenuActionList
.L1006:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1002	@cond_branch
	ldr	r1, .L1016
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	strh	r2, [r0, #0x1c]
	ldr	r1, .L1016+0x4
	ldr	r0, .L1016+0x8
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r2, [r0]
	add	r0, r5, #0
	add	r1, r2, #0
	bl	sub_80A48E8
	ldr	r0, .L1016+0xc
	bl	sub_80A4DA4
	ldr	r0, .L1016+0x10
	ldr	r1, [r0, #0x2c]
	add	r0, r5, #0
	bl	_call_via_r1
.L1002:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1017:
	.align	2, 0
.L1016:
	.word	gTasks
	.word	gBagPocketScrollStates
	.word	sCurrentBagPocket
	.word	gBGTilemapBuffers+0x800
	.word	sItemPopupMenuActions
.Lfe153:
	.size	 sub_80A6EB8,.Lfe153-sub_80A6EB8
	.section .rodata
	.type	 gUnknown_083C1708,object
gUnknown_083C1708:
	.byte	0x4
	.byte	0x5
	.size	 gUnknown_083C1708,2
	.type	 gUnknown_083C170A,object
gUnknown_083C170A:
	.byte	0x5
	.byte	0x0
	.size	 gUnknown_083C170A,2
.text
	.align	2, 0
	.type	 sub_80A6FDC,function
	.thumb_func
sub_80A6FDC:
	push	{lr}
	ldr	r0, .L1022
	ldrh	r0, [r0]
	bl	ItemId_GetBattleUsage
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L1019	@cond_branch
	ldr	r1, .L1022+0x4
	ldr	r0, .L1022+0x8
	str	r0, [r1]
	ldr	r1, .L1022+0xc
	mov	r0, #0x2
	b	.L1021
.L1023:
	.align	2, 0
.L1022:
	.word	gScriptItemId
	.word	sPopupMenuActionList
	.word	gUnknown_083C1708
	.word	gUnknown_02038564
.L1019:
	ldr	r1, .L1024
	ldr	r0, .L1024+0x4
	str	r0, [r1]
	ldr	r1, .L1024+0x8
	mov	r0, #0x1
.L1021:
	strb	r0, [r1]
	pop	{r0}
	bx	r0
.L1025:
	.align	2, 0
.L1024:
	.word	sPopupMenuActionList
	.word	gUnknown_083C170A
	.word	gUnknown_02038564
.Lfe154:
	.size	 sub_80A6FDC,.Lfe154-sub_80A6FDC
	.align	2, 0
	.type	 OnItemSelect_Battle,function
	.thumb_func
OnItemSelect_Battle:
	push	{r4, r5, lr}
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	ldr	r1, .L1027
	mov	r0, #0x0
	strb	r0, [r1]
	bl	sub_80A6FDC
	ldr	r0, .L1027+0x4
	lsl	r4, r5, #0x2
	add	r4, r4, r5
	lsl	r4, r4, #0x3
	add	r4, r4, r0
	ldr	r3, .L1027+0x8
	ldr	r2, .L1027+0xc
	mov	r0, #0x0
	ldrsb	r0, [r2, r0]
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	ldrb	r1, [r0, #0x1]
	ldrb	r0, [r0]
	add	r1, r1, r0
	add	r1, r1, #0x1
	strh	r1, [r4, #0x1c]
	mov	r0, #0x0
	ldrsb	r0, [r2, r0]
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	ldrb	r2, [r0]
	add	r0, r5, #0
	add	r1, r2, #0
	bl	sub_80A48E8
	bl	sub_80A73FC
	ldr	r0, .L1027+0x10
	bl	sub_80A6DF0
	ldr	r0, .L1027+0x14
	str	r0, [r4]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1028:
	.align	2, 0
.L1027:
	.word	sPopupMenuSelection
	.word	gTasks
	.word	gBagPocketScrollStates
	.word	sCurrentBagPocket
	.word	gBGTilemapBuffers+0x800
	.word	sub_80A6EB8
.Lfe155:
	.size	 OnItemSelect_Battle,.Lfe155-OnItemSelect_Battle
	.align	2, 0
	.globl	sub_80A7094
	.type	 sub_80A7094,function
	.thumb_func
sub_80A7094:
	push	{lr}
	add	sp, sp, #0xfffffffc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L1030
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldr	r2, .L1030+0x4
	lsr	r0, r2, #0x10
	mov	r3, #0x0
	strh	r0, [r1, #0x18]
	strh	r2, [r1, #0x1a]
	ldr	r0, .L1030+0x8
	str	r0, [r1]
	mov	r0, #0x1
	neg	r0, r0
	str	r3, [sp]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.L1031:
	.align	2, 0
.L1030:
	.word	gTasks
	.word	sub_802E424
	.word	HandleItemMenuPaletteFade
.Lfe156:
	.size	 sub_80A7094,.Lfe156-sub_80A7094
	.align	2, 0
	.type	 OnBagClose_Battle,function
	.thumb_func
OnBagClose_Battle:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r4, #0
	bl	sub_80A7094
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe157:
	.size	 OnBagClose_Battle,.Lfe157-OnBagClose_Battle
	.align	2, 0
	.type	 HandlePopupMenuAction_UseInBattle,function
	.thumb_func
HandlePopupMenuAction_UseInBattle:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r4, .L1035
	ldrh	r0, [r4]
	bl	ItemId_GetBattleFunc
	cmp	r0, #0
	beq	.L1034	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldrh	r0, [r4]
	bl	ItemId_GetBattleFunc
	add	r1, r0, #0
	add	r0, r5, #0
	bl	_call_via_r1
.L1034:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1036:
	.align	2, 0
.L1035:
	.word	gScriptItemId
.Lfe158:
	.size	 HandlePopupMenuAction_UseInBattle,.Lfe158-HandlePopupMenuAction_UseInBattle
	.align	2, 0
	.type	 sub_80A7124,function
	.thumb_func
sub_80A7124:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x0
	bl	sub_80A7528
	add	r0, r4, #0
	bl	sub_80A41D4
	bl	ItemListMenu_InitMenu
	add	r0, r4, #0
	bl	sub_80A37C0
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe159:
	.size	 sub_80A7124,.Lfe159-sub_80A7124
	.align	2, 0
	.type	 sub_80A7150,function
	.thumb_func
sub_80A7150:
	push	{r4, r5, lr}
	ldr	r4, .L1045
	ldr	r5, .L1045+0x4
	b	.L1041
.L1046:
	.align	2, 0
.L1045:
	.word	gUnknown_02038563
	.word	gTasks
.L1042:
	bl	sub_80F9344
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L1040	@cond_branch
.L1041:
	bl	SetupBagMultistep
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L1042	@cond_branch
	ldr	r0, .L1047
	mov	r1, #0x0
	bl	CreateTask
	strb	r0, [r4]
	ldrb	r1, [r4]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r0, r0, r5
	mov	r1, #0x0
	strh	r1, [r0, #0x26]
.L1040:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1048:
	.align	2, 0
.L1047:
	.word	sub_80A7230
.Lfe160:
	.size	 sub_80A7150,.Lfe160-sub_80A7150
	.align	2, 0
	.globl	PrepareBagForWallyTutorial
	.type	 PrepareBagForWallyTutorial,function
	.thumb_func
PrepareBagForWallyTutorial:
	push	{r4, r5, lr}
	ldr	r0, .L1055
	mov	r1, #0x0
	strb	r1, [r0]
	ldr	r0, .L1055+0x4
	strb	r1, [r0]
	mov	r1, #0x0
	ldr	r4, .L1055+0x8
	ldr	r5, .L1055+0xc
	ldr	r3, .L1055+0x10
	mov	r2, #0x0
.L1053:
	lsl	r0, r1, #0x2
	add	r0, r0, r3
	strb	r2, [r0]
	strb	r2, [r0, #0x1]
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x4
	bls	.L1053	@cond_branch
	add	r0, r4, #0
	add	r1, r5, #0
	mov	r2, #0x50
	bl	memcpy
	mov	r1, #0x80
	lsl	r1, r1, #0x5
	add	r0, r4, r1
	add	r4, r5, #0
	add	r4, r4, #0xa0
	add	r1, r4, #0
	mov	r2, #0x40
	bl	memcpy
	add	r0, r5, #0
	mov	r1, #0x14
	bl	ClearItemSlots
	add	r0, r4, #0
	mov	r1, #0x10
	bl	ClearItemSlots
	mov	r0, #0xd
	mov	r1, #0x1
	bl	AddBagItem
	mov	r0, #0x4
	mov	r1, #0x1
	bl	AddBagItem
	ldr	r1, .L1055+0x14
	mov	r0, #0x7
	strb	r0, [r1]
	ldr	r0, .L1055+0x18
	bl	SetMainCallback2
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1056:
	.align	2, 0
.L1055:
	.word	sPopupMenuSelection
	.word	sCurrentBagPocket
	.word	gSharedMem+0x1e000
	.word	gSaveBlock1+0x560
	.word	gBagPocketScrollStates
	.word	sReturnLocation
	.word	sub_80A7150
.Lfe161:
	.size	 PrepareBagForWallyTutorial,.Lfe161-PrepareBagForWallyTutorial
	.align	2, 0
	.type	 sub_80A7230,function
	.thumb_func
sub_80A7230:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #0xfffffffc
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r6, r0, #0x3
	ldr	r0, .L1065
	mov	r8, r0
	add	r7, r6, r0
	mov	r0, #0x1e
	ldrsh	r1, [r7, r0]
	cmp	r1, #0xcc
	beq	.L1060	@cond_branch
	cmp	r1, #0xcc
	bgt	.L1064	@cond_branch
	cmp	r1, #0x66
	beq	.L1059	@cond_branch
	b	.L1058
.L1066:
	.align	2, 0
.L1065:
	.word	gTasks+0x8
.L1064:
	mov	r0, #0x99
	lsl	r0, r0, #0x1
	cmp	r1, r0
	beq	.L1061	@cond_branch
	b	.L1058
.L1059:
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x1
	mov	r1, #0x2
	bl	sub_80A4E8C
	b	.L1058
.L1060:
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x2
	bl	sub_80F98A4
	mov	r0, #0x3
	bl	sub_80F98A4
	ldr	r1, .L1067
	mov	r0, #0x4
	strh	r0, [r1]
	ldr	r1, .L1067+0x4
	ldr	r0, .L1067+0x8
	str	r0, [r1]
	ldr	r1, .L1067+0xc
	mov	r0, #0x2
	strb	r0, [r1]
	mov	r0, r8
	add	r4, r0, r6
	ldr	r3, .L1067+0x10
	ldr	r2, .L1067+0x14
	mov	r0, #0x0
	ldrsb	r0, [r2, r0]
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	ldrb	r1, [r0, #0x1]
	ldrb	r0, [r0]
	add	r1, r1, r0
	add	r1, r1, #0x1
	strh	r1, [r4, #0x14]
	mov	r0, #0x0
	ldrsb	r0, [r2, r0]
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	ldrb	r2, [r0]
	add	r0, r5, #0
	add	r1, r2, #0
	bl	sub_80A48E8
	bl	sub_80A73FC
	ldr	r0, .L1067+0x18
	bl	sub_80A6DF0
	b	.L1058
.L1068:
	.align	2, 0
.L1067:
	.word	gScriptItemId
	.word	sPopupMenuActionList
	.word	gUnknown_083C1708
	.word	gUnknown_02038564
	.word	gBagPocketScrollStates
	.word	sCurrentBagPocket
	.word	gBGTilemapBuffers+0x800
.L1061:
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L1069
	bl	sub_80A4DA4
	ldr	r4, .L1069+0x4
	ldr	r5, .L1069+0x8
	add	r0, r4, #0
	add	r1, r5, #0
	mov	r2, #0x50
	bl	memcpy
	add	r4, r4, #0xa0
	mov	r0, #0x80
	lsl	r0, r0, #0x5
	add	r5, r5, r0
	add	r0, r4, #0
	add	r1, r5, #0
	mov	r2, #0x40
	bl	memcpy
	ldr	r1, .L1069+0xc
	lsr	r0, r1, #0x10
	strh	r0, [r7, #0x10]
	strh	r1, [r7, #0x12]
	mov	r0, r8
	sub	r0, r0, #0x8
	add	r0, r6, r0
	ldr	r1, .L1069+0x10
	str	r1, [r0]
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	b	.L1057
.L1070:
	.align	2, 0
.L1069:
	.word	gBGTilemapBuffers+0x800
	.word	gSaveBlock1+0x560
	.word	gSharedMem+0x1e000
	.word	sub_802E424
	.word	HandleItemMenuPaletteFade
.L1058:
	ldrh	r0, [r7, #0x1e]
	add	r0, r0, #0x1
	strh	r0, [r7, #0x1e]
.L1057:
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe162:
	.size	 sub_80A7230,.Lfe162-sub_80A7230
	.align	2, 0
	.type	 ItemListMenu_InitMenu,function
	.thumb_func
ItemListMenu_InitMenu:
	push	{lr}
	add	sp, sp, #0xfffffff8
	ldr	r1, .L1072
	ldr	r0, .L1072+0x4
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r3, [r0, #0x3]
	add	r3, r3, #0x1
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	ldrb	r0, [r0]
	str	r0, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	mov	r1, #0xe
	mov	r2, #0x2
	bl	InitMenu
	bl	sub_80A73C0
	add	sp, sp, #0x8
	pop	{r0}
	bx	r0
.L1073:
	.align	2, 0
.L1072:
	.word	gBagPocketScrollStates
	.word	sCurrentBagPocket
.Lfe163:
	.size	 ItemListMenu_InitMenu,.Lfe163-ItemListMenu_InitMenu
	.align	2, 0
	.type	 sub_80A73C0,function
	.thumb_func
sub_80A73C0:
	bx	lr
.Lfe164:
	.size	 sub_80A73C0,.Lfe164-sub_80A73C0
	.align	2, 0
	.type	 sub_80A73F0,function
	.thumb_func
sub_80A73F0:
	push	{lr}
	bl	sub_814ADC8
	pop	{r0}
	bx	r0
.Lfe165:
	.size	 sub_80A73F0,.Lfe165-sub_80A73F0
	.align	2, 0
	.type	 sub_80A73FC,function
	.thumb_func
sub_80A73FC:
	push	{lr}
	bl	HandleDestroyMenuCursors
	bl	sub_814AD44
	pop	{r0}
	bx	r0
.Lfe166:
	.size	 sub_80A73FC,.Lfe166-sub_80A73FC
	.align	2, 0
	.type	 sub_80A740C,function
	.thumb_func
sub_80A740C:
	push	{lr}
	bl	sub_80A75E4
	bl	sub_80A7768
	bl	sub_80A7420
	pop	{r0}
	bx	r0
.Lfe167:
	.size	 sub_80A740C,.Lfe167-sub_80A740C
	.align	2, 0
	.type	 sub_80A7420,function
	.thumb_func
sub_80A7420:
	push	{r4, lr}
	ldr	r4, .L1099
	ldrb	r0, [r4]
	cmp	r0, #0x2
	beq	.L1081	@cond_branch
	cmp	r0, #0x3
	beq	.LCB10236
	b	.L1079	@long jump
.LCB10236:
	mov	r0, #0x2
	strb	r0, [r4]
	b	.L1079
.L1100:
	.align	2, 0
.L1099:
	.word	gUnknown_0203853C
.L1081:
	ldrb	r0, [r4, #0x2]
	cmp	r0, #0x9
	bhi	.L1082	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L1101
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1102:
	.align	2, 0
.L1101:
	.word	.L1093
	.align	2, 0
	.align	2, 0
.L1093:
	.word	.L1083
	.word	.L1084
	.word	.L1085
	.word	.L1086
	.word	.L1087
	.word	.L1088
	.word	.L1089
	.word	.L1090
	.word	.L1091
	.word	.L1092
.L1083:
	ldr	r1, .L1103
	ldr	r0, .L1103+0x4
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r1, [r0, #0x1]
	ldrb	r0, [r0]
	add	r1, r1, r0
	ldr	r0, .L1103+0x8
	ldr	r0, [r0]
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	mov	r2, #0x0
	ldrsh	r0, [r1, r2]
	ldrb	r1, [r4, #0x1]
	bl	ItemListMenu_ChangeDescription
	b	.L1082
.L1104:
	.align	2, 0
.L1103:
	.word	gBagPocketScrollStates
	.word	sCurrentBagPocket
	.word	gCurrentBagPocketItemSlots
.L1084:
	ldr	r0, .L1105
	b	.L1098
.L1106:
	.align	2, 0
.L1105:
	.word	gOtherText_SwitchWhichItem
.L1085:
	ldr	r0, .L1107
	b	.L1098
.L1108:
	.align	2, 0
.L1107:
	.word	gOtherText_WhatWillYouDo2
.L1086:
	ldr	r0, .L1109
	b	.L1098
.L1110:
	.align	2, 0
.L1109:
	.word	gOtherText_HowManyToToss
.L1087:
	ldr	r0, .L1111
	b	.L1098
.L1112:
	.align	2, 0
.L1111:
	.word	gOtherText_ThrewAwayItem
.L1088:
	ldr	r0, .L1113
	b	.L1098
.L1114:
	.align	2, 0
.L1113:
	.word	gOtherText_OkayToThrowAwayPrompt
.L1089:
	ldr	r0, .L1115
	b	.L1098
.L1116:
	.align	2, 0
.L1115:
	.word	gOtherText_HowManyToDeposit
.L1090:
	ldr	r0, .L1117
	b	.L1098
.L1118:
	.align	2, 0
.L1117:
	.word	gOtherText_DepositedItems
.L1091:
	ldr	r0, .L1119
.L1098:
	ldrb	r1, [r4, #0x1]
	bl	sub_80A4A98
	b	.L1082
.L1120:
	.align	2, 0
.L1119:
	.word	gOtherText_NoRoomForItems
.L1092:
	ldr	r0, .L1121
	ldrb	r1, [r4, #0x1]
	bl	sub_80A4A98
.L1082:
	ldrb	r0, [r4, #0x1]
	add	r0, r0, #0x1
	strb	r0, [r4, #0x1]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	bne	.L1079	@cond_branch
	mov	r0, #0x0
	strb	r0, [r4]
	bl	sub_80A7918
.L1079:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1122:
	.align	2, 0
.L1121:
	.word	gOtherText_CantStoreSomeoneItem
.Lfe168:
	.size	 sub_80A7420,.Lfe168-sub_80A7420
	.align	2, 0
	.type	 sub_80A751C,function
	.thumb_func
sub_80A751C:
	ldr	r1, .L1124
	mov	r0, #0x0
	strb	r0, [r1]
	bx	lr
.L1125:
	.align	2, 0
.L1124:
	.word	gUnknown_0203853C
.Lfe169:
	.size	 sub_80A751C,.Lfe169-sub_80A751C
	.align	2, 0
	.type	 sub_80A7528,function
	.thumb_func
sub_80A7528:
	push	{r4, lr}
	ldr	r4, .L1139
	mov	r1, #0x0
	strb	r1, [r4, #0x1]
	strb	r0, [r4, #0x2]
	bl	sub_80A78F4
	cmp	r0, #0x1
	beq	.L1133	@cond_branch
	cmp	r0, #0x1
	bgt	.L1137	@cond_branch
	cmp	r0, #0
	beq	.L1128	@cond_branch
	b	.L1127
.L1140:
	.align	2, 0
.L1139:
	.word	gUnknown_0203853C
.L1137:
	cmp	r0, #0x2
	beq	.L1134	@cond_branch
	b	.L1127
.L1128:
	mov	r0, #0x2
	strb	r0, [r4]
.L1131:
	bl	sub_80A7420
	ldrb	r0, [r4]
	cmp	r0, #0
	bne	.L1131	@cond_branch
	b	.L1127
.L1133:
	mov	r0, #0x3
	b	.L1138
.L1134:
	mov	r0, #0x1
.L1138:
	strb	r0, [r4]
.L1127:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe170:
	.size	 sub_80A7528,.Lfe170-sub_80A7528
	.align	2, 0
	.type	 sub_80A756C,function
	.thumb_func
sub_80A756C:
	push	{r4, lr}
	ldr	r4, .L1143
	ldrb	r0, [r4]
	sub	r0, r0, #0x2
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bhi	.L1142	@cond_branch
	bl	sub_80A7918
.L1142:
	mov	r0, #0x0
	strb	r0, [r4]
	pop	{r4}
	pop	{r0}
	bx	r0
.L1144:
	.align	2, 0
.L1143:
	.word	gUnknown_0203853C
.Lfe171:
	.size	 sub_80A756C,.Lfe171-sub_80A756C
	.align	2, 0
	.type	 sub_80A7590,function
	.thumb_func
sub_80A7590:
	push	{lr}
	mov	r0, #0x0
	mov	r1, #0xd
	mov	r2, #0xd
	mov	r3, #0x14
	bl	MenuZeroFillWindowRect
	bl	sub_80A756C
	pop	{r0}
	bx	r0
.Lfe172:
	.size	 sub_80A7590,.Lfe172-sub_80A7590
	.align	2, 0
	.type	 sub_80A75A8,function
	.thumb_func
sub_80A75A8:
	push	{lr}
	ldr	r1, .L1148
	ldrb	r0, [r1]
	sub	r0, r0, #0x2
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bhi	.L1147	@cond_branch
	mov	r0, #0x1
	strb	r0, [r1]
.L1147:
	pop	{r0}
	bx	r0
.L1149:
	.align	2, 0
.L1148:
	.word	gUnknown_0203853C
.Lfe173:
	.size	 sub_80A75A8,.Lfe173-sub_80A75A8
	.align	2, 0
	.type	 sub_80A75C4,function
	.thumb_func
sub_80A75C4:
	push	{lr}
	ldr	r1, .L1156
	ldrb	r0, [r1]
	cmp	r0, #0
	beq	.L1153	@cond_branch
	cmp	r0, #0x1
	bne	.L1151	@cond_branch
	mov	r0, #0x3
	strb	r0, [r1]
	b	.L1151
.L1157:
	.align	2, 0
.L1156:
	.word	gUnknown_0203853C
.L1153:
	bl	sub_80A7918
.L1151:
	pop	{r0}
	bx	r0
.Lfe174:
	.size	 sub_80A75C4,.Lfe174-sub_80A75C4
	.align	2, 0
	.type	 sub_80A75E4,function
	.thumb_func
sub_80A75E4:
	push	{r4, r5, lr}
	ldr	r4, .L1163
	ldrb	r0, [r4]
	cmp	r0, #0x1
	bne	.L1159	@cond_branch
	bl	sub_80A7988
	add	r5, r0, #0
	cmp	r5, #0
	bne	.L1159	@cond_branch
	ldr	r0, .L1163+0x4
	ldrb	r0, [r0]
	ldrb	r2, [r4, #0x1]
	add	r1, r2, #0
	mov	r3, #0x1
	bl	sub_80A47E8
	ldrb	r0, [r4, #0x1]
	add	r0, r0, #0x1
	strb	r0, [r4, #0x1]
	ldrb	r0, [r4, #0x2]
	mov	r1, #0x7
	cmp	r0, #0
	beq	.L1160	@cond_branch
	mov	r1, #0x5
.L1160:
	ldrb	r0, [r4, #0x1]
	cmp	r1, r0
	bge	.L1159	@cond_branch
	strb	r5, [r4]
	bl	sub_80A78E8
.L1159:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1164:
	.align	2, 0
.L1163:
	.word	gUnknown_02038540
	.word	gUnknown_02038563
.Lfe175:
	.size	 sub_80A75E4,.Lfe175-sub_80A75E4
	.align	2, 0
	.type	 sub_80A7630,function
	.thumb_func
sub_80A7630:
	ldr	r1, .L1166
	mov	r0, #0x0
	strb	r0, [r1]
	bx	lr
.L1167:
	.align	2, 0
.L1166:
	.word	gUnknown_02038540
.Lfe176:
	.size	 sub_80A7630,.Lfe176-sub_80A7630
	.align	2, 0
	.type	 sub_80A763C,function
	.thumb_func
sub_80A763C:
	push	{r4, lr}
	ldr	r4, .L1174
	bl	sub_80A78C4
	add	r1, r0, #0
	cmp	r1, #0
	beq	.L1170	@cond_branch
	cmp	r1, #0x1
	beq	.L1171	@cond_branch
	b	.L1169
.L1175:
	.align	2, 0
.L1174:
	.word	gUnknown_02038540
.L1170:
	ldr	r0, .L1176
	ldrb	r0, [r0]
	mov	r1, #0x0
	mov	r2, #0x7
	bl	sub_80A48E8
	b	.L1169
.L1177:
	.align	2, 0
.L1176:
	.word	gUnknown_02038563
.L1171:
	mov	r0, #0x0
	strb	r1, [r4]
	strb	r0, [r4, #0x1]
	strb	r0, [r4, #0x2]
.L1169:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe177:
	.size	 sub_80A763C,.Lfe177-sub_80A763C
	.align	2, 0
	.type	 sub_80A7678,function
	.thumb_func
sub_80A7678:
	push	{r4, lr}
	ldr	r4, .L1180
	ldrb	r0, [r4]
	cmp	r0, #0x1
	bne	.L1179	@cond_branch
	bl	sub_80A78E8
.L1179:
	mov	r0, #0x0
	strb	r0, [r4]
	pop	{r4}
	pop	{r0}
	bx	r0
.L1181:
	.align	2, 0
.L1180:
	.word	gUnknown_02038540
.Lfe178:
	.size	 sub_80A7678,.Lfe178-sub_80A7678
	.align	2, 0
	.type	 sub_80A7694,function
	.thumb_func
sub_80A7694:
	ldr	r1, .L1183
	mov	r0, #0x1
	strb	r0, [r1, #0x2]
	bx	lr
.L1184:
	.align	2, 0
.L1183:
	.word	gUnknown_02038540
.Lfe179:
	.size	 sub_80A7694,.Lfe179-sub_80A7694
	.align	2, 0
	.type	 sub_80A76A0,function
	.thumb_func
sub_80A76A0:
	push	{lr}
	mov	r0, #0xe
	mov	r1, #0x2
	mov	r2, #0x1d
	mov	r3, #0x12
	bl	MenuZeroFillWindowRect
	bl	sub_80A7678
	pop	{r0}
	bx	r0
.Lfe180:
	.size	 sub_80A76A0,.Lfe180-sub_80A76A0
	.align	2, 0
	.type	 sub_80A76B8,function
	.thumb_func
sub_80A76B8:
	push	{lr}
	ldr	r0, .L1188
	mov	r1, #0x0
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L1187	@cond_branch
	mov	r1, #0x1
.L1187:
	add	r0, r1, #0
	pop	{r1}
	bx	r1
.L1189:
	.align	2, 0
.L1188:
	.word	gUnknown_02038540
.Lfe181:
	.size	 sub_80A76B8,.Lfe181-sub_80A76B8
	.align	2, 0
	.type	 sub_80A76D0,function
	.thumb_func
sub_80A76D0:
	push	{lr}
	ldr	r0, .L1192
	mov	r1, #0x0
	ldrb	r0, [r0, #0x1]
	cmp	r0, #0x5
	bls	.L1191	@cond_branch
	mov	r1, #0x1
.L1191:
	add	r0, r1, #0
	pop	{r1}
	bx	r1
.L1193:
	.align	2, 0
.L1192:
	.word	gUnknown_02038540
.Lfe182:
	.size	 sub_80A76D0,.Lfe182-sub_80A76D0
	.align	2, 0
	.type	 sub_80A76E8,function
	.thumb_func
sub_80A76E8:
	push	{r4, lr}
	ldr	r4, .L1196
	ldrb	r0, [r4]
	cmp	r0, #0x1
	bne	.L1195	@cond_branch
	ldrb	r0, [r4, #0x1]
	ldr	r1, [r4, #0x4]
	ldr	r2, [r4, #0x8]
	ldrh	r3, [r4, #0x2]
	bl	DisplayItemMessageOnField
	mov	r0, #0x0
	strb	r0, [r4]
.L1195:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1197:
	.align	2, 0
.L1196:
	.word	gUnknown_02038544
.Lfe183:
	.size	 sub_80A76E8,.Lfe183-sub_80A76E8
	.align	2, 0
	.type	 sub_80A770C,function
	.thumb_func
sub_80A770C:
	ldr	r1, .L1199
	mov	r0, #0x0
	strb	r0, [r1]
	bx	lr
.L1200:
	.align	2, 0
.L1199:
	.word	gUnknown_02038544
.Lfe184:
	.size	 sub_80A770C,.Lfe184-sub_80A770C
	.align	2, 0
	.type	 DisplayCannotUseItemMessage,function
	.thumb_func
DisplayCannotUseItemMessage:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	r5, r0, #0
	add	r7, r1, #0
	mov	r8, r2
	add	r6, r3, #0
	ldr	r4, .L1207
	bl	sub_80A7924
	cmp	r0, #0
	beq	.L1203	@cond_branch
	cmp	r0, #0x2
	beq	.L1204	@cond_branch
	b	.L1202
.L1208:
	.align	2, 0
.L1207:
	.word	gUnknown_02038544
.L1203:
	lsl	r0, r5, #0x18
	lsr	r0, r0, #0x18
	lsl	r3, r6, #0x10
	lsr	r3, r3, #0x10
	add	r1, r7, #0
	mov	r2, r8
	bl	DisplayItemMessageOnField
	b	.L1202
.L1204:
	mov	r0, #0x1
	strb	r0, [r4]
	strb	r5, [r4, #0x1]
	str	r7, [r4, #0x4]
	mov	r0, r8
	str	r0, [r4, #0x8]
	strh	r6, [r4, #0x2]
.L1202:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe185:
	.size	 DisplayCannotUseItemMessage,.Lfe185-DisplayCannotUseItemMessage
	.align	2, 0
	.type	 sub_80A7768,function
	.thumb_func
sub_80A7768:
	push	{r4, lr}
	ldr	r4, .L1217
	ldrb	r0, [r4]
	cmp	r0, #0x2
	bne	.L1210	@cond_branch
	ldrb	r1, [r4, #0x1]
	cmp	r1, #0
	beq	.L1211	@cond_branch
	ldrb	r0, [r4, #0x2]
	cmp	r0, #0x1
	beq	.L1212	@cond_branch
	ldr	r2, .L1217+0x4
	ldr	r0, .L1217+0x8
	ldr	r0, [r0]
	add	r0, r1, r0
	sub	r0, r0, #0x1
	ldrb	r0, [r0]
	lsl	r0, r0, #0x3
	add	r0, r0, r2
	ldr	r0, [r0]
	sub	r1, r1, #0x1
	lsl	r1, r1, #0x1
	add	r1, r1, #0x1
	ldrb	r2, [r4, #0x3]
	add	r2, r2, r1
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r1, #0x7
	bl	MenuPrint
	b	.L1213
.L1218:
	.align	2, 0
.L1217:
	.word	gUnknown_02038550
	.word	sItemPopupMenuActions
	.word	sPopupMenuActionList
.L1212:
	cmp	r1, #0x1
	bne	.L1214	@cond_branch
	ldr	r0, .L1219
	ldrh	r0, [r0]
	bl	sub_80A4B90
	add	r3, r0, #0
	b	.L1215
.L1220:
	.align	2, 0
.L1219:
	.word	gScriptItemId
.L1214:
	ldr	r2, .L1221
	ldrb	r0, [r4, #0x1]
	ldr	r1, .L1221+0x4
	ldr	r1, [r1]
	add	r0, r0, r1
	sub	r0, r0, #0x1
	ldrb	r0, [r0]
	lsl	r0, r0, #0x3
	add	r0, r0, r2
	ldr	r3, [r0]
.L1215:
	ldrb	r2, [r4, #0x1]
	sub	r2, r2, #0x1
	asr	r0, r2, #0x1
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x1
	add	r1, r1, #0x1
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r0, #0x1
	and	r2, r2, r0
	lsl	r2, r2, #0x1
	add	r2, r2, #0x8
	add	r0, r3, #0
	bl	MenuPrint
.L1213:
	ldr	r1, .L1221+0x8
	ldrb	r0, [r4, #0x1]
	ldrb	r1, [r1]
	cmp	r0, r1
	bne	.L1211	@cond_branch
	mov	r0, #0x0
	strb	r0, [r4]
	bl	sub_80A7970
.L1211:
	ldrb	r0, [r4, #0x1]
	add	r0, r0, #0x1
	strb	r0, [r4, #0x1]
.L1210:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1222:
	.align	2, 0
.L1221:
	.word	sItemPopupMenuActions
	.word	sPopupMenuActionList
	.word	gUnknown_02038564
.Lfe186:
	.size	 sub_80A7768,.Lfe186-sub_80A7768
	.align	2, 0
	.type	 sub_80A7828,function
	.thumb_func
sub_80A7828:
	ldr	r1, .L1224
	mov	r0, #0x0
	strb	r0, [r1]
	bx	lr
.L1225:
	.align	2, 0
.L1224:
	.word	gUnknown_02038550
.Lfe187:
	.size	 sub_80A7828,.Lfe187-sub_80A7828
	.align	2, 0
	.type	 sub_80A7834,function
	.thumb_func
sub_80A7834:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	add	r6, r1, #0
	ldr	r4, .L1233
	bl	sub_80A7958
	cmp	r0, #0x1
	beq	.L1228	@cond_branch
	cmp	r0, #0x2
	beq	.L1229	@cond_branch
	b	.L1227
.L1234:
	.align	2, 0
.L1233:
	.word	gUnknown_02038550
.L1228:
	mov	r1, #0x0
	mov	r0, #0x2
	b	.L1232
.L1229:
	mov	r1, #0x0
	mov	r0, #0x1
.L1232:
	strb	r0, [r4]
	strb	r1, [r4, #0x1]
	strb	r5, [r4, #0x2]
	strb	r6, [r4, #0x3]
.L1227:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe188:
	.size	 sub_80A7834,.Lfe188-sub_80A7834
	.align	2, 0
	.type	 sub_80A7868,function
	.thumb_func
sub_80A7868:
	push	{lr}
	ldr	r1, .L1237
	ldrb	r0, [r1]
	cmp	r0, #0x2
	bne	.L1236	@cond_branch
	mov	r0, #0x1
	strb	r0, [r1]
.L1236:
	pop	{r0}
	bx	r0
.L1238:
	.align	2, 0
.L1237:
	.word	gUnknown_02038550
.Lfe189:
	.size	 sub_80A7868,.Lfe189-sub_80A7868
	.align	2, 0
	.type	 sub_80A7880,function
	.thumb_func
sub_80A7880:
	push	{lr}
	ldr	r1, .L1245
	ldrb	r0, [r1]
	cmp	r0, #0
	beq	.L1242	@cond_branch
	cmp	r0, #0x1
	bne	.L1240	@cond_branch
	mov	r0, #0x2
	strb	r0, [r1]
	b	.L1240
.L1246:
	.align	2, 0
.L1245:
	.word	gUnknown_02038550
.L1242:
	bl	sub_80A7970
.L1240:
	pop	{r0}
	bx	r0
.Lfe190:
	.size	 sub_80A7880,.Lfe190-sub_80A7880
	.align	2, 0
	.type	 sub_80A78A0,function
	.thumb_func
sub_80A78A0:
	push	{lr}
	ldr	r0, .L1249
	mov	r1, #0x0
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L1248	@cond_branch
	mov	r1, #0x1
.L1248:
	add	r0, r1, #0
	pop	{r1}
	bx	r1
.L1250:
	.align	2, 0
.L1249:
	.word	gUnknown_02038550
.Lfe191:
	.size	 sub_80A78A0,.Lfe191-sub_80A78A0
	.align	2, 0
	.type	 sub_80A78B8,function
	.thumb_func
sub_80A78B8:
	ldr	r1, .L1252
	mov	r0, #0x0
	strb	r0, [r1]
	bx	lr
.L1253:
	.align	2, 0
.L1252:
	.word	gUnknown_02038554
.Lfe192:
	.size	 sub_80A78B8,.Lfe192-sub_80A78B8
	.align	2, 0
	.type	 sub_80A78C4,function
	.thumb_func
sub_80A78C4:
	push	{lr}
	ldr	r0, .L1257
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L1255	@cond_branch
	bl	sub_80A7868
	bl	sub_80A75A8
	mov	r0, #0x1
	b	.L1256
.L1258:
	.align	2, 0
.L1257:
	.word	gLinkOpen
.L1255:
	mov	r0, #0x0
.L1256:
	pop	{r1}
	bx	r1
.Lfe193:
	.size	 sub_80A78C4,.Lfe193-sub_80A78C4
	.align	2, 0
	.type	 sub_80A78E8,function
	.thumb_func
sub_80A78E8:
	push	{lr}
	bl	sub_80A7880
	pop	{r0}
	bx	r0
.Lfe194:
	.size	 sub_80A78E8,.Lfe194-sub_80A78E8
	.align	2, 0
	.type	 sub_80A78F4,function
	.thumb_func
sub_80A78F4:
	push	{lr}
	ldr	r0, .L1265
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L1261	@cond_branch
	bl	sub_80A76B8
	mov	r1, #0x2
	cmp	r0, #0
	beq	.L1264	@cond_branch
	mov	r1, #0x1
	b	.L1264
.L1266:
	.align	2, 0
.L1265:
	.word	gLinkOpen
.L1261:
	mov	r1, #0x0
.L1264:
	add	r0, r1, #0
	pop	{r1}
	bx	r1
.Lfe195:
	.size	 sub_80A78F4,.Lfe195-sub_80A78F4
	.align	2, 0
	.type	 sub_80A7918,function
	.thumb_func
sub_80A7918:
	push	{lr}
	bl	sub_80A76E8
	pop	{r0}
	bx	r0
.Lfe196:
	.size	 sub_80A7918,.Lfe196-sub_80A7918
	.align	2, 0
	.type	 sub_80A7924,function
	.thumb_func
sub_80A7924:
	push	{lr}
	ldr	r0, .L1274
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L1273	@cond_branch
	bl	sub_80A76B8
	cmp	r0, #0
	bne	.L1273	@cond_branch
	bl	sub_80A76D0
	cmp	r0, #0
	beq	.L1271	@cond_branch
	bl	sub_80A7678
.L1273:
	mov	r0, #0x0
	b	.L1272
.L1275:
	.align	2, 0
.L1274:
	.word	gLinkOpen
.L1271:
	bl	sub_80A7694
	mov	r0, #0x2
.L1272:
	pop	{r1}
	bx	r1
.Lfe197:
	.size	 sub_80A7924,.Lfe197-sub_80A7924
	.align	2, 0
	.type	 sub_80A7958,function
	.thumb_func
sub_80A7958:
	push	{lr}
	bl	sub_80A76B8
	cmp	r0, #0
	beq	.L1277	@cond_branch
	bl	sub_80A75A8
	mov	r0, #0x1
	b	.L1278
.L1277:
	mov	r0, #0x2
.L1278:
	pop	{r1}
	bx	r1
.Lfe198:
	.size	 sub_80A7958,.Lfe198-sub_80A7958
	.align	2, 0
	.type	 sub_80A7970,function
	.thumb_func
sub_80A7970:
	push	{lr}
	bl	sub_80A75C4
	pop	{r0}
	bx	r0
.Lfe199:
	.size	 sub_80A7970,.Lfe199-sub_80A7970
	.align	2, 0
	.type	 sub_80A797C,function
	.thumb_func
sub_80A797C:
	ldr	r1, .L1281
	mov	r0, #0x1
	strb	r0, [r1]
	bx	lr
.L1282:
	.align	2, 0
.L1281:
	.word	gUnknown_02038554
.Lfe200:
	.size	 sub_80A797C,.Lfe200-sub_80A797C
	.align	2, 0
	.type	 sub_80A7988,function
	.thumb_func
sub_80A7988:
	ldr	r1, .L1284
	ldrb	r0, [r1]
	mov	r2, #0x0
	strb	r2, [r1]
	bx	lr
.L1285:
	.align	2, 0
.L1284:
	.word	gUnknown_02038554
.Lfe201:
	.size	 sub_80A7988,.Lfe201-sub_80A7988
	.section .rodata
	.align	1, 0
	.type	 gPalette_83C170C,object
gPalette_83C170C:
	.short	0x398c
	.short	0x7fff
	.short	0x6739
	.short	0x5294
	.short	0x3def
	.short	0x398c
	.short	0x20e5
	.short	0x45a7
	.short	0x3945
	.short	0x579f
	.short	0x2f1f
	.short	0x109f
	.short	0x6acd
	.short	0x51e5
	.short	0x2e77
	.short	0x0
	.size	 gPalette_83C170C,32
	.type	 gSpriteImage_83C172C,object
gSpriteImage_83C172C:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xee
	.byte	0x0
	.byte	0x0
	.byte	0xee
	.byte	0xee
	.byte	0x0
	.byte	0x0
	.byte	0xee
	.byte	0xee
	.byte	0x0
	.byte	0xe0
	.byte	0xee
	.byte	0xa
	.byte	0x0
	.byte	0xe0
	.byte	0xee
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xee
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xee
	.byte	0xee
	.byte	0x0
	.byte	0x0
	.byte	0xee
	.byte	0xee
	.byte	0x0
	.byte	0x0
	.byte	0xa0
	.byte	0xee
	.byte	0xe
	.byte	0x0
	.byte	0x0
	.byte	0xaa
	.byte	0xaa
	.byte	0x0
	.byte	0x0
	.byte	0xaa
	.byte	0xaa
	.byte	0x0
	.byte	0x0
	.byte	0xe0
	.byte	0xee
	.byte	0xa
	.byte	0x0
	.byte	0x0
	.byte	0xee
	.byte	0xee
	.byte	0x0
	.byte	0x0
	.byte	0xee
	.byte	0xee
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xee
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xee
	.byte	0xe
	.byte	0x0
	.byte	0xa0
	.byte	0xee
	.byte	0xe
	.byte	0x0
	.byte	0xee
	.byte	0xee
	.byte	0x0
	.byte	0x0
	.byte	0xee
	.byte	0xee
	.byte	0x0
	.byte	0x0
	.byte	0xee
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.size	 gSpriteImage_83C172C,128
	.globl	gSpriteImage_UnusedCherry
	.type	 gSpriteImage_UnusedCherry,object
gSpriteImage_UnusedCherry:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xa0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xb9
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x99
	.byte	0xaa
	.byte	0x90
	.byte	0xa9
	.byte	0xba
	.byte	0xbb
	.byte	0xa9
	.byte	0xbb
	.byte	0x0
	.byte	0x0
	.byte	0xba
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xb
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xcb
	.byte	0xc
	.byte	0x0
	.byte	0x0
	.byte	0xa0
	.byte	0xca
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xa0
	.byte	0xc
	.byte	0x0
	.byte	0x0
	.byte	0x90
	.byte	0xa9
	.byte	0xa9
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x20
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xea
	.byte	0x0
	.byte	0x0
	.byte	0x90
	.byte	0xb
	.byte	0x0
	.byte	0x0
	.byte	0xa0
	.byte	0xe
	.byte	0x0
	.byte	0x0
	.byte	0xc0
	.byte	0xed
	.byte	0x0
	.byte	0x32
	.byte	0x13
	.byte	0x72
	.byte	0x20
	.byte	0x21
	.byte	0x63
	.byte	0x57
	.byte	0x13
	.byte	0x11
	.byte	0x43
	.byte	0x54
	.byte	0x23
	.byte	0x21
	.byte	0x44
	.byte	0x44
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x90
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xb9
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xca
	.byte	0x0
	.byte	0x0
	.byte	0xa0
	.byte	0xc
	.byte	0x7
	.byte	0x0
	.byte	0xa0
	.byte	0xc
	.byte	0x5
	.byte	0x0
	.byte	0xa0
	.byte	0xac
	.byte	0x75
	.byte	0x0
	.byte	0xa0
	.byte	0xab
	.byte	0x90
	.byte	0xb9
	.byte	0xcb
	.byte	0xbc
	.byte	0xba
	.byte	0xc
	.byte	0xef
	.byte	0x0
	.byte	0xc
	.byte	0x0
	.byte	0xf0
	.byte	0xe
	.byte	0x0
	.byte	0x0
	.byte	0x90
	.byte	0xe
	.byte	0x0
	.byte	0x0
	.byte	0x90
	.byte	0xec
	.byte	0x0
	.byte	0x0
	.byte	0x90
	.byte	0xec
	.byte	0x0
	.byte	0x0
	.byte	0xa0
	.byte	0xec
	.byte	0x0
	.byte	0x0
	.byte	0xa9
	.byte	0xe
	.byte	0xaa
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xbb
	.byte	0xc
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xca
	.byte	0xc
	.byte	0x0
	.byte	0x0
	.byte	0xa0
	.byte	0xcb
	.byte	0xb0
	.byte	0x0
	.byte	0x0
	.byte	0xc0
	.byte	0xbc
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xca
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xca
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xca
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xb
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xc
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xc
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x20
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x30
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x50
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x33
	.byte	0x43
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x54
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x55
	.byte	0x45
	.byte	0x54
	.byte	0x55
	.byte	0x65
	.byte	0x60
	.byte	0x56
	.byte	0x65
	.byte	0x77
	.byte	0x0
	.byte	0x60
	.byte	0x76
	.byte	0x7
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x75
	.byte	0x0
	.byte	0x0
	.byte	0xbc
	.byte	0x75
	.byte	0x0
	.byte	0x0
	.byte	0xc0
	.byte	0x75
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x76
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x7
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xa
	.byte	0x90
	.byte	0xba
	.byte	0xe
	.byte	0xbb
	.byte	0xbb
	.byte	0xec
	.byte	0x0
	.byte	0xc0
	.byte	0xec
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xa0
	.byte	0xc
	.byte	0x0
	.byte	0x0
	.byte	0xa0
	.byte	0xc
	.byte	0x0
	.byte	0xb0
	.byte	0xbc
	.byte	0xc
	.byte	0x0
	.byte	0x0
	.byte	0xcb
	.byte	0xc
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xcb
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xcb
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xba
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xba
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.size	 gSpriteImage_UnusedCherry,1152
	.globl	gSpritePalette_UnusedCherry
	.align	1, 0
	.type	 gSpritePalette_UnusedCherry,object
gSpritePalette_UnusedCherry:
	.short	0x7bd2
	.short	0x3fff
	.short	0x32de
	.short	0x25be
	.short	0x18be
	.short	0x14da
	.short	0x10f6
	.short	0xd12
	.short	0xd4e
	.short	0x43b7
	.short	0x3b33
	.short	0x32af
	.short	0x2a2b
	.short	0x256e
	.short	0x196a
	.short	0x1187
	.size	 gSpritePalette_UnusedCherry,32
	.align	2, 0
	.type	 sBagSpriteOamData,object
	.size	 sBagSpriteOamData,8
sBagSpriteOamData:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xc0
	.byte	0x0
	.byte	0x78
	.short	0x0
	.align	2, 0
	.type	 sBagSpriteAnimSeq0,object
sBagSpriteAnimSeq0:
	.short	0x0
	.byte	0x4
	.space	1
	.short	0xffffffff
	.space	2
	.size	 sBagSpriteAnimSeq0,8
	.align	2, 0
	.type	 sBagSpriteAnimSeq1,object
sBagSpriteAnimSeq1:
	.short	0x40
	.byte	0x4
	.space	1
	.short	0xffffffff
	.space	2
	.size	 sBagSpriteAnimSeq1,8
	.align	2, 0
	.type	 sBagSpriteAnimSeq5,object
sBagSpriteAnimSeq5:
	.short	0x80
	.byte	0x4
	.space	1
	.short	0xffffffff
	.space	2
	.size	 sBagSpriteAnimSeq5,8
	.align	2, 0
	.type	 sBagSpriteAnimSeq2,object
sBagSpriteAnimSeq2:
	.short	0xc0
	.byte	0x4
	.space	1
	.short	0xffffffff
	.space	2
	.size	 sBagSpriteAnimSeq2,8
	.align	2, 0
	.type	 sBagSpriteAnimSeq3,object
sBagSpriteAnimSeq3:
	.short	0x100
	.byte	0x4
	.space	1
	.short	0xffffffff
	.space	2
	.size	 sBagSpriteAnimSeq3,8
	.align	2, 0
	.type	 sBagSpriteAnimSeq4,object
sBagSpriteAnimSeq4:
	.short	0x140
	.byte	0x4
	.space	1
	.short	0xffffffff
	.space	2
	.size	 sBagSpriteAnimSeq4,8
	.align	2, 0
	.type	 sBagSpriteAnimTable,object
sBagSpriteAnimTable:
	.word	sBagSpriteAnimSeq0
	.word	sBagSpriteAnimSeq1
	.word	sBagSpriteAnimSeq2
	.word	sBagSpriteAnimSeq3
	.word	sBagSpriteAnimSeq4
	.word	sBagSpriteAnimSeq5
	.size	 sBagSpriteAnimTable,24
	.align	2, 0
	.type	 sBagSpriteAffineAnimSeq,object
sBagSpriteAffineAnimSeq:
	.short	0x0
	.short	0x0
	.byte	0xfe
	.byte	0x2
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x2
	.byte	0x4
	.space	2
	.short	0x0
	.short	0x0
	.byte	0xfe
	.byte	0x4
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x2
	.byte	0x2
	.space	2
	.short	0x7fff
	.space	6
	.size	 sBagSpriteAffineAnimSeq,40
	.align	2, 0
	.type	 sBagSpriteAffineAnimTable,object
sBagSpriteAffineAnimTable:
	.word	sBagSpriteAffineAnimSeq
	.size	 sBagSpriteAffineAnimTable,4
	.align	2, 0
	.type	 sMaleBagSpriteSheet,object
	.size	 sMaleBagSpriteSheet,8
sMaleBagSpriteSheet:
	.word	gBagMaleTiles
	.short	0x3000
	.short	0x7530
	.align	2, 0
	.type	 sFemaleBagSpriteSheet,object
	.size	 sFemaleBagSpriteSheet,8
sFemaleBagSpriteSheet:
	.word	gBagFemaleTiles
	.short	0x3000
	.short	0x7530
	.align	2, 0
	.type	 sBagSpritePalette,object
	.size	 sBagSpritePalette,8
sBagSpritePalette:
	.word	gBagPalette
	.short	0x7530
	.space	2
.text
	.align	2, 0
	.type	 sub_80A7998,function
	.thumb_func
sub_80A7998:
	add	r2, r0, #0
	add	r2, r2, #0x2a
	mov	r1, #0x0
	strb	r1, [r2]
	strh	r1, [r0, #0x2e]
	strh	r1, [r0, #0x30]
	strh	r1, [r0, #0x32]
	strh	r1, [r0, #0x34]
	strh	r1, [r0, #0x36]
	ldr	r1, .L1287
	str	r1, [r0, #0x1c]
	bx	lr
.L1288:
	.align	2, 0
.L1287:
	.word	sub_80A79B4
.Lfe202:
	.size	 sub_80A7998,.Lfe202-sub_80A7998
	.align	2, 0
	.type	 sub_80A79B4,function
	.thumb_func
sub_80A79B4:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r0, .L1292
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L1290	@cond_branch
	add	r0, r4, #0
	bl	sub_80A79EC
.L1290:
	ldr	r0, .L1292+0x4
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	cmp	r0, #0
	beq	.L1291	@cond_branch
	add	r0, r4, #0
	bl	sub_80A7A94
.L1291:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1293:
	.align	2, 0
.L1292:
	.word	gUnknown_0203855B
	.word	gUnknown_0203855C
.Lfe203:
	.size	 sub_80A79B4,.Lfe203-sub_80A79B4
	.align	2, 0
	.type	 sub_80A79EC,function
	.thumb_func
sub_80A79EC:
	push	{r4, r5, r6, lr}
	add	r2, r0, #0
	mov	r0, #0x34
	ldrsh	r4, [r2, r0]
	cmp	r4, #0
	beq	.L1296	@cond_branch
	cmp	r4, #0x1
	beq	.L1299	@cond_branch
	b	.L1295
.L1296:
	ldr	r5, .L1305
	ldrb	r6, [r5]
	mov	r0, #0x0
	ldrsb	r0, [r5, r0]
	cmp	r0, #0x6
	beq	.L1297	@cond_branch
	add	r3, r2, #0
	add	r3, r3, #0x3f
	ldrb	r0, [r3]
	mov	r1, #0x4
	orr	r0, r0, r1
	strb	r0, [r3]
	add	r0, r2, #0
	add	r0, r0, #0x2a
	strb	r6, [r0]
	mov	r1, #0x1
	neg	r1, r1
	add	r0, r1, #0
	strb	r0, [r5]
	b	.L1295
.L1306:
	.align	2, 0
.L1305:
	.word	gUnknown_0203855B
.L1297:
	add	r3, r2, #0
	add	r3, r3, #0x3f
	ldrb	r0, [r3]
	mov	r1, #0x4
	orr	r0, r0, r1
	strb	r0, [r3]
	add	r0, r2, #0
	add	r0, r0, #0x2a
	strb	r4, [r0]
	ldrh	r0, [r2, #0x22]
	sub	r0, r0, #0x4
	strh	r0, [r2, #0x22]
	mov	r0, #0x4
	strh	r0, [r2, #0x2e]
	mov	r0, #0x1
	strh	r0, [r2, #0x34]
	add	r0, r2, #0
	bl	sub_80A7AE4
	b	.L1295
.L1299:
	ldrh	r4, [r2, #0x2e]
	mov	r0, #0x2e
	ldrsh	r3, [r2, r0]
	cmp	r3, #0
	beq	.L1300	@cond_branch
	ldrh	r1, [r2, #0x30]
	mov	r3, #0x30
	ldrsh	r0, [r2, r3]
	cmp	r0, #0
	beq	.L1301	@cond_branch
	ldrh	r0, [r2, #0x22]
	add	r0, r0, #0x1
	strh	r0, [r2, #0x22]
	sub	r0, r4, #0x1
	strh	r0, [r2, #0x2e]
.L1301:
	add	r0, r1, #0x1
	mov	r1, #0x1
	and	r0, r0, r1
	strh	r0, [r2, #0x30]
	b	.L1295
.L1300:
	ldr	r1, .L1307
	mov	r4, #0x1
	neg	r4, r4
	add	r0, r4, #0
	strb	r0, [r1]
	strh	r3, [r2, #0x30]
	strh	r3, [r2, #0x34]
.L1295:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1308:
	.align	2, 0
.L1307:
	.word	gUnknown_0203855B
.Lfe204:
	.size	 sub_80A79EC,.Lfe204-sub_80A79EC
	.align	2, 0
	.type	 sub_80A7A94,function
	.thumb_func
sub_80A7A94:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r1, #0x36
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	beq	.L1311	@cond_branch
	cmp	r0, #0x1
	beq	.L1312	@cond_branch
	b	.L1310
.L1311:
	ldrb	r1, [r4, #0x1]
	mov	r0, #0x4
	neg	r0, r0
	and	r0, r0, r1
	mov	r1, #0x1
	orr	r0, r0, r1
	strb	r0, [r4, #0x1]
	ldr	r0, .L1316
	str	r0, [r4, #0x10]
	add	r0, r4, #0
	bl	InitSpriteAffineAnim
	mov	r0, #0x1
	strh	r0, [r4, #0x36]
	b	.L1310
.L1317:
	.align	2, 0
.L1316:
	.word	sBagSpriteAffineAnimTable
.L1312:
	ldrh	r0, [r4, #0x32]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x32]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0xc
	bne	.L1310	@cond_branch
	add	r0, r4, #0
	bl	sub_80A7AE4
.L1310:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe205:
	.size	 sub_80A7A94,.Lfe205-sub_80A7A94
	.align	2, 0
	.type	 sub_80A7AE4,function
	.thumb_func
sub_80A7AE4:
	push	{lr}
	ldr	r2, .L1319
	mov	r1, #0x0
	strb	r1, [r2]
	ldrb	r2, [r0, #0x1]
	mov	r1, #0x4
	neg	r1, r1
	and	r1, r1, r2
	strb	r1, [r0, #0x1]
	mov	r1, #0x0
	strh	r1, [r0, #0x32]
	strh	r1, [r0, #0x36]
	ldrb	r0, [r0, #0x3]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1b
	bl	FreeOamMatrix
	pop	{r0}
	bx	r0
.L1320:
	.align	2, 0
.L1319:
	.word	gUnknown_0203855C
.Lfe206:
	.size	 sub_80A7AE4,.Lfe206-sub_80A7AE4
	.section .rodata
	.align	2, 0
	.type	 sBagSpriteTemplate,object
	.size	 sBagSpriteTemplate,24
sBagSpriteTemplate:
	.short	0x7530
	.short	0x7530
	.word	sBagSpriteOamData
	.word	sBagSpriteAnimTable
	.word	0x0
	.word	sBagSpriteAffineAnimTable
	.word	sub_80A7998
.text
	.align	2, 0
	.type	 CreateBagSprite,function
	.thumb_func
CreateBagSprite:
	push	{lr}
	ldr	r0, .L1322
	mov	r1, #0x3a
	mov	r2, #0x28
	mov	r3, #0x0
	bl	CreateSprite
	pop	{r0}
	bx	r0
.L1323:
	.align	2, 0
.L1322:
	.word	sBagSpriteTemplate
.Lfe207:
	.size	 CreateBagSprite,.Lfe207-CreateBagSprite
	.section .rodata
	.align	2, 0
	.type	 gOamData_83C1CF8,object
	.size	 gOamData_83C1CF8,8
gOamData_83C1CF8:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x48
	.byte	0x0
	.byte	0x88
	.short	0x0
	.align	2, 0
	.type	 gSpriteAffineAnim_83C1D00,object
gSpriteAffineAnim_83C1D00:
	.short	0x0
	.short	0x0
	.byte	0x8
	.byte	0x20
	.space	2
	.short	0x7fff
	.space	6
	.size	 gSpriteAffineAnim_83C1D00,16
	.align	2, 0
	.type	 gSpriteAffineAnim_83C1D10,object
gSpriteAffineAnim_83C1D10:
	.short	0x0
	.short	0x0
	.byte	0xf8
	.byte	0x20
	.space	2
	.short	0x7fff
	.space	6
	.size	 gSpriteAffineAnim_83C1D10,16
	.align	2, 0
	.type	 gSpriteAffineAnimTable_83C1D20,object
gSpriteAffineAnimTable_83C1D20:
	.word	gSpriteAffineAnim_83C1D00
	.word	gSpriteAffineAnim_83C1D10
	.size	 gSpriteAffineAnimTable_83C1D20,8
	.align	2, 0
	.type	 gSpriteImageTable_83C1D28,object
gSpriteImageTable_83C1D28:
	.word	gSpriteImage_83C172C
	.short	0x80
	.space	2
	.size	 gSpriteImageTable_83C1D28,8
	.align	2, 0
	.type	 sPokeballSpritePalette,object
	.size	 sPokeballSpritePalette,8
sPokeballSpritePalette:
	.word	gPalette_83C170C
	.short	0x8
	.space	2
.text
	.align	2, 0
	.type	 sub_80A7B28,function
	.thumb_func
sub_80A7B28:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r0, #0x0
	strh	r0, [r4, #0x34]
	strh	r0, [r4, #0x2e]
	add	r0, r4, #0
	bl	sub_80A7B6C
	ldr	r0, .L1325
	str	r0, [r4, #0x1c]
	pop	{r4}
	pop	{r0}
	bx	r0
.L1326:
	.align	2, 0
.L1325:
	.word	sub_80A7B6C
.Lfe208:
	.size	 sub_80A7B28,.Lfe208-sub_80A7B28
	.align	2, 0
	.type	 sub_80A7B48,function
	.thumb_func
sub_80A7B48:
	ldrh	r2, [r0, #0x38]
	ldrh	r1, [r0, #0x2e]
	add	r1, r1, #0x1
	mov	r3, #0x1
	and	r1, r1, r3
	sub	r2, r2, r1
	add	r1, r0, #0
	add	r1, r1, #0x28
	strb	r2, [r1]
	ldrh	r2, [r0, #0x3a]
	ldrh	r1, [r0, #0x2e]
	add	r1, r1, #0x1
	and	r1, r1, r3
	sub	r2, r2, r1
	add	r0, r0, #0x29
	strb	r2, [r0]
	bx	lr
.Lfe209:
	.size	 sub_80A7B48,.Lfe209-sub_80A7B48
	.align	2, 0
	.type	 sub_80A7B6C,function
	.thumb_func
sub_80A7B6C:
	push	{r4, r5, lr}
	add	r4, r0, #0
	mov	r0, #0x3c
	ldrsh	r2, [r4, r0]
	cmp	r2, #0
	beq	.L1329	@cond_branch
	mov	r1, #0x34
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	beq	.L1331	@cond_branch
	cmp	r0, #0x1
	beq	.L1334	@cond_branch
	b	.L1329
.L1331:
	ldrb	r0, [r4, #0x1]
	mov	r1, #0x4
	neg	r1, r1
	and	r1, r1, r0
	mov	r0, #0x1
	orr	r1, r1, r0
	strb	r1, [r4, #0x1]
	cmp	r2, #0x1
	bne	.L1332	@cond_branch
	ldr	r0, .L1339
	b	.L1338
.L1340:
	.align	2, 0
.L1339:
	.word	gSpriteAffineAnimTable_83C1D20
.L1332:
	ldr	r0, .L1341
.L1338:
	str	r0, [r4, #0x10]
	add	r0, r4, #0
	bl	InitSpriteAffineAnim
	mov	r0, #0x1
	strh	r0, [r4, #0x34]
	add	r0, r4, #0
	add	r0, r0, #0x28
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	strh	r0, [r4, #0x38]
	add	r0, r4, #0
	add	r0, r0, #0x29
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	strh	r0, [r4, #0x3a]
	add	r0, r4, #0
	bl	sub_80A7B48
	b	.L1329
.L1342:
	.align	2, 0
.L1341:
	.word	gSpriteAffineAnimTable_83C1D20+0x4
.L1334:
	ldrh	r0, [r4, #0x2e]
	add	r0, r0, #0x1
	mov	r5, #0x0
	strh	r0, [r4, #0x2e]
	add	r0, r4, #0
	bl	sub_80A7B48
	mov	r1, #0x2e
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x20
	bne	.L1329	@cond_branch
	strh	r5, [r4, #0x2e]
	strh	r5, [r4, #0x34]
	ldrh	r1, [r4, #0x38]
	add	r0, r4, #0
	add	r0, r0, #0x28
	strb	r1, [r0]
	ldrh	r0, [r4, #0x3a]
	add	r1, r4, #0
	add	r1, r1, #0x29
	strb	r0, [r1]
	ldrb	r0, [r4, #0x3]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1b
	bl	FreeOamMatrix
	ldrb	r1, [r4, #0x1]
	mov	r0, #0x4
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r4, #0x1]
	ldr	r0, .L1343
	str	r0, [r4, #0x1c]
.L1329:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1344:
	.align	2, 0
.L1343:
	.word	SpriteCallbackDummy
.Lfe210:
	.size	 sub_80A7B6C,.Lfe210-sub_80A7B6C
	.section .rodata
	.align	2, 0
	.type	 sPokeballSpriteTemplate,object
	.size	 sPokeballSpriteTemplate,24
sPokeballSpriteTemplate:
	.short	0xffff
	.short	0x8
	.word	gOamData_83C1CF8
	.word	sBagSpriteAnimTable
	.word	gSpriteImageTable_83C1D28
	.word	gSpriteAffineAnimTable_83C1D20
	.word	sub_80A7B28
.text
	.align	2, 0
	.type	 CreateBagPokeballSprite,function
	.thumb_func
CreateBagPokeballSprite:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L1346
	bl	LoadSpritePalette
	ldr	r0, .L1346+0x4
	mov	r1, #0x10
	mov	r2, #0x58
	mov	r3, #0x0
	bl	CreateSprite
	ldr	r1, .L1346+0x8
	strb	r0, [r1]
	ldr	r2, .L1346+0xc
	ldrb	r1, [r1]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	strh	r4, [r0, #0x3c]
	pop	{r4}
	pop	{r0}
	bx	r0
.L1347:
	.align	2, 0
.L1346:
	.word	sPokeballSpritePalette
	.word	sPokeballSpriteTemplate
	.word	sPokeballSpriteId
	.word	gSprites
.Lfe211:
	.size	 CreateBagPokeballSprite,.Lfe211-CreateBagPokeballSprite
	.align	2, 0
	.type	 sub_80A7C64,function
	.thumb_func
sub_80A7C64:
	push	{r4, r5, lr}
	mov	r0, #0x8
	bl	FreeSpritePaletteByTag
	ldr	r5, .L1349
	ldr	r4, .L1349+0x4
	ldrb	r1, [r4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldrb	r0, [r0, #0x3]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1b
	bl	FreeOamMatrix
	ldrb	r1, [r4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	bl	DestroySprite
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1350:
	.align	2, 0
.L1349:
	.word	gSprites
	.word	sPokeballSpriteId
.Lfe212:
	.size	 sub_80A7C64,.Lfe212-sub_80A7C64
	.section .rodata
	.align	2, 0
	.type	 sBerrySpriteOamData,object
	.size	 sBerrySpriteOamData,8
sBerrySpriteOamData:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xc0
	.byte	0x0
	.byte	0x74
	.short	0x0
	.align	2, 0
	.type	 gOamData_83C1D58,object
	.size	 gOamData_83C1D58,8
gOamData_83C1D58:
	.byte	0x0
	.byte	0x3
	.byte	0x0
	.byte	0xc0
	.byte	0x0
	.byte	0x70
	.short	0x0
	.align	2, 0
	.type	 sBerrySpriteAnimSeq,object
sBerrySpriteAnimSeq:
	.short	0x0
	.byte	0x0
	.space	1
	.short	0xffffffff
	.space	2
	.size	 sBerrySpriteAnimSeq,8
	.align	2, 0
	.type	 sBerrySpriteAnimTable,object
sBerrySpriteAnimTable:
	.word	sBerrySpriteAnimSeq
	.size	 sBerrySpriteAnimTable,4
	.align	2, 0
	.type	 sBerrySpriteImageTable,object
sBerrySpriteImageTable:
	.word	gSharedMem
	.short	0x800
	.space	2
	.size	 sBerrySpriteImageTable,8
	.align	2, 0
	.type	 sBerrySpriteTemplate,object
	.size	 sBerrySpriteTemplate,24
sBerrySpriteTemplate:
	.short	0xffff
	.short	0x7544
	.word	sBerrySpriteOamData
	.word	sBerrySpriteAnimTable
	.word	sBerrySpriteImageTable
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCB_BerrySprite
	.align	2, 0
	.type	 gSpriteAffineAnim_83C1D8C,object
gSpriteAffineAnim_83C1D8C:
	.short	0xffffffff
	.short	0xffffffff
	.byte	0xfd
	.byte	0x60
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x0
	.byte	0x10
	.space	2
	.short	0xfffffffe
	.short	0xfffffffe
	.byte	0xff
	.byte	0x40
	.space	2
	.short	0xfffffff8
	.short	0x0
	.byte	0x0
	.byte	0x10
	.space	2
	.short	0x0
	.short	0xfffffff8
	.byte	0x0
	.byte	0x10
	.space	2
	.short	0x100
	.short	0x100
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x7ffe
	.short	0x0
	.space	4
	.size	 gSpriteAffineAnim_83C1D8C,56
	.align	2, 0
	.type	 gSpriteAffineAnim_83C1DC4,object
gSpriteAffineAnim_83C1DC4:
	.short	0xffffffff
	.short	0xffffffff
	.byte	0x3
	.byte	0x60
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x0
	.byte	0x10
	.space	2
	.short	0xfffffffe
	.short	0xfffffffe
	.byte	0x1
	.byte	0x40
	.space	2
	.short	0xfffffff8
	.short	0x0
	.byte	0x0
	.byte	0x10
	.space	2
	.short	0x0
	.short	0xfffffff8
	.byte	0x0
	.byte	0x10
	.space	2
	.short	0x100
	.short	0x100
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x7ffe
	.short	0x0
	.space	4
	.size	 gSpriteAffineAnim_83C1DC4,56
	.align	2, 0
	.type	 gSpriteAffineAnimTable_83C1DFC,object
gSpriteAffineAnimTable_83C1DFC:
	.word	gSpriteAffineAnim_83C1D8C
	.word	gSpriteAffineAnim_83C1DC4
	.size	 gSpriteAffineAnimTable_83C1DFC,8
	.align	2, 0
	.type	 gSpriteTemplate_83C1E04,object
	.size	 gSpriteTemplate_83C1E04,24
gSpriteTemplate_83C1E04:
	.short	0xffff
	.short	0x7544
	.word	gOamData_83C1D58
	.word	sBerrySpriteAnimTable
	.word	sBerrySpriteImageTable
	.word	gSpriteAffineAnimTable_83C1DFC
	.word	SpriteCallbackDummy
	.align	2, 0
	.type	 sBerryGraphicsTable,object
sBerryGraphicsTable:
	.word	gBerryPic_Cheri
	.word	gBerryPalette_Cheri
	.word	gBerryPic_Chesto
	.word	gBerryPalette_Chesto
	.word	gBerryPic_Pecha
	.word	gBerryPalette_Pecha
	.word	gBerryPic_Rawst
	.word	gBerryPalette_Rawst
	.word	gBerryPic_Aspear
	.word	gBerryPalette_Aspear
	.word	gBerryPic_Leppa
	.word	gBerryPalette_Leppa
	.word	gBerryPic_Oran
	.word	gBerryPalette_Oran
	.word	gBerryPic_Persim
	.word	gBerryPalette_Persim
	.word	gBerryPic_Lum
	.word	gBerryPalette_Lum
	.word	gBerryPic_Sitrus
	.word	gBerryPalette_Sitrus
	.word	gBerryPic_Figy
	.word	gBerryPalette_Figy
	.word	gBerryPic_Wiki
	.word	gBerryPalette_Wiki
	.word	gBerryPic_Mago
	.word	gBerryPalette_Mago
	.word	gBerryPic_Aguav
	.word	gBerryPalette_Aguav
	.word	gBerryPic_Iapapa
	.word	gBerryPalette_Iapapa
	.word	gBerryPic_Razz
	.word	gBerryPalette_Razz
	.word	gBerryPic_Bluk
	.word	gBerryPalette_Bluk
	.word	gBerryPic_Nanab
	.word	gBerryPalette_Nanab
	.word	gBerryPic_Wepear
	.word	gBerryPalette_Wepear
	.word	gBerryPic_Pinap
	.word	gBerryPalette_Pinap
	.word	gBerryPic_Pomeg
	.word	gBerryPalette_Pomeg
	.word	gBerryPic_Kelpsy
	.word	gBerryPalette_Kelpsy
	.word	gBerryPic_Qualot
	.word	gBerryPalette_Qualot
	.word	gBerryPic_Hondew
	.word	gBerryPalette_Hondew
	.word	gBerryPic_Grepa
	.word	gBerryPalette_Grepa
	.word	gBerryPic_Tamato
	.word	gBerryPalette_Tamato
	.word	gBerryPic_Cornn
	.word	gBerryPalette_Cornn
	.word	gBerryPic_Magost
	.word	gBerryPalette_Magost
	.word	gBerryPic_Rabuta
	.word	gBerryPalette_Rabuta
	.word	gBerryPic_Nomel
	.word	gBerryPalette_Nomel
	.word	gBerryPic_Spelon
	.word	gBerryPalette_Spelon
	.word	gBerryPic_Pamtre
	.word	gBerryPalette_Pamtre
	.word	gBerryPic_Watmel
	.word	gBerryPalette_Watmel
	.word	gBerryPic_Durin
	.word	gBerryPalette_Durin
	.word	gBerryPic_Belue
	.word	gBerryPalette_Belue
	.word	gBerryPic_Liechi
	.word	gBerryPalette_Liechi
	.word	gBerryPic_Ganlon
	.word	gBerryPalette_Ganlon
	.word	gBerryPic_Salac
	.word	gBerryPalette_Salac
	.word	gBerryPic_Petaya
	.word	gBerryPalette_Petaya
	.word	gBerryPic_Apicot
	.word	gBerryPalette_Apicot
	.word	gBerryPic_Lansat
	.word	gBerryPalette_Lansat
	.word	gBerryPic_Starf
	.word	gBerryPalette_Starf
	.word	gBerryPic_Enigma
	.word	gBerryPalette_Enigma
	.size	 sBerryGraphicsTable,344
.text
	.align	2, 0
	.type	 DrawBerryPic,function
	.thumb_func
DrawBerryPic:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	r6, r0, #0
	add	r4, r1, #0
	mov	r2, #0x80
	lsl	r2, r2, #0x4
	add	r0, r4, #0
	mov	r1, #0x0
	bl	memset
	mov	r0, #0x80
	lsl	r0, r0, #0x1
	add	r4, r4, r0
	mov	r7, #0x0
.L1355:
	add	r4, r4, #0x20
	mov	r5, #0x0
	add	r1, r7, #0x1
	mov	r8, r1
.L1359:
	add	r0, r4, #0
	add	r1, r6, #0
	mov	r2, #0x20
	bl	memcpy
	add	r4, r4, #0x20
	add	r6, r6, #0x20
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x5
	bls	.L1359	@cond_branch
	cmp	r7, #0x5
	beq	.L1354	@cond_branch
	add	r4, r4, #0x20
.L1354:
	mov	r1, r8
	lsl	r0, r1, #0x18
	lsr	r7, r0, #0x18
	cmp	r7, #0x5
	bls	.L1355	@cond_branch
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe213:
	.size	 DrawBerryPic,.Lfe213-DrawBerryPic
	.align	2, 0
	.type	 LoadBerryPic,function
	.thumb_func
LoadBerryPic:
	push	{r4, r5, lr}
	add	sp, sp, #0xfffffff8
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x2a
	bne	.L1364	@cond_branch
	bl	IsEnigmaBerryValid
	cmp	r0, #0x1
	bne	.L1364	@cond_branch
	ldr	r4, .L1366
	ldr	r1, .L1366+0x4
	add	r0, r4, #0
	bl	DrawBerryPic
	mov	r0, #0x90
	lsl	r0, r0, #0x3
	add	r4, r4, r0
	str	r4, [sp]
	ldr	r1, .L1366+0x8
	ldr	r0, [sp, #0x4]
	and	r0, r0, r1
	ldr	r1, .L1366+0xc
	orr	r0, r0, r1
	str	r0, [sp, #0x4]
	mov	r0, sp
	bl	LoadSpritePalette
	b	.L1365
.L1367:
	.align	2, 0
.L1366:
	.word	gSaveBlock1+0x317c
	.word	gSharedMem
	.word	0xffff0000
	.word	0x7544
.L1364:
	ldr	r5, .L1368
	lsl	r4, r4, #0x3
	add	r0, r5, #0x4
	add	r0, r4, r0
	ldr	r0, [r0]
	str	r0, [sp]
	mov	r1, sp
	ldr	r0, .L1368+0x4
	strh	r0, [r1, #0x4]
	mov	r0, sp
	bl	LoadCompressedObjectPalette
	add	r4, r4, r5
	ldr	r0, [r4]
	ldr	r4, .L1368+0x8
	add	r1, r4, #0
	bl	LZDecompressWram
	ldr	r0, .L1368+0xc
	add	r1, r4, r0
	add	r0, r4, #0
	bl	DrawBerryPic
.L1365:
	add	sp, sp, #0x8
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1369:
	.align	2, 0
.L1368:
	.word	sBerryGraphicsTable
	.word	0x7544
	.word	gSharedMem+0x1000
	.word	0xfffff000
.Lfe214:
	.size	 LoadBerryPic,.Lfe214-LoadBerryPic
	.align	2, 0
	.globl	CreateBerrySprite
	.type	 CreateBerrySprite,function
	.thumb_func
CreateBerrySprite:
	push	{r4, r5, lr}
	add	r4, r1, #0
	add	r5, r2, #0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	bl	LoadBerryPic
	ldr	r0, .L1371
	lsl	r4, r4, #0x10
	asr	r4, r4, #0x10
	lsl	r5, r5, #0x10
	asr	r5, r5, #0x10
	add	r1, r4, #0
	add	r2, r5, #0
	mov	r3, #0x0
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L1372:
	.align	2, 0
.L1371:
	.word	sBerrySpriteTemplate
.Lfe215:
	.size	 CreateBerrySprite,.Lfe215-CreateBerrySprite
	.align	2, 0
	.type	 SpriteCB_BerrySprite,function
	.thumb_func
SpriteCB_BerrySprite:
	ldr	r1, .L1374
	ldrh	r1, [r1]
	neg	r1, r1
	strh	r1, [r0, #0x26]
	bx	lr
.L1375:
	.align	2, 0
.L1374:
	.word	gUnknown_030041B4
.Lfe216:
	.size	 SpriteCB_BerrySprite,.Lfe216-SpriteCB_BerrySprite
	.align	2, 0
	.globl	sub_80A7DD4
	.type	 sub_80A7DD4,function
	.thumb_func
sub_80A7DD4:
	push	{lr}
	ldr	r0, .L1377
	bl	FreeSpritePaletteByTag
	mov	r0, #0x8
	bl	FreeSpritePaletteByTag
	pop	{r0}
	bx	r0
.L1378:
	.align	2, 0
.L1377:
	.word	0x7544
.Lfe217:
	.size	 sub_80A7DD4,.Lfe217-sub_80A7DD4
	.align	2, 0
	.globl	sub_80A7DEC
	.type	 sub_80A7DEC,function
	.thumb_func
sub_80A7DEC:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	r4, r0, #0
	add	r5, r1, #0
	add	r6, r2, #0
	mov	r8, r3
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	lsl	r6, r6, #0x18
	lsr	r6, r6, #0x18
	mov	r0, r8
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	ldr	r0, .L1381
	bl	FreeSpritePaletteByTag
	add	r0, r4, #0
	bl	LoadBerryPic
	ldr	r0, .L1381+0x4
	add	r1, r5, #0
	add	r2, r6, #0
	mov	r3, #0x0
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	add	r4, r1, #0
	mov	r0, r8
	cmp	r0, #0x1
	bne	.L1380	@cond_branch
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L1381+0x8
	add	r0, r0, r1
	mov	r1, #0x1
	bl	StartSpriteAffineAnim
.L1380:
	add	r0, r4, #0
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L1382:
	.align	2, 0
.L1381:
	.word	0x7544
	.word	gSpriteTemplate_83C1E04
	.word	gSprites
.Lfe218:
	.size	 sub_80A7DEC,.Lfe218-sub_80A7DEC
	.globl	gUnknown_083C1F74
	.section .rodata
	.align	2, 0
	.type	 gUnknown_083C1F74,object
	.size	 gUnknown_083C1F74,8
gUnknown_083C1F74:
	.word	gBerryCheckCircle_Gfx
	.short	0x800
	.short	0x2710
	.globl	gUnknown_083C1F7C
	.align	2, 0
	.type	 gUnknown_083C1F7C,object
	.size	 gUnknown_083C1F7C,8
gUnknown_083C1F7C:
	.word	gBerryCheck_Pal
	.short	0x2710
	.space	2
	.align	2, 0
	.type	 gOamData_83C1F84,object
	.size	 gOamData_83C1F84,8
gOamData_83C1F84:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x80
	.byte	0x0
	.byte	0x4
	.short	0x0
	.align	2, 0
	.type	 gSpriteAnim_83C1F8C,object
gSpriteAnim_83C1F8C:
	.short	0x0
	.byte	0x0
	.space	1
	.short	0xffffffff
	.space	2
	.size	 gSpriteAnim_83C1F8C,8
	.align	2, 0
	.type	 gSpriteAnimTable_83C1F94,object
gSpriteAnimTable_83C1F94:
	.word	gSpriteAnim_83C1F8C
	.size	 gSpriteAnimTable_83C1F94,4
	.align	2, 0
	.type	 gSpriteTemplate_83C1F98,object
	.size	 gSpriteTemplate_83C1F98,24
gSpriteTemplate_83C1F98:
	.short	0x2710
	.short	0x2710
	.word	gOamData_83C1F84
	.word	gSpriteAnimTable_83C1F94
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCB_BerrySprite
.text
	.align	2, 0
	.globl	sub_80A7E5C
	.type	 sub_80A7E5C,function
	.thumb_func
sub_80A7E5C:
	push	{lr}
	add	r1, r0, #0
	ldr	r0, .L1384
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	mov	r2, #0x63
	mov	r3, #0x0
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L1385:
	.align	2, 0
.L1384:
	.word	gSpriteTemplate_83C1F98
.Lfe219:
	.size	 sub_80A7E5C,.Lfe219-sub_80A7E5C

	.lcomm	sSelect,1

	.lcomm	sPopupMenuSelection,1

	.lcomm	sReturnLocation,1

	.lcomm	sPopupMenuActionList,4
.text
	.align	2, 0
