@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section ewram_data,"aw"
	.align	1, 0
	.type	 gUnknown_020387E0,object
	.size	 gUnknown_020387E0,2
gUnknown_020387E0:
	.short	0x0
	.align	1, 0
	.type	 gUnknown_020387E2,object
	.size	 gUnknown_020387E2,2
gUnknown_020387E2:
	.short	0x0
	.type	 gUnknown_020387E4,object
	.size	 gUnknown_020387E4,1
gUnknown_020387E4:
	.byte	0x0
	.align	2, 0
	.type	 gUnknown_020387E8,object
	.size	 gUnknown_020387E8,1
gUnknown_020387E8:
	.byte	0x0
	.globl	gPokeOutbreakSpeciesList
	.section .rodata
	.align	2, 0
	.type	 gPokeOutbreakSpeciesList,object
	.size	 gPokeOutbreakSpeciesList,60
gPokeOutbreakSpeciesList:
	.short	0x137
	.short	0x91
	.short	0x62
	.short	0x0
	.short	0x0
	.byte	0x3
	.byte	0x11
	.short	0x137
	.short	0x91
	.short	0x62
	.short	0x0
	.short	0x0
	.byte	0xf
	.byte	0x1d
	.short	0x137
	.short	0x91
	.short	0x62
	.short	0x0
	.short	0x0
	.byte	0xf
	.byte	0x20
	.short	0x137
	.short	0x91
	.short	0x62
	.short	0x0
	.short	0x0
	.byte	0x1c
	.byte	0x23
	.short	0x13b
	.short	0x2d
	.short	0x21
	.short	0x0
	.short	0x0
	.byte	0xf
	.byte	0x1f
	.globl	gTVNewsTextGroup1
	.align	2, 0
	.type	 gTVNewsTextGroup1,object
gTVNewsTextGroup1:
	.word	0x0
	.word	gTVNewsText_EnergyGuru1
	.word	gTVNewsText_GameCorner1
	.word	gTVNewsText_LilycoveDepartment1
	.size	 gTVNewsTextGroup1,16
	.globl	gTVNewsTextGroup2
	.align	2, 0
	.type	 gTVNewsTextGroup2,object
gTVNewsTextGroup2:
	.word	0x0
	.word	gTVNewsText_EnergyGuru2
	.word	gTVNewsText_GameCorner2
	.word	gTVNewsText_LilycoveDepartment2
	.size	 gTVNewsTextGroup2,16
	.globl	gTVNewsTextGroup3
	.align	2, 0
	.type	 gTVNewsTextGroup3,object
gTVNewsTextGroup3:
	.word	0x0
	.word	gTVNewsText_EnergyGuru3
	.word	gTVNewsText_GameCorner3
	.word	gTVNewsText_LilycoveDepartment3
	.size	 gTVNewsTextGroup3,16
	.globl	gUnknown_083D1464
	.align	2, 0
	.type	 gUnknown_083D1464,object
gUnknown_083D1464:
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar3
	.size	 gUnknown_083D1464,12
	.globl	gTVFanClubTextGroup
	.align	2, 0
	.type	 gTVFanClubTextGroup,object
gTVFanClubTextGroup:
	.word	gTVFanClubText1
	.word	gTVFanClubText2
	.word	gTVFanClubText3
	.word	gTVFanClubText4
	.word	gTVFanClubText5
	.word	gTVFanClubText6
	.word	gTVFanClubText7
	.word	gTVFanClubText8
	.size	 gTVFanClubTextGroup,32
	.globl	gTVRecentHappeningsTextGroup
	.align	2, 0
	.type	 gTVRecentHappeningsTextGroup,object
gTVRecentHappeningsTextGroup:
	.word	gTVRecentHappeningsText1
	.word	gTVRecentHappeningsText2
	.word	gTVRecentHappeningsText3
	.word	gTVRecentHappeningsText4
	.word	gTVRecentHappeningsText5
	.word	gTVRecentHappeningsText6
	.size	 gTVRecentHappeningsTextGroup,24
	.globl	gTVFanClubOpinionsTextGroup
	.align	2, 0
	.type	 gTVFanClubOpinionsTextGroup,object
gTVFanClubOpinionsTextGroup:
	.word	gTVFanClubOpinionsText1
	.word	gTVFanClubOpinionsText2
	.word	gTVFanClubOpinionsText3
	.word	gTVFanClubOpinionsText4
	.word	gTVFanClubOpinionsText5
	.size	 gTVFanClubOpinionsTextGroup,20
	.globl	gTVPokemonOutbreakTextGroup
	.align	2, 0
	.type	 gTVPokemonOutbreakTextGroup,object
gTVPokemonOutbreakTextGroup:
	.word	gTVPokemonOutbreakText
	.size	 gTVPokemonOutbreakTextGroup,4
	.globl	gTVPokemonTodayTextGroup
	.align	2, 0
	.type	 gTVPokemonTodayTextGroup,object
gTVPokemonTodayTextGroup:
	.word	gTVPokemonTodayText1
	.word	gTVPokemonTodayText2
	.word	gTVPokemonTodayText3
	.word	gTVPokemonTodayText4
	.word	gTVPokemonTodayText5
	.word	gTVPokemonTodayText6
	.word	gTVPokemonTodayText7
	.word	gTVPokemonTodayText8
	.word	gTVPokemonTodayText9
	.word	gTVPokemonTodayText10
	.word	gTVPokemonTodayText11
	.word	gTVPokemonTodayText12
	.size	 gTVPokemonTodayTextGroup,48
	.globl	gTVSmartShopperTextGroup
	.align	2, 0
	.type	 gTVSmartShopperTextGroup,object
gTVSmartShopperTextGroup:
	.word	gTVSmartShopperText1
	.word	gTVSmartShopperText2
	.word	gTVSmartShopperText3
	.word	gTVSmartShopperText4
	.word	gTVSmartShopperText5
	.word	gTVSmartShopperText6
	.word	gTVSmartShopperText7
	.word	gTVSmartShopperText8
	.word	gTVSmartShopperText9
	.word	gTVSmartShopperText10
	.word	gTVSmartShopperText11
	.word	gTVSmartShopperText12
	.word	gTVSmartShopperText13
	.size	 gTVSmartShopperTextGroup,52
	.globl	gTVBravoTrainerTextGroup
	.align	2, 0
	.type	 gTVBravoTrainerTextGroup,object
gTVBravoTrainerTextGroup:
	.word	gTVBravoTrainerText1
	.word	gTVBravoTrainerText2
	.word	gTVBravoTrainerText3
	.word	gTVBravoTrainerText4
	.word	gTVBravoTrainerText5
	.word	gTVBravoTrainerText6
	.word	gTVBravoTrainerText7
	.word	gTVBravoTrainerText8
	.word	gTVBravoTrainerText9
	.size	 gTVBravoTrainerTextGroup,36
	.globl	gTVBravoTrainerBattleTowerTextGroup
	.align	2, 0
	.type	 gTVBravoTrainerBattleTowerTextGroup,object
gTVBravoTrainerBattleTowerTextGroup:
	.word	gTVBravoTrainerBattleTowerText1
	.word	gTVBravoTrainerBattleTowerText2
	.word	gTVBravoTrainerBattleTowerText3
	.word	gTVBravoTrainerBattleTowerText4
	.word	gTVBravoTrainerBattleTowerText5
	.word	gTVBravoTrainerBattleTowerText6
	.word	gTVBravoTrainerBattleTowerText7
	.word	gTVBravoTrainerBattleTowerText8
	.word	gTVBravoTrainerBattleTowerText9
	.word	gTVBravoTrainerBattleTowerText10
	.word	gTVBravoTrainerBattleTowerText11
	.word	gTVBravoTrainerBattleTowerText12
	.word	gTVBravoTrainerBattleTowerText13
	.word	gTVBravoTrainerBattleTowerText14
	.word	gTVBravoTrainerBattleTowerText15
	.size	 gTVBravoTrainerBattleTowerTextGroup,60
	.globl	gTVNameRaterTextGroup
	.align	2, 0
	.type	 gTVNameRaterTextGroup,object
gTVNameRaterTextGroup:
	.word	gTVNameRaterText1
	.word	gTVNameRaterText2
	.word	gTVNameRaterText3
	.word	gTVNameRaterText4
	.word	gTVNameRaterText5
	.word	gTVNameRaterText6
	.word	gTVNameRaterText7
	.word	gTVNameRaterText8
	.word	gTVNameRaterText9
	.word	gTVNameRaterText10
	.word	gTVNameRaterText11
	.word	gTVNameRaterText12
	.word	gTVNameRaterText13
	.word	gTVNameRaterText14
	.word	gTVNameRaterText15
	.word	gTVNameRaterText16
	.word	gTVNameRaterText17
	.word	gTVNameRaterText18
	.word	gTVNameRaterText19
	.size	 gTVNameRaterTextGroup,76
	.globl	gTVPokemonTodayFailedCaptureTextGroup
	.align	2, 0
	.type	 gTVPokemonTodayFailedCaptureTextGroup,object
gTVPokemonTodayFailedCaptureTextGroup:
	.word	gTVPokemonTodayFailedCaptureText1
	.word	gTVPokemonTodayFailedCaptureText2
	.word	gTVPokemonTodayFailedCaptureText3
	.word	gTVPokemonTodayFailedCaptureText4
	.word	gTVPokemonTodayFailedCaptureText5
	.word	gTVPokemonTodayFailedCaptureText6
	.word	gTVPokemonTodayFailedCaptureText7
	.size	 gTVPokemonTodayFailedCaptureTextGroup,28
	.globl	gTVFishingGuruAdviceTextGroup
	.align	2, 0
	.type	 gTVFishingGuruAdviceTextGroup,object
gTVFishingGuruAdviceTextGroup:
	.word	gTVFishingGuruAdviceText1
	.word	gTVFishingGuruAdviceText2
	.size	 gTVFishingGuruAdviceTextGroup,8
	.globl	gTVWorldOfMastersTextGroup
	.align	2, 0
	.type	 gTVWorldOfMastersTextGroup,object
gTVWorldOfMastersTextGroup:
	.word	gTVWorldOfMastersText1
	.word	gTVWorldOfMastersText2
	.word	gTVWorldOfMastersText3
	.size	 gTVWorldOfMastersTextGroup,12
	.globl	gTVGabbyAndTyTextGroup
	.align	2, 0
	.type	 gTVGabbyAndTyTextGroup,object
gTVGabbyAndTyTextGroup:
	.word	gTVGabbyAndTyText1
	.word	gTVGabbyAndTyText2
	.word	gTVGabbyAndTyText3
	.word	gTVGabbyAndTyText4
	.word	gTVGabbyAndTyText5
	.word	gTVGabbyAndTyText6
	.word	gTVGabbyAndTyText7
	.word	gTVGabbyAndTyText8
	.word	gTVGabbyAndTyText9
	.size	 gTVGabbyAndTyTextGroup,36
.text
	.align	2, 0
	.globl	ClearTVShowData
	.type	 ClearTVShowData,function
	.thumb_func
ClearTVShowData:
	push	{r4, r5, r6, r7, lr}
	mov	r3, #0x0
	ldr	r6, .L13
	mov	r4, #0x0
	ldr	r0, .L13+0x4
	add	r5, r6, r0
.L6:
	lsl	r2, r3, #0x3
	add	r2, r2, r3
	lsl	r2, r2, #0x2
	add	r1, r2, r6
	ldr	r7, .L13+0x8
	add	r0, r1, r7
	strb	r4, [r0]
	ldr	r0, .L13+0xc
	add	r1, r1, r0
	strb	r4, [r1]
	mov	r1, #0x0
	add	r3, r3, #0x1
.L10:
	add	r0, r1, r2
	add	r0, r0, r5
	strb	r4, [r0]
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x21
	bls	.L10	@cond_branch
	lsl	r0, r3, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0x18
	bls	.L6	@cond_branch
	bl	sub_80BEBF4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L14:
	.align	2, 0
.L13:
	.word	gSaveBlock1
	.word	0x273a
	.word	0x2738
	.word	0x2739
.Lfe1:
	.size	 ClearTVShowData,.Lfe1-ClearTVShowData
	.align	2, 0
	.globl	special_0x44
	.type	 special_0x44,function
	.thumb_func
special_0x44:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	.code	16
	mov	r4, #0x5
	ldr	r1, .L35
	ldr	r2, .L35+0x4
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L17	@cond_branch
	add	r2, r1, #0
	ldr	r1, .L35+0x8
.L18:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x17
	bhi	.L17	@cond_branch
	lsl	r0, r4, #0x3
	add	r0, r0, r4
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L18	@cond_branch
.L17:
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r1, r4, #0
	bl	__modsi3
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r8, r4
	ldr	r7, .L35
	ldr	r0, .L35+0x8
	add	r0, r0, r7
	mov	r9, r0
.L22:
	lsl	r0, r4, #0x3
	add	r0, r0, r4
	lsl	r6, r0, #0x2
	add	r5, r6, r7
	ldr	r1, .L35+0x8
	add	r0, r5, r1
	ldrb	r0, [r0]
	bl	sub_80BFB54
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x4
	beq	.L25	@cond_branch
	ldr	r2, .L35+0xc
	add	r0, r5, r2
	ldrb	r0, [r0]
	b	.L34
.L36:
	.align	2, 0
.L35:
	.word	gSaveBlock1
	.word	0x27ec
	.word	0x2738
	.word	0x2739
.L25:
	mov	r0, r9
	add	r1, r6, r0
	ldrh	r0, [r1, #0x16]
	cmp	r0, #0
	bne	.L27	@cond_branch
	ldrb	r0, [r1, #0x1]
.L34:
	cmp	r0, #0x1
	bne	.L27	@cond_branch
	add	r0, r4, #0
	b	.L33
.L27:
	cmp	r4, #0
	bne	.L29	@cond_branch
	mov	r4, #0x17
	b	.L24
.L29:
	sub	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
.L24:
	cmp	r4, r8
	bne	.L22	@cond_branch
	mov	r0, #0xff
.L33:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe2:
	.size	 special_0x44,.Lfe2-special_0x44
	.align	2, 0
	.globl	sub_80BD8B8
	.type	 sub_80BD8B8,function
	.thumb_func
sub_80BD8B8:
	push	{lr}
	bl	special_0x44
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0xff
	bne	.L38	@cond_branch
	mov	r0, #0xff
	b	.L40
.L38:
	ldr	r2, .L41
	ldr	r3, .L41+0x4
	add	r0, r2, r3
	ldrh	r0, [r0]
	cmp	r0, #0
	beq	.L39	@cond_branch
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldr	r2, .L41+0x8
	add	r0, r0, r2
	ldrb	r0, [r0]
	cmp	r0, #0x29
	bne	.L39	@cond_branch
	bl	sub_80BDA30
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	b	.L40
.L42:
	.align	2, 0
.L41:
	.word	gSaveBlock1
	.word	0x2afc
	.word	0x2738
.L39:
	add	r0, r1, #0
.L40:
	pop	{r1}
	bx	r1
.Lfe3:
	.size	 sub_80BD8B8,.Lfe3-sub_80BD8B8
	.align	2, 0
	.globl	UpdateTVScreensOnMap
	.type	 UpdateTVScreensOnMap,function
	.thumb_func
UpdateTVScreensOnMap:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	ldr	r0, .L54
	bl	FlagSet
	bl	CheckForBigMovieOrEmergencyNewsOnTV
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L53	@cond_branch
	cmp	r0, #0x2
	beq	.L44	@cond_branch
	ldr	r0, .L54+0x4
	ldrh	r0, [r0, #0x4]
	cmp	r0, #0xd
	bne	.L48	@cond_branch
.L53:
	add	r0, r4, #0
	add	r1, r5, #0
	mov	r2, #0x3
	bl	SetTVMetatilesOnMap
	b	.L44
.L55:
	.align	2, 0
.L54:
	.word	0x831
	.word	gSaveBlock1
.L48:
	ldr	r0, .L56
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L44	@cond_branch
	bl	sub_80BD8B8
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xff
	bne	.L51	@cond_branch
	bl	sub_80BECA0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xff
	bne	.L51	@cond_branch
	bl	IsTVShowInSearchOfTrainersAiring
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L44	@cond_branch
.L51:
	ldr	r0, .L56+0x4
	bl	FlagClear
	add	r0, r4, #0
	add	r1, r5, #0
	mov	r2, #0x3
	bl	SetTVMetatilesOnMap
.L44:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L57:
	.align	2, 0
.L56:
	.word	0x832
	.word	0x831
.Lfe4:
	.size	 UpdateTVScreensOnMap,.Lfe4-UpdateTVScreensOnMap
	.align	2, 0
	.globl	SetTVMetatilesOnMap
	.type	 SetTVMetatilesOnMap,function
	.thumb_func
SetTVMetatilesOnMap:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	mov	r9, r0
	mov	sl, r1
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	mov	r5, #0x0
	cmp	r5, sl
	bge	.L60	@cond_branch
	mov	r1, #0xc0
	lsl	r1, r1, #0x4
	add	r0, r1, #0
	mov	r8, r2
	mov	r1, r8
	orr	r1, r1, r0
	mov	r8, r1
.L62:
	mov	r4, #0x0
	add	r7, r5, #0x1
	cmp	r4, r9
	bge	.L61	@cond_branch
	mov	r0, r8
	lsl	r6, r0, #0x10
.L66:
	add	r0, r4, #0
	add	r1, r5, #0
	bl	MapGridGetMetatileBehaviorAt
	cmp	r0, #0x86
	bne	.L65	@cond_branch
	add	r0, r4, #0
	add	r1, r5, #0
	lsr	r2, r6, #0x10
	bl	MapGridSetMetatileIdAt
.L65:
	add	r4, r4, #0x1
	cmp	r4, r9
	blt	.L66	@cond_branch
.L61:
	add	r5, r7, #0
	cmp	r5, sl
	blt	.L62	@cond_branch
.L60:
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe5:
	.size	 SetTVMetatilesOnMap,.Lfe5-SetTVMetatilesOnMap
	.align	2, 0
	.globl	TurnOffTVScreen
	.type	 TurnOffTVScreen,function
	.thumb_func
TurnOffTVScreen:
	push	{lr}
	ldr	r1, .L71
	ldr	r0, [r1]
	ldr	r1, [r1, #0x4]
	mov	r2, #0x2
	bl	SetTVMetatilesOnMap
	bl	DrawWholeMapView
	pop	{r0}
	bx	r0
.L72:
	.align	2, 0
.L71:
	.word	gUnknown_03004870
.Lfe6:
	.size	 TurnOffTVScreen,.Lfe6-TurnOffTVScreen
	.align	2, 0
	.globl	sub_80BDA0C
	.type	 sub_80BDA0C,function
	.thumb_func
sub_80BDA0C:
	ldr	r2, .L74
	ldr	r0, .L74+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldr	r1, .L74+0x8
	add	r0, r0, r1
	ldrb	r0, [r0]
	bx	lr
.L75:
	.align	2, 0
.L74:
	.word	gSaveBlock1
	.word	gSpecialVar_0x8004
	.word	0x2738
.Lfe7:
	.size	 sub_80BDA0C,.Lfe7-sub_80BDA0C
	.align	2, 0
	.globl	sub_80BDA30
	.type	 sub_80BDA30,function
	.thumb_func
sub_80BDA30:
	push	{r4, lr}
	mov	r2, #0x0
	ldr	r3, .L84
.L80:
	lsl	r0, r2, #0x3
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r1, r0, r3
	ldr	r4, .L84+0x4
	add	r0, r1, r4
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L79	@cond_branch
	cmp	r0, #0x29
	beq	.L79	@cond_branch
	add	r4, r4, #0x1
	add	r0, r1, r4
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L79	@cond_branch
	add	r0, r2, #0
	b	.L83
.L85:
	.align	2, 0
.L84:
	.word	gSaveBlock1
	.word	0x2738
.L79:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x17
	bls	.L80	@cond_branch
	mov	r0, #0xff
.L83:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe8:
	.size	 sub_80BDA30,.Lfe8-sub_80BDA30
	.align	2, 0
	.globl	special_0x4a
	.type	 special_0x4a,function
	.thumb_func
special_0x4a:
	push	{lr}
	ldr	r2, .L90
	ldrh	r1, [r2]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L90+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x29
	bne	.L87	@cond_branch
	mov	r3, #0xf1
	lsl	r3, r3, #0x2
	add	r0, r1, r3
	ldrh	r0, [r0]
	cmp	r0, #0
	beq	.L87	@cond_branch
	bl	sub_80BDA30
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	b	.L89
.L91:
	.align	2, 0
.L90:
	.word	gSpecialVar_0x8004
	.word	gSaveBlock1+0x2738
.L87:
	ldrb	r0, [r2]
.L89:
	pop	{r1}
	bx	r1
.Lfe9:
	.size	 special_0x4a,.Lfe9-special_0x4a
	.align	2, 0
	.globl	ResetGabbyAndTy
	.type	 ResetGabbyAndTy,function
	.thumb_func
ResetGabbyAndTy:
	push	{r4, lr}
	ldr	r2, .L93
	ldr	r1, .L93+0x4
	add	r0, r2, r1
	mov	r3, #0x0
	mov	r1, #0x0
	strh	r1, [r0]
	ldr	r4, .L93+0x8
	add	r0, r2, r4
	strh	r1, [r0]
	add	r4, r4, #0x2
	add	r0, r2, r4
	strh	r1, [r0]
	ldr	r0, .L93+0xc
	add	r1, r2, r0
	ldr	r0, .L93+0x10
	strh	r0, [r1]
	add	r4, r4, #0x6
	add	r1, r2, r4
	mov	r0, #0x0
	strb	r0, [r1]
	ldr	r0, .L93+0x14
	add	r1, r2, r0
	mov	r0, #0x0
	strb	r0, [r1]
	ldr	r1, .L93+0x18
	add	r0, r2, r1
	strb	r3, [r0]
	sub	r4, r4, #0x1
	add	r2, r2, r4
	strb	r3, [r2]
	pop	{r4}
	pop	{r0}
	bx	r0
.L94:
	.align	2, 0
.L93:
	.word	gSaveBlock1
	.word	0x2b10
	.word	0x2b12
	.word	0x2b16
	.word	0xffff
	.word	0x2b1b
	.word	0x2b18
.Lfe10:
	.size	 ResetGabbyAndTy,.Lfe10-ResetGabbyAndTy
	.align	2, 0
	.globl	GabbyAndTyBeforeInterview
	.type	 GabbyAndTyBeforeInterview,function
	.thumb_func
GabbyAndTyBeforeInterview:
	push	{r4, r5, lr}
	ldr	r2, .L113
	ldr	r3, .L113+0x4
	ldrh	r1, [r3, #0x6]
	ldr	r4, .L113+0x8
	add	r0, r2, r4
	strh	r1, [r0]
	ldrh	r1, [r3, #0x26]
	add	r4, r4, #0x2
	add	r0, r2, r4
	strh	r1, [r0]
	ldrh	r1, [r3, #0x22]
	add	r4, r4, #0x2
	add	r0, r2, r4
	strh	r1, [r0]
	ldr	r0, .L113+0xc
	add	r4, r2, r0
	ldrb	r1, [r4]
	add	r0, r1, #0
	add	r5, r2, #0
	cmp	r0, #0xff
	beq	.L96	@cond_branch
	add	r0, r1, #0x1
	strb	r0, [r4]
.L96:
	ldrb	r0, [r3, #0x5]
	lsl	r0, r0, #0x1f
	ldr	r1, .L113+0x10
	add	r4, r5, r1
	lsr	r0, r0, #0x1f
	ldrb	r1, [r4]
	mov	r2, #0x2
	neg	r2, r2
	and	r2, r2, r1
	orr	r2, r2, r0
	strb	r2, [r4]
	ldrb	r0, [r3]
	cmp	r0, #0
	beq	.L97	@cond_branch
	mov	r0, #0x2
	orr	r2, r2, r0
	b	.L111
.L114:
	.align	2, 0
.L113:
	.word	gSaveBlock1
	.word	gBattleResults
	.word	0x2b10
	.word	0x2b19
	.word	0x2b1a
.L97:
	mov	r0, #0x3
	neg	r0, r0
	and	r2, r2, r0
.L111:
	strb	r2, [r4]
	ldrb	r0, [r3, #0x3]
	cmp	r0, #0
	beq	.L99	@cond_branch
	ldr	r4, .L115
	add	r0, r5, r4
	ldrb	r1, [r0]
	mov	r2, #0x4
	orr	r1, r1, r2
	strb	r1, [r0]
	b	.L100
.L116:
	.align	2, 0
.L115:
	.word	0x2b1a
.L99:
	ldr	r0, .L117
	add	r2, r5, r0
	ldrb	r1, [r2]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2]
.L100:
	ldrb	r1, [r3, #0x5]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L101	@cond_branch
	mov	r1, #0x0
	add	r0, r3, #0
	add	r0, r0, #0x36
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L101	@cond_branch
.L104:
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0xa
	bhi	.L108	@cond_branch
	add	r0, r3, #0
	add	r0, r0, #0x36
	add	r0, r1, r0
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L104	@cond_branch
	ldr	r4, .L117
	add	r0, r5, r4
	b	.L112
.L118:
	.align	2, 0
.L117:
	.word	0x2b1a
.L101:
	ldr	r1, .L119
	add	r0, r5, r1
.L112:
	ldrb	r1, [r0]
	mov	r2, #0x8
	orr	r1, r1, r2
	strb	r1, [r0]
.L108:
	bl	TakeTVShowInSearchOfTrainersOffTheAir
	ldr	r0, .L119+0x4
	ldr	r4, .L119+0x8
	add	r0, r0, r4
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L109	@cond_branch
	mov	r0, #0x1
	bl	FlagSet
.L109:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L120:
	.align	2, 0
.L119:
	.word	0x2b1a
	.word	gSaveBlock1
	.word	0x2b14
.Lfe11:
	.size	 GabbyAndTyBeforeInterview,.Lfe11-GabbyAndTyBeforeInterview
	.align	2, 0
	.globl	sub_80BDC14
	.type	 sub_80BDC14,function
	.thumb_func
sub_80BDC14:
	push	{r4, r5, r6, lr}
	ldr	r4, .L122
	ldr	r0, .L122+0x4
	add	r6, r4, r0
	ldrb	r3, [r6]
	lsl	r1, r3, #0x1f
	add	r0, r0, #0x1
	add	r5, r4, r0
	lsr	r1, r1, #0x1f
	ldrb	r2, [r5]
	mov	r0, #0x2
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	mov	r1, #0x2
	and	r1, r1, r3
	mov	r2, #0x3
	neg	r2, r2
	and	r0, r0, r2
	orr	r0, r0, r1
	mov	r1, #0x4
	and	r1, r1, r3
	sub	r2, r2, #0x2
	and	r0, r0, r2
	orr	r0, r0, r1
	mov	r1, #0x8
	and	r1, r1, r3
	sub	r2, r2, #0x4
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r5]
	mov	r0, #0x10
	orr	r3, r3, r0
	strb	r3, [r6]
	ldr	r0, .L122+0x8
	ldrb	r0, [r0, #0x14]
	ldr	r1, .L122+0xc
	add	r4, r4, r1
	strb	r0, [r4]
	mov	r0, #0x6
	bl	IncrementGameStat
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L123:
	.align	2, 0
.L122:
	.word	gSaveBlock1
	.word	0x2b1a
	.word	gMapHeader
	.word	0x2b18
.Lfe12:
	.size	 sub_80BDC14,.Lfe12-sub_80BDC14
	.align	2, 0
	.globl	TakeTVShowInSearchOfTrainersOffTheAir
	.type	 TakeTVShowInSearchOfTrainersOffTheAir,function
	.thumb_func
TakeTVShowInSearchOfTrainersOffTheAir:
	ldr	r0, .L125
	ldr	r1, .L125+0x4
	add	r0, r0, r1
	ldrb	r2, [r0]
	mov	r1, #0x11
	neg	r1, r1
	and	r1, r1, r2
	strb	r1, [r0]
	bx	lr
.L126:
	.align	2, 0
.L125:
	.word	gSaveBlock1
	.word	0x2b1a
.Lfe13:
	.size	 TakeTVShowInSearchOfTrainersOffTheAir,.Lfe13-TakeTVShowInSearchOfTrainersOffTheAir
	.align	2, 0
	.globl	GabbyAndTyGetBattleNum
	.type	 GabbyAndTyGetBattleNum,function
	.thumb_func
GabbyAndTyGetBattleNum:
	push	{lr}
	ldr	r0, .L131
	ldr	r2, .L131+0x4
	add	r1, r0, r2
	ldrb	r0, [r1]
	cmp	r0, #0x5
	bls	.L130	@cond_branch
	ldrb	r0, [r1]
	mov	r1, #0x3
	bl	__umodsi3
	add	r0, r0, #0x6
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
.L130:
	pop	{r1}
	bx	r1
.L132:
	.align	2, 0
.L131:
	.word	gSaveBlock1
	.word	0x2b19
.Lfe14:
	.size	 GabbyAndTyGetBattleNum,.Lfe14-GabbyAndTyGetBattleNum
	.align	2, 0
	.globl	IsTVShowInSearchOfTrainersAiring
	.type	 IsTVShowInSearchOfTrainersAiring,function
	.thumb_func
IsTVShowInSearchOfTrainersAiring:
	ldr	r0, .L134
	ldr	r1, .L134+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1b
	lsr	r0, r0, #0x1f
	bx	lr
.L135:
	.align	2, 0
.L134:
	.word	gSaveBlock1
	.word	0x2b1a
.Lfe15:
	.size	 IsTVShowInSearchOfTrainersAiring,.Lfe15-IsTVShowInSearchOfTrainersAiring
	.align	2, 0
	.globl	GabbyAndTyGetLastQuote
	.type	 GabbyAndTyGetLastQuote,function
	.thumb_func
GabbyAndTyGetLastQuote:
	push	{r4, r5, lr}
	ldr	r0, .L139
	ldr	r1, .L139+0x4
	add	r4, r0, r1
	ldrh	r0, [r4]
	ldr	r5, .L139+0x8
	cmp	r0, r5
	beq	.L137	@cond_branch
	ldr	r0, .L139+0xc
	ldrh	r1, [r4]
	bl	EasyChat_GetWordText
	ldrh	r1, [r4]
	add	r0, r5, #0
	orr	r0, r0, r1
	strh	r0, [r4]
	mov	r0, #0x1
	b	.L138
.L140:
	.align	2, 0
.L139:
	.word	gSaveBlock1
	.word	0x2b16
	.word	0xffff
	.word	gStringVar1
.L137:
	mov	r0, #0x0
.L138:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe16:
	.size	 GabbyAndTyGetLastQuote,.Lfe16-GabbyAndTyGetLastQuote
	.align	2, 0
	.globl	sub_80BDD18
	.type	 sub_80BDD18,function
	.thumb_func
sub_80BDD18:
	push	{lr}
	ldr	r0, .L147
	ldr	r1, .L147+0x4
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L142	@cond_branch
	mov	r0, #0x1
	b	.L146
.L148:
	.align	2, 0
.L147:
	.word	gSaveBlock1
	.word	0x2b1b
.L142:
	mov	r0, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L143	@cond_branch
	mov	r0, #0x2
	b	.L146
.L143:
	mov	r0, #0x4
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L144	@cond_branch
	mov	r0, #0x3
	b	.L146
.L144:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L145	@cond_branch
	mov	r0, #0x0
	b	.L146
.L145:
	mov	r0, #0x4
.L146:
	pop	{r1}
	bx	r1
.Lfe17:
	.size	 sub_80BDD18,.Lfe17-sub_80BDD18
	.align	2, 0
	.globl	GabbyAndTySetScriptVarsToFieldObjectLocalIds
	.type	 GabbyAndTySetScriptVarsToFieldObjectLocalIds,function
	.thumb_func
GabbyAndTySetScriptVarsToFieldObjectLocalIds:
	push	{lr}
	bl	GabbyAndTyGetBattleNum
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	sub	r0, r0, #0x1
	cmp	r0, #0x7
	bhi	.L150	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L162
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L163:
	.align	2, 0
.L162:
	.word	.L159
	.align	2, 0
	.align	2, 0
.L159:
	.word	.L151
	.word	.L152
	.word	.L153
	.word	.L154
	.word	.L155
	.word	.L156
	.word	.L157
	.word	.L158
.L151:
	ldr	r1, .L164
	mov	r0, #0xe
	strh	r0, [r1]
	ldr	r1, .L164+0x4
	mov	r0, #0xd
	b	.L161
.L165:
	.align	2, 0
.L164:
	.word	gSpecialVar_0x8004
	.word	gSpecialVar_0x8005
.L152:
	ldr	r1, .L166
	mov	r0, #0x5
	strh	r0, [r1]
	ldr	r1, .L166+0x4
	mov	r0, #0x6
	b	.L161
.L167:
	.align	2, 0
.L166:
	.word	gSpecialVar_0x8004
	.word	gSpecialVar_0x8005
.L153:
	ldr	r1, .L168
	mov	r0, #0x12
	strh	r0, [r1]
	ldr	r1, .L168+0x4
	mov	r0, #0x11
	b	.L161
.L169:
	.align	2, 0
.L168:
	.word	gSpecialVar_0x8004
	.word	gSpecialVar_0x8005
.L154:
	ldr	r1, .L170
	mov	r0, #0x15
	strh	r0, [r1]
	ldr	r1, .L170+0x4
	mov	r0, #0x16
	b	.L161
.L171:
	.align	2, 0
.L170:
	.word	gSpecialVar_0x8004
	.word	gSpecialVar_0x8005
.L155:
	ldr	r1, .L172
	mov	r0, #0x8
	strh	r0, [r1]
	ldr	r1, .L172+0x4
	mov	r0, #0x9
	b	.L161
.L173:
	.align	2, 0
.L172:
	.word	gSpecialVar_0x8004
	.word	gSpecialVar_0x8005
.L156:
	ldr	r1, .L174
	mov	r0, #0x13
	strh	r0, [r1]
	ldr	r1, .L174+0x4
	mov	r0, #0x14
	b	.L161
.L175:
	.align	2, 0
.L174:
	.word	gSpecialVar_0x8004
	.word	gSpecialVar_0x8005
.L157:
	ldr	r1, .L176
	mov	r0, #0x17
	strh	r0, [r1]
	ldr	r1, .L176+0x4
	mov	r0, #0x18
	b	.L161
.L177:
	.align	2, 0
.L176:
	.word	gSpecialVar_0x8004
	.word	gSpecialVar_0x8005
.L158:
	ldr	r1, .L178
	mov	r0, #0xa
	strh	r0, [r1]
	ldr	r1, .L178+0x4
	mov	r0, #0xb
.L161:
	strh	r0, [r1]
.L150:
	pop	{r0}
	bx	r0
.L179:
	.align	2, 0
.L178:
	.word	gSpecialVar_0x8004
	.word	gSpecialVar_0x8005
.Lfe18:
	.size	 GabbyAndTySetScriptVarsToFieldObjectLocalIds,.Lfe18-GabbyAndTySetScriptVarsToFieldObjectLocalIds
	.align	2, 0
	.globl	sub_80BDE48
	.type	 sub_80BDE48,function
	.thumb_func
sub_80BDE48:
	push	{lr}
	ldr	r0, .L190
	ldrh	r0, [r0]
	sub	r0, r0, #0x1
	cmp	r0, #0x6
	bhi	.L181	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L190+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L191:
	.align	2, 0
.L190:
	.word	gSpecialVar_0x8005
	.word	.L188
	.align	2, 0
	.align	2, 0
.L188:
	.word	.L182
	.word	.L183
	.word	.L184
	.word	.L185
	.word	.L181
	.word	.L186
	.word	.L187
.L182:
	bl	sub_80BE5FC
	b	.L181
.L183:
	bl	sub_80BE65C
	b	.L181
.L184:
	bl	sub_80BE6A0
	b	.L181
.L185:
	bl	nullsub_21
	b	.L181
.L186:
	bl	sub_80BE188
	b	.L181
.L187:
	bl	sub_80BE320
.L181:
	pop	{r0}
	bx	r0
.Lfe19:
	.size	 sub_80BDE48,.Lfe19-sub_80BDE48
	.align	2, 0
	.globl	sub_80BDEAC
	.type	 sub_80BDEAC,function
	.thumb_func
sub_80BDEAC:
	push	{lr}
	add	r1, r0, #0
	mov	r2, #0x2
	ldrb	r0, [r1]
	cmp	r0, #0xfc
	bne	.L193	@cond_branch
	ldrb	r0, [r1, #0x1]
	cmp	r0, #0x15
	bne	.L193	@cond_branch
	mov	r2, #0x1
.L193:
	add	r0, r2, #0
	pop	{r1}
	bx	r1
.Lfe20:
	.size	 sub_80BDEAC,.Lfe20-sub_80BDEAC
	.align	2, 0
	.globl	sub_80BDEC8
	.type	 sub_80BDEC8,function
	.thumb_func
sub_80BDEC8:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	mov	r4, #0x0
	bl	sub_80BEB20
	bl	sub_80BE778
	ldr	r5, .L214
	ldrh	r0, [r5, #0x28]
	cmp	r0, #0
	bne	.L195	@cond_branch
	bl	sub_80BE074
	b	.L196
.L215:
	.align	2, 0
.L214:
	.word	gBattleResults
.L195:
	bl	sub_80BE028
	ldr	r0, .L216
	bl	sub_80BF77C
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB1449
	b	.L196	@long jump
.LCB1449:
	ldrh	r1, [r5, #0x28]
	mov	r0, #0xb
	mul	r0, r0, r1
	ldr	r1, .L216+0x4
	add	r0, r0, r1
	add	r1, r5, #0
	add	r1, r1, #0x2a
	bl	StringCompareWithoutExtCtrlCodes
	cmp	r0, #0
	bne	.LCB1462
	b	.L196	@long jump
.LCB1462:
	ldr	r0, .L216+0x8
	bl	sub_80BF74C
	ldr	r1, .L216+0xc
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L196	@cond_branch
	mov	r0, #0x15
	bl	sub_80BF1B4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L196	@cond_branch
	mov	r2, #0x0
	add	r7, r5, #0
	add	r1, r7, #0
	add	r1, r1, #0x36
.L202:
	add	r0, r2, r1
	ldrb	r0, [r0]
	add	r0, r4, r0
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0xa
	bls	.L202	@cond_branch
	cmp	r4, #0
	bne	.L205	@cond_branch
	ldrb	r1, [r7, #0x5]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L196	@cond_branch
.L205:
	mov	r4, #0x0
	ldr	r0, .L216+0xc
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L216+0x8
	add	r5, r0, r1
	mov	r0, #0x15
	strb	r0, [r5]
	strb	r4, [r5, #0x1]
	ldrb	r1, [r7, #0x5]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L206	@cond_branch
	mov	r4, #0x1
	mov	r0, #0x1
	add	r3, r5, #0
	add	r3, r3, #0x13
	ldr	r1, .L216+0x10
	mov	r8, r1
	add	r6, r5, #0x4
	b	.L207
.L217:
	.align	2, 0
.L216:
	.word	0xffff
	.word	gSpeciesNames
	.word	gSaveBlock1+0x2738
	.word	gUnknown_03005D38
	.word	gSaveBlock2
.L206:
	mov	r2, #0x0
	ldr	r0, .L218
	mov	ip, r0
	add	r3, r5, #0
	add	r3, r3, #0x13
	ldr	r1, .L218+0x4
	mov	r8, r1
	add	r6, r5, #0x4
	add	r1, r7, #0
	add	r1, r1, #0x36
.L211:
	add	r0, r2, r1
	ldrb	r0, [r0]
	add	r0, r4, r0
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0xa
	bls	.L211	@cond_branch
	cmp	r4, #0xff
	bls	.L213	@cond_branch
	mov	r4, #0xff
.L213:
	mov	r1, ip
	ldrh	r0, [r1]
.L207:
	strb	r4, [r5, #0x12]
	strb	r0, [r5, #0xf]
	add	r0, r3, #0
	mov	r1, r8
	bl	StringCopy
	ldr	r4, .L218+0x8
	add	r0, r6, #0
	add	r1, r4, #0
	bl	StringCopy
	sub	r4, r4, #0x2a
	ldrh	r0, [r4, #0x28]
	strh	r0, [r5, #0x10]
	add	r0, r5, #0
	bl	sub_80BE138
	mov	r0, #0x2
	strb	r0, [r5, #0x2]
	add	r0, r6, #0
	bl	sub_80BDEAC
	strb	r0, [r5, #0x3]
	add	r0, r6, #0
	bl	StripExtCtrlCodes
.L196:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L219:
	.align	2, 0
.L218:
	.word	gLastUsedItem
	.word	gSaveBlock2
	.word	gBattleResults+0x2a
.Lfe21:
	.size	 sub_80BDEC8,.Lfe21-sub_80BDEC8
	.align	2, 0
	.globl	sub_80BE028
	.type	 sub_80BE028,function
	.thumb_func
sub_80BE028:
	push	{r4, lr}
	ldr	r4, .L222
	ldrb	r0, [r4]
	cmp	r0, #0x19
	beq	.L221	@cond_branch
	ldr	r1, .L222+0x4
	add	r0, r4, r1
	mov	r1, #0x18
	bl	sub_80BF55C
	mov	r0, #0x5
	bl	GetGameStat
	strh	r0, [r4, #0x6]
	mov	r0, #0x19
	strb	r0, [r4]
.L221:
	ldrh	r0, [r4, #0x2]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x2]
	ldr	r1, .L222+0x8
	ldrh	r0, [r1, #0x28]
	strh	r0, [r4, #0x4]
	ldrh	r0, [r1, #0x6]
	strh	r0, [r4, #0x8]
	ldr	r0, .L222+0xc
	ldrb	r0, [r0, #0x14]
	strb	r0, [r4, #0xa]
	pop	{r4}
	pop	{r0}
	bx	r0
.L223:
	.align	2, 0
.L222:
	.word	gSaveBlock1+0x2a98
	.word	0xfffffca0
	.word	gBattleResults
	.word	gMapHeader
.Lfe22:
	.size	 sub_80BE028,.Lfe22-sub_80BE028
	.align	2, 0
	.globl	sub_80BE074
	.type	 sub_80BE074,function
	.thumb_func
sub_80BE074:
	push	{r4, r5, r6, r7, lr}
	ldr	r0, .L234
	bl	sub_80BF77C
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L225	@cond_branch
	mov	r1, #0x0
	mov	r5, #0x0
	ldr	r2, .L234+0x4
.L229:
	add	r0, r1, r2
	ldrb	r0, [r0]
	add	r0, r5, r0
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0xa
	bls	.L229	@cond_branch
	cmp	r5, #0xff
	bls	.L231	@cond_branch
	mov	r5, #0xff
.L231:
	cmp	r5, #0x2
	bls	.L225	@cond_branch
	ldr	r7, .L234+0x8
	ldrb	r0, [r7]
	cmp	r0, #0x1
	bne	.L225	@cond_branch
	ldr	r6, .L234+0xc
	add	r0, r6, #0
	bl	sub_80BF74C
	ldr	r4, .L234+0x10
	strb	r0, [r4]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L225	@cond_branch
	mov	r0, #0x17
	bl	sub_80BF1B4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L225	@cond_branch
	mov	r0, #0x0
	ldrsb	r0, [r4, r0]
	lsl	r4, r0, #0x3
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	add	r4, r4, r6
	mov	r1, #0x0
	mov	r0, #0x17
	strb	r0, [r4]
	strb	r1, [r4, #0x1]
	ldr	r1, .L234+0x14
	ldrh	r0, [r1, #0x6]
	strh	r0, [r4, #0xc]
	ldrh	r0, [r1, #0x20]
	strh	r0, [r4, #0xe]
	strb	r5, [r4, #0x10]
	ldrb	r0, [r7]
	strb	r0, [r4, #0x11]
	ldr	r0, .L234+0x18
	ldrb	r0, [r0, #0x14]
	strb	r0, [r4, #0x12]
	add	r0, r4, #0
	add	r0, r0, #0x13
	ldr	r1, .L234+0x1c
	bl	StringCopy
	add	r0, r4, #0
	bl	sub_80BE138
	mov	r0, #0x2
	strb	r0, [r4, #0x2]
.L225:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L235:
	.align	2, 0
.L234:
	.word	0xffff
	.word	gUnknown_03004316
	.word	gBattleOutcome
	.word	gSaveBlock1+0x2738
	.word	gUnknown_03005D38
	.word	gBattleResults
	.word	gMapHeader
	.word	gSaveBlock2
.Lfe23:
	.size	 sub_80BE074,.Lfe23-sub_80BE074
	.align	2, 0
	.globl	sub_80BE138
	.type	 sub_80BE138,function
	.thumb_func
sub_80BE138:
	push	{r4, lr}
	add	r4, r0, #0
	bl	GetPlayerTrainerId
	strb	r0, [r4, #0x1e]
	lsr	r2, r0, #0x8
	strb	r2, [r4, #0x1f]
	add	r1, r4, #0
	add	r1, r1, #0x20
	strb	r0, [r1]
	add	r1, r1, #0x1
	strb	r2, [r1]
	add	r1, r1, #0x1
	strb	r0, [r1]
	add	r0, r4, #0
	add	r0, r0, #0x23
	strb	r2, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe24:
	.size	 sub_80BE138,.Lfe24-sub_80BE138
	.align	2, 0
	.globl	sub_80BE160
	.type	 sub_80BE160,function
	.thumb_func
sub_80BE160:
	push	{r4, lr}
	add	r4, r0, #0
	bl	GetPlayerTrainerId
	add	r1, r4, #0
	add	r1, r1, #0x20
	strb	r0, [r1]
	lsr	r1, r0, #0x8
	add	r2, r4, #0
	add	r2, r2, #0x21
	strb	r1, [r2]
	add	r2, r2, #0x1
	strb	r0, [r2]
	add	r0, r4, #0
	add	r0, r0, #0x23
	strb	r1, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe25:
	.size	 sub_80BE160,.Lfe25-sub_80BE160
	.align	2, 0
	.globl	sub_80BE188
	.type	 sub_80BE188,function
	.thumb_func
sub_80BE188:
	push	{r4, r5, r6, lr}
	ldr	r6, .L240
	ldrb	r1, [r6]
	cmp	r1, #0x6
	bne	.L239	@cond_branch
	ldr	r0, .L240+0x4
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	lsl	r4, r0, #0x3
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r2, .L240+0x8
	add	r0, r6, r2
	add	r4, r4, r0
	strb	r1, [r4]
	mov	r0, #0x1
	strb	r0, [r4, #0x1]
	ldrh	r0, [r6, #0x2]
	strh	r0, [r4, #0x2]
	add	r0, r4, #0
	add	r0, r0, #0x16
	ldr	r1, .L240+0xc
	bl	StringCopy
	add	r5, r4, #0
	add	r5, r5, #0x8
	add	r1, r6, #0
	add	r1, r1, #0x8
	add	r0, r5, #0
	bl	StringCopy
	ldrb	r0, [r6, #0x13]
	lsl	r0, r0, #0x1d
	lsr	r0, r0, #0x1d
	ldrb	r2, [r4, #0x13]
	mov	r3, #0x8
	neg	r3, r3
	add	r1, r3, #0
	and	r1, r1, r2
	orr	r1, r1, r0
	strb	r1, [r4, #0x13]
	ldrb	r2, [r6, #0x13]
	mov	r0, #0x18
	and	r0, r0, r2
	mov	r2, #0x19
	neg	r2, r2
	and	r2, r2, r1
	orr	r2, r2, r0
	strb	r2, [r4, #0x13]
	ldrh	r0, [r6, #0x14]
	strh	r0, [r4, #0x14]
	ldrb	r0, [r6, #0x13]
	mov	r1, #0x60
	and	r1, r1, r0
	mov	r0, #0x61
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r4, #0x13]
	ldrb	r1, [r6, #0x13]
	lsl	r1, r1, #0x1d
	lsr	r1, r1, #0x1d
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r4, #0x13]
	add	r0, r4, #0
	bl	sub_80BE160
	mov	r0, #0x2
	strb	r0, [r4, #0x1e]
	add	r0, r5, #0
	bl	sub_80BDEAC
	strb	r0, [r4, #0x1f]
	add	r0, r5, #0
	bl	StripExtCtrlCodes
.L239:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L241:
	.align	2, 0
.L240:
	.word	gSaveBlock1+0x2a98
	.word	gUnknown_03005D38
	.word	0xfffffca0
	.word	gSaveBlock2
.Lfe26:
	.size	 sub_80BE188,.Lfe26-sub_80BE188
	.align	2, 0
	.globl	sub_80BE23C
	.type	 sub_80BE23C,function
	.thumb_func
sub_80BE23C:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	ldr	r4, .L244
	bl	sub_80BF484
	ldr	r0, .L244+0x4
	add	r5, r4, r0
	add	r0, r5, #0
	bl	sub_80BF720
	ldr	r1, .L244+0x8
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L243	@cond_branch
	add	r0, r5, #0
	mov	r1, #0x18
	bl	sub_80BF55C
	strh	r6, [r4, #0x14]
	mov	r0, #0x6
	strb	r0, [r4]
.L243:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L245:
	.align	2, 0
.L244:
	.word	gSaveBlock1+0x2a98
	.word	0xfffffca0
	.word	gUnknown_03005D38
.Lfe27:
	.size	 sub_80BE23C,.Lfe27-sub_80BE23C
	.align	2, 0
	.globl	sub_80BE284
	.type	 sub_80BE284,function
	.thumb_func
sub_80BE284:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r7, .L248
	ldr	r1, .L248+0x4
	add	r0, r7, r1
	bl	sub_80BF720
	ldr	r1, .L248+0x8
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L247	@cond_branch
	mov	r3, #0x3
	add	r1, r4, #0
	and	r1, r1, r3
	lsl	r1, r1, #0x5
	ldrb	r2, [r7, #0x13]
	mov	r0, #0x61
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	ldr	r1, .L248+0xc
	ldrb	r2, [r1]
	mov	r1, #0x7
	and	r1, r1, r2
	mov	r2, #0x8
	neg	r2, r2
	and	r0, r0, r2
	orr	r0, r0, r1
	ldr	r1, .L248+0x10
	ldrb	r1, [r1]
	and	r3, r3, r1
	lsl	r3, r3, #0x3
	mov	r1, #0x19
	neg	r1, r1
	and	r0, r0, r1
	orr	r0, r0, r3
	strb	r0, [r7, #0x13]
	ldr	r6, .L248+0x14
	ldrb	r0, [r6]
	mov	r5, #0x64
	mul	r0, r0, r5
	ldr	r4, .L248+0x18
	add	r0, r0, r4
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	strh	r0, [r7, #0x2]
	ldrb	r0, [r6]
	mul	r0, r0, r5
	add	r0, r0, r4
	add	r2, r7, #0
	add	r2, r2, #0x8
	mov	r1, #0x2
	bl	GetMonData
.L247:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L249:
	.align	2, 0
.L248:
	.word	gSaveBlock1+0x2a98
	.word	0xfffffca0
	.word	gUnknown_03005D38
	.word	gScriptContestCategory
	.word	gScriptContestRank
	.word	gUnknown_02038694
	.word	gPlayerParty
.Lfe28:
	.size	 sub_80BE284,.Lfe28-sub_80BE284
	.align	2, 0
	.globl	sub_80BE320
	.type	 sub_80BE320,function
	.thumb_func
sub_80BE320:
	push	{r4, r5, r6, lr}
	ldr	r0, .L254
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L254+0x4
	add	r6, r0, r1
	mov	r0, #0x7
	strb	r0, [r6]
	mov	r0, #0x1
	strb	r0, [r6, #0x1]
	add	r0, r6, #0x2
	ldr	r4, .L254+0x8
	add	r1, r4, #0
	bl	StringCopy
	add	r0, r6, #0
	add	r0, r0, #0xc
	ldr	r2, .L254+0xc
	add	r1, r4, r2
	bl	StringCopy
	mov	r1, #0x90
	lsl	r1, r1, #0x3
	add	r0, r4, r1
	ldrh	r0, [r0]
	strh	r0, [r6, #0xa]
	ldr	r2, .L254+0x10
	add	r0, r4, r2
	ldrh	r0, [r0]
	strh	r0, [r6, #0x14]
	mov	r0, #0xaf
	lsl	r0, r0, #0x3
	add	r5, r4, r0
	ldrb	r0, [r5]
	bl	GetCurrentBattleTowerWinStreak
	strh	r0, [r6, #0x16]
	ldr	r1, .L254+0x14
	add	r4, r4, r1
	ldrb	r0, [r4]
	strb	r0, [r6, #0x1c]
	ldrb	r0, [r5]
	cmp	r0, #0
	bne	.L251	@cond_branch
	mov	r0, #0x32
	b	.L253
.L255:
	.align	2, 0
.L254:
	.word	gUnknown_03005D38
	.word	gSaveBlock1+0x2738
	.word	gSaveBlock2
	.word	0x484
	.word	0x482
	.word	0x555
.L251:
	mov	r0, #0x64
.L253:
	strb	r0, [r6, #0x1a]
	ldr	r0, .L256
	ldrh	r0, [r0]
	strb	r0, [r6, #0x1b]
	add	r0, r6, #0
	bl	sub_80BE160
	mov	r0, #0x2
	strb	r0, [r6, #0x1d]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L257:
	.align	2, 0
.L256:
	.word	gSpecialVar_0x8004
.Lfe29:
	.size	 sub_80BE320,.Lfe29-sub_80BE320
	.align	2, 0
	.globl	sub_80BE3BC
	.type	 sub_80BE3BC,function
	.thumb_func
sub_80BE3BC:
	push	{r4, r5, r6, r7, lr}
	ldr	r0, .L267
	bl	sub_80BF77C
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0
	bne	.L259	@cond_branch
	ldr	r6, .L267+0x4
	add	r0, r6, #0
	bl	sub_80BF74C
	ldr	r5, .L267+0x8
	strb	r0, [r5]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L259	@cond_branch
	mov	r0, #0x16
	bl	sub_80BF1B4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L259	@cond_branch
	bl	sub_80BF20C
	ldr	r2, .L267+0xc
	ldrh	r0, [r2, #0x2]
	cmp	r0, #0x13
	bls	.L259	@cond_branch
	mov	r1, #0x0
	ldrsb	r1, [r5, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r5, r0, r6
	mov	r0, #0x16
	strb	r0, [r5]
	strb	r4, [r5, #0x1]
	ldr	r0, .L267+0x10
	ldrb	r0, [r0, #0x14]
	strb	r0, [r5, #0x12]
	mov	r4, #0x0
	add	r7, r5, #0x6
	mov	ip, r2
	add	r6, r5, #0
	add	r6, r6, #0xc
.L265:
	lsl	r2, r4, #0x1
	add	r3, r7, r2
	lsl	r1, r4, #0x2
	add	r1, r1, ip
	ldrh	r0, [r1]
	strh	r0, [r3]
	add	r2, r6, r2
	ldrh	r0, [r1, #0x2]
	strh	r0, [r2]
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x2
	bls	.L265	@cond_branch
	mov	r0, #0x1
	bl	GetPriceReduction
	strb	r0, [r5, #0x2]
	add	r0, r5, #0
	add	r0, r0, #0x13
	ldr	r1, .L267+0x14
	bl	StringCopy
	add	r0, r5, #0
	bl	sub_80BE138
	mov	r0, #0x2
	strb	r0, [r5, #0x3]
.L259:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L268:
	.align	2, 0
.L267:
	.word	0x5555
	.word	gSaveBlock1+0x2738
	.word	gUnknown_03005D38
	.word	gUnknown_02038724
	.word	gMapHeader
	.word	gSaveBlock2
.Lfe30:
	.size	 sub_80BE3BC,.Lfe30-sub_80BE3BC
	.align	2, 0
	.globl	sub_80BE478
	.type	 sub_80BE478,function
	.thumb_func
sub_80BE478:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	bl	sub_80BF478
	ldr	r0, .L272
	ldrh	r0, [r0]
	cmp	r0, #0x1
	beq	.L269	@cond_branch
	ldr	r0, .L272+0x4
	mov	r8, r0
	ldrh	r0, [r0]
	mov	r7, #0x64
	mul	r0, r0, r7
	ldr	r6, .L272+0x8
	add	r0, r0, r6
	ldr	r4, .L272+0xc
	mov	r1, #0x2
	add	r2, r4, #0
	bl	GetMonData
	ldr	r1, .L272+0x10
	mov	r9, r1
	mov	r0, r9
	bl	StringLength
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x1
	bls	.L269	@cond_branch
	add	r0, r4, #0
	bl	StringLength
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x1
	bls	.L269	@cond_branch
	ldr	r0, .L272+0x14
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	lsl	r4, r0, #0x3
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L272+0x18
	add	r4, r4, r0
	mov	r0, #0x5
	strb	r0, [r4]
	mov	r5, #0x1
	strb	r5, [r4, #0x1]
	mov	r1, r8
	ldrh	r0, [r1]
	mul	r0, r0, r7
	add	r0, r0, r6
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	strh	r0, [r4, #0x2]
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x3
	bl	__umodsi3
	strb	r0, [r4, #0x1a]
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	and	r0, r0, r5
	strb	r0, [r4, #0x1b]
	ldrh	r0, [r4, #0x2]
	bl	sub_80BF674
	strh	r0, [r4, #0x1c]
	add	r0, r4, #0
	add	r0, r0, #0xf
	mov	r1, r9
	bl	StringCopy
	mov	r1, r8
	ldrh	r0, [r1]
	mul	r0, r0, r7
	add	r0, r0, r6
	add	r5, r4, #0x4
	mov	r1, #0x2
	add	r2, r5, #0
	bl	GetMonData
	add	r0, r4, #0
	bl	sub_80BE160
	mov	r0, #0x2
	strb	r0, [r4, #0x1e]
	add	r0, r5, #0
	bl	sub_80BDEAC
	strb	r0, [r4, #0x1f]
	add	r0, r5, #0
	bl	StripExtCtrlCodes
.L269:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L273:
	.align	2, 0
.L272:
	.word	gScriptResult
	.word	gSpecialVar_0x8004
	.word	gPlayerParty
	.word	gStringVar1
	.word	gSaveBlock2
	.word	gUnknown_03005D38
	.word	gSaveBlock1+0x2738
.Lfe31:
	.size	 sub_80BE478,.Lfe31-sub_80BE478
	.align	2, 0
	.globl	StartMassOutbreak
	.type	 StartMassOutbreak,function
	.thumb_func
StartMassOutbreak:
	push	{r4, lr}
	ldr	r0, .L275
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r2, .L275+0x4
	add	r0, r0, r2
	ldrh	r3, [r0, #0xc]
	mov	r4, #0xf1
	lsl	r4, r4, #0x2
	add	r1, r2, r4
	strh	r3, [r1]
	ldrb	r3, [r0, #0x10]
	add	r4, r4, #0x2
	add	r1, r2, r4
	strb	r3, [r1]
	ldrb	r3, [r0, #0x11]
	add	r4, r4, #0x1
	add	r1, r2, r4
	strb	r3, [r1]
	ldrb	r3, [r0, #0x14]
	add	r4, r4, #0x1
	add	r1, r2, r4
	strb	r3, [r1]
	ldrb	r3, [r0, #0x2]
	add	r4, r4, #0x1
	add	r1, r2, r4
	strb	r3, [r1]
	ldrh	r3, [r0, #0xe]
	add	r4, r4, #0x1
	add	r1, r2, r4
	strh	r3, [r1]
	ldrh	r3, [r0, #0x4]
	add	r4, r4, #0x2
	add	r1, r2, r4
	strh	r3, [r1]
	ldrh	r3, [r0, #0x6]
	add	r4, r4, #0x2
	add	r1, r2, r4
	strh	r3, [r1]
	ldrh	r3, [r0, #0x8]
	add	r4, r4, #0x2
	add	r1, r2, r4
	strh	r3, [r1]
	ldrh	r3, [r0, #0xa]
	add	r4, r4, #0x2
	add	r1, r2, r4
	strh	r3, [r1]
	ldrb	r3, [r0, #0x3]
	add	r4, r4, #0x2
	add	r1, r2, r4
	strb	r3, [r1]
	ldrb	r1, [r0, #0x13]
	ldr	r3, .L275+0x8
	add	r0, r2, r3
	strb	r1, [r0]
	add	r4, r4, #0x2
	add	r2, r2, r4
	mov	r0, #0x2
	strh	r0, [r2]
	pop	{r4}
	pop	{r0}
	bx	r0
.L276:
	.align	2, 0
.L275:
	.word	gSpecialVar_0x8004
	.word	gSaveBlock1+0x2738
	.word	0x3d5
.Lfe32:
	.size	 StartMassOutbreak,.Lfe32-StartMassOutbreak
	.align	2, 0
	.globl	sub_80BE5FC
	.type	 sub_80BE5FC,function
	.thumb_func
sub_80BE5FC:
	push	{r4, lr}
	ldr	r0, .L278
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	lsl	r4, r0, #0x3
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L278+0x4
	add	r4, r4, r0
	mov	r0, #0x1
	strb	r0, [r4]
	strb	r0, [r4, #0x1]
	add	r0, r4, #0
	add	r0, r0, #0x10
	ldr	r1, .L278+0x8
	bl	StringCopy
	bl	GetLeadMonIndex
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x64
	mul	r0, r0, r1
	ldr	r1, .L278+0xc
	add	r0, r0, r1
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	strh	r0, [r4, #0x2]
	add	r0, r4, #0
	bl	sub_80BE160
	mov	r0, #0x2
	strb	r0, [r4, #0x18]
	pop	{r4}
	pop	{r0}
	bx	r0
.L279:
	.align	2, 0
.L278:
	.word	gUnknown_03005D38
	.word	gSaveBlock1+0x2738
	.word	gSaveBlock2
	.word	gPlayerParty
.Lfe33:
	.size	 sub_80BE5FC,.Lfe33-sub_80BE5FC
	.align	2, 0
	.globl	sub_80BE65C
	.type	 sub_80BE65C,function
	.thumb_func
sub_80BE65C:
	push	{r4, r5, r6, lr}
	ldr	r0, .L281
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	lsl	r4, r0, #0x3
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L281+0x4
	add	r4, r4, r0
	mov	r6, #0x0
	mov	r5, #0x2
	strb	r5, [r4]
	mov	r0, #0x1
	strb	r0, [r4, #0x1]
	add	r0, r4, #0
	add	r0, r0, #0x10
	ldr	r1, .L281+0x8
	bl	StringCopy
	strh	r6, [r4, #0x2]
	add	r0, r4, #0
	bl	sub_80BE160
	strb	r5, [r4, #0x18]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L282:
	.align	2, 0
.L281:
	.word	gUnknown_03005D38
	.word	gSaveBlock1+0x2738
	.word	gSaveBlock2
.Lfe34:
	.size	 sub_80BE65C,.Lfe34-sub_80BE65C
	.align	2, 0
	.globl	sub_80BE6A0
	.type	 sub_80BE6A0,function
	.thumb_func
sub_80BE6A0:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	ldr	r0, .L284
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	lsl	r4, r0, #0x3
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L284+0x4
	add	r4, r4, r0
	mov	r0, #0x3
	strb	r0, [r4]
	mov	r0, #0x1
	strb	r0, [r4, #0x1]
	bl	GetLeadMonIndex
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x64
	mov	r8, r1
	mov	r1, r8
	mul	r1, r1, r0
	add	r0, r1, #0
	ldr	r6, .L284+0x8
	add	r0, r0, r6
	mov	r1, #0x20
	mov	r2, #0x0
	bl	GetMonData
	lsr	r0, r0, #0x4
	mov	r1, #0xf
	and	r0, r0, r1
	ldrb	r2, [r4, #0x4]
	mov	r1, #0x10
	neg	r1, r1
	and	r1, r1, r2
	orr	r1, r1, r0
	strb	r1, [r4, #0x4]
	ldr	r0, .L284+0xc
	ldrb	r0, [r0]
	lsl	r0, r0, #0x4
	mov	r2, #0xf
	and	r1, r1, r2
	orr	r1, r1, r0
	strb	r1, [r4, #0x4]
	add	r0, r4, #0x5
	ldr	r1, .L284+0x10
	bl	StringCopy
	bl	GetLeadMonIndex
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, r8
	mul	r1, r1, r0
	add	r0, r1, #0
	add	r0, r0, r6
	add	r5, r4, #0
	add	r5, r5, #0x10
	mov	r1, #0x2
	add	r2, r5, #0
	bl	GetMonData
	bl	GetLeadMonIndex
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, r8
	mul	r1, r1, r0
	add	r0, r1, #0
	add	r0, r0, r6
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	strh	r0, [r4, #0x2]
	add	r0, r4, #0
	bl	sub_80BE160
	mov	r0, #0x2
	strb	r0, [r4, #0xd]
	add	r0, r5, #0
	bl	sub_80BDEAC
	strb	r0, [r4, #0xe]
	add	r0, r5, #0
	bl	StripExtCtrlCodes
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L285:
	.align	2, 0
.L284:
	.word	gUnknown_03005D38
	.word	gSaveBlock1+0x2738
	.word	gPlayerParty
	.word	gSpecialVar_0x8007
	.word	gSaveBlock2
.Lfe35:
	.size	 sub_80BE6A0,.Lfe35-sub_80BE6A0
	.align	2, 0
	.globl	nullsub_21
	.type	 nullsub_21,function
	.thumb_func
nullsub_21:
	bx	lr
.Lfe36:
	.size	 nullsub_21,.Lfe36-nullsub_21
	.align	2, 0
	.globl	sub_80BE778
	.type	 sub_80BE778,function
	.thumb_func
sub_80BE778:
	push	{r4, r5, r6, lr}
	ldr	r0, .L297
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L287	@cond_branch
	mov	r1, #0x0
	ldr	r3, .L297+0x4
	ldr	r2, .L297+0x8
.L292:
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	add	r0, r0, r2
	ldrb	r0, [r0]
	cmp	r0, #0x29
	beq	.L287	@cond_branch
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x17
	bls	.L292	@cond_branch
	ldr	r0, .L297+0xc
	bl	sub_80BF77C
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0
	bne	.L287	@cond_branch
	ldr	r6, .L297+0x10
	add	r0, r6, #0
	bl	sub_80BF720
	ldr	r4, .L297+0x14
	strb	r0, [r4]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L287	@cond_branch
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x5
	bl	__umodsi3
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x0
	ldrsb	r1, [r4, r1]
	lsl	r4, r1, #0x3
	add	r4, r4, r1
	lsl	r4, r4, #0x2
	add	r4, r4, r6
	mov	r1, #0x29
	strb	r1, [r4]
	mov	r3, #0x1
	strb	r3, [r4, #0x1]
	ldr	r2, .L297+0x18
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldrb	r0, [r1, #0xa]
	strb	r0, [r4, #0x14]
	strb	r5, [r4, #0x2]
	strb	r5, [r4, #0x3]
	ldrh	r0, [r1]
	mov	r2, #0x0
	strh	r0, [r4, #0xc]
	strh	r5, [r4, #0xe]
	ldrh	r0, [r1, #0x2]
	strh	r0, [r4, #0x4]
	ldrh	r0, [r1, #0x4]
	strh	r0, [r4, #0x6]
	ldrh	r0, [r1, #0x6]
	strh	r0, [r4, #0x8]
	ldrh	r0, [r1, #0x8]
	strh	r0, [r4, #0xa]
	ldrb	r0, [r1, #0xb]
	strb	r0, [r4, #0x10]
	strb	r2, [r4, #0x11]
	strb	r2, [r4, #0x12]
	mov	r0, #0x32
	strb	r0, [r4, #0x13]
	strb	r2, [r4, #0x15]
	strh	r3, [r4, #0x16]
	add	r0, r4, #0
	bl	sub_80BE160
	mov	r0, #0x2
	strb	r0, [r4, #0x18]
.L287:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L298:
	.align	2, 0
.L297:
	.word	0x804
	.word	gSaveBlock1
	.word	0x2738
	.word	0x147
	.word	gSaveBlock1+0x2738
	.word	gUnknown_03005D38
	.word	gPokeOutbreakSpeciesList
.Lfe37:
	.size	 sub_80BE778,.Lfe37-sub_80BE778
	.align	2, 0
	.globl	EndMassOutbreak
	.type	 EndMassOutbreak,function
	.thumb_func
EndMassOutbreak:
	push	{r4, lr}
	ldr	r0, .L300
	ldr	r2, .L300+0x4
	add	r1, r0, r2
	mov	r3, #0x0
	mov	r2, #0x0
	strh	r2, [r1]
	ldr	r4, .L300+0x8
	add	r1, r0, r4
	strb	r3, [r1]
	add	r4, r4, #0x1
	add	r1, r0, r4
	strb	r3, [r1]
	add	r4, r4, #0x1
	add	r1, r0, r4
	strb	r3, [r1]
	add	r4, r4, #0x1
	add	r1, r0, r4
	strb	r3, [r1]
	add	r4, r4, #0x1
	add	r1, r0, r4
	strh	r2, [r1]
	add	r4, r4, #0x2
	add	r1, r0, r4
	strh	r2, [r1]
	add	r4, r4, #0x2
	add	r1, r0, r4
	strh	r2, [r1]
	add	r4, r4, #0x2
	add	r1, r0, r4
	strh	r2, [r1]
	add	r4, r4, #0x2
	add	r1, r0, r4
	strh	r2, [r1]
	add	r4, r4, #0x2
	add	r1, r0, r4
	strb	r3, [r1]
	add	r4, r4, #0x1
	add	r1, r0, r4
	strb	r3, [r1]
	ldr	r1, .L300+0xc
	add	r0, r0, r1
	strh	r2, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L301:
	.align	2, 0
.L300:
	.word	gSaveBlock1
	.word	0x2afc
	.word	0x2afe
	.word	0x2b0e
.Lfe38:
	.size	 EndMassOutbreak,.Lfe38-EndMassOutbreak
	.align	2, 0
	.globl	UpdateTVShowsPerDay
	.type	 UpdateTVShowsPerDay,function
	.thumb_func
UpdateTVShowsPerDay:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	add	r0, r4, #0
	bl	sub_80BE8EC
	add	r0, r4, #0
	bl	UpdateMassOutbreakTimeLeft
	add	r0, r4, #0
	bl	sub_80BEE84
	add	r0, r4, #0
	bl	sub_80BEA5C
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe39:
	.size	 UpdateTVShowsPerDay,.Lfe39-UpdateTVShowsPerDay
	.align	2, 0
	.globl	sub_80BE8EC
	.type	 sub_80BE8EC,function
	.thumb_func
sub_80BE8EC:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	ldr	r1, .L313
	ldr	r2, .L313+0x4
	add	r0, r1, r2
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L304	@cond_branch
	mov	r3, #0x0
	add	r5, r1, #0
	ldr	r7, .L313+0x8
	add	r6, r5, r7
.L308:
	lsl	r0, r3, #0x3
	add	r0, r0, r3
	lsl	r2, r0, #0x2
	add	r1, r2, r5
	ldr	r7, .L313+0x8
	add	r0, r1, r7
	ldrb	r0, [r0]
	cmp	r0, #0x29
	bne	.L307	@cond_branch
	add	r7, r7, #0x1
	add	r0, r1, r7
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L307	@cond_branch
	add	r1, r2, r6
	ldrh	r0, [r1, #0x16]
	cmp	r0, r4
	bcs	.L310	@cond_branch
	mov	r0, #0x0
	strh	r0, [r1, #0x16]
	b	.L304
.L314:
	.align	2, 0
.L313:
	.word	gSaveBlock1
	.word	0x2afc
	.word	0x2738
.L310:
	sub	r0, r0, r4
	strh	r0, [r1, #0x16]
	b	.L304
.L307:
	add	r0, r3, #0x1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0x17
	bls	.L308	@cond_branch
.L304:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe40:
	.size	 sub_80BE8EC,.Lfe40-sub_80BE8EC
	.align	2, 0
	.globl	UpdateMassOutbreakTimeLeft
	.type	 UpdateMassOutbreakTimeLeft,function
	.thumb_func
UpdateMassOutbreakTimeLeft:
	push	{lr}
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	ldr	r0, .L318
	ldr	r3, .L318+0x4
	add	r2, r0, r3
	ldrh	r0, [r2]
	cmp	r0, r1
	bhi	.L316	@cond_branch
	bl	EndMassOutbreak
	b	.L317
.L319:
	.align	2, 0
.L318:
	.word	gSaveBlock1
	.word	0x2b0e
.L316:
	sub	r0, r0, r1
	strh	r0, [r2]
.L317:
	pop	{r0}
	bx	r0
.Lfe41:
	.size	 UpdateMassOutbreakTimeLeft,.Lfe41-UpdateMassOutbreakTimeLeft
	.align	2, 0
	.globl	sub_80BE97C
	.type	 sub_80BE97C,function
	.thumb_func
sub_80BE97C:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L321	@cond_branch
	ldr	r4, .L328
	ldrh	r0, [r4]
	lsr	r0, r0, #0x8
	cmp	r0, #0x4
	bls	.L322	@cond_branch
	bl	sub_80BE9D4
.L322:
	ldrb	r0, [r4]
	strh	r0, [r4]
	cmp	r0, #0xff
	beq	.L324	@cond_branch
	add	r0, r0, #0x1
	b	.L327
.L329:
	.align	2, 0
.L328:
	.word	gUnknown_020387E2
.L321:
	ldr	r4, .L330
	ldrb	r0, [r4]
	cmp	r0, #0x4
	bls	.L325	@cond_branch
	bl	sub_80BE9D4
.L325:
	ldrh	r0, [r4]
	mov	r1, #0xff
	lsl	r1, r1, #0x8
	and	r1, r1, r0
	strh	r1, [r4]
	lsr	r0, r1, #0x8
	cmp	r0, #0xff
	beq	.L324	@cond_branch
	mov	r2, #0x80
	lsl	r2, r2, #0x1
	add	r0, r1, r2
.L327:
	strh	r0, [r4]
.L324:
	pop	{r4}
	pop	{r0}
	bx	r0
.L331:
	.align	2, 0
.L330:
	.word	gUnknown_020387E2
.Lfe42:
	.size	 sub_80BE97C,.Lfe42-sub_80BE97C
	.align	2, 0
	.globl	sub_80BE9D4
	.type	 sub_80BE9D4,function
	.thumb_func
sub_80BE9D4:
	push	{r4, r5, lr}
	ldr	r5, .L334
	add	r0, r5, #0
	bl	sub_80BF74C
	ldr	r4, .L334+0x4
	strb	r0, [r4]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L333	@cond_branch
	mov	r0, #0x18
	bl	sub_80BF1B4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L333	@cond_branch
	mov	r0, #0x0
	ldrsb	r0, [r4, r0]
	lsl	r4, r0, #0x3
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	add	r4, r4, r5
	mov	r1, #0x0
	.code	16
	mov	r0, #0x18
	strb	r0, [r4]
	strb	r1, [r4, #0x1]
	ldr	r1, .L334+0x8
	ldrh	r0, [r1]
	strb	r0, [r4, #0x2]
	ldrh	r0, [r1]
	lsr	r0, r0, #0x8
	strb	r0, [r4, #0x3]
	ldr	r0, .L334+0xc
	ldrh	r0, [r0]
	strh	r0, [r4, #0x4]
	add	r0, r4, #0
	add	r0, r0, #0x13
	ldr	r1, .L334+0x10
	bl	StringCopy
	add	r0, r4, #0
	bl	sub_80BE138
	mov	r0, #0x2
	strb	r0, [r4, #0x6]
.L333:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L335:
	.align	2, 0
.L334:
	.word	gSaveBlock1+0x2738
	.word	gUnknown_03005D38
	.word	gUnknown_020387E2
	.word	gUnknown_020387E0
	.word	gSaveBlock2
.Lfe43:
	.size	 sub_80BE9D4,.Lfe43-sub_80BE9D4
	.align	2, 0
	.globl	sub_80BEA50
	.type	 sub_80BEA50,function
	.thumb_func
sub_80BEA50:
	ldr	r1, .L337
	strh	r0, [r1]
	bx	lr
.L338:
	.align	2, 0
.L337:
	.word	gUnknown_020387E0
.Lfe44:
	.size	 sub_80BEA50,.Lfe44-sub_80BEA50
	.align	2, 0
	.globl	sub_80BEA5C
	.type	 sub_80BEA5C,function
	.thumb_func
sub_80BEA5C:
	push	{lr}
	ldr	r1, .L343
	ldrb	r0, [r1]
	cmp	r0, #0x19
	bne	.L340	@cond_branch
	ldrh	r0, [r1, #0x2]
	cmp	r0, #0x13
	bhi	.L341	@cond_branch
	ldr	r2, .L343+0x4
	add	r0, r1, r2
	mov	r1, #0x18
	bl	sub_80BF55C
	b	.L340
.L344:
	.align	2, 0
.L343:
	.word	gSaveBlock1+0x2a98
	.word	0xfffffca0
.L341:
	bl	sub_80BEA88
.L340:
	pop	{r0}
	bx	r0
.Lfe45:
	.size	 sub_80BEA5C,.Lfe45-sub_80BEA5C
	.align	2, 0
	.globl	sub_80BEA88
	.type	 sub_80BEA88,function
	.thumb_func
sub_80BEA88:
	push	{r4, r5, r6, r7, lr}
	ldr	r5, .L348
	ldr	r0, .L348+0x4
	bl	sub_80BF77C
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0
	bne	.L346	@cond_branch
	ldr	r0, .L348+0x8
	add	r7, r5, r0
	add	r0, r7, #0
	bl	sub_80BF74C
	ldr	r4, .L348+0xc
	strb	r0, [r4]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L346	@cond_branch
	mov	r0, #0x19
	bl	sub_80BF1B4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L346	@cond_branch
	mov	r0, #0x0
	ldrsb	r0, [r4, r0]
	lsl	r4, r0, #0x3
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	add	r4, r4, r7
	mov	r0, #0x19
	strb	r0, [r4]
	strb	r6, [r4, #0x1]
	ldrh	r0, [r5, #0x2]
	strh	r0, [r4, #0x2]
	mov	r0, #0x5
	bl	GetGameStat
	ldrh	r1, [r5, #0x6]
	sub	r0, r0, r1
	strh	r0, [r4, #0x6]
	ldrh	r0, [r5, #0x4]
	strh	r0, [r4, #0x4]
	ldrh	r0, [r5, #0x8]
	strh	r0, [r4, #0x8]
	ldrb	r0, [r5, #0xa]
	strb	r0, [r4, #0xa]
	add	r0, r4, #0
	add	r0, r0, #0x13
	ldr	r1, .L348+0x10
	bl	StringCopy
	add	r0, r4, #0
	bl	sub_80BE138
	mov	r0, #0x2
	strb	r0, [r4, #0xb]
.L346:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L349:
	.align	2, 0
.L348:
	.word	gSaveBlock1+0x2a98
	.word	0xffff
	.word	0xfffffca0
	.word	gUnknown_03005D38
	.word	gSaveBlock2
.Lfe46:
	.size	 sub_80BEA88,.Lfe46-sub_80BEA88
	.align	2, 0
	.globl	sub_80BEB20
	.type	 sub_80BEB20,function
	.thumb_func
sub_80BEB20:
	push	{r4, r5, r6, lr}
	ldr	r0, .L354
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L351	@cond_branch
	ldr	r6, .L354+0x4
	add	r0, r6, #0
	bl	sub_80BEBC8
	ldr	r5, .L354+0x8
	strb	r0, [r5]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L351	@cond_branch
	ldr	r0, .L354+0xc
	bl	sub_80BF77C
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L351	@cond_branch
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x3
	bl	__umodsi3
	add	r0, r0, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	lsl	r0, r4, #0x18
	lsr	r0, r0, #0x18
	bl	sub_80BEE48
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L351	@cond_branch
	mov	r0, #0x0
	ldrsb	r0, [r5, r0]
	lsl	r0, r0, #0x2
	ldr	r1, .L354+0x10
	add	r2, r6, r1
	add	r0, r6, r0
	strb	r4, [r0]
	mov	r0, #0x0
	ldrsb	r0, [r5, r0]
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldr	r1, .L354+0x14
	add	r0, r0, r1
	mov	r1, #0x4
	strh	r1, [r0]
	mov	r0, #0x0
	ldrsb	r0, [r5, r0]
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldr	r1, .L354+0x18
	add	r0, r0, r1
	mov	r1, #0x1
	strb	r1, [r0]
.L351:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L355:
	.align	2, 0
.L354:
	.word	0x804
	.word	gSaveBlock1+0x2abc
	.word	gUnknown_03005D38
	.word	0x28f
	.word	0xffffd544
	.word	0x2abe
	.word	0x2abd
.Lfe47:
	.size	 sub_80BEB20,.Lfe47-sub_80BEB20
	.align	2, 0
	.globl	sub_80BEBC8
	.type	 sub_80BEBC8,function
	.thumb_func
sub_80BEBC8:
	push	{lr}
	add	r2, r0, #0
	mov	r1, #0x0
.L360:
	lsl	r0, r1, #0x18
	asr	r1, r0, #0x18
	lsl	r0, r1, #0x2
	add	r0, r0, r2
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L359	@cond_branch
	add	r0, r1, #0
	b	.L363
.L359:
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	asr	r0, r0, #0x18
	cmp	r0, #0xf
	ble	.L360	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
.L363:
	pop	{r1}
	bx	r1
.Lfe48:
	.size	 sub_80BEBC8,.Lfe48-sub_80BEBC8
	.align	2, 0
	.globl	sub_80BEBF4
	.type	 sub_80BEBF4,function
	.thumb_func
sub_80BEBF4:
	push	{r4, lr}
	mov	r4, #0x0
.L368:
	add	r0, r4, #0
	bl	sub_80BEC10
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0xf
	bls	.L368	@cond_branch
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe49:
	.size	 sub_80BEBF4,.Lfe49-sub_80BEBF4
	.align	2, 0
	.globl	sub_80BEC10
	.type	 sub_80BEC10,function
	.thumb_func
sub_80BEC10:
	lsl	r0, r0, #0x18
	ldr	r1, .L371
	lsr	r0, r0, #0x16
	add	r0, r0, r1
	ldr	r2, .L371+0x4
	add	r1, r0, r2
	mov	r2, #0x0
	strb	r2, [r1]
	ldr	r3, .L371+0x8
	add	r1, r0, r3
	strb	r2, [r1]
	ldr	r1, .L371+0xc
	add	r0, r0, r1
	strh	r2, [r0]
	bx	lr
.L372:
	.align	2, 0
.L371:
	.word	gSaveBlock1
	.word	0x2abc
	.word	0x2abd
	.word	0x2abe
.Lfe50:
	.size	 sub_80BEC10,.Lfe50-sub_80BEC10
	.align	2, 0
	.globl	sub_80BEC40
	.type	 sub_80BEC40,function
	.thumb_func
sub_80BEC40:
	push	{r4, r5, r6, r7, lr}
	mov	r1, #0x0
	ldr	r6, .L386
.L377:
	ldr	r3, .L386
	lsl	r2, r1, #0x2
	add	r0, r2, r3
	ldr	r4, .L386+0x4
	add	r0, r0, r4
	ldrb	r0, [r0]
	add	r5, r1, #0x1
	cmp	r0, #0
	bne	.L376	@cond_branch
	lsl	r0, r5, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0xf
	bhi	.L376	@cond_branch
	add	r4, r3, r4
	add	r3, r2, r4
.L382:
	lsl	r2, r1, #0x2
	add	r0, r2, r6
	ldr	r7, .L386+0x4
	add	r0, r0, r7
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L381	@cond_branch
	add	r0, r2, r4
	ldr	r0, [r0]
	str	r0, [r3]
	add	r0, r1, #0
	bl	sub_80BEC10
	b	.L376
.L387:
	.align	2, 0
.L386:
	.word	gSaveBlock1
	.word	0x2abc
.L381:
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0xf
	bls	.L382	@cond_branch
.L376:
	lsl	r0, r5, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0xe
	bls	.L377	@cond_branch
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe51:
	.size	 sub_80BEC40,.Lfe51-sub_80BEC40
	.align	2, 0
	.globl	sub_80BECA0
	.type	 sub_80BECA0,function
	.thumb_func
sub_80BECA0:
	push	{r4, lr}
	mov	r2, #0x0
	ldr	r3, .L396
.L392:
	lsl	r0, r2, #0x2
	add	r1, r0, r3
	ldr	r4, .L396+0x4
	add	r0, r1, r4
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L391	@cond_branch
	add	r4, r4, #0x1
	add	r0, r1, r4
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L391	@cond_branch
	add	r4, r4, #0x1
	add	r0, r1, r4
	ldrh	r0, [r0]
	cmp	r0, #0x2
	bhi	.L391	@cond_branch
	add	r0, r2, #0
	b	.L395
.L397:
	.align	2, 0
.L396:
	.word	gSaveBlock1
	.word	0x2abc
.L391:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0xf
	bls	.L392	@cond_branch
	mov	r0, #0xff
.L395:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe52:
	.size	 sub_80BECA0,.Lfe52-sub_80BECA0
	.align	2, 0
	.globl	sub_80BECE8
	.type	 sub_80BECE8,function
	.thumb_func
sub_80BECE8:
	push	{r4, lr}
	bl	sub_80BECA0
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0xff
	bne	.L399	@cond_branch
	ldr	r1, .L406
	mov	r0, #0x0
	b	.L404
.L407:
	.align	2, 0
.L406:
	.word	gScriptResult
.L399:
	ldr	r0, .L408
	lsl	r1, r1, #0x2
	add	r4, r1, r0
	ldr	r0, .L408+0x4
	add	r1, r4, r0
	ldrh	r0, [r1]
	cmp	r0, #0
	bne	.L400	@cond_branch
	ldr	r2, .L408+0x8
	add	r1, r4, r2
	mov	r0, #0x2
	strb	r0, [r1]
	ldr	r0, .L408+0xc
	ldrb	r0, [r0, #0x2]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	cmp	r0, #0x13
	bgt	.L401	@cond_branch
	ldr	r1, .L408+0x10
	sub	r2, r2, #0x1
	b	.L405
.L409:
	.align	2, 0
.L408:
	.word	gSaveBlock1
	.word	0x2abe
	.word	0x2abd
	.word	gLocalTime
	.word	gTVNewsTextGroup2
.L401:
	ldr	r1, .L410
	ldr	r2, .L410+0x4
.L405:
	add	r0, r4, r2
	ldrb	r0, [r0]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	bl	ShowFieldMessage
	b	.L403
.L411:
	.align	2, 0
.L410:
	.word	gTVNewsTextGroup3
	.word	0x2abc
.L400:
	ldrh	r1, [r1]
	ldr	r0, .L412
	mov	r2, #0x0
	mov	r3, #0x1
	bl	ConvertIntToDecimalStringN
	ldr	r0, .L412+0x4
	add	r1, r4, r0
	mov	r0, #0x0
	strb	r0, [r1]
	ldr	r1, .L412+0x8
	ldr	r2, .L412+0xc
	add	r0, r4, r2
	ldrb	r0, [r0]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	bl	ShowFieldMessage
.L403:
	ldr	r1, .L412+0x10
	mov	r0, #0x1
.L404:
	strh	r0, [r1]
	pop	{r4}
	pop	{r0}
	bx	r0
.L413:
	.align	2, 0
.L412:
	.word	gStringVar1
	.word	0x2abd
	.word	gTVNewsTextGroup1
	.word	0x2abc
	.word	gScriptResult
.Lfe53:
	.size	 sub_80BECE8,.Lfe53-sub_80BECE8
	.align	2, 0
	.globl	GetPriceReduction
	.type	 GetPriceReduction,function
	.thumb_func
GetPriceReduction:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0
	bne	.L415	@cond_branch
	b	.L426
.L425:
	mov	r0, #0x1
	b	.L424
.L415:
	mov	r2, #0x0
	ldr	r4, .L427
.L419:
	lsl	r0, r2, #0x2
	add	r1, r0, r4
	ldr	r5, .L427+0x4
	add	r0, r1, r5
	ldrb	r0, [r0]
	cmp	r0, r3
	bne	.L418	@cond_branch
	ldr	r2, .L427+0x8
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0x2
	bne	.L426	@cond_branch
	add	r0, r3, #0
	bl	IsPriceDiscounted
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L425	@cond_branch
	b	.L426
.L428:
	.align	2, 0
.L427:
	.word	gSaveBlock1
	.word	0x2abc
	.word	0x2abd
.L418:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0xf
	bls	.L419	@cond_branch
.L426:
	mov	r0, #0x0
.L424:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe54:
	.size	 GetPriceReduction,.Lfe54-GetPriceReduction
	.align	2, 0
	.globl	IsPriceDiscounted
	.type	 IsPriceDiscounted,function
	.thumb_func
IsPriceDiscounted:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L431	@cond_branch
	cmp	r0, #0x3
	beq	.L434	@cond_branch
.L441:
	mov	r0, #0x1
	b	.L439
.L431:
	ldr	r0, .L442
	ldrh	r1, [r0, #0x4]
	mov	r0, #0x80
	lsl	r0, r0, #0x1
	cmp	r1, r0
	bne	.L435	@cond_branch
	ldr	r0, .L442+0x4
	ldrh	r0, [r0]
	cmp	r0, #0x1a
	beq	.L441	@cond_branch
	b	.L435
.L443:
	.align	2, 0
.L442:
	.word	gSaveBlock1
	.word	gScriptLastTalked
.L434:
	ldr	r0, .L444
	ldrh	r1, [r0, #0x4]
	ldr	r0, .L444+0x4
	cmp	r1, r0
	beq	.L441	@cond_branch
.L435:
	mov	r0, #0x0
.L439:
	pop	{r1}
	bx	r1
.L445:
	.align	2, 0
.L444:
	.word	gSaveBlock1
	.word	0x160d
.Lfe55:
	.size	 IsPriceDiscounted,.Lfe55-IsPriceDiscounted
	.align	2, 0
	.globl	sub_80BEE48
	.type	 sub_80BEE48,function
	.thumb_func
sub_80BEE48:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0
	bne	.L447	@cond_branch
.L456:
	mov	r0, #0x1
	b	.L454
.L447:
	mov	r1, #0x0
	ldr	r4, .L457
	ldr	r3, .L457+0x4
.L451:
	lsl	r0, r1, #0x2
	add	r0, r0, r4
	add	r0, r0, r3
	ldrb	r0, [r0]
	cmp	r0, r2
	beq	.L456	@cond_branch
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0xf
	bls	.L451	@cond_branch
	mov	r0, #0x0
.L454:
	pop	{r4}
	pop	{r1}
	bx	r1
.L458:
	.align	2, 0
.L457:
	.word	gSaveBlock1
	.word	0x2abc
.Lfe56:
	.size	 sub_80BEE48,.Lfe56-sub_80BEE48
	.align	2, 0
	.globl	sub_80BEE84
	.type	 sub_80BEE84,function
	.thumb_func
sub_80BEE84:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x10
	lsr	r7, r0, #0x10
	mov	r5, #0x0
	ldr	r0, .L469
	mov	r8, r0
.L463:
	lsl	r0, r5, #0x2
	mov	r1, r8
	add	r2, r0, r1
	ldr	r3, .L469+0x4
	add	r1, r2, r3
	ldrb	r1, [r1]
	add	r6, r0, #0
	cmp	r1, #0
	beq	.L462	@cond_branch
	ldr	r1, .L469+0x8
	add	r0, r2, r1
	ldrh	r0, [r0]
	cmp	r0, r7
	bcs	.L465	@cond_branch
	add	r0, r5, #0
	bl	sub_80BEC10
	b	.L462
.L470:
	.align	2, 0
.L469:
	.word	gSaveBlock1
	.word	0x2abc
	.word	0x2abe
.L465:
	ldr	r3, .L471
	add	r4, r2, r3
	ldrb	r0, [r4]
	cmp	r0, #0
	bne	.L467	@cond_branch
	ldr	r0, .L471+0x4
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L467	@cond_branch
	strb	r0, [r4]
.L467:
	mov	r0, r8
	add	r1, r6, r0
	ldr	r3, .L471+0x8
	add	r1, r1, r3
	ldrh	r0, [r1]
	sub	r0, r0, r7
	strh	r0, [r1]
.L462:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0xf
	bls	.L463	@cond_branch
	bl	sub_80BEC40
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L472:
	.align	2, 0
.L471:
	.word	0x2abd
	.word	0x804
	.word	0x2abe
.Lfe57:
	.size	 sub_80BEE84,.Lfe57-sub_80BEE84
	.align	2, 0
	.globl	sub_80BEF10
	.type	 sub_80BEF10,function
	.thumb_func
sub_80BEF10:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r2, r1, #0
	cmp	r1, #0x1
	beq	.L476	@cond_branch
	cmp	r1, #0x1
	bgt	.L481	@cond_branch
	cmp	r1, #0
	beq	.L475	@cond_branch
	b	.L474
.L481:
	cmp	r2, #0x2
	beq	.L477	@cond_branch
	cmp	r2, #0x3
	beq	.L478	@cond_branch
	b	.L474
.L475:
	ldr	r1, .L482
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	ldr	r1, .L482+0x4
	ldr	r1, [r1, #0x14]
	bl	StringCopy
	b	.L474
.L483:
	.align	2, 0
.L482:
	.word	gUnknown_083D1464
	.word	gUnknown_083CE048
.L476:
	ldr	r1, .L484
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	ldr	r1, .L484+0x4
	ldr	r1, [r1, #0x18]
	bl	StringCopy
	b	.L474
.L485:
	.align	2, 0
.L484:
	.word	gUnknown_083D1464
	.word	gUnknown_083CE048
.L477:
	ldr	r1, .L486
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	ldr	r1, .L486+0x4
	ldr	r1, [r1, #0x1c]
	bl	StringCopy
	b	.L474
.L487:
	.align	2, 0
.L486:
	.word	gUnknown_083D1464
	.word	gUnknown_083CE048
.L478:
	ldr	r1, .L488
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	ldr	r1, .L488+0x4
	ldr	r1, [r1, #0x20]
	bl	StringCopy
.L474:
	pop	{r0}
	bx	r0
.L489:
	.align	2, 0
.L488:
	.word	gUnknown_083D1464
	.word	gUnknown_083CE048
.Lfe58:
	.size	 sub_80BEF10,.Lfe58-sub_80BEF10
	.align	2, 0
	.globl	CopyContestCategoryToStringVar
	.type	 CopyContestCategoryToStringVar,function
	.thumb_func
CopyContestCategoryToStringVar:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r0, r1, #0x18
	cmp	r0, #0x4
	bhi	.L491	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L499
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L500:
	.align	2, 0
.L499:
	.word	.L497
	.align	2, 0
	.align	2, 0
.L497:
	.word	.L492
	.word	.L493
	.word	.L494
	.word	.L495
	.word	.L496
.L492:
	ldr	r1, .L501
	lsl	r0, r2, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	ldr	r1, .L501+0x4
	ldr	r1, [r1]
	bl	StringCopy
	b	.L491
.L502:
	.align	2, 0
.L501:
	.word	gUnknown_083D1464
	.word	gUnknown_083CE048
.L493:
	ldr	r1, .L503
	lsl	r0, r2, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	ldr	r1, .L503+0x4
	ldr	r1, [r1, #0x4]
	bl	StringCopy
	b	.L491
.L504:
	.align	2, 0
.L503:
	.word	gUnknown_083D1464
	.word	gUnknown_083CE048
.L494:
	ldr	r1, .L505
	lsl	r0, r2, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	ldr	r1, .L505+0x4
	ldr	r1, [r1, #0x8]
	bl	StringCopy
	b	.L491
.L506:
	.align	2, 0
.L505:
	.word	gUnknown_083D1464
	.word	gUnknown_083CE048
.L495:
	ldr	r1, .L507
	lsl	r0, r2, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	ldr	r1, .L507+0x4
	ldr	r1, [r1, #0xc]
	bl	StringCopy
	b	.L491
.L508:
	.align	2, 0
.L507:
	.word	gUnknown_083D1464
	.word	gUnknown_083CE048
.L496:
	ldr	r1, .L509
	lsl	r0, r2, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	ldr	r1, .L509+0x4
	ldr	r1, [r1, #0x10]
	bl	StringCopy
.L491:
	pop	{r0}
	bx	r0
.L510:
	.align	2, 0
.L509:
	.word	gUnknown_083D1464
	.word	gUnknown_083CE048
.Lfe59:
	.size	 CopyContestCategoryToStringVar,.Lfe59-CopyContestCategoryToStringVar
	.align	2, 0
	.globl	SetContestCategoryStringVarForInterview
	.type	 SetContestCategoryStringVarForInterview,function
	.thumb_func
SetContestCategoryStringVarForInterview:
	push	{lr}
	ldr	r0, .L512
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L512+0x4
	add	r0, r0, r1
	ldrb	r1, [r0, #0x13]
	lsl	r1, r1, #0x1d
	lsr	r1, r1, #0x1d
	mov	r0, #0x1
	bl	CopyContestCategoryToStringVar
	pop	{r0}
	bx	r0
.L513:
	.align	2, 0
.L512:
	.word	gSpecialVar_0x8004
	.word	gSaveBlock1+0x2738
.Lfe60:
	.size	 SetContestCategoryStringVarForInterview,.Lfe60-SetContestCategoryStringVarForInterview
	.align	2, 0
	.globl	sub_80BF088
	.type	 sub_80BF088,function
	.thumb_func
sub_80BF088:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r5, #0
	bl	sub_80BF0B8
	add	r3, r0, #0
	ldr	r0, .L515
	lsl	r4, r4, #0x2
	add	r4, r4, r0
	ldr	r0, [r4]
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	add	r1, r5, #0
	mov	r2, #0x0
	bl	ConvertIntToDecimalStringN
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L516:
	.align	2, 0
.L515:
	.word	gUnknown_083D1464
.Lfe61:
	.size	 sub_80BF088,.Lfe61-sub_80BF088
	.align	2, 0
	.globl	sub_80BF0B8
	.type	 sub_80BF0B8,function
	.thumb_func
sub_80BF0B8:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r1, #0xa
	bl	__divsi3
	cmp	r0, #0
	beq	.L535	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x64
	bl	__divsi3
	cmp	r0, #0
	bne	.L520	@cond_branch
	mov	r0, #0x2
	b	.L534
.L520:
	mov	r1, #0xfa
	lsl	r1, r1, #0x2
	add	r0, r4, #0
	bl	__divsi3
	cmp	r0, #0
	bne	.L522	@cond_branch
	mov	r0, #0x3
	b	.L534
.L522:
	ldr	r1, .L536
	add	r0, r4, #0
	bl	__divsi3
	cmp	r0, #0
	bne	.L524	@cond_branch
	mov	r0, #0x4
	b	.L534
.L537:
	.align	2, 0
.L536:
	.word	0x2710
.L524:
	ldr	r1, .L538
	add	r0, r4, #0
	bl	__divsi3
	cmp	r0, #0
	bne	.L526	@cond_branch
	mov	r0, #0x5
	b	.L534
.L539:
	.align	2, 0
.L538:
	.word	0x186a0
.L526:
	ldr	r1, .L540
	add	r0, r4, #0
	bl	__divsi3
	cmp	r0, #0
	bne	.L528	@cond_branch
	mov	r0, #0x6
	b	.L534
.L541:
	.align	2, 0
.L540:
	.word	0xf4240
.L528:
	ldr	r1, .L542
	add	r0, r4, #0
	bl	__divsi3
	cmp	r0, #0
	bne	.L530	@cond_branch
	mov	r0, #0x7
	b	.L534
.L543:
	.align	2, 0
.L542:
	.word	0x989680
.L530:
	ldr	r1, .L544
	add	r0, r4, #0
	bl	__divsi3
	cmp	r0, #0
	beq	.L532	@cond_branch
.L535:
	mov	r0, #0x1
	b	.L534
.L545:
	.align	2, 0
.L544:
	.word	0x5f5e100
.L532:
	mov	r0, #0x8
.L534:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe62:
	.size	 sub_80BF0B8,.Lfe62-sub_80BF0B8
	.align	2, 0
	.globl	sub_80BF154
	.type	 sub_80BF154,function
	.thumb_func
sub_80BF154:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	r6, r1, #0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	mov	r7, #0x0
	mov	r5, #0x0
.L550:
	lsl	r4, r5, #0x1
	add	r0, r6, #0x6
	add	r1, r0, r4
	ldrh	r0, [r1]
	cmp	r0, #0
	beq	.L549	@cond_branch
	bl	ItemId_GetPrice
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r1, r6, #0
	add	r1, r1, #0xc
	add	r1, r1, r4
	ldrh	r1, [r1]
	mul	r0, r0, r1
	add	r7, r7, r0
.L549:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x2
	bls	.L550	@cond_branch
	ldrb	r0, [r6, #0x2]
	cmp	r0, #0x1
	bne	.L553	@cond_branch
	asr	r1, r7, #0x1
	mov	r0, r8
	bl	sub_80BF088
	b	.L554
.L553:
	mov	r0, r8
	add	r1, r7, #0
	bl	sub_80BF088
.L554:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe63:
	.size	 sub_80BF154,.Lfe63-sub_80BF154
	.align	2, 0
	.globl	sub_80BF1B4
	.type	 sub_80BF1B4,function
	.thumb_func
sub_80BF1B4:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r7, .L564
	bl	GetPlayerTrainerId
	add	r5, r0, #0
	mov	r4, #0x5
.L559:
	lsl	r0, r4, #0x3
	add	r0, r0, r4
	lsl	r0, r0, #0x2
	add	r1, r0, r7
	ldrb	r0, [r1]
	cmp	r0, r6
	bne	.L558	@cond_branch
	mov	r3, #0xff
	add	r0, r5, #0
	and	r0, r0, r3
	add	r2, r1, #0
	add	r2, r2, #0x22
	ldrb	r2, [r2]
	cmp	r0, r2
	bne	.L558	@cond_branch
	lsr	r0, r5, #0x8
	and	r0, r0, r3
	add	r1, r1, #0x23
	ldrb	r1, [r1]
	cmp	r0, r1
	bne	.L558	@cond_branch
	mov	r0, #0x1
	b	.L563
.L565:
	.align	2, 0
.L564:
	.word	gSaveBlock1+0x2738
.L558:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x17
	bls	.L559	@cond_branch
	mov	r0, #0x0
.L563:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe64:
	.size	 sub_80BF1B4,.Lfe64-sub_80BF1B4
	.align	2, 0
	.globl	sub_80BF20C
	.type	 sub_80BF20C,function
	.thumb_func
sub_80BF20C:
	push	{r4, r5, r6, r7, lr}
	mov	r2, #0x0
.L570:
	add	r1, r2, #0x1
	lsl	r0, r1, #0x18
	lsr	r5, r0, #0x18
	add	r7, r1, #0
	cmp	r5, #0x2
	bhi	.L569	@cond_branch
	ldr	r6, .L578
	lsl	r0, r2, #0x2
	add	r4, r0, r6
.L574:
	lsl	r0, r5, #0x2
	add	r3, r0, r6
	ldrh	r0, [r4, #0x2]
	ldrh	r1, [r3, #0x2]
	cmp	r0, r1
	bcs	.L573	@cond_branch
	ldrh	r1, [r4]
	add	r2, r0, #0
	ldrh	r0, [r3]
	strh	r0, [r4]
	ldrh	r0, [r3, #0x2]
	strh	r0, [r4, #0x2]
	strh	r1, [r3]
	strh	r2, [r3, #0x2]
.L573:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x2
	bls	.L574	@cond_branch
.L569:
	lsl	r0, r7, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x1
	bls	.L570	@cond_branch
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L579:
	.align	2, 0
.L578:
	.word	gUnknown_02038724
.Lfe65:
	.size	 sub_80BF20C,.Lfe65-sub_80BF20C
	.align	2, 0
	.globl	sub_80BF25C
	.type	 sub_80BF25C,function
	.thumb_func
sub_80BF25C:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r1, #0x0
	ldr	r3, .L589
	ldr	r0, .L589+0x4
	add	r4, r3, r0
.L584:
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r2, r0, r3
	ldr	r6, .L589+0x4
	add	r0, r2, r6
	ldrb	r0, [r0]
	cmp	r0, r5
	bne	.L583	@cond_branch
	ldr	r3, .L589+0x8
	add	r0, r2, r3
	ldrb	r2, [r0]
	cmp	r2, #0x1
	bne	.L586	@cond_branch
	ldr	r0, .L589+0xc
	strh	r2, [r0]
	b	.L580
.L590:
	.align	2, 0
.L589:
	.word	gSaveBlock1
	.word	0x2738
	.word	0x2739
	.word	gScriptResult
.L586:
	add	r0, r4, #0
	bl	sub_80BF55C
	add	r0, r4, #0
	bl	sub_80BF588
	bl	sub_80BF6D8
	b	.L580
.L583:
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x4
	bls	.L584	@cond_branch
	bl	sub_80BF6D8
.L580:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe66:
	.size	 sub_80BF25C,.Lfe66-sub_80BF25C
	.align	2, 0
	.globl	sub_80BF2C4
	.type	 sub_80BF2C4,function
	.thumb_func
sub_80BF2C4:
	push	{lr}
	ldr	r1, .L602
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L602+0x4
	ldrh	r0, [r0]
	sub	r0, r0, #0x1
	cmp	r0, #0x6
	bhi	.L592	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L602+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L603:
	.align	2, 0
.L602:
	.word	gScriptResult
	.word	gSpecialVar_0x8005
	.word	.L600
	.align	2, 0
	.align	2, 0
.L600:
	.word	.L593
	.word	.L594
	.word	.L595
	.word	.L596
	.word	.L597
	.word	.L598
	.word	.L599
.L593:
	bl	sub_80BF334
	b	.L592
.L594:
	bl	sub_80BF3A4
	b	.L592
.L595:
	bl	sub_80BF3DC
	b	.L592
.L596:
	bl	sub_80BF46C
	b	.L592
.L597:
	bl	sub_80BF478
	b	.L592
.L598:
	bl	sub_80BF484
	b	.L592
.L599:
	bl	sub_80BF4BC
.L592:
	pop	{r0}
	bx	r0
.Lfe67:
	.size	 sub_80BF2C4,.Lfe67-sub_80BF2C4
	.align	2, 0
	.globl	sub_80BF334
	.type	 sub_80BF334,function
	.thumb_func
sub_80BF334:
	push	{r4, lr}
	mov	r0, #0x1
	bl	sub_80BF25C
	ldr	r0, .L606
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L605	@cond_branch
	ldr	r4, .L606+0x4
	bl	GetLeadMonIndex
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x64
	mul	r0, r0, r1
	ldr	r1, .L606+0x8
	add	r0, r0, r1
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	mov	r1, #0xb
	mul	r1, r1, r0
	ldr	r0, .L606+0xc
	add	r1, r1, r0
	add	r0, r4, #0
	bl	StringCopy
	ldr	r0, .L606+0x10
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L606+0x14
	add	r0, r0, r1
	add	r0, r0, #0x4
	mov	r1, #0x6
	bl	sub_80EB6FC
.L605:
	pop	{r4}
	pop	{r0}
	bx	r0
.L607:
	.align	2, 0
.L606:
	.word	gScriptResult
	.word	gStringVar1
	.word	gPlayerParty
	.word	gSpeciesNames
	.word	gUnknown_03005D38
	.word	gSaveBlock1+0x2738
.Lfe68:
	.size	 sub_80BF334,.Lfe68-sub_80BF334
	.align	2, 0
	.globl	sub_80BF3A4
	.type	 sub_80BF3A4,function
	.thumb_func
sub_80BF3A4:
	push	{lr}
	mov	r0, #0x2
	bl	sub_80BF25C
	ldr	r0, .L610
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L609	@cond_branch
	ldr	r0, .L610+0x4
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L610+0x8
	add	r0, r0, r1
	add	r0, r0, #0x4
	mov	r1, #0x6
	bl	sub_80EB6FC
.L609:
	pop	{r0}
	bx	r0
.L611:
	.align	2, 0
.L610:
	.word	gScriptResult
	.word	gUnknown_03005D38
	.word	gSaveBlock1+0x2738
.Lfe69:
	.size	 sub_80BF3A4,.Lfe69-sub_80BF3A4
	.align	2, 0
	.globl	sub_80BF3DC
	.type	 sub_80BF3DC,function
	.thumb_func
sub_80BF3DC:
	push	{r4, r5, r6, lr}
	mov	r0, #0x3
	bl	sub_80BF25C
	ldr	r0, .L614
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L613	@cond_branch
	ldr	r6, .L614+0x4
	bl	GetLeadMonIndex
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r5, #0x64
	mul	r0, r0, r5
	ldr	r4, .L614+0x8
	add	r0, r0, r4
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	mov	r1, #0xb
	mul	r1, r1, r0
	ldr	r0, .L614+0xc
	add	r1, r1, r0
	add	r0, r6, #0
	bl	StringCopy
	bl	GetLeadMonIndex
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mul	r0, r0, r5
	add	r0, r0, r4
	ldr	r4, .L614+0x10
	mov	r1, #0x2
	add	r2, r4, #0
	bl	GetMonData
	add	r0, r4, #0
	bl	StringGetEnd10
	ldr	r0, .L614+0x14
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L614+0x18
	add	r0, r0, r1
	add	r0, r0, #0x1c
	mov	r1, #0x2
	bl	sub_80EB6FC
.L613:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L615:
	.align	2, 0
.L614:
	.word	gScriptResult
	.word	gStringVar1
	.word	gPlayerParty
	.word	gSpeciesNames
	.word	gStringVar2
	.word	gUnknown_03005D38
	.word	gSaveBlock1+0x2738
.Lfe70:
	.size	 sub_80BF3DC,.Lfe70-sub_80BF3DC
	.align	2, 0
	.globl	sub_80BF46C
	.type	 sub_80BF46C,function
	.thumb_func
sub_80BF46C:
	ldr	r1, .L617
	mov	r0, #0x1
	strh	r0, [r1]
	bx	lr
.L618:
	.align	2, 0
.L617:
	.word	gScriptResult
.Lfe71:
	.size	 sub_80BF46C,.Lfe71-sub_80BF46C
	.align	2, 0
	.globl	sub_80BF478
	.type	 sub_80BF478,function
	.thumb_func
sub_80BF478:
	push	{lr}
	mov	r0, #0x5
	bl	sub_80BF25C
	pop	{r0}
	bx	r0
.Lfe72:
	.size	 sub_80BF478,.Lfe72-sub_80BF478
	.align	2, 0
	.globl	sub_80BF484
	.type	 sub_80BF484,function
	.thumb_func
sub_80BF484:
	push	{lr}
	mov	r0, #0x6
	bl	sub_80BF25C
	ldr	r0, .L622
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L621	@cond_branch
	ldr	r0, .L622+0x4
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L622+0x8
	add	r0, r0, r1
	add	r0, r0, #0x4
	mov	r1, #0x2
	bl	sub_80EB6FC
.L621:
	pop	{r0}
	bx	r0
.L623:
	.align	2, 0
.L622:
	.word	gScriptResult
	.word	gUnknown_03005D38
	.word	gSaveBlock1+0x2738
.Lfe73:
	.size	 sub_80BF484,.Lfe73-sub_80BF484
	.align	2, 0
	.globl	sub_80BF4BC
	.type	 sub_80BF4BC,function
	.thumb_func
sub_80BF4BC:
	push	{lr}
	mov	r0, #0x7
	bl	sub_80BF25C
	ldr	r0, .L626
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L625	@cond_branch
	ldr	r0, .L626+0x4
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L626+0x8
	add	r0, r0, r1
	add	r0, r0, #0x18
	mov	r1, #0x1
	bl	sub_80EB6FC
.L625:
	pop	{r0}
	bx	r0
.L627:
	.align	2, 0
.L626:
	.word	gScriptResult
	.word	gUnknown_03005D38
	.word	gSaveBlock1+0x2738
.Lfe74:
	.size	 sub_80BF4BC,.Lfe74-sub_80BF4BC
	.align	2, 0
	.globl	sub_80BF4F4
	.type	 sub_80BF4F4,function
	.thumb_func
sub_80BF4F4:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x64
	mov	r4, r0
	mul	r4, r4, r1
	ldr	r0, .L631
	add	r4, r4, r0
	ldr	r5, .L631+0x4
	add	r0, r4, #0
	mov	r1, #0x2
	add	r2, r5, #0
	bl	GetMonData
	add	r0, r4, #0
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	mov	r1, #0xb
	mul	r0, r0, r1
	ldr	r1, .L631+0x8
	add	r0, r0, r1
	add	r1, r5, #0
	bl	StringCompareWithoutExtCtrlCodes
	cmp	r0, #0
	beq	.L629	@cond_branch
	mov	r0, #0x1
	b	.L630
.L632:
	.align	2, 0
.L631:
	.word	gPlayerParty
	.word	gStringVar1
	.word	gSpeciesNames
.L629:
	mov	r0, #0x0
.L630:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe75:
	.size	 sub_80BF4F4,.Lfe75-sub_80BF4F4
	.align	2, 0
	.globl	sub_80BF544
	.type	 sub_80BF544,function
	.thumb_func
sub_80BF544:
	push	{lr}
	bl	GetLeadMonIndex
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	sub_80BF4F4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.Lfe76:
	.size	 sub_80BF544,.Lfe76-sub_80BF544
	.align	2, 0
	.globl	sub_80BF55C
	.type	 sub_80BF55C,function
	.thumb_func
sub_80BF55C:
	push	{lr}
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r2, r1, #0x3
	add	r2, r2, r1
	lsl	r2, r2, #0x2
	add	r2, r2, r0
	mov	r0, #0x0
	strb	r0, [r2]
	strb	r0, [r2, #0x1]
	mov	r1, #0x0
	add	r2, r2, #0x2
	mov	r3, #0x0
.L638:
	add	r0, r2, r1
	strb	r3, [r0]
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x21
	bls	.L638	@cond_branch
	pop	{r0}
	bx	r0
.Lfe77:
	.size	 sub_80BF55C,.Lfe77-sub_80BF55C
	.align	2, 0
	.globl	sub_80BF588
	.type	 sub_80BF588,function
	.thumb_func
sub_80BF588:
	push	{r4, r5, r6, r7, lr}
	add	r4, r0, #0
	mov	r5, #0x0
.L644:
	lsl	r0, r5, #0x3
	add	r0, r0, r5
	lsl	r1, r0, #0x2
	add	r0, r1, r4
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L643	@cond_branch
	add	r0, r5, #0x1
	b	.L665
.L649:
	lsl	r0, r2, #0x3
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r3, r0, r4
	ldrb	r0, [r3]
	cmp	r0, #0
	beq	.L648	@cond_branch
	add	r1, r1, r4
	add	r0, r3, #0
	ldmia	r0!, {r3, r6, r7}
	stmia	r1!, {r3, r6, r7}
	ldmia	r0!, {r3, r6, r7}
	stmia	r1!, {r3, r6, r7}
	ldmia	r0!, {r3, r6, r7}
	stmia	r1!, {r3, r6, r7}
	add	r0, r4, #0
	add	r1, r2, #0
	bl	sub_80BF55C
	b	.L643
.L648:
	add	r0, r2, #0x1
.L665:
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x4
	bls	.L649	@cond_branch
.L643:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x3
	bls	.L644	@cond_branch
	mov	r5, #0x5
.L656:
	lsl	r0, r5, #0x3
	add	r0, r0, r5
	lsl	r1, r0, #0x2
	add	r0, r1, r4
	ldrb	r0, [r0]
	add	r5, r5, #0x1
	cmp	r0, #0
	bne	.L655	@cond_branch
	lsl	r0, r5, #0x18
	b	.L666
.L661:
	lsl	r0, r2, #0x3
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r3, r0, r4
	ldrb	r0, [r3]
	cmp	r0, #0
	beq	.L660	@cond_branch
	add	r1, r1, r4
	add	r0, r3, #0
	ldmia	r0!, {r3, r6, r7}
	stmia	r1!, {r3, r6, r7}
	ldmia	r0!, {r3, r6, r7}
	stmia	r1!, {r3, r6, r7}
	ldmia	r0!, {r3, r6, r7}
	stmia	r1!, {r3, r6, r7}
	ldr	r0, .L667
	add	r1, r2, #0
	bl	sub_80BF55C
	b	.L655
.L668:
	.align	2, 0
.L667:
	.word	gSaveBlock1+0x2738
.L660:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
.L666:
	lsr	r2, r0, #0x18
	cmp	r2, #0x17
	bls	.L661	@cond_branch
.L655:
	lsl	r0, r5, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x17
	bls	.L656	@cond_branch
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe78:
	.size	 sub_80BF588,.Lfe78-sub_80BF588
	.align	2, 0
	.globl	sub_80BF638
	.type	 sub_80BF638,function
	.thumb_func
sub_80BF638:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r0, r1, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	sub_80BF674
	add	r5, r0, #0
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	ldr	r0, .L670
	lsl	r4, r4, #0x2
	add	r4, r4, r0
	ldr	r0, [r4]
	mov	r1, #0xb
	mul	r1, r1, r5
	ldr	r2, .L670+0x4
	add	r1, r1, r2
	bl	StringCopy
	add	r0, r5, #0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L671:
	.align	2, 0
.L670:
	.word	gUnknown_083D1464
	.word	gSpeciesNames
.Lfe79:
	.size	 sub_80BF638,.Lfe79-sub_80BF638
	.align	2, 0
	.globl	sub_80BF674
	.type	 sub_80BF674,function
	.thumb_func
sub_80BF674:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r1, .L682
	bl	__umodsi3
	add	r0, r0, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	add	r6, r4, #0
	b	.L673
.L683:
	.align	2, 0
.L682:
	.word	0x19b
.L675:
	cmp	r4, #0x1
	bne	.L676	@cond_branch
	ldr	r4, .L684
	b	.L677
.L685:
	.align	2, 0
.L684:
	.word	0x19b
.L676:
	sub	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
.L677:
	cmp	r4, r6
	bne	.L673	@cond_branch
	add	r4, r5, #0
	b	.L681
.L673:
	add	r0, r4, #0
	bl	SpeciesToNationalPokedexNum
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x0
	bl	GetSetPokedexFlag
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L675	@cond_branch
	cmp	r4, r5
	beq	.L675	@cond_branch
.L681:
	add	r0, r4, #0
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe80:
	.size	 sub_80BF674,.Lfe80-sub_80BF674
	.align	2, 0
	.globl	sub_80BF6D8
	.type	 sub_80BF6D8,function
	.thumb_func
sub_80BF6D8:
	push	{lr}
	ldr	r0, .L690
	bl	sub_80BF720
	ldr	r1, .L690+0x4
	strb	r0, [r1]
	ldr	r2, .L690+0x8
	ldrb	r1, [r1, #0]
	lsl	r1, r1, #24
	asr	r1, r1, #24
	strh	r1, [r2]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	bne	.L687	@cond_branch
	ldr	r1, .L690+0xc
	mov	r0, #0x1
	b	.L689
.L691:
	.align	2, 0
.L690:
	.word	gSaveBlock1+0x2738
	.word	gUnknown_03005D38
	.word	gSpecialVar_0x8006
	.word	gScriptResult
.L687:
	ldr	r1, .L692
	mov	r0, #0x0
.L689:
	strh	r0, [r1]
	pop	{r0}
	bx	r0
.L693:
	.align	2, 0
.L692:
	.word	gScriptResult
.Lfe81:
	.size	 sub_80BF6D8,.Lfe81-sub_80BF6D8
	.align	2, 0
	.globl	sub_80BF720
	.type	 sub_80BF720,function
	.thumb_func
sub_80BF720:
	push	{lr}
	add	r2, r0, #0
	mov	r1, #0x0
.L698:
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L697	@cond_branch
	lsl	r0, r1, #0x18
	asr	r0, r0, #0x18
	b	.L701
.L697:
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x4
	bls	.L698	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
.L701:
	pop	{r1}
	bx	r1
.Lfe82:
	.size	 sub_80BF720,.Lfe82-sub_80BF720
	.align	2, 0
	.globl	sub_80BF74C
	.type	 sub_80BF74C,function
	.thumb_func
sub_80BF74C:
	push	{lr}
	add	r2, r0, #0
	mov	r1, #0x5
.L706:
	lsl	r0, r1, #0x18
	asr	r1, r0, #0x18
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L705	@cond_branch
	add	r0, r1, #0
	b	.L709
.L705:
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	asr	r0, r0, #0x18
	cmp	r0, #0x17
	ble	.L706	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
.L709:
	pop	{r1}
	bx	r1
.Lfe83:
	.size	 sub_80BF74C,.Lfe83-sub_80BF74C
	.align	2, 0
	.globl	sub_80BF77C
	.type	 sub_80BF77C,function
	.thumb_func
sub_80BF77C:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, r4
	bls	.L711	@cond_branch
	mov	r0, #0x1
	b	.L712
.L711:
	mov	r0, #0x0
.L712:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe84:
	.size	 sub_80BF77C,.Lfe84-sub_80BF77C
	.align	2, 0
	.globl	sub_80BF79C
	.type	 sub_80BF79C,function
	.thumb_func
sub_80BF79C:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x6
	bl	__umodsi3
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	add	r5, r4, #0x4
	ldr	r6, .L720
	b	.L716
.L721:
	.align	2, 0
.L720:
	.word	0xffff
.L718:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
.L716:
	cmp	r2, #0x6
	bne	.L717	@cond_branch
	mov	r2, #0x0
.L717:
	lsl	r1, r2, #0x1
	add	r0, r5, r1
	ldrh	r0, [r0]
	add	r3, r4, #0x4
	cmp	r0, r6
	beq	.L718	@cond_branch
	ldr	r0, .L722
	add	r1, r3, r1
	ldrh	r1, [r1]
	bl	EasyChat_GetWordText
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L723:
	.align	2, 0
.L722:
	.word	gStringVar3
.Lfe85:
	.size	 sub_80BF79C,.Lfe85-sub_80BF79C
	.align	2, 0
	.globl	sub_80BF7E8
	.type	 sub_80BF7E8,function
	.thumb_func
sub_80BF7E8:
	push	{lr}
	add	r2, r0, #0
	mov	r3, #0x0
	mov	r1, #0x0
	ldrb	r0, [r2, #0x4]
	cmp	r0, #0xff
	beq	.L725	@cond_branch
	add	r2, r2, #0x4
.L728:
	add	r0, r2, r1
	ldrb	r0, [r0]
	add	r0, r3, r0
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0xa
	bhi	.L725	@cond_branch
	add	r0, r2, r1
	ldrb	r0, [r0]
	cmp	r0, #0xff
	bne	.L728	@cond_branch
.L725:
	mov	r0, #0x7
	and	r3, r3, r0
	add	r0, r3, #0
	pop	{r1}
	bx	r1
.Lfe86:
	.size	 sub_80BF7E8,.Lfe86-sub_80BF7E8
	.align	2, 0
	.globl	sub_80BF820
	.type	 sub_80BF820,function
	.thumb_func
sub_80BF820:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #0xfffffffc
	ldr	r4, [sp, #0x1c]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	lsl	r1, r1, #0x18
	lsr	r5, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r6, r2, #0x18
	lsl	r3, r3, #0x10
	lsr	r3, r3, #0x10
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	mov	r2, #0x0
	mov	r7, #0xff
.L735:
	mov	r1, sp
	add	r0, r1, r2
	ldrb	r1, [r0]
	orr	r1, r1, r7
	strb	r1, [r0]
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x2
	bls	.L735	@cond_branch
	cmp	r3, #0
	bne	.L737	@cond_branch
	ldr	r4, [sp, #0x20]
	add	r4, r4, #0xf
	add	r0, r4, #0
	bl	StringLength
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	cmp	r6, #0
	bne	.L738	@cond_branch
	mov	r0, sp
	add	r1, r4, r5
	b	.L759
.L738:
	cmp	r6, #0x1
	bne	.L740	@cond_branch
	mov	r0, sp
	sub	r1, r2, r5
	add	r1, r4, r1
	b	.L759
.L740:
	cmp	r6, #0x2
	bne	.L742	@cond_branch
	mov	r1, sp
	add	r0, r4, r5
	ldrb	r0, [r0]
	strb	r0, [r1]
	add	r0, r5, #0x1
	add	r0, r4, r0
	b	.L760
.L742:
	mov	r1, sp
	sub	r0, r2, #0x2
	sub	r0, r0, r5
	add	r0, r4, r0
	ldrb	r0, [r0]
	strb	r0, [r1]
	sub	r0, r2, #0x1
	sub	r0, r0, r5
	add	r0, r4, r0
	b	.L760
.L737:
	cmp	r3, #0x1
	bne	.L745	@cond_branch
	ldr	r4, [sp, #0x20]
	add	r4, r4, #0x4
	add	r0, r4, #0
	bl	StringLength
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	cmp	r6, #0
	bne	.L746	@cond_branch
	mov	r0, sp
	add	r1, r4, r5
	b	.L759
.L746:
	cmp	r6, #0x1
	bne	.L748	@cond_branch
	mov	r0, sp
	sub	r1, r2, r5
	add	r1, r4, r1
	b	.L759
.L748:
	cmp	r6, #0x2
	bne	.L750	@cond_branch
	mov	r1, sp
	add	r0, r4, r5
	ldrb	r0, [r0]
	strb	r0, [r1]
	add	r0, r5, #0x1
	add	r0, r4, r0
	b	.L760
.L750:
	mov	r1, sp
	sub	r0, r2, #0x2
	sub	r0, r0, r5
	add	r0, r4, r0
	ldrb	r0, [r0]
	strb	r0, [r1]
	sub	r0, r2, #0x1
	sub	r0, r0, r5
	add	r0, r4, r0
	b	.L760
.L745:
	mov	r0, #0xb
	mul	r4, r4, r0
	ldr	r7, .L763
	add	r0, r4, r7
	bl	StringLength
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	cmp	r6, #0
	bne	.L753	@cond_branch
	mov	r0, sp
	add	r1, r5, r4
	b	.L761
.L764:
	.align	2, 0
.L763:
	.word	gSpeciesNames
.L753:
	cmp	r6, #0x1
	bne	.L755	@cond_branch
	mov	r0, sp
	sub	r1, r2, r5
	add	r1, r1, r4
.L761:
	add	r1, r1, r7
.L759:
	ldrb	r1, [r1]
	strb	r1, [r0]
	b	.L744
.L755:
	cmp	r6, #0x2
	bne	.L757	@cond_branch
	mov	r1, sp
	add	r0, r5, r4
	add	r0, r0, r7
	ldrb	r0, [r0]
	strb	r0, [r1]
	add	r0, r4, #0x1
	add	r0, r5, r0
	b	.L762
.L757:
	mov	r1, sp
	sub	r0, r2, #0x2
	sub	r0, r0, r5
	add	r0, r0, r4
	add	r0, r0, r7
	ldrb	r0, [r0]
	strb	r0, [r1]
	sub	r0, r2, #0x1
	sub	r0, r0, r5
	add	r0, r0, r4
.L762:
	add	r0, r0, r7
.L760:
	ldrb	r0, [r0]
	strb	r0, [r1, #0x1]
.L744:
	ldr	r0, .L765
	mov	r2, r8
	lsl	r1, r2, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	mov	r1, sp
	bl	StringCopy
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L766:
	.align	2, 0
.L765:
	.word	gUnknown_083D1464
.Lfe87:
	.size	 sub_80BF820,.Lfe87-sub_80BF820
	.align	2, 0
	.globl	sub_80BF974
	.type	 sub_80BF974,function
	.thumb_func
sub_80BF974:
	push	{r4, lr}
	mov	r1, #0x0
	ldr	r4, .L775
	ldr	r0, .L775+0x4
	ldrh	r2, [r0]
	ldr	r3, .L775+0x8
.L771:
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	add	r0, r0, r3
	ldrb	r0, [r0]
	cmp	r0, r2
	bne	.L770	@cond_branch
	mov	r0, #0x1
	b	.L774
.L776:
	.align	2, 0
.L775:
	.word	gSaveBlock1
	.word	gSpecialVar_0x8004
	.word	0x2738
.L770:
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x4
	bls	.L771	@cond_branch
	mov	r0, #0x0
.L774:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe88:
	.size	 sub_80BF974,.Lfe88-sub_80BF974
	.align	2, 0
	.globl	sub_80BF9B4
	.type	 sub_80BF9B4,function
	.thumb_func
sub_80BF9B4:
	push	{r4, lr}
	ldr	r0, .L780
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L780+0x4
	add	r0, r0, r1
	ldr	r4, .L780+0x8
	mov	r1, #0x2
	add	r2, r4, #0
	bl	GetMonData
	ldr	r0, .L780+0xc
	add	r1, r4, #0
	bl	StringCompareWithoutExtCtrlCodes
	cmp	r0, #0
	beq	.L778	@cond_branch
	bl	sub_80BE478
	mov	r0, #0x1
	b	.L779
.L781:
	.align	2, 0
.L780:
	.word	gSpecialVar_0x8004
	.word	gPlayerParty
	.word	gStringVar1
	.word	gStringVar3
.L778:
	mov	r0, #0x0
.L779:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe89:
	.size	 sub_80BF9B4,.Lfe89-sub_80BF9B4
	.align	2, 0
	.globl	sub_80BF9F8
	.type	 sub_80BF9F8,function
	.thumb_func
sub_80BF9F8:
	push	{r4, r5, r6, lr}
	mov	r6, sl
	mov	r5, r9
	mov	r4, r8
	push	{r4, r5, r6}
	add	sp, sp, #0xfffffff8
	ldr	r0, .L783
	mov	r9, r0
	ldrh	r0, [r0]
	mov	r1, #0x64
	mov	r8, r1
	mov	r1, r8
	mul	r1, r1, r0
	add	r0, r1, #0
	ldr	r6, .L783+0x4
	add	r0, r0, r6
	ldr	r2, .L783+0x8
	mov	r1, #0x2
	bl	GetMonData
	mov	r1, r9
	ldrh	r0, [r1]
	mov	r1, r8
	mul	r1, r1, r0
	add	r0, r1, #0
	add	r0, r0, r6
	ldr	r1, .L783+0xc
	mov	sl, r1
	mov	r1, #0x2
	mov	r2, sl
	bl	GetMonData
	mov	r1, r9
	ldrh	r0, [r1]
	mov	r1, r8
	mul	r1, r1, r0
	add	r0, r1, #0
	add	r0, r0, r6
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	add	r5, r0, #0
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	mov	r1, r9
	ldrh	r0, [r1]
	mov	r1, r8
	mul	r1, r1, r0
	add	r0, r1, #0
	add	r0, r0, r6
	bl	GetMonGender
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r1, r9
	ldrh	r0, [r1]
	mov	r1, r8
	mul	r1, r1, r0
	add	r0, r1, #0
	add	r0, r0, r6
	mov	r1, #0x0
	mov	r2, #0x0
	bl	GetMonData
	str	r0, [sp]
	ldr	r0, .L783+0x10
	str	r0, [sp, #0x4]
	mov	r0, #0x3
	mov	r1, sl
	add	r2, r5, #0
	add	r3, r4, #0
	bl	DoNamingScreen
	add	sp, sp, #0x8
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L784:
	.align	2, 0
.L783:
	.word	gSpecialVar_0x8004
	.word	gPlayerParty
	.word	gStringVar3
	.word	gStringVar2
	.word	c2_080CC144
.Lfe90:
	.size	 sub_80BF9F8,.Lfe90-sub_80BF9F8
	.align	2, 0
	.globl	c2_080CC144
	.type	 c2_080CC144,function
	.thumb_func
c2_080CC144:
	push	{lr}
	ldr	r0, .L786
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L786+0x4
	add	r0, r0, r1
	ldr	r2, .L786+0x8
	mov	r1, #0x2
	bl	SetMonData
	bl	c2_exit_to_overworld_1_continue_scripts_restart_music
	pop	{r0}
	bx	r0
.L787:
	.align	2, 0
.L786:
	.word	gSpecialVar_0x8004
	.word	gPlayerParty
	.word	gStringVar2
.Lfe91:
	.size	 c2_080CC144,.Lfe91-c2_080CC144
	.align	2, 0
	.globl	sub_80BFAE0
	.type	 sub_80BFAE0,function
	.thumb_func
sub_80BFAE0:
	push	{r4, lr}
	ldr	r0, .L789
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L789+0x4
	add	r0, r0, r1
	ldr	r4, .L789+0x8
	mov	r1, #0x2
	add	r2, r4, #0
	bl	GetMonData
	add	r0, r4, #0
	bl	StringGetEnd10
	pop	{r4}
	pop	{r0}
	bx	r0
.L790:
	.align	2, 0
.L789:
	.word	gSpecialVar_0x8004
	.word	gPlayerParty
	.word	gStringVar1
.Lfe92:
	.size	 sub_80BFAE0,.Lfe92-sub_80BFAE0
	.align	2, 0
	.globl	sub_80BFB10
	.type	 sub_80BFB10,function
	.thumb_func
sub_80BFB10:
	push	{r4, lr}
	bl	GetPlayerTrainerId
	add	r4, r0, #0
	ldr	r0, .L795
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L795+0x4
	add	r0, r0, r1
	mov	r1, #0x1
	mov	r2, #0x0
	bl	GetMonData
	cmp	r4, r0
	bne	.L792	@cond_branch
	ldr	r1, .L795+0x8
	mov	r0, #0x0
	b	.L794
.L796:
	.align	2, 0
.L795:
	.word	gSpecialVar_0x8004
	.word	gPlayerParty
	.word	gScriptResult
.L792:
	ldr	r1, .L797
	mov	r0, #0x1
.L794:
	strh	r0, [r1]
	pop	{r4}
	pop	{r0}
	bx	r0
.L798:
	.align	2, 0
.L797:
	.word	gScriptResult
.Lfe93:
	.size	 sub_80BFB10,.Lfe93-sub_80BFB10
	.align	2, 0
	.globl	sub_80BFB54
	.type	 sub_80BFB54,function
	.thumb_func
sub_80BFB54:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	add	r2, r1, #0
	cmp	r1, #0
	beq	.L809	@cond_branch
	sub	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x13
	bhi	.L802	@cond_branch
	mov	r0, #0x2
	b	.L808
.L802:
	add	r0, r1, #0
	sub	r0, r0, #0x15
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x13
	bhi	.L804	@cond_branch
	mov	r0, #0x3
	b	.L808
.L804:
	add	r0, r2, #0
	sub	r0, r0, #0x29
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x13
	bls	.L806	@cond_branch
.L809:
	mov	r0, #0x0
	b	.L808
.L806:
	mov	r0, #0x4
.L808:
	pop	{r1}
	bx	r1
.Lfe94:
	.size	 sub_80BFB54,.Lfe94-sub_80BFB54
	.align	2, 0
	.globl	GetPlayerTrainerId
	.type	 GetPlayerTrainerId,function
	.thumb_func
GetPlayerTrainerId:
	ldr	r2, .L811
	ldrb	r0, [r2, #0xd]
	lsl	r0, r0, #0x18
	ldrb	r1, [r2, #0xc]
	lsl	r1, r1, #0x10
	orr	r0, r0, r1
	ldrb	r1, [r2, #0xb]
	lsl	r1, r1, #0x8
	orr	r0, r0, r1
	ldrb	r1, [r2, #0xa]
	orr	r0, r0, r1
	bx	lr
.L812:
	.align	2, 0
.L811:
	.word	gSaveBlock2
.Lfe95:
	.size	 GetPlayerTrainerId,.Lfe95-GetPlayerTrainerId
	.align	2, 0
	.globl	CheckForBigMovieOrEmergencyNewsOnTV
	.type	 CheckForBigMovieOrEmergencyNewsOnTV,function
	.thumb_func
CheckForBigMovieOrEmergencyNewsOnTV:
	push	{lr}
	ldr	r1, .L825
	mov	r0, #0x4
	ldrsb	r0, [r1, r0]
	cmp	r0, #0x1
	bne	.L823	@cond_branch
	ldr	r0, .L825+0x4
	ldrb	r0, [r0, #0x8]
	cmp	r0, #0
	bne	.L815	@cond_branch
	mov	r0, #0x5
	ldrsb	r0, [r1, r0]
	cmp	r0, #0
	beq	.L817	@cond_branch
.L823:
	mov	r0, #0x0
	b	.L821
.L826:
	.align	2, 0
.L825:
	.word	gSaveBlock1
	.word	gSaveBlock2
.L815:
	mov	r0, #0x5
	ldrsb	r0, [r1, r0]
	cmp	r0, #0x2
	bne	.L823	@cond_branch
.L817:
	ldr	r0, .L827
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L824	@cond_branch
	mov	r0, #0x83
	lsl	r0, r0, #0x4
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L820	@cond_branch
.L824:
	mov	r0, #0x1
	b	.L821
.L828:
	.align	2, 0
.L827:
	.word	0x85d
.L820:
	mov	r0, #0x2
.L821:
	pop	{r1}
	bx	r1
.Lfe96:
	.size	 CheckForBigMovieOrEmergencyNewsOnTV,.Lfe96-CheckForBigMovieOrEmergencyNewsOnTV
	.align	2, 0
	.globl	GetMomOrDadStringForTVMessage
	.type	 GetMomOrDadStringForTVMessage,function
	.thumb_func
GetMomOrDadStringForTVMessage:
	push	{r4, lr}
	ldr	r1, .L846
	mov	r0, #0x4
	ldrsb	r0, [r1, r0]
	cmp	r0, #0x1
	bne	.L830	@cond_branch
	ldr	r0, .L846+0x4
	ldrb	r0, [r0, #0x8]
	cmp	r0, #0
	bne	.L831	@cond_branch
	mov	r0, #0x5
	ldrsb	r0, [r1, r0]
	cmp	r0, #0
	bne	.L830	@cond_branch
	ldr	r0, .L846+0x8
	ldr	r1, .L846+0xc
	bl	StringCopy
	ldr	r0, .L846+0x10
	mov	r1, #0x1
	bl	VarSet
	b	.L830
.L847:
	.align	2, 0
.L846:
	.word	gSaveBlock1
	.word	gSaveBlock2
	.word	gStringVar1
	.word	gOtherText_Mom
	.word	0x4003
.L831:
	mov	r0, #0x5
	ldrsb	r0, [r1, r0]
	cmp	r0, #0x2
	bne	.L830	@cond_branch
	ldr	r0, .L848
	ldr	r1, .L848+0x4
	bl	StringCopy
	ldr	r0, .L848+0x8
	mov	r1, #0x1
	bl	VarSet
.L830:
	ldr	r4, .L848+0x8
	add	r0, r4, #0
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x1
	beq	.L845	@cond_branch
	add	r0, r4, #0
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x2
	beq	.L840	@cond_branch
	add	r0, r4, #0
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x2
	bls	.L839	@cond_branch
	add	r0, r4, #0
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L840	@cond_branch
.L845:
	ldr	r0, .L848
	ldr	r1, .L848+0x4
	bl	StringCopy
	b	.L836
.L849:
	.align	2, 0
.L848:
	.word	gStringVar1
	.word	gOtherText_Mom
	.word	0x4003
.L840:
	ldr	r0, .L850
	ldr	r1, .L850+0x4
	bl	StringCopy
	b	.L836
.L851:
	.align	2, 0
.L850:
	.word	gStringVar1
	.word	gOtherText_Dad
.L839:
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L843	@cond_branch
	ldr	r0, .L852
	ldr	r1, .L852+0x4
	bl	StringCopy
	add	r0, r4, #0
	mov	r1, #0x1
	bl	VarSet
	b	.L836
.L853:
	.align	2, 0
.L852:
	.word	gStringVar1
	.word	gOtherText_Mom
.L843:
	ldr	r0, .L854
	ldr	r1, .L854+0x4
	bl	StringCopy
	add	r0, r4, #0
	mov	r1, #0x2
	bl	VarSet
.L836:
	pop	{r4}
	pop	{r0}
	bx	r0
.L855:
	.align	2, 0
.L854:
	.word	gStringVar1
	.word	gOtherText_Dad
.Lfe97:
	.size	 GetMomOrDadStringForTVMessage,.Lfe97-GetMomOrDadStringForTVMessage
	.align	2, 0
	.globl	sub_80BFD20
	.type	 sub_80BFD20,function
	.thumb_func
sub_80BFD20:
	push	{lr}
	ldr	r0, .L857
	mov	r1, #0x0
	bl	VarSet
	ldr	r0, .L857+0x4
	ldrb	r1, [r0, #0x5]
	ldrb	r2, [r0, #0x4]
	mov	r0, #0x5
	bl	RemoveFieldObjectByLocalIdAndMap
	pop	{r0}
	bx	r0
.L858:
	.align	2, 0
.L857:
	.word	0x40bc
	.word	gSaveBlock1
.Lfe98:
	.size	 sub_80BFD20,.Lfe98-sub_80BFD20
	.align	2, 0
	.globl	sub_80BFD44
	.type	 sub_80BFD44,function
	.thumb_func
sub_80BFD44:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	mov	r8, r0
	add	r7, r1, #0
	lsl	r2, r2, #0x18
	lsr	r6, r2, #0x18
	mov	r4, #0x0
.L863:
	lsl	r0, r4, #0x3
	sub	r0, r0, r4
	lsl	r0, r0, #0x5
	add	r0, r0, r4
	lsl	r0, r0, #0x2
	ldr	r5, .L874
	add	r0, r0, r5
	mov	r1, r4
	mul	r1, r1, r7
	add	r1, r1, r8
	mov	r2, #0xe1
	lsl	r2, r2, #0x2
	bl	memcpy
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x3
	bls	.L863	@cond_branch
	add	r4, r5, #0
	cmp	r6, #0x1
	beq	.L867	@cond_branch
	cmp	r6, #0x1
	bgt	.L872	@cond_branch
	cmp	r6, #0
	beq	.L866	@cond_branch
	b	.L865
.L875:
	.align	2, 0
.L874:
	.word	gSharedMem+0x7000
.L872:
	cmp	r6, #0x2
	beq	.L868	@cond_branch
	cmp	r6, #0x3
	beq	.L869	@cond_branch
	b	.L865
.L866:
	ldr	r0, .L876
	mov	r2, #0xe1
	lsl	r2, r2, #0x2
	add	r1, r4, r2
	mov	r3, #0xe1
	lsl	r3, r3, #0x3
	add	r2, r4, r3
	ldr	r5, .L876+0x4
	add	r3, r4, r5
	bl	sub_80BFE24
	b	.L865
.L877:
	.align	2, 0
.L876:
	.word	gSaveBlock1+0x2738
	.word	0xa8c
.L867:
	ldr	r1, .L878
	mov	r0, #0xe1
	lsl	r0, r0, #0x3
	add	r2, r4, r0
	b	.L873
.L879:
	.align	2, 0
.L878:
	.word	gSaveBlock1+0x2738
.L868:
	mov	r0, #0xe1
	lsl	r0, r0, #0x2
	add	r1, r4, r0
	ldr	r2, .L880
.L873:
	ldr	r5, .L880+0x4
	add	r3, r4, r5
	add	r0, r4, #0
	bl	sub_80BFE24
	b	.L865
.L881:
	.align	2, 0
.L880:
	.word	gSaveBlock1+0x2738
	.word	0xa8c
.L869:
	mov	r0, #0xe1
	lsl	r0, r0, #0x2
	add	r1, r5, r0
	mov	r3, #0xe1
	lsl	r3, r3, #0x3
	add	r2, r5, r3
	ldr	r3, .L882
	add	r0, r5, #0
	bl	sub_80BFE24
.L865:
	ldr	r4, .L882
	add	r0, r4, #0
	bl	sub_80BF588
	bl	sub_80C04A0
	add	r0, r4, #0
	bl	sub_80BF588
	bl	sub_80C01D4
	bl	sub_80C0408
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L883:
	.align	2, 0
.L882:
	.word	gSaveBlock1+0x2738
.Lfe99:
	.size	 sub_80BFD44,.Lfe99-sub_80BFD44
	.align	2, 0
	.globl	sub_80BFE24
	.type	 sub_80BFE24,function
	.thumb_func
sub_80BFE24:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #0xffffffe0
	str	r0, [sp, #0x10]
	str	r1, [sp, #0x14]
	str	r2, [sp, #0x18]
	str	r3, [sp, #0x1c]
	add	r0, sp, #0x10
	str	r0, [sp]
	add	r0, sp, #0x14
	str	r0, [sp, #0x4]
	add	r0, sp, #0x18
	str	r0, [sp, #0x8]
	add	r0, sp, #0x1c
	str	r0, [sp, #0xc]
	bl	GetLinkPlayerCount
	ldr	r1, .L905
	strb	r0, [r1]
.L887:
	mov	r6, #0x0
	ldr	r0, .L905
	ldrb	r1, [r0]
	cmp	r6, r1
	bcs	.L887	@cond_branch
	mov	sl, r0
.L891:
	cmp	r6, #0
	bne	.L892	@cond_branch
	ldr	r2, .L905+0x4
	strb	r6, [r2]
.L892:
	lsl	r4, r6, #0x2
	mov	r3, sp
	add	r0, r3, r4
	ldr	r0, [r0]
	ldr	r0, [r0]
	bl	sub_80C019C
	ldr	r1, .L905+0x8
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	add	r7, r4, #0
	cmp	r0, r1
	bne	.L893	@cond_branch
	ldr	r1, .L905+0x4
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r2, sl
	ldrb	r2, [r2]
	cmp	r0, r2
	beq	.L884	@cond_branch
	add	r6, r6, #0x1
	mov	r9, r6
	b	.L890
.L906:
	.align	2, 0
.L905:
	.word	gUnknown_03000720
	.word	gUnknown_020387E4
	.word	gUnknown_03000722
.L893:
	mov	r5, #0x0
	mov	r3, sl
	ldrb	r0, [r3]
	sub	r0, r0, #0x1
	add	r2, r6, #0x1
	mov	r9, r2
	cmp	r5, r0
	bge	.L897	@cond_branch
	ldr	r3, .L907
	mov	r8, r3
.L899:
	add	r0, r6, r5
	add	r4, r0, #0x1
	mov	r0, r8
	ldrb	r1, [r0]
	add	r0, r4, #0
	bl	__modsi3
	lsl	r0, r0, #0x2
	add	r0, r0, sp
	ldr	r0, [r0]
	ldr	r0, [r0]
	bl	sub_80BF74C
	ldr	r1, .L907+0x4
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L898	@cond_branch
	mov	r2, r8
	ldrb	r1, [r2]
	add	r0, r4, #0
	bl	__modsi3
	add	r2, r0, #0
	lsl	r0, r2, #0x2
	add	r0, r0, sp
	ldr	r0, [r0]
	mov	r3, sp
	add	r1, r3, r7
	ldr	r1, [r1]
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	bl	sub_80BFF68
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L897	@cond_branch
.L898:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r1, r8
	ldrb	r0, [r1]
	sub	r0, r0, #0x1
	cmp	r5, r0
	blt	.L899	@cond_branch
.L897:
	mov	r2, sl
	ldrb	r0, [r2]
	sub	r0, r0, #0x1
	cmp	r5, r0
	bne	.L890	@cond_branch
	mov	r3, sp
	add	r0, r3, r7
	ldr	r0, [r0]
	ldr	r0, [r0]
	ldr	r1, .L907+0x8
	ldrb	r1, [r1]
	bl	sub_80BF55C
.L890:
	mov	r1, r9
	lsl	r0, r1, #0x18
	lsr	r6, r0, #0x18
	mov	r2, sl
	ldrb	r2, [r2]
	cmp	r6, r2
	bcc	.L891	@cond_branch
	b	.L887
.L908:
	.align	2, 0
.L907:
	.word	gUnknown_03000720
	.word	gUnknown_03005D38
	.word	gUnknown_03000722
.L884:
	add	sp, sp, #0x20
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe100:
	.size	 sub_80BFE24,.Lfe100-sub_80BFE24
	.align	2, 0
	.globl	sub_80BFF68
	.type	 sub_80BFF68,function
	.thumb_func
sub_80BFF68:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #0xfffffffc
	lsl	r2, r2, #0x18
	lsr	r7, r2, #0x18
	ldr	r4, [r0]
	ldr	r6, [r1]
	mov	r5, #0x0
	ldr	r2, .L921
	mov	r1, #0x0
	ldrsb	r1, [r2, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	ldrb	r0, [r0]
	str	r2, [sp]
	bl	sub_80BFB54
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r1, r0, #0
	ldr	r2, [sp]
	cmp	r0, #0x3
	beq	.L912	@cond_branch
	cmp	r0, #0x3
	bgt	.L916	@cond_branch
	cmp	r0, #0x2
	beq	.L911	@cond_branch
	b	.L910
.L922:
	.align	2, 0
.L921:
	.word	gUnknown_03000722
.L916:
	cmp	r1, #0x4
	beq	.L913	@cond_branch
	b	.L910
.L911:
	ldr	r0, .L923
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r4, r0
	ldrb	r2, [r2, #0]
	lsl	r2, r2, #24
	asr	r2, r2, #24
	lsl	r1, r2, #0x3
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r6, r1
	add	r2, r7, #0
	bl	sub_80C004C
	b	.L920
.L924:
	.align	2, 0
.L923:
	.word	gUnknown_03005D38
.L912:
	ldr	r0, .L925
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r4, r0
	ldrb	r2, [r2, #0]
	lsl	r2, r2, #24
	asr	r2, r2, #24
	lsl	r1, r2, #0x3
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r6, r1
	add	r2, r7, #0
	bl	sub_80C00B4
	b	.L920
.L926:
	.align	2, 0
.L925:
	.word	gUnknown_03005D38
.L913:
	ldr	r0, .L927
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r4, r0
	ldrb	r2, [r2, #0]
	lsl	r2, r2, #24
	asr	r2, r2, #24
	lsl	r1, r2, #0x3
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r6, r1
	add	r2, r7, #0
	bl	sub_80C0134
.L920:
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
.L910:
	cmp	r5, #0x1
	beq	.L917	@cond_branch
	mov	r0, #0x0
	b	.L919
.L928:
	.align	2, 0
.L927:
	.word	gUnknown_03005D38
.L917:
	ldr	r0, .L929
	ldrb	r1, [r0]
	add	r0, r6, #0
	bl	sub_80BF55C
	mov	r0, #0x1
.L919:
	add	sp, sp, #0x4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L930:
	.align	2, 0
.L929:
	.word	gUnknown_03000722
.Lfe101:
	.size	 sub_80BFF68,.Lfe101-sub_80BFF68
	.align	2, 0
	.globl	sub_80C004C
	.type	 sub_80C004C,function
	.thumb_func
sub_80C004C:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	add	r4, r1, #0
	lsl	r0, r2, #0x18
	lsr	r0, r0, #0x18
	bl	GetLinkPlayerTrainerId
	add	r5, r0, #0
	mov	r2, #0xff
	and	r0, r0, r2
	add	r1, r4, #0
	add	r1, r1, #0x22
	ldrb	r1, [r1]
	cmp	r0, r1
	bne	.L932	@cond_branch
	lsr	r0, r5, #0x8
	and	r0, r0, r2
	add	r1, r4, #0
	add	r1, r1, #0x23
	ldrb	r1, [r1]
	cmp	r0, r1
	bne	.L932	@cond_branch
	mov	r0, #0x0
	b	.L933
.L932:
	add	r1, r4, #0
	add	r1, r1, #0x20
	ldrb	r0, [r1]
	add	r2, r4, #0
	add	r2, r2, #0x22
	strb	r0, [r2]
	add	r3, r4, #0
	add	r3, r3, #0x21
	ldrb	r0, [r3]
	add	r2, r2, #0x1
	strb	r0, [r2]
	strb	r5, [r1]
	lsr	r0, r5, #0x8
	strb	r0, [r3]
	add	r1, r6, #0
	add	r0, r4, #0
	ldmia	r0!, {r2, r3, r4}
	stmia	r1!, {r2, r3, r4}
	ldmia	r0!, {r2, r3, r4}
	stmia	r1!, {r2, r3, r4}
	ldmia	r0!, {r2, r3, r4}
	stmia	r1!, {r2, r3, r4}
	mov	r0, #0x1
	strb	r0, [r6, #0x1]
.L933:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe102:
	.size	 sub_80C004C,.Lfe102-sub_80C004C
	.align	2, 0
	.globl	sub_80C00B4
	.type	 sub_80C00B4,function
	.thumb_func
sub_80C00B4:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	add	r4, r1, #0
	lsl	r0, r2, #0x18
	lsr	r0, r0, #0x18
	bl	GetLinkPlayerTrainerId
	add	r2, r0, #0
	mov	r3, #0xff
	and	r0, r0, r3
	add	r1, r4, #0
	add	r1, r1, #0x20
	ldrb	r1, [r1]
	cmp	r0, r1
	bne	.L935	@cond_branch
	lsr	r0, r2, #0x8
	and	r0, r0, r3
	add	r1, r4, #0
	add	r1, r1, #0x21
	ldrb	r1, [r1]
	cmp	r0, r1
	beq	.L938	@cond_branch
.L935:
	mov	r3, #0xff
	add	r0, r2, #0
	and	r0, r0, r3
	add	r1, r4, #0
	add	r1, r1, #0x22
	lsr	r5, r2, #0x8
	ldrb	r1, [r1]
	cmp	r0, r1
	bne	.L936	@cond_branch
	add	r0, r5, #0
	and	r0, r0, r3
	add	r1, r4, #0
	add	r1, r1, #0x23
	ldrb	r1, [r1]
	cmp	r0, r1
	bne	.L936	@cond_branch
.L938:
	mov	r0, #0x0
	b	.L937
.L936:
	ldrb	r1, [r4, #0x1e]
	add	r0, r4, #0
	add	r0, r0, #0x20
	strb	r1, [r0]
	ldrb	r0, [r4, #0x1f]
	add	r1, r4, #0
	add	r1, r1, #0x21
	strb	r0, [r1]
	strb	r2, [r4, #0x1e]
	strb	r5, [r4, #0x1f]
	add	r1, r6, #0
	add	r0, r4, #0
	ldmia	r0!, {r2, r3, r4}
	stmia	r1!, {r2, r3, r4}
	ldmia	r0!, {r2, r3, r4}
	stmia	r1!, {r2, r3, r4}
	ldmia	r0!, {r2, r3, r4}
	stmia	r1!, {r2, r3, r4}
	mov	r0, #0x1
	strb	r0, [r6, #0x1]
.L937:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe103:
	.size	 sub_80C00B4,.Lfe103-sub_80C00B4
	.align	2, 0
	.globl	sub_80C0134
	.type	 sub_80C0134,function
	.thumb_func
sub_80C0134:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	add	r4, r1, #0
	lsl	r0, r2, #0x18
	lsr	r0, r0, #0x18
	bl	GetLinkPlayerTrainerId
	add	r5, r0, #0
	mov	r2, #0xff
	and	r0, r0, r2
	add	r1, r4, #0
	add	r1, r1, #0x22
	ldrb	r1, [r1]
	cmp	r0, r1
	bne	.L940	@cond_branch
	lsr	r0, r5, #0x8
	and	r0, r0, r2
	add	r1, r4, #0
	add	r1, r1, #0x23
	ldrb	r1, [r1]
	cmp	r0, r1
	bne	.L940	@cond_branch
	mov	r0, #0x0
	b	.L941
.L940:
	add	r1, r4, #0
	add	r1, r1, #0x20
	ldrb	r0, [r1]
	add	r2, r4, #0
	add	r2, r2, #0x22
	strb	r0, [r2]
	add	r3, r4, #0
	add	r3, r3, #0x21
	ldrb	r0, [r3]
	add	r2, r2, #0x1
	strb	r0, [r2]
	strb	r5, [r1]
	lsr	r0, r5, #0x8
	strb	r0, [r3]
	add	r1, r6, #0
	add	r0, r4, #0
	ldmia	r0!, {r2, r3, r4}
	stmia	r1!, {r2, r3, r4}
	ldmia	r0!, {r2, r3, r4}
	stmia	r1!, {r2, r3, r4}
	ldmia	r0!, {r2, r3, r4}
	stmia	r1!, {r2, r3, r4}
	mov	r0, #0x1
	strb	r0, [r6, #0x1]
	strh	r0, [r6, #0x16]
.L941:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe104:
	.size	 sub_80C0134,.Lfe104-sub_80C0134
	.align	2, 0
	.globl	sub_80C019C
	.type	 sub_80C019C,function
	.thumb_func
sub_80C019C:
	push	{lr}
	add	r3, r0, #0
	mov	r2, #0x0
.L946:
	lsl	r0, r2, #0x3
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r1, r0, r3
	ldrb	r0, [r1, #0x1]
	cmp	r0, #0
	bne	.L945	@cond_branch
	ldrb	r0, [r1]
	sub	r0, r0, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3b
	bhi	.L945	@cond_branch
	lsl	r0, r2, #0x18
	asr	r0, r0, #0x18
	b	.L949
.L945:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x17
	bls	.L946	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
.L949:
	pop	{r1}
	bx	r1
.Lfe105:
	.size	 sub_80C019C,.Lfe105-sub_80C019C
	.align	2, 0
	.globl	sub_80C01D4
	.type	 sub_80C01D4,function
	.thumb_func
sub_80C01D4:
	.syntax unified
    push {r4-r6,lr}
    movs r6, 0
_080C01D8:
    ldr r0, _080C01F8 @ =gSaveBlock1
    lsls r2, r6, 3
    adds r1, r2, r6
    lsls r1, 2
    adds r1, r0
    ldr r0, _080C01FC @ =0x00002738
    adds r1, r0
    ldrb r0, [r1]
    cmp r0, 0x29
    bls _080C01EE
    b _default
_080C01EE:
    lsls r0, 2
    ldr r1, _080C0200 @ =_080C0204
    adds r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
_080C01F8: .4byte gSaveBlock1
_080C01FC: .4byte 0x00002738
_080C0200: .4byte _080C0204
    .align 2, 0
_080C0204:
    .4byte _break
    .4byte _fanclubLetter @ TVSHOW_FAN_CLUB_LETTER
    .4byte _break    @ TVSHOW_RECENT_HAPPENINGS
    .4byte _fanclubOpinions @ TVSHOW_PKMN_FAN_CLUB_OPINIONS
    .4byte _showtype4 @ TVSHOW_UNKN_SHOWTYPE_04
    .4byte _nameRater @ TVSHOW_NAME_RATER_SHOW
    .4byte _bravoTrainerContest @ TVSHOW_BRAVO_TRAINER_POKEMON_PROFILE
    .4byte _bravoTrainerTower @ TVSHOW_BRAVO_TRAINER_BATTLE_TOWER_PROFILE
    .4byte _default
    .4byte _default
    .4byte _default
    .4byte _default
    .4byte _default
    .4byte _default
    .4byte _default
    .4byte _default
    .4byte _default
    .4byte _default
    .4byte _default
    .4byte _default
    .4byte _default
    .4byte _pokemonTodayS @ TVSHOW_POKEMON_TODAY_CAUGHT
    .4byte _break    @ TVSHOW_SMART_SHOPPER
    .4byte _pokemonTodayF @ TVSHOW_POKEMON_TODAY_FAILED
    .4byte _fishing @ TVSHOW_FISHING_ADVICE
    .4byte _worldOfMasters @ TVSHOW_WORLD_OF_MASTERS
    .4byte _default
    .4byte _default
    .4byte _default
    .4byte _default
    .4byte _default
    .4byte _default
    .4byte _default
    .4byte _default
    .4byte _default
    .4byte _default
    .4byte _default
    .4byte _default
    .4byte _default
    .4byte _default
    .4byte _default
    .4byte _break    @ TVSHOW_MASS_OUTBREAK
_fanclubLetter:
    adds r0, r2, r6
    lsls r0, 2
    ldr r1, _080C02B8 @ =gSaveBlock1 + 0x2738
    adds r0, r1
    ldrh r0, [r0, 0x2]
    b _checkSpecies1 @ sub_80C03C8(r0, i)
    .align 2, 0
_080C02B8: .4byte gSaveBlock1 + 0x2738
_fanclubOpinions:
    adds r0, r2, r6
    lsls r0, 2
    ldr r1, _080C02C8 @ =gSaveBlock1 + 0x2738
    adds r0, r1
    ldrh r0, [r0, 0x2]
    b _checkSpecies1 @ sub_80C03C8(r0, i)
    .align 2, 0
_080C02C8: .4byte gSaveBlock1 + 0x2738
_showtype4:
    adds r0, r2, r6
    lsls r0, 2
    ldr r1, _080C02D8 @ =gSaveBlock1 + 0x2738
    adds r0, r1
    ldrh r0, [r0, 0x6]
    b _checkSpecies1 @ sub_80C03C8(r0, i)
    .align 2, 0
_080C02D8: .4byte gSaveBlock1 + 0x2738
_nameRater:
    adds r4, r2, r6
    lsls r4, 2
    ldr r0, _080C02F4 @ =gSaveBlock1 + 0x2738
    adds r4, r0
    ldrh r0, [r4, 0x2]
    lsls r5, r6, 24
    lsrs r5, 24
    adds r1, r5, 0
    bl sub_80C03C8
    ldrh r0, [r4, 0x1C]
    b _checkSpecies2 @ sub_80C03C8(r0, i)
    .align 2, 0
_080C02F4: .4byte gSaveBlock1 + 0x2738
_bravoTrainerContest:
    adds r0, r2, r6
    lsls r0, 2
    ldr r1, _080C0304 @ =gSaveBlock1 + 0x2738
    adds r0, r1
    ldrh r0, [r0, 0x2]
    b _checkSpecies1 @ sub_80C03C8(r0, i)
    .align 2, 0
_080C0304: .4byte gSaveBlock1 + 0x2738
_bravoTrainerTower:
    adds r4, r2, r6
    lsls r4, 2
    ldr r0, _080C0320 @ =gSaveBlock1 + 0x2738
    adds r4, r0
    ldrh r0, [r4, 0xA]
    lsls r5, r6, 24
    lsrs r5, 24
    adds r1, r5, 0
    bl sub_80C03C8
    ldrh r0, [r4, 0x14]
    b _checkSpecies2 @ sub_80C03C8(r0, i)
    .align 2, 0
_080C0320: .4byte gSaveBlock1 + 0x2738
_pokemonTodayS:
    adds r0, r2, r6
    lsls r0, 2
    ldr r1, _080C0330 @ =gSaveBlock1 + 0x2738
    adds r0, r1
    ldrh r0, [r0, 0x10]
    b _checkSpecies1 @ sub_80C03C8(r0, i)
    .align 2, 0
_080C0330: .4byte gSaveBlock1 + 0x2738
_pokemonTodayF:
    adds r4, r2, r6
    lsls r4, 2
    ldr r0, _080C034C @ =gSaveBlock1 + 0x2738
    adds r4, r0
    ldrh r0, [r4, 0xC]
    lsls r5, r6, 24
    lsrs r5, 24
    adds r1, r5, 0
    bl sub_80C03C8
    ldrh r0, [r4, 0xE]
    b _checkSpecies2 @ sub_80C03C8(r0, i)
    .align 2, 0
_080C034C: .4byte gSaveBlock1 + 0x2738
_fishing:
    adds r0, r2, r6
    lsls r0, 2
    ldr r1, _080C0364 @ =gSaveBlock1 + 0x2738
    adds r0, r1
    ldrh r0, [r0, 0x4]
_checkSpecies1:
    lsls r1, r6, 24
    lsrs r1, 24
    bl sub_80C03C8
    b _break
    .align 2, 0
_080C0364: .4byte gSaveBlock1 + 0x2738
_worldOfMasters:
    adds r4, r2, r6
    lsls r4, 2
    ldr r0, _080C0388 @ =gSaveBlock1 + 0x2738
    adds r4, r0
    ldrh r0, [r4, 0x8]
    lsls r5, r6, 24
    lsrs r5, 24
    adds r1, r5, 0
    bl sub_80C03C8
    ldrh r0, [r4, 0x4]
_checkSpecies2:
    adds r1, r5, 0
    bl sub_80C03C8
    b _break
    .align 2, 0
_080C0388: .4byte gSaveBlock1 + 0x2738
_default:
    lsls r0, r6, 24
    lsrs r0, 24
    bl sub_80C03A8
_break:
    adds r0, r6, 0x1
    lsls r0, 16
    lsrs r6, r0, 16
    cmp r6, 0x17
    bhi _080C03A0
    b _080C01D8
_080C03A0:
    pop {r4-r6}
    pop {r0}
    bx r0
.syntax divided

	.code	16
.Lfe106:
	.size	 sub_80C01D4,.Lfe106-sub_80C01D4
	.align	2, 0
	.globl	sub_80C03A8
	.type	 sub_80C03A8,function
	.thumb_func
sub_80C03A8:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L952
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r0, .L952+0x4
	add	r1, r1, r0
	mov	r0, #0x0
	strb	r0, [r1]
	bx	lr
.L953:
	.align	2, 0
.L952:
	.word	gSaveBlock1
	.word	0x2739
.Lfe107:
	.size	 sub_80C03A8,.Lfe107-sub_80C03A8
	.align	2, 0
	.globl	sub_80C03C8
	.type	 sub_80C03C8,function
	.thumb_func
sub_80C03C8:
	push	{r4, lr}
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r1, r1, #0x18
	lsr	r4, r1, #0x18
	bl	SpeciesToNationalPokedexNum
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x0
	bl	GetSetPokedexFlag
	lsl	r0, r0, #0x18
	asr	r2, r0, #0x18
	cmp	r2, #0
	bne	.L955	@cond_branch
	ldr	r1, .L956
	lsl	r0, r4, #0x3
	add	r0, r0, r4
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, .L956+0x4
	add	r0, r0, r1
	strb	r2, [r0]
.L955:
	pop	{r4}
	pop	{r0}
	bx	r0
.L957:
	.align	2, 0
.L956:
	.word	gSaveBlock1
	.word	0x2739
.Lfe108:
	.size	 sub_80C03C8,.Lfe108-sub_80C03C8
	.align	2, 0
	.globl	sub_80C0408
	.type	 sub_80C0408,function
	.thumb_func
sub_80C0408:
	push	{r4, r5, r6, lr}
	ldr	r0, .L969
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L958	@cond_branch
	mov	r2, #0x0
	ldr	r6, .L969+0x4
	ldr	r4, .L969+0x8
	mov	r3, #0x0
	ldr	r5, .L969+0xc
.L963:
	lsl	r0, r2, #0x3
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r1, r0, r6
	add	r0, r1, r5
	ldrb	r0, [r0]
	cmp	r0, #0x7
	beq	.L968	@cond_branch
	cmp	r0, #0x29
	bne	.L962	@cond_branch
.L968:
	add	r0, r1, r4
	strb	r3, [r0]
.L962:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	cmp	r2, #0x17
	bls	.L963	@cond_branch
.L958:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L970:
	.align	2, 0
.L969:
	.word	0x804
	.word	gSaveBlock1
	.word	0x2739
	.word	0x2738
.Lfe109:
	.size	 sub_80C0408,.Lfe109-sub_80C0408
	.align	2, 0
	.globl	sub_80C045C
	.type	 sub_80C045C,function
	.thumb_func
sub_80C045C:
	push	{r4, r5, r6, lr}
	mov	r5, #0x0
	ldr	r6, .L978
.L975:
	lsl	r0, r5, #0x3
	add	r0, r0, r5
	lsl	r0, r0, #0x2
	add	r4, r0, r6
	ldr	r1, .L978+0x4
	add	r0, r4, r1
	ldrb	r0, [r0]
	bl	sub_80BFB54
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x2
	bne	.L974	@cond_branch
	ldr	r0, .L978+0x8
	add	r1, r4, r0
	mov	r0, #0x0
	strb	r0, [r1]
.L974:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x4
	bls	.L975	@cond_branch
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L979:
	.align	2, 0
.L978:
	.word	gSaveBlock1
	.word	0x2738
	.word	0x2739
.Lfe110:
	.size	 sub_80C045C,.Lfe110-sub_80C045C
	.align	2, 0
	.globl	sub_80C04A0
	.type	 sub_80C04A0,function
	.thumb_func
sub_80C04A0:
	push	{r4, r5, lr}
	mov	r3, #0x0
	mov	r2, #0x5
	ldr	r5, .L992
	ldr	r4, .L992+0x4
.L984:
	lsl	r0, r2, #0x18
	asr	r1, r0, #0x18
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	add	r0, r0, r4
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L983	@cond_branch
	lsl	r0, r3, #0x18
	mov	r2, #0x80
	lsl	r2, r2, #0x11
	add	r0, r0, r2
	lsr	r3, r0, #0x18
.L983:
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	asr	r0, r0, #0x18
	cmp	r0, #0x17
	ble	.L984	@cond_branch
	mov	r2, #0x0
	lsl	r0, r3, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x5
	sub	r0, r1, r0
	cmp	r2, r0
	bge	.L988	@cond_branch
	add	r5, r0, #0
.L990:
	lsl	r1, r2, #0x18
	asr	r4, r1, #0x18
	mov	r0, #0xa0
	lsl	r0, r0, #0x13
	add	r1, r1, r0
	lsr	r1, r1, #0x18
	ldr	r0, .L992+0x8
	bl	sub_80BF55C
	add	r4, r4, #0x1
	lsl	r4, r4, #0x18
	lsr	r2, r4, #0x18
	asr	r4, r4, #0x18
	cmp	r4, r5
	blt	.L990	@cond_branch
.L988:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L993:
	.align	2, 0
.L992:
	.word	gSaveBlock1
	.word	0x2738
	.word	gSaveBlock1+0x2738
.Lfe111:
	.size	 sub_80C04A0,.Lfe111-sub_80C04A0
	.align	2, 0
	.globl	sub_80C0514
	.type	 sub_80C0514,function
	.thumb_func
sub_80C0514:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	mov	r8, r0
	add	r7, r1, #0
	lsl	r2, r2, #0x18
	lsr	r5, r2, #0x18
	mov	r4, #0x0
.L998:
	lsl	r0, r4, #0x6
	ldr	r6, .L1009
	add	r0, r0, r6
	mov	r1, r4
	mul	r1, r1, r7
	add	r1, r1, r8
	mov	r2, #0x40
	bl	memcpy
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x3
	bls	.L998	@cond_branch
	add	r4, r6, #0
	cmp	r5, #0x1
	beq	.L1002	@cond_branch
	cmp	r5, #0x1
	bgt	.L1007	@cond_branch
	cmp	r5, #0
	beq	.L1001	@cond_branch
	b	.L1000
.L1010:
	.align	2, 0
.L1009:
	.word	gSharedMem+0x7000
.L1007:
	cmp	r5, #0x2
	beq	.L1003	@cond_branch
	cmp	r5, #0x3
	beq	.L1004	@cond_branch
	b	.L1000
.L1001:
	ldr	r0, .L1011
	add	r1, r4, #0
	add	r1, r1, #0x40
	add	r2, r4, #0
	add	r2, r2, #0x80
	add	r3, r4, #0
	add	r3, r3, #0xc0
	bl	sub_80C05C4
	b	.L1000
.L1012:
	.align	2, 0
.L1011:
	.word	gSaveBlock1+0x2abc
.L1002:
	ldr	r1, .L1013
	add	r2, r4, #0
	add	r2, r2, #0x80
	b	.L1008
.L1014:
	.align	2, 0
.L1013:
	.word	gSaveBlock1+0x2abc
.L1003:
	add	r1, r4, #0
	add	r1, r1, #0x40
	ldr	r2, .L1015
.L1008:
	add	r3, r4, #0
	add	r3, r3, #0xc0
	add	r0, r4, #0
	bl	sub_80C05C4
	b	.L1000
.L1016:
	.align	2, 0
.L1015:
	.word	gSaveBlock1+0x2abc
.L1004:
	add	r1, r6, #0
	add	r1, r1, #0x40
	add	r2, r6, #0
	add	r2, r2, #0x80
	ldr	r3, .L1017
	add	r0, r6, #0
	bl	sub_80C05C4
.L1000:
	bl	sub_80C0750
	bl	sub_80C0788
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1018:
	.align	2, 0
.L1017:
	.word	gSaveBlock1+0x2abc
.Lfe112:
	.size	 sub_80C0514,.Lfe112-sub_80C0514
	.align	2, 0
	.globl	sub_80C05C4
	.type	 sub_80C05C4,function
	.thumb_func
sub_80C05C4:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #0xffffffdc
	str	r0, [sp, #0x10]
	str	r1, [sp, #0x14]
	str	r2, [sp, #0x18]
	str	r3, [sp, #0x1c]
	add	r0, sp, #0x10
	str	r0, [sp]
	add	r0, sp, #0x14
	str	r0, [sp, #0x4]
	add	r0, sp, #0x18
	str	r0, [sp, #0x8]
	add	r0, sp, #0x1c
	str	r0, [sp, #0xc]
	bl	GetLinkPlayerCount
	ldr	r1, .L1038
	strb	r0, [r1]
	mov	r0, #0x0
	mov	sl, r0
.L1023:
	mov	r7, #0x0
	mov	r1, sl
	add	r1, r1, #0x1
	str	r1, [sp, #0x20]
	b	.L1037
.L1039:
	.align	2, 0
.L1038:
	.word	gUnknown_03000721
.L1027:
	lsl	r4, r7, #0x2
	mov	r1, sp
	add	r0, r1, r4
	ldr	r0, [r0]
	ldr	r0, [r0]
	mov	r1, sl
	bl	sub_80C0730
	ldr	r1, .L1040
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r8, r4
	add	r1, r7, #0x1
	mov	r9, r1
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L1026	@cond_branch
	mov	r5, #0x0
	ldr	r1, .L1040+0x4
	ldrb	r0, [r1]
	sub	r0, r0, #0x1
	cmp	r5, r0
	bge	.L1026	@cond_branch
	add	r6, r1, #0
.L1032:
	add	r0, r7, r5
	add	r4, r0, #0x1
	ldrb	r1, [r6]
	add	r0, r4, #0
	bl	__modsi3
	lsl	r0, r0, #0x2
	add	r0, r0, sp
	ldr	r0, [r0]
	ldr	r0, [r0]
	bl	sub_80BEBC8
	ldr	r1, .L1040+0x8
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L1031	@cond_branch
	ldrb	r1, [r6]
	add	r0, r4, #0
	bl	__modsi3
	lsl	r0, r0, #0x2
	add	r0, r0, sp
	ldr	r0, [r0]
	mov	r1, sp
	add	r1, r1, r8
	ldr	r1, [r1]
	bl	sub_80C06BC
.L1031:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldrb	r0, [r6]
	sub	r0, r0, #0x1
	cmp	r5, r0
	blt	.L1032	@cond_branch
.L1026:
	mov	r1, r9
	lsl	r0, r1, #0x18
	lsr	r7, r0, #0x18
.L1037:
	ldr	r0, .L1040+0x4
	ldrb	r0, [r0]
	cmp	r7, r0
	bcc	.L1027	@cond_branch
	ldr	r1, [sp, #0x20]
	lsl	r0, r1, #0x18
	lsr	r0, r0, #0x18
	mov	sl, r0
	cmp	r0, #0xf
	bls	.L1023	@cond_branch
	add	sp, sp, #0x24
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1041:
	.align	2, 0
.L1040:
	.word	gUnknown_03000722
	.word	gUnknown_03000721
	.word	gUnknown_03005D38
.Lfe113:
	.size	 sub_80C05C4,.Lfe113-sub_80C05C4
	.align	2, 0
	.globl	sub_80C06BC
	.type	 sub_80C06BC,function
	.thumb_func
sub_80C06BC:
	push	{lr}
	ldr	r0, [r0]
	ldr	r1, [r1]
	ldr	r2, .L1043
	ldrb	r2, [r2, #0]
	lsl	r2, r2, #24
	asr	r2, r2, #24
	lsl	r2, r2, #0x2
	add	r1, r1, r2
	ldr	r2, .L1043+0x4
	ldrb	r2, [r2, #0]
	lsl	r2, r2, #24
	asr	r2, r2, #24
	bl	sub_80C06E8
	pop	{r0}
	bx	r0
.L1044:
	.align	2, 0
.L1043:
	.word	gUnknown_03000722
	.word	gUnknown_03005D38
.Lfe114:
	.size	 sub_80C06BC,.Lfe114-sub_80C06BC
	.align	2, 0
	.globl	sub_80C06E8
	.type	 sub_80C06E8,function
	.thumb_func
sub_80C06E8:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	lsl	r2, r2, #0x18
	lsr	r6, r2, #0x18
	ldrb	r3, [r5]
	add	r0, r3, #0
	cmp	r0, #0
	bne	.L1046	@cond_branch
.L1055:
	mov	r0, #0x0
	b	.L1053
.L1046:
	mov	r1, #0x0
	add	r2, r3, #0
	add	r3, r0, #0
.L1050:
	lsl	r0, r1, #0x2
	add	r0, r0, r4
	ldrb	r0, [r0]
	cmp	r0, r3
	beq	.L1055	@cond_branch
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0xf
	bls	.L1050	@cond_branch
	lsl	r0, r6, #0x18
	asr	r0, r0, #0x16
	add	r0, r0, r4
	strb	r2, [r0]
	mov	r1, #0x1
	strb	r1, [r0, #0x1]
	ldrh	r1, [r5, #0x2]
	strh	r1, [r0, #0x2]
	mov	r0, #0x1
.L1053:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe115:
	.size	 sub_80C06E8,.Lfe115-sub_80C06E8
	.align	2, 0
	.globl	sub_80C0730
	.type	 sub_80C0730,function
	.thumb_func
sub_80C0730:
	push	{lr}
	lsl	r1, r1, #0x18
	lsr	r2, r1, #0x18
	lsl	r1, r2, #0x2
	add	r1, r1, r0
	ldrb	r0, [r1]
	cmp	r0, #0
	beq	.L1057	@cond_branch
	lsl	r0, r2, #0x18
	asr	r0, r0, #0x18
	b	.L1058
.L1057:
	mov	r0, #0x1
	neg	r0, r0
.L1058:
	pop	{r1}
	bx	r1
.Lfe116:
	.size	 sub_80C0730,.Lfe116-sub_80C0730
	.align	2, 0
	.globl	sub_80C0750
	.type	 sub_80C0750,function
	.thumb_func
sub_80C0750:
	push	{r4, r5, lr}
	mov	r4, #0x0
	ldr	r5, .L1066
.L1063:
	lsl	r0, r4, #0x2
	add	r0, r0, r5
	ldr	r1, .L1066+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x3
	bls	.L1062	@cond_branch
	add	r0, r4, #0
	bl	sub_80BEC10
.L1062:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0xf
	bls	.L1063	@cond_branch
	bl	sub_80BEC40
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1067:
	.align	2, 0
.L1066:
	.word	gSaveBlock1
	.word	0x2abc
.Lfe117:
	.size	 sub_80C0750,.Lfe117-sub_80C0750
	.align	2, 0
	.globl	sub_80C0788
	.type	 sub_80C0788,function
	.thumb_func
sub_80C0788:
	push	{r4, lr}
	ldr	r0, .L1075
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L1069	@cond_branch
	mov	r1, #0x0
	ldr	r4, .L1075+0x4
	ldr	r3, .L1075+0x8
	mov	r2, #0x0
.L1073:
	lsl	r0, r1, #0x2
	add	r0, r0, r4
	add	r0, r0, r3
	strb	r2, [r0]
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0xf
	bls	.L1073	@cond_branch
.L1069:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1076:
	.align	2, 0
.L1075:
	.word	0x804
	.word	gSaveBlock1
	.word	0x2abd
.Lfe118:
	.size	 sub_80C0788,.Lfe118-sub_80C0788
	.align	2, 0
	.globl	DoTVShow
	.type	 DoTVShow,function
	.thumb_func
DoTVShow:
	push	{lr}
	ldr	r2, .L1095
	ldr	r0, .L1095+0x4
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r1, r0, r2
	ldr	r2, .L1095+0x8
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.LCB8507
	b	.L1078	@long jump
.LCB8507:
	sub	r2, r2, #0x1
	add	r0, r1, r2
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	cmp	r0, #0x28
	bls	.LCB8515
	b	.L1078	@long jump
.LCB8515:
	lsl	r0, r0, #0x2
	ldr	r1, .L1095+0xc
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1096:
	.align	2, 0
.L1095:
	.word	gSaveBlock1
	.word	gSpecialVar_0x8004
	.word	0x2739
	.word	.L1093
	.align	2, 0
	.align	2, 0
.L1093:
	.word	.L1080
	.word	.L1081
	.word	.L1082
	.word	.L1083
	.word	.L1089
	.word	.L1085
	.word	.L1086
	.word	.L1078
	.word	.L1078
	.word	.L1078
	.word	.L1078
	.word	.L1078
	.word	.L1078
	.word	.L1078
	.word	.L1078
	.word	.L1078
	.word	.L1078
	.word	.L1078
	.word	.L1078
	.word	.L1078
	.word	.L1087
	.word	.L1088
	.word	.L1090
	.word	.L1091
	.word	.L1092
	.word	.L1078
	.word	.L1078
	.word	.L1078
	.word	.L1078
	.word	.L1078
	.word	.L1078
	.word	.L1078
	.word	.L1078
	.word	.L1078
	.word	.L1078
	.word	.L1078
	.word	.L1078
	.word	.L1078
	.word	.L1078
	.word	.L1078
	.word	.L1084
.L1080:
	bl	DoTVShowPokemonFanClubLetter
	b	.L1078
.L1081:
	bl	DoTVShowRecentHappenings
	b	.L1078
.L1082:
	bl	DoTVShowPokemonFanClubOpinions
	b	.L1078
.L1083:
	bl	nullsub_22
	b	.L1078
.L1084:
	bl	DoTVShowPokemonNewsMassOutbreak
	b	.L1078
.L1085:
	bl	DoTVShowBravoTrainerPokemonProfile
	b	.L1078
.L1086:
	bl	DoTVShowBravoTrainerBattleTowerProfile
	b	.L1078
.L1087:
	bl	DoTVShowPokemonTodaySuccessfulCapture
	b	.L1078
.L1088:
	bl	DoTVShowTodaysSmartShopper
	b	.L1078
.L1089:
	bl	DoTVShowTheNameRaterShow
	b	.L1078
.L1090:
	bl	DoTVShowPokemonTodayFailedCapture
	b	.L1078
.L1091:
	bl	DoTVShowPokemonAngler
	b	.L1078
.L1092:
	bl	DoTVShowTheWorldOfMasters
.L1078:
	pop	{r0}
	bx	r0
.Lfe119:
	.size	 DoTVShow,.Lfe119-DoTVShow
	.align	2, 0
	.globl	TVShowConvertInternationalString
	.type	 TVShowConvertInternationalString,function
	.thumb_func
TVShowConvertInternationalString:
	push	{r4, r5, lr}
	add	r5, r0, #0
	lsl	r4, r2, #0x18
	lsr	r4, r4, #0x18
	bl	StringCopy
	cmp	r4, #0x1
	bhi	.L1098	@cond_branch
	add	r0, r5, #0
	mov	r1, #0x1
	bl	ConvertInternationalString
.L1098:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe120:
	.size	 TVShowConvertInternationalString,.Lfe120-TVShowConvertInternationalString
	.align	2, 0
	.globl	DoTVShowBravoTrainerPokemonProfile
	.type	 DoTVShowBravoTrainerPokemonProfile,function
	.thumb_func
DoTVShowBravoTrainerPokemonProfile:
	push	{r4, r5, lr}
	ldr	r0, .L1120
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L1120+0x4
	add	r4, r0, r1
	ldr	r1, .L1120+0x8
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L1120+0xc
	ldrb	r5, [r0]
	cmp	r5, #0x8
	bls	.LCB8634
	b	.L1100	@long jump
.LCB8634:
	lsl	r0, r5, #0x2
	ldr	r1, .L1120+0x10
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1121:
	.align	2, 0
.L1120:
	.word	gSpecialVar_0x8004
	.word	gSaveBlock1+0x2738
	.word	gScriptResult
	.word	gUnknown_020387E8
	.word	.L1116
	.align	2, 0
	.align	2, 0
.L1116:
	.word	.L1101
	.word	.L1104
	.word	.L1105
	.word	.L1108
	.word	.L1109
	.word	.L1110
	.word	.L1113
	.word	.L1114
	.word	.L1115
.L1101:
	ldr	r0, .L1122
	add	r1, r4, #0
	add	r1, r1, #0x16
	ldrb	r2, [r4, #0x1e]
	bl	TVShowConvertInternationalString
	ldrb	r1, [r4, #0x13]
	lsl	r1, r1, #0x1d
	lsr	r1, r1, #0x1d
	mov	r0, #0x1
	bl	CopyContestCategoryToStringVar
	ldrb	r1, [r4, #0x13]
	lsl	r1, r1, #0x1b
	lsr	r1, r1, #0x1e
	mov	r0, #0x2
	bl	sub_80BEF10
	ldrh	r1, [r4, #0x2]
	mov	r0, #0xb
	mul	r0, r0, r1
	ldr	r1, .L1122+0x4
	add	r0, r0, r1
	add	r1, r4, #0
	add	r1, r1, #0x8
	bl	StringCompareWithoutExtCtrlCodes
	cmp	r0, #0
	bne	.L1102	@cond_branch
	ldr	r1, .L1122+0x8
	mov	r0, #0x8
	b	.L1118
.L1123:
	.align	2, 0
.L1122:
	.word	gStringVar1
	.word	gSpeciesNames
	.word	gUnknown_020387E8
.L1102:
	ldr	r1, .L1124
	mov	r0, #0x1
	b	.L1118
.L1125:
	.align	2, 0
.L1124:
	.word	gUnknown_020387E8
.L1104:
	ldr	r0, .L1126
	ldrh	r2, [r4, #0x2]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L1126+0x4
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L1126+0x8
	add	r1, r4, #0
	add	r1, r1, #0x8
	ldrb	r2, [r4, #0x1f]
	bl	TVShowConvertInternationalString
	ldrb	r1, [r4, #0x13]
	lsl	r1, r1, #0x1d
	lsr	r1, r1, #0x1d
	mov	r0, #0x2
	bl	CopyContestCategoryToStringVar
	b	.L1119
.L1127:
	.align	2, 0
.L1126:
	.word	gStringVar1
	.word	gSpeciesNames
	.word	gStringVar2
.L1105:
	ldr	r0, .L1128
	add	r1, r4, #0
	add	r1, r1, #0x16
	ldrb	r2, [r4, #0x1e]
	bl	TVShowConvertInternationalString
	ldrb	r1, [r4, #0x13]
	mov	r0, #0x60
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L1106	@cond_branch
	ldr	r1, .L1128+0x4
	mov	r0, #0x3
	b	.L1118
.L1129:
	.align	2, 0
.L1128:
	.word	gStringVar1
	.word	gUnknown_020387E8
.L1106:
	ldr	r1, .L1130
	mov	r0, #0x4
	b	.L1118
.L1131:
	.align	2, 0
.L1130:
	.word	gUnknown_020387E8
.L1108:
	ldr	r0, .L1132
	add	r1, r4, #0
	add	r1, r1, #0x16
	ldrb	r2, [r4, #0x1e]
	bl	TVShowConvertInternationalString
	ldr	r0, .L1132+0x4
	ldrh	r1, [r4, #0x4]
	bl	EasyChat_GetWordText
	ldrb	r1, [r4, #0x13]
	lsl	r1, r1, #0x19
	lsr	r1, r1, #0x1e
	add	r1, r1, #0x1
	mov	r0, #0x2
	bl	sub_80BF088
	ldr	r1, .L1132+0x8
	mov	r0, #0x5
	b	.L1118
.L1133:
	.align	2, 0
.L1132:
	.word	gStringVar1
	.word	gStringVar2
	.word	gUnknown_020387E8
.L1109:
	ldr	r0, .L1134
	add	r1, r4, #0
	add	r1, r1, #0x16
	ldrb	r2, [r4, #0x1e]
	bl	TVShowConvertInternationalString
	ldr	r0, .L1134+0x4
	ldrh	r1, [r4, #0x4]
	bl	EasyChat_GetWordText
	ldrb	r1, [r4, #0x13]
	lsl	r1, r1, #0x19
	lsr	r1, r1, #0x1e
	add	r1, r1, #0x1
	mov	r0, #0x2
	bl	sub_80BF088
	ldr	r1, .L1134+0x8
	mov	r0, #0x5
	b	.L1118
.L1135:
	.align	2, 0
.L1134:
	.word	gStringVar1
	.word	gStringVar2
	.word	gUnknown_020387E8
.L1110:
	ldr	r0, .L1136
	add	r1, r4, #0
	add	r1, r1, #0x16
	ldrb	r2, [r4, #0x1e]
	bl	TVShowConvertInternationalString
	ldrb	r1, [r4, #0x13]
	lsl	r1, r1, #0x1d
	lsr	r1, r1, #0x1d
	mov	r0, #0x1
	bl	CopyContestCategoryToStringVar
	ldr	r0, .L1136+0x4
	ldrh	r1, [r4, #0x6]
	bl	EasyChat_GetWordText
	ldrh	r0, [r4, #0x14]
	cmp	r0, #0
	beq	.L1111	@cond_branch
	ldr	r1, .L1136+0x8
	mov	r0, #0x6
	b	.L1118
.L1137:
	.align	2, 0
.L1136:
	.word	gStringVar1
	.word	gStringVar3
	.word	gUnknown_020387E8
.L1111:
	ldr	r1, .L1138
	mov	r0, #0x7
	b	.L1118
.L1139:
	.align	2, 0
.L1138:
	.word	gUnknown_020387E8
.L1113:
	ldr	r0, .L1140
	ldrh	r2, [r4, #0x2]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L1140+0x4
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L1140+0x8
	ldrh	r2, [r4, #0x14]
	lsl	r1, r2, #0x4
	sub	r1, r1, r2
	ldr	r2, .L1140+0xc
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L1140+0x10
	ldrh	r1, [r4, #0x6]
	bl	EasyChat_GetWordText
	ldr	r1, .L1140+0x14
	mov	r0, #0x7
	b	.L1118
.L1141:
	.align	2, 0
.L1140:
	.word	gStringVar1
	.word	gSpeciesNames
	.word	gStringVar2
	.word	gMoveNames
	.word	gStringVar3
	.word	gUnknown_020387E8
.L1114:
	ldr	r0, .L1142
	add	r1, r4, #0
	add	r1, r1, #0x16
	ldrb	r2, [r4, #0x1e]
	bl	TVShowConvertInternationalString
	ldr	r0, .L1142+0x4
	ldrh	r2, [r4, #0x2]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L1142+0x8
	add	r1, r1, r2
	bl	StringCopy
	bl	TVShowDone
	b	.L1100
.L1143:
	.align	2, 0
.L1142:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
.L1115:
	ldr	r0, .L1144
	ldrh	r2, [r4, #0x2]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L1144+0x4
	add	r1, r1, r2
	bl	StringCopy
.L1119:
	ldr	r1, .L1144+0x8
	mov	r0, #0x2
.L1118:
	strb	r0, [r1]
.L1100:
	ldr	r0, .L1144+0xc
	lsl	r1, r5, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1145:
	.align	2, 0
.L1144:
	.word	gStringVar1
	.word	gSpeciesNames
	.word	gUnknown_020387E8
	.word	gTVBravoTrainerTextGroup
.Lfe121:
	.size	 DoTVShowBravoTrainerPokemonProfile,.Lfe121-DoTVShowBravoTrainerPokemonProfile
	.align	2, 0
	.globl	DoTVShowBravoTrainerBattleTowerProfile
	.type	 DoTVShowBravoTrainerBattleTowerProfile,function
	.thumb_func
DoTVShowBravoTrainerBattleTowerProfile:
	push	{r4, r5, lr}
	ldr	r0, .L1180
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L1180+0x4
	add	r4, r0, r1
	ldr	r1, .L1180+0x8
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L1180+0xc
	ldrb	r5, [r0]
	add	r2, r0, #0
	cmp	r5, #0xe
	bls	.LCB9035
	b	.L1147	@long jump
.LCB9035:
	lsl	r0, r5, #0x2
	ldr	r1, .L1180+0x10
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1181:
	.align	2, 0
.L1180:
	.word	gSpecialVar_0x8004
	.word	gSaveBlock1+0x2738
	.word	gScriptResult
	.word	gUnknown_020387E8
	.word	.L1175
	.align	2, 0
	.align	2, 0
.L1175:
	.word	.L1148
	.word	.L1151
	.word	.L1154
	.word	.L1157
	.word	.L1160
	.word	.L1163
	.word	.L1164
	.word	.L1165
	.word	.L1168
	.word	.L1168
	.word	.L1168
	.word	.L1169
	.word	.L1173
	.word	.L1173
	.word	.L1174
.L1148:
	ldr	r0, .L1182
	add	r1, r4, #0x2
	ldrb	r2, [r4, #0x1d]
	bl	TVShowConvertInternationalString
	ldr	r0, .L1182+0x4
	ldrh	r2, [r4, #0xa]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L1182+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldrh	r0, [r4, #0x16]
	cmp	r0, #0x6
	bls	.L1149	@cond_branch
	ldr	r1, .L1182+0xc
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L1147
.L1183:
	.align	2, 0
.L1182:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	gUnknown_020387E8
.L1149:
	ldr	r1, .L1184
	mov	r0, #0x2
	strb	r0, [r1]
	b	.L1147
.L1185:
	.align	2, 0
.L1184:
	.word	gUnknown_020387E8
.L1151:
	ldrb	r1, [r4, #0x1a]
	mov	r0, #0x0
	bl	sub_80BF088
	ldrh	r1, [r4, #0x16]
	mov	r0, #0x1
	bl	sub_80BF088
	ldrb	r0, [r4, #0x1c]
	cmp	r0, #0x1
	bne	.L1152	@cond_branch
	ldr	r1, .L1186
	mov	r0, #0x3
	strb	r0, [r1]
	b	.L1147
.L1187:
	.align	2, 0
.L1186:
	.word	gUnknown_020387E8
.L1152:
	ldr	r1, .L1188
	mov	r0, #0x4
	strb	r0, [r1]
	b	.L1147
.L1189:
	.align	2, 0
.L1188:
	.word	gUnknown_020387E8
.L1154:
	ldr	r0, .L1190
	add	r1, r4, #0
	add	r1, r1, #0xc
	ldrb	r2, [r4, #0x1d]
	bl	TVShowConvertInternationalString
	ldrh	r1, [r4, #0x16]
	add	r1, r1, #0x1
	mov	r0, #0x1
	bl	sub_80BF088
.L1179:
	ldrb	r0, [r4, #0x1b]
	cmp	r0, #0
	beq	.L1177	@cond_branch
	b	.L1161
.L1191:
	.align	2, 0
.L1190:
	.word	gStringVar1
.L1157:
	ldr	r0, .L1192
	add	r1, r4, #0
	add	r1, r1, #0xc
	ldrb	r2, [r4, #0x1d]
	bl	TVShowConvertInternationalString
	ldr	r0, .L1192+0x4
	ldrh	r2, [r4, #0x14]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L1192+0x8
	add	r1, r1, r2
	bl	StringCopy
	b	.L1179
.L1193:
	.align	2, 0
.L1192:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
.L1160:
	ldr	r0, .L1194
	add	r1, r4, #0
	add	r1, r1, #0xc
	ldrb	r2, [r4, #0x1d]
	bl	TVShowConvertInternationalString
	ldr	r0, .L1194+0x4
	ldrh	r2, [r4, #0x14]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L1194+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldrb	r0, [r4, #0x1b]
	cmp	r0, #0
	bne	.L1161	@cond_branch
.L1177:
	ldr	r1, .L1194+0xc
	mov	r0, #0x5
	strb	r0, [r1]
	b	.L1147
.L1195:
	.align	2, 0
.L1194:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	gUnknown_020387E8
.L1161:
	ldr	r1, .L1196
	mov	r0, #0x6
	strb	r0, [r1]
	b	.L1147
.L1197:
	.align	2, 0
.L1196:
	.word	gUnknown_020387E8
.L1163:
	ldr	r0, .L1198
	add	r1, r4, #0
	add	r1, r1, #0xc
	b	.L1178
.L1199:
	.align	2, 0
.L1198:
	.word	gStringVar1
.L1164:
	ldr	r0, .L1200
	add	r1, r4, #0
	add	r1, r1, #0xc
	b	.L1178
.L1201:
	.align	2, 0
.L1200:
	.word	gStringVar1
.L1165:
	mov	r0, #0xb
	strb	r0, [r2]
	b	.L1147
.L1168:
	ldr	r0, .L1202
	add	r1, r4, #0x2
.L1178:
	ldrb	r2, [r4, #0x1d]
	bl	TVShowConvertInternationalString
	ldr	r1, .L1202+0x4
	mov	r0, #0xb
	strb	r0, [r1]
	b	.L1147
.L1203:
	.align	2, 0
.L1202:
	.word	gStringVar1
	.word	gUnknown_020387E8
.L1169:
	ldr	r0, .L1204
	ldrh	r1, [r4, #0x18]
	bl	EasyChat_GetWordText
	ldrb	r0, [r4, #0x1b]
	cmp	r0, #0
	bne	.L1170	@cond_branch
	ldr	r1, .L1204+0x4
	mov	r0, #0xc
	strb	r0, [r1]
	b	.L1147
.L1205:
	.align	2, 0
.L1204:
	.word	gStringVar1
	.word	gUnknown_020387E8
.L1170:
	ldr	r1, .L1206
	mov	r0, #0xd
	strb	r0, [r1]
	b	.L1147
.L1207:
	.align	2, 0
.L1206:
	.word	gUnknown_020387E8
.L1173:
	ldr	r0, .L1208
	ldrh	r1, [r4, #0x18]
	bl	EasyChat_GetWordText
	ldr	r0, .L1208+0x4
	add	r1, r4, #0x2
	ldrb	r2, [r4, #0x1d]
	bl	TVShowConvertInternationalString
	ldr	r0, .L1208+0x8
	add	r1, r4, #0
	add	r1, r1, #0xc
	ldrb	r2, [r4, #0x1d]
	bl	TVShowConvertInternationalString
	ldr	r1, .L1208+0xc
	mov	r0, #0xe
	strb	r0, [r1]
	b	.L1147
.L1209:
	.align	2, 0
.L1208:
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar3
	.word	gUnknown_020387E8
.L1174:
	ldr	r0, .L1210
	add	r1, r4, #0x2
	ldrb	r2, [r4, #0x1d]
	bl	TVShowConvertInternationalString
	ldr	r0, .L1210+0x4
	ldrh	r2, [r4, #0xa]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L1210+0x8
	add	r1, r1, r2
	bl	StringCopy
	bl	TVShowDone
.L1147:
	ldr	r0, .L1210+0xc
	lsl	r1, r5, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1211:
	.align	2, 0
.L1210:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	gTVBravoTrainerBattleTowerTextGroup
.Lfe122:
	.size	 DoTVShowBravoTrainerBattleTowerProfile,.Lfe122-DoTVShowBravoTrainerBattleTowerProfile
	.align	2, 0
	.globl	DoTVShowTodaysSmartShopper
	.type	 DoTVShowTodaysSmartShopper,function
	.thumb_func
DoTVShowTodaysSmartShopper:
	push	{r4, r5, r6, lr}
	ldr	r0, .L1249
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L1249+0x4
	add	r5, r0, r1
	ldr	r1, .L1249+0x8
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L1249+0xc
	ldrb	r6, [r0]
	add	r2, r0, #0
	cmp	r6, #0xc
	bls	.LCB9437
	b	.L1213	@long jump
.LCB9437:
	lsl	r0, r6, #0x2
	ldr	r1, .L1249+0x10
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1250:
	.align	2, 0
.L1249:
	.word	gSpecialVar_0x8004
	.word	gSaveBlock1+0x2738
	.word	gScriptResult
	.word	gUnknown_020387E8
	.word	.L1245
	.align	2, 0
	.align	2, 0
.L1245:
	.word	.L1214
	.word	.L1217
	.word	.L1220
	.word	.L1223
	.word	.L1220
	.word	.L1220
	.word	.L1226
	.word	.L1231
	.word	.L1234
	.word	.L1237
	.word	.L1238
	.word	.L1241
	.word	.L1244
.L1214:
	ldr	r0, .L1251
	add	r1, r5, #0
	add	r1, r1, #0x13
	ldrb	r2, [r5, #0x3]
	bl	TVShowConvertInternationalString
	ldr	r0, .L1251+0x4
	ldrb	r1, [r5, #0x12]
	mov	r2, #0x0
	bl	GetMapSectionName
	ldrh	r0, [r5, #0xc]
	cmp	r0, #0xfe
	bls	.L1215	@cond_branch
	ldr	r1, .L1251+0x8
	mov	r0, #0xb
	strb	r0, [r1]
	b	.L1213
.L1252:
	.align	2, 0
.L1251:
	.word	gStringVar1
	.word	gStringVar2
	.word	gUnknown_020387E8
.L1215:
	ldr	r1, .L1253
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L1213
.L1254:
	.align	2, 0
.L1253:
	.word	gUnknown_020387E8
.L1217:
	ldr	r0, .L1255
	add	r1, r5, #0
	add	r1, r1, #0x13
	ldrb	r2, [r5, #0x3]
	bl	TVShowConvertInternationalString
	ldr	r4, .L1255+0x4
	ldrh	r0, [r5, #0x6]
	bl	ItemId_GetItem
	add	r1, r0, #0
	add	r0, r4, #0
	bl	StringCopy
	ldrh	r1, [r5, #0xc]
	mov	r0, #0x2
	bl	sub_80BF088
	ldr	r4, .L1255+0x8
	bl	Random
	ldrb	r2, [r4]
	add	r2, r2, #0x1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x3
	and	r0, r0, r1
	add	r0, r0, r2
	strb	r0, [r4]
	b	.L1213
.L1256:
	.align	2, 0
.L1255:
	.word	gStringVar1
	.word	gStringVar2
	.word	gUnknown_020387E8
.L1220:
	ldrh	r0, [r5, #0x8]
	cmp	r0, #0
	beq	.L1221	@cond_branch
	mov	r0, #0x6
	strb	r0, [r2]
	b	.L1213
.L1221:
	mov	r0, #0xa
	strb	r0, [r2]
	b	.L1213
.L1223:
	ldrh	r1, [r5, #0xc]
	add	r1, r1, #0x1
	mov	r0, #0x2
	bl	sub_80BF088
	ldrh	r0, [r5, #0x8]
	cmp	r0, #0
	beq	.L1224	@cond_branch
	ldr	r1, .L1257
	mov	r0, #0x6
	strb	r0, [r1]
	b	.L1213
.L1258:
	.align	2, 0
.L1257:
	.word	gUnknown_020387E8
.L1224:
	ldr	r1, .L1259
	mov	r0, #0xa
	strb	r0, [r1]
	b	.L1213
.L1260:
	.align	2, 0
.L1259:
	.word	gUnknown_020387E8
.L1226:
	ldr	r4, .L1261
	ldrh	r0, [r5, #0x8]
	bl	ItemId_GetItem
	add	r1, r0, #0
	add	r0, r4, #0
	bl	StringCopy
	ldrh	r1, [r5, #0xe]
	mov	r0, #0x2
	bl	sub_80BF088
	ldrh	r0, [r5, #0xa]
	cmp	r0, #0
	beq	.L1248	@cond_branch
	ldr	r1, .L1261+0x4
	mov	r0, #0x7
	strb	r0, [r1]
	b	.L1213
.L1262:
	.align	2, 0
.L1261:
	.word	gStringVar2
	.word	gUnknown_020387E8
.L1231:
	ldr	r4, .L1263
	ldrh	r0, [r5, #0xa]
	bl	ItemId_GetItem
	add	r1, r0, #0
	add	r0, r4, #0
	bl	StringCopy
	ldrh	r1, [r5, #0x10]
	mov	r0, #0x2
	bl	sub_80BF088
.L1248:
	ldrb	r0, [r5, #0x2]
	cmp	r0, #0x1
	beq	.L1247	@cond_branch
	ldr	r1, .L1263+0x4
	mov	r0, #0x9
	strb	r0, [r1]
	b	.L1213
.L1264:
	.align	2, 0
.L1263:
	.word	gStringVar2
	.word	gUnknown_020387E8
.L1234:
	ldrh	r0, [r5, #0xc]
	cmp	r0, #0xfe
	bls	.L1239	@cond_branch
	mov	r0, #0xc
	strb	r0, [r2]
	b	.L1213
.L1237:
	mov	r0, #0x1
	add	r1, r5, #0
	bl	sub_80BF154
	bl	TVShowDone
	b	.L1213
.L1238:
	ldrb	r0, [r5, #0x2]
	cmp	r0, #0x1
	bne	.L1239	@cond_branch
	mov	r0, #0x8
	strb	r0, [r2]
	b	.L1213
.L1239:
	mov	r0, #0x9
	strb	r0, [r2]
	b	.L1213
.L1241:
	ldr	r0, .L1265
	add	r1, r5, #0
	add	r1, r1, #0x13
	ldrb	r2, [r5, #0x3]
	bl	TVShowConvertInternationalString
	ldr	r4, .L1265+0x4
	ldrh	r0, [r5, #0x6]
	bl	ItemId_GetItem
	add	r1, r0, #0
	add	r0, r4, #0
	bl	StringCopy
	ldrb	r0, [r5, #0x2]
	cmp	r0, #0x1
	bne	.L1242	@cond_branch
.L1247:
	ldr	r1, .L1265+0x8
	mov	r0, #0x8
	strb	r0, [r1]
	b	.L1213
.L1266:
	.align	2, 0
.L1265:
	.word	gStringVar1
	.word	gStringVar2
	.word	gUnknown_020387E8
.L1242:
	ldr	r1, .L1267
	mov	r0, #0xc
	strb	r0, [r1]
	b	.L1213
.L1268:
	.align	2, 0
.L1267:
	.word	gUnknown_020387E8
.L1244:
	ldr	r0, .L1269
	add	r1, r5, #0
	add	r1, r1, #0x13
	ldrb	r2, [r5, #0x3]
	bl	TVShowConvertInternationalString
	bl	TVShowDone
.L1213:
	ldr	r0, .L1269+0x4
	lsl	r1, r6, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1270:
	.align	2, 0
.L1269:
	.word	gStringVar1
	.word	gTVSmartShopperTextGroup
.Lfe123:
	.size	 DoTVShowTodaysSmartShopper,.Lfe123-DoTVShowTodaysSmartShopper
	.align	2, 0
	.globl	DoTVShowTheNameRaterShow
	.type	 DoTVShowTheNameRaterShow,function
	.thumb_func
DoTVShowTheNameRaterShow:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #0xfffffff8
	ldr	r0, .L1305
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L1305+0x4
	add	r6, r0, r1
	ldr	r1, .L1305+0x8
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L1305+0xc
	ldrb	r7, [r0]
	add	r2, r0, #0
	cmp	r7, #0x12
	bls	.LCB9795
	b	.L1272	@long jump
.LCB9795:
	lsl	r0, r7, #0x2
	ldr	r1, .L1305+0x10
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1306:
	.align	2, 0
.L1305:
	.word	gSpecialVar_0x8004
	.word	gSaveBlock1+0x2738
	.word	gScriptResult
	.word	gUnknown_020387E8
	.word	.L1302
	.align	2, 0
	.align	2, 0
.L1302:
	.word	.L1273
	.word	.L1280
	.word	.L1286
	.word	.L1280
	.word	.L1280
	.word	.L1280
	.word	.L1280
	.word	.L1280
	.word	.L1280
	.word	.L1294
	.word	.L1294
	.word	.L1294
	.word	.L1300
	.word	.L1295
	.word	.L1296
	.word	.L1297
	.word	.L1298
	.word	.L1299
	.word	.L1301
.L1273:
	ldr	r0, .L1307
	add	r1, r6, #0
	add	r1, r1, #0xf
	ldrb	r2, [r6, #0x1e]
	bl	TVShowConvertInternationalString
	ldr	r0, .L1307+0x4
	ldrh	r2, [r6, #0x2]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L1307+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L1307+0xc
	add	r1, r6, #0x4
	ldrb	r2, [r6, #0x1f]
	bl	TVShowConvertInternationalString
	ldr	r4, .L1307+0x10
	add	r0, r6, #0
	bl	sub_80BF7E8
	add	r0, r0, #0x1
	strb	r0, [r4]
	b	.L1272
.L1308:
	.align	2, 0
.L1307:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	gStringVar3
	.word	gUnknown_020387E8
.L1280:
	ldrb	r0, [r6, #0x1a]
	cmp	r0, #0
	bne	.L1281	@cond_branch
	mov	r0, #0x9
	strb	r0, [r2]
	b	.L1272
.L1281:
	cmp	r0, #0x1
	bne	.L1283	@cond_branch
	mov	r0, #0xa
	strb	r0, [r2]
	b	.L1272
.L1283:
	cmp	r0, #0x2
	beq	.LCB9881
	b	.L1272	@long jump
.LCB9881:
	mov	r0, #0xb
	strb	r0, [r2]
	b	.L1272
.L1286:
	ldr	r0, .L1309
	add	r1, r6, #0
	add	r1, r1, #0xf
	ldrb	r2, [r6, #0x1e]
	bl	TVShowConvertInternationalString
	ldrb	r0, [r6, #0x1a]
	cmp	r0, #0
	bne	.L1287	@cond_branch
	ldr	r1, .L1309+0x4
	mov	r0, #0x9
	strb	r0, [r1]
	b	.L1272
.L1310:
	.align	2, 0
.L1309:
	.word	gStringVar1
	.word	gUnknown_020387E8
.L1287:
	cmp	r0, #0x1
	bne	.L1289	@cond_branch
	ldr	r1, .L1311
	mov	r0, #0xa
	strb	r0, [r1]
	b	.L1272
.L1312:
	.align	2, 0
.L1311:
	.word	gUnknown_020387E8
.L1289:
	cmp	r0, #0x2
	beq	.LCB9929
	b	.L1272	@long jump
.LCB9929:
	ldr	r1, .L1313
	mov	r0, #0xb
	strb	r0, [r1]
	b	.L1272
.L1314:
	.align	2, 0
.L1313:
	.word	gUnknown_020387E8
.L1294:
	mov	r5, #0x0
	str	r5, [sp]
	str	r6, [sp, #0x4]
	mov	r0, #0x0
	mov	r1, #0x1
	mov	r2, #0x0
	mov	r3, #0x1
	bl	sub_80BF820
	ldr	r0, .L1315
	ldr	r4, .L1315+0x4
	ldrb	r2, [r6, #0x1f]
	add	r1, r4, #0
	bl	TVShowConvertInternationalString
	str	r5, [sp]
	str	r6, [sp, #0x4]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x1
	bl	sub_80BF820
	ldr	r0, .L1315+0x8
	ldrb	r2, [r6, #0x1f]
	add	r1, r4, #0
	bl	TVShowConvertInternationalString
	add	r1, r6, #0x4
	ldrb	r2, [r6, #0x1f]
	add	r0, r4, #0
	bl	TVShowConvertInternationalString
	ldr	r1, .L1315+0xc
	mov	r0, #0xc
	strb	r0, [r1]
	b	.L1272
.L1316:
	.align	2, 0
.L1315:
	.word	gStringVar3
	.word	gStringVar1
	.word	gStringVar2
	.word	gUnknown_020387E8
.L1295:
	mov	r5, #0x0
	str	r5, [sp]
	str	r6, [sp, #0x4]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x3
	mov	r3, #0x1
	bl	sub_80BF820
	ldr	r0, .L1317
	ldr	r4, .L1317+0x4
	ldrb	r2, [r6, #0x1f]
	add	r1, r4, #0
	bl	TVShowConvertInternationalString
	str	r5, [sp]
	str	r6, [sp, #0x4]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x2
	mov	r3, #0x0
	bl	sub_80BF820
	ldr	r0, .L1317+0x8
	ldrb	r2, [r6, #0x1e]
	add	r1, r4, #0
	bl	TVShowConvertInternationalString
	add	r1, r6, #0
	add	r1, r1, #0xf
	ldrb	r2, [r6, #0x1e]
	add	r0, r4, #0
	bl	TVShowConvertInternationalString
	ldr	r1, .L1317+0xc
	mov	r0, #0xe
	strb	r0, [r1]
	b	.L1272
.L1318:
	.align	2, 0
.L1317:
	.word	gStringVar3
	.word	gStringVar1
	.word	gStringVar2
	.word	gUnknown_020387E8
.L1296:
	mov	r5, #0x0
	str	r5, [sp]
	str	r6, [sp, #0x4]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x3
	mov	r3, #0x0
	bl	sub_80BF820
	ldr	r0, .L1319
	ldr	r4, .L1319+0x4
	ldrb	r2, [r6, #0x1e]
	add	r1, r4, #0
	bl	TVShowConvertInternationalString
	str	r5, [sp]
	str	r6, [sp, #0x4]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x2
	mov	r3, #0x1
	bl	sub_80BF820
	ldr	r0, .L1319+0x8
	ldrb	r2, [r6, #0x1f]
	add	r1, r4, #0
	bl	TVShowConvertInternationalString
	add	r1, r6, #0
	add	r1, r1, #0xf
	ldrb	r2, [r6, #0x1e]
	add	r0, r4, #0
	bl	TVShowConvertInternationalString
	b	.L1304
.L1320:
	.align	2, 0
.L1319:
	.word	gStringVar3
	.word	gStringVar1
	.word	gStringVar2
.L1297:
	mov	r0, #0x0
	str	r0, [sp]
	str	r6, [sp, #0x4]
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x2
	mov	r3, #0x1
	bl	sub_80BF820
	ldr	r0, .L1321
	ldr	r4, .L1321+0x4
	ldrb	r2, [r6, #0x1f]
	add	r1, r4, #0
	bl	TVShowConvertInternationalString
	ldrh	r1, [r6, #0x2]
	mov	r0, #0xb
	mul	r1, r1, r0
	ldr	r0, .L1321+0x8
	add	r1, r1, r0
	add	r0, r4, #0
	bl	StringCopy
	ldrh	r0, [r6, #0x2]
	str	r0, [sp]
	str	r6, [sp, #0x4]
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0x3
	mov	r3, #0x2
	bl	sub_80BF820
	ldr	r1, .L1321+0xc
	mov	r0, #0x10
	strb	r0, [r1]
	b	.L1272
.L1322:
	.align	2, 0
.L1321:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	gUnknown_020387E8
.L1298:
	mov	r0, #0x0
	str	r0, [sp]
	str	r6, [sp, #0x4]
	mov	r1, #0x0
	mov	r2, #0x3
	mov	r3, #0x1
	bl	sub_80BF820
	ldr	r0, .L1323
	ldr	r1, .L1323+0x4
	ldrb	r2, [r6, #0x1f]
	bl	TVShowConvertInternationalString
	ldrh	r0, [r6, #0x2]
	str	r0, [sp]
	str	r6, [sp, #0x4]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x2
	mov	r3, #0x2
	bl	sub_80BF820
	ldr	r1, .L1323+0x8
	mov	r0, #0x11
	strb	r0, [r1]
	b	.L1272
.L1324:
	.align	2, 0
.L1323:
	.word	gStringVar3
	.word	gStringVar1
	.word	gUnknown_020387E8
.L1299:
	mov	r0, #0x0
	str	r0, [sp]
	str	r6, [sp, #0x4]
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x2
	mov	r3, #0x1
	bl	sub_80BF820
	ldr	r0, .L1325
	ldr	r4, .L1325+0x4
	ldrb	r2, [r6, #0x1f]
	add	r1, r4, #0
	bl	TVShowConvertInternationalString
	ldrh	r0, [r6, #0x1c]
	str	r0, [sp]
	str	r6, [sp, #0x4]
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0x3
	mov	r3, #0x2
	bl	sub_80BF820
	ldrh	r1, [r6, #0x1c]
	mov	r0, #0xb
	mul	r1, r1, r0
	ldr	r0, .L1325+0x8
	add	r1, r1, r0
	add	r0, r4, #0
	bl	StringCopy
.L1304:
	ldr	r1, .L1325+0xc
	mov	r0, #0x12
	strb	r0, [r1]
	b	.L1272
.L1326:
	.align	2, 0
.L1325:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	gUnknown_020387E8
.L1300:
	mov	r7, #0x12
	strb	r7, [r2]
.L1301:
	ldr	r0, .L1327
	add	r1, r6, #0x4
	ldrb	r2, [r6, #0x1f]
	bl	TVShowConvertInternationalString
	ldr	r0, .L1327+0x4
	add	r1, r6, #0
	add	r1, r1, #0xf
	ldrb	r2, [r6, #0x1e]
	bl	TVShowConvertInternationalString
	bl	TVShowDone
.L1272:
	ldr	r0, .L1327+0x8
	lsl	r1, r7, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	add	sp, sp, #0x8
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1328:
	.align	2, 0
.L1327:
	.word	gStringVar1
	.word	gStringVar2
	.word	gTVNameRaterTextGroup
.Lfe124:
	.size	 DoTVShowTheNameRaterShow,.Lfe124-DoTVShowTheNameRaterShow
	.align	2, 0
	.globl	DoTVShowPokemonTodaySuccessfulCapture
	.type	 DoTVShowPokemonTodaySuccessfulCapture,function
	.thumb_func
DoTVShowPokemonTodaySuccessfulCapture:
	push	{r4, r5, r6, lr}
	ldr	r0, .L1351
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L1351+0x4
	add	r5, r0, r1
	ldr	r1, .L1351+0x8
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L1351+0xc
	ldrb	r6, [r0]
	add	r2, r0, #0
	cmp	r6, #0xb
	bls	.LCB10280
	b	.L1330	@long jump
.LCB10280:
	lsl	r0, r6, #0x2
	ldr	r1, .L1351+0x10
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1352:
	.align	2, 0
.L1351:
	.word	gSpecialVar_0x8004
	.word	gSaveBlock1+0x2738
	.word	gScriptResult
	.word	gUnknown_020387E8
	.word	.L1347
	.align	2, 0
	.align	2, 0
.L1347:
	.word	.L1331
	.word	.L1334
	.word	.L1335
	.word	.L1338
	.word	.L1339
	.word	.L1340
	.word	.L1341
	.word	.L1343
	.word	.L1343
	.word	.L1345
	.word	.L1345
	.word	.L1346
.L1331:
	ldr	r0, .L1353
	add	r1, r5, #0
	add	r1, r1, #0x13
	ldrb	r2, [r5, #0x2]
	bl	TVShowConvertInternationalString
	ldr	r0, .L1353+0x4
	ldrh	r2, [r5, #0x10]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L1353+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L1353+0xc
	add	r1, r5, #0x4
	ldrb	r2, [r5, #0x3]
	bl	TVShowConvertInternationalString
	ldrb	r0, [r5, #0xf]
	cmp	r0, #0x1
	bne	.L1332	@cond_branch
	ldr	r1, .L1353+0x10
	mov	r0, #0x5
	strb	r0, [r1]
	b	.L1330
.L1354:
	.align	2, 0
.L1353:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	gStringVar3
	.word	gUnknown_020387E8
.L1332:
	ldr	r1, .L1355
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L1330
.L1356:
	.align	2, 0
.L1355:
	.word	gUnknown_020387E8
.L1334:
	mov	r0, #0x2
	strb	r0, [r2]
	b	.L1330
.L1335:
	ldr	r4, .L1357
	ldrb	r0, [r5, #0xf]
	bl	ItemId_GetItem
	add	r1, r0, #0
	add	r0, r4, #0
	bl	StringCopy
	ldrb	r1, [r5, #0x12]
	mov	r0, #0x2
	bl	sub_80BF088
	ldrb	r0, [r5, #0x12]
	cmp	r0, #0x3
	bhi	.L1336	@cond_branch
	ldr	r1, .L1357+0x4
	mov	r0, #0x3
	strb	r0, [r1]
	b	.L1330
.L1358:
	.align	2, 0
.L1357:
	.word	gStringVar2
	.word	gUnknown_020387E8
.L1336:
	ldr	r1, .L1359
	mov	r0, #0x4
	strb	r0, [r1]
	b	.L1330
.L1360:
	.align	2, 0
.L1359:
	.word	gUnknown_020387E8
.L1338:
	ldr	r0, .L1361
	add	r1, r5, #0
	add	r1, r1, #0x13
	ldrb	r2, [r5, #0x2]
	bl	TVShowConvertInternationalString
	ldr	r0, .L1361+0x4
	ldrh	r2, [r5, #0x10]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L1361+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L1361+0xc
	add	r1, r5, #0x4
	ldrb	r2, [r5, #0x3]
	bl	TVShowConvertInternationalString
	b	.L1349
.L1362:
	.align	2, 0
.L1361:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	gStringVar3
.L1339:
	mov	r0, #0x6
	strb	r0, [r2]
	b	.L1330
.L1340:
	ldr	r0, .L1363
	add	r1, r5, #0
	add	r1, r1, #0x13
	ldrb	r2, [r5, #0x2]
	bl	TVShowConvertInternationalString
	ldr	r0, .L1363+0x4
	ldrh	r2, [r5, #0x10]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L1363+0x8
	add	r1, r1, r2
	bl	StringCopy
.L1349:
	ldr	r1, .L1363+0xc
	mov	r0, #0x6
	strb	r0, [r1]
	b	.L1330
.L1364:
	.align	2, 0
.L1363:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	gUnknown_020387E8
.L1341:
	ldr	r0, .L1365
	add	r1, r5, #0
	add	r1, r1, #0x13
	ldrb	r2, [r5, #0x2]
	bl	TVShowConvertInternationalString
	ldr	r0, .L1365+0x4
	ldrh	r2, [r5, #0x10]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L1365+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L1365+0xc
	add	r1, r5, #0x4
	ldrb	r2, [r5, #0x3]
	bl	TVShowConvertInternationalString
	ldr	r4, .L1365+0x10
	bl	Random
	ldrb	r2, [r4]
	add	r2, r2, #0x1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x3
	and	r0, r0, r1
	add	r0, r0, r2
	strb	r0, [r4]
	b	.L1330
.L1366:
	.align	2, 0
.L1365:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	gStringVar3
	.word	gUnknown_020387E8
.L1343:
	ldr	r0, .L1367
	ldrh	r1, [r5, #0x10]
	mov	r4, #0xb
	mul	r1, r1, r4
	ldr	r2, .L1367+0x4
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L1367+0x8
	add	r1, r5, #0x4
	ldrb	r2, [r5, #0x3]
	bl	TVShowConvertInternationalString
	ldrh	r1, [r5, #0x10]
	mov	r0, #0x2
	bl	sub_80BF638
	b	.L1350
.L1368:
	.align	2, 0
.L1367:
	.word	gStringVar1
	.word	gSpeciesNames
	.word	gStringVar2
.L1345:
	ldr	r0, .L1369
	ldrh	r1, [r5, #0x10]
	mov	r4, #0xb
	mul	r1, r1, r4
	ldr	r2, .L1369+0x4
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L1369+0x8
	add	r1, r5, #0x4
	ldrb	r2, [r5, #0x3]
	bl	TVShowConvertInternationalString
.L1350:
	ldr	r0, .L1369+0xc
	strb	r4, [r0]
	b	.L1330
.L1370:
	.align	2, 0
.L1369:
	.word	gStringVar1
	.word	gSpeciesNames
	.word	gStringVar2
	.word	gUnknown_020387E8
.L1346:
	bl	TVShowDone
.L1330:
	ldr	r0, .L1371
	lsl	r1, r6, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1372:
	.align	2, 0
.L1371:
	.word	gTVPokemonTodayTextGroup
.Lfe125:
	.size	 DoTVShowPokemonTodaySuccessfulCapture,.Lfe125-DoTVShowPokemonTodaySuccessfulCapture
	.align	2, 0
	.globl	DoTVShowPokemonTodayFailedCapture
	.type	 DoTVShowPokemonTodayFailedCapture,function
	.thumb_func
DoTVShowPokemonTodayFailedCapture:
	push	{r4, r5, lr}
	ldr	r0, .L1388
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L1388+0x4
	add	r4, r0, r1
	ldr	r1, .L1388+0x8
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L1388+0xc
	ldrb	r5, [r0]
	cmp	r5, #0x6
	bls	.LCB10632
	b	.L1374	@long jump
.LCB10632:
	lsl	r0, r5, #0x2
	ldr	r1, .L1388+0x10
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1389:
	.align	2, 0
.L1388:
	.word	gSpecialVar_0x8004
	.word	gSaveBlock1+0x2738
	.word	gScriptResult
	.word	gUnknown_020387E8
	.word	.L1386
	.align	2, 0
	.align	2, 0
.L1386:
	.word	.L1375
	.word	.L1376
	.word	.L1380
	.word	.L1380
	.word	.L1384
	.word	.L1384
	.word	.L1385
.L1375:
	ldr	r0, .L1390
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0x2]
	bl	TVShowConvertInternationalString
	ldr	r0, .L1390+0x4
	ldrh	r2, [r4, #0xc]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L1390+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldr	r1, .L1390+0xc
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L1374
.L1391:
	.align	2, 0
.L1390:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	gUnknown_020387E8
.L1376:
	ldr	r0, .L1392
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0x2]
	bl	TVShowConvertInternationalString
	ldr	r0, .L1392+0x4
	ldrb	r1, [r4, #0x12]
	mov	r2, #0x0
	bl	GetMapSectionName
	ldr	r0, .L1392+0x8
	ldrh	r2, [r4, #0xe]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L1392+0xc
	add	r1, r1, r2
	bl	StringCopy
	ldrb	r0, [r4, #0x11]
	cmp	r0, #0x1
	bne	.L1377	@cond_branch
	ldr	r1, .L1392+0x10
	mov	r0, #0x3
	strb	r0, [r1]
	b	.L1374
.L1393:
	.align	2, 0
.L1392:
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar3
	.word	gSpeciesNames
	.word	gUnknown_020387E8
.L1377:
	ldr	r1, .L1394
	mov	r0, #0x2
	strb	r0, [r1]
	b	.L1374
.L1395:
	.align	2, 0
.L1394:
	.word	gUnknown_020387E8
.L1380:
	ldr	r0, .L1396
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0x2]
	bl	TVShowConvertInternationalString
	ldrb	r1, [r4, #0x10]
	mov	r0, #0x1
	bl	sub_80BF088
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x3
	bl	__umodsi3
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L1381	@cond_branch
	ldr	r1, .L1396+0x4
	mov	r0, #0x5
	strb	r0, [r1]
	b	.L1374
.L1397:
	.align	2, 0
.L1396:
	.word	gStringVar1
	.word	gUnknown_020387E8
.L1381:
	ldr	r1, .L1398
	mov	r0, #0x4
	strb	r0, [r1]
	b	.L1374
.L1399:
	.align	2, 0
.L1398:
	.word	gUnknown_020387E8
.L1384:
	ldr	r0, .L1400
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0x2]
	bl	TVShowConvertInternationalString
	ldr	r1, .L1400+0x4
	mov	r0, #0x6
	strb	r0, [r1]
	b	.L1374
.L1401:
	.align	2, 0
.L1400:
	.word	gStringVar1
	.word	gUnknown_020387E8
.L1385:
	bl	TVShowDone
.L1374:
	ldr	r0, .L1402
	lsl	r1, r5, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1403:
	.align	2, 0
.L1402:
	.word	gTVPokemonTodayFailedCaptureTextGroup
.Lfe126:
	.size	 DoTVShowPokemonTodayFailedCapture,.Lfe126-DoTVShowPokemonTodayFailedCapture
	.align	2, 0
	.globl	DoTVShowPokemonFanClubLetter
	.type	 DoTVShowPokemonFanClubLetter,function
	.thumb_func
DoTVShowPokemonFanClubLetter:
	push	{r4, r5, r6, r7, lr}
	ldr	r0, .L1420
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L1420+0x4
	add	r5, r0, r1
	ldr	r1, .L1420+0x8
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L1420+0xc
	ldrb	r7, [r0]
	add	r6, r0, #0
	cmp	r7, #0x33
	bls	.LCB10853
	b	.L1405	@long jump
.LCB10853:
	lsl	r0, r7, #0x2
	ldr	r1, .L1420+0x10
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1421:
	.align	2, 0
.L1420:
	.word	gSpecialVar_0x8004
	.word	gSaveBlock1+0x2738
	.word	gScriptResult
	.word	gUnknown_020387E8
	.word	.L1418
	.align	2, 0
	.align	2, 0
.L1418:
	.word	.L1406
	.word	.L1407
	.word	.L1410
	.word	.L1411
	.word	.L1414
	.word	.L1414
	.word	.L1414
	.word	.L1415
	.word	.L1405
	.word	.L1405
	.word	.L1405
	.word	.L1405
	.word	.L1405
	.word	.L1405
	.word	.L1405
	.word	.L1405
	.word	.L1405
	.word	.L1405
	.word	.L1405
	.word	.L1405
	.word	.L1405
	.word	.L1405
	.word	.L1405
	.word	.L1405
	.word	.L1405
	.word	.L1405
	.word	.L1405
	.word	.L1405
	.word	.L1405
	.word	.L1405
	.word	.L1405
	.word	.L1405
	.word	.L1405
	.word	.L1405
	.word	.L1405
	.word	.L1405
	.word	.L1405
	.word	.L1405
	.word	.L1405
	.word	.L1405
	.word	.L1405
	.word	.L1405
	.word	.L1405
	.word	.L1405
	.word	.L1405
	.word	.L1405
	.word	.L1405
	.word	.L1405
	.word	.L1405
	.word	.L1405
	.word	.L1416
	.word	.L1417
.L1406:
	ldr	r0, .L1422
	add	r1, r5, #0
	add	r1, r1, #0x10
	ldrb	r2, [r5, #0x18]
	bl	TVShowConvertInternationalString
	ldr	r0, .L1422+0x4
	ldrh	r2, [r5, #0x2]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L1422+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldr	r1, .L1422+0xc
	mov	r0, #0x32
	strb	r0, [r1]
	b	.L1405
.L1423:
	.align	2, 0
.L1422:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	gUnknown_020387E8
.L1407:
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x3
	and	r0, r0, r1
	add	r2, r0, #0x1
	cmp	r2, #0x1
	bne	.L1408	@cond_branch
	ldr	r1, .L1424
	mov	r0, #0x2
	strb	r0, [r1]
	b	.L1405
.L1425:
	.align	2, 0
.L1424:
	.word	gUnknown_020387E8
.L1408:
	ldr	r1, .L1426
	add	r0, r2, #0x2
	strb	r0, [r1]
	b	.L1405
.L1427:
	.align	2, 0
.L1426:
	.word	gUnknown_020387E8
.L1410:
	mov	r0, #0x33
	strb	r0, [r6]
	b	.L1405
.L1411:
	bl	Random
	ldrb	r4, [r6]
	add	r4, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x3
	bl	__umodsi3
	add	r0, r0, r4
	strb	r0, [r6]
	b	.L1405
.L1414:
	add	r0, r5, #0
	bl	sub_80BF79C
	ldr	r1, .L1428
	mov	r0, #0x7
	strb	r0, [r1]
	b	.L1405
.L1429:
	.align	2, 0
.L1428:
	.word	gUnknown_020387E8
.L1415:
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x1f
	bl	__umodsi3
	add	r0, r0, #0x46
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	mov	r0, #0x2
	add	r1, r2, #0
	bl	sub_80BF088
	bl	TVShowDone
	b	.L1405
.L1416:
	ldr	r4, .L1430
	add	r1, r5, #0x4
	add	r0, r4, #0
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertEasyChatWordsToString
	add	r0, r4, #0
	bl	ShowFieldMessage
	ldr	r1, .L1430+0x4
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L1404
.L1431:
	.align	2, 0
.L1430:
	.word	gStringVar4
	.word	gUnknown_020387E8
.L1417:
	ldr	r4, .L1432
	add	r1, r5, #0x4
	add	r0, r4, #0
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertEasyChatWordsToString
	add	r0, r4, #0
	bl	ShowFieldMessage
	ldr	r1, .L1432+0x4
	mov	r0, #0x3
	strb	r0, [r1]
	b	.L1404
.L1433:
	.align	2, 0
.L1432:
	.word	gStringVar4
	.word	gUnknown_020387E8
.L1405:
	ldr	r0, .L1434
	lsl	r1, r7, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
.L1404:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1435:
	.align	2, 0
.L1434:
	.word	gTVFanClubTextGroup
.Lfe127:
	.size	 DoTVShowPokemonFanClubLetter,.Lfe127-DoTVShowPokemonFanClubLetter
	.align	2, 0
	.globl	DoTVShowRecentHappenings
	.type	 DoTVShowRecentHappenings,function
	.thumb_func
DoTVShowRecentHappenings:
	push	{r4, r5, r6, r7, lr}
	ldr	r0, .L1447
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L1447+0x4
	add	r5, r0, r1
	ldr	r1, .L1447+0x8
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L1447+0xc
	ldrb	r6, [r0]
	add	r7, r0, #0
	cmp	r6, #0x32
	bls	.LCB11080
	b	.L1437	@long jump
.LCB11080:
	lsl	r0, r6, #0x2
	ldr	r1, .L1447+0x10
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1448:
	.align	2, 0
.L1447:
	.word	gSpecialVar_0x8004
	.word	gSaveBlock1+0x2738
	.word	gScriptResult
	.word	gUnknown_020387E8
	.word	.L1445
	.align	2, 0
	.align	2, 0
.L1445:
	.word	.L1438
	.word	.L1439
	.word	.L1442
	.word	.L1442
	.word	.L1442
	.word	.L1443
	.word	.L1437
	.word	.L1437
	.word	.L1437
	.word	.L1437
	.word	.L1437
	.word	.L1437
	.word	.L1437
	.word	.L1437
	.word	.L1437
	.word	.L1437
	.word	.L1437
	.word	.L1437
	.word	.L1437
	.word	.L1437
	.word	.L1437
	.word	.L1437
	.word	.L1437
	.word	.L1437
	.word	.L1437
	.word	.L1437
	.word	.L1437
	.word	.L1437
	.word	.L1437
	.word	.L1437
	.word	.L1437
	.word	.L1437
	.word	.L1437
	.word	.L1437
	.word	.L1437
	.word	.L1437
	.word	.L1437
	.word	.L1437
	.word	.L1437
	.word	.L1437
	.word	.L1437
	.word	.L1437
	.word	.L1437
	.word	.L1437
	.word	.L1437
	.word	.L1437
	.word	.L1437
	.word	.L1437
	.word	.L1437
	.word	.L1437
	.word	.L1444
.L1438:
	ldr	r0, .L1449
	add	r1, r5, #0
	add	r1, r1, #0x10
	ldrb	r2, [r5, #0x18]
	bl	TVShowConvertInternationalString
	add	r0, r5, #0
	bl	sub_80BF79C
	ldr	r1, .L1449+0x4
	mov	r0, #0x32
	strb	r0, [r1]
	b	.L1437
.L1450:
	.align	2, 0
.L1449:
	.word	gStringVar1
	.word	gUnknown_020387E8
.L1439:
	bl	Random
	ldrb	r4, [r7]
	add	r4, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x3
	bl	__umodsi3
	add	r0, r0, r4
	strb	r0, [r7]
	b	.L1437
.L1442:
	mov	r0, #0x5
	strb	r0, [r7]
	b	.L1437
.L1443:
	bl	TVShowDone
	b	.L1437
.L1444:
	ldr	r4, .L1451
	add	r1, r5, #0x4
	add	r0, r4, #0
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertEasyChatWordsToString
	add	r0, r4, #0
	bl	ShowFieldMessage
	ldr	r1, .L1451+0x4
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L1436
.L1452:
	.align	2, 0
.L1451:
	.word	gStringVar4
	.word	gUnknown_020387E8
.L1437:
	ldr	r0, .L1453
	lsl	r1, r6, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
.L1436:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1454:
	.align	2, 0
.L1453:
	.word	gTVRecentHappeningsTextGroup
.Lfe128:
	.size	 DoTVShowRecentHappenings,.Lfe128-DoTVShowRecentHappenings
	.align	2, 0
	.globl	DoTVShowPokemonFanClubOpinions
	.type	 DoTVShowPokemonFanClubOpinions,function
	.thumb_func
DoTVShowPokemonFanClubOpinions:
	push	{r4, r5, r6, lr}
	ldr	r0, .L1465
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L1465+0x4
	add	r4, r0, r1
	ldr	r1, .L1465+0x8
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r6, .L1465+0xc
	ldrb	r5, [r6]
	cmp	r5, #0x3
	bgt	.L1464	@cond_branch
	cmp	r5, #0x1
	bge	.L1460	@cond_branch
	cmp	r5, #0
	beq	.L1457	@cond_branch
	b	.L1456
.L1466:
	.align	2, 0
.L1465:
	.word	gSpecialVar_0x8004
	.word	gSaveBlock1+0x2738
	.word	gScriptResult
	.word	gUnknown_020387E8
.L1464:
	cmp	r5, #0x4
	beq	.L1461	@cond_branch
	b	.L1456
.L1457:
	ldr	r0, .L1467
	add	r1, r4, #0x5
	ldrb	r2, [r4, #0xd]
	bl	TVShowConvertInternationalString
	ldr	r0, .L1467+0x4
	ldrh	r2, [r4, #0x2]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L1467+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L1467+0xc
	add	r1, r4, #0
	add	r1, r1, #0x10
	ldrb	r2, [r4, #0xe]
	bl	TVShowConvertInternationalString
	ldrb	r0, [r4, #0x4]
	lsr	r0, r0, #0x4
	add	r0, r0, #0x1
	strb	r0, [r6]
	b	.L1456
.L1468:
	.align	2, 0
.L1467:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	gStringVar3
.L1460:
	ldr	r0, .L1469
	add	r1, r4, #0x5
	ldrb	r2, [r4, #0xd]
	bl	TVShowConvertInternationalString
	ldr	r0, .L1469+0x4
	ldrh	r2, [r4, #0x2]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L1469+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L1469+0xc
	ldrh	r1, [r4, #0x1c]
	bl	EasyChat_GetWordText
	mov	r0, #0x4
	strb	r0, [r6]
	b	.L1456
.L1470:
	.align	2, 0
.L1469:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	gStringVar3
.L1461:
	ldr	r0, .L1471
	add	r1, r4, #0x5
	ldrb	r2, [r4, #0xd]
	bl	TVShowConvertInternationalString
	ldr	r0, .L1471+0x4
	ldrh	r1, [r4, #0x1e]
	bl	EasyChat_GetWordText
	bl	TVShowDone
.L1456:
	ldr	r0, .L1471+0x8
	lsl	r1, r5, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1472:
	.align	2, 0
.L1471:
	.word	gStringVar1
	.word	gStringVar3
	.word	gTVFanClubOpinionsTextGroup
.Lfe129:
	.size	 DoTVShowPokemonFanClubOpinions,.Lfe129-DoTVShowPokemonFanClubOpinions
	.align	2, 0
	.globl	nullsub_22
	.type	 nullsub_22,function
	.thumb_func
nullsub_22:
	bx	lr
.Lfe130:
	.size	 nullsub_22,.Lfe130-nullsub_22
	.align	2, 0
	.globl	DoTVShowPokemonNewsMassOutbreak
	.type	 DoTVShowPokemonNewsMassOutbreak,function
	.thumb_func
DoTVShowPokemonNewsMassOutbreak:
	push	{r4, lr}
	ldr	r0, .L1475
	ldrh	r0, [r0]
	lsl	r4, r0, #0x3
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L1475+0x4
	add	r4, r4, r0
	ldr	r0, .L1475+0x8
	ldrb	r1, [r4, #0x10]
	mov	r2, #0x0
	bl	GetMapSectionName
	ldr	r0, .L1475+0xc
	ldrh	r2, [r4, #0xc]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L1475+0x10
	add	r1, r1, r2
	bl	StringCopy
	bl	TVShowDone
	bl	StartMassOutbreak
	ldr	r1, .L1475+0x14
	ldr	r0, .L1475+0x18
	ldrb	r0, [r0]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	bl	ShowFieldMessage
	pop	{r4}
	pop	{r0}
	bx	r0
.L1476:
	.align	2, 0
.L1475:
	.word	gSpecialVar_0x8004
	.word	gSaveBlock1+0x2738
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	gTVPokemonOutbreakTextGroup
	.word	gUnknown_020387E8
.Lfe131:
	.size	 DoTVShowPokemonNewsMassOutbreak,.Lfe131-DoTVShowPokemonNewsMassOutbreak
	.align	2, 0
	.globl	DoTVShowInSearchOfTrainers
	.type	 DoTVShowInSearchOfTrainers,function
	.thumb_func
DoTVShowInSearchOfTrainers:
	push	{r4, r5, r6, r7, lr}
	ldr	r0, .L1500
	mov	r1, #0x0
	strh	r1, [r0]
	ldr	r0, .L1500+0x4
	ldrb	r7, [r0]
	add	r2, r0, #0
	cmp	r7, #0x8
	bls	.LCB11421
	b	.L1478	@long jump
.LCB11421:
	lsl	r0, r7, #0x2
	ldr	r1, .L1500+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1501:
	.align	2, 0
.L1500:
	.word	gScriptResult
	.word	gUnknown_020387E8
	.word	.L1498
	.align	2, 0
	.align	2, 0
.L1498:
	.word	.L1479
	.word	.L1482
	.word	.L1483
	.word	.L1492
	.word	.L1496
	.word	.L1496
	.word	.L1496
	.word	.L1496
	.word	.L1497
.L1479:
	ldr	r0, .L1502
	ldr	r4, .L1502+0x4
	ldr	r2, .L1502+0x8
	add	r1, r4, r2
	ldrb	r1, [r1]
	mov	r2, #0x0
	bl	GetMapSectionName
	ldr	r0, .L1502+0xc
	add	r4, r4, r0
	ldrb	r0, [r4]
	cmp	r0, #0x1
	bls	.L1480	@cond_branch
	ldr	r1, .L1502+0x10
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L1478
.L1503:
	.align	2, 0
.L1502:
	.word	gStringVar1
	.word	gSaveBlock1
	.word	0x2b18
	.word	0x2b19
	.word	gUnknown_020387E8
.L1480:
	ldr	r1, .L1504
	mov	r0, #0x2
	strb	r0, [r1]
	b	.L1478
.L1505:
	.align	2, 0
.L1504:
	.word	gUnknown_020387E8
.L1482:
	mov	r0, #0x2
	strb	r0, [r2]
	b	.L1478
.L1483:
	ldr	r0, .L1506
	ldr	r1, .L1506+0x4
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L1484	@cond_branch
	mov	r0, #0x4
	strb	r0, [r2]
	b	.L1478
.L1507:
	.align	2, 0
.L1506:
	.word	gSaveBlock1
	.word	0x2b1a
.L1484:
	mov	r0, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1486	@cond_branch
	mov	r0, #0x5
	strb	r0, [r2]
	b	.L1478
.L1486:
	mov	r0, #0x4
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1488	@cond_branch
	mov	r0, #0x6
	strb	r0, [r2]
	b	.L1478
.L1488:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1490	@cond_branch
	mov	r0, #0x7
	strb	r0, [r2]
	b	.L1478
.L1490:
	mov	r0, #0x3
	strb	r0, [r2]
	b	.L1478
.L1492:
	ldr	r0, .L1508
	ldr	r4, .L1508+0x4
	ldr	r2, .L1508+0x8
	add	r1, r4, r2
	ldrh	r1, [r1]
	mov	r6, #0xb
	mul	r1, r1, r6
	ldr	r5, .L1508+0xc
	add	r1, r1, r5
	bl	StringCopy
	ldr	r0, .L1508+0x10
	ldr	r2, .L1508+0x14
	add	r1, r4, r2
	ldrh	r2, [r1]
	lsl	r1, r2, #0x4
	sub	r1, r1, r2
	ldr	r2, .L1508+0x18
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L1508+0x1c
	ldr	r1, .L1508+0x20
	add	r4, r4, r1
	ldrh	r1, [r4]
	mul	r1, r1, r6
	add	r1, r1, r5
	bl	StringCopy
	ldr	r1, .L1508+0x24
	mov	r0, #0x8
	strb	r0, [r1]
	b	.L1478
.L1509:
	.align	2, 0
.L1508:
	.word	gStringVar1
	.word	gSaveBlock1
	.word	0x2b10
	.word	gSpeciesNames
	.word	gStringVar2
	.word	0x2b14
	.word	gMoveNames
	.word	gStringVar3
	.word	0x2b12
	.word	gUnknown_020387E8
.L1496:
	mov	r0, #0x8
	strb	r0, [r2]
	b	.L1478
.L1497:
	ldr	r0, .L1510
	ldr	r4, .L1510+0x4
	ldr	r2, .L1510+0x8
	add	r1, r4, r2
	ldrh	r1, [r1]
	bl	EasyChat_GetWordText
	ldr	r0, .L1510+0xc
	ldr	r2, .L1510+0x10
	add	r1, r4, r2
	ldrh	r1, [r1]
	mov	r6, #0xb
	mul	r1, r1, r6
	ldr	r5, .L1510+0x14
	add	r1, r1, r5
	bl	StringCopy
	ldr	r0, .L1510+0x18
	ldr	r1, .L1510+0x1c
	add	r4, r4, r1
	ldrh	r1, [r4]
	mul	r1, r1, r6
	add	r1, r1, r5
	bl	StringCopy
	ldr	r1, .L1510+0x20
	mov	r0, #0x1
	strh	r0, [r1]
	ldr	r1, .L1510+0x24
	mov	r0, #0x0
	strb	r0, [r1]
	bl	TakeTVShowInSearchOfTrainersOffTheAir
.L1478:
	ldr	r0, .L1510+0x28
	lsl	r1, r7, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1511:
	.align	2, 0
.L1510:
	.word	gStringVar1
	.word	gSaveBlock1
	.word	0x2b16
	.word	gStringVar2
	.word	0x2b10
	.word	gSpeciesNames
	.word	gStringVar3
	.word	0x2b12
	.word	gScriptResult
	.word	gUnknown_020387E8
	.word	gTVGabbyAndTyTextGroup
.Lfe132:
	.size	 DoTVShowInSearchOfTrainers,.Lfe132-DoTVShowInSearchOfTrainers
	.align	2, 0
	.globl	DoTVShowPokemonAngler
	.type	 DoTVShowPokemonAngler,function
	.thumb_func
DoTVShowPokemonAngler:
	push	{r4, r5, lr}
	ldr	r0, .L1520
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L1520+0x4
	add	r4, r0, r1
	ldr	r0, .L1520+0x8
	mov	r1, #0x0
	strh	r1, [r0]
	ldrb	r0, [r4, #0x2]
	ldrb	r2, [r4, #0x3]
	cmp	r0, r2
	bcs	.L1513	@cond_branch
	ldr	r0, .L1520+0xc
	strb	r1, [r0]
	b	.L1514
.L1521:
	.align	2, 0
.L1520:
	.word	gSpecialVar_0x8004
	.word	gSaveBlock1+0x2738
	.word	gScriptResult
	.word	gUnknown_020387E8
.L1513:
	ldr	r1, .L1522
	mov	r0, #0x1
	strb	r0, [r1]
	add	r0, r1, #0
.L1514:
	ldrb	r5, [r0]
	cmp	r5, #0
	beq	.L1516	@cond_branch
	cmp	r5, #0x1
	beq	.L1517	@cond_branch
	b	.L1515
.L1523:
	.align	2, 0
.L1522:
	.word	gUnknown_020387E8
.L1516:
	ldr	r0, .L1524
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0x6]
	bl	TVShowConvertInternationalString
	ldr	r0, .L1524+0x4
	ldrh	r2, [r4, #0x4]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L1524+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldrb	r1, [r4, #0x3]
	mov	r0, #0x2
	bl	sub_80BF088
	bl	TVShowDone
	b	.L1515
.L1525:
	.align	2, 0
.L1524:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
.L1517:
	ldr	r0, .L1526
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0x6]
	bl	TVShowConvertInternationalString
	ldr	r0, .L1526+0x4
	ldrh	r2, [r4, #0x4]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L1526+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldrb	r1, [r4, #0x2]
	mov	r0, #0x2
	bl	sub_80BF088
	bl	TVShowDone
.L1515:
	ldr	r0, .L1526+0xc
	lsl	r1, r5, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1527:
	.align	2, 0
.L1526:
	.word	gStringVar1
	.word	gStringVar2
	.word	gSpeciesNames
	.word	gTVFishingGuruAdviceTextGroup
.Lfe133:
	.size	 DoTVShowPokemonAngler,.Lfe133-DoTVShowPokemonAngler
	.align	2, 0
	.globl	DoTVShowTheWorldOfMasters
	.type	 DoTVShowTheWorldOfMasters,function
	.thumb_func
DoTVShowTheWorldOfMasters:
	push	{r4, r5, r6, lr}
	ldr	r0, .L1536
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L1536+0x4
	add	r4, r0, r1
	ldr	r1, .L1536+0x8
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r6, .L1536+0xc
	ldrb	r5, [r6]
	cmp	r5, #0x1
	beq	.L1531	@cond_branch
	cmp	r5, #0x1
	bgt	.L1535	@cond_branch
	cmp	r5, #0
	beq	.L1530	@cond_branch
	b	.L1529
.L1537:
	.align	2, 0
.L1536:
	.word	gSpecialVar_0x8004
	.word	gSaveBlock1+0x2738
	.word	gScriptResult
	.word	gUnknown_020387E8
.L1535:
	cmp	r5, #0x2
	beq	.L1532	@cond_branch
	b	.L1529
.L1530:
	ldr	r0, .L1538
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0xb]
	bl	TVShowConvertInternationalString
	ldrh	r1, [r4, #0x6]
	mov	r0, #0x1
	bl	sub_80BF088
	ldrh	r1, [r4, #0x2]
	mov	r0, #0x2
	bl	sub_80BF088
	mov	r0, #0x1
	strb	r0, [r6]
	b	.L1529
.L1539:
	.align	2, 0
.L1538:
	.word	gStringVar1
.L1531:
	ldr	r0, .L1540
	ldrh	r2, [r4, #0x8]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L1540+0x4
	add	r1, r1, r2
	bl	StringCopy
	mov	r0, #0x2
	strb	r0, [r6]
	b	.L1529
.L1541:
	.align	2, 0
.L1540:
	.word	gStringVar1
	.word	gSpeciesNames
.L1532:
	ldr	r0, .L1542
	add	r1, r4, #0
	add	r1, r1, #0x13
	ldrb	r2, [r4, #0xb]
	bl	TVShowConvertInternationalString
	ldr	r0, .L1542+0x4
	ldrb	r1, [r4, #0xa]
	mov	r2, #0x0
	bl	GetMapSectionName
	ldr	r0, .L1542+0x8
	ldrh	r2, [r4, #0x4]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L1542+0xc
	add	r1, r1, r2
	bl	StringCopy
	bl	TVShowDone
.L1529:
	ldr	r0, .L1542+0x10
	lsl	r1, r5, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ShowFieldMessage
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1543:
	.align	2, 0
.L1542:
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar3
	.word	gSpeciesNames
	.word	gTVWorldOfMastersTextGroup
.Lfe134:
	.size	 DoTVShowTheWorldOfMasters,.Lfe134-DoTVShowTheWorldOfMasters
	.align	2, 0
	.globl	TVShowDone
	.type	 TVShowDone,function
	.thumb_func
TVShowDone:
	ldr	r1, .L1545
	mov	r0, #0x1
	strh	r0, [r1]
	ldr	r1, .L1545+0x4
	mov	r0, #0x0
	strb	r0, [r1]
	ldr	r2, .L1545+0x8
	ldr	r0, .L1545+0xc
	ldrh	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldr	r1, .L1545+0x10
	add	r0, r0, r1
	mov	r1, #0x0
	strb	r1, [r0]
	bx	lr
.L1546:
	.align	2, 0
.L1545:
	.word	gScriptResult
	.word	gUnknown_020387E8
	.word	gSaveBlock1
	.word	gSpecialVar_0x8004
	.word	0x2739
.Lfe135:
	.size	 TVShowDone,.Lfe135-TVShowDone
	.align	2, 0
	.globl	sub_80C2014
	.type	 sub_80C2014,function
	.thumb_func
sub_80C2014:
	ldr	r1, .L1548
	mov	r0, #0x0
	strb	r0, [r1]
	bx	lr
.L1549:
	.align	2, 0
.L1548:
	.word	gUnknown_020387E8
.Lfe136:
	.size	 sub_80C2014,.Lfe136-sub_80C2014
	.comm	gUnknown_03005D38, 4	@ 4

	.lcomm	gUnknown_03000720,1

	.lcomm	gUnknown_03000721,1

	.lcomm	gUnknown_03000722,1
.text
	.align	2, 0
