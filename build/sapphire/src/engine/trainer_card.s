@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.globl	gTrainerCards
	.section ewram_data,"aw"
	.align	2, 0
	.type	 gTrainerCards,object
	.size	 gTrainerCards,224
gTrainerCards:
	.byte	0x0
	.space	55
	.space	168
	.globl	gBadgesTiles
	.section .rodata
	.type	 gBadgesTiles,object
gBadgesTiles:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xf0
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x1f
	.byte	0x34
	.byte	0x0
	.byte	0xf0
	.byte	0x11
	.byte	0x34
	.byte	0x0
	.byte	0x1f
	.byte	0x11
	.byte	0x34
	.byte	0xf0
	.byte	0x11
	.byte	0x41
	.byte	0x33
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xf0
	.byte	0xf
	.byte	0x0
	.byte	0x0
	.byte	0xf0
	.byte	0xf1
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.byte	0x11
	.byte	0xf
	.byte	0x0
	.byte	0x43
	.byte	0x21
	.byte	0xf2
	.byte	0x0
	.byte	0x33
	.byte	0x24
	.byte	0x22
	.byte	0xf
	.byte	0x33
	.byte	0x43
	.byte	0x22
	.byte	0xf2
	.byte	0x33
	.byte	0x43
	.byte	0x32
	.byte	0xf3
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xf0
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x3f
	.byte	0x11
	.byte	0x0
	.byte	0xf0
	.byte	0x21
	.byte	0x22
	.byte	0x0
	.byte	0x1f
	.byte	0x22
	.byte	0x22
	.byte	0xf0
	.byte	0x23
	.byte	0x22
	.byte	0x22
	.byte	0xf0
	.byte	0x21
	.byte	0x22
	.byte	0x22
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xf
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xf4
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x32
	.byte	0xf
	.byte	0x0
	.byte	0x0
	.byte	0x22
	.byte	0xf3
	.byte	0xff
	.byte	0xf
	.byte	0x22
	.byte	0x42
	.byte	0x33
	.byte	0xf
	.byte	0x22
	.byte	0x42
	.byte	0x22
	.byte	0xf
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.byte	0x11
	.byte	0x0
	.byte	0xf0
	.byte	0x21
	.byte	0x22
	.byte	0x0
	.byte	0xf0
	.byte	0x22
	.byte	0x44
	.byte	0x0
	.byte	0x1f
	.byte	0x42
	.byte	0x33
	.byte	0x0
	.byte	0x1f
	.byte	0x42
	.byte	0x33
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xf0
	.byte	0x0
	.byte	0xff
	.byte	0x0
	.byte	0x2f
	.byte	0xf
	.byte	0x11
	.byte	0xff
	.byte	0xf2
	.byte	0x0
	.byte	0x22
	.byte	0x32
	.byte	0xf
	.byte	0x0
	.byte	0x44
	.byte	0x22
	.byte	0xf
	.byte	0x0
	.byte	0x33
	.byte	0x24
	.byte	0xf3
	.byte	0x0
	.byte	0x33
	.byte	0x24
	.byte	0xf3
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0xf0
	.byte	0x11
	.byte	0x0
	.byte	0x0
	.byte	0xf0
	.byte	0x21
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x2f
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xf0
	.byte	0x0
	.byte	0xff
	.byte	0xf
	.byte	0xf0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.byte	0xff
	.byte	0x0
	.byte	0xff
	.byte	0xf2
	.byte	0x11
	.byte	0xff
	.byte	0x22
	.byte	0xf2
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0xf
	.byte	0x22
	.byte	0x22
	.byte	0xff
	.byte	0x0
	.byte	0x22
	.byte	0x22
	.byte	0xf
	.byte	0x0
	.byte	0x22
	.byte	0x22
	.byte	0xf
	.byte	0x0
	.byte	0x22
	.byte	0xf2
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.byte	0xff
	.byte	0x0
	.byte	0xf0
	.byte	0x11
	.byte	0x11
	.byte	0xf
	.byte	0x1f
	.byte	0x21
	.byte	0x22
	.byte	0xf3
	.byte	0x1f
	.byte	0x22
	.byte	0x22
	.byte	0xf3
	.byte	0x1f
	.byte	0x22
	.byte	0x22
	.byte	0xf3
	.byte	0x1f
	.byte	0x22
	.byte	0x32
	.byte	0xf3
	.byte	0xf0
	.byte	0x33
	.byte	0x33
	.byte	0xff
	.byte	0x0
	.byte	0xff
	.byte	0xff
	.byte	0x2f
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xf
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xf2
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xf0
	.byte	0xff
	.byte	0xff
	.byte	0xf
	.byte	0xf0
	.byte	0x11
	.byte	0x11
	.byte	0xf1
	.byte	0xf0
	.byte	0x21
	.byte	0x22
	.byte	0x22
	.byte	0xf0
	.byte	0x44
	.byte	0x44
	.byte	0x22
	.byte	0xf0
	.byte	0x21
	.byte	0x22
	.byte	0x44
	.byte	0xf0
	.byte	0x21
	.byte	0x22
	.byte	0x22
	.byte	0xf0
	.byte	0x44
	.byte	0x44
	.byte	0x22
	.byte	0xf0
	.byte	0x21
	.byte	0x22
	.byte	0x44
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xf
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xf2
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x22
	.byte	0xf
	.byte	0x0
	.byte	0x0
	.byte	0x22
	.byte	0xf2
	.byte	0x0
	.byte	0x0
	.byte	0x22
	.byte	0x22
	.byte	0xf
	.byte	0x0
	.byte	0x22
	.byte	0x22
	.byte	0xf2
	.byte	0x0
	.byte	0x22
	.byte	0x22
	.byte	0xf2
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xf0
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x1f
	.byte	0x11
	.byte	0xf
	.byte	0xf0
	.byte	0x21
	.byte	0x22
	.byte	0xf3
	.byte	0x1f
	.byte	0x22
	.byte	0x22
	.byte	0xf4
	.byte	0x1f
	.byte	0x22
	.byte	0x42
	.byte	0xf
	.byte	0x1f
	.byte	0x22
	.byte	0xf2
	.byte	0x0
	.byte	0x1f
	.byte	0x22
	.byte	0xf2
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.byte	0xf
	.byte	0x0
	.byte	0xf0
	.byte	0x11
	.byte	0xf1
	.byte	0x0
	.byte	0x1f
	.byte	0x22
	.byte	0x32
	.byte	0xf
	.byte	0x4f
	.byte	0x22
	.byte	0x22
	.byte	0xf3
	.byte	0xf0
	.byte	0x24
	.byte	0x22
	.byte	0xf3
	.byte	0x0
	.byte	0x2f
	.byte	0x22
	.byte	0xf3
	.byte	0x0
	.byte	0x2f
	.byte	0x22
	.byte	0xf3
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xf0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x1f
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x2f
	.byte	0x0
	.byte	0x0
	.byte	0xf0
	.byte	0x21
	.byte	0x0
	.byte	0x0
	.byte	0xf0
	.byte	0x21
	.byte	0x0
	.byte	0x0
	.byte	0x1f
	.byte	0x22
	.byte	0x0
	.byte	0x0
	.byte	0x1f
	.byte	0x22
	.byte	0x0
	.byte	0xf0
	.byte	0xff
	.byte	0x23
	.byte	0xf
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xf1
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xf2
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x32
	.byte	0xf
	.byte	0x0
	.byte	0x0
	.byte	0x32
	.byte	0xf
	.byte	0x0
	.byte	0x0
	.byte	0x22
	.byte	0xf3
	.byte	0x0
	.byte	0x0
	.byte	0x22
	.byte	0xf3
	.byte	0x0
	.byte	0x0
	.byte	0x32
	.byte	0xff
	.byte	0xf
	.byte	0x0
	.byte	0x1f
	.byte	0x11
	.byte	0x34
	.byte	0x33
	.byte	0x2f
	.byte	0x22
	.byte	0x34
	.byte	0x33
	.byte	0xf0
	.byte	0x22
	.byte	0x42
	.byte	0x33
	.byte	0x0
	.byte	0x2f
	.byte	0x22
	.byte	0x34
	.byte	0x0
	.byte	0xf0
	.byte	0x22
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x2f
	.byte	0xf
	.byte	0x0
	.byte	0x0
	.byte	0xf0
	.byte	0xf
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x33
	.byte	0x24
	.byte	0x33
	.byte	0xf
	.byte	0x43
	.byte	0x31
	.byte	0xf3
	.byte	0x0
	.byte	0x43
	.byte	0x33
	.byte	0xf
	.byte	0x0
	.byte	0x43
	.byte	0xf3
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.byte	0xf
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xf0
	.byte	0x21
	.byte	0x22
	.byte	0x44
	.byte	0xf0
	.byte	0x23
	.byte	0x42
	.byte	0x22
	.byte	0x0
	.byte	0x2f
	.byte	0x24
	.byte	0x22
	.byte	0x0
	.byte	0xf0
	.byte	0x2f
	.byte	0x22
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.byte	0x22
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x22
	.byte	0x43
	.byte	0x33
	.byte	0xf
	.byte	0x24
	.byte	0x43
	.byte	0x33
	.byte	0xf
	.byte	0x42
	.byte	0xf3
	.byte	0xff
	.byte	0xf
	.byte	0xf2
	.byte	0xf
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x1f
	.byte	0x42
	.byte	0x33
	.byte	0x0
	.byte	0x1f
	.byte	0x42
	.byte	0x33
	.byte	0x0
	.byte	0xf0
	.byte	0x22
	.byte	0x44
	.byte	0x0
	.byte	0xf0
	.byte	0x21
	.byte	0x22
	.byte	0x0
	.byte	0x2f
	.byte	0xff
	.byte	0x11
	.byte	0xf0
	.byte	0xf2
	.byte	0x0
	.byte	0xff
	.byte	0x0
	.byte	0xf
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x33
	.byte	0x24
	.byte	0xf3
	.byte	0x0
	.byte	0x33
	.byte	0x24
	.byte	0xf3
	.byte	0x0
	.byte	0x44
	.byte	0x22
	.byte	0xf
	.byte	0x0
	.byte	0x22
	.byte	0x32
	.byte	0xf
	.byte	0x0
	.byte	0x11
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xf0
	.byte	0x11
	.byte	0xf1
	.byte	0x2f
	.byte	0x1f
	.byte	0x21
	.byte	0x22
	.byte	0x22
	.byte	0x1f
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x1f
	.byte	0x22
	.byte	0x42
	.byte	0x44
	.byte	0x1f
	.byte	0x22
	.byte	0x24
	.byte	0xf2
	.byte	0xf0
	.byte	0x42
	.byte	0x22
	.byte	0xf2
	.byte	0x0
	.byte	0xff
	.byte	0x22
	.byte	0xf
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.byte	0x0
	.byte	0x22
	.byte	0x22
	.byte	0xf
	.byte	0x0
	.byte	0x22
	.byte	0x22
	.byte	0xf2
	.byte	0x0
	.byte	0x22
	.byte	0x22
	.byte	0xf2
	.byte	0x0
	.byte	0xff
	.byte	0x22
	.byte	0xf
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x2f
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xf0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xf2
	.byte	0xff
	.byte	0xff
	.byte	0x0
	.byte	0xff
	.byte	0x11
	.byte	0x11
	.byte	0xf
	.byte	0x1f
	.byte	0x21
	.byte	0x22
	.byte	0xf3
	.byte	0x1f
	.byte	0x22
	.byte	0x22
	.byte	0xf3
	.byte	0x1f
	.byte	0x22
	.byte	0x22
	.byte	0xf3
	.byte	0x1f
	.byte	0x22
	.byte	0x32
	.byte	0xf3
	.byte	0xf0
	.byte	0x33
	.byte	0x33
	.byte	0xf
	.byte	0x0
	.byte	0xff
	.byte	0xff
	.byte	0x0
	.byte	0xf0
	.byte	0x21
	.byte	0x22
	.byte	0x22
	.byte	0xf0
	.byte	0xff
	.byte	0x2f
	.byte	0x22
	.byte	0x0
	.byte	0x0
	.byte	0xf0
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0xf
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0xf
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0xf
	.byte	0x2f
	.byte	0x22
	.byte	0x22
	.byte	0xf
	.byte	0xf0
	.byte	0x22
	.byte	0xf2
	.byte	0x0
	.byte	0x0
	.byte	0x2f
	.byte	0xf2
	.byte	0x0
	.byte	0x0
	.byte	0x2f
	.byte	0xf
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0xf0
	.byte	0x23
	.byte	0x42
	.byte	0xf
	.byte	0x0
	.byte	0x3f
	.byte	0x22
	.byte	0xf4
	.byte	0x0
	.byte	0xf0
	.byte	0x23
	.byte	0x22
	.byte	0x0
	.byte	0x0
	.byte	0x3f
	.byte	0x22
	.byte	0x0
	.byte	0x0
	.byte	0xf0
	.byte	0x23
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x3f
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xf0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xf0
	.byte	0x24
	.byte	0x32
	.byte	0xf
	.byte	0x4f
	.byte	0x22
	.byte	0xf3
	.byte	0x0
	.byte	0x22
	.byte	0x32
	.byte	0xf
	.byte	0x0
	.byte	0x22
	.byte	0xf3
	.byte	0x0
	.byte	0x0
	.byte	0x32
	.byte	0xf
	.byte	0x0
	.byte	0x0
	.byte	0xf3
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xf
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x1f
	.byte	0xf1
	.byte	0xff
	.byte	0x0
	.byte	0x2f
	.byte	0xf2
	.byte	0x0
	.byte	0xf0
	.byte	0x21
	.byte	0x32
	.byte	0xf
	.byte	0xf0
	.byte	0x21
	.byte	0x32
	.byte	0xf
	.byte	0x1f
	.byte	0x22
	.byte	0x22
	.byte	0xf3
	.byte	0x1f
	.byte	0x22
	.byte	0x22
	.byte	0xf3
	.byte	0xf0
	.byte	0x23
	.byte	0x32
	.byte	0xf
	.byte	0x0
	.byte	0xff
	.byte	0xff
	.byte	0x0
	.byte	0xff
	.byte	0x1f
	.byte	0xf1
	.byte	0x0
	.byte	0x0
	.byte	0x2f
	.byte	0xf2
	.byte	0x0
	.byte	0xf0
	.byte	0x21
	.byte	0x32
	.byte	0xf
	.byte	0xf0
	.byte	0x21
	.byte	0x32
	.byte	0xf
	.byte	0x1f
	.byte	0x22
	.byte	0x22
	.byte	0xf3
	.byte	0x1f
	.byte	0x22
	.byte	0x22
	.byte	0xf3
	.byte	0xf0
	.byte	0x23
	.byte	0x32
	.byte	0xf
	.byte	0x0
	.byte	0xff
	.byte	0xff
	.byte	0x0
	.size	 gBadgesTiles,1024
	.globl	ewram_
	.align	2, 0
	.type	 ewram_,object
	.size	 ewram_,4
ewram_:
	.word	gSharedMem
	.globl	gUnknown_083B5EBC
	.align	2, 0
	.type	 gUnknown_083B5EBC,object
gUnknown_083B5EBC:
	.word	sub_8093864
	.word	sub_80938A8
	.word	sub_80938CC
	.word	sub_8093918
	.word	sub_8093938
	.word	sub_8093954
	.word	sub_8093980
	.size	 gUnknown_083B5EBC,28
	.globl	gUnknown_083B5ED8
	.align	2, 0
	.type	 gUnknown_083B5ED8,object
gUnknown_083B5ED8:
	.word	sub_8093AA0
	.word	sub_8093AF0
	.word	sub_8093C0C
	.word	sub_8093C38
	.word	sub_8093D50
	.size	 gUnknown_083B5ED8,20
.text
	.align	2, 0
	.globl	sub_8093110
	.type	 sub_8093110,function
	.thumb_func
sub_8093110:
	push	{lr}
	bl	sub_80932AC
	ldr	r0, .L3
	bl	SetMainCallback2
	ldr	r0, .L3+0x4
	add	r0, r0, #0x9c
	mov	r1, #0x2
	strb	r1, [r0]
	pop	{r0}
	bx	r0
.L4:
	.align	2, 0
.L3:
	.word	sub_8093174
	.word	gSharedMem
.Lfe1:
	.size	 sub_8093110,.Lfe1-sub_8093110
	.align	2, 0
	.globl	sub_8093130
	.type	 sub_8093130,function
	.thumb_func
sub_8093130:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r4, #0
	bl	sub_80932E4
	ldr	r0, .L6
	bl	SetMainCallback2
	ldr	r2, .L6+0x4
	ldr	r3, .L6+0x8
	ldr	r0, .L6+0xc
	lsl	r4, r4, #0x2
	add	r4, r4, r0
	ldrb	r1, [r4, #0x1]
	lsl	r0, r1, #0x3
	sub	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	ldrh	r0, [r0, #0x1a]
	add	r2, r2, #0x9c
	strb	r0, [r2]
	pop	{r4}
	pop	{r0}
	bx	r0
.L7:
	.align	2, 0
.L6:
	.word	sub_8093174
	.word	gSharedMem
	.word	gLinkPlayers
	.word	gLinkPlayerMapObjects
.Lfe2:
	.size	 sub_8093130,.Lfe2-sub_8093130
	.align	2, 0
	.type	 sub_8093174,function
	.thumb_func
sub_8093174:
	push	{lr}
	ldr	r0, .L23
	ldr	r1, .L23+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x8
	bhi	.L9	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L23+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L24:
	.align	2, 0
.L23:
	.word	gMain
	.word	0x43c
	.word	.L20
	.align	2, 0
	.align	2, 0
.L20:
	.word	.L10
	.word	.L11
	.word	.L12
	.word	.L13
	.word	.L14
	.word	.L15
	.word	.L17
	.word	.L18
	.word	.L19
.L10:
	bl	sub_8093534
	bl	sub_8093688
	b	.L22
.L11:
	bl	sub_8093598
	b	.L22
.L12:
	bl	sub_80935EC
	b	.L22
.L13:
	bl	sub_8093610
	bl	sub_80937A4
	b	.L22
.L14:
	bl	sub_80937BC
	ldr	r1, .L25
	ldr	r0, .L25+0x4
	add	r1, r1, r0
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
.L15:
	bl	MultistepInitMenuWindowContinue
	cmp	r0, #0
	beq	.L9	@cond_branch
	b	.L22
.L26:
	.align	2, 0
.L25:
	.word	gMain
	.word	0x43c
.L17:
	bl	sub_80937F0
	b	.L22
.L18:
	bl	sub_80937D8
.L22:
	ldr	r1, .L27
	ldr	r0, .L27+0x4
	add	r1, r1, r0
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L9
.L28:
	.align	2, 0
.L27:
	.word	gMain
	.word	0x43c
.L19:
	bl	nullsub_15
	bl	sub_8093800
	bl	sub_8093550
	ldr	r0, .L29
	bl	SetMainCallback2
.L9:
	pop	{r0}
	bx	r0
.L30:
	.align	2, 0
.L29:
	.word	sub_809323C
.Lfe3:
	.size	 sub_8093174,.Lfe3-sub_8093174
	.align	2, 0
	.type	 sub_809323C,function
	.thumb_func
sub_809323C:
	push	{lr}
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	UpdatePaletteFade
	pop	{r0}
	bx	r0
.Lfe4:
	.size	 sub_809323C,.Lfe4-sub_809323C
	.align	2, 0
	.type	 sub_8093254,function
	.thumb_func
sub_8093254:
	push	{lr}
	bl	LoadOam
	bl	ProcessSpriteCopyRequests
	bl	TransferPlttBuffer
	ldr	r2, .L35
	ldrb	r0, [r2, #0x6]
	add	r0, r0, #0x1
	strb	r0, [r2, #0x6]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3b
	bls	.L33	@cond_branch
	mov	r0, #0x0
	strb	r0, [r2, #0x6]
	ldrb	r0, [r2, #0x5]
	mov	r1, #0x1
	eor	r0, r0, r1
	strb	r0, [r2, #0x5]
.L33:
	ldrb	r0, [r2, #0x4]
	cmp	r0, #0
	beq	.L34	@cond_branch
	ldr	r1, .L35+0x4
	ldr	r0, .L35+0x8
	str	r0, [r1]
	mov	r2, #0xf0
	lsl	r2, r2, #0x3
	add	r0, r0, r2
	str	r0, [r1, #0x4]
	ldr	r0, .L35+0xc
	str	r0, [r1, #0x8]
	ldr	r0, [r1, #0x8]
.L34:
	pop	{r0}
	bx	r0
.L36:
	.align	2, 0
.L35:
	.word	gSharedMem
	.word	0x40000d4
	.word	gUnknown_03004DE0
	.word	0x800000a0
.Lfe5:
	.size	 sub_8093254,.Lfe5-sub_8093254
	.align	2, 0
	.type	 sub_80932AC,function
	.thumb_func
sub_80932AC:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r0, .L38
	mov	r1, #0xff
	bl	CreateTask
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	ldr	r1, .L38+0x4
	add	r0, r0, r1
	mov	r1, #0x0
	strh	r1, [r0, #0x8]
	add	r0, r0, #0xc
	add	r1, r4, #0
	bl	StoreWordInTwoHalfwords
	pop	{r4}
	pop	{r0}
	bx	r0
.L39:
	.align	2, 0
.L38:
	.word	nullsub_60
	.word	gTasks
.Lfe6:
	.size	 sub_80932AC,.Lfe6-sub_80932AC
	.align	2, 0
	.type	 sub_80932E4,function
	.thumb_func
sub_80932E4:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L41
	mov	r1, #0xff
	bl	CreateTask
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	ldr	r1, .L41+0x4
	add	r0, r0, r1
	mov	r1, #0x1
	strh	r1, [r0, #0x8]
	strh	r4, [r0, #0xa]
	add	r0, r0, #0xc
	add	r1, r5, #0
	bl	StoreWordInTwoHalfwords
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L42:
	.align	2, 0
.L41:
	.word	nullsub_60
	.word	gTasks
.Lfe7:
	.size	 sub_80932E4,.Lfe7-sub_80932E4
	.align	2, 0
	.globl	sub_8093324
	.type	 sub_8093324,function
	.thumb_func
sub_8093324:
	push	{r4, r5, lr}
	ldr	r0, .L46
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L46+0x4
	add	r4, r1, r0
	ldr	r5, .L46+0x8
	ldrh	r0, [r4, #0x8]
	strb	r0, [r5, #0x1]
	add	r0, r4, #0
	add	r0, r0, #0xc
	add	r1, r5, #0
	add	r1, r1, #0x60
	bl	LoadWordFromTwoHalfwords
	ldrb	r0, [r5, #0x1]
	cmp	r0, #0
	beq	.L44	@cond_branch
	ldr	r2, .L46+0xc
	mov	r1, #0xa
	ldrsh	r0, [r4, r1]
	lsl	r1, r0, #0x3
	sub	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	add	r0, r5, #0
	add	r0, r0, #0x64
	mov	r2, #0x38
	bl	memcpy
	b	.L45
.L47:
	.align	2, 0
.L46:
	.word	nullsub_60
	.word	gTasks
	.word	gSharedMem
	.word	gTrainerCards
.L44:
	add	r0, r5, #0
	add	r0, r0, #0x64
	bl	sub_8093390
.L45:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe8:
	.size	 sub_8093324,.Lfe8-sub_8093324
	.align	2, 0
	.type	 nullsub_60,function
	.thumb_func
nullsub_60:
	bx	lr
.Lfe9:
	.size	 nullsub_60,.Lfe9-nullsub_60
	.align	2, 0
	.globl	sub_8093390
	.type	 sub_8093390,function
	.thumb_func
sub_8093390:
	push	{r4, r5, r6, r7, lr}
	add	r5, r0, #0
	ldr	r6, .L64
	ldrb	r0, [r6, #0x8]
	strb	r0, [r5]
	ldrh	r0, [r6, #0xe]
	strh	r0, [r5, #0x10]
	ldrb	r0, [r6, #0x10]
	strh	r0, [r5, #0x12]
	mov	r0, #0x1
	bl	GetGameStat
	add	r4, r0, #0
	mov	r0, #0xa
	bl	GetGameStat
	cmp	r0, #0
	bne	.L50	@cond_branch
	mov	r4, #0x0
.L50:
	lsr	r0, r4, #0x10
	strh	r0, [r5, #0x6]
	lsr	r0, r4, #0x8
	mov	r1, #0xff
	and	r0, r0, r1
	strh	r0, [r5, #0x8]
	and	r4, r4, r1
	strh	r4, [r5, #0xa]
	ldr	r0, .L64+0x4
	bl	FlagGet
	strb	r0, [r5, #0x2]
	bl	sub_8090FC0
	strb	r0, [r5, #0x3]
	bl	GetPokedexSeenCount
	strh	r0, [r5, #0xc]
	ldrb	r1, [r6, #0xb]
	lsl	r1, r1, #0x8
	ldrb	r0, [r6, #0xa]
	orr	r0, r0, r1
	strh	r0, [r5, #0xe]
	ldr	r7, .L64+0x8
	mov	r0, #0x17
	add	r1, r7, #0
	bl	sav12_xor_get_clamped_above
	strh	r0, [r5, #0x14]
	mov	r0, #0x18
	add	r1, r7, #0
	bl	sav12_xor_get_clamped_above
	strh	r0, [r5, #0x16]
	ldr	r1, .L64+0xc
	mov	r0, #0x23
	bl	sav12_xor_get_clamped_above
	strh	r0, [r5, #0x1c]
	ldr	r4, .L64+0x10
	mov	r0, #0x22
	add	r1, r4, #0
	bl	sav12_xor_get_clamped_above
	strh	r0, [r5, #0x1e]
	mov	r0, #0x15
	add	r1, r4, #0
	bl	sav12_xor_get_clamped_above
	strh	r0, [r5, #0x20]
	mov	r1, #0xae
	lsl	r1, r1, #0x3
	add	r0, r6, r1
	ldrh	r0, [r0]
	strh	r0, [r5, #0x18]
	ldr	r2, .L64+0x14
	add	r1, r6, r2
	ldrh	r1, [r1]
	strh	r1, [r5, #0x1a]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, r7
	bls	.L51	@cond_branch
	strh	r7, [r5, #0x18]
.L51:
	ldrh	r0, [r5, #0x1a]
	cmp	r0, r7
	bls	.L52	@cond_branch
	strh	r7, [r5, #0x1a]
.L52:
	mov	r4, #0x0
	bl	sub_80C4D50
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x4
	bls	.L53	@cond_branch
	mov	r4, #0x1
.L53:
	strb	r4, [r5, #0x4]
	ldr	r0, .L64+0x18
	mov	r2, #0x92
	lsl	r2, r2, #0x3
	add	r1, r0, r2
	ldr	r1, [r1]
	str	r1, [r5, #0x24]
	mov	r2, #0x0
	add	r6, r5, #0
	add	r6, r6, #0x30
	add	r3, r5, #0
	add	r3, r3, #0x28
	ldr	r1, .L64+0x1c
	add	r4, r0, r1
.L57:
	lsl	r0, r2, #0x1
	add	r1, r3, r0
	add	r0, r0, r4
	ldrh	r0, [r0]
	strh	r0, [r1]
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x3
	bls	.L57	@cond_branch
	mov	r2, #0x0
	add	r3, r6, #0
	ldr	r4, .L64
.L62:
	add	r1, r3, r2
	add	r0, r2, r4
	ldrb	r0, [r0]
	strb	r0, [r1]
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x7
	bls	.L62	@cond_branch
	add	r0, r5, #0
	bl	sub_80934F4
	strb	r0, [r5, #0x1]
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L65:
	.align	2, 0
.L64:
	.word	gSaveBlock2
	.word	0x801
	.word	0x270f
	.word	0x3e7
	.word	0xffff
	.word	0x572
	.word	gSaveBlock1
	.word	0x2b1c
.Lfe10:
	.size	 sub_8093390,.Lfe10-sub_8093390
	.align	2, 0
	.globl	sub_80934C4
	.type	 sub_80934C4,function
	.thumb_func
sub_80934C4:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L67
	lsl	r1, r0, #0x3
	sub	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldrb	r0, [r1, #0x1]
	bx	lr
.L68:
	.align	2, 0
.L67:
	.word	gTrainerCards
.Lfe11:
	.size	 sub_80934C4,.Lfe11-sub_80934C4
	.align	2, 0
	.type	 sav12_xor_get_clamped_above,function
	.thumb_func
sav12_xor_get_clamped_above:
	push	{r4, lr}
	add	r4, r1, #0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetGameStat
	cmp	r0, r4
	bls	.L70	@cond_branch
	add	r0, r4, #0
.L70:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe12:
	.size	 sav12_xor_get_clamped_above,.Lfe12-sav12_xor_get_clamped_above
	.align	2, 0
	.type	 sub_80934F4,function
	.thumb_func
sub_80934F4:
	push	{lr}
	add	r1, r0, #0
	mov	r2, #0x0
	ldrh	r0, [r1, #0x6]
	cmp	r0, #0
	bne	.L73	@cond_branch
	ldr	r0, [r1, #0x8]
	cmp	r0, #0
	beq	.L72	@cond_branch
.L73:
	mov	r2, #0x1
.L72:
	ldrb	r0, [r1, #0x3]
	cmp	r0, #0
	beq	.L74	@cond_branch
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
.L74:
	ldrh	r0, [r1, #0x1a]
	cmp	r0, #0x31
	bls	.L75	@cond_branch
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
.L75:
	ldrb	r0, [r1, #0x4]
	cmp	r0, #0
	beq	.L76	@cond_branch
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
.L76:
	add	r0, r2, #0
	pop	{r1}
	bx	r1
.Lfe13:
	.size	 sub_80934F4,.Lfe13-sub_80934F4
	.align	2, 0
	.type	 sub_8093534,function
	.thumb_func
sub_8093534:
	push	{lr}
	mov	r0, #0x0
	bl	SetVBlankCallback
	mov	r0, #0x0
	bl	SetHBlankCallback
	mov	r1, #0x80
	lsl	r1, r1, #0x13
	mov	r0, #0x0
	strh	r0, [r1]
	pop	{r0}
	bx	r0
.Lfe14:
	.size	 sub_8093534,.Lfe14-sub_8093534
	.align	2, 0
	.type	 sub_8093550,function
	.thumb_func
sub_8093550:
	push	{r4, lr}
	ldr	r0, .L79
	bl	SetVBlankCallback
	ldr	r3, .L79+0x4
	ldrh	r2, [r3]
	mov	r0, #0x0
	strh	r0, [r3]
	ldr	r4, .L79+0x8
	ldrh	r0, [r4]
	mov	r1, #0x3
	orr	r0, r0, r1
	strh	r0, [r4]
	strh	r2, [r3]
	ldr	r2, .L79+0xc
	ldrh	r0, [r2]
	mov	r1, #0x18
	orr	r0, r0, r1
	strh	r0, [r2]
	mov	r1, #0x80
	lsl	r1, r1, #0x13
	mov	r2, #0xfa
	lsl	r2, r2, #0x5
	add	r0, r2, #0
	strh	r0, [r1]
	pop	{r4}
	pop	{r0}
	bx	r0
.L80:
	.align	2, 0
.L79:
	.word	sub_8093254
	.word	0x4000208
	.word	0x4000200
	.word	0x4000004
.Lfe15:
	.size	 sub_8093550,.Lfe15-sub_8093550
	.align	2, 0
	.type	 sub_8093598,function
	.thumb_func
sub_8093598:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #0xfffffffc
	mov	r2, #0xc0
	lsl	r2, r2, #0x13
	mov	r3, #0x80
	lsl	r3, r3, #0x9
	mov	r4, sp
	mov	r6, #0x0
	ldr	r1, .L87
	mov	r5, #0x80
	lsl	r5, r5, #0x5
	ldr	r7, .L87+0x4
	mov	r0, #0x81
	lsl	r0, r0, #0x18
	mov	ip, r0
.L84:
	strh	r6, [r4]
	mov	r0, sp
	str	r0, [r1]
	str	r2, [r1, #0x4]
	str	r7, [r1, #0x8]
	ldr	r0, [r1, #0x8]
	add	r2, r2, r5
	sub	r3, r3, r5
	cmp	r3, r5
	bhi	.L84	@cond_branch
	strh	r6, [r4]
	mov	r0, sp
	str	r0, [r1]
	str	r2, [r1, #0x4]
	lsr	r0, r3, #0x1
	mov	r2, ip
	orr	r0, r0, r2
	str	r0, [r1, #0x8]
	ldr	r0, [r1, #0x8]
	add	sp, sp, #0x4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L88:
	.align	2, 0
.L87:
	.word	0x40000d4
	.word	0x81000800
.Lfe16:
	.size	 sub_8093598,.Lfe16-sub_8093598
	.align	2, 0
	.type	 sub_80935EC,function
	.thumb_func
sub_80935EC:
	add	sp, sp, #0xfffffffc
	mov	r2, #0xe0
	lsl	r2, r2, #0x13
	mov	r1, sp
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L90
	str	r1, [r0]
	str	r2, [r0, #0x4]
	ldr	r1, .L90+0x4
	str	r1, [r0, #0x8]
	ldr	r0, [r0, #0x8]
	add	sp, sp, #0x4
	bx	lr
.L91:
	.align	2, 0
.L90:
	.word	0x40000d4
	.word	0x81000200
.Lfe17:
	.size	 sub_80935EC,.Lfe17-sub_80935EC
	.align	2, 0
	.type	 sub_8093610,function
	.thumb_func
sub_8093610:
	push	{r4, r5, lr}
	ldr	r5, .L93
	mov	r1, #0x0
	strh	r1, [r5]
	ldr	r2, .L93+0x4
	strh	r1, [r2]
	ldr	r3, .L93+0x8
	strh	r1, [r3]
	ldr	r4, .L93+0xc
	strh	r1, [r4]
	ldr	r0, .L93+0x10
	strh	r1, [r0]
	add	r0, r0, #0x2
	strh	r1, [r0]
	add	r0, r0, #0x2
	strh	r1, [r0]
	add	r0, r0, #0x2
	strh	r1, [r0]
	add	r0, r0, #0x2
	strh	r1, [r0]
	add	r0, r0, #0x2
	strh	r1, [r0]
	add	r0, r0, #0x2
	strh	r1, [r0]
	add	r0, r0, #0x2
	strh	r1, [r0]
	ldr	r1, .L93+0x14
	add	r0, r1, #0
	strh	r0, [r5]
	ldr	r1, .L93+0x18
	add	r0, r1, #0
	strh	r0, [r2]
	ldr	r1, .L93+0x1c
	add	r0, r1, #0
	strh	r0, [r3]
	ldr	r1, .L93+0x20
	add	r0, r1, #0
	strh	r0, [r4]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L94:
	.align	2, 0
.L93:
	.word	0x4000008
	.word	0x400000a
	.word	0x400000c
	.word	0x400000e
	.word	0x4000010
	.word	0x1e08
	.word	0x801
	.word	0x902
	.word	0xa03
.Lfe18:
	.size	 sub_8093610,.Lfe18-sub_8093610
	.align	2, 0
	.type	 sub_8093688,function
	.thumb_func
sub_8093688:
	push	{r4, r5, r6, lr}
	bl	sub_8093324
	ldr	r2, .L101
	mov	r1, #0x0
	strb	r1, [r2]
	strb	r1, [r2, #0x3]
	strb	r1, [r2, #0x4]
	add	r0, r2, #0
	add	r0, r0, #0x65
	ldrb	r0, [r0]
	strb	r0, [r2, #0x2]
	strb	r1, [r2, #0x5]
	strb	r1, [r2, #0x6]
	mov	r4, #0x0
	add	r6, r2, #0
	add	r6, r6, #0x20
	add	r5, r2, #0
	add	r5, r5, #0x8c
.L99:
	lsl	r0, r4, #0x4
	add	r0, r0, r6
	lsl	r1, r4, #0x1
	add	r1, r5, r1
	ldrh	r1, [r1]
	bl	EasyChat_GetWordText
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x3
	bls	.L99	@cond_branch
	bl	sub_80936D4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L102:
	.align	2, 0
.L101:
	.word	gSharedMem
.Lfe19:
	.size	 sub_8093688,.Lfe19-sub_8093688
	.align	2, 0
	.globl	sub_80936D4
	.type	 sub_80936D4,function
	.thumb_func
sub_80936D4:
	push	{r4, r5, r6, lr}
	ldr	r4, .L119
	mov	r0, #0x0
	strb	r0, [r4, #0x7]
	strb	r0, [r4, #0x8]
	strb	r0, [r4, #0x9]
	strb	r0, [r4, #0xa]
	strb	r0, [r4, #0xb]
	strb	r0, [r4, #0xc]
	strb	r0, [r4, #0xd]
	add	r0, r4, #0
	add	r0, r0, #0xe
	mov	r1, #0x0
	mov	r2, #0x8
	bl	memset
	add	r0, r4, #0
	add	r0, r0, #0x66
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L104	@cond_branch
	ldrb	r0, [r4, #0x7]
	add	r0, r0, #0x1
	strb	r0, [r4, #0x7]
.L104:
	add	r0, r4, #0
	add	r0, r0, #0x6a
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L106	@cond_branch
	ldr	r0, [r4, #0x6c]
	cmp	r0, #0
	beq	.L105	@cond_branch
.L106:
	ldrb	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strb	r0, [r4, #0x8]
.L105:
	ldr	r1, .L119
	ldr	r0, [r1, #0x78]
	cmp	r0, #0
	beq	.L107	@cond_branch
	ldrb	r0, [r1, #0x9]
	add	r0, r0, #0x1
	strb	r0, [r1, #0x9]
.L107:
	ldr	r0, [r1, #0x7c]
	cmp	r0, #0
	beq	.L108	@cond_branch
	ldrb	r0, [r1, #0xa]
	add	r0, r0, #0x1
	strb	r0, [r1, #0xa]
.L108:
	add	r0, r1, #0
	add	r0, r0, #0x80
	ldrh	r0, [r0]
	cmp	r0, #0
	beq	.L109	@cond_branch
	ldrb	r0, [r1, #0xb]
	add	r0, r0, #0x1
	strb	r0, [r1, #0xb]
.L109:
	add	r0, r1, #0
	add	r0, r0, #0x82
	ldrh	r0, [r0]
	cmp	r0, #0
	beq	.L110	@cond_branch
	ldrb	r0, [r1, #0xc]
	add	r0, r0, #0x1
	strb	r0, [r1, #0xc]
.L110:
	add	r0, r1, #0
	add	r0, r0, #0x84
	ldrh	r0, [r0]
	cmp	r0, #0
	beq	.L111	@cond_branch
	ldrb	r0, [r1, #0xd]
	add	r0, r0, #0x1
	strb	r0, [r1, #0xd]
.L111:
	ldrb	r0, [r1, #0x1]
	cmp	r0, #0
	bne	.L112	@cond_branch
	mov	r5, #0x0
	ldr	r4, .L119+0x4
	add	r6, r1, #0
	add	r6, r6, #0xe
.L115:
	lsl	r0, r4, #0x10
	lsr	r0, r0, #0x10
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L116	@cond_branch
	add	r1, r5, r6
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
.L116:
	add	r4, r4, #0x1
	add	r5, r5, #0x1
	ldr	r0, .L119+0x8
	cmp	r4, r0
	bls	.L115	@cond_branch
.L112:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L120:
	.align	2, 0
.L119:
	.word	gSharedMem
	.word	0x807
	.word	0x80e
.Lfe20:
	.size	 sub_80936D4,.Lfe20-sub_80936D4
	.align	2, 0
	.type	 sub_80937A4,function
	.thumb_func
sub_80937A4:
	push	{lr}
	bl	ResetPaletteFade
	bl	ResetSpriteData
	bl	FreeAllSpritePalettes
	bl	ResetTasks
	pop	{r0}
	bx	r0
.Lfe21:
	.size	 sub_80937A4,.Lfe21-sub_80937A4
	.align	2, 0
	.type	 sub_80937BC,function
	.thumb_func
sub_80937BC:
	push	{r4, lr}
	ldr	r4, .L123
	add	r0, r4, #0
	bl	SetUpWindowConfig
	add	r0, r4, #0
	bl	MultistepInitMenuWindowBegin
	pop	{r4}
	pop	{r0}
	bx	r0
.L124:
	.align	2, 0
.L123:
	.word	WindowConfig_TrainerCard_Back_Values
.Lfe22:
	.size	 sub_80937BC,.Lfe22-sub_80937BC
	.align	2, 0
	.type	 sub_80937D8,function
	.thumb_func
sub_80937D8:
	push	{lr}
	bl	sub_8093E04
	bl	sub_8093E28
	bl	sub_8093F64
	bl	sub_8093DAC
	pop	{r0}
	bx	r0
.Lfe23:
	.size	 sub_80937D8,.Lfe23-sub_80937D8
	.align	2, 0
	.type	 sub_80937F0,function
	.thumb_func
sub_80937F0:
	push	{lr}
	bl	sub_8093EF8
	pop	{r0}
	bx	r0
.Lfe24:
	.size	 sub_80937F0,.Lfe24-sub_80937F0
	.align	2, 0
	.type	 nullsub_15,function
	.thumb_func
nullsub_15:
	bx	lr
.Lfe25:
	.size	 nullsub_15,.Lfe25-nullsub_15
	.align	2, 0
	.type	 sub_8093800,function
	.thumb_func
sub_8093800:
	push	{lr}
	bl	sub_809380C
	pop	{r0}
	bx	r0
.Lfe26:
	.size	 sub_8093800,.Lfe26-sub_8093800
	.align	2, 0
	.type	 sub_809380C,function
	.thumb_func
sub_809380C:
	push	{r4, lr}
	ldr	r4, .L130
	add	r0, r4, #0
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	_call_via_r4
	pop	{r4}
	pop	{r0}
	bx	r0
.L131:
	.align	2, 0
.L130:
	.word	sub_809382C
.Lfe27:
	.size	 sub_809380C,.Lfe27-sub_809380C
	.align	2, 0
	.type	 sub_809382C,function
	.thumb_func
sub_809382C:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r7, .L137
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r4, r1, #0x3
	ldr	r6, .L137+0x4
	ldr	r5, .L137+0x8
.L133:
	ldrb	r0, [r6]
	lsl	r0, r0, #0x2
	add	r0, r0, r7
	ldr	r1, [r0]
	add	r0, r4, r5
	bl	_call_via_r1
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L133	@cond_branch
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L138:
	.align	2, 0
.L137:
	.word	gUnknown_083B5EBC
	.word	gSharedMem
	.word	gTasks
.Lfe28:
	.size	 sub_809382C,.Lfe28-sub_809382C
	.align	2, 0
	.globl	sub_8093864
	.type	 sub_8093864,function
	.thumb_func
sub_8093864:
	push	{r4, r5, lr}
	add	sp, sp, #0xfffffffc
	ldr	r4, .L140
	ldr	r2, .L140+0x4
	ldrb	r1, [r2, #0x11]
	mov	r0, #0x1
	and	r0, r0, r1
	mov	r5, #0x0
	strb	r0, [r4, #0x5]
	ldrb	r0, [r2, #0x12]
	strb	r0, [r4, #0x6]
	bl	sub_80939A4
	mov	r0, #0x1
	neg	r0, r0
	str	r5, [sp]
	mov	r1, #0x0
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	strb	r0, [r4]
	mov	r0, #0x0
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L141:
	.align	2, 0
.L140:
	.word	gSharedMem
	.word	gSaveBlock2
.Lfe29:
	.size	 sub_8093864,.Lfe29-sub_8093864
	.align	2, 0
	.globl	sub_80938A8
	.type	 sub_80938A8,function
	.thumb_func
sub_80938A8:
	push	{lr}
	ldr	r0, .L144
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L143	@cond_branch
	ldr	r1, .L144+0x4
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
.L143:
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L145:
	.align	2, 0
.L144:
	.word	gPaletteFade
	.word	gSharedMem
.Lfe30:
	.size	 sub_80938A8,.Lfe30-sub_80938A8
	.align	2, 0
	.globl	sub_80938CC
	.type	 sub_80938CC,function
	.thumb_func
sub_80938CC:
	push	{lr}
	ldr	r0, .L154
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L147	@cond_branch
	ldr	r1, .L154+0x4
	mov	r0, #0x5
	strb	r0, [r1]
	mov	r0, #0x1
	b	.L152
.L155:
	.align	2, 0
.L154:
	.word	gMain
	.word	gSharedMem
.L147:
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L148	@cond_branch
	ldr	r2, .L156
	ldrb	r1, [r2, #0x3]
	cmp	r1, #0
	beq	.L150	@cond_branch
	mov	r0, #0x5
	b	.L153
.L157:
	.align	2, 0
.L156:
	.word	gSharedMem
.L150:
	mov	r0, #0x1
	eor	r0, r0, r1
	strb	r0, [r2, #0x3]
	mov	r0, #0x3
.L153:
	strb	r0, [r2]
	mov	r0, #0x1
	b	.L152
.L148:
	mov	r0, #0x0
.L152:
	pop	{r1}
	bx	r1
.Lfe31:
	.size	 sub_80938CC,.Lfe31-sub_80938CC
	.align	2, 0
	.globl	sub_8093918
	.type	 sub_8093918,function
	.thumb_func
sub_8093918:
	push	{lr}
	bl	sub_8093A28
	mov	r0, #0x36
	bl	PlaySE
	ldr	r1, .L159
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L160:
	.align	2, 0
.L159:
	.word	gSharedMem
.Lfe32:
	.size	 sub_8093918,.Lfe32-sub_8093918
	.align	2, 0
	.globl	sub_8093938
	.type	 sub_8093938,function
	.thumb_func
sub_8093938:
	push	{lr}
	bl	sub_8093A48
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L162	@cond_branch
	ldr	r1, .L163
	mov	r0, #0x2
	strb	r0, [r1]
.L162:
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L164:
	.align	2, 0
.L163:
	.word	gSharedMem
.Lfe33:
	.size	 sub_8093938,.Lfe33-sub_8093938
	.align	2, 0
	.globl	sub_8093954
	.type	 sub_8093954,function
	.thumb_func
sub_8093954:
	push	{lr}
	add	sp, sp, #0xfffffffc
	bl	sub_80939C0
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r1, .L166
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	mov	r0, #0x0
	add	sp, sp, #0x4
	pop	{r1}
	bx	r1
.L167:
	.align	2, 0
.L166:
	.word	gSharedMem
.Lfe34:
	.size	 sub_8093954,.Lfe34-sub_8093954
	.align	2, 0
	.globl	sub_8093980
	.type	 sub_8093980,function
	.thumb_func
sub_8093980:
	push	{lr}
	ldr	r0, .L170
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L169	@cond_branch
	ldr	r0, .L170+0x4
	ldr	r0, [r0, #0x60]
	bl	SetMainCallback2
.L169:
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L171:
	.align	2, 0
.L170:
	.word	gPaletteFade
	.word	gSharedMem
.Lfe35:
	.size	 sub_8093980,.Lfe35-sub_8093980
	.align	2, 0
	.type	 sub_80939A4,function
	.thumb_func
sub_80939A4:
	push	{lr}
	ldr	r0, .L173
	mov	r1, #0x0
	bl	CreateTask
	ldr	r0, .L173+0x4
	bl	BasicInitMenuWindow
	pop	{r0}
	bx	r0
.L174:
	.align	2, 0
.L173:
	.word	sub_80939DC
	.word	WindowConfig_TrainerCard_Back_Values
.Lfe36:
	.size	 sub_80939A4,.Lfe36-sub_80939A4
	.align	2, 0
	.type	 sub_80939C0,function
	.thumb_func
sub_80939C0:
	push	{lr}
	ldr	r0, .L177
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xff
	beq	.L176	@cond_branch
	bl	DestroyTask
.L176:
	pop	{r0}
	bx	r0
.L178:
	.align	2, 0
.L177:
	.word	sub_80939DC
.Lfe37:
	.size	 sub_80939C0,.Lfe37-sub_80939C0
	.align	2, 0
	.type	 sub_80939DC,function
	.thumb_func
sub_80939DC:
	push	{lr}
	add	sp, sp, #0xffffffe0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L181
	add	r2, r1, r0
	ldr	r0, .L181+0x4
	ldrb	r1, [r0, #0x5]
	mov	r3, #0xa
	ldrsh	r0, [r2, r3]
	cmp	r1, r0
	beq	.L180	@cond_branch
	strh	r1, [r2, #0xa]
	ldrh	r0, [r2, #0x8]
	mov	r1, #0x1
	eor	r0, r0, r1
	strh	r0, [r2, #0x8]
.L180:
	mov	r0, #0x8
	ldrsh	r1, [r2, r0]
	mov	r0, sp
	bl	TrainerCard_Front_PrintPlayTime
	mov	r0, sp
	mov	r1, #0xa
	mov	r2, #0xc
	bl	MenuPrint
	add	sp, sp, #0x20
	pop	{r0}
	bx	r0
.L182:
	.align	2, 0
.L181:
	.word	gTasks
	.word	gSharedMem
.Lfe38:
	.size	 sub_80939DC,.Lfe38-sub_80939DC
	.align	2, 0
	.type	 sub_8093A28,function
	.thumb_func
sub_8093A28:
	push	{r4, lr}
	ldr	r4, .L184
	add	r0, r4, #0
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	_call_via_r4
	pop	{r4}
	pop	{r0}
	bx	r0
.L185:
	.align	2, 0
.L184:
	.word	sub_8093A68
.Lfe39:
	.size	 sub_8093A28,.Lfe39-sub_8093A28
	.align	2, 0
	.type	 sub_8093A48,function
	.thumb_func
sub_8093A48:
	push	{lr}
	ldr	r0, .L190
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xff
	beq	.L187	@cond_branch
	mov	r0, #0x0
	b	.L189
.L191:
	.align	2, 0
.L190:
	.word	sub_8093A68
.L187:
	mov	r0, #0x1
.L189:
	pop	{r1}
	bx	r1
.Lfe40:
	.size	 sub_8093A48,.Lfe40-sub_8093A48
	.align	2, 0
	.type	 sub_8093A68,function
	.thumb_func
sub_8093A68:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r5, .L197
	ldr	r2, .L197+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r4, r1, r2
.L193:
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	_call_via_r1
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L193	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L198:
	.align	2, 0
.L197:
	.word	gUnknown_083B5ED8
	.word	gTasks
.Lfe41:
	.size	 sub_8093A68,.Lfe41-sub_8093A68
	.align	2, 0
	.globl	sub_8093AA0
	.type	 sub_8093AA0,function
	.thumb_func
sub_8093AA0:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r0, .L205
	mov	r1, #0x0
	strb	r1, [r0, #0x4]
	bl	dp12_8087EA4
	mov	r1, #0x0
	ldr	r0, .L205+0x4
	ldr	r2, .L205+0x8
	mov	r3, #0xf0
	lsl	r3, r3, #0x3
	add	r0, r0, r3
.L203:
	strh	r2, [r0]
	add	r0, r0, #0x2
	add	r1, r1, #0x1
	cmp	r1, #0x9f
	bls	.L203	@cond_branch
	ldr	r0, .L205+0xc
	bl	SetHBlankCallback
	ldr	r1, .L205
	mov	r0, #0x1
	strb	r0, [r1, #0x4]
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L206:
	.align	2, 0
.L205:
	.word	gSharedMem
	.word	gUnknown_03004DE0
	.word	0xfffc
	.word	sub_8093D7C
.Lfe42:
	.size	 sub_8093AA0,.Lfe42-sub_8093AA0
	.align	2, 0
	.globl	sub_8093AF0
	.type	 sub_8093AF0,function
	.thumb_func
sub_8093AF0:
	.syntax unified
    push {r4-r7,lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5-r7}
    sub sp, 0x4
    mov r8, r0
    ldr r1, _08093BFC @ =gSharedMem
    movs r0, 0
    strb r0, [r1, 0x4]
    mov r2, r8
    ldrh r0, [r2, 0xA]
    adds r0, 0x3
    strh r0, [r2, 0xA]
    lsls r0, 16
    asrs r0, 16
    cmp r0, 0x4F
    ble _08093B18
    movs r0, 0x4F
    strh r0, [r2, 0xA]
_08093B18:
    mov r4, r8
    movs r0, 0xA
    ldrsh r7, [r4, r0]
    movs r0, 0xA0
    subs r0, r7
    mov r9, r0
    subs r4, r0, r7
    negs r0, r7
    lsls r6, r0, 16
    movs r0, 0xA0
    lsls r0, 16
    adds r1, r4, 0
    bl __udivsi3
    adds r5, r0, 0
    ldr r1, _08093C00 @ =0xffff0000
    adds r5, r1
    adds r0, r5, 0
    muls r0, r4
    adds r0, r6
    mov r10, r0
    adds r0, r5, 0
    adds r1, r4, 0
    bl __udivsi3
    str r0, [sp]
    lsls r5, 1
    movs r3, 0
    cmp r3, r7
    bcs _08093B74
    ldr r2, _08093C04 @ =gUnknown_03004DE0
    mov r12, r2
    ldr r0, _08093C08 @ =0x0000fffc
    adds r4, r0, 0
_08093B5C:
    lsls r0, r3, 16
    asrs r0, 16
    lsls r1, r0, 1
    add r1, r12
    subs r2, r4, r0
    strh r2, [r1]
    adds r0, 0x1
    lsls r0, 16
    lsrs r3, r0, 16
    asrs r0, 16
    cmp r0, r7
    bcc _08093B5C
_08093B74:
    lsls r2, r3, 16
    mov r1, r9
    lsls r0, r1, 16
    asrs r1, r0, 16
    mov r4, r10
    lsrs r7, r4, 16
    cmp r2, r0
    bge _08093BAE
    ldr r0, _08093C04 @ =gUnknown_03004DE0
    mov r9, r0
    ldr r4, _08093C08 @ =0x0000fffc
    mov r12, r4
    adds r4, r1, 0
_08093B8E:
    lsrs r1, r6, 16
    adds r6, r5
    ldr r0, [sp]
    subs r5, r0
    asrs r2, 16
    lsls r0, r2, 1
    add r0, r9
    add r1, r12
    strh r1, [r0]
    adds r2, 0x1
    lsls r2, 16
    lsrs r3, r2, 16
    lsls r2, r3, 16
    asrs r0, r2, 16
    cmp r0, r4
    blt _08093B8E
_08093BAE:
    adds r1, r7, 0
    lsls r0, r3, 16
    asrs r0, 16
    cmp r0, 0x9F
    bgt _08093BD4
    ldr r4, _08093C04 @ =gUnknown_03004DE0
    ldr r0, _08093C08 @ =0x0000fffc
    adds r2, r1, r0
_08093BBE:
    lsls r1, r3, 16
    asrs r1, 16
    lsls r0, r1, 1
    adds r0, r4
    strh r2, [r0]
    adds r1, 0x1
    lsls r1, 16
    lsrs r3, r1, 16
    asrs r1, 16
    cmp r1, 0x9F
    ble _08093BBE
_08093BD4:
    movs r0, 0x1
    ldr r1, _08093BFC @ =gSharedMem
    strb r0, [r1, 0x4]
    mov r2, r8
    movs r4, 0xA
    ldrsh r0, [r2, r4]
    cmp r0, 0x4A
    ble _08093BEA
    ldrh r0, [r2, 0x8]
    adds r0, 0x1
    strh r0, [r2, 0x8]
_08093BEA:
    movs r0, 0
    add sp, 0x4
    pop {r3-r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4-r7}
    pop {r1}
    bx r1
    .align 2, 0
_08093BFC: .4byte gSharedMem
_08093C00: .4byte 0xffff0000
_08093C04: .4byte gUnknown_03004DE0
_08093C08: .4byte 0x0000fffc
    .syntax divided

	.code	16
.Lfe43:
	.size	 sub_8093AF0,.Lfe43-sub_8093AF0
	.align	2, 0
	.globl	sub_8093C0C
	.type	 sub_8093C0C,function
	.thumb_func
sub_8093C0C:
	push	{r4, lr}
	add	r4, r0, #0
	bl	sub_80939C0
	bl	sub_8093DAC
	ldr	r0, .L210
	ldrb	r0, [r0, #0x3]
	cmp	r0, #0
	bne	.L209	@cond_branch
	bl	sub_80939A4
.L209:
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	mov	r0, #0x1
	pop	{r4}
	pop	{r1}
	bx	r1
.L211:
	.align	2, 0
.L210:
	.word	gSharedMem
.Lfe44:
	.size	 sub_8093C0C,.Lfe44-sub_8093C0C
	.align	2, 0
	.globl	sub_8093C38
	.type	 sub_8093C38,function
	.thumb_func
sub_8093C38:
	.syntax unified
    push {r4-r7,lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5-r7}
    sub sp, 0x4
    mov r8, r0
    ldr r1, _08093D40 @ =gSharedMem
    movs r2, 0
    strb r2, [r1, 0x4]
    ldrh r0, [r0, 0xA]
    subs r0, 0x3
    mov r3, r8
    strh r0, [r3, 0xA]
    lsls r0, 16
    cmp r0, 0
    bgt _08093C5C
    strh r2, [r3, 0xA]
_08093C5C:
    mov r4, r8
    movs r0, 0xA
    ldrsh r7, [r4, r0]
    movs r0, 0xA0
    subs r0, r7
    mov r9, r0
    subs r4, r0, r7
    negs r0, r7
    lsls r6, r0, 16
    movs r0, 0xA0
    lsls r0, 16
    adds r1, r4, 0
    bl __udivsi3
    adds r5, r0, 0
    ldr r1, _08093D44 @ =0xffff0000
    adds r5, r1
    adds r0, r5, 0
    muls r0, r4
    adds r0, r6
    mov r10, r0
    adds r0, r5, 0
    adds r1, r4, 0
    bl __udivsi3
    str r0, [sp]
    lsrs r5, 1
    movs r3, 0
    cmp r3, r7
    bcs _08093CB8
    ldr r2, _08093D48 @ =gUnknown_03004DE0
    mov r12, r2
    ldr r0, _08093D4C @ =0x0000fffc
    adds r4, r0, 0
_08093CA0:
    lsls r0, r3, 16
    asrs r0, 16
    lsls r1, r0, 1
    add r1, r12
    subs r2, r4, r0
    strh r2, [r1]
    adds r0, 0x1
    lsls r0, 16
    lsrs r3, r0, 16
    asrs r0, 16
    cmp r0, r7
    bcc _08093CA0
_08093CB8:
    lsls r2, r3, 16
    mov r1, r9
    lsls r0, r1, 16
    asrs r1, r0, 16
    mov r4, r10
    lsrs r7, r4, 16
    cmp r2, r0
    bge _08093CF2
    ldr r0, _08093D48 @ =gUnknown_03004DE0
    mov r9, r0
    ldr r3, _08093D4C @ =0x0000fffc
    mov r12, r3
    adds r4, r1, 0
_08093CD2:
    lsrs r1, r6, 16
    adds r6, r5
    ldr r0, [sp]
    adds r5, r0
    asrs r2, 16
    lsls r0, r2, 1
    add r0, r9
    add r1, r12
    strh r1, [r0]
    adds r2, 0x1
    lsls r2, 16
    lsrs r3, r2, 16
    lsls r2, r3, 16
    asrs r0, r2, 16
    cmp r0, r4
    blt _08093CD2
_08093CF2:
    adds r1, r7, 0
    lsls r0, r3, 16
    asrs r0, 16
    cmp r0, 0x9F
    bgt _08093D18
    ldr r4, _08093D48 @ =gUnknown_03004DE0
    ldr r0, _08093D4C @ =0x0000fffc
    adds r2, r1, r0
_08093D02:
    lsls r1, r3, 16
    asrs r1, 16
    lsls r0, r1, 1
    adds r0, r4
    strh r2, [r0]
    adds r1, 0x1
    lsls r1, 16
    lsrs r3, r1, 16
    asrs r1, 16
    cmp r1, 0x9F
    ble _08093D02
_08093D18:
    movs r0, 0x1
    ldr r1, _08093D40 @ =gSharedMem
    strb r0, [r1, 0x4]
    mov r2, r8
    movs r3, 0xA
    ldrsh r0, [r2, r3]
    cmp r0, 0
    bgt _08093D2E
    ldrh r0, [r2, 0x8]
    adds r0, 0x1
    strh r0, [r2, 0x8]
_08093D2E:
    movs r0, 0
    add sp, 0x4
    pop {r3-r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4-r7}
    pop {r1}
    bx r1
    .align 2, 0
_08093D40: .4byte gSharedMem
_08093D44: .4byte 0xffff0000
_08093D48: .4byte gUnknown_03004DE0
_08093D4C: .4byte 0x0000fffc
    .syntax divided

	.code	16
.Lfe45:
	.size	 sub_8093C38,.Lfe45-sub_8093C38
	.align	2, 0
	.globl	sub_8093D50
	.type	 sub_8093D50,function
	.thumb_func
sub_8093D50:
	push	{lr}
	ldr	r1, .L214
	mov	r0, #0x0
	strb	r0, [r1, #0x4]
	bl	SetHBlankCallback
	bl	sub_8093E04
	ldr	r0, .L214+0x4
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L215:
	.align	2, 0
.L214:
	.word	gSharedMem
	.word	sub_8093A68
.Lfe46:
	.size	 sub_8093D50,.Lfe46-sub_8093D50
	.align	2, 0
	.globl	sub_8093D7C
	.type	 sub_8093D7C,function
	.thumb_func
sub_8093D7C:
	ldr	r1, .L217
	ldr	r0, .L217+0x4
	ldrh	r2, [r0]
	mov	r0, #0xff
	and	r0, r0, r2
	lsl	r0, r0, #0x1
	mov	r2, #0xf0
	lsl	r2, r2, #0x3
	add	r1, r1, r2
	add	r0, r0, r1
	ldrh	r1, [r0]
	ldr	r0, .L217+0x8
	strh	r1, [r0]
	add	r0, r0, #0x4
	strh	r1, [r0]
	add	r0, r0, #0x4
	strh	r1, [r0]
	bx	lr
.L218:
	.align	2, 0
.L217:
	.word	gUnknown_03004DE0
	.word	0x4000006
	.word	0x4000012
.Lfe47:
	.size	 sub_8093D7C,.Lfe47-sub_8093D7C
	.align	2, 0
	.type	 sub_8093DAC,function
	.thumb_func
sub_8093DAC:
	push	{lr}
	ldr	r0, .L222
	ldrb	r0, [r0, #0x3]
	cmp	r0, #0
	beq	.L220	@cond_branch
	bl	sub_8093DEC
	b	.L221
.L223:
	.align	2, 0
.L222:
	.word	gSharedMem
.L220:
	bl	sub_8093DC8
.L221:
	pop	{r0}
	bx	r0
.Lfe48:
	.size	 sub_8093DAC,.Lfe48-sub_8093DAC
	.align	2, 0
	.type	 sub_8093DC8,function
	.thumb_func
sub_8093DC8:
	push	{lr}
	bl	MenuZeroFillScreen
	bl	sub_80940E4
	bl	sub_8093F14
	bl	sub_8093F80
	bl	sub_8093FD0
	bl	sub_8094038
	bl	sub_8094140
	pop	{r0}
	bx	r0
.Lfe49:
	.size	 sub_8093DC8,.Lfe49-sub_8093DC8
	.align	2, 0
	.type	 sub_8093DEC,function
	.thumb_func
sub_8093DEC:
	push	{lr}
	bl	MenuZeroFillScreen
	bl	sub_80940E4
	bl	sub_8093F48
	bl	sub_8094188
	pop	{r0}
	bx	r0
.Lfe50:
	.size	 sub_8093DEC,.Lfe50-sub_8093DEC
	.align	2, 0
	.type	 sub_8093E04,function
	.thumb_func
sub_8093E04:
	ldr	r0, .L227
	ldr	r2, .L227+0x4
	add	r1, r2, #0
	strh	r1, [r0]
	add	r0, r0, #0x2
	mov	r2, #0x0
	strh	r2, [r0]
	add	r0, r0, #0x2
	strh	r1, [r0]
	add	r0, r0, #0x2
	strh	r2, [r0]
	add	r0, r0, #0x2
	strh	r1, [r0]
	bx	lr
.L228:
	.align	2, 0
.L227:
	.word	0x4000012
	.word	0xfffc
.Lfe51:
	.size	 sub_8093E04,.Lfe51-sub_8093E04
	.align	2, 0
	.type	 sub_8093E28,function
	.thumb_func
sub_8093E28:
	push	{r4, r5, r6, r7, lr}
	bl	sub_8093EA0
	ldr	r0, .L235
	mov	r1, #0xe0
	mov	r2, #0x20
	bl	LoadPalette
	ldr	r3, .L235+0x4
	mov	r4, #0xc0
	lsl	r4, r4, #0x13
	mov	r5, #0xa4
	lsl	r5, r5, #0x5
	ldr	r1, .L235+0x8
	ldr	r6, .L235+0xc
	mov	r2, #0x80
	lsl	r2, r2, #0x5
	mov	r7, #0x80
	lsl	r7, r7, #0x18
.L230:
	str	r3, [r1]
	str	r4, [r1, #0x4]
	str	r6, [r1, #0x8]
	ldr	r0, [r1, #0x8]
	add	r3, r3, r2
	add	r4, r4, r2
	sub	r5, r5, r2
	cmp	r5, r2
	bhi	.L230	@cond_branch
	str	r3, [r1]
	str	r4, [r1, #0x4]
	lsr	r0, r5, #0x1
	orr	r0, r0, r7
	str	r0, [r1, #0x8]
	ldr	r0, [r1, #0x8]
	ldr	r1, .L235+0x10
	ldr	r2, .L235+0x14
	ldr	r0, .L235+0x8
	str	r1, [r0]
	str	r2, [r0, #0x4]
	ldr	r1, .L235+0x18
	str	r1, [r0, #0x8]
	ldr	r0, [r0, #0x8]
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L236:
	.align	2, 0
.L235:
	.word	gUnknown_083B5F6C
	.word	gMenuTrainerCard_Gfx
	.word	0x40000d4
	.word	0x80000800
	.word	gBadgesTiles
	.word	0x6001480
	.word	0x80000200
.Lfe52:
	.size	 sub_8093E28,.Lfe52-sub_8093E28
	.align	2, 0
	.globl	sub_8093EA0
	.type	 sub_8093EA0,function
	.thumb_func
sub_8093EA0:
	push	{r4, lr}
	ldr	r1, .L239
	ldr	r4, .L239+0x4
	ldrb	r0, [r4, #0x2]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	r1, #0x0
	mov	r2, #0x60
	bl	LoadPalette
	ldr	r0, .L239+0x8
	mov	r1, #0x30
	mov	r2, #0x20
	bl	LoadPalette
	ldr	r0, .L239+0xc
	mov	r1, #0x40
	mov	r2, #0x20
	bl	LoadPalette
	add	r4, r4, #0x64
	ldrb	r0, [r4]
	cmp	r0, #0
	beq	.L238	@cond_branch
	ldr	r0, .L239+0x10
	mov	r1, #0x10
	mov	r2, #0x20
	bl	LoadPalette
.L238:
	pop	{r4}
	pop	{r0}
	bx	r0
.L240:
	.align	2, 0
.L239:
	.word	gUnknown_083B5EF8
	.word	gSharedMem
	.word	gBadgesPalette
	.word	gUnknown_083B5F4C
	.word	gUnknown_083B5F0C
.Lfe53:
	.size	 sub_8093EA0,.Lfe53-sub_8093EA0
	.align	2, 0
	.type	 sub_8093EF8,function
	.thumb_func
sub_8093EF8:
	push	{lr}
	ldr	r0, .L242
	add	r0, r0, #0x64
	ldrb	r0, [r0]
	ldr	r2, .L242+0x4
	mov	r1, #0x50
	bl	LoadTrainerGfx_TrainerCard
	pop	{r0}
	bx	r0
.L243:
	.align	2, 0
.L242:
	.word	gSharedMem
	.word	0x6001880
.Lfe54:
	.size	 sub_8093EF8,.Lfe54-sub_8093EF8
	.section .rodata
	.align	2, 0
.LC129:
	.word	gUnknown_08E8CAC0
	.word	gUnknown_08E8D4C0
.text
	.align	2, 0
	.type	 sub_8093F14,function
	.thumb_func
sub_8093F14:
	push	{lr}
	add	sp, sp, #0xfffffff8
	ldr	r0, .L245
	ldr	r1, [r0, #0x4]		@ created by thumb_load_double_from_address
	ldr	r0, [r0]		@ created by thumb_load_double_from_address
	str	r0, [sp]
	str	r1, [sp, #0x4]
	ldr	r0, .L245+0x4
	ldrb	r0, [r0, #0x1]
	lsl	r0, r0, #0x2
	add	r0, r0, sp
	ldr	r0, [r0]
	ldr	r1, .L245+0x8
	mov	r2, #0xa0
	lsl	r2, r2, #0x1
	bl	CpuFastSet
	add	sp, sp, #0x8
	pop	{r0}
	bx	r0
.L246:
	.align	2, 0
.L245:
	.word	.LC129
	.word	gSharedMem
	.word	0x6004800
.Lfe55:
	.size	 sub_8093F14,.Lfe55-sub_8093F14
	.globl	gUnknown_083B5EF4
	.section .rodata
	.type	 gUnknown_083B5EF4,object
gUnknown_083B5EF4:
	.byte	0x0
	.byte	0xf0
	.byte	0x0
	.byte	0xff
	.size	 gUnknown_083B5EF4,4
	.globl	gUnknown_083B5EF8
	.align	2, 0
	.type	 gUnknown_083B5EF8,object
gUnknown_083B5EF8:
	.word	gMenuTrainerCard0Star_Pal
	.word	gMenuTrainerCard1Star_Pal
	.word	gMenuTrainerCard2Star_Pal
	.word	gMenuTrainerCard3Star_Pal
	.word	gMenuTrainerCard4Star_Pal
	.size	 gUnknown_083B5EF8,20
	.globl	gUnknown_083B5F0C
	.align	1, 0
	.type	 gUnknown_083B5F0C,object
gUnknown_083B5F0C:
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x45fc
	.short	0x38d4
	.short	0x0
	.short	0x0
	.size	 gUnknown_083B5F0C,32
	.globl	gBadgesPalette
	.align	1, 0
	.type	 gBadgesPalette,object
gBadgesPalette:
	.short	0x3991
	.short	0x7fff
	.short	0x6b5a
	.short	0x5ad6
	.short	0x3def
	.short	0x1e3f
	.short	0x4fb
	.short	0x7eed
	.short	0x6228
	.short	0x335f
	.short	0x1edd
	.short	0x61f8
	.short	0x4d32
	.short	0x7eed
	.short	0x6739
	.short	0x0
	.size	 gBadgesPalette,32
	.globl	gUnknown_083B5F4C
	.align	1, 0
	.type	 gUnknown_083B5F4C,object
gUnknown_083B5F4C:
	.short	0x3991
	.short	0x31e
	.short	0x299
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.size	 gUnknown_083B5F4C,32
	.globl	gUnknown_083B5F6C
	.align	1, 0
	.type	 gUnknown_083B5F6C,object
gUnknown_083B5F6C:
	.short	0x0
	.short	0x1f
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x7c1f
	.short	0x1f
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.size	 gUnknown_083B5F6C,32
	.globl	gUnknown_083B5F8C
	.align	1, 0
	.type	 gUnknown_083B5F8C,object
gUnknown_083B5F8C:
	.short	0xa4
	.short	0xa5
	.short	0xb4
	.short	0xb5
	.short	0xa6
	.short	0xa7
	.short	0xb6
	.short	0xb7
	.short	0xa8
	.short	0xa9
	.short	0xb8
	.short	0xb9
	.short	0xaa
	.short	0xab
	.short	0xba
	.short	0xbb
	.short	0xac
	.short	0xad
	.short	0xbc
	.short	0xbd
	.short	0xae
	.short	0xaf
	.short	0xbe
	.short	0xbf
	.short	0xb0
	.short	0xb1
	.short	0xc0
	.short	0xc1
	.short	0xb2
	.short	0xb3
	.short	0xc2
	.short	0xc3
	.size	 gUnknown_083B5F8C,64
.text
	.align	2, 0
	.type	 sub_8093F48,function
	.thumb_func
sub_8093F48:
	push	{lr}
	ldr	r0, .L248
	ldr	r1, .L248+0x4
	mov	r2, #0xa0
	lsl	r2, r2, #0x1
	bl	CpuFastSet
	pop	{r0}
	bx	r0
.L249:
	.align	2, 0
.L248:
	.word	gUnknown_08E8CFC0
	.word	0x6004800
.Lfe56:
	.size	 sub_8093F48,.Lfe56-sub_8093F48
	.align	2, 0
	.type	 sub_8093F64,function
	.thumb_func
sub_8093F64:
	push	{lr}
	ldr	r0, .L251
	ldr	r1, .L251+0x4
	mov	r2, #0xa0
	lsl	r2, r2, #0x1
	bl	CpuFastSet
	pop	{r0}
	bx	r0
.L252:
	.align	2, 0
.L251:
	.word	gUnknown_08E8D9C0
	.word	0x6005000
.Lfe57:
	.size	 sub_8093F64,.Lfe57-sub_8093F64
	.align	2, 0
	.type	 sub_8093F80,function
	.thumb_func
sub_8093F80:
	push	{r4, r5, r6, r7, lr}
	mov	r5, #0xc4
	ldr	r7, .L264
	mov	r1, #0x5
	mov	r0, #0xa0
	lsl	r0, r0, #0x7
	add	r6, r0, #0
.L257:
	mov	r0, #0x13
	lsl	r3, r1, #0x10
	asr	r4, r3, #0xb
.L261:
	lsl	r2, r0, #0x10
	asr	r2, r2, #0x10
	add	r1, r4, r2
	lsl	r1, r1, #0x1
	add	r1, r1, r7
	add	r0, r5, #0
	orr	r0, r0, r6
	strh	r0, [r1]
	add	r2, r2, #0x1
	lsl	r2, r2, #0x10
	add	r0, r5, #0x1
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	lsr	r0, r2, #0x10
	asr	r2, r2, #0x10
	cmp	r2, #0x1a
	ble	.L261	@cond_branch
	mov	r1, #0x80
	lsl	r1, r1, #0x9
	add	r0, r3, r1
	lsr	r1, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0xc
	ble	.L257	@cond_branch
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L265:
	.align	2, 0
.L264:
	.word	0x6004000
.Lfe58:
	.size	 sub_8093F80,.Lfe58-sub_8093F80
	.align	2, 0
	.type	 sub_8093FD0,function
	.thumb_func
sub_8093FD0:
	push	{r4, r5, r6, lr}
	ldr	r4, .L276
	mov	r2, #0xf
	ldr	r0, .L276+0x4
	ldrb	r0, [r0, #0x2]
	add	r0, r0, #0xf
	cmp	r2, r0
	bge	.L268	@cond_branch
	mov	r6, #0xc0
	lsl	r6, r6, #0x1
	ldr	r1, .L276+0x8
	add	r5, r1, #0
	add	r3, r0, #0
.L269:
	lsl	r1, r2, #0x10
	asr	r1, r1, #0x10
	lsl	r0, r1, #0x1
	add	r0, r0, r4
	add	r0, r0, r6
	strh	r5, [r0]
	add	r1, r1, #0x1
	lsl	r1, r1, #0x10
	lsr	r2, r1, #0x10
	asr	r1, r1, #0x10
	cmp	r1, r3
	blt	.L269	@cond_branch
.L268:
	lsl	r1, r2, #0x10
	asr	r0, r1, #0x10
	cmp	r0, #0x12
	bgt	.L275	@cond_branch
	mov	r3, #0xc0
	lsl	r3, r3, #0x1
	mov	r2, #0x0
.L273:
	asr	r0, r1, #0x10
	lsl	r1, r0, #0x1
	add	r1, r1, r4
	add	r1, r1, r3
	strh	r2, [r1]
	add	r0, r0, #0x1
	lsl	r1, r0, #0x10
	asr	r0, r1, #0x10
	cmp	r0, #0x12
	ble	.L273	@cond_branch
.L275:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L277:
	.align	2, 0
.L276:
	.word	0x6004000
	.word	gSharedMem
	.word	0x408f
.Lfe59:
	.size	 sub_8093FD0,.Lfe59-sub_8093FD0
	.align	2, 0
	.type	 sub_8094038,function
	.thumb_func
sub_8094038:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	ldr	r1, .L286
	ldrb	r0, [r1, #0x1]
	cmp	r0, #0
	bne	.L279	@cond_branch
	ldr	r0, .L286+0x4
	mov	r9, r0
	mov	r0, #0x0
	mov	r2, #0x4
	add	r1, r1, #0xe
	mov	r8, r1
	ldr	r7, .L286+0x8
	mov	r1, #0xc0
	lsl	r1, r1, #0x6
	add	r6, r1, #0
	add	r1, r7, #0x6
	mov	ip, r1
.L283:
	lsl	r0, r0, #0x10
	asr	r4, r0, #0x10
	mov	r1, r8
	add	r0, r4, r1
	ldrb	r0, [r0]
	lsl	r5, r2, #0x10
	cmp	r0, #0
	beq	.L282	@cond_branch
	asr	r1, r5, #0xf
	add	r1, r1, r9
	mov	r2, #0xf0
	lsl	r2, r2, #0x2
	add	r3, r1, r2
	lsl	r2, r4, #0x3
	add	r0, r2, r7
	ldrh	r0, [r0]
	orr	r0, r0, r6
	strh	r0, [r3]
	ldr	r0, .L286+0xc
	add	r3, r1, r0
	add	r0, r7, #0x2
	add	r0, r2, r0
	ldrh	r0, [r0]
	orr	r0, r0, r6
	strh	r0, [r3]
	mov	r0, #0x80
	lsl	r0, r0, #0x3
	add	r3, r1, r0
	add	r0, r7, #0x4
	add	r0, r2, r0
	ldrh	r0, [r0]
	orr	r0, r0, r6
	strh	r0, [r3]
	ldr	r0, .L286+0x10
	add	r1, r1, r0
	add	r2, r2, ip
	ldrh	r0, [r2]
	orr	r0, r0, r6
	strh	r0, [r1]
.L282:
	add	r1, r4, #0x1
	lsl	r1, r1, #0x10
	mov	r2, #0xc0
	lsl	r2, r2, #0xa
	add	r0, r5, r2
	lsr	r2, r0, #0x10
	lsr	r0, r1, #0x10
	asr	r1, r1, #0x10
	cmp	r1, #0x7
	ble	.L283	@cond_branch
.L279:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L287:
	.align	2, 0
.L286:
	.word	gSharedMem
	.word	0x6004000
	.word	gUnknown_083B5F8C
	.word	0x3c2
	.word	0x402
.Lfe60:
	.size	 sub_8094038,.Lfe60-sub_8094038
	.align	2, 0
	.type	 sub_80940E4,function
	.thumb_func
sub_80940E4:
	push	{r4, lr}
	mov	r2, #0x0
	ldr	r1, .L294
	mov	r4, #0x0
	ldr	r3, .L294+0x4
.L292:
	strh	r4, [r1]
	lsl	r0, r2, #0x10
	mov	r2, #0x80
	lsl	r2, r2, #0x9
	add	r0, r0, r2
	add	r1, r1, #0x2
	lsr	r2, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, r3
	ble	.L292	@cond_branch
	pop	{r4}
	pop	{r0}
	bx	r0
.L295:
	.align	2, 0
.L294:
	.word	0x6004000
	.word	0x3ff
.Lfe61:
	.size	 sub_80940E4,.Lfe61-sub_80940E4
	.align	2, 0
	.type	 sub_8094110,function
	.thumb_func
sub_8094110:
	push	{r4, r5, r6, lr}
	ldr	r6, .L302
	mov	r2, #0x3
	mov	r5, #0xa0
	lsl	r5, r5, #0x2
	mov	r3, #0x1
	mov	r4, #0xb0
	lsl	r4, r4, #0x2
.L300:
	lsl	r0, r2, #0x1
	add	r0, r0, r6
	add	r1, r0, r5
	strh	r3, [r1]
	add	r0, r0, r4
	strh	r3, [r0]
	add	r0, r2, #0x1
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	cmp	r2, #0x10
	bls	.L300	@cond_branch
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L303:
	.align	2, 0
.L302:
	.word	0x6004800
.Lfe62:
	.size	 sub_8094110,.Lfe62-sub_8094110
	.align	2, 0
	.type	 sub_8094140,function
	.thumb_func
sub_8094140:
	push	{r4, r5, lr}
	ldr	r0, .L305
	bl	BasicInitMenuWindow
	ldr	r4, .L305+0x4
	ldr	r5, .L305+0x8
	add	r0, r4, #0
	add	r1, r5, #0
	bl	StringCopy
	ldrb	r1, [r5, #0x8]
	add	r0, r4, #0
	bl	ConvertInternationalString
	add	r0, r4, #0
	mov	r1, #0x7
	mov	r2, #0x5
	bl	MenuPrint
	bl	TrainerCard_Front_PrintTrainerID
	bl	TrainerCard_Front_PrintMoney
	bl	TrainerCard_Front_PrintPokedexCount
	bl	sub_809429C
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L306:
	.align	2, 0
.L305:
	.word	WindowConfig_TrainerCard_Back_Values
	.word	gStringVar1
	.word	gSharedMem+0x94
.Lfe63:
	.size	 sub_8094140,.Lfe63-sub_8094140
	.align	2, 0
	.type	 sub_8094188,function
	.thumb_func
sub_8094188:
	push	{lr}
	ldr	r0, .L308
	bl	BasicInitMenuWindow
	bl	TrainerCard_Back_PrintName
	bl	TrainerCard_Back_PrintHallOfFameTime_Label
	bl	TrainerCard_Back_PrintLinkBattlesLabel
	bl	TrainerCard_Back_PrintBattleTower_Label
	bl	TrainerCard_Back_PrintLinkContests_Label
	bl	TrainerCard_Back_PrintLinkPokeblocks_Label
	bl	TrainerCard_Back_PrintPokemonTrades_Label
	ldr	r0, .L308+0x4
	bl	BasicInitMenuWindow
	bl	TrainerCard_Back_PrintHallOfFameTime
	bl	TrainerCard_Back_PrintLinkBattles
	bl	TrainerCard_Back_PrintBattleTower
	bl	TrainerCard_Back_PrintLinkContests
	bl	TrainerCard_Back_PrintLinkPokeblocks
	bl	TrainerCard_Back_PrintPokemonTrades
	pop	{r0}
	bx	r0
.L309:
	.align	2, 0
.L308:
	.word	WindowConfig_TrainerCard_Back_Values
	.word	WindowConfig_TrainerCard_Back_Labels
.Lfe64:
	.size	 sub_8094188,.Lfe64-sub_8094188
	.align	2, 0
	.type	 TrainerCard_Front_PrintTrainerID,function
	.thumb_func
TrainerCard_Front_PrintTrainerID:
	push	{lr}
	add	sp, sp, #0xfffffff8
	ldr	r0, .L311
	add	r0, r0, #0x72
	ldrh	r1, [r0]
	mov	r0, sp
	mov	r2, #0x2
	mov	r3, #0x5
	bl	ConvertIntToDecimalStringN
	mov	r0, sp
	mov	r1, #0x14
	mov	r2, #0x2
	bl	MenuPrint
	add	sp, sp, #0x8
	pop	{r0}
	bx	r0
.L312:
	.align	2, 0
.L311:
	.word	gSharedMem
.Lfe65:
	.size	 TrainerCard_Front_PrintTrainerID,.Lfe65-TrainerCard_Front_PrintTrainerID
	.align	2, 0
	.type	 TrainerCard_Front_PrintMoney,function
	.thumb_func
TrainerCard_Front_PrintMoney:
	push	{lr}
	ldr	r0, .L314
	add	r0, r0, #0x88
	ldr	r0, [r0]
	mov	r1, #0x10
	mov	r2, #0x8
	bl	sub_80B7AEC
	pop	{r0}
	bx	r0
.L315:
	.align	2, 0
.L314:
	.word	gSharedMem
.Lfe66:
	.size	 TrainerCard_Front_PrintMoney,.Lfe66-TrainerCard_Front_PrintMoney
	.section .rodata
.LC155:
	.byte	0x3a
	.byte	0x39
	.byte	0x3a
	.byte	0x31
	.byte	0xff
.text
	.align	2, 0
	.type	 TrainerCard_Front_PrintPokedexCount,function
	.thumb_func
TrainerCard_Front_PrintPokedexCount:
	push	{r4, lr}
	add	sp, sp, #0xffffffe8
	add	r4, sp, #0x10
	ldr	r1, .L319
	add	r0, r4, #0
	mov	r2, #0x5
	bl	memcpy
	ldr	r1, .L319+0x4
	ldrb	r0, [r1, #0x7]
	cmp	r0, #0
	bne	.L317	@cond_branch
	bl	sub_8094110
	b	.L318
.L320:
	.align	2, 0
.L319:
	.word	.LC155
	.word	gSharedMem
.L317:
	add	r0, r1, #0
	add	r0, r0, #0x70
	ldrh	r1, [r0]
	mov	r0, sp
	bl	ConvertIntToDecimalString
	mov	r0, sp
	add	r1, r4, #0
	bl	StringAppend
	mov	r0, sp
	mov	r1, #0x10
	mov	r2, #0xa
	bl	MenuPrint_RightAligned
.L318:
	add	sp, sp, #0x18
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe67:
	.size	 TrainerCard_Front_PrintPokedexCount,.Lfe67-TrainerCard_Front_PrintPokedexCount
	.align	2, 0
	.type	 TrainerCard_Front_PrintPlayTime,function
	.thumb_func
TrainerCard_Front_PrintPlayTime:
	push	{r4, r5, lr}
	add	sp, sp, #0xfffffff0
	add	r5, r0, #0
	lsl	r1, r1, #0x10
	lsr	r3, r1, #0x10
	ldr	r0, .L323
	ldrh	r4, [r0, #0xe]
	ldrb	r2, [r0, #0x10]
	ldr	r1, .L323+0x4
	ldrb	r0, [r1, #0x1]
	cmp	r0, #0
	beq	.L322	@cond_branch
	add	r0, r1, #0
	add	r0, r0, #0x74
	ldrh	r4, [r0]
	add	r0, r0, #0x2
	ldrh	r2, [r0]
.L322:
	lsl	r3, r3, #0x10
	asr	r3, r3, #0x10
	mov	r0, sp
	add	r1, r4, #0
	bl	FormatPlayTime
	add	r0, r5, #0
	mov	r1, sp
	mov	r2, #0x30
	mov	r3, #0x1
	bl	sub_8072C74
	add	sp, sp, #0x10
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L324:
	.align	2, 0
.L323:
	.word	gSaveBlock2
	.word	gSharedMem
.Lfe68:
	.size	 TrainerCard_Front_PrintPlayTime,.Lfe68-TrainerCard_Front_PrintPlayTime
	.align	2, 0
	.type	 sub_809429C,function
	.thumb_func
sub_809429C:
	push	{r4, r5, r6, lr}
	ldr	r6, .L327
	ldrb	r0, [r6, #0x1]
	cmp	r0, #0
	beq	.L326	@cond_branch
	ldr	r0, .L327+0x4
	add	r1, r6, #0
	add	r1, r1, #0x20
	bl	StringCopy
	mov	r5, #0x0
	strb	r5, [r0]
	add	r0, r0, #0x1
	add	r1, r6, #0
	add	r1, r1, #0x30
	bl	StringCopy
	ldr	r4, .L327+0x4
	add	r0, r4, #0
	mov	r1, #0x2
	mov	r2, #0xe
	bl	MenuPrint
	add	r1, r6, #0
	add	r1, r1, #0x40
	add	r0, r4, #0
	bl	StringCopy
	strb	r5, [r0]
	add	r0, r0, #0x1
	add	r1, r6, #0
	add	r1, r1, #0x50
	bl	StringCopy
	add	r0, r4, #0
	mov	r1, #0x2
	mov	r2, #0x10
	bl	MenuPrint
.L326:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L328:
	.align	2, 0
.L327:
	.word	gSharedMem
	.word	gStringVar1
.Lfe69:
	.size	 sub_809429C,.Lfe69-sub_809429C
	.align	2, 0
	.type	 TrainerCard_Back_PrintName,function
	.thumb_func
TrainerCard_Back_PrintName:
	push	{r4, r5, lr}
	ldr	r4, .L330
	ldr	r5, .L330+0x4
	add	r0, r4, #0
	add	r1, r5, #0
	bl	StringCopy
	ldrb	r1, [r5, #0x8]
	add	r0, r4, #0
	bl	ConvertInternationalString
	ldr	r1, .L330+0x8
	add	r0, r4, #0
	bl	StringAppend
	add	r0, r4, #0
	mov	r1, #0x1c
	mov	r2, #0x2
	bl	MenuPrint_RightAligned
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L331:
	.align	2, 0
.L330:
	.word	gStringVar1
	.word	gSharedMem+0x94
	.word	gOtherText_TrainersTrainerCard
.Lfe70:
	.size	 TrainerCard_Back_PrintName,.Lfe70-TrainerCard_Back_PrintName
	.align	2, 0
	.type	 TrainerCard_Back_PrintHallOfFameTime_Label,function
	.thumb_func
TrainerCard_Back_PrintHallOfFameTime_Label:
	push	{lr}
	ldr	r0, .L334
	ldrb	r0, [r0, #0x8]
	cmp	r0, #0
	beq	.L333	@cond_branch
	ldr	r0, .L334+0x4
	mov	r1, #0x3
	mov	r2, #0x5
	bl	MenuPrint
.L333:
	pop	{r0}
	bx	r0
.L335:
	.align	2, 0
.L334:
	.word	gSharedMem
	.word	gOtherText_FirstHOF
.Lfe71:
	.size	 TrainerCard_Back_PrintHallOfFameTime_Label,.Lfe71-TrainerCard_Back_PrintHallOfFameTime_Label
	.align	2, 0
	.type	 TrainerCard_Back_PrintHallOfFameTime,function
	.thumb_func
TrainerCard_Back_PrintHallOfFameTime:
	push	{r4, r5, lr}
	ldr	r5, .L338
	ldrb	r0, [r5, #0x8]
	cmp	r0, #0
	beq	.L337	@cond_branch
	ldr	r2, .L338+0x4
	add	r0, r5, #0
	add	r0, r0, #0x6a
	ldrh	r1, [r0]
	add	r0, r2, #0
	mov	r2, #0x1
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	add	r2, r0, #0
	ldr	r4, .L338+0x8
	add	r1, r4, #0
	bl	StringCopy
	add	r2, r0, #0
	add	r0, r5, #0
	add	r0, r0, #0x6c
	ldrh	r1, [r0]
	add	r0, r2, #0
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	add	r2, r0, #0
	add	r1, r4, #0
	bl	StringCopy
	add	r2, r0, #0
	add	r0, r5, #0
	add	r0, r0, #0x6e
	ldrh	r1, [r0]
	add	r0, r2, #0
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	ldr	r0, .L338+0x4
	mov	r1, #0x1c
	mov	r2, #0x5
	bl	MenuPrint_RightAligned
.L337:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L339:
	.align	2, 0
.L338:
	.word	gSharedMem
	.word	gStringVar1
	.word	gUnknown_083B5EF4
.Lfe72:
	.size	 TrainerCard_Back_PrintHallOfFameTime,.Lfe72-TrainerCard_Back_PrintHallOfFameTime
	.align	2, 0
	.type	 TrainerCard_Back_PrintLinkBattlesLabel,function
	.thumb_func
TrainerCard_Back_PrintLinkBattlesLabel:
	push	{lr}
	ldr	r0, .L342
	ldrb	r0, [r0, #0x9]
	cmp	r0, #0
	beq	.L341	@cond_branch
	ldr	r0, .L342+0x4
	mov	r1, #0x3
	mov	r2, #0x7
	bl	MenuPrint
.L341:
	pop	{r0}
	bx	r0
.L343:
	.align	2, 0
.L342:
	.word	gSharedMem
	.word	gOtherText_LinkCableBattles
.Lfe73:
	.size	 TrainerCard_Back_PrintLinkBattlesLabel,.Lfe73-TrainerCard_Back_PrintLinkBattlesLabel
	.align	2, 0
	.type	 TrainerCard_Back_PrintLinkBattles,function
	.thumb_func
TrainerCard_Back_PrintLinkBattles:
	push	{r4, lr}
	add	sp, sp, #0xfffffff0
	ldr	r4, .L346
	ldrb	r0, [r4, #0x9]
	cmp	r0, #0
	beq	.L345	@cond_branch
	add	r0, r4, #0
	add	r0, r0, #0x78
	ldrh	r1, [r0]
	mov	r0, sp
	bl	ConvertIntToDecimalString
	mov	r0, sp
	mov	r1, #0x16
	mov	r2, #0x7
	bl	MenuPrint_RightAligned
	add	r0, r4, #0
	add	r0, r0, #0x7a
	ldrh	r1, [r0]
	mov	r0, sp
	bl	ConvertIntToDecimalString
	mov	r0, sp
	mov	r1, #0x1c
	mov	r2, #0x7
	bl	MenuPrint_RightAligned
.L345:
	add	sp, sp, #0x10
	pop	{r4}
	pop	{r0}
	bx	r0
.L347:
	.align	2, 0
.L346:
	.word	gSharedMem
.Lfe74:
	.size	 TrainerCard_Back_PrintLinkBattles,.Lfe74-TrainerCard_Back_PrintLinkBattles
	.align	2, 0
	.type	 TrainerCard_Back_PrintBattleTower_Label,function
	.thumb_func
TrainerCard_Back_PrintBattleTower_Label:
	push	{lr}
	ldr	r0, .L350
	ldrb	r0, [r0, #0xa]
	cmp	r0, #0
	beq	.L349	@cond_branch
	ldr	r0, .L350+0x4
	mov	r1, #0x3
	mov	r2, #0xf
	bl	MenuPrint
.L349:
	pop	{r0}
	bx	r0
.L351:
	.align	2, 0
.L350:
	.word	gSharedMem
	.word	gOtherText_BattleTowerWinRecord
.Lfe75:
	.size	 TrainerCard_Back_PrintBattleTower_Label,.Lfe75-TrainerCard_Back_PrintBattleTower_Label
	.align	2, 0
	.type	 TrainerCard_Back_PrintBattleTower,function
	.thumb_func
TrainerCard_Back_PrintBattleTower:
	push	{r4, lr}
	add	sp, sp, #0xfffffff0
	ldr	r4, .L354
	ldrb	r0, [r4, #0xa]
	cmp	r0, #0
	beq	.L353	@cond_branch
	add	r0, r4, #0
	add	r0, r0, #0x7c
	ldrh	r1, [r0]
	mov	r0, sp
	mov	r2, #0x18
	mov	r3, #0x1
	bl	sub_8072C44
	mov	r0, sp
	mov	r1, #0x70
	mov	r2, #0x78
	mov	r3, #0x0
	bl	MenuPrint_PixelCoords
	add	r0, r4, #0
	add	r0, r0, #0x7e
	ldrh	r1, [r0]
	mov	r0, sp
	mov	r2, #0x18
	mov	r3, #0x1
	bl	sub_8072C44
	mov	r0, sp
	mov	r1, #0x95
	mov	r2, #0x78
	mov	r3, #0x0
	bl	MenuPrint_PixelCoords
.L353:
	add	sp, sp, #0x10
	pop	{r4}
	pop	{r0}
	bx	r0
.L355:
	.align	2, 0
.L354:
	.word	gSharedMem
.Lfe76:
	.size	 TrainerCard_Back_PrintBattleTower,.Lfe76-TrainerCard_Back_PrintBattleTower
	.align	2, 0
	.type	 TrainerCard_Back_PrintLinkContests_Label,function
	.thumb_func
TrainerCard_Back_PrintLinkContests_Label:
	push	{lr}
	ldr	r0, .L358
	ldrb	r0, [r0, #0xb]
	cmp	r0, #0
	beq	.L357	@cond_branch
	ldr	r0, .L358+0x4
	mov	r1, #0x3
	mov	r2, #0xd
	bl	MenuPrint
.L357:
	pop	{r0}
	bx	r0
.L359:
	.align	2, 0
.L358:
	.word	gSharedMem
	.word	gOtherText_ContestRecord
.Lfe77:
	.size	 TrainerCard_Back_PrintLinkContests_Label,.Lfe77-TrainerCard_Back_PrintLinkContests_Label
	.align	2, 0
	.type	 TrainerCard_Back_PrintLinkContests,function
	.thumb_func
TrainerCard_Back_PrintLinkContests:
	push	{lr}
	add	sp, sp, #0xfffffff8
	ldr	r1, .L362
	ldrb	r0, [r1, #0xb]
	cmp	r0, #0
	beq	.L361	@cond_branch
	add	r0, r1, #0
	add	r0, r0, #0x80
	ldrh	r1, [r0]
	mov	r0, sp
	mov	r2, #0x1
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	mov	r0, sp
	mov	r1, #0x1c
	mov	r2, #0xd
	bl	MenuPrint_RightAligned
.L361:
	add	sp, sp, #0x8
	pop	{r0}
	bx	r0
.L363:
	.align	2, 0
.L362:
	.word	gSharedMem
.Lfe78:
	.size	 TrainerCard_Back_PrintLinkContests,.Lfe78-TrainerCard_Back_PrintLinkContests
	.align	2, 0
	.type	 TrainerCard_Back_PrintLinkPokeblocks_Label,function
	.thumb_func
TrainerCard_Back_PrintLinkPokeblocks_Label:
	push	{lr}
	ldr	r0, .L366
	ldrb	r0, [r0, #0xc]
	cmp	r0, #0
	beq	.L365	@cond_branch
	ldr	r0, .L366+0x4
	mov	r1, #0x3
	mov	r2, #0xb
	bl	MenuPrint
.L365:
	pop	{r0}
	bx	r0
.L367:
	.align	2, 0
.L366:
	.word	gSharedMem
	.word	gOtherText_MixingRecord
.Lfe79:
	.size	 TrainerCard_Back_PrintLinkPokeblocks_Label,.Lfe79-TrainerCard_Back_PrintLinkPokeblocks_Label
	.align	2, 0
	.type	 TrainerCard_Back_PrintLinkPokeblocks,function
	.thumb_func
TrainerCard_Back_PrintLinkPokeblocks:
	push	{lr}
	add	sp, sp, #0xfffffff8
	ldr	r1, .L370
	ldrb	r0, [r1, #0xc]
	cmp	r0, #0
	beq	.L369	@cond_branch
	add	r0, r1, #0
	add	r0, r0, #0x82
	ldrh	r1, [r0]
	mov	r0, sp
	mov	r2, #0x1
	mov	r3, #0x5
	bl	ConvertIntToDecimalStringN
	mov	r0, sp
	mov	r1, #0x1c
	mov	r2, #0xb
	bl	MenuPrint_RightAligned
.L369:
	add	sp, sp, #0x8
	pop	{r0}
	bx	r0
.L371:
	.align	2, 0
.L370:
	.word	gSharedMem
.Lfe80:
	.size	 TrainerCard_Back_PrintLinkPokeblocks,.Lfe80-TrainerCard_Back_PrintLinkPokeblocks
	.align	2, 0
	.type	 TrainerCard_Back_PrintPokemonTrades_Label,function
	.thumb_func
TrainerCard_Back_PrintPokemonTrades_Label:
	push	{lr}
	ldr	r0, .L374
	ldrb	r0, [r0, #0xd]
	cmp	r0, #0
	beq	.L373	@cond_branch
	ldr	r0, .L374+0x4
	mov	r1, #0x3
	mov	r2, #0x9
	bl	MenuPrint
.L373:
	pop	{r0}
	bx	r0
.L375:
	.align	2, 0
.L374:
	.word	gSharedMem
	.word	gOtherText_TradeRecord
.Lfe81:
	.size	 TrainerCard_Back_PrintPokemonTrades_Label,.Lfe81-TrainerCard_Back_PrintPokemonTrades_Label
	.align	2, 0
	.type	 TrainerCard_Back_PrintPokemonTrades,function
	.thumb_func
TrainerCard_Back_PrintPokemonTrades:
	push	{lr}
	add	sp, sp, #0xfffffff8
	ldr	r1, .L378
	ldrb	r0, [r1, #0xd]
	cmp	r0, #0
	beq	.L377	@cond_branch
	add	r0, r1, #0
	add	r0, r0, #0x84
	ldrh	r1, [r0]
	mov	r0, sp
	mov	r2, #0x1
	mov	r3, #0x5
	bl	ConvertIntToDecimalStringN
	mov	r0, sp
	mov	r1, #0x1c
	mov	r2, #0x9
	bl	MenuPrint_RightAligned
.L377:
	add	sp, sp, #0x8
	pop	{r0}
	bx	r0
.L379:
	.align	2, 0
.L378:
	.word	gSharedMem
.Lfe82:
	.size	 TrainerCard_Back_PrintPokemonTrades,.Lfe82-TrainerCard_Back_PrintPokemonTrades
	.align	2, 0
	.globl	unref_sub_8094588
	.type	 unref_sub_8094588,function
	.thumb_func
unref_sub_8094588:
	push	{r4, lr}
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	lsl	r1, r1, #0x10
	lsr	r2, r1, #0x10
	ldr	r4, .L382
	ldr	r0, .L382+0x4
	ldrb	r0, [r0, #0x8]
	cmp	r0, #0x1
	bne	.L381	@cond_branch
	ldr	r4, .L382+0x8
.L381:
	lsl	r1, r3, #0x18
	lsr	r1, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	add	r0, r4, #0
	bl	MenuPrint
	pop	{r4}
	pop	{r0}
	bx	r0
.L383:
	.align	2, 0
.L382:
	.word	gOtherText_Boy
	.word	gSaveBlock2
	.word	gOtherText_Girl
.Lfe83:
	.size	 unref_sub_8094588,.Lfe83-unref_sub_8094588
.text
	.align	2, 0
