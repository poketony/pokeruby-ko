@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.globl	gUnknown_0839F5FC
	.section .rodata
	.align	1, 0
	.type	 gUnknown_0839F5FC,object
gUnknown_0839F5FC:
	.short	0x0
	.short	0x423f
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xcdf
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x7fff
	.short	0x0
	.short	0x2adf
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x1f8
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x7fff
	.size	 gUnknown_0839F5FC,64
	.globl	gUnknown_0839F63C
	.type	 gUnknown_0839F63C,object
gUnknown_0839F63C:
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0x1f
	.byte	0x11
	.byte	0x11
	.byte	0xf8
	.byte	0x8f
	.byte	0x88
	.byte	0x88
	.byte	0xf8
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0x1f
	.byte	0x11
	.byte	0x11
	.byte	0xf8
	.byte	0x8f
	.byte	0x88
	.byte	0x88
	.byte	0xf8
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.size	 gUnknown_0839F63C,64
.text
	.align	2, 0
	.type	 MainCB,function
	.thumb_func
MainCB:
	push	{lr}
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	UpdatePaletteFade
	pop	{r0}
	bx	r0
.Lfe1:
	.size	 MainCB,.Lfe1-MainCB
	.align	2, 0
	.type	 VBlankCB,function
	.thumb_func
VBlankCB:
	push	{lr}
	bl	LoadOam
	bl	ProcessSpriteCopyRequests
	bl	TransferPlttBuffer
	pop	{r0}
	bx	r0
.Lfe2:
	.size	 VBlankCB,.Lfe2-VBlankCB
	.align	2, 0
	.globl	CB2_InitOptionMenu
	.type	 CB2_InitOptionMenu,function
	.thumb_func
CB2_InitOptionMenu:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #0xfffffff4
	ldr	r0, .L26
	ldr	r1, .L26+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x9
	bhi	.L7	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L26+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L27:
	.align	2, 0
.L26:
	.word	gMain
	.word	0x43c
	.word	.L23
	.align	2, 0
	.align	2, 0
.L23:
	.word	.L7
	.word	.L13
	.word	.L14
	.word	.L15
	.word	.L16
	.word	.L18
	.word	.L19
	.word	.L20
	.word	.L21
	.word	.L22
.L7:
	mov	r0, #0x0
	bl	SetVBlankCallback
	mov	r0, #0x80
	lsl	r0, r0, #0x13
	mov	r1, #0x0
	strh	r1, [r0]
	add	r0, r0, #0xc
	strh	r1, [r0]
	sub	r0, r0, #0x2
	strh	r1, [r0]
	sub	r0, r0, #0x2
	strh	r1, [r0]
	add	r0, r0, #0x10
	strh	r1, [r0]
	add	r0, r0, #0x2
	strh	r1, [r0]
	sub	r0, r0, #0x6
	strh	r1, [r0]
	add	r0, r0, #0x2
	strh	r1, [r0]
	sub	r0, r0, #0x6
	strh	r1, [r0]
	add	r0, r0, #0x2
	strh	r1, [r0]
	mov	r3, #0xc0
	lsl	r3, r3, #0x13
	mov	r4, #0xc0
	lsl	r4, r4, #0x9
	add	r2, sp, #0x8
	mov	r8, r2
	add	r2, sp, #0x4
	mov	r6, #0x0
	ldr	r1, .L28
	mov	r5, #0x80
	lsl	r5, r5, #0x5
	ldr	r7, .L28+0x4
	mov	r0, #0x81
	lsl	r0, r0, #0x18
	mov	ip, r0
.L10:
	strh	r6, [r2]
	add	r0, sp, #0x4
	str	r0, [r1]
	str	r3, [r1, #0x4]
	str	r7, [r1, #0x8]
	ldr	r0, [r1, #0x8]
	add	r3, r3, r5
	sub	r4, r4, r5
	cmp	r4, r5
	bhi	.L10	@cond_branch
	strh	r6, [r2]
	add	r2, sp, #0x4
	str	r2, [r1]
	str	r3, [r1, #0x4]
	lsr	r0, r4, #0x1
	mov	r2, ip
	orr	r0, r0, r2
	str	r0, [r1, #0x8]
	ldr	r0, [r1, #0x8]
	mov	r0, #0xe0
	lsl	r0, r0, #0x13
	mov	r3, #0x80
	lsl	r3, r3, #0x3
	mov	r4, #0x0
	str	r4, [sp, #0x8]
	ldr	r2, .L28
	mov	r1, r8
	str	r1, [r2]
	str	r0, [r2, #0x4]
	lsr	r0, r3, #0x2
	mov	r1, #0x85
	lsl	r1, r1, #0x18
	orr	r0, r0, r1
	str	r0, [r2, #0x8]
	ldr	r0, [r2, #0x8]
	mov	r1, #0xa0
	lsl	r1, r1, #0x13
	add	r0, sp, #0x4
	strh	r4, [r0]
	str	r0, [r2]
	str	r1, [r2, #0x4]
	lsr	r3, r3, #0x1
	mov	r0, #0x81
	lsl	r0, r0, #0x18
	orr	r3, r3, r0
	str	r3, [r2, #0x8]
	ldr	r0, [r2, #0x8]
	ldr	r1, .L28+0x8
	ldr	r2, .L28+0xc
	add	r1, r1, r2
	b	.L24
.L29:
	.align	2, 0
.L28:
	.word	0x40000d4
	.word	0x81000800
	.word	gMain
	.word	0x43c
.L13:
	bl	ResetPaletteFade
	bl	remove_some_task
	bl	ResetTasks
	bl	ResetSpriteData
	b	.L25
.L14:
	ldr	r0, .L30
	bl	SetUpWindowConfig
	ldr	r1, .L30+0x4
	ldr	r2, .L30+0x8
	add	r1, r1, r2
	b	.L24
.L31:
	.align	2, 0
.L30:
	.word	gWindowConfig_81E71B4
	.word	gMain
	.word	0x43c
.L15:
	ldr	r0, .L32
	bl	MultistepInitMenuWindowBegin
	b	.L25
.L33:
	.align	2, 0
.L32:
	.word	gWindowConfig_81E71B4
.L16:
	bl	MultistepInitMenuWindowContinue
	cmp	r0, #0
	bne	.LCB233
	b	.L4	@long jump
.LCB233:
	ldr	r1, .L34
	ldr	r2, .L34+0x4
	add	r1, r1, r2
	b	.L24
.L35:
	.align	2, 0
.L34:
	.word	gMain
	.word	0x43c
.L18:
	ldr	r0, .L36
	mov	r1, #0x80
	mov	r2, #0x40
	bl	LoadPalette
	bl	OptionMenuLoadPalette
	ldr	r0, .L36+0x4
	ldr	r1, .L36+0x8
	mov	r2, #0x20
	bl	CpuSet
	b	.L25
.L37:
	.align	2, 0
.L36:
	.word	gUnknown_0839F5FC
	.word	gUnknown_0839F63C
	.word	0x600bee0
.L19:
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	ldr	r1, .L38
	ldr	r2, .L38+0x4
	add	r1, r1, r2
	b	.L24
.L39:
	.align	2, 0
.L38:
	.word	gMain
	.word	0x43c
.L20:
	ldr	r0, .L40
	mov	r4, #0x0
	strh	r4, [r0]
	add	r0, r0, #0x4
	strh	r4, [r0]
	sub	r0, r0, #0x2
	strh	r4, [r0]
	add	r0, r0, #0x4
	strh	r4, [r0]
	ldr	r1, .L40+0x4
	ldr	r2, .L40+0x8
	add	r0, r2, #0
	strh	r0, [r1]
	add	r1, r1, #0x2
	mov	r0, #0x31
	strh	r0, [r1]
	add	r1, r1, #0x6
	mov	r0, #0xe1
	strh	r0, [r1]
	ldr	r0, .L40+0xc
	strh	r4, [r0]
	add	r1, r1, #0x4
	mov	r0, #0x7
	strh	r0, [r1]
	ldr	r3, .L40+0x10
	ldrh	r2, [r3]
	strh	r4, [r3]
	ldr	r4, .L40+0x14
	ldrh	r0, [r4]
	mov	r1, #0x1
	orr	r0, r0, r1
	strh	r0, [r4]
	strh	r2, [r3]
	ldr	r2, .L40+0x18
	ldrh	r0, [r2]
	mov	r1, #0x8
	orr	r0, r0, r1
	strh	r0, [r2]
	ldr	r0, .L40+0x1c
	bl	SetVBlankCallback
	mov	r1, #0x80
	lsl	r1, r1, #0x13
	ldr	r2, .L40+0x20
	add	r0, r2, #0
	strh	r0, [r1]
	b	.L25
.L41:
	.align	2, 0
.L40:
	.word	0x4000040
	.word	0x4000048
	.word	0x1111
	.word	0x4000052
	.word	0x4000208
	.word	0x4000200
	.word	0x4000004
	.word	VBlankCB
	.word	0x7140
.L21:
	ldr	r0, .L42
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L42+0x4
	lsl	r4, r0, #0x2
	add	r4, r4, r0
	lsl	r4, r4, #0x3
	add	r4, r4, r1
	mov	r0, #0x0
	strh	r0, [r4, #0x8]
	ldr	r1, .L42+0x8
	ldrb	r0, [r1, #0x14]
	lsl	r0, r0, #0x1d
	lsr	r0, r0, #0x1d
	strh	r0, [r4, #0xa]
	ldrb	r0, [r1, #0x15]
	lsl	r0, r0, #0x1d
	lsr	r0, r0, #0x1f
	strh	r0, [r4, #0xc]
	ldrb	r0, [r1, #0x15]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x1f
	strh	r0, [r4, #0xe]
	ldrb	r0, [r1, #0x15]
	lsl	r0, r0, #0x1f
	lsr	r0, r0, #0x1f
	strh	r0, [r4, #0x10]
	ldrb	r0, [r1, #0x13]
	strh	r0, [r4, #0x12]
	ldrb	r0, [r1, #0x14]
	lsr	r0, r0, #0x3
	strh	r0, [r4, #0x14]
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0x1b
	mov	r3, #0x3
	bl	MenuDrawTextWindow
	mov	r0, #0x2
	mov	r1, #0x4
	mov	r2, #0x1b
	mov	r3, #0x13
	bl	MenuDrawTextWindow
	ldr	r0, .L42+0xc
	mov	r1, #0x19
	mov	r2, #0x8
	mov	r3, #0x1
	bl	MenuPrint_PixelCoords
	ldr	r0, .L42+0x10
	mov	r1, #0x19
	mov	r2, #0x28
	mov	r3, #0x1
	bl	MenuPrint_PixelCoords
	ldr	r0, .L42+0x14
	mov	r1, #0x19
	mov	r2, #0x38
	mov	r3, #0x1
	bl	MenuPrint_PixelCoords
	ldr	r0, .L42+0x18
	mov	r1, #0x19
	mov	r2, #0x48
	mov	r3, #0x1
	bl	MenuPrint_PixelCoords
	ldr	r0, .L42+0x1c
	mov	r1, #0x19
	mov	r2, #0x58
	mov	r3, #0x1
	bl	MenuPrint_PixelCoords
	ldr	r0, .L42+0x20
	mov	r1, #0x19
	mov	r2, #0x68
	mov	r3, #0x1
	bl	MenuPrint_PixelCoords
	ldr	r0, .L42+0x24
	mov	r1, #0x19
	mov	r2, #0x78
	mov	r3, #0x1
	bl	MenuPrint_PixelCoords
	ldr	r0, .L42+0x28
	mov	r1, #0x19
	mov	r2, #0x88
	mov	r3, #0x1
	bl	MenuPrint_PixelCoords
	ldrb	r0, [r4, #0xa]
	bl	TextSpeed_DrawChoices
	ldrb	r0, [r4, #0xc]
	bl	BattleScene_DrawChoices
	ldrb	r0, [r4, #0xe]
	bl	BattleStyle_DrawChoices
	ldrb	r0, [r4, #0x10]
	bl	Sound_DrawChoices
	ldrb	r0, [r4, #0x12]
	bl	ButtonMode_DrawChoices
	ldrb	r0, [r4, #0x14]
	bl	FrameType_DrawChoices
	ldr	r1, .L42+0x2c
	ldr	r2, .L42+0x30
	add	r0, r2, #0
	strh	r0, [r1]
	add	r1, r1, #0x4
	ldr	r2, .L42+0x34
	add	r0, r2, #0
	strh	r0, [r1]
	ldrb	r0, [r4, #0x8]
	bl	HighlightOptionMenuItem
.L25:
	ldr	r1, .L42+0x38
	ldr	r0, .L42+0x3c
	add	r1, r1, r0
.L24:
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L4
.L43:
	.align	2, 0
.L42:
	.word	Task_OptionMenuFadeIn
	.word	gTasks
	.word	gSaveBlock2
	.word	gSystemText_OptionMenu
	.word	gSystemText_TextSpeed
	.word	gSystemText_BattleScene
	.word	gSystemText_BattleStyle
	.word	gSystemText_Sound
	.word	gSystemText_ButtonMode
	.word	gSystemText_Frame
	.word	gSystemText_Cancel
	.word	0x4000040
	.word	0x11df
	.word	0x11f
	.word	gMain
	.word	0x43c
.L22:
	ldr	r0, .L44
	bl	SetMainCallback2
.L4:
	add	sp, sp, #0xc
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L45:
	.align	2, 0
.L44:
	.word	MainCB
.Lfe3:
	.size	 CB2_InitOptionMenu,.Lfe3-CB2_InitOptionMenu
	.align	2, 0
	.type	 Task_OptionMenuFadeIn,function
	.thumb_func
Task_OptionMenuFadeIn:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r0, .L48
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L47	@cond_branch
	ldr	r0, .L48+0x4
	lsl	r1, r2, #0x2
	add	r1, r1, r2
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L48+0x8
	str	r0, [r1]
.L47:
	pop	{r0}
	bx	r0
.L49:
	.align	2, 0
.L48:
	.word	gPaletteFade
	.word	gTasks
	.word	Task_OptionMenuProcessInput
.Lfe4:
	.size	 Task_OptionMenuFadeIn,.Lfe4-Task_OptionMenuFadeIn
	.align	2, 0
	.type	 Task_OptionMenuProcessInput,function
	.thumb_func
Task_OptionMenuProcessInput:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L76
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L51	@cond_branch
	ldr	r0, .L76+0x4
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r2, #0x8
	ldrsh	r0, [r1, r2]
	cmp	r0, #0x6
	beq	.LCB624
	b	.L53	@long jump
.LCB624:
	b	.L73
.L77:
	.align	2, 0
.L76:
	.word	gMain
	.word	gTasks
.L51:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L54	@cond_branch
	ldr	r0, .L78
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
.L73:
	ldr	r0, .L78+0x4
	str	r0, [r1]
	b	.L53
.L79:
	.align	2, 0
.L78:
	.word	gTasks
	.word	Task_OptionMenuSave
.L54:
	mov	r0, #0x40
	and	r0, r0, r1
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	cmp	r6, #0
	beq	.L56	@cond_branch
	ldr	r1, .L80
	lsl	r2, r4, #0x2
	add	r0, r2, r4
	lsl	r0, r0, #0x3
	add	r3, r0, r1
	ldrh	r5, [r3, #0x8]
	mov	r6, #0x8
	ldrsh	r0, [r3, r6]
	add	r7, r1, #0
	cmp	r0, #0
	ble	.L57	@cond_branch
	sub	r0, r5, #0x1
	b	.L75
.L81:
	.align	2, 0
.L80:
	.word	gTasks
.L57:
	mov	r0, #0x6
	b	.L75
.L56:
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L60	@cond_branch
	ldr	r1, .L82
	lsl	r2, r4, #0x2
	add	r0, r2, r4
	lsl	r0, r0, #0x3
	add	r3, r0, r1
	ldrh	r5, [r3, #0x8]
	mov	r7, #0x8
	ldrsh	r0, [r3, r7]
	add	r7, r1, #0
	cmp	r0, #0x5
	bgt	.L61	@cond_branch
	add	r0, r5, #0x1
.L75:
	strh	r0, [r3, #0x8]
	b	.L62
.L83:
	.align	2, 0
.L82:
	.word	gTasks
.L61:
	strh	r6, [r3, #0x8]
.L62:
	add	r0, r2, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r7
	ldrb	r0, [r0, #0x8]
	bl	HighlightOptionMenuItem
	b	.L53
.L60:
	ldr	r0, .L84
	lsl	r2, r4, #0x2
	add	r1, r2, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r3, #0x8
	ldrsh	r1, [r1, r3]
	add	r7, r0, #0
	cmp	r1, #0x5
	bhi	.L53	@cond_branch
	lsl	r0, r1, #0x2
	ldr	r1, .L84+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L85:
	.align	2, 0
.L84:
	.word	gTasks
	.word	.L71
	.align	2, 0
	.align	2, 0
.L71:
	.word	.L65
	.word	.L66
	.word	.L67
	.word	.L68
	.word	.L69
	.word	.L70
.L65:
	add	r4, r2, r4
	lsl	r4, r4, #0x3
	add	r4, r4, r7
	ldrb	r0, [r4, #0xa]
	bl	TextSpeed_ProcessInput
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4, #0xa]
	bl	TextSpeed_DrawChoices
	b	.L53
.L66:
	add	r4, r2, r4
	lsl	r4, r4, #0x3
	add	r4, r4, r7
	ldrb	r0, [r4, #0xc]
	bl	BattleScene_ProcessInput
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4, #0xc]
	bl	BattleScene_DrawChoices
	b	.L53
.L67:
	add	r4, r2, r4
	lsl	r4, r4, #0x3
	add	r4, r4, r7
	ldrb	r0, [r4, #0xe]
	bl	BattleStyle_ProcessInput
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4, #0xe]
	bl	BattleStyle_DrawChoices
	b	.L53
.L68:
	add	r4, r2, r4
	lsl	r4, r4, #0x3
	add	r4, r4, r7
	ldrb	r0, [r4, #0x10]
	bl	Sound_ProcessInput
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4, #0x10]
	bl	Sound_DrawChoices
	b	.L53
.L69:
	add	r4, r2, r4
	lsl	r4, r4, #0x3
	add	r4, r4, r7
	ldrb	r0, [r4, #0x12]
	bl	ButtonMode_ProcessInput
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4, #0x12]
	bl	ButtonMode_DrawChoices
	b	.L53
.L70:
	add	r4, r2, r4
	lsl	r4, r4, #0x3
	add	r4, r4, r7
	ldrb	r0, [r4, #0x14]
	bl	FrameType_ProcessInput
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4, #0x14]
	bl	FrameType_DrawChoices
.L53:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe5:
	.size	 Task_OptionMenuProcessInput,.Lfe5-Task_OptionMenuProcessInput
	.align	2, 0
	.type	 Task_OptionMenuSave,function
	.thumb_func
Task_OptionMenuSave:
	push	{r4, r5, r6, lr}
	add	sp, sp, #0xfffffffc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r5, .L87
	ldr	r1, .L87+0x4
	lsl	r4, r0, #0x2
	add	r4, r4, r0
	lsl	r4, r4, #0x3
	add	r4, r4, r1
	mov	r1, #0x7
	ldrb	r0, [r4, #0xa]
	and	r0, r0, r1
	ldrb	r1, [r5, #0x14]
	mov	r3, #0x8
	neg	r3, r3
	and	r3, r3, r1
	orr	r3, r3, r0
	strb	r3, [r5, #0x14]
	mov	r6, #0x1
	ldrb	r0, [r4, #0xc]
	and	r0, r0, r6
	lsl	r0, r0, #0x2
	ldrb	r1, [r5, #0x15]
	mov	r2, #0x5
	neg	r2, r2
	and	r2, r2, r1
	orr	r2, r2, r0
	strb	r2, [r5, #0x15]
	ldrb	r1, [r4, #0xe]
	and	r1, r1, r6
	lsl	r1, r1, #0x1
	mov	r0, #0x3
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r5, #0x15]
	ldrb	r1, [r4, #0x10]
	and	r1, r1, r6
	mov	r2, #0x2
	neg	r2, r2
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r5, #0x15]
	ldrh	r0, [r4, #0x12]
	mov	r2, #0x0
	strb	r0, [r5, #0x13]
	ldrb	r0, [r4, #0x14]
	lsl	r0, r0, #0x3
	mov	r1, #0x7
	and	r3, r3, r1
	orr	r3, r3, r0
	strb	r3, [r5, #0x14]
	mov	r0, #0x1
	neg	r0, r0
	str	r2, [sp]
	mov	r1, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r0, .L87+0x8
	str	r0, [r4]
	add	sp, sp, #0x4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L88:
	.align	2, 0
.L87:
	.word	gSaveBlock2
	.word	gTasks
	.word	Task_OptionMenuFadeOut
.Lfe6:
	.size	 Task_OptionMenuSave,.Lfe6-Task_OptionMenuSave
	.align	2, 0
	.type	 Task_OptionMenuFadeOut,function
	.thumb_func
Task_OptionMenuFadeOut:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r0, .L91
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L90	@cond_branch
	add	r0, r2, #0
	bl	DestroyTask
	ldr	r0, .L91+0x4
	ldr	r0, [r0, #0x8]
	bl	SetMainCallback2
.L90:
	pop	{r0}
	bx	r0
.L92:
	.align	2, 0
.L91:
	.word	gPaletteFade
	.word	gMain
.Lfe7:
	.size	 Task_OptionMenuFadeOut,.Lfe7-Task_OptionMenuFadeOut
	.align	2, 0
	.type	 HighlightOptionMenuItem,function
	.thumb_func
HighlightOptionMenuItem:
	lsl	r0, r0, #0x18
	ldr	r2, .L94
	ldr	r3, .L94+0x4
	add	r1, r3, #0
	strh	r1, [r2]
	add	r2, r2, #0x4
	lsr	r0, r0, #0x14
	add	r1, r0, #0
	add	r1, r1, #0x28
	lsl	r1, r1, #0x8
	add	r0, r0, #0x38
	add	r1, r1, r0
	strh	r1, [r2]
	bx	lr
.L95:
	.align	2, 0
.L94:
	.word	0x4000042
	.word	0x18d7
.Lfe8:
	.size	 HighlightOptionMenuItem,.Lfe8-HighlightOptionMenuItem
	.align	2, 0
	.type	 DrawOptionMenuChoice,function
	.thumb_func
DrawOptionMenuChoice:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #0xfffffff0
	add	r4, r0, #0
	lsl	r1, r1, #0x18
	lsr	r6, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r5, r2, #0x18
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r2, #0x0
	ldrb	r1, [r4]
	add	r0, r1, #0
	cmp	r0, #0xff
	beq	.L98	@cond_branch
.L100:
	mov	r7, sp
	add	r0, r7, r2
	strb	r1, [r0]
	add	r4, r4, #0x1
	add	r0, r2, #0x1
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	ldrb	r1, [r4]
	add	r0, r1, #0
	cmp	r0, #0xff
	beq	.L98	@cond_branch
	cmp	r2, #0xe
	bls	.L100	@cond_branch
.L98:
	mov	r0, sp
	strb	r3, [r0, #0x2]
	add	r1, r0, r2
	mov	r0, #0xff
	strb	r0, [r1]
	mov	r0, sp
	add	r1, r6, #0
	add	r2, r5, #0
	mov	r3, #0x1
	bl	MenuPrint_PixelCoords
	add	sp, sp, #0x10
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe9:
	.size	 DrawOptionMenuChoice,.Lfe9-DrawOptionMenuChoice
	.align	2, 0
	.type	 TextSpeed_ProcessInput,function
	.thumb_func
TextSpeed_ProcessInput:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	ldr	r2, .L110
	ldrh	r1, [r2, #0x2e]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L104	@cond_branch
	cmp	r3, #0x1
	bhi	.L105	@cond_branch
	add	r0, r3, #0x1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	b	.L104
.L111:
	.align	2, 0
.L110:
	.word	gMain
.L105:
	mov	r3, #0x0
.L104:
	ldrh	r1, [r2, #0x2e]
	mov	r0, #0x20
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L107	@cond_branch
	cmp	r3, #0
	beq	.L108	@cond_branch
	sub	r0, r3, #0x1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	b	.L107
.L108:
	mov	r3, #0x2
.L107:
	add	r0, r3, #0
	pop	{r1}
	bx	r1
.Lfe10:
	.size	 TextSpeed_ProcessInput,.Lfe10-TextSpeed_ProcessInput
	.align	2, 0
	.type	 TextSpeed_DrawChoices,function
	.thumb_func
TextSpeed_DrawChoices:
	push	{lr}
	add	sp, sp, #0xfffffffc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, sp
	mov	r2, #0xf
	strb	r2, [r1]
	strb	r2, [r1, #0x1]
	strb	r2, [r1, #0x2]
	add	r1, r1, r0
	mov	r0, #0x8
	strb	r0, [r1]
	ldr	r0, .L113
	mov	r1, sp
	ldrb	r3, [r1]
	mov	r1, #0x6e
	mov	r2, #0x28
	bl	DrawOptionMenuChoice
	ldr	r0, .L113+0x4
	mov	r1, sp
	ldrb	r3, [r1, #0x1]
	mov	r1, #0x97
	mov	r2, #0x28
	bl	DrawOptionMenuChoice
	ldr	r0, .L113+0x8
	mov	r1, sp
	ldrb	r3, [r1, #0x2]
	mov	r1, #0xb6
	mov	r2, #0x28
	bl	DrawOptionMenuChoice
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.L114:
	.align	2, 0
.L113:
	.word	gSystemText_Slow
	.word	gSystemText_Mid
	.word	gSystemText_Fast
.Lfe11:
	.size	 TextSpeed_DrawChoices,.Lfe11-TextSpeed_DrawChoices
	.align	2, 0
	.type	 BattleScene_ProcessInput,function
	.thumb_func
BattleScene_ProcessInput:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r0, .L117
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x30
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L116	@cond_branch
	mov	r0, #0x1
	eor	r2, r2, r0
.L116:
	add	r0, r2, #0
	pop	{r1}
	bx	r1
.L118:
	.align	2, 0
.L117:
	.word	gMain
.Lfe12:
	.size	 BattleScene_ProcessInput,.Lfe12-BattleScene_ProcessInput
	.align	2, 0
	.type	 BattleScene_DrawChoices,function
	.thumb_func
BattleScene_DrawChoices:
	push	{lr}
	add	sp, sp, #0xfffffffc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, sp
	mov	r2, #0xf
	strb	r2, [r1]
	strb	r2, [r1, #0x1]
	add	r1, r1, r0
	mov	r0, #0x8
	strb	r0, [r1]
	ldr	r0, .L120
	mov	r1, sp
	ldrb	r3, [r1]
	mov	r1, #0x6e
	mov	r2, #0x38
	bl	DrawOptionMenuChoice
	ldr	r0, .L120+0x4
	mov	r1, sp
	ldrb	r3, [r1, #0x1]
	mov	r1, #0x9c
	mov	r2, #0x38
	bl	DrawOptionMenuChoice
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.L121:
	.align	2, 0
.L120:
	.word	gSystemText_On
	.word	gSystemText_Off
.Lfe13:
	.size	 BattleScene_DrawChoices,.Lfe13-BattleScene_DrawChoices
	.align	2, 0
	.type	 BattleStyle_ProcessInput,function
	.thumb_func
BattleStyle_ProcessInput:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r0, .L124
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x30
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L123	@cond_branch
	mov	r0, #0x1
	eor	r2, r2, r0
.L123:
	add	r0, r2, #0
	pop	{r1}
	bx	r1
.L125:
	.align	2, 0
.L124:
	.word	gMain
.Lfe14:
	.size	 BattleStyle_ProcessInput,.Lfe14-BattleStyle_ProcessInput
	.align	2, 0
	.type	 BattleStyle_DrawChoices,function
	.thumb_func
BattleStyle_DrawChoices:
	push	{lr}
	add	sp, sp, #0xfffffffc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, sp
	mov	r2, #0xf
	strb	r2, [r1]
	strb	r2, [r1, #0x1]
	add	r1, r1, r0
	mov	r0, #0x8
	strb	r0, [r1]
	ldr	r0, .L127
	mov	r1, sp
	ldrb	r3, [r1]
	mov	r1, #0x6e
	mov	r2, #0x48
	bl	DrawOptionMenuChoice
	ldr	r0, .L127+0x4
	mov	r1, sp
	ldrb	r3, [r1, #0x1]
	mov	r1, #0xab
	mov	r2, #0x48
	bl	DrawOptionMenuChoice
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.L128:
	.align	2, 0
.L127:
	.word	gSystemText_Shift
	.word	gSystemText_Set
.Lfe15:
	.size	 BattleStyle_DrawChoices,.Lfe15-BattleStyle_DrawChoices
	.align	2, 0
	.type	 Sound_ProcessInput,function
	.thumb_func
Sound_ProcessInput:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L131
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x30
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L130	@cond_branch
	mov	r0, #0x1
	eor	r4, r4, r0
	add	r0, r4, #0
	bl	SetPokemonCryStereo
.L130:
	add	r0, r4, #0
	pop	{r4}
	pop	{r1}
	bx	r1
.L132:
	.align	2, 0
.L131:
	.word	gMain
.Lfe16:
	.size	 Sound_ProcessInput,.Lfe16-Sound_ProcessInput
	.align	2, 0
	.type	 Sound_DrawChoices,function
	.thumb_func
Sound_DrawChoices:
	push	{lr}
	add	sp, sp, #0xfffffffc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, sp
	mov	r2, #0xf
	strb	r2, [r1]
	strb	r2, [r1, #0x1]
	add	r1, r1, r0
	mov	r0, #0x8
	strb	r0, [r1]
	ldr	r0, .L134
	mov	r1, sp
	ldrb	r3, [r1]
	mov	r1, #0x6e
	mov	r2, #0x58
	bl	DrawOptionMenuChoice
	ldr	r0, .L134+0x4
	mov	r1, sp
	ldrb	r3, [r1, #0x1]
	mov	r1, #0xab
	mov	r2, #0x58
	bl	DrawOptionMenuChoice
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.L135:
	.align	2, 0
.L134:
	.word	gSystemText_Mono
	.word	gSystemText_Stereo
.Lfe17:
	.size	 Sound_DrawChoices,.Lfe17-Sound_DrawChoices
	.align	2, 0
	.type	 FrameType_ProcessInput,function
	.thumb_func
FrameType_ProcessInput:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L143
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L137	@cond_branch
	cmp	r4, #0x12
	bhi	.L138	@cond_branch
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	b	.L139
.L144:
	.align	2, 0
.L143:
	.word	gMain
.L138:
	mov	r4, #0x0
.L139:
	add	r0, r4, #0
	bl	MenuLoadTextWindowGraphics_OverrideFrameType
.L137:
	ldr	r0, .L145
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x20
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L140	@cond_branch
	cmp	r4, #0
	beq	.L141	@cond_branch
	sub	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	b	.L142
.L146:
	.align	2, 0
.L145:
	.word	gMain
.L141:
	mov	r4, #0x13
.L142:
	add	r0, r4, #0
	bl	MenuLoadTextWindowGraphics_OverrideFrameType
.L140:
	add	r0, r4, #0
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe18:
	.size	 FrameType_ProcessInput,.Lfe18-FrameType_ProcessInput
	.align	2, 0
	.type	 FrameType_DrawChoices,function
	.thumb_func
FrameType_DrawChoices:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #0xffffffe4
	lsl	r0, r0, #0x18
	mov	r1, #0x80
	lsl	r1, r1, #0x11
	add	r0, r0, r1
	lsr	r6, r0, #0x18
	ldr	r1, .L150
	mov	r0, sp
	bl	StringCopy
	add	r4, sp, #0x14
	mov	r1, #0x1
	mov	r2, #0xfc
	strb	r2, [r4]
	mov	r0, sp
	add	r0, r0, #0x15
	strb	r1, [r0]
	mov	r3, #0x3
	mov	r1, sp
	add	r1, r1, #0x16
	mov	r0, #0x7
	strb	r0, [r1]
	mov	r0, sp
	add	r0, r0, #0x17
	strb	r2, [r0]
	add	r0, sp, #0x18
	strb	r3, [r0]
	add	r1, r1, #0x3
	mov	r0, #0x9
	strb	r0, [r1]
	add	r0, r6, #0
	mov	r1, #0xa
	bl	__udivsi3
	add	r2, r0, #0
	lsl	r0, r2, #0x18
	lsr	r5, r0, #0x18
	add	r7, r4, #0
	cmp	r5, #0
	beq	.L148	@cond_branch
	mov	r1, sp
	add	r1, r1, #0x1a
	add	r0, r2, #0
	add	r0, r0, #0xa1
	strb	r0, [r1]
	mov	r4, sp
	add	r4, r4, #0x1b
	add	r0, r6, #0
	mov	r1, #0xa
	bl	__umodsi3
	add	r0, r0, #0xa1
	strb	r0, [r4]
	b	.L149
.L151:
	.align	2, 0
.L150:
	.word	gSystemText_Type
.L148:
	mov	r4, sp
	add	r4, r4, #0x1a
	add	r0, r6, #0
	mov	r1, #0xa
	bl	__umodsi3
	add	r0, r0, #0xa1
	strb	r0, [r4]
	mov	r0, sp
	add	r0, r0, #0x1b
	strb	r5, [r0]
.L149:
	mov	r0, #0xff
	strb	r0, [r7, #0x8]
	mov	r0, sp
	add	r1, r7, #0
	bl	StringAppend
	mov	r0, sp
	mov	r1, #0x6e
	mov	r2, #0x78
	mov	r3, #0x1
	bl	MenuPrint_PixelCoords
	add	sp, sp, #0x1c
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe19:
	.size	 FrameType_DrawChoices,.Lfe19-FrameType_DrawChoices
	.align	2, 0
	.type	 ButtonMode_ProcessInput,function
	.thumb_func
ButtonMode_ProcessInput:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	ldr	r2, .L159
	ldrh	r1, [r2, #0x2e]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L153	@cond_branch
	cmp	r3, #0x1
	bhi	.L154	@cond_branch
	add	r0, r3, #0x1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	b	.L153
.L160:
	.align	2, 0
.L159:
	.word	gMain
.L154:
	mov	r3, #0x0
.L153:
	ldrh	r1, [r2, #0x2e]
	mov	r0, #0x20
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L156	@cond_branch
	cmp	r3, #0
	beq	.L157	@cond_branch
	sub	r0, r3, #0x1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	b	.L156
.L157:
	mov	r3, #0x2
.L156:
	add	r0, r3, #0
	pop	{r1}
	bx	r1
.Lfe20:
	.size	 ButtonMode_ProcessInput,.Lfe20-ButtonMode_ProcessInput
	.align	2, 0
	.type	 ButtonMode_DrawChoices,function
	.thumb_func
ButtonMode_DrawChoices:
	push	{lr}
	add	sp, sp, #0xfffffffc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, sp
	mov	r2, #0xf
	strb	r2, [r1]
	strb	r2, [r1, #0x1]
	strb	r2, [r1, #0x2]
	add	r1, r1, r0
	mov	r0, #0x8
	strb	r0, [r1]
	ldr	r0, .L162
	mov	r1, sp
	ldrb	r3, [r1]
	mov	r1, #0x6e
	mov	r2, #0x68
	bl	DrawOptionMenuChoice
	ldr	r0, .L162+0x4
	mov	r1, sp
	ldrb	r3, [r1, #0x1]
	mov	r1, #0x9e
	mov	r2, #0x68
	bl	DrawOptionMenuChoice
	ldr	r0, .L162+0x8
	mov	r1, sp
	ldrb	r3, [r1, #0x2]
	mov	r1, #0xc2
	mov	r2, #0x68
	bl	DrawOptionMenuChoice
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.L163:
	.align	2, 0
.L162:
	.word	gSystemText_Normal
	.word	gSystemText_LR
	.word	gSystemText_LA
.Lfe21:
	.size	 ButtonMode_DrawChoices,.Lfe21-ButtonMode_DrawChoices
.text
	.align	2, 0
