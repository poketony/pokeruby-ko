@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
.text
	.align	2, 0
	.globl	nullsub_14
	.type	 nullsub_14,function
	.thumb_func
nullsub_14:
	bx	lr
.Lfe1:
	.size	 nullsub_14,.Lfe1-nullsub_14
	.align	2, 0
	.globl	ReshowBattleScreenAfterMenu
	.type	 ReshowBattleScreenAfterMenu,function
	.thumb_func
ReshowBattleScreenAfterMenu:
	push	{lr}
	ldr	r2, .L4
	ldrb	r0, [r2, #0x8]
	mov	r1, #0x80
	orr	r0, r0, r1
	strb	r0, [r2, #0x8]
	mov	r0, #0x0
	bl	SetHBlankCallback
	mov	r0, #0x0
	bl	SetVBlankCallback
	ldr	r0, .L4+0x4
	mov	r2, #0x0
	strh	r2, [r0]
	ldr	r0, .L4+0x8
	ldr	r3, .L4+0xc
	add	r1, r0, r3
	strb	r2, [r1]
	ldr	r1, .L4+0x10
	add	r0, r0, r1
	strb	r2, [r0]
	ldr	r0, .L4+0x14
	bl	SetMainCallback2
	pop	{r0}
	bx	r0
.L5:
	.align	2, 0
.L4:
	.word	gPaletteFade
	.word	0x400004c
	.word	gSharedMem
	.word	0x1ffff
	.word	0x1fffe
	.word	CB2_ReshowBattleScreenAfterMenu
.Lfe2:
	.size	 ReshowBattleScreenAfterMenu,.Lfe2-ReshowBattleScreenAfterMenu
	.align	2, 0
	.type	 CB2_ReshowBattleScreenAfterMenu,function
	.thumb_func
CB2_ReshowBattleScreenAfterMenu:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #0xfffffff8
	ldr	r0, .L42
	ldr	r1, .L42+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x13
	bls	.LCB65
	b	.L37	@long jump
.LCB65:
	lsl	r0, r0, #0x2
	ldr	r1, .L42+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L43:
	.align	2, 0
.L42:
	.word	gSharedMem
	.word	0x1ffff
	.word	.L38
	.align	2, 0
	.align	2, 0
.L38:
	.word	.L8
	.word	.L9
	.word	.L10
	.word	.L13
	.word	.L14
	.word	.L15
	.word	.L16
	.word	.L19
	.word	.L21
	.word	.L23
	.word	.L25
	.word	.L27
	.word	.L28
	.word	.L29
	.word	.L30
	.word	.L31
	.word	.L32
	.word	.L33
	.word	.L34
	.word	.L35
.L8:
	bl	dp12_8087EA4
	ldr	r4, .L44
	add	r0, r4, #0
	bl	SetUpWindowConfig
	bl	ResetPaletteFade
	ldr	r0, .L44+0x4
	add	r1, r4, #0
	bl	InitWindowFromConfig
	ldr	r0, .L44+0x8
	mov	r1, #0x0
	strh	r1, [r0]
	ldr	r0, .L44+0xc
	strh	r1, [r0]
	ldr	r0, .L44+0x10
	strh	r1, [r0]
	ldr	r0, .L44+0x14
	strh	r1, [r0]
	ldr	r0, .L44+0x18
	strh	r1, [r0]
	ldr	r0, .L44+0x1c
	strh	r1, [r0]
	ldr	r0, .L44+0x20
	strh	r1, [r0]
	ldr	r0, .L44+0x24
	strh	r1, [r0]
	b	.L7
.L45:
	.align	2, 0
.L44:
	.word	gWindowConfig_81E6C58
	.word	gUnknown_03004210
	.word	gUnknown_030042A4
	.word	gUnknown_030042A0
	.word	gUnknown_030042C0
	.word	gUnknown_030041B4
	.word	gUnknown_03004288
	.word	gUnknown_03004280
	.word	gUnknown_030041B0
	.word	gUnknown_030041B8
.L9:
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	mov	r1, #0xc0
	lsl	r1, r1, #0x13
	ldr	r2, .L46
	add	r0, sp, #0x4
	bl	CpuFastSet
	b	.L7
.L47:
	.align	2, 0
.L46:
	.word	0x1006000
.L10:
	ldr	r5, .L48
	ldr	r0, .L48+0x4
	add	r4, r5, r0
	ldrb	r0, [r4]
	bl	sub_800E414
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L40	@cond_branch
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	strb	r0, [r4]
	ldr	r0, .L48+0x8
	add	r1, r5, r0
	b	.L39
.L49:
	.align	2, 0
.L48:
	.word	gSharedMem
	.word	0x1fffe
	.word	0x1ffff
.L13:
	bl	ResetSpriteData
	b	.L7
.L14:
	bl	FreeAllSpritePalettes
	ldr	r1, .L50
	mov	r0, #0x4
	strb	r0, [r1]
	b	.L7
.L51:
	.align	2, 0
.L50:
	.word	gReservedSpritePaletteCount
.L15:
	bl	sub_8031EE8
	b	.L7
.L16:
	ldr	r5, .L52
	ldr	r1, .L52+0x4
	add	r4, r5, r1
	ldrb	r0, [r4]
	bl	sub_8031C30
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L17	@cond_branch
.L40:
	mov	r0, #0x0
	strb	r0, [r4]
	b	.L7
.L53:
	.align	2, 0
.L52:
	.word	gSharedMem
	.word	0x1fffe
.L17:
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	strb	r0, [r4]
	ldr	r0, .L54
	add	r1, r5, r0
	b	.L39
.L55:
	.align	2, 0
.L54:
	.word	0x1ffff
.L19:
	mov	r0, #0x0
	b	.L41
.L21:
	mov	r0, #0x1
	b	.L41
.L23:
	mov	r0, #0x2
	b	.L41
.L25:
	mov	r0, #0x3
.L41:
	bl	LoadAppropiateBankSprite
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB271
	b	.L7	@long jump
.LCB271:
	ldr	r1, .L56
	ldr	r0, .L56+0x4
	add	r1, r1, r0
.L39:
	ldrb	r0, [r1]
	sub	r0, r0, #0x1
	strb	r0, [r1]
	b	.L7
.L57:
	.align	2, 0
.L56:
	.word	gSharedMem
	.word	0x1ffff
.L27:
	mov	r0, #0x0
	bl	sub_807B184
	b	.L7
.L28:
	mov	r0, #0x1
	bl	sub_807B184
	b	.L7
.L29:
	mov	r0, #0x2
	bl	sub_807B184
	b	.L7
.L30:
	mov	r0, #0x3
	bl	sub_807B184
	b	.L7
.L31:
	mov	r0, #0x0
	bl	sub_807B508
	b	.L7
.L32:
	mov	r0, #0x1
	bl	sub_807B508
	b	.L7
.L33:
	mov	r0, #0x2
	bl	sub_807B508
	b	.L7
.L34:
	mov	r0, #0x3
	bl	sub_807B508
	b	.L7
.L35:
	bl	sub_80327CC
	mov	r0, #0x1
	bl	GetBankByPlayerAI
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r7, .L58
	lsl	r0, r4, #0x1
	add	r0, r0, r7
	ldrh	r0, [r0]
	mov	r6, #0x64
	mul	r0, r0, r6
	ldr	r5, .L58+0x4
	add	r0, r0, r5
	mov	r1, #0xb
	bl	GetMonData
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r4, #0
	bl	sub_8032984
	bl	IsDoubleBattle
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L36	@cond_branch
	mov	r0, #0x3
	bl	GetBankByPlayerAI
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r0, r4, #0x1
	add	r0, r0, r7
	ldrh	r0, [r0]
	mul	r0, r0, r6
	add	r0, r0, r5
	mov	r1, #0xb
	bl	GetMonData
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r4, #0
	bl	sub_8032984
.L36:
	ldr	r1, .L58+0x8
	ldr	r0, .L58+0xc
	ldrb	r0, [r0]
	add	r0, r0, r1
	ldrb	r0, [r0]
	mov	r1, #0x0
	bl	sub_802E3E4
	b	.L7
.L59:
	.align	2, 0
.L58:
	.word	gBattlePartyID
	.word	gEnemyParty
	.word	gActionSelectionCursor
	.word	gBankInMenu
.L37:
	ldr	r0, .L60
	bl	SetHBlankCallback
	ldr	r0, .L60+0x4
	bl	SetVBlankCallback
	bl	sub_807B06C
	mov	r0, #0x1
	str	r0, [sp]
	mov	r0, #0xff
	mov	r1, #0x0
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginHardwarePaletteFade
	ldr	r2, .L60+0x8
	ldrb	r1, [r2, #0x8]
	mov	r0, #0x7f
	and	r0, r0, r1
	strb	r0, [r2, #0x8]
	ldr	r0, .L60+0xc
	bl	SetMainCallback2
.L7:
	ldr	r1, .L60+0x10
	ldr	r0, .L60+0x14
	add	r1, r1, r0
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	add	sp, sp, #0x8
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L61:
	.align	2, 0
.L60:
	.word	sub_800FCD4
	.word	sub_800FCFC
	.word	gPaletteFade
	.word	sub_800F808
	.word	gSharedMem
	.word	0x1ffff
.Lfe3:
	.size	 CB2_ReshowBattleScreenAfterMenu,.Lfe3-CB2_ReshowBattleScreenAfterMenu
	.align	2, 0
	.type	 sub_807B06C,function
	.thumb_func
sub_807B06C:
	push	{lr}
	bl	sub_800D6D4
	ldr	r3, .L63
	ldrb	r2, [r3]
	mov	r1, #0xd
	neg	r1, r1
	add	r0, r1, #0
	and	r0, r0, r2
	strb	r0, [r3]
	ldr	r2, .L63+0x4
	ldrb	r0, [r2]
	and	r1, r1, r0
	strb	r1, [r2]
	pop	{r0}
	bx	r0
.L64:
	.align	2, 0
.L63:
	.word	0x400000a
	.word	0x400000c
.Lfe4:
	.size	 sub_807B06C,.Lfe4-sub_807B06C
	.align	2, 0
	.type	 LoadAppropiateBankSprite,function
	.thumb_func
LoadAppropiateBankSprite:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L78
	ldrb	r0, [r0]
	cmp	r4, r0
	bcs	.L66	@cond_branch
	add	r0, r4, #0
	bl	GetBankSide
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L67	@cond_branch
	lsl	r0, r4, #0x2
	ldr	r1, .L78+0x4
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0x4
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L68	@cond_branch
	ldr	r1, .L78+0x8
	lsl	r0, r4, #0x1
	add	r0, r0, r1
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L78+0xc
	add	r0, r0, r1
	add	r1, r4, #0
	bl	BattleLoadOpponentMonSprite
	b	.L70
.L79:
	.align	2, 0
.L78:
	.word	gNoOfAllBanks
	.word	gSharedMem+0x17800
	.word	gBattlePartyID
	.word	gEnemyParty
.L68:
	add	r0, r4, #0
	mov	r1, #0x0
	bl	BattleLoadSubstituteSprite
	b	.L70
.L67:
	ldr	r2, .L80
	ldrh	r1, [r2]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L71	@cond_branch
	cmp	r4, #0
	bne	.L71	@cond_branch
	ldr	r0, .L80+0x4
	ldrb	r0, [r0, #0x8]
	b	.L77
.L81:
	.align	2, 0
.L80:
	.word	gBattleTypeFlags
	.word	gSaveBlock2
.L71:
	ldrh	r1, [r2]
	mov	r0, #0x80
	lsl	r0, r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L73	@cond_branch
	cmp	r4, #0
	bne	.L73	@cond_branch
	mov	r0, #0x2
.L77:
	mov	r1, #0x0
	bl	LoadPlayerTrainerBankSprite
	b	.L70
.L73:
	lsl	r0, r4, #0x2
	ldr	r1, .L82
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0x4
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L75	@cond_branch
	ldr	r1, .L82+0x4
	lsl	r0, r4, #0x1
	add	r0, r0, r1
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L82+0x8
	add	r0, r0, r1
	add	r1, r4, #0
	bl	BattleLoadPlayerMonSprite
	b	.L70
.L83:
	.align	2, 0
.L82:
	.word	gSharedMem+0x17800
	.word	gBattlePartyID
	.word	gPlayerParty
.L75:
	add	r0, r4, #0
	mov	r1, #0x0
	bl	BattleLoadSubstituteSprite
.L70:
	ldr	r0, .L84
	ldr	r1, .L84+0x4
	add	r0, r0, r1
	mov	r1, #0x0
	strb	r1, [r0]
.L66:
	mov	r0, #0x1
	pop	{r4}
	pop	{r1}
	bx	r1
.L85:
	.align	2, 0
.L84:
	.word	gSharedMem
	.word	0x1fffe
.Lfe5:
	.size	 LoadAppropiateBankSprite,.Lfe5-LoadAppropiateBankSprite
	.align	2, 0
	.type	 sub_807B184,function
	.thumb_func
sub_807B184:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #0xfffffffc
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	ldr	r0, .L100
	ldrb	r0, [r0]
	cmp	r7, r0
	bcc	.LCB662
	b	.L86	@long jump
.LCB662:
	lsl	r2, r7, #0x2
	ldr	r0, .L100+0x4
	add	r0, r2, r0
	ldrb	r1, [r0]
	mov	r0, #0x4
	and	r0, r0, r1
	str	r2, [sp]
	cmp	r0, #0
	beq	.L88	@cond_branch
	add	r0, r7, #0
	bl	sub_8077F7C
	b	.L98
.L101:
	.align	2, 0
.L100:
	.word	gNoOfAllBanks
	.word	gSharedMem+0x17800
.L88:
	add	r0, r7, #0
	bl	sub_8077F68
.L98:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	add	r0, r7, #0
	bl	GetBankSide
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB701
	b	.L90	@long jump
.LCB701:
	ldr	r1, .L102
	lsl	r0, r7, #0x1
	add	r6, r0, r1
	ldrh	r0, [r6]
	mov	r1, #0x64
	mov	sl, r1
	mov	r1, sl
	mul	r1, r1, r0
	add	r0, r1, #0
	ldr	r1, .L102+0x4
	mov	r9, r1
	add	r0, r0, r9
	mov	r1, #0x39
	bl	GetMonData
	cmp	r0, #0
	bne	.LCB719
	b	.L86	@long jump
.LCB719:
	ldrh	r0, [r6]
	mov	r1, sl
	mul	r1, r1, r0
	add	r0, r1, #0
	add	r0, r0, r9
	mov	r1, #0xb
	bl	GetMonData
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	add	r0, r7, #0
	bl	GetBankIdentity
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	GetMonSpriteTemplate_803C56C
	ldr	r5, .L102+0x8
	add	r0, r7, #0
	mov	r1, #0x2
	bl	sub_8077ABC
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r7, #0
	bl	sub_8079E90
	add	r3, r0, #0
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	add	r0, r5, #0
	add	r1, r4, #0
	mov	r2, r8
	bl	CreateSprite
	ldr	r4, .L102+0xc
	add	r4, r7, r4
	strb	r0, [r4]
	ldr	r5, .L102+0x10
	ldrb	r0, [r4]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r5
	lsl	r3, r7, #0x4
	ldrb	r2, [r1, #0x5]
	mov	r0, #0xf
	and	r0, r0, r2
	orr	r0, r0, r3
	strb	r0, [r1, #0x5]
	ldrb	r1, [r4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r1, r5, #0
	add	r1, r1, #0x1c
	add	r0, r0, r1
	ldr	r1, .L102+0x14
	str	r1, [r0]
	ldrb	r1, [r4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	strh	r7, [r0, #0x2e]
	ldrh	r0, [r6]
	mov	r1, sl
	mul	r1, r1, r0
	add	r0, r1, #0
	add	r0, r0, r9
	mov	r1, #0xb
	bl	GetMonData
	ldrb	r2, [r4]
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r5
	strh	r0, [r1, #0x32]
	ldrb	r1, [r4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r1, .L102+0x18
	add	r1, r7, r1
	ldrb	r1, [r1]
	bl	StartSpriteAnim
	b	.L92
.L103:
	.align	2, 0
.L102:
	.word	gBattlePartyID
	.word	gEnemyParty
	.word	gUnknown_02024E8C
	.word	gObjectBankIDs
	.word	gSprites
	.word	SpriteCallbackDummy
	.word	gBattleMonForms
.L90:
	ldr	r2, .L104
	ldrh	r1, [r2]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L93	@cond_branch
	cmp	r7, #0
	bne	.L93	@cond_branch
	ldr	r5, .L104+0x4
	ldrb	r4, [r5, #0x8]
	mov	r0, #0x0
	bl	GetBankIdentity
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	GetMonSpriteTemplate_803C5A0
	ldr	r6, .L104+0x8
	ldr	r1, .L104+0xc
	ldrb	r0, [r5, #0x8]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r0, [r0]
	mov	r4, #0x8
	sub	r4, r4, r0
	lsl	r4, r4, #0x12
	mov	r0, #0xa0
	lsl	r0, r0, #0xf
	add	r4, r4, r0
	asr	r4, r4, #0x10
	mov	r0, #0x0
	bl	sub_8079E90
	add	r3, r0, #0
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	add	r0, r6, #0
	b	.L99
.L105:
	.align	2, 0
.L104:
	.word	gBattleTypeFlags
	.word	gSaveBlock2
	.word	gUnknown_02024E8C
	.word	gTrainerBackPicCoords
.L93:
	ldrh	r1, [r2]
	mov	r0, #0x80
	lsl	r0, r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L95	@cond_branch
	cmp	r7, #0
	bne	.L95	@cond_branch
	mov	r0, #0x0
	bl	GetBankIdentity
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r0, #0x2
	bl	GetMonSpriteTemplate_803C5A0
	ldr	r5, .L106
	ldr	r0, .L106+0x4
	ldrb	r0, [r0, #0x8]
	mov	r4, #0x8
	sub	r4, r4, r0
	lsl	r4, r4, #0x12
	mov	r1, #0xa0
	lsl	r1, r1, #0xf
	add	r4, r4, r1
	asr	r4, r4, #0x10
	mov	r0, #0x0
	bl	sub_8079E90
	add	r3, r0, #0
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	add	r0, r5, #0
.L99:
	mov	r1, #0x50
	add	r2, r4, #0
	bl	CreateSprite
	ldr	r3, .L106+0x8
	strb	r0, [r3]
	ldr	r4, .L106+0xc
	ldrb	r0, [r3]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r4
	ldrb	r2, [r1, #0x5]
	mov	r0, #0xf
	and	r0, r0, r2
	strb	r0, [r1, #0x5]
	ldrb	r1, [r3]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r1, r4, #0
	add	r1, r1, #0x1c
	add	r0, r0, r1
	ldr	r1, .L106+0x10
	str	r1, [r0]
	ldrb	r1, [r3]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	strh	r7, [r0, #0x2e]
	b	.L92
.L107:
	.align	2, 0
.L106:
	.word	gUnknown_02024E8C
	.word	gTrainerBackPicCoords
	.word	gObjectBankIDs
	.word	gSprites
	.word	SpriteCallbackDummy
.L95:
	ldr	r1, .L108
	lsl	r0, r7, #0x1
	add	r6, r0, r1
	ldrh	r0, [r6]
	mov	r1, #0x64
	mov	sl, r1
	mov	r1, sl
	mul	r1, r1, r0
	add	r0, r1, #0
	ldr	r1, .L108+0x4
	mov	r9, r1
	add	r0, r0, r9
	mov	r1, #0x39
	bl	GetMonData
	cmp	r0, #0
	beq	.L86	@cond_branch
	ldrh	r0, [r6]
	mov	r1, sl
	mul	r1, r1, r0
	add	r0, r1, #0
	add	r0, r0, r9
	mov	r1, #0xb
	bl	GetMonData
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	add	r0, r7, #0
	bl	GetBankIdentity
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	GetMonSpriteTemplate_803C56C
	ldr	r5, .L108+0x8
	add	r0, r7, #0
	mov	r1, #0x2
	bl	sub_8077ABC
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r7, #0
	bl	sub_8079E90
	add	r3, r0, #0
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	add	r0, r5, #0
	add	r1, r4, #0
	mov	r2, r8
	bl	CreateSprite
	ldr	r4, .L108+0xc
	add	r4, r7, r4
	strb	r0, [r4]
	ldr	r5, .L108+0x10
	ldrb	r0, [r4]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r5
	lsl	r3, r7, #0x4
	ldrb	r2, [r1, #0x5]
	mov	r0, #0xf
	and	r0, r0, r2
	orr	r0, r0, r3
	strb	r0, [r1, #0x5]
	ldrb	r1, [r4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r1, r5, #0
	add	r1, r1, #0x1c
	add	r0, r0, r1
	ldr	r1, .L108+0x14
	str	r1, [r0]
	ldrb	r1, [r4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	strh	r7, [r0, #0x2e]
	ldrh	r0, [r6]
	mov	r1, sl
	mul	r1, r1, r0
	add	r0, r1, #0
	add	r0, r0, r9
	mov	r1, #0xb
	bl	GetMonData
	ldrb	r2, [r4]
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r5
	strh	r0, [r1, #0x32]
	ldrb	r1, [r4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r1, .L108+0x18
	add	r1, r7, r1
	ldrb	r1, [r1]
	bl	StartSpriteAnim
.L92:
	ldr	r1, .L108+0x10
	ldr	r0, .L108+0xc
	add	r0, r7, r0
	ldrb	r0, [r0]
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	add	r2, r2, r1
	ldr	r0, .L108+0x1c
	ldr	r1, [sp]
	add	r0, r1, r0
	ldr	r1, [r0]
	lsl	r1, r1, #0x1f
	add	r2, r2, #0x3e
	lsr	r1, r1, #0x1f
	lsl	r1, r1, #0x2
	ldrb	r3, [r2]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2]
.L86:
	add	sp, sp, #0x4
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L109:
	.align	2, 0
.L108:
	.word	gBattlePartyID
	.word	gPlayerParty
	.word	gUnknown_02024E8C
	.word	gObjectBankIDs
	.word	gSprites
	.word	SpriteCallbackDummy
	.word	gBattleMonForms
	.word	gSharedMem+0x17800
.Lfe6:
	.size	 sub_807B184,.Lfe6-sub_807B184
	.align	2, 0
	.type	 sub_807B508,function
	.thumb_func
sub_807B508:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r0, .L129
	ldrb	r0, [r0]
	cmp	r5, r0
	bcc	.LCB1144
	b	.L110	@long jump
.LCB1144:
	ldr	r2, .L129+0x4
	ldrh	r1, [r2]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L112	@cond_branch
	cmp	r5, #0
	bne	.L112	@cond_branch
	bl	battle_make_oam_safari_battle
	b	.L128
.L130:
	.align	2, 0
.L129:
	.word	gNoOfAllBanks
	.word	gBattleTypeFlags
.L112:
	ldrh	r1, [r2]
	mov	r0, #0x80
	lsl	r0, r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L114	@cond_branch
	cmp	r5, #0
	bne	.LCB1180
	b	.L110	@long jump
.LCB1180:
.L114:
	add	r0, r5, #0
	bl	battle_make_oam_normal_battle
.L128:
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r0, .L131
	add	r4, r5, r0
	strb	r6, [r4]
	add	r0, r5, #0
	bl	sub_8043F44
	add	r0, r6, #0
	bl	sub_8043DFC
	add	r0, r5, #0
	bl	GetBankSide
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L116	@cond_branch
	ldrb	r0, [r4]
	ldr	r1, .L131+0x4
	lsl	r4, r5, #0x1
	add	r1, r4, r1
	ldrh	r2, [r1]
	mov	r1, #0x64
	mul	r1, r1, r2
	ldr	r2, .L131+0x8
	add	r1, r1, r2
	mov	r2, #0x0
	bl	sub_8045A5C
	b	.L117
.L132:
	.align	2, 0
.L131:
	.word	gHealthboxIDs
	.word	gBattlePartyID
	.word	gEnemyParty
.L116:
	ldr	r0, .L133
	ldrh	r1, [r0]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L118	@cond_branch
	ldrb	r0, [r4]
	ldr	r1, .L133+0x4
	lsl	r4, r5, #0x1
	add	r1, r4, r1
	ldrh	r2, [r1]
	mov	r1, #0x64
	mul	r1, r1, r2
	ldr	r2, .L133+0x8
	add	r1, r1, r2
	mov	r2, #0xa
	bl	sub_8045A5C
	b	.L117
.L134:
	.align	2, 0
.L133:
	.word	gBattleTypeFlags
	.word	gBattlePartyID
	.word	gPlayerParty
.L118:
	ldrb	r0, [r4]
	ldr	r1, .L135
	lsl	r4, r5, #0x1
	add	r1, r4, r1
	ldrh	r2, [r1]
	mov	r1, #0x64
	mul	r1, r1, r2
	ldr	r2, .L135+0x4
	add	r1, r1, r2
	mov	r2, #0x0
	bl	sub_8045A5C
.L117:
	add	r0, r5, #0
	bl	GetBankIdentity
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	beq	.L121	@cond_branch
	add	r0, r5, #0
	bl	GetBankIdentity
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x2
	bne	.L120	@cond_branch
.L121:
	ldr	r0, .L135+0x8
	add	r0, r5, r0
	ldrb	r0, [r0]
	mov	r1, #0x1
	bl	nullsub_11
	b	.L122
.L136:
	.align	2, 0
.L135:
	.word	gBattlePartyID
	.word	gPlayerParty
	.word	gHealthboxIDs
.L120:
	ldr	r0, .L137
	add	r0, r5, r0
	ldrb	r0, [r0]
	mov	r1, #0x0
	bl	nullsub_11
.L122:
	add	r0, r5, #0
	bl	GetBankSide
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L123	@cond_branch
	ldr	r0, .L137+0x4
	add	r0, r4, r0
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L137+0x8
	add	r0, r0, r1
	mov	r1, #0x39
	bl	GetMonData
	cmp	r0, #0
	bne	.L110	@cond_branch
	add	r0, r6, #0
	bl	sub_8043DB0
	b	.L110
.L138:
	.align	2, 0
.L137:
	.word	gHealthboxIDs
	.word	gBattlePartyID
	.word	gEnemyParty
.L123:
	ldr	r0, .L139
	ldrh	r1, [r0]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L110	@cond_branch
	ldr	r0, .L139+0x4
	add	r0, r4, r0
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L139+0x8
	add	r0, r0, r1
	mov	r1, #0x39
	bl	GetMonData
	cmp	r0, #0
	bne	.L110	@cond_branch
	add	r0, r6, #0
	bl	sub_8043DB0
.L110:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L140:
	.align	2, 0
.L139:
	.word	gBattleTypeFlags
	.word	gBattlePartyID
	.word	gPlayerParty
.Lfe7:
	.size	 sub_807B508,.Lfe7-sub_807B508
.text
	.align	2, 0
