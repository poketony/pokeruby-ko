@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
.text
	.align	2, 0
	.globl	sub_8046234
	.type	 sub_8046234,function
	.thumb_func
sub_8046234:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	lsl	r1, r1, #0x10
	lsr	r7, r1, #0x10
	lsl	r2, r2, #0x18
	lsr	r4, r2, #0x18
	ldr	r5, .L4
	ldrh	r0, [r5, #0x6]
	bl	GetSpriteTileStartByTag
	lsl	r0, r0, #0x10
	ldr	r1, .L4+0x4
	cmp	r0, r1
	bne	.L3	@cond_branch
	add	r0, r5, #0
	bl	LoadCompressedObjectPic
	ldr	r0, .L4+0x8
	bl	LoadCompressedObjectPalette
.L3:
	ldr	r0, .L4+0xc
	bl	CreateInvisibleSpriteWithCallback
	mov	r8, r0
	mov	r0, r8
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	lsl	r5, r0, #0x4
	add	r5, r5, r8
	lsl	r5, r5, #0x2
	ldr	r0, .L4+0x10
	add	r5, r5, r0
	strh	r4, [r5, #0x30]
	ldr	r0, .L4+0x14
	mov	r9, r0
	lsl	r6, r6, #0x10
	asr	r0, r6, #0x10
	mov	sl, r0
	ldr	r0, .L4+0x18
	add	r6, r6, r0
	asr	r6, r6, #0x10
	lsl	r4, r7, #0x10
	asr	r7, r4, #0x10
	add	r4, r4, r0
	asr	r4, r4, #0x10
	mov	r0, r9
	add	r1, r6, #0
	add	r2, r4, #0
	mov	r3, #0x2
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L4+0x10
	add	r1, r1, r0
	mov	r0, r8
	strh	r0, [r1, #0x2e]
	ldrh	r0, [r5, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x2e]
	add	r0, r1, #0
	bl	AnimateSprite
	mov	r0, r9
	mov	r1, sl
	add	r2, r4, #0
	mov	r3, #0x2
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r4, r0, #0x4
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L4+0x10
	add	r4, r4, r0
	mov	r0, r8
	strh	r0, [r4, #0x2e]
	ldrh	r0, [r5, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x2e]
	add	r0, r4, #0
	mov	r1, #0x1
	bl	StartSpriteAnim
	add	r0, r4, #0
	bl	AnimateSprite
	mov	r0, r9
	add	r1, r6, #0
	add	r2, r7, #0
	mov	r3, #0x2
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r4, r0, #0x4
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L4+0x10
	add	r4, r4, r0
	mov	r0, r8
	strh	r0, [r4, #0x2e]
	ldrh	r0, [r5, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x2e]
	add	r0, r4, #0
	mov	r1, #0x2
	bl	StartSpriteAnim
	add	r0, r4, #0
	bl	AnimateSprite
	mov	r0, r9
	mov	r1, sl
	add	r2, r7, #0
	mov	r3, #0x2
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r4, r0, #0x4
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L4+0x10
	add	r4, r4, r0
	mov	r0, r8
	strh	r0, [r4, #0x2e]
	ldrh	r0, [r5, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x2e]
	add	r0, r4, #0
	mov	r1, #0x3
	bl	StartSpriteAnim
	add	r0, r4, #0
	bl	AnimateSprite
	mov	r0, r8
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L5:
	.align	2, 0
.L4:
	.word	gUnknown_081FAEA4
	.word	0xffff0000
	.word	gUnknown_081FAEAC
	.word	sub_8046388
	.word	gSprites
	.word	gSpriteTemplate_81FAF0C
	.word	0xfff00000
.Lfe1:
	.size	 sub_8046234,.Lfe1-sub_8046234
	.align	2, 0
	.type	 sub_8046388,function
	.thumb_func
sub_8046388:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r1, #0x2e
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	bne	.L7	@cond_branch
	ldr	r0, .L10
	ldrh	r0, [r0, #0x6]
	bl	FreeSpriteTilesByTag
	ldr	r0, .L10+0x4
	ldrh	r0, [r0, #0x4]
	bl	FreeSpritePaletteByTag
	mov	r1, #0x30
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	bne	.L8	@cond_branch
	add	r0, r4, #0
	bl	DestroySprite
	b	.L7
.L11:
	.align	2, 0
.L10:
	.word	gUnknown_081FAEA4
	.word	gUnknown_081FAEAC
.L8:
	ldr	r0, .L12
	str	r0, [r4, #0x1c]
.L7:
	pop	{r4}
	pop	{r0}
	bx	r0
.L13:
	.align	2, 0
.L12:
	.word	SpriteCallbackDummy
.Lfe2:
	.size	 sub_8046388,.Lfe2-sub_8046388
	.align	2, 0
	.globl	sub_80463CC
	.type	 sub_80463CC,function
	.thumb_func
sub_80463CC:
	push	{lr}
	add	r3, r0, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L15	@cond_branch
	ldr	r2, .L16
	mov	r0, #0x2e
	ldrsh	r1, [r3, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrh	r1, [r0, #0x2e]
	sub	r1, r1, #0x1
	strh	r1, [r0, #0x2e]
	add	r0, r3, #0
	bl	DestroySprite
.L15:
	pop	{r0}
	bx	r0
.L17:
	.align	2, 0
.L16:
	.word	gSprites
.Lfe3:
	.size	 sub_80463CC,.Lfe3-sub_80463CC
.text
	.align	2, 0
