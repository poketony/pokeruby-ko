@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section .rodata
	.align	2, 0
	.type	 sBattlePartyMenuActions,object
sBattlePartyMenuActions:
	.word	OtherText_Summary
	.word	Task_BattlePartyMenuSummary
	.word	gOtherText_CancelNoTerminator
	.word	Task_BattlePartyMenuCancel
	.word	OtherText_Shift
	.word	Task_BattlePartyMenuShift
	.word	OtherText_SendOut
	.word	Task_BattlePartyMenuShift
	.size	 sBattlePartyMenuActions,32
	.type	 Unknown_83B5FEC,object
Unknown_83B5FEC:
	.byte	0x2
	.byte	0x0
	.byte	0x1
	.size	 Unknown_83B5FEC,3
	.type	 Unknown_83B5FEF,object
Unknown_83B5FEF:
	.byte	0x3
	.byte	0x0
	.byte	0x1
	.size	 Unknown_83B5FEF,3
	.type	 Unknown_83B5FF2,object
Unknown_83B5FF2:
	.byte	0x0
	.byte	0x1
	.size	 Unknown_83B5FF2,2
	.align	2, 0
	.type	 sBattlePartyPopupMenus,object
sBattlePartyPopupMenus:
	.byte	0x3
	.byte	0xb
	.space	2
	.word	Unknown_83B5FEC
	.byte	0x3
	.byte	0xb
	.space	2
	.word	Unknown_83B5FEF
	.byte	0x2
	.byte	0xb
	.space	2
	.word	Unknown_83B5FF2
	.size	 sBattlePartyPopupMenus,24
.text
	.align	2, 0
	.globl	unref_sub_8094928
	.type	 unref_sub_8094928,function
	.thumb_func
unref_sub_8094928:
	push	{lr}
	ldr	r1, .L3
	ldr	r2, .L3+0x4
	bl	memcpy
	pop	{r0}
	bx	r0
.L4:
	.align	2, 0
.L3:
	.word	gPokemonStorage
	.word	0x8440
.Lfe1:
	.size	 unref_sub_8094928,.Lfe1-unref_sub_8094928
	.align	2, 0
	.globl	unref_sub_8094940
	.type	 unref_sub_8094940,function
	.thumb_func
unref_sub_8094940:
	push	{lr}
	add	r1, r0, #0
	ldr	r0, .L6
	ldr	r2, .L6+0x4
	bl	memcpy
	pop	{r0}
	bx	r0
.L7:
	.align	2, 0
.L6:
	.word	gPokemonStorage
	.word	0x8440
.Lfe2:
	.size	 unref_sub_8094940,.Lfe2-unref_sub_8094940
	.align	2, 0
	.globl	sub_8094958
	.type	 sub_8094958,function
	.thumb_func
sub_8094958:
	push	{r4, lr}
	ldr	r4, .L9
	bl	sub_803FBBC
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	sub_8094998
	pop	{r4}
	pop	{r0}
	bx	r0
.L10:
	.align	2, 0
.L9:
	.word	gUnknown_02038470
.Lfe3:
	.size	 sub_8094958,.Lfe3-sub_8094958
	.align	2, 0
	.globl	sub_8094978
	.type	 sub_8094978,function
	.thumb_func
sub_8094978:
	push	{lr}
	add	r2, r0, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r0, r2, #0x1
	add	r0, r0, r2
	ldr	r3, .L12
	add	r0, r0, r3
	bl	sub_8094A74
	pop	{r0}
	bx	r0
.L13:
	.align	2, 0
.L12:
	.word	gSharedMem+0x1606c
.Lfe4:
	.size	 sub_8094978,.Lfe4-sub_8094978
	.align	2, 0
	.type	 sub_8094998,function
	.thumb_func
sub_8094998:
	push	{r4, r5, r6, lr}
	add	sp, sp, #0xfffffff8
	add	r6, r0, #0
	lsl	r1, r1, #0x18
	lsr	r4, r1, #0x18
	bl	IsLinkDoubleBattle
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L15	@cond_branch
	cmp	r4, #0
	beq	.L16	@cond_branch
	mov	r0, #0x30
	strb	r0, [r6]
	mov	r0, #0x45
	strb	r0, [r6, #0x1]
	mov	r0, #0x12
	strb	r0, [r6, #0x2]
	b	.L18
.L16:
	mov	r0, #0x3
	strb	r0, [r6]
	mov	r0, #0x12
	strb	r0, [r6, #0x1]
	mov	r0, #0x45
	strb	r0, [r6, #0x2]
	b	.L18
.L15:
	bl	IsDoubleBattle
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L19	@cond_branch
	mov	r5, #0x1
	mov	r0, #0x0
	bl	GetBankByPlayerAI
	mov	r2, sp
	ldr	r1, .L38
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x17
	add	r0, r0, r1
	ldrh	r0, [r0]
	strb	r0, [r2]
	mov	r4, #0x0
	mov	r1, sp
.L23:
	ldrb	r0, [r1]
	cmp	r4, r0
	beq	.L22	@cond_branch
	mov	r2, sp
	add	r0, r2, r5
	strb	r4, [r0]
	add	r5, r5, #0x1
.L22:
	add	r4, r4, #0x1
	cmp	r4, #0x5
	ble	.L23	@cond_branch
	b	.L26
.L39:
	.align	2, 0
.L38:
	.word	gBattlePartyID
.L19:
	mov	r5, #0x2
	mov	r0, #0x0
	bl	GetBankByPlayerAI
	mov	r1, sp
	ldr	r4, .L40
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x17
	add	r0, r0, r4
	ldrh	r0, [r0]
	strb	r0, [r1]
	mov	r0, #0x2
	bl	GetBankByPlayerAI
	mov	r1, sp
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x17
	add	r0, r0, r4
	ldrh	r0, [r0]
	strb	r0, [r1, #0x1]
	mov	r4, #0x0
.L30:
	ldrb	r0, [r1]
	cmp	r4, r0
	beq	.L29	@cond_branch
	ldrb	r0, [r1, #0x1]
	cmp	r4, r0
	beq	.L29	@cond_branch
	mov	r2, sp
	add	r0, r2, r5
	strb	r4, [r0]
	add	r5, r5, #0x1
.L29:
	add	r4, r4, #0x1
	cmp	r4, #0x5
	ble	.L30	@cond_branch
.L26:
	mov	r4, #0x0
	mov	r3, sp
.L36:
	add	r0, r6, r4
	ldrb	r1, [r3]
	lsl	r1, r1, #0x4
	ldrb	r2, [r3, #0x1]
	orr	r1, r1, r2
	strb	r1, [r0]
	add	r3, r3, #0x2
	add	r4, r4, #0x1
	cmp	r4, #0x2
	ble	.L36	@cond_branch
.L18:
	add	sp, sp, #0x8
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L41:
	.align	2, 0
.L40:
	.word	gBattlePartyID
.Lfe5:
	.size	 sub_8094998,.Lfe5-sub_8094998
	.align	2, 0
	.type	 sub_8094A74,function
	.thumb_func
sub_8094A74:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #0xfffffff8
	add	r5, r0, #0
	add	r0, r2, #0
	lsl	r1, r1, #0x18
	lsr	r7, r1, #0x18
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetBankSide
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L43	@cond_branch
	mov	r0, #0x0
	bl	GetBankByPlayerAI
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r0, #0x2
	b	.L68
.L43:
	mov	r0, #0x1
	bl	GetBankByPlayerAI
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r0, #0x3
.L68:
	bl	GetBankByPlayerAI
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	bl	IsLinkDoubleBattle
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L45	@cond_branch
	cmp	r7, #0
	beq	.L46	@cond_branch
	mov	r0, #0x30
	strb	r0, [r5]
	mov	r0, #0x45
	strb	r0, [r5, #0x1]
	mov	r0, #0x12
	strb	r0, [r5, #0x2]
	b	.L48
.L46:
	mov	r0, #0x3
	strb	r0, [r5]
	mov	r0, #0x12
	strb	r0, [r5, #0x1]
	mov	r0, #0x45
	strb	r0, [r5, #0x2]
	b	.L48
.L45:
	bl	IsDoubleBattle
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L49	@cond_branch
	mov	r3, #0x1
	mov	r2, sp
	ldr	r1, .L69
	lsl	r0, r4, #0x1
	add	r0, r0, r1
	ldrh	r0, [r0]
	strb	r0, [r2]
	mov	r4, #0x0
	mov	r1, sp
.L53:
	ldrb	r0, [r1]
	cmp	r4, r0
	beq	.L52	@cond_branch
	mov	r2, sp
	add	r0, r2, r3
	strb	r4, [r0]
	add	r3, r3, #0x1
.L52:
	add	r4, r4, #0x1
	cmp	r4, #0x5
	ble	.L53	@cond_branch
	b	.L56
.L70:
	.align	2, 0
.L69:
	.word	gBattlePartyID
.L49:
	mov	r3, #0x2
	mov	r1, sp
	ldr	r2, .L71
	lsl	r0, r4, #0x1
	add	r0, r0, r2
	ldrh	r0, [r0]
	strb	r0, [r1]
	lsl	r0, r6, #0x1
	add	r0, r0, r2
	ldrh	r0, [r0]
	strb	r0, [r1, #0x1]
	mov	r4, #0x0
.L60:
	ldrb	r0, [r1]
	cmp	r4, r0
	beq	.L59	@cond_branch
	ldrb	r0, [r1, #0x1]
	cmp	r4, r0
	beq	.L59	@cond_branch
	mov	r2, sp
	add	r0, r2, r3
	strb	r4, [r0]
	add	r3, r3, #0x1
.L59:
	add	r4, r4, #0x1
	cmp	r4, #0x5
	ble	.L60	@cond_branch
.L56:
	mov	r4, #0x0
	mov	r3, sp
.L66:
	add	r0, r5, r4
	ldrb	r1, [r3]
	lsl	r1, r1, #0x4
	ldrb	r2, [r3, #0x1]
	orr	r1, r1, r2
	strb	r1, [r0]
	add	r3, r3, #0x2
	add	r4, r4, #0x1
	cmp	r4, #0x2
	ble	.L66	@cond_branch
.L48:
	add	sp, sp, #0x8
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L72:
	.align	2, 0
.L71:
	.word	gBattlePartyID
.Lfe6:
	.size	 sub_8094A74,.Lfe6-sub_8094A74
	.align	2, 0
	.globl	sub_8094B6C
	.type	 sub_8094B6C,function
	.thumb_func
sub_8094B6C:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #0xfffffff8
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r5, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r6, r2, #0x18
	mov	r7, #0x0
	bl	IsLinkDoubleBattle
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L74	@cond_branch
	lsl	r0, r4, #0x1
	add	r0, r0, r4
	ldr	r1, .L87
	add	r4, r0, r1
	mov	r2, #0x0
	add	r6, r6, sp
	mov	ip, r6
	mov	r6, #0xf
	mov	r3, sp
.L78:
	add	r1, r4, r2
	ldrb	r0, [r1]
	lsr	r0, r0, #0x4
	strb	r0, [r3]
	add	r3, r3, #0x1
	ldrb	r1, [r1]
	add	r0, r6, #0
	and	r0, r0, r1
	strb	r0, [r3]
	add	r3, r3, #0x1
	add	r2, r2, #0x1
	cmp	r2, #0x2
	ble	.L78	@cond_branch
	mov	r0, ip
	ldrb	r3, [r0]
	mov	r2, #0x0
	mov	r0, sp
	ldrb	r0, [r0]
	cmp	r0, r5
	bne	.L82	@cond_branch
	mov	r0, sp
	ldrb	r7, [r0]
	strb	r3, [r0]
	b	.L81
.L88:
	.align	2, 0
.L87:
	.word	gSharedMem+0x1606c
.L82:
	add	r2, r2, #0x1
	cmp	r2, #0x5
	bgt	.L81	@cond_branch
	mov	r0, sp
	add	r1, r0, r2
	ldrb	r0, [r1]
	cmp	r0, r5
	bne	.L82	@cond_branch
	add	r7, r0, #0
	strb	r3, [r1]
.L81:
	cmp	r2, #0x6
	beq	.L74	@cond_branch
	mov	r0, ip
	strb	r7, [r0]
	mov	r0, sp
	ldrb	r0, [r0]
	lsl	r0, r0, #0x4
	mov	r1, sp
	ldrb	r1, [r1, #0x1]
	orr	r0, r0, r1
	strb	r0, [r4]
	mov	r0, sp
	ldrb	r0, [r0, #0x2]
	lsl	r0, r0, #0x4
	mov	r1, sp
	ldrb	r1, [r1, #0x3]
	orr	r0, r0, r1
	strb	r0, [r4, #0x1]
	mov	r0, sp
	ldrb	r0, [r0, #0x4]
	lsl	r0, r0, #0x4
	mov	r1, sp
	ldrb	r1, [r1, #0x5]
	orr	r0, r0, r1
	strb	r0, [r4, #0x2]
.L74:
	add	sp, sp, #0x8
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe7:
	.size	 sub_8094B6C,.Lfe7-sub_8094B6C
	.align	2, 0
	.globl	sub_8094C20
	.type	 sub_8094C20,function
	.thumb_func
sub_8094C20:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	mov	r1, #0x1
	and	r1, r1, r2
	lsr	r2, r0, #0x19
	cmp	r1, #0
	beq	.L90	@cond_branch
	ldr	r0, .L92
	add	r0, r2, r0
	ldrb	r0, [r0]
	mov	r1, #0xf
	and	r1, r1, r0
	b	.L91
.L93:
	.align	2, 0
.L92:
	.word	gUnknown_02038470
.L90:
	ldr	r0, .L94
	add	r0, r2, r0
	ldrb	r0, [r0]
	lsr	r1, r0, #0x4
.L91:
	add	r0, r1, #0
	pop	{r1}
	bx	r1
.L95:
	.align	2, 0
.L94:
	.word	gUnknown_02038470
.Lfe8:
	.size	 sub_8094C20,.Lfe8-sub_8094C20
	.align	2, 0
	.globl	sub_8094C54
	.type	 sub_8094C54,function
	.thumb_func
sub_8094C54:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r4, r1, #0x18
	mov	r1, #0x1
	and	r1, r1, r3
	lsr	r3, r0, #0x19
	cmp	r1, #0
	beq	.L97	@cond_branch
	ldr	r0, .L99
	add	r0, r3, r0
	ldrb	r2, [r0]
	mov	r1, #0xf0
	and	r1, r1, r2
	orr	r1, r1, r4
	strb	r1, [r0]
	b	.L98
.L100:
	.align	2, 0
.L99:
	.word	gUnknown_02038470
.L97:
	ldr	r2, .L101
	add	r2, r3, r2
	ldrb	r1, [r2]
	mov	r0, #0xf
	and	r0, r0, r1
	lsl	r1, r4, #0x4
	orr	r0, r0, r1
	strb	r0, [r2]
.L98:
	pop	{r4}
	pop	{r0}
	bx	r0
.L102:
	.align	2, 0
.L101:
	.word	gUnknown_02038470
.Lfe9:
	.size	 sub_8094C54,.Lfe9-sub_8094C54
	.align	2, 0
	.globl	sub_8094C98
	.type	 sub_8094C98,function
	.thumb_func
sub_8094C98:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	add	r6, r1, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	lsl	r6, r6, #0x18
	lsr	r6, r6, #0x18
	add	r0, r5, #0
	bl	sub_8094C20
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r6, #0
	bl	sub_8094C20
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r5, #0
	bl	sub_8094C54
	add	r0, r6, #0
	add	r1, r4, #0
	bl	sub_8094C54
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe10:
	.size	 sub_8094C98,.Lfe10-sub_8094C98
	.align	2, 0
	.globl	pokemon_order_func
	.type	 pokemon_order_func,function
	.thumb_func
pokemon_order_func:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r3, #0x0
	mov	r2, #0x0
	ldr	r5, .L114
.L108:
	add	r0, r3, r5
	ldrb	r1, [r0]
	lsr	r0, r1, #0x4
	cmp	r0, r4
	beq	.L113	@cond_branch
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	mov	r0, #0xf
	and	r0, r0, r1
	cmp	r0, r4
	bne	.L110	@cond_branch
.L113:
	add	r0, r2, #0
	b	.L112
.L115:
	.align	2, 0
.L114:
	.word	gUnknown_02038470
.L110:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	add	r0, r3, #0x1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0x2
	bls	.L108	@cond_branch
	mov	r0, #0x0
.L112:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe11:
	.size	 pokemon_order_func,.Lfe11-pokemon_order_func
	.align	2, 0
	.globl	pokemon_change_order
	.type	 pokemon_change_order,function
	.thumb_func
pokemon_change_order:
	push	{r4, r5, lr}
	ldr	r0, .L122
	ldr	r1, .L122+0x4
	mov	r2, #0x96
	lsl	r2, r2, #0x2
	bl	memcpy
	mov	r4, #0x0
	mov	r5, #0x64
.L120:
	add	r0, r4, #0
	bl	pokemon_order_func
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mul	r0, r0, r5
	ldr	r1, .L122+0x4
	add	r0, r0, r1
	mov	r1, r4
	mul	r1, r1, r5
	ldr	r2, .L122
	add	r1, r1, r2
	mov	r2, #0x64
	bl	memcpy
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x5
	bls	.L120	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L123:
	.align	2, 0
.L122:
	.word	gSharedMem+0x1b000
	.word	gPlayerParty
.Lfe12:
	.size	 pokemon_change_order,.Lfe12-pokemon_change_order
	.align	2, 0
	.type	 sub_8094D60,function
	.thumb_func
sub_8094D60:
	push	{r4, r5, lr}
	ldr	r4, .L130
	add	sp, sp, r4
	ldr	r1, .L130+0x4
	mov	r2, #0x96
	lsl	r2, r2, #0x2
	mov	r0, sp
	bl	memcpy
	mov	r4, #0x0
	mov	r5, #0x64
.L128:
	add	r0, r4, #0
	bl	sub_8094C20
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mul	r0, r0, r5
	ldr	r1, .L130+0x4
	add	r0, r0, r1
	mov	r1, r4
	mul	r1, r1, r5
	add	r1, r1, sp
	mov	r2, #0x64
	bl	memcpy
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x5
	bls	.L128	@cond_branch
	mov	r3, #0x96
	lsl	r3, r3, #0x2
	add	sp, sp, r3
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L131:
	.align	2, 0
.L130:
	.word	0xfffffda8
	.word	gPlayerParty
.Lfe13:
	.size	 sub_8094D60,.Lfe13-sub_8094D60
	.align	2, 0
	.globl	unref_sub_8094DB0
	.type	 unref_sub_8094DB0,function
	.thumb_func
unref_sub_8094DB0:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	mov	r6, #0x1
	mov	r7, #0x64
	ldr	r0, .L139
	mov	r8, r0
.L136:
	add	r0, r6, #0
	bl	sub_8094C20
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mul	r0, r0, r7
	mov	r1, r8
	add	r5, r0, r1
	add	r0, r5, #0
	mov	r1, #0xb
	bl	GetMonData
	cmp	r0, #0
	beq	.L135	@cond_branch
	add	r0, r5, #0
	mov	r1, #0x39
	bl	GetMonData
	cmp	r0, #0
	beq	.L135	@cond_branch
	mov	r0, #0x0
	bl	sub_8094C20
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x0
	add	r1, r6, #0
	bl	sub_8094C98
	mov	r0, r4
	mul	r0, r0, r7
	add	r0, r0, r8
	add	r1, r5, #0
	bl	SwapPokemon
	b	.L134
.L140:
	.align	2, 0
.L139:
	.word	gPlayerParty
.L135:
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0x5
	bls	.L136	@cond_branch
.L134:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe14:
	.size	 unref_sub_8094DB0,.Lfe14-unref_sub_8094DB0
	.align	2, 0
	.globl	sub_8094E20
	.type	 sub_8094E20,function
	.thumb_func
sub_8094E20:
	push	{lr}
	ldr	r3, .L142
	ldrb	r1, [r3, #0x8]
	mov	r2, #0x80
	orr	r1, r1, r2
	strb	r1, [r3, #0x8]
	ldr	r1, .L142+0x4
	strb	r0, [r1]
	bl	nullsub_14
	bl	pokemon_change_order
	mov	r0, #0x1
	mov	r1, #0xff
	bl	OpenPartyMenu
	pop	{r0}
	bx	r0
.L143:
	.align	2, 0
.L142:
	.word	gPaletteFade
	.word	gUnknown_02038473
.Lfe15:
	.size	 sub_8094E20,.Lfe15-sub_8094E20
	.align	2, 0
	.globl	sub_8094E4C
	.type	 sub_8094E4C,function
	.thumb_func
sub_8094E4C:
	push	{lr}
	mov	r0, #0x3
	bl	sub_8094E20
	pop	{r0}
	bx	r0
.Lfe16:
	.size	 sub_8094E4C,.Lfe16-sub_8094E4C
	.align	2, 0
	.globl	SetUpBattlePartyMenu
	.type	 SetUpBattlePartyMenu,function
	.thumb_func
SetUpBattlePartyMenu:
	push	{r4, r5, lr}
	ldr	r1, .L178
	mov	r2, #0x99
	lsl	r2, r2, #0x2
	add	r0, r1, r2
	mov	r3, #0x0
	ldrsh	r0, [r0, r3]
	add	r4, r1, #0
	cmp	r0, #0xa
	bls	.LCB1047
	b	.L146	@long jump
.LCB1047:
	lsl	r0, r0, #0x2
	ldr	r1, .L178+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L179:
	.align	2, 0
.L178:
	.word	gSharedMem+0x1b000
	.word	.L171
	.align	2, 0
	.align	2, 0
.L171:
	.word	.L147
	.word	.L154
	.word	.L155
	.word	.L156
	.word	.L159
	.word	.L160
	.word	.L161
	.word	.L162
	.word	.L163
	.word	.L164
	.word	.L167
.L147:
	bl	IsLinkDoubleBattle
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L148	@cond_branch
	ldr	r1, .L180
	ldr	r0, .L180+0x4
	add	r4, r1, r0
	ldrh	r2, [r4]
	mov	r3, #0x0
	ldrsh	r0, [r4, r3]
	cmp	r0, #0x6
	bne	.L174	@cond_branch
	mov	r0, #0x0
	strh	r0, [r4]
	mov	r3, #0x99
	lsl	r3, r3, #0x2
	add	r1, r1, r3
	b	.L175
.L181:
	.align	2, 0
.L180:
	.word	gSharedMem+0x1b000
	.word	0x266
.L148:
	ldr	r1, .L182
	ldr	r0, .L182+0x4
	add	r4, r1, r0
	ldrh	r2, [r4]
	mov	r3, #0x0
	ldrsh	r0, [r4, r3]
	cmp	r0, #0x5
	bgt	.L152	@cond_branch
.L174:
	mov	r3, #0x98
	lsl	r3, r3, #0x2
	add	r0, r1, r3
	ldrb	r0, [r0]
	lsl	r1, r2, #0x18
	lsr	r1, r1, #0x18
	mov	r2, #0x0
	ldrsh	r3, [r4, r2]
	mov	r2, #0x64
	mul	r2, r2, r3
	ldr	r3, .L182+0x8
	add	r2, r2, r3
	bl	TryCreatePartyMenuMonIcon
	ldrh	r0, [r4]
	add	r0, r0, #0x1
	strh	r0, [r4]
	b	.L146
.L183:
	.align	2, 0
.L182:
	.word	gSharedMem+0x1b000
	.word	0x266
	.word	gPlayerParty
.L152:
	mov	r0, #0x0
	strh	r0, [r4]
	mov	r3, #0x99
	lsl	r3, r3, #0x2
	add	r1, r1, r3
	b	.L175
.L154:
	bl	LoadHeldItemIconGraphics
	ldr	r1, .L184
	mov	r0, #0x99
	lsl	r0, r0, #0x2
	add	r1, r1, r0
	b	.L175
.L185:
	.align	2, 0
.L184:
	.word	gSharedMem+0x1b000
.L155:
	mov	r1, #0x98
	lsl	r1, r1, #0x2
	add	r0, r4, r1
	ldrb	r0, [r0]
	bl	CreateHeldItemIcons_806DC34
	b	.L176
.L156:
	mov	r3, #0x98
	lsl	r3, r3, #0x2
	add	r0, r4, r3
	ldrb	r0, [r0]
	ldr	r1, .L186
	add	r5, r4, r1
	ldrb	r1, [r5]
	bl	sub_806BD58
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L177	@cond_branch
	b	.L165
.L187:
	.align	2, 0
.L186:
	.word	0x266
.L159:
	bl	PartyMenuPrintMonsLevelOrStatus
	ldr	r1, .L188
	mov	r3, #0x99
	lsl	r3, r3, #0x2
	add	r1, r1, r3
	b	.L175
.L189:
	.align	2, 0
.L188:
	.word	gSharedMem+0x1b000
.L160:
	bl	PrintPartyMenuMonNicknames
	ldr	r1, .L190
	mov	r0, #0x99
	lsl	r0, r0, #0x2
	add	r1, r1, r0
	b	.L175
.L191:
	.align	2, 0
.L190:
	.word	gSharedMem+0x1b000
.L161:
	bl	PartyMenuTryPrintMonsHP
	ldr	r1, .L192
	mov	r2, #0x99
	lsl	r2, r2, #0x2
	add	r1, r1, r2
	b	.L175
.L193:
	.align	2, 0
.L192:
	.word	gSharedMem+0x1b000
.L162:
	bl	nullsub_13
	ldr	r1, .L194
	mov	r3, #0x99
	lsl	r3, r3, #0x2
	add	r1, r1, r3
	b	.L175
.L195:
	.align	2, 0
.L194:
	.word	gSharedMem+0x1b000
.L163:
	bl	PartyMenuDrawHPBars
	ldr	r1, .L196
	mov	r0, #0x99
	lsl	r0, r0, #0x2
	add	r1, r1, r0
	b	.L175
.L197:
	.align	2, 0
.L196:
	.word	gSharedMem+0x1b000
.L164:
	ldr	r1, .L198
	add	r5, r4, r1
	ldrb	r0, [r5]
	bl	DrawPartyMonBackground
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L165	@cond_branch
.L177:
	mov	r0, #0x0
	strh	r0, [r5]
.L176:
	mov	r2, #0x99
	lsl	r2, r2, #0x2
	add	r1, r4, r2
.L175:
	ldrh	r0, [r1]
	add	r0, r0, #0x1
	strh	r0, [r1]
	b	.L146
.L199:
	.align	2, 0
.L198:
	.word	0x266
.L165:
	ldrh	r0, [r5]
	add	r0, r0, #0x1
	strh	r0, [r5]
	b	.L146
.L167:
	ldr	r0, .L200
	ldrb	r4, [r0]
	cmp	r4, #0x3
	bne	.L168	@cond_branch
	ldr	r0, .L200+0x4
	ldrh	r0, [r0]
	bl	GetItemEffectType
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xa
	bne	.L169	@cond_branch
	ldr	r0, .L200+0x8
	ldr	r3, .L200+0xc
	add	r0, r0, r3
	mov	r1, #0xff
	strb	r1, [r0]
	b	.L168
.L201:
	.align	2, 0
.L200:
	.word	gUnknown_02038473
	.word	gScriptItemId
	.word	gSharedMem+0x1b000
	.word	0x259
.L169:
	ldr	r0, .L202
	ldr	r1, .L202+0x4
	add	r0, r0, r1
	strb	r4, [r0]
.L168:
	mov	r0, #0x1
	b	.L173
.L203:
	.align	2, 0
.L202:
	.word	gSharedMem+0x1b000
	.word	0x259
.L146:
	mov	r0, #0x0
.L173:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe17:
	.size	 SetUpBattlePartyMenu,.Lfe17-SetUpBattlePartyMenu
	.align	2, 0
	.type	 sub_8095050,function
	.thumb_func
sub_8095050:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L210
	add	r0, r0, r1
	mov	r1, #0x2d
	bl	GetMonData
	add	r5, r0, #0
	cmp	r5, #0
	bne	.L205	@cond_branch
	ldr	r0, .L210+0x4
	ldrb	r4, [r0]
	cmp	r4, #0x1
	bne	.L206	@cond_branch
	ldr	r3, .L210+0x8
	ldr	r2, .L210+0xc
	mov	r0, #0x98
	lsl	r0, r0, #0x2
	add	r2, r2, r0
	ldrb	r1, [r2]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r0, r0, r3
	b	.L209
.L211:
	.align	2, 0
.L210:
	.word	gPlayerParty
	.word	gUnknown_02038473
	.word	gTasks
	.word	gSharedMem+0x1b000
.L206:
	ldr	r3, .L212
	ldr	r2, .L212+0x4
	mov	r0, #0x98
	lsl	r0, r0, #0x2
	add	r2, r2, r0
	ldrb	r1, [r2]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r0, r0, r3
	strh	r5, [r0, #0x10]
	ldrb	r1, [r2]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r0, r0, r3
	strh	r5, [r0, #0x12]
	b	.L208
.L213:
	.align	2, 0
.L212:
	.word	gTasks
	.word	gSharedMem+0x1b000
.L205:
	ldr	r3, .L214
	ldr	r2, .L214+0x4
	mov	r0, #0x98
	lsl	r0, r0, #0x2
	add	r2, r2, r0
	ldrb	r1, [r2]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r0, r0, r3
	mov	r4, #0x2
.L209:
	strh	r4, [r0, #0x10]
	ldrb	r1, [r2]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r0, r0, r3
	strh	r4, [r0, #0x12]
.L208:
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	add	r0, r0, r3
	ldrb	r0, [r0, #0x10]
	ldr	r1, .L214+0x8
	ldr	r2, .L214+0xc
	mov	r3, #0x0
	bl	ShowPartyPopupMenu
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L215:
	.align	2, 0
.L214:
	.word	gTasks
	.word	gSharedMem+0x1b000
	.word	sBattlePartyPopupMenus
	.word	sBattlePartyMenuActions
.Lfe18:
	.size	 sub_8095050,.Lfe18-sub_8095050
	.align	2, 0
	.globl	HandleBattlePartyMenu
	.type	 HandleBattlePartyMenu,function
	.thumb_func
HandleBattlePartyMenu:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L235
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.LCB1548
	b	.L216	@long jump
.LCB1548:
	ldr	r0, .L235+0x4
	ldrb	r0, [r0]
	cmp	r0, #0x3
	bne	.L218	@cond_branch
	ldr	r5, .L235+0x8
	ldrh	r0, [r5]
	bl	GetItemEffectType
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xa
	bne	.L218	@cond_branch
	ldr	r0, .L235+0xc
	ldrh	r1, [r5]
	ldr	r2, .L235+0x10
	ldr	r3, [r0]
	b	.L232
.L236:
	.align	2, 0
.L235:
	.word	gPaletteFade
	.word	gUnknown_02038473
	.word	gScriptItemId
	.word	gUnknown_03004AE4
	.word	Task_80952E4
.L218:
	add	r0, r4, #0
	bl	HandleDefaultPartyMenuInput
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x1
	beq	.L220	@cond_branch
	cmp	r0, #0x2
	beq	.L225	@cond_branch
	b	.L216
.L220:
	ldr	r0, .L237
	ldrb	r0, [r0]
	cmp	r0, #0x3
	bne	.L221	@cond_branch
	add	r0, r4, #0
	bl	sub_806CA38
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x64
	mul	r0, r0, r1
	ldr	r1, .L237+0x4
	add	r0, r0, r1
	mov	r1, #0x2d
	bl	GetMonData
	cmp	r0, #0
	bne	.L233	@cond_branch
	bl	sub_806D5A4
	ldr	r3, .L237+0x8
	ldr	r0, .L237+0xc
	ldrh	r1, [r0]
	ldr	r2, .L237+0x10
	ldr	r3, [r3]
.L232:
	add	r0, r4, #0
	bl	_call_via_r3
	b	.L216
.L238:
	.align	2, 0
.L237:
	.word	gUnknown_02038473
	.word	gPlayerParty
	.word	gUnknown_03004AE4
	.word	gScriptItemId
	.word	Task_80952E4
.L221:
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r4, #0
	bl	sub_806CA38
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x64
	mul	r0, r0, r1
	ldr	r1, .L239
	add	r0, r0, r1
	ldr	r1, .L239+0x4
	bl	GetMonNickname
	add	r0, r4, #0
	bl	sub_806CA38
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	sub_8095050
	ldr	r1, .L239+0x8
	ldr	r2, .L239+0xc
	add	r0, r4, #0
	bl	SetTaskFuncWithFollowupFunc
	b	.L216
.L240:
	.align	2, 0
.L239:
	.word	gPlayerParty
	.word	gStringVar1
	.word	Task_HandlePopupMenuInput
	.word	HandleBattlePartyMenu
.L225:
	ldr	r5, .L241
	ldrb	r0, [r5]
	cmp	r0, #0x1
	bne	.L226	@cond_branch
.L233:
	mov	r0, #0x20
	bl	PlaySE
	b	.L216
.L242:
	.align	2, 0
.L241:
	.word	gUnknown_02038473
.L226:
	mov	r0, #0x5
	bl	PlaySE
	ldrb	r0, [r5]
	cmp	r0, #0x3
	bne	.L228	@cond_branch
	ldr	r1, .L243
	mov	r0, #0x0
	strb	r0, [r1]
	ldr	r1, .L243+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L243+0x8
	b	.L234
.L244:
	.align	2, 0
.L243:
	.word	gUnknown_0202E8F4
	.word	gTasks
	.word	Task_80952E4
.L228:
	ldr	r1, .L245
	mov	r0, #0x0
	strb	r0, [r1]
	ldr	r1, .L245+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L245+0x8
.L234:
	str	r1, [r0]
.L216:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L246:
	.align	2, 0
.L245:
	.word	gUnknown_0202E8F4
	.word	gTasks
	.word	Task_809527C
.Lfe19:
	.size	 HandleBattlePartyMenu,.Lfe19-HandleBattlePartyMenu
	.align	2, 0
	.type	 Task_809527C,function
	.thumb_func
Task_809527C:
	push	{r4, lr}
	add	sp, sp, #0xfffffffc
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r1, .L248
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L248+0x4
	str	r1, [r0]
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L249:
	.align	2, 0
.L248:
	.word	gTasks
	.word	Task_80952B4
.Lfe20:
	.size	 Task_809527C,.Lfe20-Task_809527C
	.align	2, 0
	.type	 Task_80952B4,function
	.thumb_func
Task_80952B4:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L252
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L251	@cond_branch
	bl	sub_8094D60
	add	r0, r4, #0
	bl	DestroyTask
	ldr	r0, .L252+0x4
	bl	SetMainCallback2
.L251:
	pop	{r4}
	pop	{r0}
	bx	r0
.L253:
	.align	2, 0
.L252:
	.word	gPaletteFade
	.word	sub_802E414
.Lfe21:
	.size	 Task_80952B4,.Lfe21-Task_80952B4
	.align	2, 0
	.type	 Task_80952E4,function
	.thumb_func
Task_80952E4:
	push	{r4, lr}
	add	sp, sp, #0xfffffffc
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L257
	ldrb	r1, [r0]
	cmp	r1, #0
	beq	.L255	@cond_branch
	add	r0, r4, #0
	bl	Task_809527C
	b	.L256
.L258:
	.align	2, 0
.L257:
	.word	gUnknown_0202E8F4
.L255:
	mov	r0, #0x1
	neg	r0, r0
	str	r1, [sp]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r1, .L259
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L259+0x4
	str	r1, [r0]
.L256:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L260:
	.align	2, 0
.L259:
	.word	gTasks
	.word	Task_8095330
.Lfe22:
	.size	 Task_80952E4,.Lfe22-Task_80952E4
	.align	2, 0
	.type	 Task_8095330,function
	.thumb_func
Task_8095330:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L263
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L262	@cond_branch
	bl	sub_8094D60
	add	r0, r4, #0
	bl	DestroyTask
	bl	sub_80A6DCC
.L262:
	pop	{r4}
	pop	{r0}
	bx	r0
.L264:
	.align	2, 0
.L263:
	.word	gPaletteFade
.Lfe23:
	.size	 Task_8095330,.Lfe23-Task_8095330
	.align	2, 0
	.type	 Task_809535C,function
	.thumb_func
Task_809535C:
	push	{lr}
	ldr	r2, .L266
	ldrb	r0, [r2, #0x8]
	mov	r1, #0x80
	orr	r0, r0, r1
	strb	r0, [r2, #0x8]
	ldr	r2, .L266+0x4
	mov	r0, #0x1
	mov	r1, #0xff
	mov	r3, #0x5
	bl	SetPartyMenuSettings
	ldr	r0, .L266+0x8
	bl	SetMainCallback2
	pop	{r0}
	bx	r0
.L267:
	.align	2, 0
.L266:
	.word	gPaletteFade
	.word	HandleBattlePartyMenu
	.word	Task_809538C
.Lfe24:
	.size	 Task_809535C,.Lfe24-Task_809535C
	.align	2, 0
	.type	 Task_809538C,function
	.thumb_func
Task_809538C:
	push	{r4, r5, lr}
	ldr	r4, .L275
	ldr	r5, .L275+0x4
.L269:
	bl	InitPartyMenu
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L271	@cond_branch
	ldrb	r0, [r4]
	ldrb	r1, [r5]
	bl	sub_806C994
	ldrb	r0, [r4]
	mov	r1, #0x0
	bl	ChangePartyMenuSelection
	ldrb	r1, [r5]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L275+0x8
	add	r0, r0, r1
	ldr	r1, .L275+0xc
	bl	GetMonNickname
	ldrb	r0, [r4]
	ldrb	r1, [r5]
	bl	sub_8095050
	ldrb	r0, [r4]
	ldr	r1, .L275+0x10
	ldr	r2, .L275+0x14
	bl	SetTaskFuncWithFollowupFunc
	ldr	r0, .L275+0x18
	bl	SetMainCallback2
	b	.L268
.L276:
	.align	2, 0
.L275:
	.word	gSharedMem+0x1b260
	.word	gUnknown_020384F0
	.word	gPlayerParty
	.word	gStringVar1
	.word	Task_HandlePopupMenuInput
	.word	HandleBattlePartyMenu
	.word	CB2_PartyMenuMain
.L271:
	bl	sub_80F9344
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L269	@cond_branch
.L268:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe25:
	.size	 Task_809538C,.Lfe25-Task_809538C
	.align	2, 0
	.type	 Task_HandlePopupMenuInput,function
	.thumb_func
Task_HandlePopupMenuInput:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	add	r4, r7, #0
	ldr	r0, .L283
	ldrb	r1, [r0, #0x7]
	mov	r3, #0x80
	add	r0, r3, #0
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L277	@cond_branch
	ldr	r2, .L283+0x4
	ldrh	r1, [r2, #0x30]
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L279	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x1
	neg	r0, r0
	bl	MoveMenuCursor
	b	.L277
.L284:
	.align	2, 0
.L283:
	.word	gPaletteFade
	.word	gMain
.L279:
	add	r0, r3, #0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L280	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x1
	bl	MoveMenuCursor
	b	.L277
.L280:
	ldrh	r1, [r2, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L281	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r1, .L285
	lsl	r0, r7, #0x2
	add	r0, r0, r7
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldrb	r4, [r0, #0x10]
	ldr	r5, .L285+0x4
	ldr	r6, .L285+0x8
	bl	GetMenuCursorPos
	add	r3, r0, #0
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	add	r0, r4, #0
	add	r1, r5, #0
	add	r2, r6, #0
	bl	PartyMenuGetPopupMenuFunc
	add	r1, r0, #0
	add	r0, r7, #0
	bl	_call_via_r1
	b	.L277
.L286:
	.align	2, 0
.L285:
	.word	gTasks
	.word	sBattlePartyPopupMenus
	.word	sBattlePartyMenuActions
.L281:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L277	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r4, #0
	bl	Task_BattlePartyMenuCancel
.L277:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe26:
	.size	 Task_HandlePopupMenuInput,.Lfe26-Task_HandlePopupMenuInput
	.align	2, 0
	.type	 Task_80954C0,function
	.thumb_func
Task_80954C0:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	ldr	r0, .L289
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L288	@cond_branch
	add	r0, r1, #0
	bl	Task_BattlePartyMenuCancel
.L288:
	pop	{r0}
	bx	r0
.L290:
	.align	2, 0
.L289:
	.word	gUnknown_0202E8F6
.Lfe27:
	.size	 Task_80954C0,.Lfe27-Task_80954C0
	.align	2, 0
	.type	 Task_ShowSummaryScreen,function
	.thumb_func
Task_ShowSummaryScreen:
	push	{r4, r5, lr}
	add	sp, sp, #0xfffffffc
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r0, r4, #0
	bl	sub_806CA38
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r0, .L293
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L292	@cond_branch
	add	r0, r4, #0
	bl	DestroyTask
	ldr	r0, .L293+0x4
	ldr	r1, .L293+0x8
	add	r0, r0, r1
	mov	r1, #0x1
	strb	r1, [r0]
	ldr	r0, .L293+0xc
	ldr	r1, .L293+0x10
	ldrb	r2, [r1]
	sub	r2, r2, #0x1
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	ldr	r3, .L293+0x14
	mov	r1, #0x4
	str	r1, [sp]
	add	r1, r5, #0
	bl	ShowPokemonSummaryScreen
.L292:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L294:
	.align	2, 0
.L293:
	.word	gPaletteFade
	.word	gSharedMem+0x1b000
	.word	0x262
	.word	gPlayerParty
	.word	gPlayerPartyCount
	.word	Task_809535C
.Lfe28:
	.size	 Task_ShowSummaryScreen,.Lfe28-Task_ShowSummaryScreen
	.align	2, 0
	.type	 Task_BattlePartyMenuSummary,function
	.thumb_func
Task_BattlePartyMenuSummary:
	push	{r4, lr}
	add	sp, sp, #0xfffffffc
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r4, #0
	bl	sub_806CA38
	ldr	r1, .L296
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L296+0x4
	str	r1, [r0]
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L297:
	.align	2, 0
.L296:
	.word	gTasks
	.word	Task_ShowSummaryScreen
.Lfe29:
	.size	 Task_BattlePartyMenuSummary,.Lfe29-Task_BattlePartyMenuSummary
	.align	2, 0
	.type	 Task_BattlePartyMenuShift,function
	.thumb_func
Task_BattlePartyMenuShift:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r1, .L315
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldrb	r0, [r0, #0x10]
	ldr	r1, .L315+0x4
	bl	ClosePartyPopupMenu
	add	r0, r6, #0
	bl	sub_806CA38
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	bl	IsLinkDoubleBattle
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L299	@cond_branch
	cmp	r5, #0x1
	beq	.L300	@cond_branch
	cmp	r5, #0x4
	beq	.L300	@cond_branch
	cmp	r5, #0x5
	bne	.L299	@cond_branch
.L300:
	bl	sub_806D5A4
	ldr	r4, .L315+0x8
	bl	sub_8040D08
	add	r1, r0, #0
	add	r0, r4, #0
	bl	StringCopy
	ldr	r4, .L315+0xc
	ldr	r1, .L315+0x10
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	add	r0, r4, #0
	mov	r1, #0x0
	bl	sub_806E834
	ldr	r1, .L315
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L315+0x14
	b	.L313
.L316:
	.align	2, 0
.L315:
	.word	gTasks
	.word	sBattlePartyPopupMenus
	.word	gStringVar1
	.word	gStringVar4
	.word	gOtherText_CantSwitchPokeWithYours
	.word	Task_80954C0
.L299:
	mov	r0, #0x64
	mov	r1, r5
	mul	r1, r1, r0
	ldr	r0, .L317
	add	r4, r1, r0
	add	r0, r4, #0
	mov	r1, #0x39
	bl	GetMonData
	cmp	r0, #0
	bne	.L301	@cond_branch
	bl	sub_806D5A4
	ldr	r1, .L317+0x4
	add	r0, r4, #0
	bl	GetMonNickname
	ldr	r4, .L317+0x8
	ldr	r1, .L317+0xc
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	add	r0, r4, #0
	mov	r1, #0x0
	bl	sub_806E834
	ldr	r1, .L317+0x10
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L317+0x14
	b	.L313
.L318:
	.align	2, 0
.L317:
	.word	gPlayerParty
	.word	gStringVar1
	.word	gStringVar4
	.word	gOtherText_NoEnergyLeft
	.word	gTasks
	.word	Task_80954C0
.L301:
	mov	r4, #0x0
	ldr	r0, .L319
	lsl	r1, r6, #0x2
	mov	r8, r1
	b	.L314
.L320:
	.align	2, 0
.L319:
	.word	gNoOfAllBanks
.L305:
	add	r0, r4, #0
	bl	GetBankSide
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L304	@cond_branch
	add	r0, r5, #0
	bl	sub_8094C20
	lsl	r0, r0, #0x18
	ldr	r2, .L321
	lsl	r1, r4, #0x1
	add	r1, r1, r2
	lsr	r0, r0, #0x18
	ldrh	r1, [r1]
	cmp	r0, r1
	bne	.LCB2448
	b	.L312	@long jump
.LCB2448:
.L304:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L321+0x4
.L314:
	ldrb	r0, [r0]
	cmp	r4, r0
	bcc	.L305	@cond_branch
	mov	r2, #0x64
	mov	r9, r2
	mov	r0, r9
	mul	r0, r0, r5
	ldr	r1, .L321+0x8
	mov	sl, r1
	add	r7, r0, r1
	add	r0, r7, #0
	mov	r1, #0x2d
	bl	GetMonData
	cmp	r0, #0
	beq	.L308	@cond_branch
	bl	sub_806D5A4
	ldr	r4, .L321+0xc
	ldr	r1, .L321+0x10
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	add	r0, r4, #0
	mov	r1, #0x0
	bl	sub_806E834
	ldr	r1, .L321+0x14
	mov	r2, r8
	add	r0, r2, r6
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L321+0x18
	b	.L313
.L322:
	.align	2, 0
.L321:
	.word	gBattlePartyID
	.word	gNoOfAllBanks
	.word	gPlayerParty
	.word	gStringVar4
	.word	gOtherText_EGGCantBattle
	.word	gTasks
	.word	Task_80954C0
.L308:
	add	r0, r5, #0
	bl	sub_8094C20
	ldr	r1, .L323
	ldr	r2, .L323+0x4
	add	r1, r1, r2
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrb	r1, [r1]
	cmp	r0, r1
	bne	.L309	@cond_branch
	bl	sub_806D5A4
	ldr	r1, .L323+0x8
	add	r0, r7, #0
	bl	GetMonNickname
	ldr	r4, .L323+0xc
	ldr	r1, .L323+0x10
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	add	r0, r4, #0
	mov	r1, #0x0
	bl	sub_806E834
	ldr	r1, .L323+0x14
	mov	r2, r8
	add	r0, r2, r6
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L323+0x18
	b	.L313
.L324:
	.align	2, 0
.L323:
	.word	gSharedMem
	.word	0x1609d
	.word	gStringVar1
	.word	gStringVar4
	.word	gOtherText_AlreadySelected
	.word	gTasks
	.word	Task_80954C0
.L309:
	ldr	r0, .L325
	ldrb	r0, [r0]
	cmp	r0, #0x4
	bne	.L310	@cond_branch
	bl	sub_806D5A4
	bl	sub_8040B8C
	ldr	r0, .L325+0x4
	mov	r1, #0x0
	bl	sub_806E834
	ldr	r1, .L325+0x8
	mov	r2, r8
	add	r0, r2, r6
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L325+0xc
	b	.L313
.L326:
	.align	2, 0
.L325:
	.word	gUnknown_02038473
	.word	gStringVar4
	.word	gTasks
	.word	Task_80954C0
.L310:
	cmp	r0, #0x2
	bne	.L311	@cond_branch
	ldr	r0, .L327
	ldrb	r4, [r0]
	bl	sub_806D5A4
	ldr	r0, .L327+0x4
	lsl	r4, r4, #0x1
	add	r4, r4, r0
	ldrb	r0, [r4]
	bl	pokemon_order_func
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, r9
	mul	r1, r1, r0
	add	r0, r1, #0
	add	r0, r0, sl
	ldr	r1, .L327+0x8
	bl	GetMonNickname
	ldr	r4, .L327+0xc
	ldr	r1, .L327+0x10
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	add	r0, r4, #0
	mov	r1, #0x0
	bl	sub_806E834
	ldr	r1, .L327+0x14
	mov	r2, r8
	add	r0, r2, r6
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L327+0x18
	b	.L313
.L328:
	.align	2, 0
.L327:
	.word	gBankInMenu
	.word	gBattlePartyID
	.word	gStringVar1
	.word	gStringVar4
	.word	gOtherText_CantBeSwitched
	.word	gTasks
	.word	Task_80954C0
.L312:
	bl	sub_806D5A4
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L329
	add	r0, r0, r1
	ldr	r1, .L329+0x4
	bl	GetMonNickname
	ldr	r4, .L329+0x8
	ldr	r1, .L329+0xc
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	add	r0, r4, #0
	mov	r1, #0x0
	bl	sub_806E834
	ldr	r1, .L329+0x10
	mov	r2, r8
	add	r0, r2, r6
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L329+0x14
	b	.L313
.L330:
	.align	2, 0
.L329:
	.word	gPlayerParty
	.word	gStringVar1
	.word	gStringVar4
	.word	gOtherText_AlreadyBattle
	.word	gTasks
	.word	Task_80954C0
.L311:
	add	r0, r5, #0
	bl	sub_8094C20
	ldr	r1, .L331
	strb	r0, [r1]
	ldr	r1, .L331+0x4
	mov	r0, #0x1
	strb	r0, [r1]
	ldr	r1, .L331+0x8
	ldr	r0, .L331+0xc
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrb	r0, [r0]
	bl	pokemon_order_func
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r4, #0
	add	r1, r5, #0
	bl	sub_8094C98
	mov	r0, r9
	mul	r0, r0, r4
	add	r0, r0, sl
	add	r1, r7, #0
	bl	SwapPokemon
	ldr	r1, .L331+0x10
	mov	r2, r8
	add	r0, r2, r6
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L331+0x14
.L313:
	str	r1, [r0]
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L332:
	.align	2, 0
.L331:
	.word	gUnknown_0202E8F5
	.word	gUnknown_0202E8F4
	.word	gBattlePartyID
	.word	gBankInMenu
	.word	gTasks
	.word	Task_809527C
.Lfe30:
	.size	 Task_BattlePartyMenuShift,.Lfe30-Task_BattlePartyMenuShift
	.align	2, 0
	.type	 Task_BattlePartyMenuCancel,function
	.thumb_func
Task_BattlePartyMenuCancel:
	push	{r4, r5, lr}
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	bl	HandleDestroyMenuCursors
	ldr	r0, .L334
	lsl	r4, r5, #0x2
	add	r4, r4, r5
	lsl	r4, r4, #0x3
	add	r4, r4, r0
	ldrb	r0, [r4, #0x10]
	ldr	r1, .L334+0x4
	bl	ClosePartyPopupMenu
	ldrh	r0, [r4, #0x12]
	strh	r0, [r4, #0x10]
	mov	r0, #0x0
	mov	r1, #0x0
	bl	PrintPartyMenuPromptText
	add	r0, r5, #0
	bl	SwitchTaskToFollowupFunc
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L335:
	.align	2, 0
.L334:
	.word	gTasks
	.word	sBattlePartyPopupMenus
.Lfe31:
	.size	 Task_BattlePartyMenuCancel,.Lfe31-Task_BattlePartyMenuCancel
.text
	.align	2, 0
