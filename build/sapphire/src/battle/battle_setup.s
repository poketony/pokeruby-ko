@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section ewram_data,"aw"
	.align	1, 0
	.type	 sTrainerBattleMode,object
	.size	 sTrainerBattleMode,2
sTrainerBattleMode:
	.short	0x0
	.globl	gTrainerBattleOpponent
	.align	1, 0
	.type	 gTrainerBattleOpponent,object
	.size	 gTrainerBattleOpponent,2
gTrainerBattleOpponent:
	.short	0x0
	.align	1, 0
	.type	 sTrainerMapObjectLocalId,object
	.size	 sTrainerMapObjectLocalId,2
sTrainerMapObjectLocalId:
	.short	0x0
	.align	2, 0
	.type	 sTrainerIntroSpeech,object
	.size	 sTrainerIntroSpeech,4
sTrainerIntroSpeech:
	.word	0x0
	.align	2, 0
	.type	 sTrainerDefeatSpeech,object
	.size	 sTrainerDefeatSpeech,4
sTrainerDefeatSpeech:
	.word	0x0
	.align	2, 0
	.type	 sTrainerVictorySpeech,object
	.size	 sTrainerVictorySpeech,4
sTrainerVictorySpeech:
	.word	0x0
	.align	2, 0
	.type	 sTrainerCannotBattleSpeech,object
	.size	 sTrainerCannotBattleSpeech,4
sTrainerCannotBattleSpeech:
	.word	0x0
	.align	2, 0
	.type	 sTrainerBattleScriptRetAddr,object
	.size	 sTrainerBattleScriptRetAddr,4
sTrainerBattleScriptRetAddr:
	.word	0x0
	.align	2, 0
	.type	 sTrainerBattleEndScript,object
	.size	 sTrainerBattleEndScript,4
sTrainerBattleEndScript:
	.word	0x0
	.section .rodata
	.type	 gBattleTransitionTable_Wild,object
gBattleTransitionTable_Wild:
	.byte	0x8
	.byte	0x9
	.byte	0x5
	.byte	0xa
	.byte	0x0
	.byte	0xa
	.byte	0x7
	.byte	0x6
	.size	 gBattleTransitionTable_Wild,8
	.type	 gBattleTransitionTable_Trainer,object
gBattleTransitionTable_Trainer:
	.byte	0x4
	.byte	0xb
	.byte	0x2
	.byte	0x3
	.byte	0x0
	.byte	0xa
	.byte	0x1
	.byte	0x6
	.size	 gBattleTransitionTable_Trainer,8
	.align	2, 0
	.type	 gTrainerBattleSpecs_0,object
gTrainerBattleSpecs_0:
	.word	sTrainerBattleMode
	.byte	0x0
	.space	3
	.word	gTrainerBattleOpponent
	.byte	0x1
	.space	3
	.word	sTrainerMapObjectLocalId
	.byte	0x1
	.space	3
	.word	sTrainerIntroSpeech
	.byte	0x2
	.space	3
	.word	sTrainerDefeatSpeech
	.byte	0x2
	.space	3
	.word	sTrainerVictorySpeech
	.byte	0x5
	.space	3
	.word	sTrainerCannotBattleSpeech
	.byte	0x5
	.space	3
	.word	sTrainerBattleEndScript
	.byte	0x5
	.space	3
	.word	sTrainerBattleScriptRetAddr
	.byte	0x6
	.space	3
	.size	 gTrainerBattleSpecs_0,72
	.align	2, 0
	.type	 gTrainerBattleSpecs_1,object
gTrainerBattleSpecs_1:
	.word	sTrainerBattleMode
	.byte	0x0
	.space	3
	.word	gTrainerBattleOpponent
	.byte	0x1
	.space	3
	.word	sTrainerMapObjectLocalId
	.byte	0x1
	.space	3
	.word	sTrainerIntroSpeech
	.byte	0x2
	.space	3
	.word	sTrainerDefeatSpeech
	.byte	0x2
	.space	3
	.word	sTrainerVictorySpeech
	.byte	0x5
	.space	3
	.word	sTrainerCannotBattleSpeech
	.byte	0x5
	.space	3
	.word	sTrainerBattleEndScript
	.byte	0x2
	.space	3
	.word	sTrainerBattleScriptRetAddr
	.byte	0x6
	.space	3
	.size	 gTrainerBattleSpecs_1,72
	.align	2, 0
	.type	 gTrainerBattleSpecs_2,object
gTrainerBattleSpecs_2:
	.word	sTrainerBattleMode
	.byte	0x0
	.space	3
	.word	gTrainerBattleOpponent
	.byte	0x1
	.space	3
	.word	sTrainerMapObjectLocalId
	.byte	0x1
	.space	3
	.word	sTrainerIntroSpeech
	.byte	0x2
	.space	3
	.word	sTrainerDefeatSpeech
	.byte	0x2
	.space	3
	.word	sTrainerVictorySpeech
	.byte	0x5
	.space	3
	.word	sTrainerCannotBattleSpeech
	.byte	0x2
	.space	3
	.word	sTrainerBattleEndScript
	.byte	0x5
	.space	3
	.word	sTrainerBattleScriptRetAddr
	.byte	0x6
	.space	3
	.size	 gTrainerBattleSpecs_2,72
	.align	2, 0
	.type	 gTrainerBattleSpecs_3,object
gTrainerBattleSpecs_3:
	.word	sTrainerBattleMode
	.byte	0x0
	.space	3
	.word	gTrainerBattleOpponent
	.byte	0x1
	.space	3
	.word	sTrainerMapObjectLocalId
	.byte	0x1
	.space	3
	.word	sTrainerIntroSpeech
	.byte	0x5
	.space	3
	.word	sTrainerDefeatSpeech
	.byte	0x2
	.space	3
	.word	sTrainerVictorySpeech
	.byte	0x5
	.space	3
	.word	sTrainerCannotBattleSpeech
	.byte	0x5
	.space	3
	.word	sTrainerBattleEndScript
	.byte	0x5
	.space	3
	.word	sTrainerBattleScriptRetAddr
	.byte	0x6
	.space	3
	.size	 gTrainerBattleSpecs_3,72
	.align	2, 0
	.type	 gTrainerBattleSpecs_4,object
gTrainerBattleSpecs_4:
	.word	sTrainerBattleMode
	.byte	0x0
	.space	3
	.word	gTrainerBattleOpponent
	.byte	0x1
	.space	3
	.word	sTrainerMapObjectLocalId
	.byte	0x1
	.space	3
	.word	sTrainerIntroSpeech
	.byte	0x2
	.space	3
	.word	sTrainerDefeatSpeech
	.byte	0x2
	.space	3
	.word	sTrainerVictorySpeech
	.byte	0x5
	.space	3
	.word	sTrainerCannotBattleSpeech
	.byte	0x2
	.space	3
	.word	sTrainerBattleEndScript
	.byte	0x2
	.space	3
	.word	sTrainerBattleScriptRetAddr
	.byte	0x6
	.space	3
	.size	 gTrainerBattleSpecs_4,72
	.globl	gTrainerEyeTrainers
	.align	2, 0
	.type	 gTrainerEyeTrainers,object
gTrainerEyeTrainers:
	.short	0x25
	.short	0x28
	.short	0x29
	.short	0x2a
	.short	0x2b
	.short	0x0
	.short	0x21
	.space	2
	.short	0x2c
	.short	0x2f
	.short	0x30
	.short	0x31
	.short	0x32
	.short	0x0
	.short	0x1a
	.space	2
	.short	0x39
	.short	0x3c
	.short	0x3d
	.short	0x3e
	.short	0x3f
	.short	0x0
	.short	0x18
	.space	2
	.short	0x40
	.short	0x43
	.short	0x44
	.short	0x45
	.short	0x46
	.short	0x0
	.short	0x18
	.space	2
	.short	0x2af
	.short	0x2b0
	.short	0x2b1
	.short	0x2b2
	.short	0x2b3
	.short	0x0
	.short	0x27
	.space	2
	.short	0x5e
	.short	0x65
	.short	0x66
	.short	0x67
	.short	0x68
	.short	0x0
	.short	0x1a
	.space	2
	.short	0x4e
	.short	0x54
	.short	0x55
	.short	0x56
	.short	0x57
	.short	0x0
	.short	0x1a
	.space	2
	.short	0x6c
	.short	0x6e
	.short	0x6f
	.short	0x70
	.short	0x71
	.short	0x18
	.short	0x14
	.space	2
	.short	0x72
	.short	0x78
	.short	0x79
	.short	0x7a
	.short	0x7b
	.short	0x0
	.short	0x13
	.space	2
	.short	0x7f
	.short	0x84
	.short	0x85
	.short	0x86
	.short	0x87
	.short	0x0
	.short	0x24
	.space	2
	.short	0x88
	.short	0x8b
	.short	0x8c
	.short	0x8d
	.short	0x8e
	.short	0x0
	.short	0x13
	.space	2
	.short	0x8f
	.short	0x93
	.short	0x94
	.short	0x95
	.short	0x96
	.short	0x0
	.short	0x1d
	.space	2
	.short	0x9b
	.short	0xaf
	.short	0xb0
	.short	0xb1
	.short	0xb2
	.short	0x0
	.short	0x16
	.space	2
	.short	0xb7
	.short	0xb8
	.short	0xb9
	.short	0xba
	.short	0xbb
	.short	0x0
	.short	0x1e
	.space	2
	.short	0xc4
	.short	0xc5
	.short	0xc6
	.short	0xc7
	.short	0xc8
	.short	0x0
	.short	0x21
	.space	2
	.short	0xce
	.short	0xcf
	.short	0xd0
	.short	0xd1
	.short	0xd2
	.short	0x0
	.short	0x1d
	.space	2
	.short	0xd8
	.short	0xdb
	.short	0xdc
	.short	0xdd
	.short	0xde
	.short	0x18
	.short	0xd
	.space	2
	.short	0x2a9
	.short	0x2aa
	.short	0x2ab
	.short	0x2ac
	.short	0x2ad
	.short	0x18
	.short	0x1
	.space	2
	.short	0xe2
	.short	0xe4
	.short	0xe5
	.short	0xe6
	.short	0xe7
	.short	0x0
	.short	0x23
	.space	2
	.short	0xee
	.short	0xef
	.short	0xf0
	.short	0xf1
	.short	0xf2
	.short	0x0
	.short	0x26
	.space	2
	.short	0xf9
	.short	0xfa
	.short	0xfb
	.short	0xfc
	.short	0xfd
	.short	0x0
	.short	0x26
	.space	2
	.short	0xfe
	.short	0x101
	.short	0x102
	.short	0x103
	.short	0x104
	.short	0x0
	.short	0x24
	.space	2
	.short	0x118
	.short	0x11a
	.short	0x11b
	.short	0x11c
	.short	0x11d
	.short	0x0
	.short	0x1f
	.space	2
	.short	0x111
	.short	0x114
	.short	0x115
	.short	0x116
	.short	0x117
	.short	0x0
	.short	0x1f
	.space	2
	.short	0x11f
	.short	0x120
	.short	0x121
	.short	0x122
	.short	0x123
	.short	0x0
	.short	0x20
	.space	2
	.short	0x12e
	.short	0x12f
	.short	0x130
	.short	0x131
	.short	0x132
	.short	0x0
	.short	0x19
	.space	2
	.short	0x125
	.short	0x127
	.short	0x128
	.short	0x129
	.short	0x12a
	.short	0x0
	.short	0x12
	.space	2
	.short	0x133
	.short	0x134
	.short	0x135
	.short	0x136
	.short	0x137
	.short	0x0
	.short	0x1e
	.space	2
	.short	0x139
	.short	0x13a
	.short	0x13b
	.short	0x13c
	.short	0x13d
	.short	0x18
	.short	0xc
	.space	2
	.short	0x13e
	.short	0x148
	.short	0x149
	.short	0x14a
	.short	0x14b
	.short	0x0
	.short	0x11
	.space	2
	.short	0x153
	.short	0x15a
	.short	0x15b
	.short	0x15c
	.short	0x15d
	.short	0x0
	.short	0x15
	.space	2
	.short	0x166
	.short	0x168
	.short	0x169
	.short	0x16a
	.short	0x16b
	.short	0x0
	.short	0x19
	.space	2
	.short	0x161
	.short	0x162
	.short	0x163
	.short	0x164
	.short	0x165
	.short	0x0
	.short	0x19
	.space	2
	.short	0x178
	.short	0x17b
	.short	0x17c
	.short	0x17d
	.short	0x17e
	.short	0x0
	.short	0x2b
	.space	2
	.short	0x182
	.short	0x184
	.short	0x185
	.short	0x186
	.short	0x187
	.short	0x0
	.short	0x2b
	.space	2
	.short	0x171
	.short	0x172
	.short	0x173
	.short	0x174
	.short	0x175
	.short	0x0
	.short	0x20
	.space	2
	.short	0x16c
	.short	0x16d
	.short	0x16e
	.short	0x16f
	.short	0x170
	.short	0x0
	.short	0x20
	.space	2
	.short	0x188
	.short	0x189
	.short	0x18a
	.short	0x18b
	.short	0x18c
	.short	0x18
	.short	0x1
	.space	2
	.short	0x196
	.short	0x199
	.short	0x19a
	.short	0x19b
	.short	0x19c
	.short	0x0
	.short	0x23
	.space	2
	.short	0x1a3
	.short	0x1a5
	.short	0x1a6
	.short	0x1a7
	.short	0x1a8
	.short	0x0
	.short	0x1c
	.space	2
	.short	0x1ab
	.short	0x1ae
	.short	0x1af
	.short	0x1b0
	.short	0x1b1
	.short	0x0
	.short	0x1e
	.space	2
	.short	0x1b2
	.short	0x1b5
	.short	0x1b6
	.short	0x1b7
	.short	0x1b8
	.short	0x0
	.short	0x1c
	.space	2
	.short	0x1c1
	.short	0x1d1
	.short	0x1d2
	.short	0x1d3
	.short	0x1d4
	.short	0x0
	.short	0x27
	.space	2
	.short	0x1da
	.short	0x1dd
	.short	0x1de
	.short	0x1df
	.short	0x1e0
	.short	0x18
	.short	0xd
	.space	2
	.short	0x1e1
	.short	0x1e2
	.short	0x1e7
	.short	0x1e8
	.short	0x1e9
	.short	0x0
	.short	0x12
	.space	2
	.short	0x1ec
	.short	0x1f1
	.short	0x1f2
	.short	0x1f3
	.short	0x1f4
	.short	0x0
	.short	0x28
	.space	2
	.short	0x200
	.short	0x203
	.short	0x204
	.short	0x205
	.short	0x206
	.short	0x0
	.short	0x19
	.space	2
	.short	0x221
	.short	0x224
	.short	0x225
	.short	0x226
	.short	0x227
	.short	0x0
	.short	0x20
	.space	2
	.short	0x21a
	.short	0x21d
	.short	0x21e
	.short	0x21f
	.short	0x220
	.short	0x0
	.short	0x20
	.space	2
	.short	0x22f
	.short	0x232
	.short	0x233
	.short	0x234
	.short	0x235
	.short	0x0
	.short	0x22
	.space	2
	.short	0x228
	.short	0x22b
	.short	0x22c
	.short	0x22d
	.short	0x22e
	.short	0x0
	.short	0x22
	.space	2
	.short	0x25c
	.short	0x25f
	.short	0x260
	.short	0x261
	.short	0x262
	.short	0x0
	.short	0x13
	.space	2
	.short	0x26d
	.short	0x26e
	.short	0x26f
	.short	0x270
	.short	0x271
	.short	0x18
	.short	0xb
	.space	2
	.short	0x273
	.short	0x27c
	.short	0x27d
	.short	0x27e
	.short	0x27f
	.short	0x0
	.short	0x1b
	.space	2
	.short	0x282
	.short	0x283
	.short	0x284
	.short	0x285
	.short	0x286
	.short	0x18
	.short	0x3e
	.space	2
	.short	0x291
	.short	0x292
	.short	0x293
	.short	0x294
	.short	0x0
	.short	0x18
	.short	0x2b
	.space	2
	.size	 gTrainerEyeTrainers,896
	.align	1, 0
	.type	 sBadgeFlags,object
sBadgeFlags:
	.short	0x807
	.short	0x808
	.short	0x809
	.short	0x80a
	.short	0x80b
	.short	0x80c
	.short	0x80d
	.short	0x80e
	.size	 sBadgeFlags,16
.text
	.align	2, 0
	.type	 Task_BattleStart,function
	.thumb_func
Task_BattleStart:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L10
	add	r4, r0, r1
	mov	r1, #0x0
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	beq	.L4	@cond_branch
	cmp	r0, #0x1
	beq	.L6	@cond_branch
	b	.L3
.L11:
	.align	2, 0
.L10:
	.word	gTasks+0x8
.L4:
	bl	FieldPoisonEffectIsRunning
	cmp	r0, #0
	bne	.L3	@cond_branch
	ldrb	r0, [r4, #0x2]
	bl	BattleTransition_StartOnField
	ldrh	r0, [r4]
	add	r0, r0, #0x1
	strh	r0, [r4]
	b	.L3
.L6:
	bl	IsBattleTransitionDone
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L3	@cond_branch
	ldr	r0, .L12
	bl	SetMainCallback2
	bl	prev_quest_postbuffer_cursor_backup_reset
	bl	overworld_poison_timer_set
	add	r0, r5, #0
	bl	DestroyTask
.L3:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L13:
	.align	2, 0
.L12:
	.word	sub_800E7C4
.Lfe1:
	.size	 Task_BattleStart,.Lfe1-Task_BattleStart
	.align	2, 0
	.type	 CreateBattleStartTask,function
	.thumb_func
CreateBattleStartTask:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	ldr	r0, .L15
	mov	r1, #0x1
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L15+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	strh	r4, [r1, #0xa]
	add	r0, r5, #0
	bl	current_map_music_set__default_for_battle
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L16:
	.align	2, 0
.L15:
	.word	Task_BattleStart
	.word	gTasks
.Lfe2:
	.size	 CreateBattleStartTask,.Lfe2-CreateBattleStartTask
	.align	2, 0
	.globl	BattleSetup_StartWildBattle
	.type	 BattleSetup_StartWildBattle,function
	.thumb_func
BattleSetup_StartWildBattle:
	push	{lr}
	bl	GetSafariZoneFlag
	cmp	r0, #0
	beq	.L18	@cond_branch
	bl	DoSafariBattle
	b	.L19
.L18:
	bl	DoStandardWildBattle
.L19:
	pop	{r0}
	bx	r0
.Lfe3:
	.size	 BattleSetup_StartWildBattle,.Lfe3-BattleSetup_StartWildBattle
	.align	2, 0
	.type	 DoStandardWildBattle,function
	.thumb_func
DoStandardWildBattle:
	push	{lr}
	bl	ScriptContext2_Enable
	bl	FreezeMapObjects
	bl	sub_80597F4
	ldr	r1, .L21
	ldr	r0, .L21+0x4
	str	r0, [r1, #0x8]
	ldr	r1, .L21+0x8
	mov	r0, #0x0
	strh	r0, [r1]
	bl	GetWildBattleTransition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x0
	bl	CreateBattleStartTask
	mov	r0, #0x7
	bl	IncrementGameStat
	mov	r0, #0x8
	bl	IncrementGameStat
	pop	{r0}
	bx	r0
.L22:
	.align	2, 0
.L21:
	.word	gMain
	.word	CB2_EndWildBattle
	.word	gBattleTypeFlags
.Lfe4:
	.size	 DoStandardWildBattle,.Lfe4-DoStandardWildBattle
	.align	2, 0
	.globl	BattleSetup_StartRoamerBattle
	.type	 BattleSetup_StartRoamerBattle,function
	.thumb_func
BattleSetup_StartRoamerBattle:
	push	{lr}
	bl	ScriptContext2_Enable
	bl	FreezeMapObjects
	bl	sub_80597F4
	ldr	r1, .L24
	ldr	r0, .L24+0x4
	str	r0, [r1, #0x8]
	ldr	r1, .L24+0x8
	mov	r2, #0x80
	lsl	r2, r2, #0x3
	add	r0, r2, #0
	strh	r0, [r1]
	bl	GetWildBattleTransition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x0
	bl	CreateBattleStartTask
	mov	r0, #0x7
	bl	IncrementGameStat
	mov	r0, #0x8
	bl	IncrementGameStat
	pop	{r0}
	bx	r0
.L25:
	.align	2, 0
.L24:
	.word	gMain
	.word	CB2_EndWildBattle
	.word	gBattleTypeFlags
.Lfe5:
	.size	 BattleSetup_StartRoamerBattle,.Lfe5-BattleSetup_StartRoamerBattle
	.align	2, 0
	.type	 DoSafariBattle,function
	.thumb_func
DoSafariBattle:
	push	{lr}
	bl	ScriptContext2_Enable
	bl	FreezeMapObjects
	bl	sub_80597F4
	ldr	r1, .L27
	ldr	r0, .L27+0x4
	str	r0, [r1, #0x8]
	ldr	r1, .L27+0x8
	mov	r0, #0x80
	strh	r0, [r1]
	bl	GetWildBattleTransition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x0
	bl	CreateBattleStartTask
	pop	{r0}
	bx	r0
.L28:
	.align	2, 0
.L27:
	.word	gMain
	.word	sub_80C824C
	.word	gBattleTypeFlags
.Lfe6:
	.size	 DoSafariBattle,.Lfe6-DoSafariBattle
	.align	2, 0
	.type	 StartTheBattle,function
	.thumb_func
StartTheBattle:
	push	{lr}
	bl	GetTrainerBattleTransition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x0
	bl	CreateBattleStartTask
	mov	r0, #0x7
	bl	IncrementGameStat
	mov	r0, #0x9
	bl	IncrementGameStat
	pop	{r0}
	bx	r0
.Lfe7:
	.size	 StartTheBattle,.Lfe7-StartTheBattle
	.align	2, 0
	.globl	ScrSpecial_StartWallyTutorialBattle
	.type	 ScrSpecial_StartWallyTutorialBattle,function
	.thumb_func
ScrSpecial_StartWallyTutorialBattle:
	push	{lr}
	ldr	r0, .L31
	mov	r1, #0xc4
	lsl	r1, r1, #0x1
	mov	r2, #0x5
	bl	CreateMaleMon
	bl	ScriptContext2_Enable
	ldr	r1, .L31+0x4
	ldr	r0, .L31+0x8
	str	r0, [r1, #0x8]
	ldr	r1, .L31+0xc
	mov	r2, #0x80
	lsl	r2, r2, #0x2
	add	r0, r2, #0
	strh	r0, [r1]
	mov	r0, #0x8
	mov	r1, #0x0
	bl	CreateBattleStartTask
	pop	{r0}
	bx	r0
.L32:
	.align	2, 0
.L31:
	.word	gEnemyParty
	.word	gMain
	.word	c2_exit_to_overworld_1_continue_scripts_restart_music
	.word	gBattleTypeFlags
.Lfe8:
	.size	 ScrSpecial_StartWallyTutorialBattle,.Lfe8-ScrSpecial_StartWallyTutorialBattle
	.align	2, 0
	.globl	BattleSetup_StartScriptedWildBattle
	.type	 BattleSetup_StartScriptedWildBattle,function
	.thumb_func
BattleSetup_StartScriptedWildBattle:
	push	{lr}
	bl	ScriptContext2_Enable
	ldr	r1, .L34
	ldr	r0, .L34+0x4
	str	r0, [r1, #0x8]
	ldr	r1, .L34+0x8
	mov	r0, #0x0
	strh	r0, [r1]
	bl	GetWildBattleTransition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x0
	bl	CreateBattleStartTask
	mov	r0, #0x7
	bl	IncrementGameStat
	mov	r0, #0x8
	bl	IncrementGameStat
	pop	{r0}
	bx	r0
.L35:
	.align	2, 0
.L34:
	.word	gMain
	.word	CB2_EndScriptedWildBattle
	.word	gBattleTypeFlags
.Lfe9:
	.size	 BattleSetup_StartScriptedWildBattle,.Lfe9-BattleSetup_StartScriptedWildBattle
	.align	2, 0
	.globl	ScrSpecial_StartSouthernIslandBattle
	.type	 ScrSpecial_StartSouthernIslandBattle,function
	.thumb_func
ScrSpecial_StartSouthernIslandBattle:
	push	{lr}
	bl	ScriptContext2_Enable
	ldr	r1, .L37
	ldr	r0, .L37+0x4
	str	r0, [r1, #0x8]
	ldr	r1, .L37+0x8
	mov	r2, #0x80
	lsl	r2, r2, #0x6
	add	r0, r2, #0
	strh	r0, [r1]
	bl	GetWildBattleTransition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x0
	bl	CreateBattleStartTask
	mov	r0, #0x7
	bl	IncrementGameStat
	mov	r0, #0x8
	bl	IncrementGameStat
	pop	{r0}
	bx	r0
.L38:
	.align	2, 0
.L37:
	.word	gMain
	.word	CB2_EndScriptedWildBattle
	.word	gBattleTypeFlags
.Lfe10:
	.size	 ScrSpecial_StartSouthernIslandBattle,.Lfe10-ScrSpecial_StartSouthernIslandBattle
	.align	2, 0
	.globl	ScrSpecial_StartRayquazaBattle
	.type	 ScrSpecial_StartRayquazaBattle,function
	.thumb_func
ScrSpecial_StartRayquazaBattle:
	push	{lr}
	bl	ScriptContext2_Enable
	ldr	r1, .L40
	ldr	r0, .L40+0x4
	str	r0, [r1, #0x8]
	ldr	r1, .L40+0x8
	mov	r2, #0x80
	lsl	r2, r2, #0x6
	add	r0, r2, #0
	strh	r0, [r1]
	ldr	r1, .L40+0xc
	mov	r0, #0x0
	bl	CreateBattleStartTask
	mov	r0, #0x7
	bl	IncrementGameStat
	mov	r0, #0x8
	bl	IncrementGameStat
	pop	{r0}
	bx	r0
.L41:
	.align	2, 0
.L40:
	.word	gMain
	.word	CB2_EndScriptedWildBattle
	.word	gBattleTypeFlags
	.word	0x1cf
.Lfe11:
	.size	 ScrSpecial_StartRayquazaBattle,.Lfe11-ScrSpecial_StartRayquazaBattle
	.align	2, 0
	.globl	ScrSpecial_StartGroudonKyogreBattle
	.type	 ScrSpecial_StartGroudonKyogreBattle,function
	.thumb_func
ScrSpecial_StartGroudonKyogreBattle:
	push	{lr}
	bl	ScriptContext2_Enable
	ldr	r1, .L45
	ldr	r0, .L45+0x4
	str	r0, [r1, #0x8]
	ldr	r1, .L45+0x8
	mov	r2, #0xc0
	lsl	r2, r2, #0x6
	add	r0, r2, #0
	strh	r0, [r1]
	ldr	r0, .L45+0xc
	ldrb	r0, [r0]
	cmp	r0, #0x2
	bne	.L43	@cond_branch
	ldr	r1, .L45+0x10
	mov	r0, #0xb
	bl	CreateBattleStartTask
	b	.L44
.L46:
	.align	2, 0
.L45:
	.word	gMain
	.word	CB2_EndScriptedWildBattle
	.word	gBattleTypeFlags
	.word	gGameVersion
	.word	0x1cf
.L43:
	ldr	r1, .L47
	mov	r0, #0x6
	bl	CreateBattleStartTask
.L44:
	mov	r0, #0x7
	bl	IncrementGameStat
	mov	r0, #0x8
	bl	IncrementGameStat
	pop	{r0}
	bx	r0
.L48:
	.align	2, 0
.L47:
	.word	0x1cf
.Lfe12:
	.size	 ScrSpecial_StartGroudonKyogreBattle,.Lfe12-ScrSpecial_StartGroudonKyogreBattle
	.align	2, 0
	.globl	ScrSpecial_StartRegiBattle
	.type	 ScrSpecial_StartRegiBattle,function
	.thumb_func
ScrSpecial_StartRegiBattle:
	push	{lr}
	bl	ScriptContext2_Enable
	ldr	r1, .L50
	ldr	r0, .L50+0x4
	str	r0, [r1, #0x8]
	ldr	r1, .L50+0x8
	mov	r2, #0xc0
	lsl	r2, r2, #0x7
	add	r0, r2, #0
	strh	r0, [r1]
	mov	r1, #0xe7
	lsl	r1, r1, #0x1
	mov	r0, #0xa
	bl	CreateBattleStartTask
	mov	r0, #0x7
	bl	IncrementGameStat
	mov	r0, #0x8
	bl	IncrementGameStat
	pop	{r0}
	bx	r0
.L51:
	.align	2, 0
.L50:
	.word	gMain
	.word	CB2_EndScriptedWildBattle
	.word	gBattleTypeFlags
.Lfe13:
	.size	 ScrSpecial_StartRegiBattle,.Lfe13-ScrSpecial_StartRegiBattle
	.align	2, 0
	.type	 CB2_EndWildBattle,function
	.thumb_func
CB2_EndWildBattle:
	push	{lr}
	add	sp, sp, #0xfffffffc
	mov	r1, sp
	mov	r0, #0x0
	strh	r0, [r1]
	mov	r1, #0xa0
	lsl	r1, r1, #0x13
	ldr	r2, .L55
	mov	r0, sp
	bl	CpuSet
	mov	r0, #0x0
	mov	r1, #0x80
	bl	ResetOamRange
	ldr	r0, .L55+0x4
	ldrb	r0, [r0]
	bl	IsPlayerDefeated
	cmp	r0, #0x1
	bne	.L53	@cond_branch
	ldr	r0, .L55+0x8
	bl	SetMainCallback2
	b	.L54
.L56:
	.align	2, 0
.L55:
	.word	0x1000100
	.word	gBattleOutcome
	.word	CB2_WhiteOut
.L53:
	ldr	r0, .L57
	bl	SetMainCallback2
	ldr	r1, .L57+0x4
	ldr	r0, .L57+0x8
	str	r0, [r1]
.L54:
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.L58:
	.align	2, 0
.L57:
	.word	c2_exit_to_overworld_2_switch
	.word	gFieldCallback
	.word	sub_8080E44
.Lfe14:
	.size	 CB2_EndWildBattle,.Lfe14-CB2_EndWildBattle
	.align	2, 0
	.type	 CB2_EndScriptedWildBattle,function
	.thumb_func
CB2_EndScriptedWildBattle:
	push	{lr}
	add	sp, sp, #0xfffffffc
	mov	r1, sp
	mov	r0, #0x0
	strh	r0, [r1]
	mov	r1, #0xa0
	lsl	r1, r1, #0x13
	ldr	r2, .L62
	mov	r0, sp
	bl	CpuSet
	mov	r0, #0x0
	mov	r1, #0x80
	bl	ResetOamRange
	ldr	r0, .L62+0x4
	ldrb	r0, [r0]
	bl	IsPlayerDefeated
	cmp	r0, #0x1
	bne	.L60	@cond_branch
	ldr	r0, .L62+0x8
	bl	SetMainCallback2
	b	.L61
.L63:
	.align	2, 0
.L62:
	.word	0x1000100
	.word	gBattleOutcome
	.word	CB2_WhiteOut
.L60:
	ldr	r0, .L64
	bl	SetMainCallback2
.L61:
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.L65:
	.align	2, 0
.L64:
	.word	c2_exit_to_overworld_1_continue_scripts_restart_music
.Lfe15:
	.size	 CB2_EndScriptedWildBattle,.Lfe15-CB2_EndScriptedWildBattle
	.align	2, 0
	.globl	BattleSetup_GetTerrain
	.type	 BattleSetup_GetTerrain,function
	.thumb_func
BattleSetup_GetTerrain:
	push	{r4, r5, lr}
	add	sp, sp, #0xfffffffc
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	PlayerGetDestCoords
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	bl	MapGridGetMetatileBehaviorAt
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	lsl	r0, r5, #0x18
	lsr	r4, r0, #0x18
	add	r0, r4, #0
	bl	MetatileBehavior_IsTallGrass
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L67	@cond_branch
	mov	r0, #0x0
	b	.L92
.L67:
	add	r0, r4, #0
	bl	MetatileBehavior_IsLongGrass
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L68	@cond_branch
	mov	r0, #0x1
	b	.L92
.L68:
	add	r0, r4, #0
	bl	MetatileBehavior_IsSandOrDeepSand
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L91	@cond_branch
	ldr	r0, .L97
	ldrb	r0, [r0, #0x17]
	sub	r0, r0, #0x1
	cmp	r0, #0x8
	bhi	.L70	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L97+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L98:
	.align	2, 0
.L97:
	.word	gMapHeader
	.word	.L82
	.align	2, 0
	.align	2, 0
.L82:
	.word	.L70
	.word	.L70
	.word	.L70
	.word	.L74
	.word	.L79
	.word	.L80
	.word	.L70
	.word	.L94
	.word	.L94
.L74:
	lsl	r0, r5, #0x18
	lsr	r4, r0, #0x18
	add	r0, r4, #0
	bl	sub_80574C4
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L75	@cond_branch
.L94:
	mov	r0, #0x8
	b	.L92
.L75:
	add	r0, r4, #0
	bl	MetatileBehavior_IsSurfableWaterOrUnderwater
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L93	@cond_branch
	mov	r0, #0x7
	b	.L92
.L79:
	mov	r0, #0x3
	b	.L92
.L80:
	lsl	r0, r5, #0x18
	lsr	r0, r0, #0x18
	bl	MetatileBehavior_IsSurfableWaterOrUnderwater
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L95	@cond_branch
	b	.L96
.L70:
	lsl	r0, r5, #0x18
	lsr	r4, r0, #0x18
	add	r0, r4, #0
	bl	sub_8057568
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L95	@cond_branch
	add	r0, r4, #0
	bl	MetatileBehavior_IsSurfableWaterOrUnderwater
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L93	@cond_branch
	add	r0, r4, #0
	bl	sub_80574D8
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L86	@cond_branch
	mov	r0, #0x6
	b	.L92
.L86:
	mov	r0, #0x8
	bl	TestPlayerAvatarFlags
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L87	@cond_branch
	add	r0, r4, #0
	bl	sub_8057450
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L88	@cond_branch
.L93:
	mov	r0, #0x5
	b	.L92
.L88:
	add	r0, r4, #0
	bl	MetatileBehavior_IsBridge
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L87	@cond_branch
.L95:
	mov	r0, #0x4
	b	.L92
.L87:
	ldr	r0, .L99
	ldrh	r1, [r0, #0x4]
	mov	r0, #0xe0
	lsl	r0, r0, #0x5
	cmp	r1, r0
	beq	.L91	@cond_branch
	bl	GetSav1Weather
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x8
	beq	.L91	@cond_branch
.L96:
	mov	r0, #0x9
	b	.L92
.L100:
	.align	2, 0
.L99:
	.word	gSaveBlock1
.L91:
	mov	r0, #0x2
.L92:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe16:
	.size	 BattleSetup_GetTerrain,.Lfe16-BattleSetup_GetTerrain
	.align	2, 0
	.type	 GetBattleTransitionTypeByMap,function
	.thumb_func
GetBattleTransitionTypeByMap:
	push	{r4, lr}
	add	sp, sp, #0xfffffffc
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	PlayerGetDestCoords
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	bl	MapGridGetMetatileBehaviorAt
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	bl	Overworld_GetFlashLevel
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L102	@cond_branch
	mov	r0, #0x2
	b	.L109
.L102:
	lsl	r0, r4, #0x18
	lsr	r0, r0, #0x18
	bl	MetatileBehavior_IsSurfableWaterOrUnderwater
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L103	@cond_branch
	ldr	r0, .L110
	ldrb	r0, [r0, #0x17]
	cmp	r0, #0x4
	beq	.L105	@cond_branch
	cmp	r0, #0x5
	beq	.L106	@cond_branch
	mov	r0, #0x0
	b	.L109
.L111:
	.align	2, 0
.L110:
	.word	gMapHeader
.L105:
	mov	r0, #0x1
	b	.L109
.L106:
.L103:
	mov	r0, #0x3
.L109:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe17:
	.size	 GetBattleTransitionTypeByMap,.Lfe17-GetBattleTransitionTypeByMap
	.align	2, 0
	.type	 GetSumOfPlayerPartyLevel,function
	.thumb_func
GetSumOfPlayerPartyLevel:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r7, #0x0
	mov	r6, #0x0
.L116:
	mov	r0, #0x64
	mov	r1, r6
	mul	r1, r1, r0
	ldr	r0, .L120
	add	r4, r1, r0
	add	r0, r4, #0
	mov	r1, #0x41
	bl	GetMonData
	add	r1, r0, #0
	mov	r0, #0xce
	lsl	r0, r0, #0x1
	cmp	r1, r0
	beq	.L115	@cond_branch
	cmp	r1, #0
	beq	.L115	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x39
	bl	GetMonData
	cmp	r0, #0
	beq	.L115	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x38
	bl	GetMonData
	add	r0, r7, r0
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	sub	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0
	beq	.L114	@cond_branch
.L115:
	add	r6, r6, #0x1
	cmp	r6, #0x5
	ble	.L116	@cond_branch
.L114:
	add	r0, r7, #0
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L121:
	.align	2, 0
.L120:
	.word	gPlayerParty
.Lfe18:
	.size	 GetSumOfPlayerPartyLevel,.Lfe18-GetSumOfPlayerPartyLevel
	.align	2, 0
	.type	 GetSumOfEnemyPartyLevel,function
	.thumb_func
GetSumOfEnemyPartyLevel:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r1, r1, #0x18
	lsr	r4, r1, #0x18
	ldr	r5, .L152
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r2, r1, r5
	add	r0, r2, #0
	add	r0, r0, #0x20
	ldrb	r0, [r0]
	cmp	r0, r4
	bcs	.L123	@cond_branch
	add	r4, r0, #0
.L123:
	mov	r3, #0x0
	ldrb	r0, [r2]
	cmp	r0, #0x1
	beq	.L131	@cond_branch
	cmp	r0, #0x1
	bgt	.L151	@cond_branch
	cmp	r0, #0
	beq	.L125	@cond_branch
	b	.L124
.L153:
	.align	2, 0
.L152:
	.word	gTrainers
.L151:
	cmp	r0, #0x2
	beq	.L137	@cond_branch
	cmp	r0, #0x3
	beq	.L143	@cond_branch
	b	.L124
.L125:
	add	r0, r5, #0
	add	r0, r0, #0x24
	add	r0, r1, r0
	ldr	r1, [r0]
	mov	r2, #0x0
	cmp	r3, r4
	bcs	.L124	@cond_branch
.L129:
	lsl	r0, r2, #0x3
	add	r0, r0, r1
	ldrb	r0, [r0, #0x2]
	add	r0, r3, r0
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, r4
	bcc	.L129	@cond_branch
	b	.L124
.L131:
	add	r0, r5, #0
	add	r0, r0, #0x24
	add	r0, r1, r0
	ldr	r1, [r0]
	mov	r2, #0x0
	cmp	r3, r4
	bcs	.L124	@cond_branch
.L135:
	lsl	r0, r2, #0x4
	add	r0, r0, r1
	ldrb	r0, [r0, #0x2]
	add	r0, r3, r0
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, r4
	bcc	.L135	@cond_branch
	b	.L124
.L137:
	add	r0, r5, #0
	add	r0, r0, #0x24
	add	r0, r1, r0
	ldr	r1, [r0]
	mov	r2, #0x0
	cmp	r3, r4
	bcs	.L124	@cond_branch
.L141:
	lsl	r0, r2, #0x3
	add	r0, r0, r1
	ldrb	r0, [r0, #0x2]
	add	r0, r3, r0
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, r4
	bcc	.L141	@cond_branch
	b	.L124
.L143:
	add	r0, r5, #0
	add	r0, r0, #0x24
	add	r0, r1, r0
	ldr	r1, [r0]
	mov	r2, #0x0
	cmp	r3, r4
	bcs	.L124	@cond_branch
.L147:
	lsl	r0, r2, #0x4
	add	r0, r0, r1
	ldrb	r0, [r0, #0x2]
	add	r0, r3, r0
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, r4
	bcc	.L147	@cond_branch
.L124:
	add	r0, r3, #0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe19:
	.size	 GetSumOfEnemyPartyLevel,.Lfe19-GetSumOfEnemyPartyLevel
	.align	2, 0
	.type	 GetWildBattleTransition,function
	.thumb_func
GetWildBattleTransition:
	push	{r4, r5, lr}
	bl	GetBattleTransitionTypeByMap
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r0, .L160
	mov	r1, #0x38
	bl	GetMonData
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x1
	bl	GetSumOfPlayerPartyLevel
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r4, r0
	bcc	.L155	@cond_branch
	ldr	r0, .L160+0x4
	lsl	r1, r5, #0x1
	add	r0, r0, #0x1
	b	.L159
.L161:
	.align	2, 0
.L160:
	.word	gEnemyParty
	.word	gBattleTransitionTable_Wild
.L155:
	ldr	r0, .L162
	lsl	r1, r5, #0x1
.L159:
	add	r1, r1, r0
	ldrb	r0, [r1]
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L163:
	.align	2, 0
.L162:
	.word	gBattleTransitionTable_Wild
.Lfe20:
	.size	 GetWildBattleTransition,.Lfe20-GetWildBattleTransition
	.align	2, 0
	.type	 GetTrainerBattleTransition,function
	.thumb_func
GetTrainerBattleTransition:
	push	{r4, r5, r6, lr}
	ldr	r4, .L180
	ldrh	r1, [r4]
	mov	r0, #0x80
	lsl	r0, r0, #0x3
	cmp	r1, r0
	beq	.L177	@cond_branch
	ldr	r1, .L180+0x4
	ldrh	r2, [r4]
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldrb	r1, [r0, #0x1]
	cmp	r1, #0x18
	bne	.L166	@cond_branch
	add	r1, r2, #0
	ldr	r0, .L180+0x8
	cmp	r1, r0
	bne	.L167	@cond_branch
	mov	r0, #0xc
	b	.L176
.L181:
	.align	2, 0
.L180:
	.word	gTrainerBattleOpponent
	.word	gTrainers
	.word	0x105
.L167:
	mov	r0, #0x83
	lsl	r0, r0, #0x1
	cmp	r1, r0
	bne	.L168	@cond_branch
	mov	r0, #0xd
	b	.L176
.L168:
	ldr	r0, .L182
	cmp	r1, r0
	bne	.L169	@cond_branch
	mov	r0, #0xe
	b	.L176
.L183:
	.align	2, 0
.L182:
	.word	0x107
.L169:
	mov	r0, #0x84
	lsl	r0, r0, #0x1
	cmp	r1, r0
	bne	.L177	@cond_branch
	mov	r0, #0xf
	b	.L176
.L166:
	cmp	r1, #0x20
	bne	.L171	@cond_branch
.L177:
	mov	r0, #0x10
	b	.L176
.L171:
	ldrb	r0, [r0, #0x18]
	mov	r5, #0x1
	cmp	r0, #0x1
	bne	.L172	@cond_branch
	mov	r5, #0x2
.L172:
	bl	GetBattleTransitionTypeByMap
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldrh	r0, [r4]
	add	r1, r5, #0
	bl	GetSumOfEnemyPartyLevel
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r5, #0
	bl	GetSumOfPlayerPartyLevel
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r4, r0
	bcc	.L174	@cond_branch
	ldr	r0, .L184
	lsl	r1, r6, #0x1
	add	r0, r0, #0x1
	b	.L179
.L185:
	.align	2, 0
.L184:
	.word	gBattleTransitionTable_Trainer
.L174:
	ldr	r0, .L186
	lsl	r1, r6, #0x1
.L179:
	add	r1, r1, r0
	ldrb	r0, [r1]
.L176:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L187:
	.align	2, 0
.L186:
	.word	gBattleTransitionTable_Trainer
.Lfe21:
	.size	 GetTrainerBattleTransition,.Lfe21-GetTrainerBattleTransition
	.align	2, 0
	.globl	BattleSetup_GetBattleTowerBattleTransition
	.type	 BattleSetup_GetBattleTowerBattleTransition,function
	.thumb_func
BattleSetup_GetBattleTowerBattleTransition:
	push	{r4, lr}
	ldr	r0, .L192
	mov	r1, #0x38
	bl	GetMonData
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x1
	bl	GetSumOfPlayerPartyLevel
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r4, r0
	bcc	.L189	@cond_branch
	mov	r0, #0x3
	b	.L191
.L193:
	.align	2, 0
.L192:
	.word	gEnemyParty
.L189:
	mov	r0, #0x4
.L191:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe22:
	.size	 BattleSetup_GetBattleTowerBattleTransition,.Lfe22-BattleSetup_GetBattleTowerBattleTransition
	.align	2, 0
	.globl	ScrSpecial_ChooseStarter
	.type	 ScrSpecial_ChooseStarter,function
	.thumb_func
ScrSpecial_ChooseStarter:
	push	{lr}
	ldr	r0, .L195
	bl	SetMainCallback2
	ldr	r1, .L195+0x4
	ldr	r0, .L195+0x8
	str	r0, [r1, #0x8]
	pop	{r0}
	bx	r0
.L196:
	.align	2, 0
.L195:
	.word	CB2_ChooseStarter
	.word	gMain
	.word	CB2_GiveStarter
.Lfe23:
	.size	 ScrSpecial_ChooseStarter,.Lfe23-ScrSpecial_ChooseStarter
	.align	2, 0
	.type	 CB2_GiveStarter,function
	.thumb_func
CB2_GiveStarter:
	push	{lr}
	add	sp, sp, #0xfffffff8
	ldr	r0, .L198
	bl	GetVarPointer
	ldr	r2, .L198+0x4
	ldrh	r1, [r2]
	strh	r1, [r0]
	ldrh	r0, [r2]
	bl	GetStarterPokemon
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x0
	str	r1, [sp]
	str	r1, [sp, #0x4]
	mov	r1, #0x5
	mov	r2, #0x0
	mov	r3, #0x0
	bl	ScriptGiveMon
	bl	ResetTasks
	bl	sub_80408BC
	ldr	r0, .L198+0x8
	bl	SetMainCallback2
	mov	r0, #0x0
	bl	BattleTransition_Start
	add	sp, sp, #0x8
	pop	{r0}
	bx	r0
.L199:
	.align	2, 0
.L198:
	.word	0x4023
	.word	gScriptResult
	.word	CB2_StartFirstBattle
.Lfe24:
	.size	 CB2_GiveStarter,.Lfe24-CB2_GiveStarter
	.align	2, 0
	.type	 CB2_StartFirstBattle,function
	.thumb_func
CB2_StartFirstBattle:
	push	{lr}
	bl	UpdatePaletteFade
	bl	RunTasks
	bl	IsBattleTransitionDone
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L201	@cond_branch
	ldr	r1, .L202
	mov	r0, #0x10
	strh	r0, [r1]
	ldr	r1, .L202+0x4
	ldr	r0, .L202+0x8
	str	r0, [r1, #0x8]
	ldr	r0, .L202+0xc
	bl	SetMainCallback2
	bl	prev_quest_postbuffer_cursor_backup_reset
	bl	overworld_poison_timer_set
	mov	r0, #0x7
	bl	IncrementGameStat
	mov	r0, #0x8
	bl	IncrementGameStat
.L201:
	pop	{r0}
	bx	r0
.L203:
	.align	2, 0
.L202:
	.word	gBattleTypeFlags
	.word	gMain
	.word	CB2_EndFirstBattle
	.word	sub_800E7C4
.Lfe25:
	.size	 CB2_StartFirstBattle,.Lfe25-CB2_StartFirstBattle
	.align	2, 0
	.type	 CB2_EndFirstBattle,function
	.thumb_func
CB2_EndFirstBattle:
	push	{lr}
	bl	Overworld_ClearSavedMusic
	ldr	r0, .L205
	bl	SetMainCallback2
	pop	{r0}
	bx	r0
.L206:
	.align	2, 0
.L205:
	.word	c2_exit_to_overworld_1_continue_scripts_restart_music
.Lfe26:
	.size	 CB2_EndFirstBattle,.Lfe26-CB2_EndFirstBattle
	.align	2, 0
	.type	 TrainerBattleLoadArg32,function
	.thumb_func
TrainerBattleLoadArg32:
	add	r2, r0, #0
	ldrb	r0, [r2]
	ldrb	r1, [r2, #0x1]
	lsl	r1, r1, #0x8
	orr	r0, r0, r1
	ldrb	r1, [r2, #0x2]
	lsl	r1, r1, #0x10
	orr	r0, r0, r1
	ldrb	r1, [r2, #0x3]
	lsl	r1, r1, #0x18
	orr	r0, r0, r1
	bx	lr
.Lfe27:
	.size	 TrainerBattleLoadArg32,.Lfe27-TrainerBattleLoadArg32
	.align	2, 0
	.type	 TrainerBattleLoadArg16,function
	.thumb_func
TrainerBattleLoadArg16:
	add	r1, r0, #0
	ldrb	r0, [r1]
	ldrb	r1, [r1, #0x1]
	lsl	r1, r1, #0x8
	orr	r0, r0, r1
	bx	lr
.Lfe28:
	.size	 TrainerBattleLoadArg16,.Lfe28-TrainerBattleLoadArg16
	.align	2, 0
	.type	 TrainerBattleLoadArg8,function
	.thumb_func
TrainerBattleLoadArg8:
	ldrb	r0, [r0]
	bx	lr
.Lfe29:
	.size	 TrainerBattleLoadArg8,.Lfe29-TrainerBattleLoadArg8
	.align	2, 0
	.type	 CurrentOpponentTrainerFlag,function
	.thumb_func
CurrentOpponentTrainerFlag:
	ldr	r1, .L211
	mov	r2, #0xa0
	lsl	r2, r2, #0x3
	add	r0, r2, #0
	ldrh	r1, [r1]
	add	r0, r0, r1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bx	lr
.L212:
	.align	2, 0
.L211:
	.word	gTrainerBattleOpponent
.Lfe30:
	.size	 CurrentOpponentTrainerFlag,.Lfe30-CurrentOpponentTrainerFlag
	.align	2, 0
	.type	 IsPlayerDefeated,function
	.thumb_func
IsPlayerDefeated:
	push	{lr}
	sub	r0, r0, #0x1
	cmp	r0, #0x6
	bhi	.L214	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L225
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L226:
	.align	2, 0
.L225:
	.word	.L222
	.align	2, 0
	.align	2, 0
.L222:
	.word	.L221
	.word	.L216
	.word	.L216
	.word	.L221
	.word	.L221
	.word	.L221
	.word	.L221
.L216:
	mov	r0, #0x1
	b	.L224
.L221:
.L214:
	mov	r0, #0x0
.L224:
	pop	{r1}
	bx	r1
.Lfe31:
	.size	 IsPlayerDefeated,.Lfe31-IsPlayerDefeated
	.align	2, 0
	.type	 sub_80822BC,function
	.thumb_func
sub_80822BC:
	ldr	r0, .L228
	mov	r1, #0x0
	strh	r1, [r0]
	ldr	r0, .L228+0x4
	strh	r1, [r0]
	ldr	r0, .L228+0x8
	strh	r1, [r0]
	ldr	r0, .L228+0xc
	mov	r1, #0x0
	str	r1, [r0]
	ldr	r0, .L228+0x10
	str	r1, [r0]
	ldr	r0, .L228+0x14
	str	r1, [r0]
	ldr	r0, .L228+0x18
	str	r1, [r0]
	ldr	r0, .L228+0x1c
	str	r1, [r0]
	ldr	r0, .L228+0x20
	str	r1, [r0]
	bx	lr
.L229:
	.align	2, 0
.L228:
	.word	sTrainerBattleMode
	.word	gTrainerBattleOpponent
	.word	sTrainerMapObjectLocalId
	.word	sTrainerIntroSpeech
	.word	sTrainerDefeatSpeech
	.word	sTrainerVictorySpeech
	.word	sTrainerCannotBattleSpeech
	.word	sTrainerBattleScriptRetAddr
	.word	sTrainerBattleEndScript
.Lfe32:
	.size	 sub_80822BC,.Lfe32-sub_80822BC
	.align	2, 0
	.type	 TrainerBattleLoadArgs,function
	.thumb_func
TrainerBattleLoadArgs:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
.L233:
	ldrb	r0, [r4, #0x4]
	cmp	r0, #0x6
	bhi	.L234	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L245
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L246:
	.align	2, 0
.L245:
	.word	.L242
	.align	2, 0
	.align	2, 0
.L242:
	.word	.L235
	.word	.L236
	.word	.L237
	.word	.L238
	.word	.L239
	.word	.L240
	.word	.L230
.L235:
	add	r0, r5, #0
	bl	TrainerBattleLoadArg8
	ldr	r1, [r4]
	strb	r0, [r1]
	add	r5, r5, #0x1
	b	.L234
.L236:
	add	r0, r5, #0
	bl	TrainerBattleLoadArg16
	ldr	r1, [r4]
	strh	r0, [r1]
	add	r5, r5, #0x2
	b	.L234
.L237:
	add	r0, r5, #0
	bl	TrainerBattleLoadArg32
	ldr	r1, [r4]
	str	r0, [r1]
	add	r5, r5, #0x4
	b	.L234
.L238:
	ldr	r1, [r4]
	mov	r0, #0x0
	strb	r0, [r1]
	b	.L234
.L239:
	ldr	r1, [r4]
	mov	r0, #0x0
	strh	r0, [r1]
	b	.L234
.L240:
	ldr	r1, [r4]
	mov	r0, #0x0
	str	r0, [r1]
.L234:
	add	r4, r4, #0x8
	b	.L233
.L230:
	ldr	r0, [r4]
	str	r5, [r0]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe33:
	.size	 TrainerBattleLoadArgs,.Lfe33-TrainerBattleLoadArgs
	.align	2, 0
	.type	 battle_80801F0,function
	.thumb_func
battle_80801F0:
	push	{lr}
	ldr	r0, .L249
	ldrh	r1, [r0]
	cmp	r1, #0
	beq	.L248	@cond_branch
	ldr	r0, .L249+0x4
	strh	r1, [r0]
	lsl	r0, r1, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L249+0x8
	ldrb	r1, [r2, #0x5]
	ldrb	r2, [r2, #0x4]
	bl	GetFieldObjectIdByLocalIdAndMap
	ldr	r1, .L249+0xc
	strb	r0, [r1]
.L248:
	pop	{r0}
	bx	r0
.L250:
	.align	2, 0
.L249:
	.word	sTrainerMapObjectLocalId
	.word	gScriptLastTalked
	.word	gSaveBlock1
	.word	gSelectedMapObject
.Lfe34:
	.size	 battle_80801F0,.Lfe34-battle_80801F0
	.align	2, 0
	.globl	BattleSetup_ConfigureTrainerBattle
	.type	 BattleSetup_ConfigureTrainerBattle,function
	.thumb_func
BattleSetup_ConfigureTrainerBattle:
	push	{r4, r5, lr}
	add	r5, r0, #0
	bl	sub_80822BC
	ldr	r4, .L266
	add	r0, r5, #0
	bl	TrainerBattleLoadArg8
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4]
	ldrh	r0, [r4]
	sub	r0, r0, #0x1
	cmp	r0, #0x7
	bhi	.L261	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L266+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L267:
	.align	2, 0
.L266:
	.word	sTrainerBattleMode
	.word	.L262
	.align	2, 0
	.align	2, 0
.L262:
	.word	.L256
	.word	.L256
	.word	.L253
	.word	.L254
	.word	.L260
	.word	.L258
	.word	.L259
	.word	.L258
.L253:
	ldr	r0, .L268
	add	r1, r5, #0
	bl	TrainerBattleLoadArgs
	ldr	r0, .L268+0x4
	b	.L263
.L269:
	.align	2, 0
.L268:
	.word	gTrainerBattleSpecs_3
	.word	gUnknown_0819F878
.L254:
	ldr	r0, .L270
	b	.L264
.L271:
	.align	2, 0
.L270:
	.word	gTrainerBattleSpecs_2
.L256:
	ldr	r0, .L272
	b	.L265
.L273:
	.align	2, 0
.L272:
	.word	gTrainerBattleSpecs_1
.L258:
	ldr	r0, .L274
.L264:
	add	r1, r5, #0
	bl	TrainerBattleLoadArgs
	bl	battle_80801F0
	ldr	r0, .L274+0x4
	b	.L263
.L275:
	.align	2, 0
.L274:
	.word	gTrainerBattleSpecs_4
	.word	gUnknown_0819F840
.L259:
	ldr	r0, .L276
	add	r1, r5, #0
	bl	TrainerBattleLoadArgs
	bl	battle_80801F0
	ldr	r4, .L276+0x4
	ldrh	r0, [r4]
	bl	sub_8082C4C
	strh	r0, [r4]
	ldr	r0, .L276+0x8
	b	.L263
.L277:
	.align	2, 0
.L276:
	.word	gTrainerBattleSpecs_2
	.word	gTrainerBattleOpponent
	.word	gUnknown_0819F8AE
.L260:
	ldr	r0, .L278
	add	r1, r5, #0
	bl	TrainerBattleLoadArgs
	bl	battle_80801F0
	ldr	r4, .L278+0x4
	ldrh	r0, [r4]
	bl	sub_8082C4C
	strh	r0, [r4]
	ldr	r0, .L278+0x8
	b	.L263
.L279:
	.align	2, 0
.L278:
	.word	gTrainerBattleSpecs_0
	.word	gTrainerBattleOpponent
	.word	gUnknown_0819F887
.L261:
	ldr	r0, .L280
.L265:
	add	r1, r5, #0
	bl	TrainerBattleLoadArgs
	bl	battle_80801F0
	ldr	r0, .L280+0x4
.L263:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L281:
	.align	2, 0
.L280:
	.word	gTrainerBattleSpecs_0
	.word	gUnknown_0819F818
.Lfe35:
	.size	 BattleSetup_ConfigureTrainerBattle,.Lfe35-BattleSetup_ConfigureTrainerBattle
	.align	2, 0
	.globl	TrainerWantsBattle
	.type	 TrainerWantsBattle,function
	.thumb_func
TrainerWantsBattle:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L283
	strb	r0, [r2]
	ldr	r4, .L283+0x4
	ldr	r3, .L283+0x8
	lsl	r2, r0, #0x3
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	add	r2, r2, r3
	ldrb	r0, [r2, #0x8]
	strh	r0, [r4]
	add	r1, r1, #0x1
	add	r0, r1, #0
	bl	BattleSetup_ConfigureTrainerBattle
	ldr	r0, .L283+0xc
	bl	ScriptContext1_SetupScript
	bl	ScriptContext2_Enable
	pop	{r4}
	pop	{r0}
	bx	r0
.L284:
	.align	2, 0
.L283:
	.word	gSelectedMapObject
	.word	gScriptLastTalked
	.word	gMapObjects
	.word	gUnknown_0819F80B
.Lfe36:
	.size	 TrainerWantsBattle,.Lfe36-TrainerWantsBattle
	.align	2, 0
	.globl	GetTrainerFlagFromScriptPointer
	.type	 GetTrainerFlagFromScriptPointer,function
	.thumb_func
GetTrainerFlagFromScriptPointer:
	push	{lr}
	add	r0, r0, #0x2
	bl	TrainerBattleLoadArg16
	lsl	r0, r0, #0x10
	mov	r1, #0xa0
	lsl	r1, r1, #0x13
	add	r0, r0, r1
	lsr	r0, r0, #0x10
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.Lfe37:
	.size	 GetTrainerFlagFromScriptPointer,.Lfe37-GetTrainerFlagFromScriptPointer
	.align	2, 0
	.globl	sub_8082524
	.type	 sub_8082524,function
	.thumb_func
sub_8082524:
	push	{r4, lr}
	ldr	r0, .L287
	ldrb	r0, [r0]
	lsl	r4, r0, #0x3
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L287+0x4
	add	r4, r4, r0
	ldrb	r0, [r4, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	bl	npc_running_behaviour_by_direction
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	npc_set_running_behaviour_etc
	pop	{r4}
	pop	{r0}
	bx	r0
.L288:
	.align	2, 0
.L287:
	.word	gSelectedMapObject
	.word	gMapObjects
.Lfe38:
	.size	 sub_8082524,.Lfe38-sub_8082524
	.align	2, 0
	.globl	ScrSpecial_GetTrainerBattleMode
	.type	 ScrSpecial_GetTrainerBattleMode,function
	.thumb_func
ScrSpecial_GetTrainerBattleMode:
	ldr	r0, .L290
	ldrb	r0, [r0]
	bx	lr
.L291:
	.align	2, 0
.L290:
	.word	sTrainerBattleMode
.Lfe39:
	.size	 ScrSpecial_GetTrainerBattleMode,.Lfe39-ScrSpecial_GetTrainerBattleMode
	.align	2, 0
	.globl	ScrSpecial_HasTrainerBeenFought
	.type	 ScrSpecial_HasTrainerBeenFought,function
	.thumb_func
ScrSpecial_HasTrainerBeenFought:
	push	{lr}
	bl	CurrentOpponentTrainerFlag
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.Lfe40:
	.size	 ScrSpecial_HasTrainerBeenFought,.Lfe40-ScrSpecial_HasTrainerBeenFought
	.align	2, 0
	.globl	SetCurrentTrainerBattledFlag
	.type	 SetCurrentTrainerBattledFlag,function
	.thumb_func
SetCurrentTrainerBattledFlag:
	push	{lr}
	bl	CurrentOpponentTrainerFlag
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	FlagSet
	pop	{r0}
	bx	r0
.Lfe41:
	.size	 SetCurrentTrainerBattledFlag,.Lfe41-SetCurrentTrainerBattledFlag
	.align	2, 0
	.globl	unref_sub_8082590
	.type	 unref_sub_8082590,function
	.thumb_func
unref_sub_8082590:
	push	{lr}
	bl	CurrentOpponentTrainerFlag
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	FlagSet
	pop	{r0}
	bx	r0
.Lfe42:
	.size	 unref_sub_8082590,.Lfe42-unref_sub_8082590
	.align	2, 0
	.globl	HasTrainerAlreadyBeenFought
	.type	 HasTrainerAlreadyBeenFought,function
	.thumb_func
HasTrainerAlreadyBeenFought:
	push	{lr}
	lsl	r0, r0, #0x10
	mov	r1, #0xa0
	lsl	r1, r1, #0x13
	add	r0, r0, r1
	lsr	r0, r0, #0x10
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.Lfe43:
	.size	 HasTrainerAlreadyBeenFought,.Lfe43-HasTrainerAlreadyBeenFought
	.align	2, 0
	.globl	trainer_flag_set
	.type	 trainer_flag_set,function
	.thumb_func
trainer_flag_set:
	push	{lr}
	lsl	r0, r0, #0x10
	mov	r1, #0xa0
	lsl	r1, r1, #0x13
	add	r0, r0, r1
	lsr	r0, r0, #0x10
	bl	FlagSet
	pop	{r0}
	bx	r0
.Lfe44:
	.size	 trainer_flag_set,.Lfe44-trainer_flag_set
	.align	2, 0
	.globl	trainer_flag_clear
	.type	 trainer_flag_clear,function
	.thumb_func
trainer_flag_clear:
	push	{lr}
	lsl	r0, r0, #0x10
	mov	r1, #0xa0
	lsl	r1, r1, #0x13
	add	r0, r0, r1
	lsr	r0, r0, #0x10
	bl	FlagClear
	pop	{r0}
	bx	r0
.Lfe45:
	.size	 trainer_flag_clear,.Lfe45-trainer_flag_clear
	.align	2, 0
	.globl	BattleSetup_StartTrainerBattle
	.type	 BattleSetup_StartTrainerBattle,function
	.thumb_func
BattleSetup_StartTrainerBattle:
	push	{lr}
	ldr	r1, .L299
	mov	r0, #0x8
	strh	r0, [r1]
	ldr	r1, .L299+0x4
	ldr	r0, .L299+0x8
	str	r0, [r1, #0x8]
	bl	StartTheBattle
	bl	ScriptContext1_Stop
	pop	{r0}
	bx	r0
.L300:
	.align	2, 0
.L299:
	.word	gBattleTypeFlags
	.word	gMain
	.word	sub_808260C
.Lfe46:
	.size	 BattleSetup_StartTrainerBattle,.Lfe46-BattleSetup_StartTrainerBattle
	.align	2, 0
	.globl	sub_808260C
	.type	 sub_808260C,function
	.thumb_func
sub_808260C:
	push	{lr}
	ldr	r0, .L306
	ldrh	r1, [r0]
	mov	r0, #0x80
	lsl	r0, r0, #0x3
	cmp	r1, r0
	bne	.L302	@cond_branch
	ldr	r0, .L306+0x4
	bl	SetMainCallback2
	b	.L303
.L307:
	.align	2, 0
.L306:
	.word	gTrainerBattleOpponent
	.word	c2_exit_to_overworld_1_continue_scripts_restart_music
.L302:
	ldr	r0, .L308
	ldrb	r0, [r0]
	bl	IsPlayerDefeated
	cmp	r0, #0x1
	bne	.L304	@cond_branch
	ldr	r0, .L308+0x4
	bl	SetMainCallback2
	b	.L303
.L309:
	.align	2, 0
.L308:
	.word	gBattleOutcome
	.word	CB2_WhiteOut
.L304:
	ldr	r0, .L310
	bl	SetMainCallback2
	bl	SetCurrentTrainerBattledFlag
.L303:
	pop	{r0}
	bx	r0
.L311:
	.align	2, 0
.L310:
	.word	c2_exit_to_overworld_1_continue_scripts_restart_music
.Lfe47:
	.size	 sub_808260C,.Lfe47-sub_808260C
	.align	2, 0
	.globl	CB2_EndTrainerEyeRematchBattle
	.type	 CB2_EndTrainerEyeRematchBattle,function
	.thumb_func
CB2_EndTrainerEyeRematchBattle:
	push	{lr}
	ldr	r0, .L317
	ldrh	r1, [r0]
	mov	r0, #0x80
	lsl	r0, r0, #0x3
	cmp	r1, r0
	bne	.L313	@cond_branch
	ldr	r0, .L317+0x4
	bl	SetMainCallback2
	b	.L314
.L318:
	.align	2, 0
.L317:
	.word	gTrainerBattleOpponent
	.word	c2_exit_to_overworld_1_continue_scripts_restart_music
.L313:
	ldr	r0, .L319
	ldrb	r0, [r0]
	bl	IsPlayerDefeated
	cmp	r0, #0x1
	bne	.L315	@cond_branch
	ldr	r0, .L319+0x4
	bl	SetMainCallback2
	b	.L314
.L320:
	.align	2, 0
.L319:
	.word	gBattleOutcome
	.word	CB2_WhiteOut
.L315:
	ldr	r0, .L321
	bl	SetMainCallback2
	bl	SetCurrentTrainerBattledFlag
	bl	SetTrainerFlagsAfterTrainerEyeRematch
.L314:
	pop	{r0}
	bx	r0
.L322:
	.align	2, 0
.L321:
	.word	c2_exit_to_overworld_1_continue_scripts_restart_music
.Lfe48:
	.size	 CB2_EndTrainerEyeRematchBattle,.Lfe48-CB2_EndTrainerEyeRematchBattle
	.align	2, 0
	.globl	ScrSpecial_StartTrainerEyeRematch
	.type	 ScrSpecial_StartTrainerEyeRematch,function
	.thumb_func
ScrSpecial_StartTrainerEyeRematch:
	push	{lr}
	ldr	r1, .L324
	mov	r0, #0x8
	strh	r0, [r1]
	ldr	r1, .L324+0x4
	ldr	r0, .L324+0x8
	str	r0, [r1, #0x8]
	bl	StartTheBattle
	bl	ScriptContext1_Stop
	pop	{r0}
	bx	r0
.L325:
	.align	2, 0
.L324:
	.word	gBattleTypeFlags
	.word	gMain
	.word	CB2_EndTrainerEyeRematchBattle
.Lfe49:
	.size	 ScrSpecial_StartTrainerEyeRematch,.Lfe49-ScrSpecial_StartTrainerEyeRematch
	.align	2, 0
	.globl	ScrSpecial_ShowTrainerIntroSpeech
	.type	 ScrSpecial_ShowTrainerIntroSpeech,function
	.thumb_func
ScrSpecial_ShowTrainerIntroSpeech:
	push	{lr}
	bl	GetTrainerIntroSpeech
	bl	ShowFieldMessage
	pop	{r0}
	bx	r0
.Lfe50:
	.size	 ScrSpecial_ShowTrainerIntroSpeech,.Lfe50-ScrSpecial_ShowTrainerIntroSpeech
	.align	2, 0
	.globl	BattleSetup_GetScriptAddrAfterBattle
	.type	 BattleSetup_GetScriptAddrAfterBattle,function
	.thumb_func
BattleSetup_GetScriptAddrAfterBattle:
	push	{lr}
	ldr	r0, .L331
	ldr	r0, [r0]
	cmp	r0, #0
	bne	.L330	@cond_branch
	ldr	r0, .L331+0x4
.L330:
	pop	{r1}
	bx	r1
.L332:
	.align	2, 0
.L331:
	.word	sTrainerBattleScriptRetAddr
	.word	gUnknown_081C6C02
.Lfe51:
	.size	 BattleSetup_GetScriptAddrAfterBattle,.Lfe51-BattleSetup_GetScriptAddrAfterBattle
	.align	2, 0
	.globl	BattleSetup_GetTrainerPostBattleScript
	.type	 BattleSetup_GetTrainerPostBattleScript,function
	.thumb_func
BattleSetup_GetTrainerPostBattleScript:
	push	{lr}
	ldr	r0, .L337
	ldr	r0, [r0]
	cmp	r0, #0
	bne	.L336	@cond_branch
	ldr	r0, .L337+0x4
.L336:
	pop	{r1}
	bx	r1
.L338:
	.align	2, 0
.L337:
	.word	sTrainerBattleEndScript
	.word	gUnknown_081C6C02
.Lfe52:
	.size	 BattleSetup_GetTrainerPostBattleScript,.Lfe52-BattleSetup_GetTrainerPostBattleScript
	.align	2, 0
	.globl	ScrSpecial_ShowTrainerNonBattlingSpeech
	.type	 ScrSpecial_ShowTrainerNonBattlingSpeech,function
	.thumb_func
ScrSpecial_ShowTrainerNonBattlingSpeech:
	push	{lr}
	bl	GetTrainerNonBattlingSpeech
	bl	ShowFieldMessage
	pop	{r0}
	bx	r0
.Lfe53:
	.size	 ScrSpecial_ShowTrainerNonBattlingSpeech,.Lfe53-ScrSpecial_ShowTrainerNonBattlingSpeech
	.align	2, 0
	.globl	PlayTrainerEncounterMusic
	.type	 PlayTrainerEncounterMusic,function
	.thumb_func
PlayTrainerEncounterMusic:
	push	{lr}
	ldr	r0, .L358
	ldrh	r0, [r0]
	cmp	r0, #0x1
	beq	.L341	@cond_branch
	cmp	r0, #0x8
	beq	.L341	@cond_branch
	ldr	r0, .L358+0x4
	ldrh	r0, [r0]
	bl	sub_803FC58
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xd
	bhi	.L356	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L358+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L359:
	.align	2, 0
.L358:
	.word	sTrainerBattleMode
	.word	gTrainerBattleOpponent
	.word	.L357
	.align	2, 0
	.align	2, 0
.L357:
	.word	.L343
	.word	.L344
	.word	.L345
	.word	.L356
	.word	.L346
	.word	.L347
	.word	.L348
	.word	.L349
	.word	.L350
	.word	.L351
	.word	.L352
	.word	.L353
	.word	.L354
	.word	.L355
.L343:
	mov	r0, #0xbe
	lsl	r0, r0, #0x1
	b	.L342
.L344:
	ldr	r0, .L360
	b	.L342
.L361:
	.align	2, 0
.L360:
	.word	0x197
.L345:
	ldr	r0, .L362
	b	.L342
.L363:
	.align	2, 0
.L362:
	.word	0x17b
.L346:
	mov	r0, #0xd0
	lsl	r0, r0, #0x1
	b	.L342
.L347:
	ldr	r0, .L364
	b	.L342
.L365:
	.align	2, 0
.L364:
	.word	0x1a1
.L348:
	ldr	r0, .L366
	b	.L342
.L367:
	.align	2, 0
.L366:
	.word	0x1a3
.L349:
	ldr	r0, .L368
	b	.L342
.L369:
	.align	2, 0
.L368:
	.word	0x1b9
.L350:
	ldr	r0, .L370
	b	.L342
.L371:
	.align	2, 0
.L370:
	.word	0x181
.L351:
	ldr	r0, .L372
	b	.L342
.L373:
	.align	2, 0
.L372:
	.word	0x1c1
.L352:
	mov	r0, #0xe1
	lsl	r0, r0, #0x1
	b	.L342
.L353:
	ldr	r0, .L374
	b	.L342
.L375:
	.align	2, 0
.L374:
	.word	0x1c3
.L354:
	ldr	r0, .L376
	b	.L342
.L377:
	.align	2, 0
.L376:
	.word	0x1c5
.L355:
	ldr	r0, .L378
	b	.L342
.L379:
	.align	2, 0
.L378:
	.word	0x18d
.L356:
	ldr	r0, .L380
.L342:
	bl	PlayNewMapMusic
.L341:
	pop	{r0}
	bx	r0
.L381:
	.align	2, 0
.L380:
	.word	0x1a7
.Lfe54:
	.size	 PlayTrainerEncounterMusic,.Lfe54-PlayTrainerEncounterMusic
	.align	2, 0
	.type	 SanitizeString,function
	.thumb_func
SanitizeString:
	push	{lr}
	cmp	r0, #0
	bne	.L385	@cond_branch
	ldr	r0, .L386
.L385:
	pop	{r1}
	bx	r1
.L387:
	.align	2, 0
.L386:
	.word	gOtherText_CancelWithTerminator
.Lfe55:
	.size	 SanitizeString,.Lfe55-SanitizeString
	.align	2, 0
	.type	 GetTrainerIntroSpeech,function
	.thumb_func
GetTrainerIntroSpeech:
	push	{lr}
	ldr	r0, .L389
	ldr	r0, [r0]
	bl	SanitizeString
	pop	{r1}
	bx	r1
.L390:
	.align	2, 0
.L389:
	.word	sTrainerIntroSpeech
.Lfe56:
	.size	 GetTrainerIntroSpeech,.Lfe56-GetTrainerIntroSpeech
	.align	2, 0
	.globl	sub_8082830
	.type	 sub_8082830,function
	.thumb_func
sub_8082830:
	push	{r4, lr}
	ldr	r0, .L394
	ldrh	r1, [r0]
	mov	r0, #0x80
	lsl	r0, r0, #0x3
	cmp	r1, r0
	bne	.L392	@cond_branch
	bl	sub_80BCCE8
	b	.L393
.L395:
	.align	2, 0
.L394:
	.word	gTrainerBattleOpponent
.L392:
	ldr	r0, .L396
	ldr	r0, [r0]
.L393:
	ldr	r4, .L396+0x4
	bl	SanitizeString
	add	r1, r0, #0
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	add	r0, r4, #0
	pop	{r4}
	pop	{r1}
	bx	r1
.L397:
	.align	2, 0
.L396:
	.word	sTrainerDefeatSpeech
	.word	gStringVar4
.Lfe57:
	.size	 sub_8082830,.Lfe57-sub_8082830
	.align	2, 0
	.globl	unref_sub_808286C
	.type	 unref_sub_808286C,function
	.thumb_func
unref_sub_808286C:
	push	{lr}
	ldr	r0, .L399
	ldr	r0, [r0]
	bl	SanitizeString
	pop	{r1}
	bx	r1
.L400:
	.align	2, 0
.L399:
	.word	sTrainerVictorySpeech
.Lfe58:
	.size	 unref_sub_808286C,.Lfe58-unref_sub_808286C
	.align	2, 0
	.type	 GetTrainerNonBattlingSpeech,function
	.thumb_func
GetTrainerNonBattlingSpeech:
	push	{lr}
	ldr	r0, .L402
	ldr	r0, [r0]
	bl	SanitizeString
	pop	{r1}
	bx	r1
.L403:
	.align	2, 0
.L402:
	.word	sTrainerCannotBattleSpeech
.Lfe59:
	.size	 GetTrainerNonBattlingSpeech,.Lfe59-GetTrainerNonBattlingSpeech
	.align	2, 0
	.globl	sub_8082894
	.type	 sub_8082894,function
	.thumb_func
sub_8082894:
	push	{lr}
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r3, #0x0
	add	r2, r0, #0
.L408:
	ldrh	r0, [r2]
	cmp	r0, r1
	bne	.L407	@cond_branch
	add	r0, r3, #0
	b	.L411
.L407:
	add	r2, r2, #0x10
	add	r3, r3, #0x1
	cmp	r3, #0x37
	ble	.L408	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
.L411:
	pop	{r1}
	bx	r1
.Lfe60:
	.size	 sub_8082894,.Lfe60-sub_8082894
	.align	2, 0
	.globl	sub_80828B8
	.type	 sub_80828B8,function
	.thumb_func
sub_80828B8:
	push	{r4, r5, lr}
	lsl	r1, r1, #0x10
	lsr	r5, r1, #0x10
	mov	r4, #0x0
	add	r2, r0, #0
.L416:
	mov	r1, #0x0
	ldrh	r0, [r2]
	cmp	r0, #0
	beq	.L415	@cond_branch
	mov	r3, #0x0
.L420:
	add	r0, r2, r3
	ldrh	r0, [r0]
	cmp	r0, r5
	bne	.L419	@cond_branch
	add	r0, r4, #0
	b	.L425
.L419:
	add	r3, r3, #0x2
	add	r1, r1, #0x1
	cmp	r1, #0x4
	bgt	.L415	@cond_branch
	add	r0, r2, r3
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L420	@cond_branch
.L415:
	add	r2, r2, #0x10
	add	r4, r4, #0x1
	cmp	r4, #0x37
	ble	.L416	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
.L425:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe61:
	.size	 sub_80828B8,.Lfe61-sub_80828B8
	.align	2, 0
	.globl	UpdateRandomTrainerEyeRematches
	.type	 UpdateRandomTrainerEyeRematches,function
	.thumb_func
UpdateRandomTrainerEyeRematches:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #0xfffffffc
	add	r7, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	str	r1, [sp]
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	mov	sl, r2
	mov	r4, #0x0
	mov	r5, #0x0
	ldr	r0, .L442
	mov	r9, r0
.L430:
	lsl	r0, r5, #0x4
	add	r2, r0, r7
	ldrh	r1, [r2, #0xa]
	add	r6, r0, #0
	add	r0, r5, #0x1
	mov	r8, r0
	ldr	r0, [sp]
	cmp	r1, r0
	bne	.L429	@cond_branch
	ldrh	r0, [r2, #0xc]
	cmp	r0, sl
	bne	.L429	@cond_branch
	mov	r1, r9
	add	r0, r5, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L441	@cond_branch
	ldrh	r0, [r2]
	bl	HasTrainerAlreadyBeenFought
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L429	@cond_branch
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x64
	bl	__umodsi3
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x1e
	bhi	.L429	@cond_branch
	mov	r4, #0x1
	b	.L435
.L443:
	.align	2, 0
.L442:
	.word	gSaveBlock1+0x97a
.L437:
	add	r4, r4, #0x1
.L435:
	cmp	r4, #0x4
	bgt	.L436	@cond_branch
	add	r0, r6, r7
	lsl	r1, r4, #0x1
	add	r1, r0, r1
	ldrh	r0, [r1]
	cmp	r0, #0
	beq	.L436	@cond_branch
	bl	HasTrainerAlreadyBeenFought
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L437	@cond_branch
.L436:
	mov	r1, r9
	add	r0, r5, r1
	strb	r4, [r0]
.L441:
	mov	r4, #0x1
.L429:
	mov	r5, r8
	cmp	r5, #0x37
	ble	.L430	@cond_branch
	add	r0, r4, #0
	add	sp, sp, #0x4
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe62:
	.size	 UpdateRandomTrainerEyeRematches,.Lfe62-UpdateRandomTrainerEyeRematches
	.align	2, 0
	.globl	sub_80829A8
	.type	 sub_80829A8,function
	.thumb_func
sub_80829A8:
	push	{r4, r5, lr}
	lsl	r1, r1, #0x10
	lsr	r4, r1, #0x10
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	mov	r1, #0x0
	ldr	r5, .L452
	add	r3, r0, #0
	add	r3, r3, #0xa
.L448:
	ldrh	r0, [r3]
	cmp	r0, r4
	bne	.L447	@cond_branch
	ldrh	r0, [r3, #0x2]
	cmp	r0, r2
	bne	.L447	@cond_branch
	add	r0, r1, r5
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L447	@cond_branch
	mov	r0, #0x1
	b	.L451
.L453:
	.align	2, 0
.L452:
	.word	gSaveBlock1+0x97a
.L447:
	add	r3, r3, #0x10
	add	r1, r1, #0x1
	cmp	r1, #0x37
	ble	.L448	@cond_branch
	mov	r0, #0x0
.L451:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe63:
	.size	 sub_80829A8,.Lfe63-sub_80829A8
	.align	2, 0
	.globl	sub_80829E8
	.type	 sub_80829E8,function
	.thumb_func
sub_80829E8:
	push	{r4, lr}
	lsl	r1, r1, #0x10
	lsr	r4, r1, #0x10
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	mov	r1, #0x0
	add	r3, r0, #0
	add	r3, r3, #0xa
.L458:
	ldrh	r0, [r3]
	cmp	r0, r4
	bne	.L457	@cond_branch
	ldrh	r0, [r3, #0x2]
	cmp	r0, r2
	bne	.L457	@cond_branch
	mov	r0, #0x1
	b	.L461
.L457:
	add	r3, r3, #0x10
	add	r1, r1, #0x1
	cmp	r1, #0x37
	ble	.L458	@cond_branch
	mov	r0, #0x0
.L461:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe64:
	.size	 sub_80829E8,.Lfe64-sub_80829E8
	.align	2, 0
	.globl	sub_8082A18
	.type	 sub_8082A18,function
	.thumb_func
sub_8082A18:
	push	{lr}
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	bl	sub_8082894
	add	r1, r0, #0
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L463	@cond_branch
	cmp	r1, #0x63
	bgt	.L463	@cond_branch
	ldr	r0, .L466
	ldr	r2, .L466+0x4
	add	r0, r0, r2
	add	r0, r1, r0
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L463	@cond_branch
	mov	r0, #0x1
	b	.L465
.L467:
	.align	2, 0
.L466:
	.word	gSaveBlock1
	.word	0x97a
.L463:
	mov	r0, #0x0
.L465:
	pop	{r1}
	bx	r1
.Lfe65:
	.size	 sub_8082A18,.Lfe65-sub_8082A18
	.align	2, 0
	.globl	GetTrainerEyeRematchFlag
	.type	 GetTrainerEyeRematchFlag,function
	.thumb_func
GetTrainerEyeRematchFlag:
	push	{lr}
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	bl	sub_80828B8
	add	r1, r0, #0
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L469	@cond_branch
	cmp	r1, #0x63
	bgt	.L469	@cond_branch
	ldr	r0, .L472
	ldr	r2, .L472+0x4
	add	r0, r0, r2
	add	r0, r1, r0
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L469	@cond_branch
	mov	r0, #0x1
	b	.L471
.L473:
	.align	2, 0
.L472:
	.word	gSaveBlock1
	.word	0x97a
.L469:
	mov	r0, #0x0
.L471:
	pop	{r1}
	bx	r1
.Lfe66:
	.size	 GetTrainerEyeRematchFlag,.Lfe66-GetTrainerEyeRematchFlag
	.align	2, 0
	.globl	sub_8082A90
	.type	 sub_8082A90,function
	.thumb_func
sub_8082A90:
	push	{r4, r5, r6, r7, lr}
	add	r4, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	bl	sub_8082894
	add	r1, r0, #0
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	bne	.L475	@cond_branch
	mov	r0, #0x0
	b	.L483
.L484:
	sub	r0, r6, #0x1
	lsl	r0, r0, #0x1
	add	r0, r7, r0
	ldrh	r0, [r0]
	b	.L486
.L485:
	ldrh	r0, [r5]
	b	.L486
.L475:
	lsl	r0, r1, #0x4
	add	r7, r4, r0
	mov	r6, #0x1
	add	r5, r7, #0x2
	add	r4, r5, #0
.L479:
	ldrh	r0, [r4]
	cmp	r0, #0
	beq	.L484	@cond_branch
	bl	HasTrainerAlreadyBeenFought
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L485	@cond_branch
	add	r4, r4, #0x2
	add	r5, r5, #0x2
	add	r6, r6, #0x1
	cmp	r6, #0x4
	ble	.L479	@cond_branch
	ldrh	r0, [r7, #0x8]
.L486:
.L483:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe67:
	.size	 sub_8082A90,.Lfe67-sub_8082A90
	.align	2, 0
	.globl	ClearTrainerEyeRematchFlag
	.type	 ClearTrainerEyeRematchFlag,function
	.thumb_func
ClearTrainerEyeRematchFlag:
	push	{lr}
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	bl	sub_80828B8
	add	r1, r0, #0
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L488	@cond_branch
	ldr	r0, .L489
	ldr	r2, .L489+0x4
	add	r0, r0, r2
	add	r0, r1, r0
	mov	r1, #0x0
	strb	r1, [r0]
.L488:
	pop	{r0}
	bx	r0
.L490:
	.align	2, 0
.L489:
	.word	gSaveBlock1
	.word	0x97a
.Lfe68:
	.size	 ClearTrainerEyeRematchFlag,.Lfe68-ClearTrainerEyeRematchFlag
	.align	2, 0
	.globl	sub_8082B10
	.type	 sub_8082B10,function
	.thumb_func
sub_8082B10:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	bl	sub_8082894
	add	r1, r0, #0
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L492	@cond_branch
	lsl	r0, r1, #0x4
	add	r0, r0, r4
	ldrh	r0, [r0, #0x2]
	bl	HasTrainerAlreadyBeenFought
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L492	@cond_branch
	mov	r0, #0x1
	b	.L494
.L492:
	mov	r0, #0x0
.L494:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe69:
	.size	 sub_8082B10,.Lfe69-sub_8082B10
	.align	2, 0
	.globl	sub_8082B44
	.type	 sub_8082B44,function
	.thumb_func
sub_8082B44:
	push	{r4, r5, r6, lr}
	mov	r6, #0x0
	mov	r5, #0x0
	ldr	r4, .L504
.L499:
	ldrh	r0, [r4]
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L498	@cond_branch
	add	r6, r6, #0x1
	cmp	r6, #0x4
	ble	.L498	@cond_branch
	mov	r0, #0x1
	b	.L503
.L505:
	.align	2, 0
.L504:
	.word	sBadgeFlags
.L498:
	add	r4, r4, #0x2
	add	r5, r5, #0x1
	cmp	r5, #0x7
	bls	.L499	@cond_branch
	mov	r0, #0x0
.L503:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe70:
	.size	 sub_8082B44,.Lfe70-sub_8082B44
	.align	2, 0
	.globl	sub_8082B78
	.type	 sub_8082B78,function
	.thumb_func
sub_8082B78:
	push	{lr}
	bl	sub_8082B44
	cmp	r0, #0
	beq	.L507	@cond_branch
	ldr	r0, .L511
	ldr	r2, .L511+0x4
	add	r1, r0, r2
	ldrh	r0, [r1]
	cmp	r0, #0xfe
	bls	.L508	@cond_branch
	mov	r0, #0xff
	b	.L510
.L512:
	.align	2, 0
.L511:
	.word	gSaveBlock1
	.word	0x978
.L508:
	add	r0, r0, #0x1
.L510:
	strh	r0, [r1]
.L507:
	pop	{r0}
	bx	r0
.Lfe71:
	.size	 sub_8082B78,.Lfe71-sub_8082B78
	.align	2, 0
	.globl	sub_8082BA4
	.type	 sub_8082BA4,function
	.thumb_func
sub_8082BA4:
	push	{lr}
	bl	sub_8082B44
	cmp	r0, #0
	beq	.L514	@cond_branch
	ldr	r0, .L517
	ldr	r1, .L517+0x4
	add	r0, r0, r1
	ldrh	r0, [r0]
	cmp	r0, #0xfe
	bls	.L514	@cond_branch
	mov	r0, #0x1
	b	.L516
.L518:
	.align	2, 0
.L517:
	.word	gSaveBlock1
	.word	0x978
.L514:
	mov	r0, #0x0
.L516:
	pop	{r1}
	bx	r1
.Lfe72:
	.size	 sub_8082BA4,.Lfe72-sub_8082BA4
	.align	2, 0
	.globl	sub_8082BD0
	.type	 sub_8082BD0,function
	.thumb_func
sub_8082BD0:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	lsl	r1, r1, #0x10
	lsr	r4, r1, #0x10
	bl	sub_8082BA4
	cmp	r0, #0
	beq	.L520	@cond_branch
	ldr	r0, .L521
	add	r1, r5, #0
	add	r2, r4, #0
	bl	UpdateRandomTrainerEyeRematches
	cmp	r0, #0x1
	bne	.L520	@cond_branch
	ldr	r0, .L521+0x4
	ldr	r1, .L521+0x8
	add	r0, r0, r1
	mov	r1, #0x0
	strh	r1, [r0]
.L520:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L522:
	.align	2, 0
.L521:
	.word	gTrainerEyeTrainers
	.word	gSaveBlock1
	.word	0x978
.Lfe73:
	.size	 sub_8082BD0,.Lfe73-sub_8082BD0
	.align	2, 0
	.globl	sub_8082C0C
	.type	 sub_8082C0C,function
	.thumb_func
sub_8082C0C:
	push	{lr}
	add	r3, r0, #0
	add	r2, r1, #0
	lsl	r3, r3, #0x10
	lsr	r3, r3, #0x10
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	ldr	r0, .L524
	add	r1, r3, #0
	bl	sub_80829A8
	pop	{r1}
	bx	r1
.L525:
	.align	2, 0
.L524:
	.word	gTrainerEyeTrainers
.Lfe74:
	.size	 sub_8082C0C,.Lfe74-sub_8082C0C
	.align	2, 0
	.globl	unref_sub_8082C2C
	.type	 unref_sub_8082C2C,function
	.thumb_func
unref_sub_8082C2C:
	push	{lr}
	add	r3, r0, #0
	add	r2, r1, #0
	lsl	r3, r3, #0x10
	lsr	r3, r3, #0x10
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	ldr	r0, .L527
	add	r1, r3, #0
	bl	sub_80829E8
	pop	{r1}
	bx	r1
.L528:
	.align	2, 0
.L527:
	.word	gTrainerEyeTrainers
.Lfe75:
	.size	 unref_sub_8082C2C,.Lfe75-unref_sub_8082C2C
	.align	2, 0
	.globl	sub_8082C4C
	.type	 sub_8082C4C,function
	.thumb_func
sub_8082C4C:
	push	{lr}
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	ldr	r0, .L530
	bl	sub_8082A90
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	pop	{r1}
	bx	r1
.L531:
	.align	2, 0
.L530:
	.word	gTrainerEyeTrainers
.Lfe76:
	.size	 sub_8082C4C,.Lfe76-sub_8082C4C
	.align	2, 0
	.globl	sub_8082C68
	.type	 sub_8082C68,function
	.thumb_func
sub_8082C68:
	push	{r4, r5, lr}
	ldr	r5, .L536
	ldr	r4, .L536+0x4
	ldrh	r1, [r4]
	add	r0, r5, #0
	bl	sub_8082A18
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L533	@cond_branch
	ldrh	r1, [r4]
	add	r0, r5, #0
	bl	sub_8082B10
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	b	.L535
.L537:
	.align	2, 0
.L536:
	.word	gTrainerEyeTrainers
	.word	gTrainerBattleOpponent
.L533:
	mov	r0, #0x1
.L535:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe77:
	.size	 sub_8082C68,.Lfe77-sub_8082C68
	.align	2, 0
	.globl	ScrSpecial_GetTrainerEyeRematchFlag
	.type	 ScrSpecial_GetTrainerEyeRematchFlag,function
	.thumb_func
ScrSpecial_GetTrainerEyeRematchFlag:
	push	{lr}
	ldr	r0, .L539
	ldr	r1, .L539+0x4
	ldrh	r1, [r1]
	bl	GetTrainerEyeRematchFlag
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L540:
	.align	2, 0
.L539:
	.word	gTrainerEyeTrainers
	.word	gTrainerBattleOpponent
.Lfe78:
	.size	 ScrSpecial_GetTrainerEyeRematchFlag,.Lfe78-ScrSpecial_GetTrainerEyeRematchFlag
	.align	2, 0
	.type	 SetTrainerFlagsAfterTrainerEyeRematch,function
	.thumb_func
SetTrainerFlagsAfterTrainerEyeRematch:
	push	{lr}
	ldr	r0, .L542
	ldr	r1, .L542+0x4
	ldrh	r1, [r1]
	bl	ClearTrainerEyeRematchFlag
	bl	SetCurrentTrainerBattledFlag
	pop	{r0}
	bx	r0
.L543:
	.align	2, 0
.L542:
	.word	gTrainerEyeTrainers
	.word	gTrainerBattleOpponent
.Lfe79:
	.size	 SetTrainerFlagsAfterTrainerEyeRematch,.Lfe79-SetTrainerFlagsAfterTrainerEyeRematch
.text
	.align	2, 0
