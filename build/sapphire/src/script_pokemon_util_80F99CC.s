@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
.text
	.align	2, 0
	.globl	sub_80F99CC
	.type	 sub_80F99CC,function
	.thumb_func
sub_80F99CC:
	push	{lr}
	add	sp, sp, #0xfffffffc
	bl	ScriptContext2_Enable
	ldr	r0, .L3
	mov	r1, #0xa
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L3+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	mov	r2, #0x0
	mov	r0, #0x2
	strh	r0, [r1, #0x8]
	sub	r0, r0, #0x3
	str	r2, [sp]
	mov	r1, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.L4:
	.align	2, 0
.L3:
	.word	OpenPartyMenuFromScriptContext
	.word	gTasks
.Lfe1:
	.size	 sub_80F99CC,.Lfe1-sub_80F99CC
	.align	2, 0
	.globl	sub_80F9A0C
	.type	 sub_80F9A0C,function
	.thumb_func
sub_80F9A0C:
	push	{lr}
	add	sp, sp, #0xfffffffc
	bl	ScriptContext2_Enable
	ldr	r0, .L6
	mov	r1, #0xa
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L6+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	mov	r2, #0x0
	mov	r0, #0x3
	strh	r0, [r1, #0x8]
	sub	r0, r0, #0x4
	str	r2, [sp]
	mov	r1, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.L7:
	.align	2, 0
.L6:
	.word	OpenPartyMenuFromScriptContext
	.word	gTasks
.Lfe2:
	.size	 sub_80F9A0C,.Lfe2-sub_80F9A0C
	.align	2, 0
	.globl	sub_80F9A4C
	.type	 sub_80F9A4C,function
	.thumb_func
sub_80F9A4C:
	push	{lr}
	add	sp, sp, #0xfffffffc
	bl	ScriptContext2_Enable
	ldr	r0, .L9
	mov	r1, #0xa
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L9+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	mov	r2, #0x0
	mov	r0, #0x7
	strh	r0, [r1, #0x8]
	sub	r0, r0, #0x8
	str	r2, [sp]
	mov	r1, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.L10:
	.align	2, 0
.L9:
	.word	OpenPartyMenuFromScriptContext
	.word	gTasks
.Lfe3:
	.size	 sub_80F9A4C,.Lfe3-sub_80F9A4C
	.align	2, 0
	.globl	OpenPartyMenuFromScriptContext
	.type	 OpenPartyMenuFromScriptContext,function
	.thumb_func
OpenPartyMenuFromScriptContext:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r2, .L13
	ldrb	r1, [r2, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L12	@cond_branch
	ldrb	r0, [r2, #0x8]
	mov	r1, #0x80
	orr	r0, r0, r1
	strb	r0, [r2, #0x8]
	ldr	r1, .L13+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldrb	r0, [r0, #0x8]
	mov	r1, #0x0
	bl	OpenPartyMenu
	add	r0, r4, #0
	bl	DestroyTask
.L12:
	pop	{r4}
	pop	{r0}
	bx	r0
.L14:
	.align	2, 0
.L13:
	.word	gPaletteFade
	.word	gTasks
.Lfe4:
	.size	 OpenPartyMenuFromScriptContext,.Lfe4-OpenPartyMenuFromScriptContext
	.align	2, 0
	.globl	SetupContestPartyMenu
	.type	 SetupContestPartyMenu,function
	.thumb_func
SetupContestPartyMenu:
	push	{r4, r5, lr}
	ldr	r1, .L36
	mov	r2, #0x99
	lsl	r2, r2, #0x2
	add	r0, r1, r2
	mov	r2, #0x0
	ldrsh	r0, [r0, r2]
	add	r4, r1, #0
	cmp	r0, #0x7
	bls	.LCB192
	b	.L16	@long jump
.LCB192:
	lsl	r0, r0, #0x2
	ldr	r1, .L36+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L37:
	.align	2, 0
.L36:
	.word	gSharedMem+0x1b000
	.word	.L31
	.align	2, 0
	.align	2, 0
.L31:
	.word	.L17
	.word	.L20
	.word	.L21
	.word	.L22
	.word	.L25
	.word	.L26
	.word	.L27
	.word	.L28
.L17:
	ldr	r0, .L38
	add	r5, r4, r0
	mov	r1, #0x0
	ldrsh	r3, [r5, r1]
	ldr	r0, .L38+0x4
	ldrb	r0, [r0]
	cmp	r3, r0
	bge	.L18	@cond_branch
	mov	r2, #0x98
	lsl	r2, r2, #0x2
	add	r0, r4, r2
	ldrb	r0, [r0]
	ldrb	r1, [r5]
	mov	r2, #0x64
	mul	r2, r2, r3
	ldr	r3, .L38+0x8
	add	r2, r2, r3
	bl	TryCreatePartyMenuMonIcon
	b	.L29
.L39:
	.align	2, 0
.L38:
	.word	0x266
	.word	gPlayerPartyCount
	.word	gPlayerParty
.L18:
	mov	r0, #0x0
	strh	r0, [r5]
	mov	r0, #0x99
	lsl	r0, r0, #0x2
	add	r1, r4, r0
	b	.L34
.L20:
	bl	LoadHeldItemIconGraphics
	b	.L35
.L21:
	mov	r1, #0x98
	lsl	r1, r1, #0x2
	add	r0, r4, r1
	ldrb	r0, [r0]
	bl	CreateHeldItemIcons_806DC34
	mov	r2, #0x99
	lsl	r2, r2, #0x2
	add	r1, r4, r2
	b	.L34
.L22:
	mov	r1, #0x98
	lsl	r1, r1, #0x2
	add	r0, r4, r1
	ldrb	r0, [r0]
	ldr	r2, .L40
	add	r5, r4, r2
	ldrb	r1, [r5]
	bl	sub_806BD58
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L29	@cond_branch
	mov	r0, #0x0
	strh	r0, [r5]
	mov	r0, #0x99
	lsl	r0, r0, #0x2
	add	r1, r4, r0
	b	.L34
.L41:
	.align	2, 0
.L40:
	.word	0x266
.L25:
	bl	PartyMenuPrintMonsLevelOrStatus
	b	.L35
.L26:
	bl	PrintPartyMenuMonNicknames
	ldr	r1, .L42
	mov	r0, #0x99
	lsl	r0, r0, #0x2
	add	r1, r1, r0
	b	.L34
.L43:
	.align	2, 0
.L42:
	.word	gSharedMem+0x1b000
.L27:
	bl	sub_80F9C00
.L35:
	ldr	r1, .L44
	mov	r2, #0x99
	lsl	r2, r2, #0x2
	add	r1, r1, r2
.L34:
	ldrh	r0, [r1]
	add	r0, r0, #0x1
	strh	r0, [r1]
	b	.L16
.L45:
	.align	2, 0
.L44:
	.word	gSharedMem+0x1b000
.L28:
	ldr	r0, .L46
	add	r5, r4, r0
	ldrb	r0, [r5]
	bl	DrawPartyMonBackground
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L29	@cond_branch
	mov	r1, #0x0
	strh	r1, [r5]
	mov	r2, #0x99
	lsl	r2, r2, #0x2
	add	r0, r4, r2
	strh	r1, [r0]
	mov	r0, #0x1
	b	.L33
.L47:
	.align	2, 0
.L46:
	.word	0x266
.L29:
	ldrh	r0, [r5]
	add	r0, r0, #0x1
	strh	r0, [r5]
.L16:
	mov	r0, #0x0
.L33:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe5:
	.size	 SetupContestPartyMenu,.Lfe5-SetupContestPartyMenu
	.align	2, 0
	.globl	sub_80F9C00
	.type	 sub_80F9C00,function
	.thumb_func
sub_80F9C00:
	push	{r4, lr}
	mov	r4, #0x0
	b	.L62
.L52:
	mov	r0, #0x64
	mul	r0, r0, r4
	ldr	r1, .L63
	add	r0, r0, r1
	bl	sub_80AE47C
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x4
	bhi	.L51	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L63+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L64:
	.align	2, 0
.L63:
	.word	gPlayerParty
	.word	.L59
	.align	2, 0
	.align	2, 0
.L59:
	.word	.L56
	.word	.L58
	.word	.L58
	.word	.L56
	.word	.L56
.L56:
	add	r0, r4, #0
	mov	r1, #0x7e
	bl	sub_806BC3C
	b	.L51
.L58:
	add	r0, r4, #0
	mov	r1, #0x70
	bl	sub_806BC3C
.L51:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
.L62:
	ldr	r0, .L65
	ldrb	r0, [r0]
	cmp	r4, r0
	bcc	.L52	@cond_branch
	pop	{r4}
	pop	{r0}
	bx	r0
.L66:
	.align	2, 0
.L65:
	.word	gPlayerPartyCount
.Lfe6:
	.size	 sub_80F9C00,.Lfe6-sub_80F9C00
	.align	2, 0
	.globl	HandleSelectPartyMenu
	.type	 HandleSelectPartyMenu,function
	.thumb_func
HandleSelectPartyMenu:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L74
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L68	@cond_branch
	add	r0, r4, #0
	bl	HandleDefaultPartyMenuInput
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x1
	beq	.L70	@cond_branch
	cmp	r0, #0x2
	beq	.L71	@cond_branch
	b	.L68
.L75:
	.align	2, 0
.L74:
	.word	gPaletteFade
.L70:
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r4, #0
	bl	sub_806CA38
	ldr	r1, .L76
	strb	r0, [r1]
	ldr	r2, .L76+0x4
	ldrb	r0, [r1]
	strh	r0, [r2]
	add	r0, r4, #0
	bl	sub_8123138
	b	.L68
.L77:
	.align	2, 0
.L76:
	.word	gUnknown_02038694
	.word	gSpecialVar_0x8004
.L71:
	mov	r0, #0x5
	bl	PlaySE
	ldr	r1, .L78
	mov	r0, #0xff
	strb	r0, [r1]
	ldr	r1, .L78+0x4
	mov	r0, #0xff
	strh	r0, [r1]
	add	r0, r4, #0
	bl	sub_8123138
.L68:
	pop	{r4}
	pop	{r0}
	bx	r0
.L79:
	.align	2, 0
.L78:
	.word	gUnknown_02038694
	.word	gSpecialVar_0x8004
.Lfe7:
	.size	 HandleSelectPartyMenu,.Lfe7-HandleSelectPartyMenu
	.align	2, 0
	.globl	SetupMoveTutorPartyMenu
	.type	 SetupMoveTutorPartyMenu,function
	.thumb_func
SetupMoveTutorPartyMenu:
	push	{r4, r5, lr}
	ldr	r1, .L101
	mov	r2, #0x99
	lsl	r2, r2, #0x2
	add	r0, r1, r2
	mov	r2, #0x0
	ldrsh	r0, [r0, r2]
	add	r4, r1, #0
	cmp	r0, #0x7
	bls	.LCB580
	b	.L81	@long jump
.LCB580:
	lsl	r0, r0, #0x2
	ldr	r1, .L101+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L102:
	.align	2, 0
.L101:
	.word	gSharedMem+0x1b000
	.word	.L96
	.align	2, 0
	.align	2, 0
.L96:
	.word	.L82
	.word	.L85
	.word	.L86
	.word	.L87
	.word	.L90
	.word	.L91
	.word	.L92
	.word	.L93
.L82:
	ldr	r0, .L103
	add	r5, r4, r0
	mov	r1, #0x0
	ldrsh	r3, [r5, r1]
	ldr	r0, .L103+0x4
	ldrb	r0, [r0]
	cmp	r3, r0
	bge	.L83	@cond_branch
	mov	r2, #0x98
	lsl	r2, r2, #0x2
	add	r0, r4, r2
	ldrb	r0, [r0]
	ldrb	r1, [r5]
	mov	r2, #0x64
	mul	r2, r2, r3
	ldr	r3, .L103+0x8
	add	r2, r2, r3
	bl	TryCreatePartyMenuMonIcon
	b	.L94
.L104:
	.align	2, 0
.L103:
	.word	0x266
	.word	gPlayerPartyCount
	.word	gPlayerParty
.L83:
	mov	r0, #0x0
	strh	r0, [r5]
	mov	r0, #0x99
	lsl	r0, r0, #0x2
	add	r1, r4, r0
	b	.L99
.L85:
	bl	LoadHeldItemIconGraphics
	b	.L100
.L86:
	mov	r1, #0x98
	lsl	r1, r1, #0x2
	add	r0, r4, r1
	ldrb	r0, [r0]
	bl	CreateHeldItemIcons_806DC34
	mov	r2, #0x99
	lsl	r2, r2, #0x2
	add	r1, r4, r2
	b	.L99
.L87:
	mov	r1, #0x98
	lsl	r1, r1, #0x2
	add	r0, r4, r1
	ldrb	r0, [r0]
	ldr	r2, .L105
	add	r5, r4, r2
	ldrb	r1, [r5]
	bl	sub_806BD58
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L94	@cond_branch
	mov	r0, #0x0
	strh	r0, [r5]
	mov	r0, #0x99
	lsl	r0, r0, #0x2
	add	r1, r4, r0
	b	.L99
.L106:
	.align	2, 0
.L105:
	.word	0x266
.L90:
	bl	PartyMenuPrintMonsLevelOrStatus
	b	.L100
.L91:
	bl	PrintPartyMenuMonNicknames
	ldr	r1, .L107
	mov	r0, #0x99
	lsl	r0, r0, #0x2
	add	r1, r1, r0
	b	.L99
.L108:
	.align	2, 0
.L107:
	.word	gSharedMem+0x1b000
.L92:
	bl	sub_80F9E1C
.L100:
	ldr	r1, .L109
	mov	r2, #0x99
	lsl	r2, r2, #0x2
	add	r1, r1, r2
.L99:
	ldrh	r0, [r1]
	add	r0, r0, #0x1
	strh	r0, [r1]
	b	.L81
.L110:
	.align	2, 0
.L109:
	.word	gSharedMem+0x1b000
.L93:
	ldr	r0, .L111
	add	r5, r4, r0
	ldrb	r0, [r5]
	bl	DrawPartyMonBackground
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L94	@cond_branch
	mov	r1, #0x0
	strh	r1, [r5]
	mov	r2, #0x99
	lsl	r2, r2, #0x2
	add	r0, r4, r2
	strh	r1, [r0]
	mov	r0, #0x1
	b	.L98
.L112:
	.align	2, 0
.L111:
	.word	0x266
.L94:
	ldrh	r0, [r5]
	add	r0, r0, #0x1
	strh	r0, [r5]
.L81:
	mov	r0, #0x0
.L98:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe8:
	.size	 SetupMoveTutorPartyMenu,.Lfe8-SetupMoveTutorPartyMenu
	.align	2, 0
	.globl	sub_80F9E1C
	.type	 sub_80F9E1C,function
	.thumb_func
sub_80F9E1C:
	push	{r4, lr}
	mov	r4, #0x0
	b	.L121
.L117:
	mov	r0, #0x64
	mul	r0, r0, r4
	ldr	r1, .L122
	add	r0, r0, r1
	bl	sub_8040574
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L118	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x9a
	bl	sub_806BC3C
	b	.L116
.L123:
	.align	2, 0
.L122:
	.word	gPlayerParty
.L118:
	add	r0, r4, #0
	mov	r1, #0x8c
	bl	sub_806BC3C
.L116:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
.L121:
	ldr	r0, .L124
	ldrb	r0, [r0]
	cmp	r4, r0
	bcc	.L117	@cond_branch
	pop	{r4}
	pop	{r0}
	bx	r0
.L125:
	.align	2, 0
.L124:
	.word	gPlayerPartyCount
.Lfe9:
	.size	 sub_80F9E1C,.Lfe9-sub_80F9E1C
	.align	2, 0
	.globl	HandleMoveTutorPartyMenu
	.type	 HandleMoveTutorPartyMenu,function
	.thumb_func
HandleMoveTutorPartyMenu:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r0, .L133
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L127	@cond_branch
	add	r0, r6, #0
	bl	HandleDefaultPartyMenuInput
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x1
	beq	.L129	@cond_branch
	cmp	r0, #0x2
	beq	.L130	@cond_branch
	b	.L127
.L134:
	.align	2, 0
.L133:
	.word	gPaletteFade
.L129:
	mov	r0, #0x5
	bl	PlaySE
	ldr	r4, .L135
	add	r0, r6, #0
	bl	sub_806CA38
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4]
	ldr	r5, .L135+0x4
	ldrh	r1, [r4]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L135+0x8
	add	r0, r0, r1
	bl	sub_8040574
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r5]
	add	r0, r6, #0
	bl	sub_8123138
	b	.L127
.L136:
	.align	2, 0
.L135:
	.word	gSpecialVar_0x8004
	.word	gSpecialVar_0x8005
	.word	gPlayerParty
.L130:
	mov	r0, #0x5
	bl	PlaySE
	ldr	r1, .L137
	mov	r0, #0xff
	strh	r0, [r1]
	add	r0, r6, #0
	bl	sub_8123138
.L127:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L138:
	.align	2, 0
.L137:
	.word	gSpecialVar_0x8004
.Lfe10:
	.size	 HandleMoveTutorPartyMenu,.Lfe10-HandleMoveTutorPartyMenu
	.align	2, 0
	.globl	sub_80F9EEC
	.type	 sub_80F9EEC,function
	.thumb_func
sub_80F9EEC:
	push	{r4, lr}
	add	sp, sp, #0xfffffffc
	ldr	r0, .L140
	ldr	r1, .L140+0x4
	ldrb	r1, [r1]
	ldr	r2, .L140+0x8
	ldrb	r2, [r2]
	sub	r2, r2, #0x1
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	ldr	r3, .L140+0xc
	mov	r4, #0x0
	str	r4, [sp]
	bl	sub_809D9F0
	ldr	r1, .L140+0x10
	mov	r0, #0x3
	strb	r0, [r1, #0x8]
	ldr	r1, .L140+0x14
	ldr	r0, .L140+0x18
	str	r0, [r1]
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L141:
	.align	2, 0
.L140:
	.word	gPlayerParty
	.word	gSpecialVar_0x8004
	.word	gPlayerPartyCount
	.word	c2_exit_to_overworld_2_switch
	.word	gSharedMem+0x18000
	.word	gFieldCallback
	.word	sub_8080990
.Lfe11:
	.size	 sub_80F9EEC,.Lfe11-sub_80F9EEC
	.align	2, 0
	.globl	ScrSpecial_CountPokemonMoves
	.type	 ScrSpecial_CountPokemonMoves,function
	.thumb_func
ScrSpecial_CountPokemonMoves:
	push	{r4, r5, lr}
	ldr	r1, .L149
	mov	r0, #0x0
	strh	r0, [r1]
	mov	r4, #0x0
	add	r5, r1, #0
.L146:
	ldr	r0, .L149+0x4
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L149+0x8
	add	r0, r0, r1
	add	r1, r4, #0
	add	r1, r1, #0xd
	bl	GetMonData
	cmp	r0, #0
	beq	.L145	@cond_branch
	ldrh	r0, [r5]
	add	r0, r0, #0x1
	strh	r0, [r5]
.L145:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x3
	bls	.L146	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L150:
	.align	2, 0
.L149:
	.word	gScriptResult
	.word	gSpecialVar_0x8004
	.word	gPlayerParty
.Lfe12:
	.size	 ScrSpecial_CountPokemonMoves,.Lfe12-ScrSpecial_CountPokemonMoves
	.align	2, 0
	.globl	ScrSpecial_GetPokemonNicknameAndMoveName
	.type	 ScrSpecial_GetPokemonNicknameAndMoveName,function
	.thumb_func
ScrSpecial_GetPokemonNicknameAndMoveName:
	push	{r4, r5, lr}
	ldr	r0, .L152
	ldrh	r1, [r0]
	mov	r0, #0x64
	mov	r5, r1
	mul	r5, r5, r0
	ldr	r0, .L152+0x4
	add	r5, r5, r0
	ldr	r0, .L152+0x8
	ldrh	r1, [r0]
	add	r1, r1, #0xd
	add	r0, r5, #0
	bl	GetMonData
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	ldr	r1, .L152+0xc
	add	r0, r5, #0
	bl	GetMonNickname
	ldr	r0, .L152+0x10
	lsl	r1, r4, #0x4
	sub	r1, r1, r4
	ldr	r2, .L152+0x14
	add	r1, r1, r2
	bl	StringCopy
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L153:
	.align	2, 0
.L152:
	.word	gSpecialVar_0x8004
	.word	gPlayerParty
	.word	gSpecialVar_0x8005
	.word	gStringVar1
	.word	gStringVar2
	.word	gMoveNames
.Lfe13:
	.size	 ScrSpecial_GetPokemonNicknameAndMoveName,.Lfe13-ScrSpecial_GetPokemonNicknameAndMoveName
	.align	2, 0
	.globl	sub_80F9FDC
	.type	 sub_80F9FDC,function
	.thumb_func
sub_80F9FDC:
	.syntax unified
    push {r4-r7,lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5-r7}
    sub sp, 0x20
    mov r8, r0
    adds r5, r1, 0
    adds r4, r2, 0
    lsls r5, 24
    lsrs r5, 24
    lsls r4, 24
    lsrs r4, 24
    adds r0, r5, 0
    adds r0, 0xD
    str r0, [sp, 0x8]
    mov r0, r8
    ldr r1, [sp, 0x8]
    bl GetMonData
    mov r1, sp
    adds r1, 0x2
    str r1, [sp, 0x14]
    strh r0, [r1]
    adds r3, r4, 0
    adds r3, 0xD
    str r3, [sp, 0xC]
    mov r0, r8
    adds r1, r3, 0
    bl GetMonData
    mov r1, sp
    strh r0, [r1]
    adds r7, r5, 0
    adds r7, 0x11
    str r7, [sp, 0x10]
    mov r0, r8
    adds r1, r7, 0
    bl GetMonData
    mov r1, sp
    adds r1, 0x5
    str r1, [sp, 0x18]
    strb r0, [r1]
    adds r3, r4, 0
    adds r3, 0x11
    str r3, [sp, 0x1C]
    mov r0, r8
    adds r1, r3, 0
    bl GetMonData
    add r7, sp, 0x4
    mov r10, r7
    strb r0, [r7]
    mov r0, r8
    movs r1, 0x15
    bl GetMonData
    mov r6, sp
    adds r6, 0x6
    strb r0, [r6]
    ldr r1, _080FA0D8 @ =gUnknown_08208238
    adds r0, r5, r1
    ldrb r0, [r0]
    mov r9, r0
    ldrb r0, [r6]
    adds r2, r0, 0
    mov r3, r9
    ands r2, r3
    lsls r5, 1
    asrs r2, r5
    lsls r2, 24
    lsrs r2, 24
    adds r1, r4, r1
    ldrb r3, [r1]
    adds r1, r0, 0
    ands r1, r3
    lsls r4, 1
    asrs r1, r4
    lsls r1, 24
    lsrs r1, 24
    mov r7, r9
    bics r0, r7
    strb r0, [r6]
    ldrb r0, [r6]
    bics r0, r3
    strb r0, [r6]
    lsls r2, r4
    lsls r1, r5
    adds r2, r1
    ldrb r0, [r6]
    orrs r0, r2
    strb r0, [r6]
    mov r0, r8
    ldr r1, [sp, 0x8]
    mov r2, sp
    bl SetMonData
    mov r0, r8
    ldr r1, [sp, 0xC]
    ldr r2, [sp, 0x14]
    bl SetMonData
    mov r0, r8
    ldr r1, [sp, 0x10]
    mov r2, r10
    bl SetMonData
    mov r0, r8
    ldr r1, [sp, 0x1C]
    ldr r2, [sp, 0x18]
    bl SetMonData
    mov r0, r8
    movs r1, 0x15
    adds r2, r6, 0
    bl SetMonData
    add sp, 0x20
    pop {r3-r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4-r7}
    pop {r0}
    bx r0
    .align 2, 0
_080FA0D8: .4byte gUnknown_08208238
    .syntax divided
	.code	16
.Lfe14:
	.size	 sub_80F9FDC,.Lfe14-sub_80F9FDC
	.align	2, 0
	.globl	sub_80FA0DC
	.type	 sub_80FA0DC,function
	.thumb_func
sub_80FA0DC:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	ldr	r0, .L161
	mov	r8, r0
	ldrh	r0, [r0]
	mov	r6, #0x64
	mul	r0, r0, r6
	ldr	r5, .L161+0x4
	add	r0, r0, r5
	ldr	r4, .L161+0x8
	ldrb	r2, [r4]
	mov	r1, #0x0
	bl	SetMonMoveSlot
	mov	r1, r8
	ldrh	r0, [r1]
	mul	r0, r0, r6
	add	r0, r0, r5
	ldrb	r1, [r4]
	bl	RemoveMonPPBonus
	ldrh	r4, [r4]
	cmp	r4, #0x2
	bhi	.L157	@cond_branch
.L159:
	ldr	r0, .L161
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L161+0x4
	add	r0, r0, r1
	lsl	r1, r4, #0x18
	lsr	r1, r1, #0x18
	add	r4, r4, #0x1
	lsl	r2, r4, #0x18
	lsr	r2, r2, #0x18
	bl	sub_80F9FDC
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	cmp	r4, #0x2
	bls	.L159	@cond_branch
.L157:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L162:
	.align	2, 0
.L161:
	.word	gSpecialVar_0x8004
	.word	gPlayerParty
	.word	gSpecialVar_0x8005
.Lfe15:
	.size	 sub_80FA0DC,.Lfe15-sub_80FA0DC
	.align	2, 0
	.globl	sub_80FA148
	.type	 sub_80FA148,function
	.thumb_func
sub_80FA148:
	push	{r4, lr}
	ldr	r0, .L165
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L165+0x4
	add	r0, r0, r1
	ldr	r4, .L165+0x8
	mov	r1, #0x0
	strh	r1, [r4]
	mov	r1, #0x2d
	bl	GetMonData
	cmp	r0, #0
	beq	.L164	@cond_branch
	mov	r0, #0x1
	strh	r0, [r4]
.L164:
	pop	{r4}
	pop	{r0}
	bx	r0
.L166:
	.align	2, 0
.L165:
	.word	gSpecialVar_0x8004
	.word	gPlayerParty
	.word	gScriptResult
.Lfe16:
	.size	 sub_80FA148,.Lfe16-sub_80FA148
.text
	.align	2, 0
