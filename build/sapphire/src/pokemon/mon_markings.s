@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section ewram_data,"aw"
	.align	2, 0
	.type	 sMenu,object
	.size	 sMenu,4
sMenu:
	.word	0x0
.text
	.align	2, 0
	.globl	sub_80F727C
	.type	 sub_80F727C,function
	.thumb_func
sub_80F727C:
	ldr	r1, .L3
	str	r0, [r1]
	mov	r1, #0x0
	strb	r1, [r0, #0xb]
	bx	lr
.L4:
	.align	2, 0
.L3:
	.word	sMenu
.Lfe1:
	.size	 sub_80F727C,.Lfe1-sub_80F727C
	.align	2, 0
	.globl	sub_80F728C
	.type	 sub_80F728C,function
	.thumb_func
sub_80F728C:
	push	{lr}
	add	sp, sp, #0xfffffffc
	ldr	r0, .L6
	ldrb	r0, [r0, #0x14]
	lsr	r0, r0, #0x3
	bl	GetTextWindowFrameGraphics
	ldr	r3, .L6+0x4
	ldr	r2, [r3]
	ldr	r1, [r0]
	str	r1, [r2, #0x28]
	ldr	r0, [r0, #0x4]
	str	r0, [r2, #0x2c]
	ldr	r0, .L6+0x8
	add	r2, r2, r0
	mov	r1, #0x0
	strb	r1, [r2]
	mov	r0, sp
	strh	r1, [r0]
	ldr	r1, [r3]
	add	r1, r1, #0x30
	ldr	r2, .L6+0xc
	bl	CpuSet
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.L7:
	.align	2, 0
.L6:
	.word	gSaveBlock2
	.word	sMenu
	.word	0x10b0
	.word	0x1000800
.Lfe2:
	.size	 sub_80F728C,.Lfe2-sub_80F728C
	.align	2, 0
	.globl	sub_80F72D4
	.type	 sub_80F72D4,function
	.thumb_func
sub_80F72D4:
	push	{r4, r5, r6, r7, lr}
	ldr	r0, .L34
	ldr	r1, [r0]
	ldr	r2, .L34+0x4
	add	r0, r1, r2
	ldrb	r2, [r0]
	lsl	r0, r2, #0x8
	add	r0, r0, #0x30
	add	r5, r1, r0
	cmp	r2, #0xd
	beq	.L22	@cond_branch
	cmp	r2, #0xd
	bgt	.L30	@cond_branch
	cmp	r2, #0
	beq	.L10	@cond_branch
	b	.L16
.L35:
	.align	2, 0
.L34:
	.word	sMenu
	.word	0x10b0
.L30:
	cmp	r2, #0xe
	beq	.L33	@cond_branch
	b	.L16
.L10:
	ldr	r0, [r1, #0x28]
	add	r1, r5, #0
	mov	r2, #0x8
	bl	CpuFastSet
	mov	r4, #0x0
	add	r7, r5, #0
	add	r7, r7, #0xe0
.L14:
	ldr	r6, .L36
	ldr	r0, [r6]
	ldr	r0, [r0, #0x28]
	add	r0, r0, #0x20
	add	r4, r4, #0x1
	lsl	r1, r4, #0x5
	add	r1, r5, r1
	mov	r2, #0x8
	bl	CpuFastSet
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	cmp	r4, #0x5
	bls	.L14	@cond_branch
	ldr	r0, [r6]
	ldr	r0, [r0, #0x28]
	add	r0, r0, #0x40
	add	r1, r7, #0
	mov	r2, #0x8
	bl	CpuFastSet
	ldr	r1, [r6]
	ldr	r0, .L36+0x4
	add	r1, r1, r0
	b	.L32
.L37:
	.align	2, 0
.L36:
	.word	sMenu
	.word	0x10b0
.L16:
	ldr	r0, .L38
	ldr	r0, [r0]
	ldr	r0, [r0, #0x28]
	add	r0, r0, #0x60
	add	r1, r5, #0
	mov	r2, #0x8
	bl	CpuFastSet
	mov	r4, #0x0
	add	r7, r5, #0
	add	r7, r7, #0xe0
.L20:
	ldr	r6, .L38
	ldr	r0, [r6]
	ldr	r0, [r0, #0x28]
	add	r0, r0, #0x80
	add	r4, r4, #0x1
	lsl	r1, r4, #0x5
	add	r1, r5, r1
	mov	r2, #0x8
	bl	CpuFastSet
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	cmp	r4, #0x5
	bls	.L20	@cond_branch
	ldr	r0, [r6]
	ldr	r0, [r0, #0x28]
	add	r0, r0, #0xa0
	add	r1, r7, #0
	mov	r2, #0x8
	bl	CpuFastSet
	ldr	r1, [r6]
	ldr	r2, .L38+0x4
	add	r1, r1, r2
.L32:
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L9
.L39:
	.align	2, 0
.L38:
	.word	sMenu
	.word	0x10b0
.L22:
	ldr	r0, [r1, #0x28]
	add	r0, r0, #0xc0
	add	r1, r5, #0
	mov	r2, #0x8
	bl	CpuFastSet
	mov	r4, #0x0
	add	r7, r5, #0
	add	r7, r7, #0xe0
.L26:
	ldr	r6, .L40
	ldr	r0, [r6]
	ldr	r0, [r0, #0x28]
	add	r0, r0, #0xe0
	add	r4, r4, #0x1
	lsl	r1, r4, #0x5
	add	r1, r5, r1
	mov	r2, #0x8
	bl	CpuFastSet
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	cmp	r4, #0x5
	bls	.L26	@cond_branch
	ldr	r0, [r6]
	ldr	r0, [r0, #0x28]
	mov	r1, #0x80
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	add	r1, r7, #0
	mov	r2, #0x8
	bl	CpuFastSet
	ldr	r1, [r6]
	ldr	r2, .L40+0x4
	add	r1, r1, r2
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
.L33:
	mov	r0, #0x0
	b	.L31
.L41:
	.align	2, 0
.L40:
	.word	sMenu
	.word	0x10b0
.L9:
	mov	r0, #0x1
.L31:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe3:
	.size	 sub_80F72D4,.Lfe3-sub_80F72D4
	.align	2, 0
	.globl	sub_80F7404
	.type	 sub_80F7404,function
	.thumb_func
sub_80F7404:
	push	{lr}
	bl	sub_80F728C
.L43:
	bl	sub_80F72D4
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L43	@cond_branch
	pop	{r0}
	bx	r0
.Lfe4:
	.size	 sub_80F7404,.Lfe4-sub_80F7404
	.align	2, 0
	.globl	sub_80F7418
	.type	 sub_80F7418,function
	.thumb_func
sub_80F7418:
	push	{r4, r5, r6, lr}
	lsl	r1, r1, #0x10
	lsr	r5, r1, #0x10
	lsl	r2, r2, #0x10
	lsr	r6, r2, #0x10
	ldr	r2, .L53
	ldr	r3, [r2]
	mov	r1, #0x0
	strb	r1, [r3, #0x5]
	ldr	r1, [r2]
	strb	r0, [r1, #0x4]
	mov	r3, #0x0
	add	r4, r2, #0
	mov	r2, #0x1
.L51:
	ldr	r0, [r4]
	add	r1, r0, #0x6
	add	r1, r1, r3
	ldrb	r0, [r0, #0x4]
	asr	r0, r0, r3
	and	r0, r0, r2
	strb	r0, [r1]
	add	r0, r3, #0x1
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	cmp	r3, #0x3
	bls	.L51	@cond_branch
	bl	DestroyMenuCursor
	lsl	r0, r5, #0x10
	asr	r0, r0, #0x10
	lsl	r1, r6, #0x10
	asr	r1, r1, #0x10
	ldr	r2, .L53
	ldr	r3, [r2]
	ldrh	r2, [r3]
	ldrh	r3, [r3, #0x2]
	bl	sub_80F761C
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L54:
	.align	2, 0
.L53:
	.word	sMenu
.Lfe5:
	.size	 sub_80F7418,.Lfe5-sub_80F7418
	.align	2, 0
	.globl	sub_80F7470
	.type	 sub_80F7470,function
	.thumb_func
sub_80F7470:
	push	{r4, r5, lr}
	mov	r4, #0x0
	ldr	r5, .L74
.L59:
	ldr	r0, [r5]
	ldrh	r0, [r0]
	add	r0, r4, r0
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	FreeSpriteTilesByTag
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r4, #0x2
	bls	.L59	@cond_branch
	ldr	r4, .L74
	ldr	r0, [r4]
	ldrh	r0, [r0, #0x2]
	bl	FreeSpritePaletteByTag
	ldr	r0, [r4]
	ldrh	r0, [r0, #0x2]
	add	r0, r0, #0x1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	FreeSpritePaletteByTag
	mov	r4, #0x0
.L64:
	ldr	r0, .L74
	ldr	r0, [r0]
	lsl	r1, r4, #0x2
	add	r0, r0, #0xc
	add	r0, r0, r1
	ldr	r0, [r0]
	cmp	r0, #0
	beq	.L55	@cond_branch
	bl	DestroySprite
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r4, #0x1
	bls	.L64	@cond_branch
	mov	r4, #0x0
.L70:
	ldr	r5, .L74
	ldr	r0, [r5]
	lsl	r1, r4, #0x2
	add	r0, r0, #0x14
	add	r0, r0, r1
	ldr	r0, [r0]
	cmp	r0, #0
	beq	.L55	@cond_branch
	bl	DestroySprite
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r4, #0x3
	bls	.L70	@cond_branch
	bl	DestroyMenuCursor
	ldr	r0, [r5]
	ldr	r0, [r0, #0x24]
	cmp	r0, #0
	beq	.L55	@cond_branch
	bl	DestroySprite
.L55:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L75:
	.align	2, 0
.L74:
	.word	sMenu
.Lfe6:
	.size	 sub_80F7470,.Lfe6-sub_80F7470
	.align	2, 0
	.globl	sub_80F7500
	.type	 sub_80F7500,function
	.thumb_func
sub_80F7500:
	push	{r4, r5, lr}
	add	sp, sp, #0xffffffd0
	ldr	r4, .L100
	ldr	r2, [r4]
	add	r0, r2, #0
	add	r0, r0, #0x30
	str	r0, [sp, #0x18]
	add	r1, sp, #0x1c
	mov	r5, #0x0
	mov	r0, #0x80
	lsl	r0, r0, #0x5
	strh	r0, [r1]
	ldrh	r1, [r2]
	mov	r0, sp
	add	r0, r0, #0x1e
	strh	r1, [r0]
	add	r1, sp, #0x20
	ldr	r0, .L100+0x4
	str	r0, [sp, #0x20]
	mov	r0, #0xa4
	lsl	r0, r0, #0x3
	strh	r0, [r1, #0x4]
	ldrh	r0, [r2]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x6]
	add	r0, sp, #0x28
	mov	r1, #0x0
	mov	r2, #0x8
	bl	memset
	add	r1, sp, #0x18
	mov	r0, sp
	mov	r2, #0x18
	bl	memcpy
	ldr	r0, [r4]
	ldrb	r0, [r0, #0xb]
	cmp	r0, #0
	beq	.L77	@cond_branch
	mov	r0, sp
	bl	LoadTilesForSpriteSheets
	ldr	r0, [r4]
	strb	r5, [r0, #0xb]
.L77:
	ldr	r0, .L100+0x8
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L78	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r1, [r4]
	ldrb	r0, [r1, #0x5]
	sub	r0, r0, #0x1
	strb	r0, [r1, #0x5]
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bge	.L99	@cond_branch
	ldr	r1, [r4]
	mov	r0, #0x5
	strb	r0, [r1, #0x5]
	b	.L99
.L101:
	.align	2, 0
.L100:
	.word	sMenu
	.word	gPokenavConditionMenuMisc_Gfx
	.word	gMain
.L78:
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L80	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r1, [r4]
	ldrb	r0, [r1, #0x5]
	add	r0, r0, #0x1
	strb	r0, [r1, #0x5]
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	cmp	r0, #0x5
	ble	.L99	@cond_branch
	ldr	r0, [r4]
	strb	r5, [r0, #0x5]
	b	.L99
.L80:
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L82	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, [r4]
	mov	r1, #0x5
	ldrsb	r1, [r0, r1]
	cmp	r1, #0x4
	beq	.L84	@cond_branch
	cmp	r1, #0x5
	beq	.L98	@cond_branch
	add	r0, r0, #0x6
	add	r1, r0, r1
	mov	r2, #0x0
	ldrb	r0, [r1]
	cmp	r0, #0
	bne	.L93	@cond_branch
	mov	r2, #0x1
	b	.L93
.L84:
	strb	r5, [r0, #0x4]
	mov	r3, #0x0
.L88:
	ldr	r2, [r4]
	add	r0, r2, #0x6
	add	r0, r0, r3
	ldrb	r0, [r0]
	lsl	r0, r0, r3
	ldrb	r1, [r2, #0x4]
	orr	r0, r0, r1
	strb	r0, [r2, #0x4]
	add	r0, r3, #0x1
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	cmp	r3, #0x3
	bls	.L88	@cond_branch
	b	.L98
.L93:
	strb	r2, [r1]
.L99:
	mov	r0, #0x1
	b	.L95
.L82:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L99	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
.L98:
	mov	r0, #0x0
.L95:
	add	sp, sp, #0x30
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe7:
	.size	 sub_80F7500,.Lfe7-sub_80F7500
	.align	2, 0
	.globl	sub_80F761C
	.type	 sub_80F761C,function
	.thumb_func
sub_80F761C:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #0xffffffa4
	add	r5, r2, #0
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	str	r0, [sp, #0x4c]
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	str	r1, [sp, #0x50]
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	lsl	r3, r3, #0x10
	lsr	r3, r3, #0x10
	str	r3, [sp, #0x54]
	ldr	r0, .L122
	mov	r8, r0
	ldr	r0, [r0]
	add	r0, r0, #0x30
	str	r0, [sp, #0x1c]
	add	r1, sp, #0x20
	mov	r2, #0x0
	mov	r9, r2
	mov	r0, #0x80
	lsl	r0, r0, #0x5
	strh	r0, [r1]
	mov	r0, sp
	add	r0, r0, #0x22
	strh	r5, [r0]
	add	r1, sp, #0x24
	ldr	r0, .L122+0x4
	str	r0, [sp, #0x24]
	mov	r0, #0xa4
	lsl	r0, r0, #0x3
	strh	r0, [r1, #0x4]
	add	r0, r5, #0x1
	strh	r0, [r1, #0x6]
	add	r0, sp, #0x2c
	mov	r1, #0x0
	mov	r2, #0x8
	bl	memset
	add	r6, sp, #0x1c
	add	r0, sp, #0x4
	add	r1, r6, #0
	mov	r2, #0x18
	bl	memcpy
	mov	r3, r8
	ldr	r0, [r3]
	ldr	r0, [r0, #0x2c]
	str	r0, [sp, #0x34]
	add	r0, sp, #0x38
	add	r1, sp, #0x54
	ldrh	r1, [r1]
	strh	r1, [r0]
	add	r1, sp, #0x3c
	ldr	r0, .L122+0x8
	str	r0, [sp, #0x3c]
	ldr	r0, [sp, #0x54]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x4]
	add	r0, sp, #0x44
	mov	r1, #0x0
	mov	r2, #0x8
	bl	memset
	add	r4, sp, #0x34
	add	r0, r6, #0
	add	r1, r4, #0
	mov	r2, #0x18
	bl	memcpy
	strh	r5, [r4]
	add	r2, sp, #0x54
	ldrh	r2, [r2]
	strh	r2, [r4, #0x2]
	ldr	r0, .L122+0xc
	str	r0, [r4, #0x4]
	ldr	r0, .L122+0x10
	str	r0, [r4, #0x8]
	mov	r3, r9
	str	r3, [r4, #0xc]
	ldr	r0, .L122+0x14
	str	r0, [r4, #0x10]
	ldr	r0, .L122+0x18
	str	r0, [r4, #0x14]
	mov	r0, r8
	ldr	r1, [r0]
	mov	r0, #0x1
	strb	r0, [r1, #0xb]
	add	r0, sp, #0x4
	bl	AllocTilesForSpriteSheets
	add	r0, r6, #0
	bl	LoadSpritePalettes
	mov	r5, #0x0
	ldr	r1, [sp, #0x4c]
	lsl	r0, r1, #0x10
	mov	r2, #0x80
	lsl	r2, r2, #0xe
	add	r2, r2, r0
	mov	r8, r2
	str	r0, [sp, #0x58]
	ldr	r3, [sp, #0x50]
	lsl	r0, r3, #0x10
	mov	r1, #0x80
	lsl	r1, r1, #0xe
	add	r7, r0, r1
	mov	r9, r0
.L106:
	add	r0, r4, #0
	mov	r2, r8
	asr	r1, r2, #0x10
	asr	r2, r7, #0x10
	mov	r3, #0x2
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0x40
	bne	.LCB840
	b	.L119	@long jump
.LCB840:
	ldr	r6, .L122
	ldr	r2, [r6]
	lsl	r0, r5, #0x2
	add	r2, r2, #0xc
	add	r2, r2, r0
	lsl	r0, r3, #0x4
	add	r0, r0, r3
	lsl	r0, r0, #0x2
	ldr	r1, .L122+0x1c
	add	r0, r0, r1
	str	r0, [r2]
	lsl	r1, r5, #0x18
	lsr	r1, r1, #0x18
	bl	StartSpriteAnim
	add	r0, r5, #0x1
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	cmp	r5, #0x1
	bls	.L106	@cond_branch
	ldr	r0, [r6]
	ldr	r1, [r0, #0x10]
	mov	r3, r9
	asr	r0, r3, #0x10
	add	r0, r0, #0x60
	strh	r0, [r1, #0x22]
	ldrh	r0, [r4]
	add	r0, r0, #0x1
	strh	r0, [r4]
	ldrh	r0, [r4, #0x2]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x2]
	ldr	r0, .L122+0x20
	str	r0, [r4, #0x8]
	ldr	r0, .L122+0x24
	str	r0, [r4, #0x14]
	ldr	r0, .L122+0x28
	str	r0, [r4, #0x4]
	mov	r5, #0x0
	ldr	r0, [sp, #0x58]
	mov	r1, #0x80
	lsl	r1, r1, #0xe
	add	r0, r0, r1
	mov	sl, r0
.L113:
	lsl	r2, r5, #0x4
	add	r2, r2, #0x10
	mov	r3, r9
	asr	r3, r3, #0x10
	mov	r8, r3
	add	r2, r2, r8
	lsl	r2, r2, #0x10
	asr	r2, r2, #0x10
	add	r0, r4, #0
	mov	r3, sl
	asr	r1, r3, #0x10
	mov	r3, #0x1
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0x40
	beq	.L120	@cond_branch
	ldr	r6, .L122
	ldr	r1, [r6]
	lsl	r0, r5, #0x2
	add	r1, r1, #0x14
	add	r1, r1, r0
	lsl	r0, r3, #0x4
	add	r0, r0, r3
	lsl	r0, r0, #0x2
	ldr	r7, .L122+0x1c
	add	r0, r0, r7
	str	r0, [r1]
	strh	r5, [r0, #0x2e]
	add	r0, r5, #0x1
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	cmp	r5, #0x3
	bls	.L113	@cond_branch
	ldr	r0, .L122+0x2c
	str	r0, [r4, #0x14]
	add	r0, r4, #0
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x1
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0x40
	beq	.L117	@cond_branch
	ldr	r1, [r6]
	lsl	r0, r3, #0x4
	add	r0, r0, r3
	lsl	r0, r0, #0x2
	add	r0, r0, r7
	str	r0, [r1, #0x24]
	ldrb	r2, [r0, #0x1]
	mov	r1, #0x3f
	and	r1, r1, r2
	mov	r2, #0x40
	orr	r1, r1, r2
	strb	r1, [r0, #0x1]
	ldr	r0, [r6]
	ldr	r2, [r0, #0x24]
	ldrb	r0, [r2, #0x3]
	mov	r1, #0xc0
	orr	r0, r0, r1
	strb	r0, [r2, #0x3]
	ldr	r0, [r6]
	ldr	r0, [r0, #0x24]
	mov	r1, #0x9
	bl	StartSpriteAnim
	ldr	r1, [r6]
	ldr	r2, [r1, #0x24]
	ldr	r3, [sp, #0x58]
	asr	r0, r3, #0x10
	add	r0, r0, #0x20
	strh	r0, [r2, #0x20]
	ldr	r2, [r1, #0x24]
	mov	r0, r8
	add	r0, r0, #0x50
	strh	r0, [r2, #0x22]
	ldr	r0, [r1, #0x24]
	mov	r1, #0x1
	mov	r2, #0x2
	mov	r3, #0x0
	bl	CalcCenterToCornerVec
	b	.L118
.L123:
	.align	2, 0
.L122:
	.word	sMenu
	.word	gPokenavConditionMenuMisc_Gfx
	.word	gUnknown_08E966B8
	.word	gOamData_83E5214
	.word	gSpriteAnimTable_83E52AC
	.word	gDummySpriteAffineAnimTable
	.word	nullsub_65
	.word	gSprites
	.word	gSpriteAnimTable_83E5274
	.word	sub_80F78CC
	.word	gOamData_83E521C
	.word	SpriteCallbackDummy
.L119:
	ldr	r0, .L124
	ldr	r0, [r0]
	lsl	r1, r5, #0x2
	add	r0, r0, #0xc
	b	.L121
.L125:
	.align	2, 0
.L124:
	.word	sMenu
.L120:
	ldr	r0, .L126
	ldr	r0, [r0]
	lsl	r1, r5, #0x2
	add	r0, r0, #0x14
.L121:
	add	r0, r0, r1
	mov	r1, #0x0
	str	r1, [r0]
	b	.L102
.L127:
	.align	2, 0
.L126:
	.word	sMenu
.L117:
	ldr	r1, [r6]
	mov	r0, #0x0
	str	r0, [r1, #0x24]
.L118:
	ldr	r4, .L128
	ldr	r1, [r4]
	ldr	r0, [sp, #0x50]
	add	r0, r0, #0x8
	strb	r0, [r1, #0xa]
	ldr	r1, [sp, #0x54]
	add	r1, r1, #0x1
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r0, #0x30
	str	r0, [sp]
	mov	r0, #0x0
	mov	r2, #0xf
	mov	r3, #0x0
	bl	sub_814A5C0
	ldr	r0, [sp, #0x4c]
	add	r0, r0, #0x8
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, [r4]
	ldrb	r1, [r1, #0xa]
	bl	sub_814A880
	ldr	r0, .L128+0x4
	bl	sub_814AABC
.L102:
	add	sp, sp, #0x5c
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L129:
	.align	2, 0
.L128:
	.word	sMenu
	.word	sub_80F7908
.Lfe8:
	.size	 sub_80F761C,.Lfe8-sub_80F761C
	.align	2, 0
	.globl	nullsub_65
	.type	 nullsub_65,function
	.thumb_func
nullsub_65:
	bx	lr
.Lfe9:
	.size	 nullsub_65,.Lfe9-nullsub_65
	.align	2, 0
	.globl	sub_80F78CC
	.type	 sub_80F78CC,function
	.thumb_func
sub_80F78CC:
	push	{lr}
	add	r2, r0, #0
	ldr	r0, .L134
	ldr	r0, [r0]
	mov	r3, #0x2e
	ldrsh	r1, [r2, r3]
	add	r0, r0, #0x6
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L132	@cond_branch
	lsl	r1, r1, #0x1
	add	r1, r1, #0x1
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r2, #0
	bl	StartSpriteAnim
	b	.L133
.L135:
	.align	2, 0
.L134:
	.word	sMenu
.L132:
	lsl	r1, r1, #0x19
	lsr	r1, r1, #0x18
	add	r0, r2, #0
	bl	StartSpriteAnim
.L133:
	pop	{r0}
	bx	r0
.Lfe10:
	.size	 sub_80F78CC,.Lfe10-sub_80F78CC
	.align	2, 0
	.globl	sub_80F7908
	.type	 sub_80F7908,function
	.thumb_func
sub_80F7908:
	ldr	r1, .L137
	ldr	r2, [r1]
	mov	r1, #0x5
	ldrsb	r1, [r2, r1]
	lsl	r1, r1, #0x4
	ldrb	r2, [r2, #0xa]
	add	r1, r1, r2
	strh	r1, [r0, #0x22]
	bx	lr
.L138:
	.align	2, 0
.L137:
	.word	sMenu
.Lfe11:
	.size	 sub_80F7908,.Lfe11-sub_80F7908
	.align	2, 0
	.globl	sub_80F7920
	.type	 sub_80F7920,function
	.thumb_func
sub_80F7920:
	push	{lr}
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	cmp	r2, #0
	bne	.L140	@cond_branch
	ldr	r2, .L141
.L140:
	mov	r3, #0x10
	bl	sub_80F7960
	pop	{r1}
	bx	r1
.L142:
	.align	2, 0
.L141:
	.word	gUnknown_083E49F4
.Lfe12:
	.size	 sub_80F7920,.Lfe12-sub_80F7920
	.align	2, 0
	.globl	sub_80F7940
	.type	 sub_80F7940,function
	.thumb_func
sub_80F7940:
	push	{lr}
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	cmp	r2, #0
	bne	.L144	@cond_branch
	ldr	r2, .L145
.L144:
	mov	r3, #0x1
	bl	sub_80F7960
	pop	{r1}
	bx	r1
.L146:
	.align	2, 0
.L145:
	.word	gUnknown_083E49F4
.Lfe13:
	.size	 sub_80F7940,.Lfe13-sub_80F7940
	.align	2, 0
	.globl	sub_80F7960
	.type	 sub_80F7960,function
	.thumb_func
sub_80F7960:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	sp, sp, #0xffffffd8
	lsl	r0, r0, #0x10
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	ldr	r4, .L151
	str	r4, [sp, #0x18]
	mov	r4, #0x80
	add	r5, sp, #0x18
	lsr	r6, r0, #0x10
	orr	r0, r0, r4
	str	r0, [r5, #0x4]
	str	r2, [sp, #0x20]
	ldr	r0, .L151+0x4
	mov	r8, r0
	add	r4, sp, #0x20
	ldr	r0, [r4, #0x4]
	mov	r2, r8
	and	r0, r0, r2
	orr	r0, r0, r1
	str	r0, [r4, #0x4]
	mov	r0, sp
	mov	r2, #0x0
	strh	r6, [r0]
	strh	r1, [r0, #0x2]
	ldr	r0, .L151+0x8
	str	r0, [sp, #0x4]
	ldr	r0, .L151+0xc
	str	r0, [sp, #0x8]
	str	r2, [sp, #0xc]
	ldr	r0, .L151+0x10
	str	r0, [sp, #0x10]
	ldr	r0, .L151+0x14
	str	r0, [sp, #0x14]
	lsl	r3, r3, #0x17
	lsr	r3, r3, #0x10
	ldr	r0, [r5, #0x4]
	mov	r1, r8
	and	r0, r0, r1
	orr	r0, r0, r3
	str	r0, [r5, #0x4]
	add	r0, r5, #0
	bl	LoadSpriteSheet
	add	r0, r4, #0
	bl	LoadSpritePalette
	mov	r0, sp
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x40
	bne	.L148	@cond_branch
	mov	r0, #0x0
	b	.L150
.L152:
	.align	2, 0
.L151:
	.word	gUnknown_083E4A14
	.word	0xffff0000
	.word	gOamData_83E52B4
	.word	gSpriteAnimTable_83E533C
	.word	gDummySpriteAffineAnimTable
	.word	nullsub_65
.L148:
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L153
	add	r0, r0, r1
.L150:
	add	sp, sp, #0x28
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L154:
	.align	2, 0
.L153:
	.word	gSprites
.Lfe14:
	.size	 sub_80F7960,.Lfe14-sub_80F7960
	.align	2, 0
	.globl	sub_80F7A10
	.type	 sub_80F7A10,function
	.thumb_func
sub_80F7A10:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x11
	ldr	r2, .L156
	add	r0, r0, r2
	ldr	r2, .L156+0x4
	str	r0, [r2]
	str	r1, [r2, #0x4]
	ldr	r0, .L156+0x8
	str	r0, [r2, #0x8]
	ldr	r0, [r2, #0x8]
	bx	lr
.L157:
	.align	2, 0
.L156:
	.word	gUnknown_083E4A14
	.word	0x40000d4
	.word	0x80000040
.Lfe15:
	.size	 sub_80F7A10,.Lfe15-sub_80F7A10
.text
	.align	2, 0
