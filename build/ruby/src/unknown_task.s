@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
.text
	.align	2, 0
	.globl	remove_some_task
	.type	 remove_some_task,function
	.thumb_func
remove_some_task:
	push	{r4, lr}
	ldr	r4, .L4
	mov	r0, #0x0
	strb	r0, [r4, #0x15]
	ldr	r1, .L4+0x4
	ldrh	r2, [r1, #0xa]
	ldr	r0, .L4+0x8
	and	r0, r0, r2
	strh	r0, [r1, #0xa]
	ldrh	r2, [r1, #0xa]
	ldr	r0, .L4+0xc
	and	r0, r0, r2
	strh	r0, [r1, #0xa]
	ldrh	r0, [r1, #0xa]
	ldrb	r0, [r4, #0x18]
	cmp	r0, #0xff
	beq	.L3	@cond_branch
	bl	DestroyTask
	mov	r0, #0xff
	strb	r0, [r4, #0x18]
.L3:
	pop	{r4}
	pop	{r0}
	bx	r0
.L5:
	.align	2, 0
.L4:
	.word	gUnknown_03004DC0
	.word	0x40000b0
	.word	0xc5ff
	.word	0x7fff
.Lfe1:
	.size	 remove_some_task,.Lfe1-remove_some_task
	.align	2, 0
	.globl	dp12_8087EA4
	.type	 dp12_8087EA4,function
	.thumb_func
dp12_8087EA4:
	push	{r4, lr}
	add	sp, sp, #0xfffffffc
	mov	r0, sp
	mov	r4, #0x0
	strh	r4, [r0]
	ldr	r1, .L7
	ldr	r2, .L7+0x4
	bl	CpuSet
	ldr	r0, .L7+0x8
	mov	r1, #0x0
	str	r1, [r0]
	str	r1, [r0, #0x4]
	str	r1, [r0, #0x8]
	str	r1, [r0, #0xc]
	strb	r4, [r0, #0x14]
	strb	r4, [r0, #0x15]
	strb	r4, [r0, #0x16]
	strb	r4, [r0, #0x17]
	mov	r1, #0xff
	strb	r1, [r0, #0x18]
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L8:
	.align	2, 0
.L7:
	.word	gUnknown_03004DE0
	.word	0x1000780
	.word	gUnknown_03004DC0
.Lfe2:
	.size	 dp12_8087EA4,.Lfe2-dp12_8087EA4
	.align	2, 0
	.globl	sub_80895F8
	.type	 sub_80895F8,function
	.thumb_func
sub_80895F8:
	push	{lr}
	add	sp, sp, #0xfffffff4
	str	r0, [sp]
	str	r1, [sp, #0x4]
	str	r2, [sp, #0x8]
	ldr	r0, .L13
	cmp	r1, r0
	bne	.L10	@cond_branch
	ldr	r0, .L13+0x4
	ldr	r1, .L13+0x8
	str	r1, [r0]
	mov	r2, #0xf0
	lsl	r2, r2, #0x3
	add	r1, r1, r2
	str	r1, [r0, #0x4]
	ldr	r1, .L13+0xc
	b	.L12
.L14:
	.align	2, 0
.L13:
	.word	0xa2600001
	.word	gUnknown_03004DC0
	.word	gUnknown_03004DE0+0x2
	.word	sub_80896F4
.L10:
	ldr	r0, .L15
	ldr	r1, .L15+0x4
	str	r1, [r0]
	mov	r2, #0xf0
	lsl	r2, r2, #0x3
	add	r1, r1, r2
	str	r1, [r0, #0x4]
	ldr	r1, .L15+0x8
.L12:
	str	r1, [r0, #0x10]
	add	r1, r0, #0
	ldr	r0, [sp, #0x4]
	str	r0, [r1, #0xc]
	ldr	r0, [sp]
	str	r0, [r1, #0x8]
	mov	r0, sp
	ldrb	r0, [r0, #0x8]
	strb	r0, [r1, #0x15]
	mov	r0, sp
	ldrb	r0, [r0, #0x9]
	strb	r0, [r1, #0x16]
	strb	r0, [r1, #0x17]
	add	sp, sp, #0xc
	pop	{r0}
	bx	r0
.L16:
	.align	2, 0
.L15:
	.word	gUnknown_03004DC0
	.word	gUnknown_03004DE0+0x4
	.word	sub_8089714
.Lfe3:
	.size	 sub_80895F8,.Lfe3-sub_80895F8
	.align	2, 0
	.globl	sub_8089668
	.type	 sub_8089668,function
	.thumb_func
sub_8089668:
	push	{r4, lr}
	ldr	r4, .L21
	ldrb	r0, [r4, #0x15]
	cmp	r0, #0
	beq	.L18	@cond_branch
	cmp	r0, #0x3
	bne	.L19	@cond_branch
	mov	r0, #0x0
	strb	r0, [r4, #0x15]
	ldr	r1, .L21+0x4
	ldrh	r2, [r1, #0xa]
	ldr	r0, .L21+0x8
	and	r0, r0, r2
	strh	r0, [r1, #0xa]
	ldrh	r2, [r1, #0xa]
	ldr	r0, .L21+0xc
	and	r0, r0, r2
	strh	r0, [r1, #0xa]
	ldrh	r0, [r1, #0xa]
	ldr	r1, .L21+0x10
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L18
.L22:
	.align	2, 0
.L21:
	.word	gUnknown_03004DC0
	.word	0x40000b0
	.word	0xc5ff
	.word	0x7fff
	.word	gUnknown_0202FFA4
.L19:
	ldr	r1, .L23
	ldrh	r2, [r1, #0xa]
	ldr	r0, .L23+0x4
	and	r0, r0, r2
	strh	r0, [r1, #0xa]
	ldrh	r2, [r1, #0xa]
	ldr	r0, .L23+0x8
	and	r0, r0, r2
	strh	r0, [r1, #0xa]
	ldrh	r0, [r1, #0xa]
	ldrb	r0, [r4, #0x14]
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	ldr	r0, [r0]
	str	r0, [r1]
	ldr	r0, [r4, #0x8]
	str	r0, [r1, #0x4]
	ldr	r0, [r4, #0xc]
	str	r0, [r1, #0x8]
	ldr	r0, [r1, #0x8]
	ldr	r0, [r4, #0x10]
	bl	_call_via_r0
	ldrb	r0, [r4, #0x14]
	mov	r1, #0x1
	eor	r0, r0, r1
	strb	r0, [r4, #0x14]
.L18:
	pop	{r4}
	pop	{r0}
	bx	r0
.L24:
	.align	2, 0
.L23:
	.word	0x40000b0
	.word	0xc5ff
	.word	0x7fff
.Lfe4:
	.size	 sub_8089668,.Lfe4-sub_8089668
	.align	2, 0
	.type	 sub_80896F4,function
	.thumb_func
sub_80896F4:
	ldr	r0, .L26
	ldr	r2, [r0, #0x8]
	ldrb	r1, [r0, #0x14]
	lsl	r0, r1, #0x4
	sub	r0, r0, r1
	lsl	r0, r0, #0x7
	ldr	r1, .L26+0x4
	add	r0, r0, r1
	ldrh	r0, [r0]
	strh	r0, [r2]
	bx	lr
.L27:
	.align	2, 0
.L26:
	.word	gUnknown_03004DC0
	.word	gUnknown_03004DE0
.Lfe5:
	.size	 sub_80896F4,.Lfe5-sub_80896F4
	.align	2, 0
	.type	 sub_8089714,function
	.thumb_func
sub_8089714:
	ldr	r0, .L29
	ldr	r2, [r0, #0x8]
	ldrb	r1, [r0, #0x14]
	lsl	r0, r1, #0x4
	sub	r0, r0, r1
	lsl	r0, r0, #0x7
	ldr	r1, .L29+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	str	r0, [r2]
	bx	lr
.L30:
	.align	2, 0
.L29:
	.word	gUnknown_03004DC0
	.word	gUnknown_03004DE0
.Lfe6:
	.size	 sub_8089714,.Lfe6-sub_8089714
	.align	2, 0
	.type	 task00_for_dp12,function
	.thumb_func
task00_for_dp12:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	ip, r0
	mov	r6, #0x0
	ldr	r0, .L60
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L32	@cond_branch
	mov	r0, ip
	bl	DestroyTask
	ldr	r1, .L60+0x4
	mov	r0, #0xff
	strb	r0, [r1, #0x18]
	b	.L33
.L61:
	.align	2, 0
.L60:
	.word	gUnknown_0202FFA4
	.word	gUnknown_03004DC0
.L32:
	ldr	r1, .L62
	mov	r0, ip
	lsl	r2, r0, #0x2
	add	r0, r2, r0
	lsl	r0, r0, #0x3
	add	r3, r0, r1
	mov	r4, #0x16
	ldrsh	r0, [r3, r4]
	mov	sl, r1
	mov	r9, r2
	cmp	r0, #0
	beq	.L34	@cond_branch
	mov	r1, #0x14
	ldrsh	r0, [r3, r1]
	cmp	r0, #0xe
	bhi	.L34	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L62+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L63:
	.align	2, 0
.L62:
	.word	gTasks
	.word	.L44
	.align	2, 0
	.align	2, 0
.L44:
	.word	.L36
	.word	.L34
	.word	.L37
	.word	.L34
	.word	.L38
	.word	.L34
	.word	.L39
	.word	.L34
	.word	.L40
	.word	.L34
	.word	.L41
	.word	.L34
	.word	.L42
	.word	.L34
	.word	.L43
.L36:
	ldr	r0, .L64
	b	.L59
.L65:
	.align	2, 0
.L64:
	.word	gUnknown_030042A4
.L37:
	ldr	r0, .L66
	b	.L59
.L67:
	.align	2, 0
.L66:
	.word	gUnknown_030042A0
.L38:
	ldr	r0, .L68
	b	.L59
.L69:
	.align	2, 0
.L68:
	.word	gUnknown_030042C0
.L39:
	ldr	r0, .L70
	b	.L59
.L71:
	.align	2, 0
.L70:
	.word	gUnknown_030041B4
.L40:
	ldr	r0, .L72
	b	.L59
.L73:
	.align	2, 0
.L72:
	.word	gUnknown_03004288
.L41:
	ldr	r0, .L74
	b	.L59
.L75:
	.align	2, 0
.L74:
	.word	gUnknown_03004280
.L42:
	ldr	r0, .L76
	b	.L59
.L77:
	.align	2, 0
.L76:
	.word	gUnknown_030041B0
.L43:
	ldr	r0, .L78
.L59:
	ldrh	r6, [r0]
.L34:
	mov	r0, r9
	add	r0, r0, ip
	lsl	r0, r0, #0x3
	mov	r2, sl
	add	r1, r0, r2
	ldrh	r2, [r1, #0x10]
	mov	r3, #0x10
	ldrsh	r0, [r1, r3]
	cmp	r0, #0
	beq	.L46	@cond_branch
	sub	r0, r2, #0x1
	strh	r0, [r1, #0x10]
	mov	r4, #0xe
	ldrsh	r0, [r1, r4]
	mov	r3, #0xa0
	lsl	r3, r3, #0x1
	add	r2, r0, r3
	mov	r4, #0x8
	ldrsh	r3, [r1, r4]
	mov	r4, #0xa
	ldrsh	r0, [r1, r4]
	cmp	r3, r0
	bge	.L33	@cond_branch
	ldr	r5, .L78+0x4
	ldr	r0, .L78+0x8
	mov	r8, r0
	add	r7, r1, #0
	lsl	r0, r2, #0x1
	add	r4, r0, r5
.L50:
	lsl	r2, r3, #0x1
	mov	r0, r8
	ldrb	r1, [r0, #0x14]
	lsl	r0, r1, #0x4
	sub	r0, r0, r1
	lsl	r0, r0, #0x7
	add	r2, r2, r0
	add	r2, r2, r5
	ldrh	r0, [r4]
	add	r0, r0, r6
	strh	r0, [r2]
	add	r4, r4, #0x2
	add	r3, r3, #0x1
	mov	r1, #0xa
	ldrsh	r0, [r7, r1]
	cmp	r3, r0
	blt	.L50	@cond_branch
	b	.L33
.L79:
	.align	2, 0
.L78:
	.word	gUnknown_030041B8
	.word	gUnknown_03004DE0
	.word	gUnknown_03004DC0
.L46:
	ldrh	r0, [r1, #0x12]
	strh	r0, [r1, #0x10]
	mov	r2, #0xe
	ldrsh	r0, [r1, r2]
	mov	r3, #0xa0
	lsl	r3, r3, #0x1
	add	r2, r0, r3
	mov	r4, #0x8
	ldrsh	r3, [r1, r4]
	mov	r4, #0xa
	ldrsh	r0, [r1, r4]
	cmp	r3, r0
	bge	.L54	@cond_branch
	ldr	r5, .L80
	add	r7, r1, #0
	lsl	r0, r2, #0x1
	add	r4, r0, r5
	ldr	r0, .L80+0x4
	mov	r8, r0
.L56:
	lsl	r2, r3, #0x1
	mov	r0, r8
	ldrb	r1, [r0, #0x14]
	lsl	r0, r1, #0x4
	sub	r0, r0, r1
	lsl	r0, r0, #0x7
	add	r2, r2, r0
	add	r2, r2, r5
	ldrh	r0, [r4]
	add	r0, r0, r6
	strh	r0, [r2]
	add	r4, r4, #0x2
	add	r3, r3, #0x1
	mov	r1, #0xa
	ldrsh	r0, [r7, r1]
	cmp	r3, r0
	blt	.L56	@cond_branch
.L54:
	mov	r0, r9
	add	r0, r0, ip
	lsl	r0, r0, #0x3
	mov	r3, sl
	add	r2, r0, r3
	ldrh	r0, [r2, #0xe]
	add	r0, r0, #0x1
	strh	r0, [r2, #0xe]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	mov	r4, #0xc
	ldrsh	r1, [r2, r4]
	cmp	r0, r1
	bne	.L33	@cond_branch
	mov	r0, #0x0
	strh	r0, [r2, #0xe]
.L33:
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L81:
	.align	2, 0
.L80:
	.word	gUnknown_03004DE0
	.word	gUnknown_03004DC0
.Lfe7:
	.size	 task00_for_dp12,.Lfe7-task00_for_dp12
	.align	2, 0
	.type	 sub_80898FC,function
	.thumb_func
sub_80898FC:
	push	{r4, r5, r6, r7, lr}
	add	r6, r0, #0
	lsl	r1, r1, #0x18
	lsr	r5, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r4, r2, #0x18
	mov	r1, #0x0
	mov	r2, #0x0
	ldr	r0, .L88
	mov	ip, r0
.L85:
	lsl	r0, r1, #0x1
	add	r3, r0, r6
	lsl	r0, r2, #0x1
	add	r0, r0, ip
	mov	r7, #0x0
	ldrsh	r0, [r0, r7]
	mul	r0, r0, r4
	cmp	r0, #0
	bge	.L86	@cond_branch
	add	r0, r0, #0xff
.L86:
	asr	r0, r0, #0x8
	strh	r0, [r3]
	add	r0, r2, r5
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	add	r0, r1, #0x1
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	cmp	r1, #0xff
	bls	.L85	@cond_branch
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L89:
	.align	2, 0
.L88:
	.word	gSineTable
.Lfe8:
	.size	 sub_80898FC,.Lfe8-sub_80898FC
	.align	2, 0
	.globl	sub_8089944
	.type	 sub_8089944,function
	.thumb_func
sub_8089944:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #0xffffffe0
	add	r5, r0, #0
	str	r1, [sp, #0x10]
	ldr	r0, [sp, #0x40]
	mov	r8, r0
	ldr	r1, [sp, #0x44]
	mov	r9, r1
	ldr	r0, [sp, #0x48]
	mov	sl, r0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	ldr	r1, [sp, #0x10]
	lsl	r1, r1, #0x18
	str	r1, [sp, #0x14]
	lsr	r0, r1, #0x18
	str	r0, [sp, #0xc]
	lsl	r1, r2, #0x18
	lsr	r1, r1, #0x18
	str	r1, [sp, #0x18]
	lsl	r2, r3, #0x18
	lsr	r2, r2, #0x18
	str	r2, [sp, #0x1c]
	mov	r1, r8
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r8, r1
	mov	r3, r9
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r9, r3
	mov	r0, sl
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	sl, r0
	bl	dp12_8087EA4
	ldr	r0, .L96
	add	r0, r0, r9
	str	r0, [sp]
	ldr	r0, .L96+0x4
	str	r0, [sp, #0x4]
	mov	r1, sp
	mov	r0, #0x1
	strb	r0, [r1, #0x8]
	mov	r0, sp
	mov	r1, #0x0
	strb	r1, [r0, #0x9]
	ldr	r0, [sp]
	ldr	r1, [sp, #0x4]
	ldr	r2, [sp, #0x8]
	bl	sub_80895F8
	ldr	r0, .L96+0x8
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	ldr	r0, .L96+0xc
	lsl	r4, r7, #0x2
	add	r4, r4, r7
	lsl	r4, r4, #0x3
	add	r4, r4, r0
	strh	r5, [r4, #0x8]
	mov	r3, sp
	ldrh	r3, [r3, #0xc]
	strh	r3, [r4, #0xa]
	mov	r0, #0x80
	lsl	r0, r0, #0x1
	ldr	r1, [sp, #0x18]
	bl	__divsi3
	strh	r0, [r4, #0xc]
	mov	r0, #0x0
	strh	r0, [r4, #0xe]
	mov	r1, r8
	strh	r1, [r4, #0x10]
	strh	r1, [r4, #0x12]
	mov	r3, r9
	strh	r3, [r4, #0x14]
	mov	r0, sl
	strh	r0, [r4, #0x16]
	ldr	r0, .L96+0x10
	strb	r7, [r0, #0x18]
	ldr	r0, .L96+0x14
	mov	r1, #0x0
	strb	r1, [r0]
	ldr	r4, .L96+0x18
	ldr	r3, [sp, #0xc]
	sub	r6, r3, r5
	lsl	r3, r6, #0x18
	lsr	r3, r3, #0x18
	add	r0, r4, #0
	ldr	r1, [sp, #0x18]
	ldr	r2, [sp, #0x1c]
	bl	sub_80898FC
	ldr	r0, [sp, #0xc]
	cmp	r5, r0
	bge	.L92	@cond_branch
	ldr	r1, .L96+0x1c
	add	r2, r4, r1
	lsl	r1, r5, #0x1
	mov	r3, #0xf0
	lsl	r3, r3, #0x3
	add	r0, r1, r3
	add	r3, r0, r2
	add	r1, r1, r2
	add	r2, r4, #0
	add	r5, r6, #0
.L94:
	ldrh	r0, [r2]
	strh	r0, [r1]
	ldrh	r0, [r2]
	strh	r0, [r3]
	add	r2, r2, #0x2
	add	r3, r3, #0x2
	add	r1, r1, #0x2
	sub	r5, r5, #0x1
	cmp	r5, #0
	bne	.L94	@cond_branch
.L92:
	add	r0, r7, #0
	add	sp, sp, #0x20
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L97:
	.align	2, 0
.L96:
	.word	0x4000010
	.word	0xa2600001
	.word	task00_for_dp12
	.word	gTasks
	.word	gUnknown_03004DC0
	.word	gUnknown_0202FFA4
	.word	gUnknown_03004DE0+0x280
	.word	0xfffffd80
.Lfe9:
	.size	 sub_8089944,.Lfe9-sub_8089944
.text
	.align	2, 0
