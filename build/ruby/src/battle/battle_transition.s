@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section .rodata
	.align	2, 0
	.type	 sBigPokeball_Tileset,object
sBigPokeball_Tileset:
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x11111111
	.word	0x11111111
	.word	0x11111111
	.word	0x11111111
	.word	0x11111111
	.word	0x11111111
	.word	0x11111111
	.word	0x11111111
	.word	0x44444444
	.word	0x44444444
	.word	0x44444444
	.word	0x44444444
	.word	0x44444444
	.word	0x44444444
	.word	0x44444444
	.word	0x44444444
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0xf0000000
	.word	0xfff00000
	.word	0x19fff000
	.word	0x0
	.word	0x0
	.word	0xf0000000
	.word	0xffff0000
	.word	0x19fffff0
	.word	0x11119fff
	.word	0x1111119f
	.word	0x11111111
	.word	0x0
	.word	0xfffff000
	.word	0x9fffffff
	.word	0x111111ff
	.word	0x11111111
	.word	0x11111111
	.word	0x11111111
	.word	0x11111111
	.word	0xfffffff0
	.word	0xffffffff
	.word	0x11111119
	.word	0x11111111
	.word	0x11111111
	.word	0x11111111
	.word	0x11111111
	.word	0x11111111
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0xf0000000
	.word	0x0
	.word	0xf0000000
	.word	0xff000000
	.word	0x1fff0000
	.word	0x119ff000
	.word	0x1111fff0
	.word	0x111119ff
	.word	0x1111119f
	.word	0x1119fff0
	.word	0x111111ff
	.word	0x11111119
	.word	0x11111111
	.word	0x11111111
	.word	0x11111111
	.word	0x11111111
	.word	0x11111111
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0xf0000000
	.word	0xff000000
	.word	0x1ff00000
	.word	0x11ff0000
	.word	0x1119f000
	.word	0x11119f00
	.word	0x11111ff0
	.word	0x111111ff
	.word	0x1111111f
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0xff000000
	.word	0x1ff00000
	.word	0x19f00000
	.word	0x11ff0000
	.word	0x111ff000
	.word	0x1119f000
	.word	0x1111ff00
	.word	0x11111ff0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0xf0000000
	.word	0xf0000000
	.word	0xff000000
	.word	0x9f000000
	.word	0x1ff00000
	.word	0x111119f0
	.word	0x111111ff
	.word	0x1111111f
	.word	0x1111111f
	.word	0x11111119
	.word	0x11111111
	.word	0x11111111
	.word	0x11111111
	.word	0x1ff00000
	.word	0x11ff0000
	.word	0x11ff0000
	.word	0x119f0000
	.word	0x111ff000
	.word	0x111ff000
	.word	0x1119f000
	.word	0x1111ff00
	.word	0x1111ff00
	.word	0x1111ff00
	.word	0x11111f00
	.word	0x11111ff0
	.word	0x11111ff0
	.word	0x11111ff0
	.word	0x111119f0
	.word	0x111119f0
	.word	0x111111f0
	.word	0x111111ff
	.word	0x111111ff
	.word	0x1111119f
	.word	0x1111119f
	.word	0x1111119f
	.word	0xffffffff
	.word	0xfffff000
	.word	0x11111111
	.word	0x11111111
	.word	0x11111111
	.word	0x11111111
	.word	0x11111111
	.word	0x11111111
	.word	0xffffffff
	.word	0xffffffff
	.word	0xfffff000
	.word	0xffffffff
	.word	0x4444448f
	.word	0x4444448f
	.word	0x4444448f
	.word	0x444444ff
	.word	0x444444ff
	.word	0x444444f0
	.word	0xffffffff
	.word	0xffffffff
	.word	0x44444444
	.word	0x44444444
	.word	0x44444444
	.word	0x44444444
	.word	0x44444444
	.word	0x44444444
	.word	0x44444af0
	.word	0x44444af0
	.word	0x44444ff0
	.word	0x44444ff0
	.word	0x44444ff0
	.word	0x4444af00
	.word	0x4444ff00
	.word	0x4444ff00
	.word	0x4444ff00
	.word	0x444af000
	.word	0x444ff000
	.word	0x444ff000
	.word	0x44af0000
	.word	0x44ff0000
	.word	0x4aff0000
	.word	0x4ff00000
	.word	0x4ff00000
	.word	0xaf000000
	.word	0xff000000
	.word	0xf0000000
	.word	0xf0000000
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x44444444
	.word	0x44444444
	.word	0x44444444
	.word	0x4444444a
	.word	0x4444444f
	.word	0x444444af
	.word	0x444444ff
	.word	0x44444af0
	.word	0x44444ff0
	.word	0x4444ff00
	.word	0x444af000
	.word	0x444ff000
	.word	0x44ff0000
	.word	0x4af00000
	.word	0x4ff00000
	.word	0xff000000
	.word	0xf0000000
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x4444444f
	.word	0x444444ff
	.word	0x44444ff0
	.word	0x4444af00
	.word	0x444af000
	.word	0x44ff0000
	.word	0x4ff00000
	.word	0xff000000
	.word	0xf0000000
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x4444444f
	.word	0x44444aff
	.word	0x4444fff0
	.word	0x44aff000
	.word	0x4fff0000
	.word	0xff000000
	.word	0xf0000000
	.word	0x0
	.word	0x44444444
	.word	0x44444444
	.word	0x44444444
	.word	0x44444444
	.word	0x44444444
	.word	0x4444444a
	.word	0x444444ff
	.word	0x444afff0
	.word	0x4afff000
	.word	0xfff00000
	.word	0xf0000000
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x44444444
	.word	0x4444444f
	.word	0x4444afff
	.word	0x4afffff0
	.word	0xffff0000
	.word	0xf0000000
	.word	0x0
	.word	0x0
	.word	0x44444444
	.word	0x44444444
	.word	0x44444444
	.word	0x44444444
	.word	0x4444aaff
	.word	0xffffffff
	.word	0xfffff000
	.word	0x0
	.word	0x44444444
	.word	0x44444444
	.word	0x44444444
	.word	0x44444444
	.word	0x44444444
	.word	0x44444aaa
	.word	0xffffffff
	.word	0xfffffff0
	.word	0x11111111
	.word	0x11111111
	.word	0x91111111
	.word	0xf9111111
	.word	0xff911111
	.word	0xfff91111
	.word	0xffff9111
	.word	0x4ffff111
	.word	0xfff91111
	.word	0xffffff91
	.word	0xffffffff
	.word	0x557fffff
	.word	0x44445fff
	.word	0x444444af
	.word	0x44444444
	.word	0x44444444
	.word	0x44ffff11
	.word	0x44afff91
	.word	0x4447fff1
	.word	0x4444fff1
	.word	0x4444fff9
	.word	0x44447fff
	.word	0x4444afff
	.word	0x44445fff
	.word	0xfff54444
	.word	0x44aff444
	.word	0x4444af44
	.word	0x44444af4
	.word	0x444444f5
	.word	0x444444af
	.word	0x4444444f
	.word	0x4444444f
	.word	0x44444fff
	.word	0x44444fff
	.word	0x4444afff
	.word	0x44447ff7
	.word	0x4444fffa
	.word	0x4447fff4
	.word	0x444fffa4
	.word	0x44ffff44
	.word	0x4444444f
	.word	0x4444444f
	.word	0x444444af
	.word	0x444444f5
	.word	0x44444af4
	.word	0x4444af44
	.word	0x44aff444
	.word	0xfff54444
	.word	0x4ffffa44
	.word	0xffff7444
	.word	0xfff74444
	.word	0xff744444
	.word	0xf7444444
	.word	0x44444444
	.word	0x44444444
	.word	0x44444444
	.word	0x44444444
	.word	0x44444444
	.word	0x4444444f
	.word	0x444447ff
	.word	0x557fffff
	.word	0xffffffff
	.word	0xffffff74
	.word	0xfff7a444
	.size	 sBigPokeball_Tileset,1408
	.align	2, 0
	.type	 sPokeballTrail_Tileset,object
sPokeballTrail_Tileset:
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0xffffffff
	.word	0xffffffff
	.word	0xffffffff
	.word	0xffffffff
	.word	0xffffffff
	.word	0xffffffff
	.word	0xffffffff
	.word	0xffffffff
	.size	 sPokeballTrail_Tileset,64
	.type	 sSpriteImage_83FC148,object
sSpriteImage_83FC148:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xf0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x1f
	.byte	0x0
	.byte	0x0
	.byte	0xf0
	.byte	0x11
	.byte	0x0
	.byte	0x0
	.byte	0x1f
	.byte	0x11
	.byte	0x0
	.byte	0xf0
	.byte	0x11
	.byte	0x11
	.byte	0x0
	.byte	0x0
	.byte	0xf0
	.byte	0xff
	.byte	0x0
	.byte	0xff
	.byte	0x19
	.byte	0x11
	.byte	0xff
	.byte	0x19
	.byte	0x11
	.byte	0x11
	.byte	0x19
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0xff
	.byte	0xf
	.byte	0x0
	.byte	0x0
	.byte	0x11
	.byte	0x91
	.byte	0xff
	.byte	0x0
	.byte	0x11
	.byte	0x11
	.byte	0x91
	.byte	0xff
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x91
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xf
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xf1
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x11
	.byte	0xf
	.byte	0x0
	.byte	0x0
	.byte	0x11
	.byte	0xf1
	.byte	0x0
	.byte	0x0
	.byte	0x11
	.byte	0x11
	.byte	0xf
	.byte	0x0
	.byte	0x0
	.byte	0x1f
	.byte	0x11
	.byte	0x11
	.byte	0x0
	.byte	0x19
	.byte	0x11
	.byte	0x11
	.byte	0xf0
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0xf0
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x90
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x1f
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x1f
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0xf0
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0xff
	.byte	0x11
	.byte	0x11
	.byte	0xf9
	.byte	0xff
	.byte	0x11
	.byte	0x91
	.byte	0xff
	.byte	0x46
	.byte	0x11
	.byte	0xf1
	.byte	0x6f
	.byte	0xfa
	.byte	0xff
	.byte	0xff
	.byte	0x4f
	.byte	0x4f
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0xff
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0xff
	.byte	0x9f
	.byte	0x11
	.byte	0x11
	.byte	0x64
	.byte	0xff
	.byte	0x19
	.byte	0x11
	.byte	0xaf
	.byte	0xf6
	.byte	0x1f
	.byte	0x11
	.byte	0xf4
	.byte	0xf4
	.byte	0xff
	.byte	0xff
	.byte	0x11
	.byte	0x11
	.byte	0xf1
	.byte	0x0
	.byte	0x11
	.byte	0x11
	.byte	0x91
	.byte	0x0
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0xf
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0xf
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x9
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0xf1
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0xf1
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0xf
	.byte	0xf0
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0x4f
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x4f
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0xa0
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0xf0
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0xf0
	.byte	0x4a
	.byte	0x44
	.byte	0x44
	.byte	0x0
	.byte	0x4f
	.byte	0x44
	.byte	0x44
	.byte	0x0
	.byte	0xaf
	.byte	0x44
	.byte	0x44
	.byte	0xff
	.byte	0xff
	.byte	0x4f
	.byte	0x4f
	.byte	0x44
	.byte	0xf4
	.byte	0x6f
	.byte	0xfa
	.byte	0x44
	.byte	0x64
	.byte	0xff
	.byte	0x46
	.byte	0x44
	.byte	0x44
	.byte	0xf6
	.byte	0xff
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0xff
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0xf4
	.byte	0xf4
	.byte	0xff
	.byte	0xff
	.byte	0xaf
	.byte	0xf6
	.byte	0x4f
	.byte	0x44
	.byte	0x64
	.byte	0xff
	.byte	0x46
	.byte	0x44
	.byte	0xff
	.byte	0x6f
	.byte	0x44
	.byte	0x44
	.byte	0xff
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0xf
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0xf4
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0xf4
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0xa
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0xf
	.byte	0x44
	.byte	0x44
	.byte	0xa4
	.byte	0xf
	.byte	0x44
	.byte	0x44
	.byte	0xf4
	.byte	0x0
	.byte	0x44
	.byte	0x44
	.byte	0xfa
	.byte	0x0
	.byte	0x0
	.byte	0xf0
	.byte	0x44
	.byte	0x44
	.byte	0x0
	.byte	0x0
	.byte	0x4f
	.byte	0x44
	.byte	0x0
	.byte	0x0
	.byte	0xf0
	.byte	0x44
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x4f
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xf0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x4a
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0xff
	.byte	0x4a
	.byte	0x44
	.byte	0x44
	.byte	0x0
	.byte	0xff
	.byte	0x5a
	.byte	0x44
	.byte	0x0
	.byte	0x0
	.byte	0xf0
	.byte	0xff
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0xa4
	.byte	0x44
	.byte	0x44
	.byte	0xa4
	.byte	0xff
	.byte	0x44
	.byte	0xa5
	.byte	0xff
	.byte	0x0
	.byte	0xff
	.byte	0xf
	.byte	0x0
	.byte	0x0
	.byte	0x44
	.byte	0x44
	.byte	0xf
	.byte	0x0
	.byte	0x44
	.byte	0xf4
	.byte	0x0
	.byte	0x0
	.byte	0x44
	.byte	0xf
	.byte	0x0
	.byte	0x0
	.byte	0xf4
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xf
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.size	 sSpriteImage_83FC148,512
	.align	2, 0
	.type	 sUnknown_083FC348,object
sUnknown_083FC348:
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x11111111
	.word	0x22222222
	.word	0x33333333
	.word	0x44444444
	.word	0x55555555
	.word	0x55555555
	.word	0x55555555
	.word	0x55555555
	.word	0x55555555
	.word	0x55555555
	.word	0x55555555
	.word	0x55555555
	.word	0x55555555
	.word	0x55555555
	.word	0x66666666
	.word	0x66666666
	.word	0x66666666
	.word	0x66666666
	.word	0x66666666
	.word	0x66666666
	.word	0x66666666
	.word	0x66666666
	.word	0x77777777
	.word	0x77777777
	.word	0x77777777
	.word	0x77777777
	.word	0x77777777
	.word	0x77777777
	.word	0x77777777
	.word	0x77777777
	.word	0x88888888
	.word	0x88888888
	.word	0x88888888
	.word	0x88888888
	.word	0x88888888
	.word	0x88888888
	.word	0x99999999
	.word	0x99999999
	.word	0x66666666
	.word	0x66666666
	.word	0x66666666
	.word	0xffffffff
	.word	0x66666666
	.word	0x66666666
	.word	0x66666666
	.word	0x66666666
	.word	0x77777777
	.word	0x77777777
	.word	0x77777777
	.word	0xffffffff
	.word	0x77777777
	.word	0x77777777
	.word	0x77777777
	.word	0x77777777
	.word	0x0
	.word	0x0
	.word	0x11111111
	.word	0x22222222
	.word	0x33333333
	.word	0x44444444
	.word	0xaaaaaaaa
	.word	0xaaaaaaaa
	.word	0xaaaaaaaa
	.word	0xaaaaaaaa
	.word	0xaaaaaaaa
	.word	0xaaaaaaaa
	.word	0xaaaaaaaa
	.word	0xaaaaaaaa
	.word	0xaaaaaaaa
	.word	0xaaaaaaaa
	.word	0xbbbbbbbb
	.word	0xbbbbbbbb
	.word	0xbbbbbbbb
	.word	0xbbbbbbbb
	.word	0xbbbbbbbb
	.word	0xbbbbbbbb
	.word	0xbbbbbbbb
	.word	0xbbbbbbbb
	.word	0xcccccccc
	.word	0xcccccccc
	.word	0xcccccccc
	.word	0xcccccccc
	.word	0xcccccccc
	.word	0xcccccccc
	.word	0xcccccccc
	.word	0xcccccccc
	.word	0xdddddddd
	.word	0xdddddddd
	.word	0xdddddddd
	.word	0xdddddddd
	.word	0xdddddddd
	.word	0xdddddddd
	.word	0xeeeeeeee
	.word	0xeeeeeeee
	.word	0xaaaaaaaa
	.word	0xaaaaaaaa
	.word	0xaaaaaaaa
	.word	0xffffffff
	.word	0xaaaaaaaa
	.word	0xaaaaaaaa
	.word	0xaaaaaaaa
	.word	0xaaaaaaaa
	.word	0xbbbbbbbb
	.word	0xbbbbbbbb
	.word	0xbbbbbbbb
	.word	0xffffffff
	.word	0xbbbbbbbb
	.word	0xbbbbbbbb
	.word	0xbbbbbbbb
	.word	0xbbbbbbbb
	.size	 sUnknown_083FC348,480
	.type	 sSpriteImage_83FC528,object
sSpriteImage_83FC528:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x55
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x55
	.byte	0x0
	.byte	0x0
	.byte	0x55
	.byte	0x99
	.byte	0x0
	.byte	0x55
	.byte	0x99
	.byte	0x99
	.byte	0x0
	.byte	0x55
	.byte	0x99
	.byte	0x99
	.byte	0x55
	.byte	0x99
	.byte	0xcc
	.byte	0x88
	.byte	0x0
	.byte	0x55
	.byte	0x55
	.byte	0x55
	.byte	0x0
	.byte	0x55
	.byte	0x55
	.byte	0x55
	.byte	0x55
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0x55
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0x99
	.byte	0x99
	.byte	0xee
	.byte	0xee
	.byte	0x99
	.byte	0x99
	.byte	0x99
	.byte	0xee
	.byte	0x99
	.byte	0x99
	.byte	0x99
	.byte	0xee
	.byte	0xcc
	.byte	0xcc
	.byte	0x88
	.byte	0x44
	.byte	0x55
	.byte	0x0
	.byte	0x0
	.byte	0x66
	.byte	0x55
	.byte	0x0
	.byte	0x0
	.byte	0x66
	.byte	0xee
	.byte	0x55
	.byte	0x66
	.byte	0x99
	.byte	0xee
	.byte	0x55
	.byte	0x66
	.byte	0x99
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0x55
	.byte	0xee
	.byte	0xee
	.byte	0x99
	.byte	0x99
	.byte	0xee
	.byte	0xee
	.byte	0x99
	.byte	0x99
	.byte	0xee
	.byte	0xee
	.byte	0x99
	.byte	0x99
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x66
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x66
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x99
	.byte	0x66
	.byte	0x55
	.byte	0x55
	.byte	0x55
	.byte	0x99
	.byte	0xee
	.byte	0xee
	.byte	0x55
	.byte	0x99
	.byte	0xee
	.byte	0xee
	.byte	0x99
	.byte	0x99
	.byte	0x99
	.byte	0x66
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x55
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x55
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.byte	0xff
	.byte	0x88
	.byte	0xdd
	.byte	0x44
	.byte	0xff
	.byte	0x88
	.byte	0xdd
	.byte	0x44
	.byte	0x88
	.byte	0x88
	.byte	0x88
	.byte	0xdd
	.byte	0x88
	.byte	0x88
	.byte	0x88
	.byte	0xdd
	.byte	0x88
	.byte	0x88
	.byte	0x88
	.byte	0x66
	.byte	0x88
	.byte	0x88
	.byte	0x88
	.byte	0x44
	.byte	0x88
	.byte	0x88
	.byte	0x88
	.byte	0x44
	.byte	0x88
	.byte	0x44
	.byte	0x22
	.byte	0x33
	.byte	0x66
	.byte	0x66
	.byte	0x44
	.byte	0xdd
	.byte	0x66
	.byte	0x66
	.byte	0x44
	.byte	0xdd
	.byte	0xcc
	.byte	0xcc
	.byte	0xdd
	.byte	0xcc
	.byte	0xcc
	.byte	0xcc
	.byte	0xdd
	.byte	0xcc
	.byte	0x88
	.byte	0x88
	.byte	0x88
	.byte	0xdd
	.byte	0x22
	.byte	0x11
	.byte	0x11
	.byte	0x88
	.byte	0x22
	.byte	0x11
	.byte	0x11
	.byte	0x88
	.byte	0x22
	.byte	0x11
	.byte	0x11
	.byte	0x33
	.byte	0xdd
	.byte	0x88
	.byte	0x88
	.byte	0x99
	.byte	0xdd
	.byte	0x88
	.byte	0x88
	.byte	0x99
	.byte	0xdd
	.byte	0x66
	.byte	0x66
	.byte	0x66
	.byte	0xdd
	.byte	0x66
	.byte	0x66
	.byte	0x66
	.byte	0x66
	.byte	0x66
	.byte	0x66
	.byte	0x66
	.byte	0x88
	.byte	0x66
	.byte	0x66
	.byte	0x66
	.byte	0x88
	.byte	0x66
	.byte	0x66
	.byte	0x66
	.byte	0x22
	.byte	0x22
	.byte	0x88
	.byte	0x88
	.byte	0x99
	.byte	0x55
	.byte	0x66
	.byte	0x0
	.byte	0x99
	.byte	0x55
	.byte	0x66
	.byte	0x0
	.byte	0xff
	.byte	0x55
	.byte	0x66
	.byte	0x0
	.byte	0xff
	.byte	0x55
	.byte	0x66
	.byte	0x0
	.byte	0xff
	.byte	0x55
	.byte	0x55
	.byte	0x66
	.byte	0x88
	.byte	0xff
	.byte	0x99
	.byte	0x66
	.byte	0x88
	.byte	0xff
	.byte	0x99
	.byte	0x66
	.byte	0x88
	.byte	0xff
	.byte	0x66
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x44
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x44
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x44
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x44
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x88
	.byte	0x33
	.byte	0xee
	.byte	0xff
	.byte	0x88
	.byte	0x33
	.byte	0xee
	.byte	0xff
	.byte	0x44
	.byte	0x33
	.byte	0xee
	.byte	0x55
	.byte	0x44
	.byte	0x33
	.byte	0xee
	.byte	0x55
	.byte	0x44
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x44
	.byte	0x44
	.byte	0x22
	.byte	0x22
	.byte	0x44
	.byte	0x44
	.byte	0x22
	.byte	0x22
	.byte	0x0
	.byte	0x44
	.byte	0x33
	.byte	0x22
	.byte	0x22
	.byte	0x11
	.byte	0x11
	.byte	0x22
	.byte	0x22
	.byte	0x11
	.byte	0x11
	.byte	0x22
	.byte	0x22
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x22
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x22
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x33
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x33
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x22
	.byte	0x44
	.byte	0x33
	.byte	0x11
	.byte	0xee
	.byte	0x55
	.byte	0x11
	.byte	0xff
	.byte	0xee
	.byte	0x55
	.byte	0x11
	.byte	0xff
	.byte	0xee
	.byte	0xff
	.byte	0x11
	.byte	0x33
	.byte	0xee
	.byte	0xff
	.byte	0x11
	.byte	0x33
	.byte	0x11
	.byte	0x22
	.byte	0x11
	.byte	0x44
	.byte	0x11
	.byte	0x11
	.byte	0x44
	.byte	0xff
	.byte	0x11
	.byte	0x11
	.byte	0x44
	.byte	0xff
	.byte	0x11
	.byte	0x33
	.byte	0x88
	.byte	0x0
	.byte	0x22
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x22
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x22
	.byte	0x44
	.byte	0x0
	.byte	0x0
	.byte	0x22
	.byte	0x44
	.byte	0x0
	.byte	0x0
	.byte	0x22
	.byte	0x44
	.byte	0x0
	.byte	0x0
	.byte	0x44
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x44
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x44
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x44
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x44
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.byte	0x0
	.byte	0xff
	.byte	0x44
	.byte	0xdd
	.byte	0x0
	.byte	0xff
	.byte	0x44
	.byte	0xdd
	.byte	0xff
	.byte	0x88
	.byte	0xdd
	.byte	0xdd
	.byte	0x33
	.byte	0x22
	.byte	0x22
	.byte	0x33
	.byte	0x33
	.byte	0x22
	.byte	0x22
	.byte	0x33
	.byte	0x66
	.byte	0xff
	.byte	0x44
	.byte	0xff
	.byte	0x66
	.byte	0xff
	.byte	0x44
	.byte	0xff
	.byte	0xff
	.byte	0xbb
	.byte	0xbb
	.byte	0xbb
	.byte	0x88
	.byte	0x88
	.byte	0x88
	.byte	0x66
	.byte	0x88
	.byte	0x88
	.byte	0x88
	.byte	0x66
	.byte	0xdd
	.byte	0x66
	.byte	0x66
	.byte	0xdd
	.byte	0xff
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x44
	.byte	0xff
	.byte	0xbb
	.byte	0x0
	.byte	0xdd
	.byte	0xaa
	.byte	0xaa
	.byte	0xff
	.byte	0xdd
	.byte	0xaa
	.byte	0xaa
	.byte	0xff
	.byte	0xaa
	.byte	0xaa
	.byte	0xaa
	.byte	0xaa
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x44
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x44
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x22
	.byte	0x44
	.byte	0x44
	.byte	0x0
	.byte	0x22
	.byte	0x44
	.byte	0x44
	.byte	0x0
	.byte	0x44
	.byte	0xcc
	.byte	0xcc
	.byte	0x44
	.byte	0x44
	.byte	0xcc
	.byte	0xcc
	.byte	0x44
	.byte	0xdd
	.byte	0xcc
	.byte	0xdd
	.byte	0x44
	.byte	0x33
	.byte	0x44
	.byte	0xee
	.byte	0x55
	.byte	0x33
	.byte	0x44
	.byte	0xee
	.byte	0x55
	.byte	0x44
	.byte	0x55
	.byte	0x99
	.byte	0x88
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x44
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x44
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x22
	.byte	0x44
	.byte	0x0
	.byte	0x0
	.byte	0x22
	.byte	0x44
	.byte	0x0
	.byte	0x0
	.byte	0x22
	.byte	0x44
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.byte	0xdd
	.byte	0x0
	.byte	0xff
	.byte	0xdd
	.byte	0x88
	.byte	0x0
	.byte	0xff
	.byte	0xdd
	.byte	0x88
	.byte	0x44
	.byte	0x88
	.byte	0x88
	.byte	0x88
	.byte	0x88
	.byte	0x88
	.byte	0xdd
	.byte	0xdd
	.byte	0x88
	.byte	0x88
	.byte	0xdd
	.byte	0xdd
	.byte	0x88
	.byte	0x55
	.byte	0x88
	.byte	0xdd
	.byte	0x88
	.byte	0x55
	.byte	0x88
	.byte	0xdd
	.byte	0xff
	.byte	0x55
	.byte	0x55
	.byte	0x88
	.byte	0xff
	.byte	0x55
	.byte	0x55
	.byte	0x88
	.byte	0xff
	.byte	0x55
	.byte	0x55
	.byte	0x88
	.byte	0xff
	.byte	0x88
	.byte	0x55
	.byte	0xbb
	.byte	0xcc
	.byte	0xcc
	.byte	0xdd
	.byte	0xaa
	.byte	0xcc
	.byte	0xcc
	.byte	0xdd
	.byte	0xaa
	.byte	0xcc
	.byte	0xdd
	.byte	0xaa
	.byte	0xaa
	.byte	0xcc
	.byte	0xdd
	.byte	0xaa
	.byte	0xaa
	.byte	0x88
	.byte	0xaa
	.byte	0xaa
	.byte	0x88
	.byte	0xaa
	.byte	0xaa
	.byte	0x44
	.byte	0x55
	.byte	0xaa
	.byte	0xaa
	.byte	0x44
	.byte	0x55
	.byte	0xaa
	.byte	0x44
	.byte	0x55
	.byte	0x66
	.byte	0xaa
	.byte	0x88
	.byte	0x66
	.byte	0xdd
	.byte	0xaa
	.byte	0x88
	.byte	0x66
	.byte	0xdd
	.byte	0x88
	.byte	0x55
	.byte	0x55
	.byte	0x66
	.byte	0x88
	.byte	0x55
	.byte	0x55
	.byte	0x66
	.byte	0x55
	.byte	0x66
	.byte	0x66
	.byte	0x88
	.byte	0x55
	.byte	0x88
	.byte	0xff
	.byte	0x88
	.byte	0x55
	.byte	0x88
	.byte	0xff
	.byte	0x88
	.byte	0xdd
	.byte	0x66
	.byte	0xff
	.byte	0xff
	.byte	0xdd
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0xdd
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0xdd
	.byte	0x44
	.byte	0x0
	.byte	0x0
	.byte	0xdd
	.byte	0x44
	.byte	0x0
	.byte	0x0
	.byte	0x88
	.byte	0xdd
	.byte	0xff
	.byte	0x0
	.byte	0x88
	.byte	0x88
	.byte	0xdd
	.byte	0xff
	.byte	0x88
	.byte	0x88
	.byte	0xdd
	.byte	0xff
	.byte	0x88
	.byte	0x88
	.byte	0xdd
	.byte	0x44
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x22
	.byte	0x44
	.byte	0x88
	.byte	0xff
	.byte	0x22
	.byte	0x44
	.byte	0x88
	.byte	0xff
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0xff
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0x88
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.byte	0xff
	.byte	0xdd
	.byte	0x44
	.byte	0xff
	.byte	0xff
	.byte	0xdd
	.byte	0x44
	.byte	0x88
	.byte	0x88
	.byte	0x88
	.byte	0x88
	.byte	0x88
	.byte	0x88
	.byte	0x88
	.byte	0x88
	.byte	0x88
	.byte	0x88
	.byte	0x88
	.byte	0x88
	.byte	0xff
	.byte	0x88
	.byte	0x88
	.byte	0x88
	.byte	0xff
	.byte	0x88
	.byte	0x88
	.byte	0x88
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.byte	0xff
	.byte	0x88
	.byte	0x88
	.byte	0x88
	.byte	0xff
	.byte	0x88
	.byte	0x88
	.byte	0x88
	.byte	0xff
	.byte	0x88
	.byte	0x88
	.byte	0x88
	.byte	0xff
	.byte	0x88
	.byte	0x88
	.byte	0x88
	.byte	0xff
	.byte	0x88
	.byte	0xff
	.byte	0xff
	.byte	0x0
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.byte	0x88
	.byte	0xbb
	.byte	0xbb
	.byte	0xff
	.byte	0x88
	.byte	0xbb
	.byte	0xbb
	.byte	0x0
	.byte	0xff
	.byte	0xbb
	.byte	0xbb
	.byte	0x0
	.byte	0xff
	.byte	0xbb
	.byte	0xbb
	.byte	0x44
	.byte	0xbb
	.byte	0xbb
	.byte	0xbb
	.byte	0x44
	.byte	0xbb
	.byte	0xbb
	.byte	0x88
	.byte	0x44
	.byte	0xbb
	.byte	0xbb
	.byte	0x88
	.byte	0x0
	.byte	0xff
	.byte	0x44
	.byte	0xbb
	.byte	0xbb
	.byte	0x88
	.byte	0x66
	.byte	0xdd
	.byte	0xbb
	.byte	0x88
	.byte	0x66
	.byte	0xdd
	.byte	0x88
	.byte	0x66
	.byte	0x66
	.byte	0xdd
	.byte	0x88
	.byte	0x66
	.byte	0x66
	.byte	0xdd
	.byte	0x88
	.byte	0x66
	.byte	0xdd
	.byte	0xdd
	.byte	0x88
	.byte	0x66
	.byte	0xdd
	.byte	0xdd
	.byte	0x88
	.byte	0x66
	.byte	0xdd
	.byte	0xdd
	.byte	0xbb
	.byte	0xbb
	.byte	0xbb
	.byte	0xaa
	.byte	0xdd
	.byte	0xdd
	.byte	0xff
	.byte	0x44
	.byte	0xdd
	.byte	0xdd
	.byte	0xff
	.byte	0x44
	.byte	0xdd
	.byte	0x44
	.byte	0x44
	.byte	0xbb
	.byte	0xdd
	.byte	0x44
	.byte	0x44
	.byte	0xbb
	.byte	0xdd
	.byte	0xff
	.byte	0xbb
	.byte	0xbb
	.byte	0xbb
	.byte	0xff
	.byte	0xbb
	.byte	0xbb
	.byte	0xbb
	.byte	0xff
	.byte	0xbb
	.byte	0xbb
	.byte	0xaa
	.byte	0x66
	.byte	0xbb
	.byte	0xbb
	.byte	0xff
	.byte	0x88
	.byte	0x88
	.byte	0xdd
	.byte	0xff
	.byte	0x88
	.byte	0x88
	.byte	0xdd
	.byte	0x44
	.byte	0xff
	.byte	0x88
	.byte	0x66
	.byte	0x44
	.byte	0xff
	.byte	0x88
	.byte	0x66
	.byte	0xff
	.byte	0x0
	.byte	0xff
	.byte	0x66
	.byte	0xff
	.byte	0x0
	.byte	0xff
	.byte	0x88
	.byte	0xff
	.byte	0x0
	.byte	0xff
	.byte	0x88
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xcc
	.byte	0x88
	.byte	0x0
	.byte	0x0
	.byte	0xcc
	.byte	0x88
	.byte	0x0
	.byte	0x0
	.byte	0x66
	.byte	0xcc
	.byte	0x88
	.byte	0x0
	.byte	0x66
	.byte	0xdd
	.byte	0xcc
	.byte	0x66
	.byte	0x66
	.byte	0xdd
	.byte	0xcc
	.byte	0x66
	.byte	0x66
	.byte	0x66
	.byte	0xdd
	.byte	0xcc
	.size	 sSpriteImage_83FC528,2048
	.type	 sSpriteImage_83FCD28,object
sSpriteImage_83FCD28:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x88
	.byte	0x66
	.byte	0x66
	.byte	0x66
	.byte	0x66
	.byte	0x66
	.byte	0x66
	.byte	0x66
	.byte	0x66
	.byte	0x66
	.byte	0x88
	.byte	0xff
	.byte	0x66
	.byte	0x66
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x88
	.byte	0x66
	.byte	0x66
	.byte	0x88
	.byte	0x88
	.byte	0x66
	.byte	0x66
	.byte	0x88
	.byte	0x66
	.byte	0x66
	.byte	0x66
	.byte	0x66
	.byte	0x66
	.byte	0x66
	.byte	0x66
	.byte	0x88
	.byte	0x66
	.byte	0x66
	.byte	0x66
	.byte	0x88
	.byte	0x66
	.byte	0x88
	.byte	0x88
	.byte	0x66
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x88
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x88
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x66
	.byte	0x66
	.byte	0xff
	.byte	0x0
	.byte	0x66
	.byte	0x66
	.byte	0x66
	.byte	0xff
	.byte	0x66
	.byte	0x66
	.byte	0x66
	.byte	0xff
	.byte	0xff
	.byte	0x66
	.byte	0x66
	.byte	0x66
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x88
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x88
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x88
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x88
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x88
	.byte	0x0
	.byte	0x0
	.byte	0x88
	.byte	0x66
	.byte	0x0
	.byte	0x0
	.byte	0x88
	.byte	0x66
	.byte	0x0
	.byte	0x0
	.byte	0x88
	.byte	0x66
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x88
	.byte	0x66
	.byte	0x88
	.byte	0xff
	.byte	0xff
	.byte	0x66
	.byte	0x88
	.byte	0xff
	.byte	0xff
	.byte	0x66
	.byte	0x66
	.byte	0x88
	.byte	0x33
	.byte	0x66
	.byte	0x66
	.byte	0x88
	.byte	0x33
	.byte	0x66
	.byte	0x88
	.byte	0x11
	.byte	0x11
	.byte	0x88
	.byte	0x88
	.byte	0x11
	.byte	0x11
	.byte	0x88
	.byte	0x88
	.byte	0x11
	.byte	0x11
	.byte	0x88
	.byte	0x66
	.byte	0x33
	.byte	0x11
	.byte	0x88
	.byte	0x66
	.byte	0x55
	.byte	0xff
	.byte	0x88
	.byte	0x66
	.byte	0x55
	.byte	0xff
	.byte	0x88
	.byte	0x66
	.byte	0x66
	.byte	0x55
	.byte	0x88
	.byte	0x66
	.byte	0x66
	.byte	0x55
	.byte	0x11
	.byte	0x88
	.byte	0x88
	.byte	0x66
	.byte	0x11
	.byte	0x22
	.byte	0x22
	.byte	0x88
	.byte	0x11
	.byte	0x22
	.byte	0x22
	.byte	0x88
	.byte	0x11
	.byte	0x22
	.byte	0x33
	.byte	0x66
	.byte	0x66
	.byte	0xff
	.byte	0x55
	.byte	0x66
	.byte	0x66
	.byte	0xff
	.byte	0x55
	.byte	0x66
	.byte	0x88
	.byte	0xff
	.byte	0x66
	.byte	0x66
	.byte	0x88
	.byte	0xff
	.byte	0x66
	.byte	0x66
	.byte	0x66
	.byte	0x88
	.byte	0xff
	.byte	0x66
	.byte	0x66
	.byte	0x66
	.byte	0x88
	.byte	0xff
	.byte	0x66
	.byte	0x66
	.byte	0x88
	.byte	0xff
	.byte	0xff
	.byte	0x88
	.byte	0x88
	.byte	0x88
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x66
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x66
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x88
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x88
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x88
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x44
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x44
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x44
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x88
	.byte	0x11
	.byte	0xee
	.byte	0x66
	.byte	0x88
	.byte	0x11
	.byte	0xee
	.byte	0x66
	.byte	0x33
	.byte	0x22
	.byte	0xee
	.byte	0xff
	.byte	0x33
	.byte	0x22
	.byte	0xee
	.byte	0xff
	.byte	0x44
	.byte	0x22
	.byte	0x11
	.byte	0x33
	.byte	0x44
	.byte	0x44
	.byte	0x11
	.byte	0x11
	.byte	0x44
	.byte	0x44
	.byte	0x11
	.byte	0x11
	.byte	0x0
	.byte	0x0
	.byte	0x33
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x22
	.byte	0xff
	.byte	0x11
	.byte	0x11
	.byte	0x22
	.byte	0xff
	.byte	0x11
	.byte	0x11
	.byte	0x22
	.byte	0x66
	.byte	0x11
	.byte	0x11
	.byte	0x22
	.byte	0x66
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x22
	.byte	0x11
	.byte	0x22
	.byte	0x11
	.byte	0x22
	.byte	0x11
	.byte	0x22
	.byte	0x11
	.byte	0x22
	.byte	0x11
	.byte	0xdd
	.byte	0x33
	.byte	0x22
	.byte	0xee
	.byte	0x22
	.byte	0xff
	.byte	0xff
	.byte	0xee
	.byte	0x22
	.byte	0xff
	.byte	0xff
	.byte	0xee
	.byte	0x22
	.byte	0x33
	.byte	0x44
	.byte	0xee
	.byte	0x22
	.byte	0x33
	.byte	0x44
	.byte	0x22
	.byte	0x22
	.byte	0x33
	.byte	0x44
	.byte	0x22
	.byte	0x33
	.byte	0x44
	.byte	0xff
	.byte	0x22
	.byte	0x33
	.byte	0x44
	.byte	0xff
	.byte	0x33
	.byte	0x44
	.byte	0x88
	.byte	0x88
	.byte	0x22
	.byte	0x44
	.byte	0x0
	.byte	0x0
	.byte	0x22
	.byte	0x44
	.byte	0x0
	.byte	0x0
	.byte	0x33
	.byte	0x44
	.byte	0x0
	.byte	0x0
	.byte	0x33
	.byte	0x44
	.byte	0x0
	.byte	0x0
	.byte	0x33
	.byte	0x44
	.byte	0x0
	.byte	0x0
	.byte	0x44
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x44
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x88
	.byte	0xff
	.byte	0x88
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x11
	.byte	0x11
	.byte	0x22
	.byte	0x33
	.byte	0x44
	.byte	0x44
	.byte	0x33
	.byte	0x33
	.byte	0x44
	.byte	0x44
	.byte	0x33
	.byte	0x44
	.byte	0xcc
	.byte	0xcc
	.byte	0x44
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x33
	.byte	0x0
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x0
	.byte	0x33
	.byte	0x33
	.byte	0x22
	.byte	0x33
	.byte	0x11
	.byte	0x11
	.byte	0x22
	.byte	0x22
	.byte	0x44
	.byte	0x11
	.byte	0x22
	.byte	0x22
	.byte	0x44
	.byte	0x11
	.byte	0x44
	.byte	0x33
	.byte	0x44
	.byte	0x44
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x22
	.byte	0x11
	.byte	0x22
	.byte	0x0
	.byte	0x22
	.byte	0x11
	.byte	0x22
	.byte	0x0
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x44
	.byte	0x11
	.byte	0x22
	.byte	0x22
	.byte	0x33
	.byte	0x11
	.byte	0x22
	.byte	0x22
	.byte	0x33
	.byte	0x44
	.byte	0x44
	.byte	0x33
	.byte	0x22
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x66
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x66
	.byte	0x44
	.byte	0x44
	.byte	0x99
	.byte	0x99
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x99
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x99
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x55
	.byte	0x0
	.byte	0xff
	.byte	0xff
	.byte	0x44
	.byte	0x0
	.byte	0xff
	.byte	0xff
	.byte	0x44
	.byte	0x66
	.byte	0x66
	.byte	0x66
	.byte	0x55
	.byte	0x66
	.byte	0x66
	.byte	0x66
	.byte	0x55
	.byte	0x99
	.byte	0x99
	.byte	0x66
	.byte	0x99
	.byte	0x99
	.byte	0x55
	.byte	0x66
	.byte	0x99
	.byte	0x99
	.byte	0x55
	.byte	0x66
	.byte	0x99
	.byte	0x55
	.byte	0x55
	.byte	0xee
	.byte	0x55
	.byte	0x33
	.byte	0x22
	.byte	0x22
	.byte	0x33
	.byte	0x33
	.byte	0x22
	.byte	0x22
	.byte	0x33
	.byte	0x66
	.byte	0x44
	.byte	0x44
	.byte	0x66
	.byte	0x66
	.byte	0x44
	.byte	0x44
	.byte	0x66
	.byte	0x99
	.byte	0x88
	.byte	0x44
	.byte	0x44
	.byte	0x55
	.byte	0x33
	.byte	0x33
	.byte	0x55
	.byte	0x55
	.byte	0x33
	.byte	0x33
	.byte	0x55
	.byte	0x55
	.byte	0x55
	.byte	0x33
	.byte	0x55
	.byte	0x44
	.byte	0xff
	.byte	0x88
	.byte	0x88
	.byte	0x44
	.byte	0xff
	.byte	0x88
	.byte	0x88
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.byte	0x55
	.byte	0x66
	.byte	0x66
	.byte	0x0
	.byte	0x99
	.byte	0x99
	.byte	0x55
	.byte	0x66
	.byte	0x99
	.byte	0x99
	.byte	0x55
	.byte	0x66
	.byte	0x66
	.byte	0x66
	.byte	0x55
	.byte	0x55
	.byte	0x88
	.byte	0x66
	.byte	0x66
	.byte	0x88
	.byte	0x88
	.byte	0x66
	.byte	0x66
	.byte	0x88
	.byte	0xff
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x66
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x44
	.byte	0x99
	.byte	0x77
	.byte	0x33
	.byte	0x44
	.byte	0x99
	.byte	0x77
	.byte	0x33
	.byte	0x66
	.byte	0x99
	.byte	0x99
	.byte	0x66
	.byte	0x66
	.byte	0x99
	.byte	0x99
	.byte	0x66
	.byte	0x0
	.byte	0x66
	.byte	0x66
	.byte	0x66
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x11
	.byte	0x44
	.byte	0x44
	.byte	0x0
	.byte	0x11
	.byte	0x44
	.byte	0x44
	.byte	0x0
	.byte	0x66
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x66
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x44
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x44
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x66
	.byte	0x44
	.byte	0x44
	.byte	0x44
	.byte	0x66
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x66
	.byte	0x99
	.byte	0xee
	.byte	0xee
	.byte	0x66
	.byte	0x99
	.byte	0xee
	.byte	0xee
	.byte	0x66
	.byte	0x99
	.byte	0x99
	.byte	0xee
	.byte	0x66
	.byte	0x99
	.byte	0x99
	.byte	0xee
	.byte	0x0
	.byte	0x66
	.byte	0x55
	.byte	0x55
	.byte	0x0
	.byte	0x66
	.byte	0x55
	.byte	0x55
	.byte	0x0
	.byte	0x66
	.byte	0x55
	.byte	0x55
	.byte	0x0
	.byte	0x66
	.byte	0x66
	.byte	0x55
	.byte	0xee
	.byte	0x66
	.byte	0x55
	.byte	0xee
	.byte	0xee
	.byte	0x66
	.byte	0x55
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0xee
	.byte	0x99
	.byte	0x99
	.byte	0x99
	.byte	0x99
	.byte	0x55
	.byte	0x55
	.byte	0x55
	.byte	0x55
	.byte	0x55
	.byte	0x55
	.byte	0x55
	.byte	0x55
	.byte	0x55
	.byte	0x55
	.byte	0x55
	.byte	0x55
	.byte	0xee
	.byte	0x55
	.byte	0x55
	.byte	0x55
	.byte	0xee
	.byte	0x55
	.byte	0x55
	.byte	0x55
	.byte	0xee
	.byte	0x99
	.byte	0x55
	.byte	0x55
	.byte	0xee
	.byte	0x99
	.byte	0x55
	.byte	0x55
	.byte	0x99
	.byte	0x66
	.byte	0x55
	.byte	0x55
	.byte	0x55
	.byte	0x66
	.byte	0x55
	.byte	0x55
	.byte	0x55
	.byte	0x66
	.byte	0x55
	.byte	0x55
	.byte	0x66
	.byte	0x0
	.byte	0x66
	.byte	0x55
	.byte	0x66
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x66
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x55
	.byte	0x66
	.byte	0x0
	.byte	0x0
	.byte	0x55
	.byte	0x66
	.byte	0x0
	.byte	0x0
	.byte	0x55
	.byte	0x66
	.byte	0x0
	.byte	0x0
	.byte	0x55
	.byte	0x66
	.byte	0x0
	.byte	0x0
	.byte	0x55
	.byte	0x66
	.byte	0x0
	.byte	0x0
	.byte	0x55
	.byte	0x55
	.byte	0x66
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x66
	.byte	0x99
	.byte	0x99
	.byte	0x0
	.byte	0x66
	.byte	0x99
	.byte	0x99
	.byte	0x0
	.byte	0x66
	.byte	0x99
	.byte	0x99
	.byte	0x0
	.byte	0x66
	.byte	0x99
	.byte	0x99
	.byte	0x0
	.byte	0x66
	.byte	0x55
	.byte	0x55
	.byte	0x0
	.byte	0x66
	.byte	0x55
	.byte	0x55
	.byte	0x0
	.byte	0x66
	.byte	0x55
	.byte	0x55
	.byte	0x0
	.byte	0x66
	.byte	0x55
	.byte	0x55
	.byte	0x99
	.byte	0x99
	.byte	0x55
	.byte	0x66
	.byte	0x99
	.byte	0x99
	.byte	0x55
	.byte	0x66
	.byte	0x99
	.byte	0x99
	.byte	0x99
	.byte	0xff
	.byte	0x99
	.byte	0x99
	.byte	0x99
	.byte	0xff
	.byte	0x99
	.byte	0x99
	.byte	0x99
	.byte	0x99
	.byte	0x99
	.byte	0x99
	.byte	0x99
	.byte	0x99
	.byte	0x55
	.byte	0x55
	.byte	0x55
	.byte	0x55
	.byte	0x55
	.byte	0x55
	.byte	0x55
	.byte	0x55
	.byte	0x0
	.byte	0x0
	.byte	0x66
	.byte	0x55
	.byte	0x0
	.byte	0x0
	.byte	0x66
	.byte	0x55
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x44
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x44
	.byte	0x99
	.byte	0x66
	.byte	0x55
	.byte	0x55
	.byte	0x99
	.byte	0x66
	.byte	0x55
	.byte	0x55
	.byte	0x55
	.byte	0x66
	.byte	0x55
	.byte	0x55
	.byte	0x55
	.byte	0x66
	.byte	0x55
	.byte	0x55
	.byte	0x55
	.byte	0x55
	.byte	0x44
	.byte	0x0
	.byte	0x55
	.byte	0x55
	.byte	0x44
	.byte	0x0
	.byte	0x33
	.byte	0x33
	.byte	0x44
	.byte	0x0
	.byte	0x33
	.byte	0x33
	.byte	0x44
	.byte	0x0
	.byte	0x55
	.byte	0x66
	.byte	0x0
	.byte	0x0
	.byte	0x55
	.byte	0x66
	.byte	0x0
	.byte	0x0
	.byte	0x55
	.byte	0x66
	.byte	0x0
	.byte	0x0
	.byte	0x55
	.byte	0x66
	.byte	0x0
	.byte	0x0
	.size	 sSpriteImage_83FCD28,2048
	.align	2, 0
	.type	 sShrinkingBoxTileset,object
sShrinkingBoxTileset:
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0xffffffff
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0xffffffff
	.word	0xf0000000
	.word	0xf0000000
	.word	0xf0000000
	.word	0xf0000000
	.word	0xf0000000
	.word	0xf0000000
	.word	0xf0000000
	.word	0xffffffff
	.word	0xf0000000
	.word	0xf0000000
	.word	0xf0000000
	.word	0xf0000000
	.word	0xf0000000
	.word	0xf0000000
	.word	0xffffffff
	.word	0xffffffff
	.word	0xf000000f
	.word	0xf000000f
	.word	0xf000000f
	.word	0xf000000f
	.word	0xf000000f
	.word	0xf000000f
	.word	0xffffffff
	.word	0xffffffff
	.word	0xffffffff
	.word	0xf000000f
	.word	0xf000000f
	.word	0xf000000f
	.word	0xf000000f
	.word	0xf000000f
	.word	0xffffffff
	.word	0xffffffff
	.word	0xffffffff
	.word	0xff00000f
	.word	0xff00000f
	.word	0xff00000f
	.word	0xff00000f
	.word	0xff00000f
	.word	0xffffffff
	.word	0xffffffff
	.word	0xffffffff
	.word	0xff00000f
	.word	0xff00000f
	.word	0xff00000f
	.word	0xff00000f
	.word	0xffffffff
	.word	0xffffffff
	.word	0xffffffff
	.word	0xffffffff
	.word	0xff0000ff
	.word	0xff0000ff
	.word	0xff0000ff
	.word	0xff0000ff
	.word	0xffffffff
	.word	0xffffffff
	.word	0xffffffff
	.word	0xffffffff
	.word	0xffffffff
	.word	0xff0000ff
	.word	0xff0000ff
	.word	0xff0000ff
	.word	0xffffffff
	.word	0xffffffff
	.word	0xffffffff
	.word	0xffffffff
	.word	0xffffffff
	.word	0xfff000ff
	.word	0xfff000ff
	.word	0xfff000ff
	.word	0xffffffff
	.word	0xffffffff
	.word	0xffffffff
	.word	0xffffffff
	.word	0xffffffff
	.word	0xfff000ff
	.word	0xfff000ff
	.word	0xffffffff
	.word	0xffffffff
	.word	0xffffffff
	.word	0xffffffff
	.word	0xffffffff
	.word	0xffffffff
	.word	0xfff00fff
	.word	0xfff00fff
	.word	0xffffffff
	.word	0xffffffff
	.word	0xffffffff
	.word	0xffffffff
	.word	0xffffffff
	.word	0xffffffff
	.word	0xffffffff
	.word	0xfff00fff
	.word	0xffffffff
	.word	0xffffffff
	.word	0xffffffff
	.word	0xffffffff
	.word	0xffffffff
	.word	0xffffffff
	.word	0xffffffff
	.word	0xffffffff
	.word	0xffffffff
	.word	0xffffffff
	.word	0xffffffff
	.size	 sShrinkingBoxTileset,480
	.align	2, 0
	.type	 sTransitionStructPtr,object
	.size	 sTransitionStructPtr,4
sTransitionStructPtr:
	.word	gSharedMem+0xc000
	.align	2, 0
	.type	 sPhase1_Tasks,object
	.size	 sPhase1_Tasks,68
sPhase1_Tasks:
	.word	Phase1Task_TransitionAll
	.word	Phase1Task_TransitionAll
	.word	Phase1Task_TransitionAll
	.word	Phase1Task_TransitionAll
	.word	Phase1Task_TransitionAll
	.word	Phase1Task_TransitionAll
	.word	Phase1Task_TransitionAll
	.word	Phase1Task_TransitionAll
	.word	Phase1Task_TransitionAll
	.word	Phase1Task_TransitionAll
	.word	Phase1Task_TransitionAll
	.word	Phase1Task_TransitionAll
	.word	Phase1Task_TransitionAll
	.word	Phase1Task_TransitionAll
	.word	Phase1Task_TransitionAll
	.word	Phase1Task_TransitionAll
	.word	Phase1Task_TransitionAll
	.align	2, 0
	.type	 sPhase2_Tasks,object
	.size	 sPhase2_Tasks,68
sPhase2_Tasks:
	.word	Phase2Task_Transition_Blur
	.word	Phase2Task_Transition_Swirl
	.word	Phase2Task_Transition_Shuffle
	.word	Phase2Task_Transition_BigPokeball
	.word	Phase2Task_Transition_PokeballsTrail
	.word	Phase2Task_Transition_Clockwise_BlackFade
	.word	Phase2Task_Transition_Ripple
	.word	Phase2Task_Transition_Wave
	.word	Phase2Task_Transition_Slice
	.word	Phase2Task_Transition_WhiteFade
	.word	Phase2Task_Transition_GridSquares
	.word	Phase2Task_Transition_Shards
	.word	Phase2Task_Transition_Sydney
	.word	Phase2Task_Transition_Phoebe
	.word	Phase2Task_Transition_Glacia
	.word	Phase2Task_Transition_Drake
	.word	Phase2Task_Transition_Steven
	.align	2, 0
	.type	 sMainTransitionPhases,object
sMainTransitionPhases:
	.word	Transition_Phase1
	.word	Transition_WaitForPhase1
	.word	Transition_Phase2
	.word	Transition_WaitForPhase2
	.size	 sMainTransitionPhases,16
	.align	2, 0
	.type	 sPhase2_Transition_Blur_Funcs,object
sPhase2_Transition_Blur_Funcs:
	.word	Phase2_Transition_Blur_Func1
	.word	Phase2_Transition_Blur_Func2
	.word	Phase2_Transition_Blur_Func3
	.size	 sPhase2_Transition_Blur_Funcs,12
	.align	2, 0
	.type	 sPhase2_Transition_Swirl_Funcs,object
sPhase2_Transition_Swirl_Funcs:
	.word	Phase2_Transition_Swirl_Func1
	.word	Phase2_Transition_Swirl_Func2
	.size	 sPhase2_Transition_Swirl_Funcs,8
	.align	2, 0
	.type	 sPhase2_Transition_Shuffle_Funcs,object
sPhase2_Transition_Shuffle_Funcs:
	.word	Phase2_Transition_Shuffle_Func1
	.word	Phase2_Transition_Shuffle_Func2
	.size	 sPhase2_Transition_Shuffle_Funcs,8
	.align	2, 0
	.type	 sPhase2_Transition_BigPokeball_Funcs,object
sPhase2_Transition_BigPokeball_Funcs:
	.word	Phase2_Transition_BigPokeball_Func1
	.word	Phase2_Transition_BigPokeball_Func2
	.word	Phase2_Transition_BigPokeball_Func3
	.word	Phase2_Transition_BigPokeball_Func4
	.word	Phase2_Transition_BigPokeball_Func5
	.word	Phase2_Transition_BigPokeball_Func6
	.size	 sPhase2_Transition_BigPokeball_Funcs,24
	.align	2, 0
	.type	 sPhase2_Transition_PokeballsTrail_Funcs,object
sPhase2_Transition_PokeballsTrail_Funcs:
	.word	Phase2_Transition_PokeballsTrail_Func1
	.word	Phase2_Transition_PokeballsTrail_Func2
	.word	Phase2_Transition_PokeballsTrail_Func3
	.size	 sPhase2_Transition_PokeballsTrail_Funcs,12
	.align	1, 0
	.type	 sUnknown_083FD7E4,object
	.size	 sUnknown_083FD7E4,4
sUnknown_083FD7E4:
	.short	0xfffffff0
	.short	0x100
	.align	1, 0
	.type	 sUnknown_083FD7E8,object
	.size	 sUnknown_083FD7E8,10
sUnknown_083FD7E8:
	.short	0x0
	.short	0x20
	.short	0x40
	.short	0x12
	.short	0x30
	.align	1, 0
	.type	 sUnknown_083FD7F2,object
	.size	 sUnknown_083FD7F2,4
sUnknown_083FD7F2:
	.short	0x8
	.short	0xfffffff8
	.align	2, 0
	.type	 sPhase2_Transition_Clockwise_BlackFade_Funcs,object
sPhase2_Transition_Clockwise_BlackFade_Funcs:
	.word	Phase2_Transition_Clockwise_BlackFade_Func1
	.word	Phase2_Transition_Clockwise_BlackFade_Func2
	.word	Phase2_Transition_Clockwise_BlackFade_Func3
	.word	Phase2_Transition_Clockwise_BlackFade_Func4
	.word	Phase2_Transition_Clockwise_BlackFade_Func5
	.word	Phase2_Transition_Clockwise_BlackFade_Func6
	.word	Phase2_Transition_Clockwise_BlackFade_Func7
	.size	 sPhase2_Transition_Clockwise_BlackFade_Funcs,28
	.align	2, 0
	.type	 sPhase2_Transition_Ripple_Funcs,object
sPhase2_Transition_Ripple_Funcs:
	.word	Phase2_Transition_Ripple_Func1
	.word	Phase2_Transition_Ripple_Func2
	.size	 sPhase2_Transition_Ripple_Funcs,8
	.align	2, 0
	.type	 sPhase2_Transition_Wave_Funcs,object
sPhase2_Transition_Wave_Funcs:
	.word	Phase2_Transition_Wave_Func1
	.word	Phase2_Transition_Wave_Func2
	.word	Phase2_Transition_Wave_Func3
	.size	 sPhase2_Transition_Wave_Funcs,12
	.align	2, 0
	.type	 sPhase2_Mugshot_Transition_Funcs,object
sPhase2_Mugshot_Transition_Funcs:
	.word	Phase2_Mugshot_Func1
	.word	Phase2_Mugshot_Func2
	.word	Phase2_Mugshot_Func3
	.word	Phase2_Mugshot_Func4
	.word	Phase2_Mugshot_Func5
	.word	Phase2_Mugshot_Func6
	.word	Phase2_Mugshot_Func7
	.word	Phase2_Mugshot_Func8
	.word	Phase2_Mugshot_Func9
	.word	Phase2_Mugshot_Func10
	.size	 sPhase2_Mugshot_Transition_Funcs,40
	.type	 sMugshotsTrainerPicIDsTable,object
	.size	 sMugshotsTrainerPicIDsTable,5
sMugshotsTrainerPicIDsTable:
	.byte	0x4f
	.byte	0x50
	.byte	0x51
	.byte	0x52
	.byte	0x1d
	.align	1, 0
	.type	 sMugshotsOpponentRotationScales,object
	.size	 sMugshotsOpponentRotationScales,20
sMugshotsOpponentRotationScales:
	.short	0x200
	.short	0x200
	.short	0x200
	.short	0x200
	.short	0x1b0
	.short	0x1b0
	.short	0x1a0
	.short	0x1a0
	.short	0x188
	.short	0x188
	.align	1, 0
	.type	 sMugshotsOpponentCoords,object
	.size	 sMugshotsOpponentCoords,20
sMugshotsOpponentCoords:
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xfffffffc
	.short	0x4
	.short	0x0
	.short	0x5
	.short	0x0
	.short	0x7
	.align	2, 0
	.type	 sUnknown_083FD880,object
sUnknown_083FD880:
	.word	sub_811C934
	.word	sub_811C938
	.word	sub_811C984
	.word	sub_811C9B8
	.word	sub_811C934
	.word	sub_811C9E4
	.word	sub_811C934
	.size	 sUnknown_083FD880,28
	.align	1, 0
	.type	 sUnknown_083FD89C,object
	.size	 sUnknown_083FD89C,4
sUnknown_083FD89C:
	.short	0xc
	.short	0xfffffff4
	.align	1, 0
	.type	 sUnknown_083FD8A0,object
	.size	 sUnknown_083FD8A0,4
sUnknown_083FD8A0:
	.short	0xffffffff
	.short	0x1
	.align	2, 0
	.type	 sPhase2_Transition_Slice_Funcs,object
sPhase2_Transition_Slice_Funcs:
	.word	Phase2_Transition_Slice_Func1
	.word	Phase2_Transition_Slice_Func2
	.word	Phase2_Transition_Slice_Func3
	.size	 sPhase2_Transition_Slice_Funcs,12
	.align	2, 0
	.type	 sPhase2_Transition_WhiteFade_Funcs,object
sPhase2_Transition_WhiteFade_Funcs:
	.word	Phase2_Transition_WhiteFade_Func1
	.word	Phase2_Transition_WhiteFade_Func2
	.word	Phase2_Transition_WhiteFade_Func3
	.word	Phase2_Transition_WhiteFade_Func4
	.word	Phase2_Transition_WhiteFade_Func5
	.size	 sPhase2_Transition_WhiteFade_Funcs,20
	.align	1, 0
	.type	 sUnknown_083FD8C4,object
	.size	 sUnknown_083FD8C4,16
sUnknown_083FD8C4:
	.short	0x0
	.short	0x14
	.short	0xf
	.short	0x28
	.short	0xa
	.short	0x19
	.short	0x23
	.short	0x5
	.align	2, 0
	.type	 sPhase2_Transition_GridSquares_Funcs,object
sPhase2_Transition_GridSquares_Funcs:
	.word	Phase2_Transition_GridSquares_Func1
	.word	Phase2_Transition_GridSquares_Func2
	.word	Phase2_Transition_GridSquares_Func3
	.size	 sPhase2_Transition_GridSquares_Funcs,12
	.align	2, 0
	.type	 sPhase2_Transition_Shards_Funcs,object
sPhase2_Transition_Shards_Funcs:
	.word	Phase2_Transition_Shards_Func1
	.word	Phase2_Transition_Shards_Func2
	.word	Phase2_Transition_Shards_Func3
	.word	Phase2_Transition_Shards_Func4
	.word	Phase2_Transition_Shards_Func5
	.size	 sPhase2_Transition_Shards_Funcs,20
	.align	1, 0
	.type	 sUnknown_083FD8F4,object
sUnknown_083FD8F4:
	.short	0x38
	.short	0x0
	.short	0x0
	.short	0xa0
	.short	0x0
	.short	0x68
	.short	0xa0
	.short	0xf0
	.short	0x58
	.short	0x1
	.short	0xf0
	.short	0x48
	.short	0x38
	.short	0x0
	.short	0x1
	.short	0x0
	.short	0x20
	.short	0x90
	.short	0xa0
	.short	0x0
	.short	0x90
	.short	0xa0
	.short	0xb8
	.short	0x0
	.short	0x1
	.short	0x38
	.short	0x0
	.short	0xa8
	.short	0xa0
	.short	0x0
	.short	0xa8
	.short	0xa0
	.short	0x30
	.short	0x0
	.short	0x1
	.size	 sUnknown_083FD8F4,70
	.align	1, 0
	.type	 sUnknown_083FD93A,object
sUnknown_083FD93A:
	.short	0x8
	.short	0x4
	.short	0x2
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x0
	.size	 sUnknown_083FD93A,14
	.align	2, 0
	.type	 sPhase1_TransitionAll_Funcs,object
sPhase1_TransitionAll_Funcs:
	.word	Phase1_TransitionAll_Func1
	.word	Phase1_TransitionAll_Func2
	.size	 sPhase1_TransitionAll_Funcs,8
	.align	2, 0
	.type	 sSpriteImageTable_83FD950,object
sSpriteImageTable_83FD950:
	.word	sSpriteImage_83FC148
	.short	0x200
	.space	2
	.size	 sSpriteImageTable_83FD950,8
	.align	2, 0
	.type	 sSpriteAnim_83FD958,object
sSpriteAnim_83FD958:
	.short	0x0
	.byte	0x1
	.space	1
	.short	0xffffffff
	.space	2
	.size	 sSpriteAnim_83FD958,8
	.align	2, 0
	.type	 sSpriteAnimTable_83FD960,object
sSpriteAnimTable_83FD960:
	.word	sSpriteAnim_83FD958
	.size	 sSpriteAnimTable_83FD960,4
	.align	2, 0
	.type	 sSpriteAffineAnim_83FD964,object
sSpriteAffineAnim_83FD964:
	.short	0x0
	.short	0x0
	.byte	0xfc
	.byte	0x1
	.space	2
	.short	0x7ffe
	.short	0x0
	.space	4
	.size	 sSpriteAffineAnim_83FD964,16
	.align	2, 0
	.type	 sSpriteAffineAnim_83FD974,object
sSpriteAffineAnim_83FD974:
	.short	0x0
	.short	0x0
	.byte	0x4
	.byte	0x1
	.space	2
	.short	0x7ffe
	.short	0x0
	.space	4
	.size	 sSpriteAffineAnim_83FD974,16
	.align	2, 0
	.type	 sSpriteAffineAnimTable_83FD984,object
sSpriteAffineAnimTable_83FD984:
	.word	sSpriteAffineAnim_83FD964
	.word	sSpriteAffineAnim_83FD974
	.size	 sSpriteAffineAnimTable_83FD984,8
	.align	2, 0
	.type	 sSpriteTemplate_83FD98C,object
	.size	 sSpriteTemplate_83FD98C,24
sSpriteTemplate_83FD98C:
	.short	0xffff
	.short	0x1009
	.word	gFieldOamData_32x32
	.word	sSpriteAnimTable_83FD960
	.word	sSpriteImageTable_83FD950
	.word	sSpriteAffineAnimTable_83FD984
	.word	sub_811B720
	.align	2, 0
	.type	 gOamData_83FD9A4,object
	.size	 gOamData_83FD9A4,8
gOamData_83FD9A4:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xc0
	.byte	0x0
	.byte	0x0
	.short	0x0
	.align	2, 0
	.type	 sSpriteImageTable_83FD9AC,object
sSpriteImageTable_83FD9AC:
	.word	sSpriteImage_83FC528
	.short	0x800
	.space	2
	.size	 sSpriteImageTable_83FD9AC,8
	.align	2, 0
	.type	 sSpriteImageTable_83FD9B4,object
sSpriteImageTable_83FD9B4:
	.word	sSpriteImage_83FCD28
	.short	0x800
	.space	2
	.size	 sSpriteImageTable_83FD9B4,8
	.align	2, 0
	.type	 sSpriteAnim_83FD9BC,object
sSpriteAnim_83FD9BC:
	.short	0x0
	.byte	0x1
	.space	1
	.short	0xffffffff
	.space	2
	.size	 sSpriteAnim_83FD9BC,8
	.align	2, 0
	.type	 sSpriteAnimTable_83FD9C4,object
sSpriteAnimTable_83FD9C4:
	.word	sSpriteAnim_83FD9BC
	.size	 sSpriteAnimTable_83FD9C4,4
	.align	2, 0
	.type	 sSpriteTemplate_83FD9C8,object
	.size	 sSpriteTemplate_83FD9C8,24
sSpriteTemplate_83FD9C8:
	.short	0xffff
	.short	0x100a
	.word	gOamData_83FD9A4
	.word	sSpriteAnimTable_83FD9C4
	.word	sSpriteImageTable_83FD9AC
	.word	gDummySpriteAffineAnimTable
	.word	sub_811C90C
	.align	2, 0
	.type	 sSpriteTemplate_83FD9E0,object
	.size	 sSpriteTemplate_83FD9E0,24
sSpriteTemplate_83FD9E0:
	.short	0xffff
	.short	0x100a
	.word	gOamData_83FD9A4
	.word	sSpriteAnimTable_83FD9C4
	.word	sSpriteImageTable_83FD9B4
	.word	gDummySpriteAffineAnimTable
	.word	sub_811C90C
	.align	1, 0
	.type	 gFieldEffectObjectPalette10,object
gFieldEffectObjectPalette10:
	.short	0x76ac
	.short	0x3e
	.short	0x5b5d
	.short	0x4adb
	.short	0x7fff
	.short	0x779b
	.short	0x7337
	.short	0x6ed3
	.short	0x5a6c
	.short	0x12
	.short	0x6318
	.short	0x539d
	.short	0x433b
	.short	0x36da
	.short	0x2a79
	.short	0x0
	.size	 gFieldEffectObjectPalette10,32
	.globl	gFieldEffectObjectPaletteInfo10
	.align	2, 0
	.type	 gFieldEffectObjectPaletteInfo10,object
	.size	 gFieldEffectObjectPaletteInfo10,8
gFieldEffectObjectPaletteInfo10:
	.word	gFieldEffectObjectPalette10
	.short	0x1009
	.space	2
	.align	1, 0
	.type	 sMugshotPal_Sydney,object
sMugshotPal_Sydney:
	.short	0x18d5
	.short	0x39ce
	.short	0x4a52
	.short	0x5ad6
	.short	0x6b5a
	.short	0x5c17
	.short	0x6459
	.short	0x6c9b
	.short	0x74dd
	.short	0x7d1f
	.short	0x6acd
	.short	0x730f
	.short	0x7b51
	.short	0x7f93
	.short	0x7fd5
	.short	0x7fff
	.size	 sMugshotPal_Sydney,32
	.align	1, 0
	.type	 sMugshotPal_Phoebe,object
sMugshotPal_Phoebe:
	.short	0x18d5
	.short	0x39ce
	.short	0x4a52
	.short	0x5ad6
	.short	0x6b5a
	.short	0x741
	.short	0x13a4
	.short	0x1bc6
	.short	0x27e9
	.short	0x3fef
	.short	0x45fc
	.short	0x4e3e
	.short	0x567f
	.short	0x5ebf
	.short	0x66ff
	.short	0x45fc
	.size	 sMugshotPal_Phoebe,32
	.align	1, 0
	.type	 sMugshotPal_Glacia,object
sMugshotPal_Glacia:
	.short	0x18d5
	.short	0x39ce
	.short	0x4a52
	.short	0x5ad6
	.short	0x6b5a
	.short	0x555f
	.short	0x5d9f
	.short	0x65df
	.short	0x6e1f
	.short	0x765f
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.size	 sMugshotPal_Glacia,32
	.align	1, 0
	.type	 sMugshotPal_Drake,object
sMugshotPal_Drake:
	.short	0x18d5
	.short	0x39ce
	.short	0x4a52
	.short	0x5ad6
	.short	0x6b5a
	.short	0x4000
	.short	0x4842
	.short	0x5084
	.short	0x58c6
	.short	0x6108
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.size	 sMugshotPal_Drake,32
	.align	1, 0
	.type	 sMugshotPal_Steven,object
sMugshotPal_Steven:
	.short	0x18d5
	.short	0x39ce
	.short	0x4a52
	.short	0x5ad6
	.short	0x6b5a
	.short	0x2318
	.short	0x2b5a
	.short	0x339c
	.short	0x3bde
	.short	0x43ff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.size	 sMugshotPal_Steven,32
	.align	1, 0
	.type	 sMugshotPal_Brendan,object
sMugshotPal_Brendan:
	.short	0x6acd
	.short	0x730f
	.short	0x7b51
	.short	0x7f93
	.short	0x7fd5
	.short	0x7fff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.size	 sMugshotPal_Brendan,32
	.align	1, 0
	.type	 sMugshotPal_May,object
sMugshotPal_May:
	.short	0x45fc
	.short	0x4e3e
	.short	0x567f
	.short	0x5ebf
	.short	0x66ff
	.short	0x7fff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.size	 sMugshotPal_May,32
	.align	2, 0
	.type	 sOpponentMugshotsPals,object
	.size	 sOpponentMugshotsPals,20
sOpponentMugshotsPals:
	.word	sMugshotPal_Sydney
	.word	sMugshotPal_Phoebe
	.word	sMugshotPal_Glacia
	.word	sMugshotPal_Drake
	.word	sMugshotPal_Steven
	.align	2, 0
	.type	 sPlayerMugshotsPals,object
	.size	 sPlayerMugshotsPals,8
sPlayerMugshotsPals:
	.word	sMugshotPal_Brendan
	.word	sMugshotPal_May
	.align	1, 0
	.type	 sUnusedTrainerPalette,object
sUnusedTrainerPalette:
	.short	0x530e
	.short	0x677f
	.short	0x4a9b
	.short	0x3a19
	.short	0x296f
	.short	0x3d27
	.short	0x30e5
	.short	0x28a3
	.short	0x1c82
	.short	0x779b
	.short	0x2f1f
	.short	0x2e77
	.short	0x2d9f
	.short	0x2118
	.short	0x7fff
	.short	0x0
	.size	 sUnusedTrainerPalette,32
	.align	2, 0
	.type	 sSpritePalette_UnusedTrainer,object
	.size	 sSpritePalette_UnusedTrainer,8
sSpritePalette_UnusedTrainer:
	.word	sUnusedTrainerPalette
	.short	0x100a
	.space	2
	.align	1, 0
	.type	 sBigPokeball_Tilemap,object
sBigPokeball_Tilemap:
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x3
	.short	0x4
	.short	0x5
	.short	0x6
	.short	0x406
	.short	0x405
	.short	0x404
	.short	0x403
	.short	0x400
	.short	0x400
	.short	0x400
	.short	0x400
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x7
	.short	0x8
	.short	0x9
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x401
	.short	0x401
	.short	0x401
	.short	0x409
	.short	0x408
	.short	0x407
	.short	0x400
	.short	0x400
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xa
	.short	0xb
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x401
	.short	0x401
	.short	0x401
	.short	0x401
	.short	0x401
	.short	0x40b
	.short	0x40a
	.short	0x400
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xd
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x401
	.short	0x401
	.short	0x401
	.short	0x401
	.short	0x401
	.short	0x401
	.short	0x40d
	.short	0x400
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xe
	.short	0xf
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x401
	.short	0x401
	.short	0x401
	.short	0x401
	.short	0x401
	.short	0x401
	.short	0x40f
	.short	0x40e
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x10
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x401
	.short	0x401
	.short	0x401
	.short	0x401
	.short	0x401
	.short	0x401
	.short	0x401
	.short	0x410
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x11
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x24
	.short	0x25
	.short	0x425
	.short	0x424
	.short	0x401
	.short	0x401
	.short	0x401
	.short	0x401
	.short	0x401
	.short	0x411
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x12
	.short	0x13
	.short	0x13
	.short	0x13
	.short	0x13
	.short	0x13
	.short	0x26
	.short	0x27
	.short	0x427
	.short	0x426
	.short	0x413
	.short	0x413
	.short	0x413
	.short	0x413
	.short	0x413
	.short	0x412
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x14
	.short	0x15
	.short	0x15
	.short	0x15
	.short	0x15
	.short	0x15
	.short	0x28
	.short	0x29
	.short	0x429
	.short	0x428
	.short	0x415
	.short	0x415
	.short	0x415
	.short	0x415
	.short	0x415
	.short	0x414
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x16
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2a
	.short	0x2b
	.short	0x42b
	.short	0x42a
	.short	0x402
	.short	0x402
	.short	0x402
	.short	0x402
	.short	0x402
	.short	0x416
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x17
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x402
	.short	0x402
	.short	0x402
	.short	0x402
	.short	0x402
	.short	0x402
	.short	0x402
	.short	0x417
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x18
	.short	0x19
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x402
	.short	0x402
	.short	0x402
	.short	0x402
	.short	0x402
	.short	0x402
	.short	0x419
	.short	0x418
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x1a
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x402
	.short	0x402
	.short	0x402
	.short	0x402
	.short	0x402
	.short	0x402
	.short	0x41a
	.short	0x400
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x1b
	.short	0x1c
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x402
	.short	0x402
	.short	0x402
	.short	0x402
	.short	0x402
	.short	0x41c
	.short	0x41b
	.short	0x400
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x1d
	.short	0x1e
	.short	0x1f
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x402
	.short	0x402
	.short	0x402
	.short	0x41f
	.short	0x41e
	.short	0x41d
	.short	0x400
	.short	0x400
	.short	0x400
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x20
	.short	0x21
	.short	0x22
	.short	0x23
	.short	0x423
	.short	0x422
	.short	0x421
	.short	0x420
	.short	0x400
	.short	0x400
	.short	0x400
	.short	0x400
	.short	0x400
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.size	 sBigPokeball_Tilemap,1200
	.align	1, 0
	.type	 sMugshotsTilemap,object
sMugshotsTilemap:
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x1
	.short	0x6
	.short	0x6
	.short	0x6
	.short	0x3
	.short	0x3
	.short	0x3
	.short	0x3
	.short	0x6
	.short	0x3
	.short	0x3
	.short	0x3
	.short	0x3
	.short	0x3
	.short	0x3
	.short	0x3
	.short	0x6
	.short	0x6
	.short	0x6
	.short	0x3
	.short	0x3
	.short	0x3
	.short	0x3
	.short	0x6
	.short	0x6
	.short	0x3
	.short	0x3
	.short	0x3
	.short	0x3
	.short	0x3
	.short	0x6
	.short	0x3
	.short	0x3
	.short	0x4
	.short	0x4
	.short	0x7
	.short	0x4
	.short	0x7
	.short	0x7
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x7
	.short	0x7
	.short	0x7
	.short	0x7
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x7
	.short	0x7
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x7
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x805
	.short	0x805
	.short	0x805
	.short	0x805
	.short	0x805
	.short	0x805
	.short	0x805
	.short	0x805
	.short	0x805
	.short	0x805
	.short	0x805
	.short	0x805
	.short	0x805
	.short	0x805
	.short	0x805
	.short	0x805
	.short	0x805
	.short	0x805
	.short	0x805
	.short	0x805
	.short	0x805
	.short	0x805
	.short	0x805
	.short	0x805
	.short	0x805
	.short	0x805
	.short	0x805
	.short	0x805
	.short	0x805
	.short	0x805
	.short	0x805
	.short	0x805
	.short	0x7
	.short	0x804
	.short	0x804
	.short	0x7
	.short	0x7
	.short	0x804
	.short	0x804
	.short	0x804
	.short	0x804
	.short	0x804
	.short	0x804
	.short	0x804
	.short	0x804
	.short	0x804
	.short	0x804
	.short	0x7
	.short	0x7
	.short	0x804
	.short	0x804
	.short	0x804
	.short	0x7
	.short	0x7
	.short	0x804
	.short	0x804
	.short	0x804
	.short	0x804
	.short	0x804
	.short	0x804
	.short	0x7
	.short	0x7
	.short	0x804
	.short	0x804
	.short	0x803
	.short	0x803
	.short	0x803
	.short	0x803
	.short	0x803
	.short	0x6
	.short	0x6
	.short	0x803
	.short	0x803
	.short	0x6
	.short	0x803
	.short	0x803
	.short	0x6
	.short	0x803
	.short	0x803
	.short	0x803
	.short	0x803
	.short	0x803
	.short	0x6
	.short	0x6
	.short	0x6
	.short	0x803
	.short	0x803
	.short	0x803
	.short	0x803
	.short	0x803
	.short	0x6
	.short	0x6
	.short	0x6
	.short	0x803
	.short	0x803
	.short	0x803
	.short	0x801
	.short	0x801
	.short	0x801
	.short	0x801
	.short	0x801
	.short	0x801
	.short	0x801
	.short	0x801
	.short	0x801
	.short	0x801
	.short	0x801
	.short	0x801
	.short	0x801
	.short	0x801
	.short	0x801
	.short	0x801
	.short	0x801
	.short	0x801
	.short	0x801
	.short	0x801
	.short	0x801
	.short	0x801
	.short	0x801
	.short	0x801
	.short	0x801
	.short	0x801
	.short	0x801
	.short	0x801
	.short	0x801
	.short	0x801
	.short	0x801
	.short	0x801
	.short	0x8
	.short	0x8
	.short	0x8
	.short	0x8
	.short	0x8
	.short	0x8
	.short	0x8
	.short	0x8
	.short	0x8
	.short	0x8
	.short	0x8
	.short	0x8
	.short	0x8
	.short	0x8
	.short	0x8
	.short	0x8
	.short	0x8
	.short	0x8
	.short	0x8
	.short	0x8
	.short	0x8
	.short	0x8
	.short	0x8
	.short	0x8
	.short	0x8
	.short	0x8
	.short	0x8
	.short	0x8
	.short	0x8
	.short	0x8
	.short	0x8
	.short	0x8
	.short	0x9
	.short	0xd
	.short	0x9
	.short	0x9
	.short	0xd
	.short	0xd
	.short	0xd
	.short	0xd
	.short	0x9
	.short	0x9
	.short	0x9
	.short	0xd
	.short	0xd
	.short	0x9
	.short	0xd
	.short	0x9
	.short	0x9
	.short	0x9
	.short	0x9
	.short	0xd
	.short	0xd
	.short	0xd
	.short	0x9
	.short	0x9
	.short	0x9
	.short	0xd
	.short	0xd
	.short	0x9
	.short	0x9
	.short	0x9
	.short	0x9
	.short	0x9
	.short	0xa
	.short	0xa
	.short	0xe
	.short	0xe
	.short	0xa
	.short	0xa
	.short	0xa
	.short	0xa
	.short	0xa
	.short	0xe
	.short	0xe
	.short	0xa
	.short	0xa
	.short	0xa
	.short	0xa
	.short	0xa
	.short	0xa
	.short	0xe
	.short	0xa
	.short	0xa
	.short	0xa
	.short	0xa
	.short	0xe
	.short	0xe
	.short	0xa
	.short	0xa
	.short	0xa
	.short	0xa
	.short	0xe
	.short	0xe
	.short	0xe
	.short	0xa
	.short	0xc
	.short	0xc
	.short	0xc
	.short	0xc
	.short	0xc
	.short	0xc
	.short	0xc
	.short	0xc
	.short	0xc
	.short	0xc
	.short	0xc
	.short	0xc
	.short	0xc
	.short	0xc
	.short	0xc
	.short	0xc
	.short	0xc
	.short	0xc
	.short	0xc
	.short	0xc
	.short	0xc
	.short	0xc
	.short	0xc
	.short	0xc
	.short	0xc
	.short	0xc
	.short	0xc
	.short	0xc
	.short	0xc
	.short	0xc
	.short	0xc
	.short	0xc
	.short	0x80c
	.short	0x80c
	.short	0x80c
	.short	0x80c
	.short	0x80c
	.short	0x80c
	.short	0x80c
	.short	0x80c
	.short	0x80c
	.short	0x80c
	.short	0x80c
	.short	0x80c
	.short	0x80c
	.short	0x80c
	.short	0x80c
	.short	0x80c
	.short	0x80c
	.short	0x80c
	.short	0x80c
	.short	0x80c
	.short	0x80c
	.short	0x80c
	.short	0x80c
	.short	0x80c
	.short	0x80c
	.short	0x80c
	.short	0x80c
	.short	0x80c
	.short	0x80c
	.short	0x80c
	.short	0x80c
	.short	0x80c
	.short	0xe
	.short	0x80a
	.short	0x80a
	.short	0x80a
	.short	0x80a
	.short	0xe
	.short	0xe
	.short	0xe
	.short	0x80a
	.short	0x80a
	.short	0x80a
	.short	0x80a
	.short	0x80a
	.short	0x80a
	.short	0x80a
	.short	0x80a
	.short	0x80a
	.short	0x80a
	.short	0x80a
	.short	0xe
	.short	0xe
	.short	0x80a
	.short	0x80a
	.short	0x80a
	.short	0x80a
	.short	0xe
	.short	0x80a
	.short	0x80a
	.short	0x80a
	.short	0x80a
	.short	0xe
	.short	0xe
	.short	0x809
	.short	0x809
	.short	0xd
	.short	0xd
	.short	0x809
	.short	0x809
	.short	0xd
	.short	0x809
	.short	0x809
	.short	0x809
	.short	0xd
	.short	0xd
	.short	0xd
	.short	0xd
	.short	0x809
	.short	0x809
	.short	0x809
	.short	0xd
	.short	0x809
	.short	0x809
	.short	0x809
	.short	0x809
	.short	0x809
	.short	0xd
	.short	0xd
	.short	0x809
	.short	0x809
	.short	0x809
	.short	0x809
	.short	0xd
	.short	0xd
	.short	0x809
	.short	0x808
	.short	0x808
	.short	0x808
	.short	0x808
	.short	0x808
	.short	0x808
	.short	0x808
	.short	0x808
	.short	0x808
	.short	0x808
	.short	0x808
	.short	0x808
	.short	0x808
	.short	0x808
	.short	0x808
	.short	0x808
	.short	0x808
	.short	0x808
	.short	0x808
	.short	0x808
	.short	0x808
	.short	0x808
	.short	0x808
	.short	0x808
	.short	0x808
	.short	0x808
	.short	0x808
	.short	0x808
	.short	0x808
	.short	0x808
	.short	0x808
	.short	0x808
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x800
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.size	 sMugshotsTilemap,1280
.text
	.align	2, 0
	.globl	BattleTransition_StartOnField
	.type	 BattleTransition_StartOnField,function
	.thumb_func
BattleTransition_StartOnField:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L3
	ldr	r1, .L3+0x4
	str	r1, [r2, #0x4]
	bl	LaunchBattleTransitionTask
	pop	{r0}
	bx	r0
.L4:
	.align	2, 0
.L3:
	.word	gMain
	.word	CB2_OverworldBasic
.Lfe1:
	.size	 BattleTransition_StartOnField,.Lfe1-BattleTransition_StartOnField
	.align	2, 0
	.globl	BattleTransition_Start
	.type	 BattleTransition_Start,function
	.thumb_func
BattleTransition_Start:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	LaunchBattleTransitionTask
	pop	{r0}
	bx	r0
.Lfe2:
	.size	 BattleTransition_Start,.Lfe2-BattleTransition_Start
	.align	2, 0
	.globl	IsBattleTransitionDone
	.type	 IsBattleTransitionDone,function
	.thumb_func
IsBattleTransitionDone:
	push	{lr}
	ldr	r0, .L10
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r1, .L10+0x4
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r1, #0x26
	ldrsh	r0, [r0, r1]
	cmp	r0, #0
	bne	.L7	@cond_branch
	mov	r0, #0x0
	b	.L9
.L11:
	.align	2, 0
.L10:
	.word	Task_BattleTransitionMain
	.word	gTasks
.L7:
	add	r0, r2, #0
	bl	DestroyTask
	mov	r0, #0x1
.L9:
	pop	{r1}
	bx	r1
.Lfe3:
	.size	 IsBattleTransitionDone,.Lfe3-IsBattleTransitionDone
	.align	2, 0
	.type	 LaunchBattleTransitionTask,function
	.thumb_func
LaunchBattleTransitionTask:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L13
	mov	r1, #0x2
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L13+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	strh	r4, [r1, #0xa]
	pop	{r4}
	pop	{r0}
	bx	r0
.L14:
	.align	2, 0
.L13:
	.word	Task_BattleTransitionMain
	.word	gTasks
.Lfe4:
	.size	 LaunchBattleTransitionTask,.Lfe4-LaunchBattleTransitionTask
	.align	2, 0
	.type	 Task_BattleTransitionMain,function
	.thumb_func
Task_BattleTransitionMain:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r5, .L20
	ldr	r2, .L20+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r4, r1, r2
.L16:
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	_call_via_r1
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L16	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L21:
	.align	2, 0
.L20:
	.word	sMainTransitionPhases
	.word	gTasks
.Lfe5:
	.size	 Task_BattleTransitionMain,.Lfe5-Task_BattleTransitionMain
	.align	2, 0
	.type	 Transition_Phase1,function
	.thumb_func
Transition_Phase1:
	push	{r4, lr}
	add	r4, r0, #0
	bl	sub_807DE10
	ldr	r0, .L26
	ldr	r1, .L26+0x4
	ldr	r2, .L26+0x8
	bl	CpuSet
	ldr	r1, .L26+0xc
	mov	r2, #0xa
	ldrsh	r0, [r4, r2]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	cmp	r0, #0
	bne	.L23	@cond_branch
	mov	r0, #0x2
	strh	r0, [r4, #0x8]
	mov	r0, #0x1
	b	.L25
.L27:
	.align	2, 0
.L26:
	.word	gPlttBufferFaded
	.word	gPlttBufferUnfaded
	.word	0x4000100
	.word	sPhase1_Tasks
.L23:
	mov	r1, #0x4
	bl	CreateTask
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	mov	r0, #0x0
.L25:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe6:
	.size	 Transition_Phase1,.Lfe6-Transition_Phase1
	.align	2, 0
	.type	 Transition_WaitForPhase1,function
	.thumb_func
Transition_WaitForPhase1:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r1, .L32
	mov	r2, #0xa
	ldrsh	r0, [r4, r2]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xff
	beq	.L29	@cond_branch
	mov	r0, #0x0
	b	.L31
.L33:
	.align	2, 0
.L32:
	.word	sPhase1_Tasks
.L29:
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	mov	r0, #0x1
.L31:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe7:
	.size	 Transition_WaitForPhase1,.Lfe7-Transition_WaitForPhase1
	.align	2, 0
	.type	 Transition_Phase2,function
	.thumb_func
Transition_Phase2:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r1, .L35
	mov	r2, #0xa
	ldrsh	r0, [r4, r2]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	r1, #0x0
	bl	CreateTask
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L36:
	.align	2, 0
.L35:
	.word	sPhase2_Tasks
.Lfe8:
	.size	 Transition_Phase2,.Lfe8-Transition_Phase2
	.align	2, 0
	.type	 Transition_WaitForPhase2,function
	.thumb_func
Transition_WaitForPhase2:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r0, #0x0
	strh	r0, [r4, #0x26]
	ldr	r1, .L39
	mov	r2, #0xa
	ldrsh	r0, [r4, r2]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xff
	bne	.L38	@cond_branch
	mov	r0, #0x1
	strh	r0, [r4, #0x26]
.L38:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L40:
	.align	2, 0
.L39:
	.word	sPhase2_Tasks
.Lfe9:
	.size	 Transition_WaitForPhase2,.Lfe9-Transition_WaitForPhase2
	.align	2, 0
	.type	 Phase1Task_TransitionAll,function
	.thumb_func
Phase1Task_TransitionAll:
	push	{r4, lr}
	add	sp, sp, #0xfffffffc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r4, r0, #0
	ldr	r1, .L45
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r1, r0, r1
	ldrh	r2, [r1, #0x8]
	mov	r3, #0x8
	ldrsh	r0, [r1, r3]
	cmp	r0, #0
	bne	.L42	@cond_branch
	add	r0, r2, #0x1
	strh	r0, [r1, #0x8]
	mov	r0, #0x2
	str	r0, [sp]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x3
	mov	r3, #0x2
	bl	CreatePhase1Task
	b	.L43
.L46:
	.align	2, 0
.L45:
	.word	gTasks
.L42:
	bl	sub_811D52C
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L43	@cond_branch
	add	r0, r4, #0
	bl	DestroyTask
.L43:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe10:
	.size	 Phase1Task_TransitionAll,.Lfe10-Phase1Task_TransitionAll
	.align	2, 0
	.type	 Phase2Task_Transition_Blur,function
	.thumb_func
Phase2Task_Transition_Blur:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r5, .L52
	ldr	r2, .L52+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r4, r1, r2
.L48:
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	_call_via_r1
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L48	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L53:
	.align	2, 0
.L52:
	.word	sPhase2_Transition_Blur_Funcs
	.word	gTasks
.Lfe11:
	.size	 Phase2Task_Transition_Blur,.Lfe11-Phase2Task_Transition_Blur
	.align	2, 0
	.type	 Phase2_Transition_Blur_Func1,function
	.thumb_func
Phase2_Transition_Blur_Func1:
	ldr	r2, .L55
	mov	r1, #0x0
	strh	r1, [r2]
	sub	r2, r2, #0x42
	ldrh	r1, [r2]
	mov	r3, #0x40
	orr	r1, r1, r3
	strh	r1, [r2]
	add	r2, r2, #0x2
	ldrh	r1, [r2]
	orr	r1, r1, r3
	strh	r1, [r2]
	add	r2, r2, #0x2
	ldrh	r1, [r2]
	orr	r1, r1, r3
	strh	r1, [r2]
	ldrh	r1, [r0, #0x8]
	add	r1, r1, #0x1
	strh	r1, [r0, #0x8]
	mov	r0, #0x1
	bx	lr
.L56:
	.align	2, 0
.L55:
	.word	0x400004c
.Lfe12:
	.size	 Phase2_Transition_Blur_Func1,.Lfe12-Phase2_Transition_Blur_Func1
	.align	2, 0
	.type	 Phase2_Transition_Blur_Func2,function
	.thumb_func
Phase2_Transition_Blur_Func2:
	push	{r4, lr}
	add	sp, sp, #0xfffffffc
	add	r4, r0, #0
	ldrh	r0, [r4, #0xa]
	mov	r1, #0xa
	ldrsh	r2, [r4, r1]
	cmp	r2, #0
	beq	.L58	@cond_branch
	sub	r0, r0, #0x1
	strh	r0, [r4, #0xa]
	b	.L59
.L58:
	mov	r0, #0x4
	strh	r0, [r4, #0xa]
	ldrh	r0, [r4, #0xc]
	add	r0, r0, #0x1
	strh	r0, [r4, #0xc]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0xa
	bne	.L60	@cond_branch
	mov	r1, #0x1
	neg	r1, r1
	str	r2, [sp]
	add	r0, r1, #0
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
.L60:
	ldr	r2, .L62
	ldrh	r0, [r4, #0xc]
	mov	r1, #0xf
	and	r1, r1, r0
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	strh	r0, [r2]
	mov	r1, #0xc
	ldrsh	r0, [r4, r1]
	cmp	r0, #0xe
	ble	.L59	@cond_branch
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
.L59:
	mov	r0, #0x0
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r1}
	bx	r1
.L63:
	.align	2, 0
.L62:
	.word	0x400004c
.Lfe13:
	.size	 Phase2_Transition_Blur_Func2,.Lfe13-Phase2_Transition_Blur_Func2
	.align	2, 0
	.type	 Phase2_Transition_Blur_Func3,function
	.thumb_func
Phase2_Transition_Blur_Func3:
	push	{lr}
	ldr	r0, .L66
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L65	@cond_branch
	ldr	r0, .L66+0x4
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
.L65:
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L67:
	.align	2, 0
.L66:
	.word	gPaletteFade
	.word	Phase2Task_Transition_Blur
.Lfe14:
	.size	 Phase2_Transition_Blur_Func3,.Lfe14-Phase2_Transition_Blur_Func3
	.align	2, 0
	.type	 Phase2Task_Transition_Swirl,function
	.thumb_func
Phase2Task_Transition_Swirl:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r5, .L73
	ldr	r2, .L73+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r4, r1, r2
.L69:
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	_call_via_r1
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L69	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L74:
	.align	2, 0
.L73:
	.word	sPhase2_Transition_Swirl_Funcs
	.word	gTasks
.Lfe15:
	.size	 Phase2Task_Transition_Swirl,.Lfe15-Phase2Task_Transition_Swirl
	.align	2, 0
	.type	 Phase2_Transition_Swirl_Func1,function
	.thumb_func
Phase2_Transition_Swirl_Func1:
	push	{r4, r5, lr}
	add	sp, sp, #0xfffffff8
	add	r5, r0, #0
	bl	sub_811D658
	bl	dp12_8087EA4
	mov	r0, #0x1
	neg	r0, r0
	mov	r4, #0x0
	str	r4, [sp]
	mov	r1, #0x4
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r0, .L76
	ldr	r1, .L76+0x4
	mov	r2, #0x14
	ldrsh	r1, [r1, r2]
	str	r4, [sp]
	mov	r2, #0xa0
	str	r2, [sp, #0x4]
	mov	r2, #0x0
	mov	r3, #0x2
	bl	sub_811D6E8
	ldr	r0, .L76+0x8
	bl	SetVBlankCallback
	ldr	r0, .L76+0xc
	bl	SetHBlankCallback
	ldr	r3, .L76+0x10
	ldrh	r2, [r3]
	strh	r4, [r3]
	ldr	r4, .L76+0x14
	ldrh	r0, [r4]
	mov	r1, #0x3
	orr	r0, r0, r1
	strh	r0, [r4]
	strh	r2, [r3]
	ldr	r2, .L76+0x18
	ldrh	r0, [r2]
	mov	r1, #0x18
	orr	r0, r0, r1
	strh	r0, [r2]
	ldrh	r0, [r5, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x8]
	mov	r0, #0x0
	add	sp, sp, #0x8
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L77:
	.align	2, 0
.L76:
	.word	gUnknown_03005560
	.word	gSharedMem+0xc000
	.word	VBlankCB_Phase2_Transition_Swirl
	.word	HBlankCB_Phase2_Transition_Swirl
	.word	0x4000208
	.word	0x4000200
	.word	0x4000004
.Lfe16:
	.size	 Phase2_Transition_Swirl_Func1,.Lfe16-Phase2_Transition_Swirl_Func1
	.align	2, 0
	.type	 Phase2_Transition_Swirl_Func2,function
	.thumb_func
Phase2_Transition_Swirl_Func2:
	push	{r4, r5, lr}
	add	sp, sp, #0xfffffff8
	ldr	r4, .L80
	ldrb	r1, [r4]
	mov	r1, #0x0
	strb	r1, [r4]
	ldrh	r1, [r0, #0xa]
	add	r1, r1, #0x4
	strh	r1, [r0, #0xa]
	ldrh	r1, [r0, #0xc]
	add	r1, r1, #0x8
	strh	r1, [r0, #0xc]
	ldr	r3, .L80+0x4
	mov	r2, #0x14
	ldrsh	r1, [r4, r2]
	mov	r5, #0xa
	ldrsh	r2, [r0, r5]
	mov	r5, #0xc
	ldrsh	r0, [r0, r5]
	str	r0, [sp]
	mov	r0, #0xa0
	str	r0, [sp, #0x4]
	add	r0, r3, #0
	mov	r3, #0x2
	bl	sub_811D6E8
	ldr	r0, .L80+0x8
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L79	@cond_branch
	ldr	r0, .L80+0xc
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
.L79:
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	ldrb	r1, [r4]
	strb	r0, [r4]
	mov	r0, #0x0
	add	sp, sp, #0x8
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L81:
	.align	2, 0
.L80:
	.word	gSharedMem+0xc000
	.word	gUnknown_03004DE0
	.word	gPaletteFade
	.word	Phase2Task_Transition_Swirl
.Lfe17:
	.size	 Phase2_Transition_Swirl_Func2,.Lfe17-Phase2_Transition_Swirl_Func2
	.align	2, 0
	.type	 VBlankCB_Phase2_Transition_Swirl,function
	.thumb_func
VBlankCB_Phase2_Transition_Swirl:
	push	{lr}
	bl	VBlankCB_BattleTransition
	ldr	r0, .L84
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L83	@cond_branch
	ldr	r1, .L84+0x4
	ldr	r0, .L84+0x8
	str	r0, [r1]
	mov	r2, #0xf0
	lsl	r2, r2, #0x3
	add	r0, r0, r2
	str	r0, [r1, #0x4]
	ldr	r0, .L84+0xc
	str	r0, [r1, #0x8]
	ldr	r0, [r1, #0x8]
.L83:
	pop	{r0}
	bx	r0
.L85:
	.align	2, 0
.L84:
	.word	gSharedMem+0xc000
	.word	0x40000d4
	.word	gUnknown_03004DE0
	.word	0x800000a0
.Lfe18:
	.size	 VBlankCB_Phase2_Transition_Swirl,.Lfe18-VBlankCB_Phase2_Transition_Swirl
	.align	2, 0
	.type	 HBlankCB_Phase2_Transition_Swirl,function
	.thumb_func
HBlankCB_Phase2_Transition_Swirl:
	ldr	r1, .L87
	ldr	r0, .L87+0x4
	ldrh	r0, [r0]
	lsl	r0, r0, #0x1
	mov	r2, #0xf0
	lsl	r2, r2, #0x3
	add	r1, r1, r2
	add	r0, r0, r1
	ldrh	r1, [r0]
	ldr	r0, .L87+0x8
	strh	r1, [r0]
	add	r0, r0, #0x4
	strh	r1, [r0]
	add	r0, r0, #0x4
	strh	r1, [r0]
	bx	lr
.L88:
	.align	2, 0
.L87:
	.word	gUnknown_03004DE0
	.word	0x4000006
	.word	0x4000014
.Lfe19:
	.size	 HBlankCB_Phase2_Transition_Swirl,.Lfe19-HBlankCB_Phase2_Transition_Swirl
	.align	2, 0
	.type	 Phase2Task_Transition_Shuffle,function
	.thumb_func
Phase2Task_Transition_Shuffle:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r5, .L94
	ldr	r2, .L94+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r4, r1, r2
.L90:
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	_call_via_r1
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L90	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L95:
	.align	2, 0
.L94:
	.word	sPhase2_Transition_Shuffle_Funcs
	.word	gTasks
.Lfe20:
	.size	 Phase2Task_Transition_Shuffle,.Lfe20-Phase2Task_Transition_Shuffle
	.align	2, 0
	.type	 Phase2_Transition_Shuffle_Func1,function
	.thumb_func
Phase2_Transition_Shuffle_Func1:
	push	{r4, r5, lr}
	add	sp, sp, #0xfffffffc
	add	r5, r0, #0
	bl	sub_811D658
	bl	dp12_8087EA4
	mov	r0, #0x1
	neg	r0, r0
	mov	r4, #0x0
	str	r4, [sp]
	mov	r1, #0x4
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r1, .L97
	ldr	r0, .L97+0x4
	mov	r2, #0x16
	ldrsh	r1, [r1, r2]
	mov	r2, #0xa0
	lsl	r2, r2, #0x1
	bl	memset
	ldr	r0, .L97+0x8
	bl	SetVBlankCallback
	ldr	r0, .L97+0xc
	bl	SetHBlankCallback
	ldr	r3, .L97+0x10
	ldrh	r2, [r3]
	strh	r4, [r3]
	ldr	r4, .L97+0x14
	ldrh	r0, [r4]
	mov	r1, #0x3
	orr	r0, r0, r1
	strh	r0, [r4]
	strh	r2, [r3]
	ldr	r2, .L97+0x18
	ldrh	r0, [r2]
	mov	r1, #0x18
	orr	r0, r0, r1
	strh	r0, [r2]
	ldrh	r0, [r5, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x8]
	mov	r0, #0x0
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L98:
	.align	2, 0
.L97:
	.word	gSharedMem+0xc000
	.word	gUnknown_03005560
	.word	VBlankCB_Phase2_Transition_Shuffle
	.word	HBlankCB_Phase2_Transition_Shuffle
	.word	0x4000208
	.word	0x4000200
	.word	0x4000004
.Lfe21:
	.size	 Phase2_Transition_Shuffle_Func1,.Lfe21-Phase2_Transition_Shuffle_Func1
	.align	2, 0
	.type	 Phase2_Transition_Shuffle_Func2,function
	.thumb_func
Phase2_Transition_Shuffle_Func2:
	push	{r4, r5, r6, r7, lr}
	ldr	r2, .L106
	ldrb	r1, [r2]
	mov	r1, #0x0
	strb	r1, [r2]
	ldrh	r4, [r0, #0xa]
	ldrh	r2, [r0, #0xc]
	lsl	r3, r2, #0x10
	asr	r3, r3, #0x18
	mov	r5, #0x84
	lsl	r5, r5, #0x5
	add	r1, r4, r5
	strh	r1, [r0, #0xa]
	mov	r1, #0xc0
	lsl	r1, r1, #0x1
	add	r2, r2, r1
	strh	r2, [r0, #0xc]
	mov	r5, #0x0
	lsl	r7, r3, #0x10
.L103:
	lsr	r0, r4, #0x8
	asr	r1, r7, #0x10
	bl	Sin
	ldr	r2, .L106+0x4
	lsl	r1, r5, #0x1
	add	r1, r1, r2
	ldr	r6, .L106
	ldrh	r2, [r6, #0x16]
	add	r0, r0, r2
	strh	r0, [r1]
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r1, #0x84
	lsl	r1, r1, #0x5
	add	r0, r4, r1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r5, #0x9f
	bls	.L103	@cond_branch
	ldr	r0, .L106+0x8
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L105	@cond_branch
	ldr	r0, .L106+0xc
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
.L105:
	ldrb	r0, [r6]
	add	r0, r0, #0x1
	ldrb	r1, [r6]
	strb	r0, [r6]
	mov	r0, #0x0
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L107:
	.align	2, 0
.L106:
	.word	gSharedMem+0xc000
	.word	gUnknown_03004DE0
	.word	gPaletteFade
	.word	Phase2Task_Transition_Shuffle
.Lfe22:
	.size	 Phase2_Transition_Shuffle_Func2,.Lfe22-Phase2_Transition_Shuffle_Func2
	.align	2, 0
	.type	 VBlankCB_Phase2_Transition_Shuffle,function
	.thumb_func
VBlankCB_Phase2_Transition_Shuffle:
	push	{lr}
	bl	VBlankCB_BattleTransition
	ldr	r0, .L110
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L109	@cond_branch
	ldr	r1, .L110+0x4
	ldr	r0, .L110+0x8
	str	r0, [r1]
	mov	r2, #0xf0
	lsl	r2, r2, #0x3
	add	r0, r0, r2
	str	r0, [r1, #0x4]
	ldr	r0, .L110+0xc
	str	r0, [r1, #0x8]
	ldr	r0, [r1, #0x8]
.L109:
	pop	{r0}
	bx	r0
.L111:
	.align	2, 0
.L110:
	.word	gSharedMem+0xc000
	.word	0x40000d4
	.word	gUnknown_03004DE0
	.word	0x800000a0
.Lfe23:
	.size	 VBlankCB_Phase2_Transition_Shuffle,.Lfe23-VBlankCB_Phase2_Transition_Shuffle
	.align	2, 0
	.type	 HBlankCB_Phase2_Transition_Shuffle,function
	.thumb_func
HBlankCB_Phase2_Transition_Shuffle:
	ldr	r1, .L113
	ldr	r0, .L113+0x4
	ldrh	r0, [r0]
	lsl	r0, r0, #0x1
	mov	r2, #0xf0
	lsl	r2, r2, #0x3
	add	r1, r1, r2
	add	r0, r0, r1
	ldrh	r1, [r0]
	ldr	r0, .L113+0x8
	strh	r1, [r0]
	add	r0, r0, #0x4
	strh	r1, [r0]
	add	r0, r0, #0x4
	strh	r1, [r0]
	bx	lr
.L114:
	.align	2, 0
.L113:
	.word	gUnknown_03004DE0
	.word	0x4000006
	.word	0x4000016
.Lfe24:
	.size	 HBlankCB_Phase2_Transition_Shuffle,.Lfe24-HBlankCB_Phase2_Transition_Shuffle
	.align	2, 0
	.type	 Phase2Task_Transition_BigPokeball,function
	.thumb_func
Phase2Task_Transition_BigPokeball:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r5, .L120
	ldr	r2, .L120+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r4, r1, r2
.L116:
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	_call_via_r1
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L116	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L121:
	.align	2, 0
.L120:
	.word	sPhase2_Transition_BigPokeball_Funcs
	.word	gTasks
.Lfe25:
	.size	 Phase2Task_Transition_BigPokeball,.Lfe25-Phase2Task_Transition_BigPokeball
	.align	2, 0
	.type	 Phase2_Transition_BigPokeball_Func1,function
	.thumb_func
Phase2_Transition_BigPokeball_Func1:
	push	{r4, r5, r6, lr}
	add	sp, sp, #0xfffffff4
	add	r4, r0, #0
	bl	sub_811D658
	bl	dp12_8087EA4
	mov	r2, #0x0
	mov	r3, #0x10
	strh	r3, [r4, #0xa]
	strh	r2, [r4, #0xc]
	strh	r2, [r4, #0x10]
	mov	r0, #0x80
	lsl	r0, r0, #0x7
	strh	r0, [r4, #0x12]
	ldr	r1, .L128
	mov	r0, #0x3f
	strh	r0, [r1, #0x2]
	strh	r2, [r1, #0x4]
	mov	r0, #0xf0
	strh	r0, [r1, #0x6]
	mov	r0, #0xa0
	strh	r0, [r1, #0x8]
	ldr	r0, .L128+0x4
	strh	r0, [r1, #0xe]
	lsl	r3, r3, #0x8
	strh	r3, [r1, #0x10]
	mov	r1, #0x0
	add	r5, sp, #0x4
	add	r6, sp, #0x8
	ldr	r3, .L128+0x8
	mov	r2, #0xf0
.L126:
	lsl	r0, r1, #0x1
	add	r0, r0, r3
	strh	r2, [r0]
	add	r0, r1, #0x1
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	cmp	r1, #0x9f
	bls	.L126	@cond_branch
	ldr	r0, .L128+0xc
	bl	SetVBlankCallback
	add	r0, r5, #0
	add	r1, r6, #0
	bl	sub_811D6A8
	mov	r1, sp
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r1, [sp, #0x4]
	ldr	r2, .L128+0x10
	mov	r0, sp
	bl	CpuSet
	ldr	r0, .L128+0x14
	ldr	r1, [sp, #0x8]
	mov	r2, #0xb0
	lsl	r2, r2, #0x2
	bl	CpuSet
	ldr	r0, .L128+0x18
	mov	r1, #0xf0
	mov	r2, #0x20
	bl	LoadPalette
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	mov	r0, #0x0
	add	sp, sp, #0xc
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L129:
	.align	2, 0
.L128:
	.word	gSharedMem+0xc000
	.word	0x3f41
	.word	gUnknown_03005560
	.word	VBlankCB0_Phase2_Transition_BigPokeball
	.word	0x1000400
	.word	sBigPokeball_Tileset
	.word	gFieldEffectObjectPalette10
.Lfe26:
	.size	 Phase2_Transition_BigPokeball_Func1,.Lfe26-Phase2_Transition_BigPokeball_Func1
	.align	2, 0
	.type	 Phase2_Transition_BigPokeball_Func2,function
	.thumb_func
Phase2_Transition_BigPokeball_Func2:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #0xfffffff0
	add	r7, r0, #0
	ldr	r5, .L141
	add	r1, sp, #0xc
	add	r0, sp, #0x8
	bl	sub_811D6A8
	mov	r1, #0x0
	ldr	r0, [sp, #0x8]
	mov	r9, r0
	ldr	r6, .L141+0x4
	mov	r8, r6
	mov	r0, #0xf0
	lsl	r0, r0, #0x8
	mov	ip, r0
.L134:
	mov	r0, #0x0
	lsl	r3, r1, #0x10
	asr	r4, r3, #0xb
.L138:
	lsl	r2, r0, #0x10
	asr	r2, r2, #0x10
	add	r1, r4, r2
	lsl	r1, r1, #0x1
	add	r1, r1, r9
	ldrh	r0, [r5]
	mov	r6, ip
	orr	r0, r0, r6
	strh	r0, [r1]
	add	r2, r2, #0x1
	lsl	r2, r2, #0x10
	add	r5, r5, #0x2
	lsr	r0, r2, #0x10
	asr	r2, r2, #0x10
	cmp	r2, #0x1d
	ble	.L138	@cond_branch
	mov	r1, #0x80
	lsl	r1, r1, #0x9
	add	r0, r3, r1
	lsr	r1, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x13
	ble	.L134	@cond_branch
	mov	r6, #0x10
	ldrsh	r2, [r7, r6]
	mov	r1, #0x12
	ldrsh	r0, [r7, r1]
	str	r0, [sp]
	mov	r0, #0xa0
	str	r0, [sp, #0x4]
	mov	r0, r8
	mov	r1, #0x0
	mov	r3, #0x84
	bl	sub_811D6E8
	ldrh	r0, [r7, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r7, #0x8]
	mov	r0, #0x1
	add	sp, sp, #0x10
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L142:
	.align	2, 0
.L141:
	.word	sBigPokeball_Tilemap
	.word	gUnknown_03004DE0
.Lfe27:
	.size	 Phase2_Transition_BigPokeball_Func2,.Lfe27-Phase2_Transition_BigPokeball_Func2
	.align	2, 0
	.type	 Phase2_Transition_BigPokeball_Func3,function
	.thumb_func
Phase2_Transition_BigPokeball_Func3:
	push	{r4, lr}
	add	sp, sp, #0xfffffff8
	add	r2, r0, #0
	ldr	r1, .L147
	ldrb	r0, [r1]
	mov	r0, #0x0
	strb	r0, [r1]
	ldrh	r3, [r2, #0xe]
	mov	r4, #0xe
	ldrsh	r0, [r2, r4]
	add	r4, r1, #0
	cmp	r0, #0
	beq	.L145	@cond_branch
	sub	r0, r3, #0x1
	strh	r0, [r2, #0xe]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L144	@cond_branch
.L145:
	ldrh	r0, [r2, #0xc]
	add	r0, r0, #0x1
	strh	r0, [r2, #0xc]
	mov	r0, #0x2
	strh	r0, [r2, #0xe]
.L144:
	ldrh	r0, [r2, #0xa]
	lsl	r0, r0, #0x8
	ldrh	r1, [r2, #0xc]
	orr	r0, r0, r1
	strh	r0, [r4, #0x10]
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	cmp	r1, #0xf
	ble	.L146	@cond_branch
	ldrh	r0, [r2, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r2, #0x8]
.L146:
	ldrh	r0, [r2, #0x10]
	add	r0, r0, #0x8
	strh	r0, [r2, #0x10]
	ldr	r0, .L147+0x4
	add	r1, r0, #0
	ldrh	r3, [r2, #0x12]
	add	r1, r1, r3
	strh	r1, [r2, #0x12]
	ldr	r0, .L147+0x8
	mov	r3, #0x10
	ldrsh	r2, [r2, r3]
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x18
	str	r1, [sp]
	mov	r1, #0xa0
	str	r1, [sp, #0x4]
	mov	r1, #0x0
	mov	r3, #0x84
	bl	sub_811D6E8
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	ldrb	r1, [r4]
	strb	r0, [r4]
	mov	r0, #0x0
	add	sp, sp, #0x8
	pop	{r4}
	pop	{r1}
	bx	r1
.L148:
	.align	2, 0
.L147:
	.word	gSharedMem+0xc000
	.word	0xffffff00
	.word	gUnknown_03004DE0
.Lfe28:
	.size	 Phase2_Transition_BigPokeball_Func3,.Lfe28-Phase2_Transition_BigPokeball_Func3
	.align	2, 0
	.type	 Phase2_Transition_BigPokeball_Func4,function
	.thumb_func
Phase2_Transition_BigPokeball_Func4:
	push	{r4, r5, lr}
	add	sp, sp, #0xfffffff8
	add	r3, r0, #0
	ldr	r1, .L153
	ldrb	r0, [r1]
	mov	r0, #0x0
	strb	r0, [r1]
	ldrh	r2, [r3, #0xe]
	mov	r4, #0xe
	ldrsh	r0, [r3, r4]
	add	r4, r1, #0
	cmp	r0, #0
	beq	.L151	@cond_branch
	sub	r0, r2, #0x1
	strh	r0, [r3, #0xe]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L150	@cond_branch
.L151:
	ldrh	r0, [r3, #0xa]
	sub	r0, r0, #0x1
	strh	r0, [r3, #0xa]
	mov	r0, #0x2
	strh	r0, [r3, #0xe]
.L150:
	ldrh	r0, [r3, #0xa]
	lsl	r1, r0, #0x8
	ldrh	r2, [r3, #0xc]
	orr	r1, r1, r2
	strh	r1, [r4, #0x10]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L152	@cond_branch
	ldrh	r0, [r3, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r3, #0x8]
.L152:
	ldrh	r0, [r3, #0x10]
	add	r0, r0, #0x8
	strh	r0, [r3, #0x10]
	ldr	r5, .L153+0x4
	add	r1, r5, #0
	ldrh	r0, [r3, #0x12]
	add	r1, r1, r0
	strh	r1, [r3, #0x12]
	ldr	r0, .L153+0x8
	mov	r5, #0x10
	ldrsh	r2, [r3, r5]
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x18
	str	r1, [sp]
	mov	r1, #0xa0
	str	r1, [sp, #0x4]
	mov	r1, #0x0
	mov	r3, #0x84
	bl	sub_811D6E8
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	ldrb	r1, [r4]
	strb	r0, [r4]
	mov	r0, #0x0
	add	sp, sp, #0x8
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L154:
	.align	2, 0
.L153:
	.word	gSharedMem+0xc000
	.word	0xffffff00
	.word	gUnknown_03004DE0
.Lfe29:
	.size	 Phase2_Transition_BigPokeball_Func4,.Lfe29-Phase2_Transition_BigPokeball_Func4
	.align	2, 0
	.type	 Phase2_Transition_BigPokeball_Func5,function
	.thumb_func
Phase2_Transition_BigPokeball_Func5:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #0xfffffff8
	add	r4, r0, #0
	ldr	r5, .L157
	ldrb	r0, [r5]
	mov	r7, #0x0
	strb	r7, [r5]
	ldrh	r0, [r4, #0x10]
	add	r0, r0, #0x8
	strh	r0, [r4, #0x10]
	ldr	r0, .L157+0x4
	add	r1, r0, #0
	ldrh	r3, [r4, #0x12]
	add	r1, r1, r3
	strh	r1, [r4, #0x12]
	ldr	r0, .L157+0x8
	mov	r3, #0x10
	ldrsh	r2, [r4, r3]
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x18
	str	r1, [sp]
	mov	r6, #0xa0
	str	r6, [sp, #0x4]
	mov	r1, #0x0
	mov	r3, #0x84
	bl	sub_811D6E8
	mov	r1, #0x12
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	bgt	.L156	@cond_branch
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	strh	r6, [r4, #0xa]
	mov	r0, #0x80
	lsl	r0, r0, #0x1
	strh	r0, [r4, #0xc]
	strh	r7, [r4, #0xe]
.L156:
	ldrb	r0, [r5]
	add	r0, r0, #0x1
	ldrb	r1, [r5]
	strb	r0, [r5]
	mov	r0, #0x0
	add	sp, sp, #0x8
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L158:
	.align	2, 0
.L157:
	.word	gSharedMem+0xc000
	.word	0xffffff00
	.word	gUnknown_03004DE0
.Lfe30:
	.size	 Phase2_Transition_BigPokeball_Func5,.Lfe30-Phase2_Transition_BigPokeball_Func5
	.align	2, 0
	.type	 Phase2_Transition_BigPokeball_Func6,function
	.thumb_func
Phase2_Transition_BigPokeball_Func6:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r0, .L165
	ldrb	r1, [r0]
	mov	r3, #0x0
	strb	r3, [r0]
	ldrh	r2, [r4, #0xc]
	mov	r0, #0xc
	ldrsh	r1, [r4, r0]
	ldr	r0, .L165+0x4
	cmp	r1, r0
	bgt	.L160	@cond_branch
	add	r0, r2, #0
	add	r0, r0, #0x80
	strh	r0, [r4, #0xc]
.L160:
	ldrh	r1, [r4, #0xa]
	mov	r2, #0xa
	ldrsh	r0, [r4, r2]
	cmp	r0, #0
	beq	.L161	@cond_branch
	ldrh	r0, [r4, #0xc]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x18
	sub	r0, r1, r0
	strh	r0, [r4, #0xa]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bge	.L161	@cond_branch
	strh	r3, [r4, #0xa]
.L161:
	ldr	r0, .L165+0x8
	mov	r1, #0xa
	ldrsh	r3, [r4, r1]
	mov	r1, #0x78
	mov	r2, #0x50
	bl	sub_811D764
	mov	r2, #0xa
	ldrsh	r0, [r4, r2]
	cmp	r0, #0
	bne	.L163	@cond_branch
	ldr	r1, .L165+0xc
	ldrh	r2, [r1, #0xa]
	ldr	r0, .L165+0x10
	and	r0, r0, r2
	strh	r0, [r1, #0xa]
	ldrh	r2, [r1, #0xa]
	ldr	r0, .L165+0x14
	and	r0, r0, r2
	strh	r0, [r1, #0xa]
	ldrh	r0, [r1, #0xa]
	bl	sub_811D6D4
	ldr	r0, .L165+0x18
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
.L163:
	ldrh	r1, [r4, #0xe]
	mov	r2, #0xe
	ldrsh	r0, [r4, r2]
	cmp	r0, #0
	bne	.L164	@cond_branch
	add	r0, r1, #0x1
	strh	r0, [r4, #0xe]
	ldr	r0, .L165+0x1c
	bl	SetVBlankCallback
.L164:
	ldr	r0, .L165
	ldrb	r1, [r0]
	add	r1, r1, #0x1
	ldrb	r2, [r0]
	strb	r1, [r0]
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L166:
	.align	2, 0
.L165:
	.word	gSharedMem+0xc000
	.word	0x3ff
	.word	gUnknown_03004DE0
	.word	0x40000b0
	.word	0xc5ff
	.word	0x7fff
	.word	Phase2Task_Transition_BigPokeball
	.word	VBlankCB1_Phase2_Transition_BigPokeball
.Lfe31:
	.size	 Phase2_Transition_BigPokeball_Func6,.Lfe31-Phase2_Transition_BigPokeball_Func6
	.align	2, 0
	.type	 Transition_BigPokeball_Vblank,function
	.thumb_func
Transition_BigPokeball_Vblank:
	push	{lr}
	ldr	r1, .L169
	ldrh	r2, [r1, #0xa]
	ldr	r0, .L169+0x4
	and	r0, r0, r2
	strh	r0, [r1, #0xa]
	ldrh	r2, [r1, #0xa]
	ldr	r0, .L169+0x8
	and	r0, r0, r2
	strh	r0, [r1, #0xa]
	ldrh	r0, [r1, #0xa]
	bl	VBlankCB_BattleTransition
	ldr	r2, .L169+0xc
	ldrb	r0, [r2]
	cmp	r0, #0
	beq	.L168	@cond_branch
	ldr	r1, .L169+0x10
	ldr	r0, .L169+0x14
	str	r0, [r1]
	mov	r3, #0xf0
	lsl	r3, r3, #0x3
	add	r0, r0, r3
	str	r0, [r1, #0x4]
	ldr	r0, .L169+0x18
	str	r0, [r1, #0x8]
	ldr	r0, [r1, #0x8]
.L168:
	ldr	r1, .L169+0x1c
	ldrh	r0, [r2, #0x2]
	strh	r0, [r1]
	add	r1, r1, #0x2
	ldrh	r0, [r2, #0x4]
	strh	r0, [r1]
	sub	r1, r1, #0x6
	ldrh	r0, [r2, #0x8]
	strh	r0, [r1]
	add	r1, r1, #0xc
	ldrh	r0, [r2, #0xe]
	strh	r0, [r1]
	add	r1, r1, #0x2
	ldrh	r0, [r2, #0x10]
	strh	r0, [r1]
	pop	{r0}
	bx	r0
.L170:
	.align	2, 0
.L169:
	.word	0x40000b0
	.word	0xc5ff
	.word	0x7fff
	.word	gSharedMem+0xc000
	.word	0x40000d4
	.word	gUnknown_03004DE0
	.word	0x800000a0
	.word	0x4000048
.Lfe32:
	.size	 Transition_BigPokeball_Vblank,.Lfe32-Transition_BigPokeball_Vblank
	.align	2, 0
	.type	 VBlankCB0_Phase2_Transition_BigPokeball,function
	.thumb_func
VBlankCB0_Phase2_Transition_BigPokeball:
	push	{lr}
	bl	Transition_BigPokeball_Vblank
	ldr	r1, .L172
	ldr	r0, .L172+0x4
	str	r0, [r1]
	ldr	r0, .L172+0x8
	str	r0, [r1, #0x4]
	ldr	r0, .L172+0xc
	str	r0, [r1, #0x8]
	ldr	r0, [r1, #0x8]
	pop	{r0}
	bx	r0
.L173:
	.align	2, 0
.L172:
	.word	0x40000b0
	.word	gUnknown_03005560
	.word	0x4000010
	.word	0xa2400001
.Lfe33:
	.size	 VBlankCB0_Phase2_Transition_BigPokeball,.Lfe33-VBlankCB0_Phase2_Transition_BigPokeball
	.align	2, 0
	.type	 VBlankCB1_Phase2_Transition_BigPokeball,function
	.thumb_func
VBlankCB1_Phase2_Transition_BigPokeball:
	push	{lr}
	bl	Transition_BigPokeball_Vblank
	ldr	r1, .L175
	ldr	r0, .L175+0x4
	str	r0, [r1]
	ldr	r0, .L175+0x8
	str	r0, [r1, #0x4]
	ldr	r0, .L175+0xc
	str	r0, [r1, #0x8]
	ldr	r0, [r1, #0x8]
	pop	{r0}
	bx	r0
.L176:
	.align	2, 0
.L175:
	.word	0x40000b0
	.word	gUnknown_03005560
	.word	0x4000040
	.word	0xa2400001
.Lfe34:
	.size	 VBlankCB1_Phase2_Transition_BigPokeball,.Lfe34-VBlankCB1_Phase2_Transition_BigPokeball
	.align	2, 0
	.type	 Phase2Task_Transition_PokeballsTrail,function
	.thumb_func
Phase2Task_Transition_PokeballsTrail:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r5, .L182
	ldr	r2, .L182+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r4, r1, r2
.L178:
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	_call_via_r1
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L178	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L183:
	.align	2, 0
.L182:
	.word	sPhase2_Transition_PokeballsTrail_Funcs
	.word	gTasks
.Lfe35:
	.size	 Phase2Task_Transition_PokeballsTrail,.Lfe35-Phase2Task_Transition_PokeballsTrail
	.align	2, 0
	.type	 Phase2_Transition_PokeballsTrail_Func1,function
	.thumb_func
Phase2_Transition_PokeballsTrail_Func1:
	push	{r4, lr}
	add	sp, sp, #0xfffffff4
	add	r4, r0, #0
	add	r0, sp, #0x4
	add	r1, sp, #0x8
	bl	sub_811D6A8
	ldr	r0, .L185
	ldr	r1, [sp, #0x8]
	mov	r2, #0x20
	bl	CpuSet
	mov	r0, #0x0
	str	r0, [sp]
	ldr	r1, [sp, #0x4]
	ldr	r2, .L185+0x4
	mov	r0, sp
	bl	CpuSet
	ldr	r0, .L185+0x8
	mov	r1, #0xf0
	mov	r2, #0x20
	bl	LoadPalette
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	mov	r0, #0x0
	add	sp, sp, #0xc
	pop	{r4}
	pop	{r1}
	bx	r1
.L186:
	.align	2, 0
.L185:
	.word	sPokeballTrail_Tileset
	.word	0x5000200
	.word	gFieldEffectObjectPalette10
.Lfe36:
	.size	 Phase2_Transition_PokeballsTrail_Func1,.Lfe36-Phase2_Transition_PokeballsTrail_Func1
	.align	2, 0
	.type	 Phase2_Transition_PokeballsTrail_Func2,function
	.thumb_func
Phase2_Transition_PokeballsTrail_Func2:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #0xfffffff0
	add	r7, r0, #0
	ldr	r1, .L193
	mov	r0, sp
	mov	r2, #0x4
	bl	memcpy
	add	r4, sp, #0x4
	ldr	r1, .L193+0x4
	add	r0, r4, #0
	mov	r2, #0xa
	bl	memcpy
	bl	Random
	mov	r5, #0x1
	and	r5, r5, r0
	mov	r1, #0x0
	mov	r8, r4
	ldr	r6, .L193+0x8
.L191:
	lsl	r5, r5, #0x10
	asr	r5, r5, #0x10
	lsl	r0, r5, #0x1
	add	r0, r0, sp
	mov	r2, #0x0
	ldrsh	r0, [r0, r2]
	str	r0, [r6]
	lsl	r4, r1, #0x10
	asr	r4, r4, #0x10
	lsl	r0, r4, #0x5
	add	r0, r0, #0x10
	str	r0, [r6, #0x4]
	str	r5, [r6, #0x8]
	lsl	r0, r4, #0x1
	add	r0, r0, r8
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	str	r0, [r6, #0xc]
	mov	r0, #0x2d
	bl	FieldEffectStart
	add	r4, r4, #0x1
	lsl	r4, r4, #0x10
	mov	r0, #0x1
	eor	r5, r5, r0
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	lsr	r1, r4, #0x10
	asr	r4, r4, #0x10
	cmp	r4, #0x4
	ble	.L191	@cond_branch
	ldrh	r0, [r7, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r7, #0x8]
	mov	r0, #0x0
	add	sp, sp, #0x10
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L194:
	.align	2, 0
.L193:
	.word	sUnknown_083FD7E4
	.word	sUnknown_083FD7E8
	.word	gFieldEffectArguments
.Lfe37:
	.size	 Phase2_Transition_PokeballsTrail_Func2,.Lfe37-Phase2_Transition_PokeballsTrail_Func2
	.align	2, 0
	.type	 Phase2_Transition_PokeballsTrail_Func3,function
	.thumb_func
Phase2_Transition_PokeballsTrail_Func3:
	push	{lr}
	mov	r0, #0x2d
	bl	FieldEffectActiveListContains
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L196	@cond_branch
	bl	sub_811D6D4
	ldr	r0, .L197
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
.L196:
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L198:
	.align	2, 0
.L197:
	.word	Phase2Task_Transition_PokeballsTrail
.Lfe38:
	.size	 Phase2_Transition_PokeballsTrail_Func3,.Lfe38-Phase2_Transition_PokeballsTrail_Func3
	.align	2, 0
	.globl	FldEff_Pokeball
	.type	 FldEff_Pokeball,function
	.thumb_func
FldEff_Pokeball:
	push	{r4, r5, lr}
	ldr	r0, .L200
	ldr	r5, .L200+0x4
	mov	r2, #0x0
	ldrsh	r1, [r5, r2]
	mov	r3, #0x4
	ldrsh	r2, [r5, r3]
	mov	r3, #0x0
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L200+0x8
	lsl	r4, r0, #0x4
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	add	r4, r4, r1
	ldrb	r1, [r4, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r4, #0x5]
	ldrb	r1, [r4, #0x1]
	mov	r0, #0x4
	neg	r0, r0
	and	r0, r0, r1
	mov	r1, #0x1
	orr	r0, r0, r1
	strb	r0, [r4, #0x1]
	ldr	r0, [r5, #0x8]
	strh	r0, [r4, #0x2e]
	ldr	r0, [r5, #0xc]
	strh	r0, [r4, #0x30]
	ldr	r0, .L200+0xc
	strh	r0, [r4, #0x32]
	add	r0, r4, #0
	bl	InitSpriteAffineAnim
	ldrb	r1, [r5, #0x8]
	add	r0, r4, #0
	bl	StartSpriteAffineAnim
	mov	r0, #0x0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L201:
	.align	2, 0
.L200:
	.word	sSpriteTemplate_83FD98C
	.word	gFieldEffectArguments
	.word	gSprites
	.word	0xffff
.Lfe39:
	.size	 FldEff_Pokeball,.Lfe39-FldEff_Pokeball
	.align	2, 0
	.type	 sub_811B720,function
	.thumb_func
sub_811B720:
	push	{r4, r5, r6, lr}
	add	sp, sp, #0xfffffffc
	add	r4, r0, #0
	ldr	r1, .L208
	mov	r0, sp
	mov	r2, #0x4
	bl	memcpy
	ldrh	r1, [r4, #0x30]
	mov	r2, #0x30
	ldrsh	r0, [r4, r2]
	cmp	r0, #0
	beq	.L203	@cond_branch
	sub	r0, r1, #0x1
	strh	r0, [r4, #0x30]
	b	.L204
.L209:
	.align	2, 0
.L208:
	.word	sUnknown_083FD7F2
.L203:
	ldrh	r0, [r4, #0x20]
	lsl	r1, r0, #0x10
	lsr	r0, r1, #0x10
	cmp	r0, #0xf0
	bhi	.L205	@cond_branch
	asr	r0, r1, #0x13
	lsl	r0, r0, #0x10
	ldrh	r1, [r4, #0x22]
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x13
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	lsr	r2, r0, #0x10
	asr	r5, r0, #0x10
	mov	r3, #0x32
	ldrsh	r0, [r4, r3]
	cmp	r5, r0
	beq	.L205	@cond_branch
	strh	r2, [r4, #0x32]
	ldr	r0, .L210
	ldrh	r2, [r0]
	lsr	r2, r2, #0x8
	mov	r0, #0x1f
	and	r2, r2, r0
	lsl	r2, r2, #0xb
	mov	r0, #0xc0
	lsl	r0, r0, #0x13
	add	r2, r2, r0
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	sub	r0, r1, #0x2
	lsl	r0, r0, #0x5
	add	r0, r0, r5
	lsl	r0, r0, #0x1
	add	r0, r0, r2
	ldr	r6, .L210+0x4
	add	r3, r6, #0
	strh	r3, [r0]
	sub	r0, r1, #0x1
	lsl	r0, r0, #0x5
	add	r0, r0, r5
	lsl	r0, r0, #0x1
	add	r0, r0, r2
	strh	r3, [r0]
	lsl	r0, r1, #0x5
	add	r0, r0, r5
	lsl	r0, r0, #0x1
	add	r0, r0, r2
	strh	r3, [r0]
	add	r1, r1, #0x1
	lsl	r1, r1, #0x5
	add	r1, r1, r5
	lsl	r1, r1, #0x1
	add	r1, r1, r2
	strh	r3, [r1]
.L205:
	mov	r1, #0x2e
	ldrsh	r0, [r4, r1]
	lsl	r0, r0, #0x1
	add	r0, r0, sp
	ldrh	r0, [r0]
	ldrh	r2, [r4, #0x20]
	add	r0, r0, r2
	strh	r0, [r4, #0x20]
	add	r0, r0, #0xf
	lsl	r0, r0, #0x10
	mov	r1, #0x87
	lsl	r1, r1, #0x11
	cmp	r0, r1
	bls	.L204	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x2d
	bl	FieldEffectStop
.L204:
	add	sp, sp, #0x4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L211:
	.align	2, 0
.L210:
	.word	0x4000008
	.word	0xf001
.Lfe40:
	.size	 sub_811B720,.Lfe40-sub_811B720
	.align	2, 0
	.type	 Phase2Task_Transition_Clockwise_BlackFade,function
	.thumb_func
Phase2Task_Transition_Clockwise_BlackFade:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r5, .L217
	ldr	r2, .L217+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r4, r1, r2
.L213:
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	_call_via_r1
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L213	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L218:
	.align	2, 0
.L217:
	.word	sPhase2_Transition_Clockwise_BlackFade_Funcs
	.word	gTasks
.Lfe41:
	.size	 Phase2Task_Transition_Clockwise_BlackFade,.Lfe41-Phase2Task_Transition_Clockwise_BlackFade
	.align	2, 0
	.type	 Phase2_Transition_Clockwise_BlackFade_Func1,function
	.thumb_func
Phase2_Transition_Clockwise_BlackFade_Func1:
	push	{r4, lr}
	add	r4, r0, #0
	bl	sub_811D658
	bl	dp12_8087EA4
	ldr	r1, .L225
	mov	r0, #0x0
	strh	r0, [r1, #0x2]
	mov	r0, #0x3f
	strh	r0, [r1, #0x4]
	ldr	r0, .L225+0x4
	strh	r0, [r1, #0x6]
	mov	r0, #0xa0
	strh	r0, [r1, #0x8]
	mov	r1, #0x0
	ldr	r3, .L225+0x8
	ldr	r2, .L225+0xc
.L223:
	lsl	r0, r1, #0x1
	add	r0, r0, r3
	strh	r2, [r0]
	add	r0, r1, #0x1
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	cmp	r1, #0x9f
	bls	.L223	@cond_branch
	ldr	r0, .L225+0x10
	bl	SetVBlankCallback
	ldr	r1, .L225
	mov	r0, #0x78
	strh	r0, [r1, #0x2c]
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	mov	r0, #0x1
	pop	{r4}
	pop	{r1}
	bx	r1
.L226:
	.align	2, 0
.L225:
	.word	gSharedMem+0xc000
	.word	0xf0f1
	.word	gUnknown_03005560
	.word	0xf3f4
	.word	VBlankCB_Phase2_Transition_Clockwise_BlackFade
.Lfe42:
	.size	 Phase2_Transition_Clockwise_BlackFade_Func1,.Lfe42-Phase2_Transition_Clockwise_BlackFade_Func1
	.align	2, 0
	.type	 Phase2_Transition_Clockwise_BlackFade_Func2,function
	.thumb_func
Phase2_Transition_Clockwise_BlackFade_Func2:
	push	{r4, r5, r6, lr}
	add	sp, sp, #0xfffffff4
	add	r6, r0, #0
	ldr	r4, .L234
	ldrb	r0, [r4]
	mov	r0, #0x0
	strb	r0, [r4]
	add	r0, r4, #0
	add	r0, r0, #0x24
	mov	r1, #0x2c
	ldrsh	r3, [r4, r1]
	mov	r1, #0x1
	neg	r1, r1
	str	r1, [sp]
	mov	r1, #0x1
	str	r1, [sp, #0x4]
	str	r1, [sp, #0x8]
	mov	r1, #0x78
	mov	r2, #0x50
	bl	sub_811D8FC
	ldr	r5, .L234+0x4
.L228:
	mov	r3, #0x2a
	ldrsh	r2, [r4, r3]
	lsl	r2, r2, #0x1
	add	r2, r2, r5
	ldrh	r0, [r4, #0x28]
	add	r0, r0, #0x1
	mov	r3, #0xf0
	lsl	r3, r3, #0x7
	add	r1, r3, #0
	orr	r0, r0, r1
	strh	r0, [r2]
	add	r0, r4, #0
	add	r0, r0, #0x24
	mov	r1, #0x1
	mov	r2, #0x1
	bl	sub_811D978
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L228	@cond_branch
	ldr	r2, .L234
	ldrh	r0, [r2, #0x2c]
	add	r0, r0, #0x10
	strh	r0, [r2, #0x2c]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0xef
	ble	.L233	@cond_branch
	mov	r0, #0x0
	strh	r0, [r2, #0x2e]
	ldrh	r0, [r6, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r6, #0x8]
.L233:
	ldrb	r0, [r2]
	add	r0, r0, #0x1
	ldrb	r1, [r2]
	strb	r0, [r2]
	mov	r0, #0x0
	add	sp, sp, #0xc
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L235:
	.align	2, 0
.L234:
	.word	gSharedMem+0xc000
	.word	gUnknown_03004DE0
.Lfe43:
	.size	 Phase2_Transition_Clockwise_BlackFade_Func2,.Lfe43-Phase2_Transition_Clockwise_BlackFade_Func2
	.align	2, 0
	.type	 Phase2_Transition_Clockwise_BlackFade_Func3,function
	.thumb_func
Phase2_Transition_Clockwise_BlackFade_Func3:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #0xfffffff0
	add	r7, r0, #0
	add	r1, sp, #0xc
	mov	r0, #0x0
	strb	r0, [r1]
	ldr	r4, .L249
	ldrb	r0, [r4]
	mov	r0, #0x0
	strb	r0, [r4]
	add	r0, r4, #0
	add	r0, r0, #0x24
	mov	r2, #0x2e
	ldrsh	r1, [r4, r2]
	str	r1, [sp]
	mov	r1, #0x1
	str	r1, [sp, #0x4]
	str	r1, [sp, #0x8]
	mov	r1, #0x78
	mov	r2, #0x50
	mov	r3, #0xf0
	bl	sub_811D8FC
	add	r6, r4, #0
	ldr	r5, .L249+0x4
	mov	r8, r5
	add	r5, sp, #0xc
.L239:
	mov	r1, #0x78
	ldrh	r0, [r4, #0x28]
	add	r0, r0, #0x1
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	mov	r2, #0x2e
	ldrsh	r0, [r4, r2]
	cmp	r0, #0x4f
	ble	.L240	@cond_branch
	ldrh	r1, [r4, #0x28]
	mov	r3, #0xf0
.L240:
	mov	r0, #0x2a
	ldrsh	r2, [r4, r0]
	lsl	r2, r2, #0x1
	add	r2, r2, r8
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x8
	lsl	r0, r3, #0x10
	asr	r3, r0, #0x10
	orr	r3, r3, r1
	strh	r3, [r2]
	ldrb	r0, [r5]
	cmp	r0, #0
	bne	.L238	@cond_branch
	add	r0, r4, #0
	add	r0, r0, #0x24
	mov	r1, #0x1
	mov	r2, #0x1
	bl	sub_811D978
	strb	r0, [r5]
	b	.L239
.L250:
	.align	2, 0
.L249:
	.word	gSharedMem+0xc000
	.word	gUnknown_03004DE0
.L238:
	ldrh	r0, [r4, #0x2e]
	add	r0, r0, #0x8
	strh	r0, [r4, #0x2e]
	lsl	r0, r0, #0x10
	asr	r1, r0, #0x10
	cmp	r1, #0x9f
	ble	.L243	@cond_branch
	mov	r0, #0xf0
	strh	r0, [r4, #0x2c]
	ldrh	r0, [r7, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r7, #0x8]
	b	.L244
.L243:
	mov	r2, #0x2a
	ldrsh	r0, [r4, r2]
	cmp	r0, r1
	bge	.L244	@cond_branch
	ldr	r4, .L251
	ldr	r2, .L251+0x4
.L247:
	ldrh	r0, [r2, #0x2a]
	add	r0, r0, #0x1
	strh	r0, [r2, #0x2a]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0xf
	add	r0, r0, r4
	strh	r3, [r0]
	mov	r5, #0x2a
	ldrsh	r1, [r2, r5]
	mov	r5, #0x2e
	ldrsh	r0, [r2, r5]
	cmp	r1, r0
	blt	.L247	@cond_branch
.L244:
	ldrb	r0, [r6]
	add	r0, r0, #0x1
	ldrb	r1, [r6]
	strb	r0, [r6]
	mov	r0, #0x0
	add	sp, sp, #0x10
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L252:
	.align	2, 0
.L251:
	.word	gUnknown_03004DE0
	.word	gSharedMem+0xc000
.Lfe44:
	.size	 Phase2_Transition_Clockwise_BlackFade_Func3,.Lfe44-Phase2_Transition_Clockwise_BlackFade_Func3
	.align	2, 0
	.type	 Phase2_Transition_Clockwise_BlackFade_Func4,function
	.thumb_func
Phase2_Transition_Clockwise_BlackFade_Func4:
	push	{r4, r5, r6, lr}
	add	sp, sp, #0xfffffff4
	add	r6, r0, #0
	ldr	r4, .L260
	ldrb	r0, [r4]
	mov	r0, #0x0
	strb	r0, [r4]
	add	r0, r4, #0
	add	r0, r0, #0x24
	mov	r1, #0x2c
	ldrsh	r3, [r4, r1]
	mov	r1, #0xa0
	str	r1, [sp]
	mov	r1, #0x1
	str	r1, [sp, #0x4]
	str	r1, [sp, #0x8]
	mov	r1, #0x78
	mov	r2, #0x50
	bl	sub_811D8FC
	ldr	r5, .L260+0x4
.L254:
	mov	r0, #0x2a
	ldrsh	r2, [r4, r0]
	lsl	r2, r2, #0x1
	add	r2, r2, r5
	ldrh	r0, [r4, #0x28]
	lsl	r0, r0, #0x8
	mov	r1, #0xf0
	orr	r0, r0, r1
	strh	r0, [r2]
	add	r0, r4, #0
	add	r0, r0, #0x24
	mov	r1, #0x1
	mov	r2, #0x1
	bl	sub_811D978
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L254	@cond_branch
	ldr	r2, .L260
	ldrh	r0, [r2, #0x2c]
	sub	r0, r0, #0x10
	strh	r0, [r2, #0x2c]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bgt	.L259	@cond_branch
	mov	r0, #0xa0
	strh	r0, [r2, #0x2e]
	ldrh	r0, [r6, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r6, #0x8]
.L259:
	ldrb	r0, [r2]
	add	r0, r0, #0x1
	ldrb	r1, [r2]
	strb	r0, [r2]
	mov	r0, #0x0
	add	sp, sp, #0xc
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L261:
	.align	2, 0
.L260:
	.word	gSharedMem+0xc000
	.word	gUnknown_03004DE0
.Lfe45:
	.size	 Phase2_Transition_Clockwise_BlackFade_Func4,.Lfe45-Phase2_Transition_Clockwise_BlackFade_Func4
	.align	2, 0
	.type	 Phase2_Transition_Clockwise_BlackFade_Func5,function
	.thumb_func
Phase2_Transition_Clockwise_BlackFade_Func5:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #0xfffffff0
	mov	r8, r0
	add	r1, sp, #0xc
	mov	r0, #0x0
	strb	r0, [r1]
	ldr	r4, .L275
	ldrb	r0, [r4]
	mov	r0, #0x0
	strb	r0, [r4]
	add	r0, r4, #0
	add	r0, r0, #0x24
	mov	r2, #0x2e
	ldrsh	r1, [r4, r2]
	str	r1, [sp]
	mov	r1, #0x1
	str	r1, [sp, #0x4]
	str	r1, [sp, #0x8]
	mov	r1, #0x78
	mov	r2, #0x50
	mov	r3, #0x0
	bl	sub_811D8FC
	ldr	r3, .L275+0x4
	mov	r9, r3
	mov	sl, r4
	add	r6, sp, #0xc
.L265:
	mov	r5, #0x2a
	ldrsh	r0, [r4, r5]
	lsl	r0, r0, #0x1
	mov	r7, r9
	add	r5, r0, r7
	ldrb	r1, [r5]
	ldrh	r2, [r4, #0x28]
	add	r3, r2, #0
	mov	r7, #0x2e
	ldrsh	r0, [r4, r7]
	cmp	r0, #0x50
	bgt	.L266	@cond_branch
	mov	r2, #0x78
	add	r1, r3, #0
.L266:
	lsl	r0, r2, #0x10
	asr	r0, r0, #0x8
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	orr	r1, r1, r0
	mov	r3, #0x0
	strh	r1, [r5]
	ldrb	r0, [r6]
	cmp	r0, #0
	bne	.L264	@cond_branch
	add	r0, r4, #0
	add	r0, r0, #0x24
	mov	r1, #0x1
	mov	r2, #0x1
	bl	sub_811D978
	strb	r0, [r6]
	b	.L265
.L276:
	.align	2, 0
.L275:
	.word	gSharedMem+0xc000
	.word	gUnknown_03004DE0
.L264:
	ldrh	r0, [r4, #0x2e]
	sub	r0, r0, #0x8
	strh	r0, [r4, #0x2e]
	lsl	r0, r0, #0x10
	asr	r2, r0, #0x10
	cmp	r2, #0
	bgt	.L269	@cond_branch
	strh	r3, [r4, #0x2c]
	mov	r1, r8
	ldrh	r0, [r1, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x8]
	b	.L270
.L269:
	mov	r3, #0x2a
	ldrsh	r0, [r4, r3]
	cmp	r0, r2
	ble	.L270	@cond_branch
	ldr	r4, .L277
	ldr	r2, .L277+0x4
	add	r3, r1, #0
.L273:
	ldrh	r0, [r2, #0x2a]
	sub	r0, r0, #0x1
	strh	r0, [r2, #0x2a]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0xf
	add	r0, r0, r4
	strh	r3, [r0]
	mov	r5, #0x2a
	ldrsh	r1, [r2, r5]
	mov	r7, #0x2e
	ldrsh	r0, [r2, r7]
	cmp	r1, r0
	bgt	.L273	@cond_branch
.L270:
	mov	r1, sl
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	ldrb	r1, [r1]
	mov	r2, sl
	strb	r0, [r2]
	mov	r0, #0x0
	add	sp, sp, #0x10
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L278:
	.align	2, 0
.L277:
	.word	gUnknown_03004DE0
	.word	gSharedMem+0xc000
.Lfe46:
	.size	 Phase2_Transition_Clockwise_BlackFade_Func5,.Lfe46-Phase2_Transition_Clockwise_BlackFade_Func5
	.align	2, 0
	.type	 Phase2_Transition_Clockwise_BlackFade_Func6,function
	.thumb_func
Phase2_Transition_Clockwise_BlackFade_Func6:
	push	{r4, r5, r6, lr}
	add	sp, sp, #0xfffffff4
	add	r6, r0, #0
	ldr	r4, .L287
	ldrb	r0, [r4]
	mov	r1, #0x0
	strb	r1, [r4]
	add	r0, r4, #0
	add	r0, r0, #0x24
	mov	r2, #0x2c
	ldrsh	r3, [r4, r2]
	str	r1, [sp]
	mov	r1, #0x1
	str	r1, [sp, #0x4]
	str	r1, [sp, #0x8]
	mov	r1, #0x78
	mov	r2, #0x50
	bl	sub_811D8FC
	ldr	r5, .L287+0x4
.L280:
	mov	r2, #0x78
	ldrh	r3, [r4, #0x28]
	mov	r1, #0x28
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x77
	ble	.L283	@cond_branch
	mov	r2, #0x0
	mov	r3, #0xf0
.L283:
	mov	r0, #0x2a
	ldrsh	r1, [r4, r0]
	lsl	r1, r1, #0x1
	add	r1, r1, r5
	lsl	r2, r2, #0x8
	lsl	r0, r3, #0x10
	asr	r0, r0, #0x10
	orr	r0, r0, r2
	strh	r0, [r1]
	add	r0, r4, #0
	add	r0, r0, #0x24
	mov	r1, #0x1
	mov	r2, #0x1
	bl	sub_811D978
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L280	@cond_branch
	ldr	r2, .L287
	ldrh	r0, [r2, #0x2c]
	add	r0, r0, #0x10
	strh	r0, [r2, #0x2c]
	mov	r1, #0x28
	ldrsh	r0, [r2, r1]
	cmp	r0, #0x78
	ble	.L286	@cond_branch
	ldrh	r0, [r6, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r6, #0x8]
.L286:
	ldrb	r0, [r2]
	add	r0, r0, #0x1
	ldrb	r1, [r2]
	strb	r0, [r2]
	mov	r0, #0x0
	add	sp, sp, #0xc
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L288:
	.align	2, 0
.L287:
	.word	gSharedMem+0xc000
	.word	gUnknown_03004DE0
.Lfe47:
	.size	 Phase2_Transition_Clockwise_BlackFade_Func6,.Lfe47-Phase2_Transition_Clockwise_BlackFade_Func6
	.align	2, 0
	.type	 Phase2_Transition_Clockwise_BlackFade_Func7,function
	.thumb_func
Phase2_Transition_Clockwise_BlackFade_Func7:
	push	{lr}
	ldr	r1, .L290
	ldrh	r2, [r1, #0xa]
	ldr	r0, .L290+0x4
	and	r0, r0, r2
	strh	r0, [r1, #0xa]
	ldrh	r2, [r1, #0xa]
	ldr	r0, .L290+0x8
	and	r0, r0, r2
	strh	r0, [r1, #0xa]
	ldrh	r0, [r1, #0xa]
	bl	sub_811D6D4
	ldr	r0, .L290+0xc
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L291:
	.align	2, 0
.L290:
	.word	0x40000b0
	.word	0xc5ff
	.word	0x7fff
	.word	Phase2Task_Transition_Clockwise_BlackFade
.Lfe48:
	.size	 Phase2_Transition_Clockwise_BlackFade_Func7,.Lfe48-Phase2_Transition_Clockwise_BlackFade_Func7
	.align	2, 0
	.type	 VBlankCB_Phase2_Transition_Clockwise_BlackFade,function
	.thumb_func
VBlankCB_Phase2_Transition_Clockwise_BlackFade:
	push	{r4, lr}
	ldr	r4, .L294
	ldrh	r1, [r4, #0xa]
	ldr	r0, .L294+0x4
	and	r0, r0, r1
	strh	r0, [r4, #0xa]
	ldrh	r1, [r4, #0xa]
	ldr	r0, .L294+0x8
	and	r0, r0, r1
	strh	r0, [r4, #0xa]
	ldrh	r0, [r4, #0xa]
	bl	VBlankCB_BattleTransition
	ldr	r2, .L294+0xc
	ldrb	r0, [r2]
	cmp	r0, #0
	beq	.L293	@cond_branch
	ldr	r1, .L294+0x10
	ldr	r0, .L294+0x14
	str	r0, [r1]
	mov	r3, #0xf0
	lsl	r3, r3, #0x3
	add	r0, r0, r3
	str	r0, [r1, #0x4]
	ldr	r0, .L294+0x18
	str	r0, [r1, #0x8]
	ldr	r0, [r1, #0x8]
.L293:
	ldr	r1, .L294+0x1c
	ldrh	r0, [r2, #0x2]
	strh	r0, [r1]
	add	r1, r1, #0x2
	ldrh	r0, [r2, #0x4]
	strh	r0, [r1]
	sub	r1, r1, #0x6
	ldrh	r0, [r2, #0x8]
	strh	r0, [r1]
	ldr	r2, .L294+0x20
	ldr	r0, .L294+0x14
	mov	r1, #0xf0
	lsl	r1, r1, #0x3
	add	r0, r0, r1
	ldrh	r1, [r0]
	strh	r1, [r2]
	str	r0, [r4]
	str	r2, [r4, #0x4]
	ldr	r0, .L294+0x24
	str	r0, [r4, #0x8]
	ldr	r0, [r4, #0x8]
	pop	{r4}
	pop	{r0}
	bx	r0
.L295:
	.align	2, 0
.L294:
	.word	0x40000b0
	.word	0xc5ff
	.word	0x7fff
	.word	gSharedMem+0xc000
	.word	0x40000d4
	.word	gUnknown_03004DE0
	.word	0x800000a0
	.word	0x4000048
	.word	0x4000040
	.word	0xa2400001
.Lfe49:
	.size	 VBlankCB_Phase2_Transition_Clockwise_BlackFade,.Lfe49-VBlankCB_Phase2_Transition_Clockwise_BlackFade
	.align	2, 0
	.type	 Phase2Task_Transition_Ripple,function
	.thumb_func
Phase2Task_Transition_Ripple:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r5, .L301
	ldr	r2, .L301+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r4, r1, r2
.L297:
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	_call_via_r1
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L297	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L302:
	.align	2, 0
.L301:
	.word	sPhase2_Transition_Ripple_Funcs
	.word	gTasks
.Lfe50:
	.size	 Phase2Task_Transition_Ripple,.Lfe50-Phase2Task_Transition_Ripple
	.align	2, 0
	.type	 Phase2_Transition_Ripple_Func1,function
	.thumb_func
Phase2_Transition_Ripple_Func1:
	push	{r4, r5, lr}
	add	r5, r0, #0
	bl	sub_811D658
	bl	dp12_8087EA4
	mov	r2, #0x0
	ldr	r4, .L309
	ldr	r3, .L309+0x4
.L307:
	lsl	r0, r2, #0x1
	add	r0, r0, r4
	ldrh	r1, [r3, #0x16]
	strh	r1, [r0]
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x9f
	bls	.L307	@cond_branch
	ldr	r0, .L309+0x8
	bl	SetVBlankCallback
	ldr	r0, .L309+0xc
	bl	SetHBlankCallback
	ldr	r2, .L309+0x10
	ldrh	r0, [r2]
	mov	r1, #0x2
	orr	r0, r0, r1
	strh	r0, [r2]
	ldr	r2, .L309+0x14
	ldrh	r0, [r2]
	mov	r1, #0x10
	orr	r0, r0, r1
	strh	r0, [r2]
	ldrh	r0, [r5, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x8]
	mov	r0, #0x1
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L310:
	.align	2, 0
.L309:
	.word	gUnknown_03005560
	.word	gSharedMem+0xc000
	.word	VBlankCB_Phase2_Transition_Ripple
	.word	HBlankCB_Phase2_Transition_Ripple
	.word	0x4000200
	.word	0x4000004
.Lfe51:
	.size	 Phase2_Transition_Ripple_Func1,.Lfe51-Phase2_Transition_Ripple_Func1
	.align	2, 0
	.type	 Phase2_Transition_Ripple_Func2,function
	.thumb_func
Phase2_Transition_Ripple_Func2:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #0xfffffffc
	add	r6, r0, #0
	ldr	r1, .L320
	ldrb	r0, [r1]
	mov	r0, #0x0
	strb	r0, [r1]
	ldrh	r2, [r6, #0xc]
	lsl	r1, r2, #0x10
	asr	r0, r1, #0x18
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	ldrh	r4, [r6, #0xa]
	mov	r0, #0xc0
	lsl	r0, r0, #0x1
	mov	r8, r0
	mov	r5, #0x80
	lsl	r5, r5, #0x3
	add	r0, r4, r5
	strh	r0, [r6, #0xa]
	ldr	r0, .L320+0x4
	cmp	r1, r0
	bgt	.L312	@cond_branch
	mov	r1, #0xc0
	lsl	r1, r1, #0x1
	add	r0, r2, r1
	strh	r0, [r6, #0xc]
.L312:
	mov	r5, #0x0
	lsl	r7, r3, #0x10
.L316:
	
	.code	16
	lsr	r0, r4, #0x8
	asr	r1, r7, #0x10
	bl	Sin
	ldr	r1, .L320+0x8
	lsl	r2, r5, #0x1
	add	r2, r2, r1
	ldr	r1, .L320
	ldrh	r1, [r1, #0x16]
	add	r0, r0, r1
	strh	r0, [r2]
	
	.code	16
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r1, r8
	add	r0, r4, r1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r5, #0x9f
	bls	.L316	@cond_branch
	ldrh	r0, [r6, #0xe]
	add	r0, r0, #0x1
	strh	r0, [r6, #0xe]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x51
	bne	.L318	@cond_branch
	ldrh	r0, [r6, #0x10]
	add	r0, r0, #0x1
	strh	r0, [r6, #0x10]
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x2
	neg	r1, r1
	mov	r2, #0x0
	str	r2, [sp]
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
.L318:
	mov	r5, #0x10
	ldrsh	r0, [r6, r5]
	cmp	r0, #0
	beq	.L319	@cond_branch
	ldr	r0, .L320+0xc
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L319	@cond_branch
	ldr	r0, .L320+0x10
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
.L319:
	ldr	r0, .L320
	ldrb	r1, [r0]
	add	r1, r1, #0x1
	ldrb	r2, [r0]
	strb	r1, [r0]
	mov	r0, #0x0
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L321:
	.align	2, 0
.L320:
	.word	gSharedMem+0xc000
	.word	0x1fff0000
	.word	gUnknown_03004DE0
	.word	gPaletteFade
	.word	Phase2Task_Transition_Ripple
.Lfe52:
	.size	 Phase2_Transition_Ripple_Func2,.Lfe52-Phase2_Transition_Ripple_Func2
	.align	2, 0
	.type	 VBlankCB_Phase2_Transition_Ripple,function
	.thumb_func
VBlankCB_Phase2_Transition_Ripple:
	push	{lr}
	bl	VBlankCB_BattleTransition
	ldr	r0, .L324
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L323	@cond_branch
	ldr	r1, .L324+0x4
	ldr	r0, .L324+0x8
	str	r0, [r1]
	mov	r2, #0xf0
	lsl	r2, r2, #0x3
	add	r0, r0, r2
	str	r0, [r1, #0x4]
	ldr	r0, .L324+0xc
	str	r0, [r1, #0x8]
	ldr	r0, [r1, #0x8]
.L323:
	pop	{r0}
	bx	r0
.L325:
	.align	2, 0
.L324:
	.word	gSharedMem+0xc000
	.word	0x40000d4
	.word	gUnknown_03004DE0
	.word	0x800000a0
.Lfe53:
	.size	 VBlankCB_Phase2_Transition_Ripple,.Lfe53-VBlankCB_Phase2_Transition_Ripple
	.align	2, 0
	.type	 HBlankCB_Phase2_Transition_Ripple,function
	.thumb_func
HBlankCB_Phase2_Transition_Ripple:
	ldr	r1, .L327
	ldr	r0, .L327+0x4
	ldrh	r0, [r0]
	lsl	r0, r0, #0x1
	mov	r2, #0xf0
	lsl	r2, r2, #0x3
	add	r1, r1, r2
	add	r0, r0, r1
	ldrh	r1, [r0]
	ldr	r0, .L327+0x8
	strh	r1, [r0]
	add	r0, r0, #0x4
	strh	r1, [r0]
	add	r0, r0, #0x4
	strh	r1, [r0]
	bx	lr
.L328:
	.align	2, 0
.L327:
	.word	gUnknown_03004DE0
	.word	0x4000006
	.word	0x4000016
.Lfe54:
	.size	 HBlankCB_Phase2_Transition_Ripple,.Lfe54-HBlankCB_Phase2_Transition_Ripple
	.align	2, 0
	.type	 Phase2Task_Transition_Wave,function
	.thumb_func
Phase2Task_Transition_Wave:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r5, .L334
	ldr	r2, .L334+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r4, r1, r2
.L330:
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	_call_via_r1
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L330	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L335:
	.align	2, 0
.L334:
	.word	sPhase2_Transition_Wave_Funcs
	.word	gTasks
.Lfe55:
	.size	 Phase2Task_Transition_Wave,.Lfe55-Phase2Task_Transition_Wave
	.align	2, 0
	.type	 Phase2_Transition_Wave_Func1,function
	.thumb_func
Phase2_Transition_Wave_Func1:
	push	{r4, lr}
	add	r4, r0, #0
	bl	sub_811D658
	bl	dp12_8087EA4
	ldr	r1, .L342
	mov	r2, #0x0
	mov	r0, #0x3f
	strh	r0, [r1, #0x2]
	strh	r2, [r1, #0x4]
	mov	r0, #0xf0
	strh	r0, [r1, #0x6]
	mov	r0, #0xa0
	strh	r0, [r1, #0x8]
	mov	r1, #0x0
	ldr	r3, .L342+0x4
	mov	r2, #0xf2
.L340:
	lsl	r0, r1, #0x1
	add	r0, r0, r3
	strh	r2, [r0]
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x9f
	bls	.L340	@cond_branch
	ldr	r0, .L342+0x8
	bl	SetVBlankCallback
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	mov	r0, #0x1
	pop	{r4}
	pop	{r1}
	bx	r1
.L343:
	.align	2, 0
.L342:
	.word	gSharedMem+0xc000
	.word	gUnknown_03004DE0+0x780
	.word	VBlankCB_Phase2_Transition_Wave
.Lfe56:
	.size	 Phase2_Transition_Wave_Func1,.Lfe56-Phase2_Transition_Wave_Func1
	.align	2, 0
	.type	 Phase2_Transition_Wave_Func2,function
	.thumb_func
Phase2_Transition_Wave_Func2:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	r4, r0, #0
	ldr	r1, .L354
	ldrb	r0, [r1]
	mov	r0, #0x0
	strb	r0, [r1]
	ldr	r7, .L354+0x4
	ldrh	r0, [r4, #0xc]
	ldrb	r5, [r4, #0xc]
	add	r0, r0, #0x10
	strh	r0, [r4, #0xc]
	ldrh	r0, [r4, #0xa]
	add	r0, r0, #0x8
	strh	r0, [r4, #0xa]
	mov	r6, #0x0
	mov	r0, #0x1
	mov	r8, r0
.L348:
	add	r0, r5, #0
	mov	r1, #0x28
	bl	Sin
	ldrh	r1, [r4, #0xa]
	add	r0, r0, r1
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	cmp	r0, #0
	bge	.L349	@cond_branch
	mov	r1, #0x0
.L349:
	lsl	r0, r1, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0xf0
	ble	.L350	@cond_branch
	mov	r1, #0xf0
.L350:
	lsl	r0, r1, #0x10
	asr	r0, r0, #0x10
	lsl	r1, r0, #0x8
	mov	r2, #0xf1
	orr	r1, r1, r2
	strh	r1, [r7]
	cmp	r0, #0xef
	bgt	.L347	@cond_branch
	mov	r0, #0x0
	mov	r8, r0
.L347:
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	add	r0, r5, #0x4
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r7, r7, #0x2
	cmp	r6, #0x9f
	bls	.L348	@cond_branch
	mov	r1, r8
	cmp	r1, #0
	beq	.L353	@cond_branch
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
.L353:
	ldr	r0, .L354
	ldrb	r1, [r0]
	add	r1, r1, #0x1
	ldrb	r2, [r0]
	strb	r1, [r0]
	mov	r0, #0x0
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L355:
	.align	2, 0
.L354:
	.word	gSharedMem+0xc000
	.word	gUnknown_03004DE0
.Lfe57:
	.size	 Phase2_Transition_Wave_Func2,.Lfe57-Phase2_Transition_Wave_Func2
	.align	2, 0
	.type	 Phase2_Transition_Wave_Func3,function
	.thumb_func
Phase2_Transition_Wave_Func3:
	push	{lr}
	ldr	r1, .L357
	ldrh	r2, [r1, #0xa]
	ldr	r0, .L357+0x4
	and	r0, r0, r2
	strh	r0, [r1, #0xa]
	ldrh	r2, [r1, #0xa]
	ldr	r0, .L357+0x8
	and	r0, r0, r2
	strh	r0, [r1, #0xa]
	ldrh	r0, [r1, #0xa]
	bl	sub_811D6D4
	ldr	r0, .L357+0xc
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L358:
	.align	2, 0
.L357:
	.word	0x40000b0
	.word	0xc5ff
	.word	0x7fff
	.word	Phase2Task_Transition_Wave
.Lfe58:
	.size	 Phase2_Transition_Wave_Func3,.Lfe58-Phase2_Transition_Wave_Func3
	.align	2, 0
	.type	 VBlankCB_Phase2_Transition_Wave,function
	.thumb_func
VBlankCB_Phase2_Transition_Wave:
	push	{r4, lr}
	ldr	r4, .L361
	ldrh	r1, [r4, #0xa]
	ldr	r0, .L361+0x4
	and	r0, r0, r1
	strh	r0, [r4, #0xa]
	ldrh	r1, [r4, #0xa]
	ldr	r0, .L361+0x8
	and	r0, r0, r1
	strh	r0, [r4, #0xa]
	ldrh	r0, [r4, #0xa]
	bl	VBlankCB_BattleTransition
	ldr	r2, .L361+0xc
	ldrb	r0, [r2]
	cmp	r0, #0
	beq	.L360	@cond_branch
	ldr	r1, .L361+0x10
	ldr	r0, .L361+0x14
	str	r0, [r1]
	mov	r3, #0xf0
	lsl	r3, r3, #0x3
	add	r0, r0, r3
	str	r0, [r1, #0x4]
	ldr	r0, .L361+0x18
	str	r0, [r1, #0x8]
	ldr	r0, [r1, #0x8]
.L360:
	ldr	r1, .L361+0x1c
	ldrh	r0, [r2, #0x2]
	strh	r0, [r1]
	add	r1, r1, #0x2
	ldrh	r0, [r2, #0x4]
	strh	r0, [r1]
	sub	r1, r1, #0x6
	ldrh	r0, [r2, #0x8]
	strh	r0, [r1]
	ldr	r0, .L361+0x20
	str	r0, [r4]
	ldr	r0, .L361+0x24
	str	r0, [r4, #0x4]
	ldr	r0, .L361+0x28
	str	r0, [r4, #0x8]
	ldr	r0, [r4, #0x8]
	pop	{r4}
	pop	{r0}
	bx	r0
.L362:
	.align	2, 0
.L361:
	.word	0x40000b0
	.word	0xc5ff
	.word	0x7fff
	.word	gSharedMem+0xc000
	.word	0x40000d4
	.word	gUnknown_03004DE0
	.word	0x800000a0
	.word	0x4000048
	.word	gUnknown_03004DE0+0x780
	.word	0x4000040
	.word	0xa2400001
.Lfe59:
	.size	 VBlankCB_Phase2_Transition_Wave,.Lfe59-VBlankCB_Phase2_Transition_Wave
	.align	2, 0
	.type	 Phase2Task_Transition_Sydney,function
	.thumb_func
Phase2Task_Transition_Sydney:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L364
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	mov	r2, #0x0
	strh	r2, [r1, #0x26]
	bl	Phase2Task_MugShotTransition
	pop	{r0}
	bx	r0
.L365:
	.align	2, 0
.L364:
	.word	gTasks
.Lfe60:
	.size	 Phase2Task_Transition_Sydney,.Lfe60-Phase2Task_Transition_Sydney
	.align	2, 0
	.type	 Phase2Task_Transition_Phoebe,function
	.thumb_func
Phase2Task_Transition_Phoebe:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L367
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	mov	r2, #0x1
	strh	r2, [r1, #0x26]
	bl	Phase2Task_MugShotTransition
	pop	{r0}
	bx	r0
.L368:
	.align	2, 0
.L367:
	.word	gTasks
.Lfe61:
	.size	 Phase2Task_Transition_Phoebe,.Lfe61-Phase2Task_Transition_Phoebe
	.align	2, 0
	.type	 Phase2Task_Transition_Glacia,function
	.thumb_func
Phase2Task_Transition_Glacia:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L370
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	mov	r2, #0x2
	strh	r2, [r1, #0x26]
	bl	Phase2Task_MugShotTransition
	pop	{r0}
	bx	r0
.L371:
	.align	2, 0
.L370:
	.word	gTasks
.Lfe62:
	.size	 Phase2Task_Transition_Glacia,.Lfe62-Phase2Task_Transition_Glacia
	.align	2, 0
	.type	 Phase2Task_Transition_Drake,function
	.thumb_func
Phase2Task_Transition_Drake:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L373
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	mov	r2, #0x3
	strh	r2, [r1, #0x26]
	bl	Phase2Task_MugShotTransition
	pop	{r0}
	bx	r0
.L374:
	.align	2, 0
.L373:
	.word	gTasks
.Lfe63:
	.size	 Phase2Task_Transition_Drake,.Lfe63-Phase2Task_Transition_Drake
	.align	2, 0
	.type	 Phase2Task_Transition_Steven,function
	.thumb_func
Phase2Task_Transition_Steven:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L376
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	mov	r2, #0x4
	strh	r2, [r1, #0x26]
	bl	Phase2Task_MugShotTransition
	pop	{r0}
	bx	r0
.L377:
	.align	2, 0
.L376:
	.word	gTasks
.Lfe64:
	.size	 Phase2Task_Transition_Steven,.Lfe64-Phase2Task_Transition_Steven
	.align	2, 0
	.type	 Phase2Task_MugShotTransition,function
	.thumb_func
Phase2Task_MugShotTransition:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r5, .L383
	ldr	r2, .L383+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r4, r1, r2
.L379:
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	_call_via_r1
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L379	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L384:
	.align	2, 0
.L383:
	.word	sPhase2_Mugshot_Transition_Funcs
	.word	gTasks
.Lfe65:
	.size	 Phase2Task_MugShotTransition,.Lfe65-Phase2Task_MugShotTransition
	.align	2, 0
	.type	 Phase2_Mugshot_Func1,function
	.thumb_func
Phase2_Mugshot_Func1:
	push	{r4, lr}
	add	r4, r0, #0
	bl	sub_811D658
	bl	dp12_8087EA4
	add	r0, r4, #0
	bl	Mugshots_CreateOpponentPlayerSprites
	mov	r0, #0x0
	strh	r0, [r4, #0xa]
	mov	r0, #0x1
	strh	r0, [r4, #0xc]
	mov	r0, #0xef
	strh	r0, [r4, #0xe]
	ldr	r1, .L391
	mov	r0, #0x3f
	strh	r0, [r1, #0x2]
	mov	r0, #0x3e
	strh	r0, [r1, #0x4]
	mov	r0, #0xa0
	strh	r0, [r1, #0x8]
	mov	r1, #0x0
	ldr	r3, .L391+0x4
	ldr	r2, .L391+0x8
.L389:
	lsl	r0, r1, #0x1
	add	r0, r0, r3
	strh	r2, [r0]
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x9f
	bls	.L389	@cond_branch
	ldr	r0, .L391+0xc
	bl	SetVBlankCallback
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L392:
	.align	2, 0
.L391:
	.word	gSharedMem+0xc000
	.word	gUnknown_03004DE0+0x780
	.word	0xf0f1
	.word	VBlankCB0_Phase2_Mugshots
.Lfe66:
	.size	 Phase2_Mugshot_Func1,.Lfe66-Phase2_Mugshot_Func1
	.align	2, 0
	.type	 Phase2_Mugshot_Func2,function
	.thumb_func
Phase2_Mugshot_Func2:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #0xfffffff8
	mov	r8, r0
	ldr	r6, .L404
	add	r1, sp, #0x4
	mov	r0, sp
	bl	sub_811D6A8
	ldr	r0, .L404+0x4
	ldr	r1, [sp, #0x4]
	mov	r2, #0xf0
	bl	CpuSet
	ldr	r1, .L404+0x8
	mov	r2, r8
	mov	r3, #0x26
	ldrsh	r0, [r2, r3]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	r1, #0xf0
	mov	r2, #0x20
	bl	LoadPalette
	ldr	r1, .L404+0xc
	ldr	r0, .L404+0x10
	ldrb	r0, [r0, #0x8]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	r1, #0xfa
	mov	r2, #0xc
	bl	LoadPalette
	mov	r1, #0x0
	ldr	r5, [sp]
	ldr	r0, .L404+0x14
	mov	ip, r0
	mov	r2, #0xf0
	lsl	r2, r2, #0x8
	add	r7, r2, #0
.L397:
	mov	r0, #0x0
	lsl	r3, r1, #0x10
	asr	r4, r3, #0xb
.L401:
	lsl	r2, r0, #0x10
	asr	r2, r2, #0x10
	add	r1, r4, r2
	lsl	r1, r1, #0x1
	add	r1, r1, r5
	ldrh	r0, [r6]
	orr	r0, r0, r7
	strh	r0, [r1]
	add	r2, r2, #0x1
	lsl	r2, r2, #0x10
	add	r6, r6, #0x2
	lsr	r0, r2, #0x10
	asr	r2, r2, #0x10
	cmp	r2, #0x1f
	ble	.L401	@cond_branch
	mov	r1, #0x80
	lsl	r1, r1, #0x9
	add	r0, r3, r1
	lsr	r1, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x13
	ble	.L397	@cond_branch
	ldr	r2, .L404+0x18
	ldrh	r0, [r2]
	mov	r1, #0x2
	orr	r0, r0, r1
	strh	r0, [r2]
	ldr	r2, .L404+0x1c
	ldrh	r0, [r2]
	mov	r1, #0x10
	orr	r0, r0, r1
	strh	r0, [r2]
	mov	r0, ip
	bl	SetHBlankCallback
	mov	r2, r8
	ldrh	r0, [r2, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r2, #0x8]
	mov	r0, #0x0
	add	sp, sp, #0x8
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L405:
	.align	2, 0
.L404:
	.word	sMugshotsTilemap
	.word	sUnknown_083FC348
	.word	sOpponentMugshotsPals
	.word	sPlayerMugshotsPals
	.word	gSaveBlock2
	.word	HBlankCB_Phase2_Mugshots
	.word	0x4000200
	.word	0x4000004
.Lfe67:
	.size	 Phase2_Mugshot_Func2,.Lfe67-Phase2_Mugshot_Func2
	.align	2, 0
	.type	 Phase2_Mugshot_Func3,function
	.thumb_func
Phase2_Mugshot_Func3:
	push	{r4, r5, r6, r7, lr}
	add	r4, r0, #0
	ldr	r1, .L425
	ldrb	r0, [r1]
	mov	r0, #0x0
	strb	r0, [r1]
	ldr	r7, .L425+0x4
	ldrh	r0, [r4, #0xa]
	ldrb	r5, [r4, #0xa]
	add	r0, r0, #0x10
	strh	r0, [r4, #0xa]
	mov	r6, #0x0
.L410:
	add	r0, r5, #0
	mov	r1, #0x10
	bl	Sin
	ldrh	r1, [r4, #0xc]
	add	r0, r0, r1
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	cmp	r0, #0
	bge	.L411	@cond_branch
	mov	r2, #0x1
.L411:
	lsl	r0, r2, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0xf0
	ble	.L412	@cond_branch
	mov	r2, #0xf0
.L412:
	strh	r2, [r7]
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	add	r7, r7, #0x2
	add	r0, r5, #0
	add	r0, r0, #0x10
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r6, #0x4f
	bls	.L410	@cond_branch
	cmp	r6, #0x9f
	bhi	.L424	@cond_branch
.L417:
	add	r0, r5, #0
	mov	r1, #0x10
	bl	Sin
	ldrh	r1, [r4, #0xe]
	sub	r1, r1, r0
	lsl	r1, r1, #0x10
	lsr	r2, r1, #0x10
	cmp	r1, #0
	bge	.L418	@cond_branch
	mov	r2, #0x0
.L418:
	lsl	r0, r2, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0xef
	ble	.L419	@cond_branch
	mov	r2, #0xef
.L419:
	lsl	r0, r2, #0x10
	asr	r0, r0, #0x8
	mov	r1, #0xf0
	orr	r0, r0, r1
	strh	r0, [r7]
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	add	r7, r7, #0x2
	add	r0, r5, #0
	add	r0, r0, #0x10
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r6, #0x9f
	bls	.L417	@cond_branch
.L424:
	ldrh	r1, [r4, #0xc]
	add	r1, r1, #0x8
	strh	r1, [r4, #0xc]
	ldrh	r0, [r4, #0xe]
	sub	r0, r0, #0x8
	strh	r0, [r4, #0xe]
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	cmp	r1, #0xf0
	ble	.L421	@cond_branch
	mov	r0, #0xf0
	strh	r0, [r4, #0xc]
.L421:
	mov	r1, #0xe
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	bge	.L422	@cond_branch
	mov	r0, #0x0
	strh	r0, [r4, #0xe]
.L422:
	ldr	r0, [r4, #0xc]
	cmp	r0, #0xf0
	bne	.L423	@cond_branch
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
.L423:
	ldr	r1, .L425
	ldrh	r0, [r1, #0x18]
	sub	r0, r0, #0x8
	strh	r0, [r1, #0x18]
	ldrh	r0, [r1, #0x1a]
	add	r0, r0, #0x8
	strh	r0, [r1, #0x1a]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	ldrb	r2, [r1]
	strb	r0, [r1]
	mov	r0, #0x0
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L426:
	.align	2, 0
.L425:
	.word	gSharedMem+0xc000
	.word	gUnknown_03004DE0
.Lfe68:
	.size	 Phase2_Mugshot_Func3,.Lfe68-Phase2_Mugshot_Func3
	.align	2, 0
	.type	 Phase2_Mugshot_Func4,function
	.thumb_func
Phase2_Mugshot_Func4:
	push	{r4, r5, lr}
	add	r4, r0, #0
	ldr	r0, .L433
	ldrb	r1, [r0]
	mov	r1, #0x0
	strb	r1, [r0]
	ldr	r2, .L433+0x4
	add	r5, r0, #0
	mov	r3, #0xf0
.L431:
	strh	r3, [r2]
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	add	r2, r2, #0x2
	cmp	r1, #0x9f
	bls	.L431	@cond_branch
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	mov	r1, #0x0
	strh	r0, [r4, #0x8]
	strh	r1, [r4, #0xa]
	strh	r1, [r4, #0xc]
	strh	r1, [r4, #0xe]
	ldrh	r0, [r5, #0x18]
	sub	r0, r0, #0x8
	strh	r0, [r5, #0x18]
	ldrh	r0, [r5, #0x1a]
	add	r0, r0, #0x8
	strh	r0, [r5, #0x1a]
	mov	r1, #0x22
	ldrsh	r0, [r4, r1]
	mov	r1, #0x0
	bl	sub_811CA10
	mov	r1, #0x24
	ldrsh	r0, [r4, r1]
	mov	r1, #0x1
	bl	sub_811CA10
	mov	r1, #0x22
	ldrsh	r0, [r4, r1]
	bl	sub_811CA28
	mov	r0, #0x68
	bl	PlaySE
	ldrb	r0, [r5]
	add	r0, r0, #0x1
	ldrb	r1, [r5]
	strb	r0, [r5]
	mov	r0, #0x0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L434:
	.align	2, 0
.L433:
	.word	gSharedMem+0xc000
	.word	gUnknown_03004DE0
.Lfe69:
	.size	 Phase2_Mugshot_Func4,.Lfe69-Phase2_Mugshot_Func4
	.align	2, 0
	.type	 Phase2_Mugshot_Func5,function
	.thumb_func
Phase2_Mugshot_Func5:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r1, .L437
	ldrh	r0, [r1, #0x18]
	sub	r0, r0, #0x8
	strh	r0, [r1, #0x18]
	ldrh	r0, [r1, #0x1a]
	add	r0, r0, #0x8
	strh	r0, [r1, #0x1a]
	mov	r1, #0x22
	ldrsh	r0, [r4, r1]
	bl	sub_811CA44
	lsl	r0, r0, #0x10
	cmp	r0, #0
	beq	.L436	@cond_branch
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	mov	r1, #0x24
	ldrsh	r0, [r4, r1]
	bl	sub_811CA28
.L436:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L438:
	.align	2, 0
.L437:
	.word	gSharedMem+0xc000
.Lfe70:
	.size	 Phase2_Mugshot_Func5,.Lfe70-Phase2_Mugshot_Func5
	.align	2, 0
	.type	 Phase2_Mugshot_Func6,function
	.thumb_func
Phase2_Mugshot_Func6:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	r6, r0, #0
	ldr	r7, .L441
	ldrh	r0, [r7, #0x18]
	sub	r0, r0, #0x8
	mov	r1, #0x0
	mov	r8, r1
	strh	r0, [r7, #0x18]
	ldrh	r0, [r7, #0x1a]
	add	r0, r0, #0x8
	strh	r0, [r7, #0x1a]
	mov	r1, #0x24
	ldrsh	r0, [r6, r1]
	bl	sub_811CA44
	lsl	r0, r0, #0x10
	cmp	r0, #0
	beq	.L440	@cond_branch
	ldrb	r0, [r7]
	mov	r0, #0x0
	strb	r0, [r7]
	mov	r0, #0x0
	bl	SetVBlankCallback
	ldr	r1, .L441+0x4
	ldrh	r2, [r1, #0xa]
	ldr	r0, .L441+0x8
	and	r0, r0, r2
	strh	r0, [r1, #0xa]
	ldrh	r2, [r1, #0xa]
	ldr	r0, .L441+0xc
	and	r0, r0, r2
	strh	r0, [r1, #0xa]
	ldrh	r0, [r1, #0xa]
	ldr	r4, .L441+0x10
	mov	r5, #0xa0
	lsl	r5, r5, #0x1
	add	r0, r4, #0
	mov	r1, #0x0
	add	r2, r5, #0
	bl	memset
	mov	r0, #0xf0
	lsl	r0, r0, #0x3
	add	r4, r4, r0
	add	r0, r4, #0
	mov	r1, #0x0
	add	r2, r5, #0
	bl	memset
	ldr	r1, .L441+0x14
	mov	r0, #0xf0
	strh	r0, [r1]
	ldr	r0, .L441+0x18
	mov	r1, r8
	strh	r1, [r0]
	ldrh	r0, [r6, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r6, #0x8]
	strh	r1, [r6, #0xe]
	strh	r1, [r6, #0x10]
	mov	r0, #0xbf
	strh	r0, [r7, #0xe]
	ldr	r0, .L441+0x1c
	bl	SetVBlankCallback
.L440:
	mov	r0, #0x0
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L442:
	.align	2, 0
.L441:
	.word	gSharedMem+0xc000
	.word	0x40000b0
	.word	0xc5ff
	.word	0x7fff
	.word	gUnknown_03004DE0
	.word	0x4000040
	.word	0x4000054
	.word	VBlankCB1_Phase2_Mugshots
.Lfe71:
	.size	 Phase2_Mugshot_Func6,.Lfe71-Phase2_Mugshot_Func6
	.align	2, 0
	.type	 Phase2_Mugshot_Func7,function
	.thumb_func
Phase2_Mugshot_Func7:
	push	{r4, r5, r6, r7, lr}
	add	r4, r0, #0
	ldr	r1, .L455
	ldrb	r0, [r1]
	mov	r0, #0x0
	strb	r0, [r1]
	mov	r6, #0x1
	ldrh	r0, [r1, #0x18]
	sub	r0, r0, #0x8
	strh	r0, [r1, #0x18]
	ldrh	r0, [r1, #0x1a]
	add	r0, r0, #0x8
	strh	r0, [r1, #0x1a]
	ldrh	r2, [r4, #0x10]
	mov	r3, #0x10
	ldrsh	r0, [r4, r3]
	add	r7, r1, #0
	cmp	r0, #0x4f
	bgt	.L444	@cond_branch
	add	r0, r2, #0x2
	strh	r0, [r4, #0x10]
.L444:
	mov	r1, #0x10
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x50
	ble	.L445	@cond_branch
	mov	r0, #0x50
	strh	r0, [r4, #0x10]
.L445:
	ldrh	r0, [r4, #0xe]
	add	r0, r0, #0x1
	strh	r0, [r4, #0xe]
	mov	r1, #0x1
	and	r0, r0, r1
	ldrh	r2, [r4, #0x10]
	cmp	r0, #0
	beq	.L446	@cond_branch
	mov	r3, #0x0
	lsl	r0, r2, #0x10
	mov	r6, #0x0
	cmp	r0, #0
	blt	.L446	@cond_branch
	mov	r2, #0x50
	mov	ip, r2
	ldr	r5, .L455+0x4
.L450:
	lsl	r0, r3, #0x10
	asr	r2, r0, #0x10
	mov	r3, ip
	sub	r1, r3, r2
	add	r0, r2, #0
	add	r0, r0, #0x50
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	lsl	r1, r1, #0x10
	asr	r1, r1, #0xf
	add	r1, r1, r5
	ldrh	r0, [r1]
	cmp	r0, #0xf
	bhi	.L451	@cond_branch
	mov	r6, #0x1
	add	r0, r0, #0x1
	strh	r0, [r1]
.L451:
	lsl	r0, r3, #0x10
	asr	r0, r0, #0xf
	add	r1, r0, r5
	ldrh	r0, [r1]
	cmp	r0, #0xf
	bhi	.L449	@cond_branch
	mov	r6, #0x1
	add	r0, r0, #0x1
	strh	r0, [r1]
.L449:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	asr	r0, r0, #0x10
	mov	r2, #0x10
	ldrsh	r1, [r4, r2]
	ldrh	r2, [r4, #0x10]
	cmp	r0, r1
	ble	.L450	@cond_branch
.L446:
	cmp	r2, #0x50
	bne	.L454	@cond_branch
	cmp	r6, #0
	bne	.L454	@cond_branch
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
.L454:
	ldrb	r0, [r7]
	add	r0, r0, #0x1
	ldrb	r1, [r7]
	strb	r0, [r7]
	mov	r0, #0x0
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L456:
	.align	2, 0
.L455:
	.word	gSharedMem+0xc000
	.word	gUnknown_03004DE0
.Lfe72:
	.size	 Phase2_Mugshot_Func7,.Lfe72-Phase2_Mugshot_Func7
	.align	2, 0
	.type	 Phase2_Mugshot_Func8,function
	.thumb_func
Phase2_Mugshot_Func8:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	ldr	r4, .L458
	ldrb	r0, [r4]
	mov	r6, #0x0
	strb	r6, [r4]
	mov	r0, #0x1
	neg	r0, r0
	ldr	r2, .L458+0x4
	mov	r1, #0x10
	bl	BlendPalettes
	mov	r0, #0xff
	strh	r0, [r4, #0xe]
	strh	r6, [r5, #0xe]
	ldrh	r0, [r5, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x8]
	mov	r0, #0x1
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L459:
	.align	2, 0
.L458:
	.word	gSharedMem+0xc000
	.word	0x7fff
.Lfe73:
	.size	 Phase2_Mugshot_Func8,.Lfe73-Phase2_Mugshot_Func8
	.align	2, 0
	.type	 Phase2_Mugshot_Func9,function
	.thumb_func
Phase2_Mugshot_Func9:
	push	{r4, r5, lr}
	add	r4, r0, #0
	ldr	r5, .L462
	ldrb	r0, [r5]
	mov	r0, #0x0
	strb	r0, [r5]
	ldrh	r0, [r4, #0xe]
	add	r0, r0, #0x1
	strh	r0, [r4, #0xe]
	ldr	r0, .L462+0x4
	mov	r2, #0xe
	ldrsh	r1, [r4, r2]
	mov	r2, #0xa0
	lsl	r2, r2, #0x1
	bl	memset
	mov	r1, #0xe
	ldrsh	r0, [r4, r1]
	cmp	r0, #0xf
	ble	.L461	@cond_branch
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
.L461:
	ldrb	r0, [r5]
	add	r0, r0, #0x1
	ldrb	r1, [r5]
	strb	r0, [r5]
	mov	r0, #0x0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L463:
	.align	2, 0
.L462:
	.word	gSharedMem+0xc000
	.word	gUnknown_03004DE0
.Lfe74:
	.size	 Phase2_Mugshot_Func9,.Lfe74-Phase2_Mugshot_Func9
	.align	2, 0
	.type	 Phase2_Mugshot_Func10,function
	.thumb_func
Phase2_Mugshot_Func10:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r1, .L465
	ldrh	r2, [r1, #0xa]
	ldr	r0, .L465+0x4
	and	r0, r0, r2
	strh	r0, [r1, #0xa]
	ldrh	r2, [r1, #0xa]
	ldr	r0, .L465+0x8
	and	r0, r0, r2
	strh	r0, [r1, #0xa]
	ldrh	r0, [r1, #0xa]
	bl	sub_811D6D4
	ldr	r0, [r4]
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L466:
	.align	2, 0
.L465:
	.word	0x40000b0
	.word	0xc5ff
	.word	0x7fff
.Lfe75:
	.size	 Phase2_Mugshot_Func10,.Lfe75-Phase2_Mugshot_Func10
	.align	2, 0
	.type	 VBlankCB0_Phase2_Mugshots,function
	.thumb_func
VBlankCB0_Phase2_Mugshots:
	push	{r4, lr}
	ldr	r4, .L469
	ldrh	r1, [r4, #0xa]
	ldr	r0, .L469+0x4
	and	r0, r0, r1
	strh	r0, [r4, #0xa]
	ldrh	r1, [r4, #0xa]
	ldr	r0, .L469+0x8
	and	r0, r0, r1
	strh	r0, [r4, #0xa]
	ldrh	r0, [r4, #0xa]
	bl	VBlankCB_BattleTransition
	ldr	r2, .L469+0xc
	ldrb	r0, [r2]
	cmp	r0, #0
	beq	.L468	@cond_branch
	ldr	r1, .L469+0x10
	ldr	r0, .L469+0x14
	str	r0, [r1]
	mov	r3, #0xf0
	lsl	r3, r3, #0x3
	add	r0, r0, r3
	str	r0, [r1, #0x4]
	ldr	r0, .L469+0x18
	str	r0, [r1, #0x8]
	ldr	r0, [r1, #0x8]
.L468:
	ldr	r1, .L469+0x1c
	ldrh	r0, [r2, #0x1c]
	strh	r0, [r1]
	add	r1, r1, #0x36
	ldrh	r0, [r2, #0x2]
	strh	r0, [r1]
	add	r1, r1, #0x2
	ldrh	r0, [r2, #0x4]
	strh	r0, [r1]
	sub	r1, r1, #0x6
	ldrh	r0, [r2, #0x8]
	strh	r0, [r1]
	ldr	r0, .L469+0x20
	str	r0, [r4]
	ldr	r0, .L469+0x24
	str	r0, [r4, #0x4]
	ldr	r0, .L469+0x28
	str	r0, [r4, #0x8]
	ldr	r0, [r4, #0x8]
	pop	{r4}
	pop	{r0}
	bx	r0
.L470:
	.align	2, 0
.L469:
	.word	0x40000b0
	.word	0xc5ff
	.word	0x7fff
	.word	gSharedMem+0xc000
	.word	0x40000d4
	.word	gUnknown_03004DE0
	.word	0x800000a0
	.word	0x4000012
	.word	gUnknown_03004DE0+0x780
	.word	0x4000040
	.word	0xa2400001
.Lfe76:
	.size	 VBlankCB0_Phase2_Mugshots,.Lfe76-VBlankCB0_Phase2_Mugshots
	.align	2, 0
	.type	 VBlankCB1_Phase2_Mugshots,function
	.thumb_func
VBlankCB1_Phase2_Mugshots:
	push	{r4, lr}
	ldr	r4, .L473
	ldrh	r1, [r4, #0xa]
	ldr	r0, .L473+0x4
	and	r0, r0, r1
	strh	r0, [r4, #0xa]
	ldrh	r1, [r4, #0xa]
	ldr	r0, .L473+0x8
	and	r0, r0, r1
	strh	r0, [r4, #0xa]
	ldrh	r0, [r4, #0xa]
	bl	VBlankCB_BattleTransition
	ldr	r2, .L473+0xc
	ldrb	r0, [r2]
	cmp	r0, #0
	beq	.L472	@cond_branch
	ldr	r1, .L473+0x10
	ldr	r0, .L473+0x14
	str	r0, [r1]
	mov	r3, #0xf0
	lsl	r3, r3, #0x3
	add	r0, r0, r3
	str	r0, [r1, #0x4]
	ldr	r0, .L473+0x18
	str	r0, [r1, #0x8]
	ldr	r0, [r1, #0x8]
.L472:
	ldr	r1, .L473+0x1c
	ldrh	r0, [r2, #0xe]
	strh	r0, [r1]
	ldr	r0, .L473+0x20
	str	r0, [r4]
	ldr	r0, .L473+0x24
	str	r0, [r4, #0x4]
	ldr	r0, .L473+0x28
	str	r0, [r4, #0x8]
	ldr	r0, [r4, #0x8]
	pop	{r4}
	pop	{r0}
	bx	r0
.L474:
	.align	2, 0
.L473:
	.word	0x40000b0
	.word	0xc5ff
	.word	0x7fff
	.word	gSharedMem+0xc000
	.word	0x40000d4
	.word	gUnknown_03004DE0
	.word	0x800000a0
	.word	0x4000050
	.word	gUnknown_03004DE0+0x780
	.word	0x4000054
	.word	0xa2400001
.Lfe77:
	.size	 VBlankCB1_Phase2_Mugshots,.Lfe77-VBlankCB1_Phase2_Mugshots
	.align	2, 0
	.type	 HBlankCB_Phase2_Mugshots,function
	.thumb_func
HBlankCB_Phase2_Mugshots:
	push	{lr}
	ldr	r0, .L479
	ldrh	r0, [r0]
	cmp	r0, #0x4f
	bhi	.L476	@cond_branch
	ldr	r0, .L479+0x4
	ldr	r1, .L479+0x8
	ldrh	r1, [r1, #0x18]
	b	.L478
.L480:
	.align	2, 0
.L479:
	.word	0x4000006
	.word	0x4000010
	.word	gSharedMem+0xc000
.L476:
	ldr	r0, .L481
	ldr	r1, .L481+0x4
	ldrh	r1, [r1, #0x1a]
.L478:
	strh	r1, [r0]
	pop	{r0}
	bx	r0
.L482:
	.align	2, 0
.L481:
	.word	0x4000010
	.word	gSharedMem+0xc000
.Lfe78:
	.size	 HBlankCB_Phase2_Mugshots,.Lfe78-HBlankCB_Phase2_Mugshots
	.align	2, 0
	.type	 Mugshots_CreateOpponentPlayerSprites,function
	.thumb_func
Mugshots_CreateOpponentPlayerSprites:
	push	{r4, r5, r6, lr}
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6}
	add	sp, sp, #0xfffffffc
	add	r4, r0, #0
	ldr	r0, .L484
	mov	r2, #0x26
	ldrsh	r1, [r4, r2]
	mov	r8, r1
	add	r0, r0, r8
	ldrb	r0, [r0]
	ldr	r2, .L484+0x4
	lsl	r1, r1, #0x2
	mov	r8, r1
	add	r1, r1, r2
	ldrh	r1, [r1]
	sub	r1, r1, #0x20
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	add	r2, r2, #0x2
	add	r2, r2, r8
	ldrh	r2, [r2]
	add	r2, r2, #0x2a
	lsl	r2, r2, #0x10
	asr	r2, r2, #0x10
	ldr	r5, .L484+0x8
	str	r5, [sp]
	mov	r3, #0x0
	bl	CreateTrainerSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4, #0x22]
	ldr	r0, .L484+0xc
	ldrb	r0, [r0, #0x8]
	mov	r1, #0x88
	lsl	r1, r1, #0x1
	str	r5, [sp]
	mov	r2, #0x6a
	mov	r3, #0x0
	bl	CreateTrainerSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4, #0x24]
	mov	r3, #0x22
	ldrsh	r0, [r4, r3]
	lsl	r5, r0, #0x4
	add	r5, r5, r0
	lsl	r5, r5, #0x2
	ldr	r1, .L484+0x10
	add	r5, r5, r1
	mov	r2, #0x24
	ldrsh	r0, [r4, r2]
	lsl	r6, r0, #0x4
	add	r6, r6, r0
	lsl	r6, r6, #0x2
	add	r6, r6, r1
	ldr	r0, .L484+0x14
	str	r0, [r5, #0x1c]
	str	r0, [r6, #0x1c]
	ldrb	r0, [r5, #0x1]
	mov	r1, #0x3
	orr	r0, r0, r1
	strb	r0, [r5, #0x1]
	ldrb	r0, [r6, #0x1]
	orr	r0, r0, r1
	strb	r0, [r6, #0x1]
	bl	AllocOamMatrix
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r3, #0x1f
	mov	r9, r3
	mov	r4, r9
	and	r0, r0, r4
	lsl	r0, r0, #0x1
	ldrb	r2, [r5, #0x3]
	mov	r4, #0x3f
	neg	r4, r4
	add	r1, r4, #0
	and	r1, r1, r2
	orr	r1, r1, r0
	strb	r1, [r5, #0x3]
	bl	AllocOamMatrix
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, r9
	and	r0, r0, r1
	lsl	r0, r0, #0x1
	ldrb	r1, [r6, #0x3]
	and	r4, r4, r1
	orr	r4, r4, r0
	strb	r4, [r6, #0x3]
	ldrb	r2, [r5, #0x1]
	mov	r1, #0x3f
	add	r0, r1, #0
	and	r0, r0, r2
	mov	r2, #0x40
	orr	r0, r0, r2
	strb	r0, [r5, #0x1]
	ldrb	r0, [r6, #0x1]
	and	r1, r1, r0
	orr	r1, r1, r2
	strb	r1, [r6, #0x1]
	ldrb	r0, [r5, #0x3]
	mov	r1, #0xc0
	orr	r0, r0, r1
	strb	r0, [r5, #0x3]
	ldrb	r0, [r6, #0x3]
	orr	r0, r0, r1
	strb	r0, [r6, #0x3]
	add	r0, r5, #0
	mov	r1, #0x1
	mov	r2, #0x3
	mov	r3, #0x3
	bl	CalcCenterToCornerVec
	add	r0, r6, #0
	mov	r1, #0x1
	mov	r2, #0x3
	mov	r3, #0x3
	bl	CalcCenterToCornerVec
	ldrb	r0, [r5, #0x3]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1b
	ldr	r2, .L484+0x18
	mov	r3, r8
	add	r1, r3, r2
	mov	r4, #0x0
	ldrsh	r1, [r1, r4]
	add	r2, r2, #0x2
	add	r8, r8, r2
	mov	r3, r8
	mov	r4, #0x0
	ldrsh	r2, [r3, r4]
	mov	r3, #0x0
	bl	SetOamMatrixRotationScaling
	ldrb	r0, [r6, #0x3]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1b
	ldr	r1, .L484+0x1c
	mov	r2, #0x80
	lsl	r2, r2, #0x2
	mov	r3, #0x0
	bl	SetOamMatrixRotationScaling
	add	sp, sp, #0x4
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L485:
	.align	2, 0
.L484:
	.word	sMugshotsTrainerPicIDsTable
	.word	sMugshotsOpponentCoords
	.word	gSharedMem+0xc03c
	.word	gSaveBlock2
	.word	gSprites
	.word	sub_811C90C
	.word	sMugshotsOpponentRotationScales
	.word	0xfffffe00
.Lfe79:
	.size	 Mugshots_CreateOpponentPlayerSprites,.Lfe79-Mugshots_CreateOpponentPlayerSprites
	.align	2, 0
	.type	 sub_811C90C,function
	.thumb_func
sub_811C90C:
	push	{r4, r5, lr}
	add	r4, r0, #0
	ldr	r5, .L491
.L487:
	mov	r1, #0x2e
	ldrsh	r0, [r4, r1]
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	_call_via_r1
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L487	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L492:
	.align	2, 0
.L491:
	.word	sUnknown_083FD880
.Lfe80:
	.size	 sub_811C90C,.Lfe80-sub_811C90C
	.align	2, 0
	.type	 sub_811C934,function
	.thumb_func
sub_811C934:
	mov	r0, #0x0
	bx	lr
.Lfe81:
	.size	 sub_811C934,.Lfe81-sub_811C934
	.align	2, 0
	.type	 sub_811C938,function
	.thumb_func
sub_811C938:
	push	{r4, r5, lr}
	add	sp, sp, #0xfffffff8
	add	r5, r0, #0
	ldr	r1, .L495
	mov	r0, sp
	mov	r2, #0x4
	bl	memcpy
	add	r4, sp, #0x4
	ldr	r1, .L495+0x4
	add	r0, r4, #0
	mov	r2, #0x4
	bl	memcpy
	ldrh	r0, [r5, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x2e]
	mov	r1, #0x3c
	ldrsh	r0, [r5, r1]
	lsl	r0, r0, #0x1
	add	r0, r0, sp
	ldrh	r0, [r0]
	strh	r0, [r5, #0x30]
	mov	r1, #0x3c
	ldrsh	r0, [r5, r1]
	lsl	r0, r0, #0x1
	add	r4, r4, r0
	ldrh	r0, [r4]
	strh	r0, [r5, #0x32]
	mov	r0, #0x1
	add	sp, sp, #0x8
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L496:
	.align	2, 0
.L495:
	.word	sUnknown_083FD89C
	.word	sUnknown_083FD8A0
.Lfe82:
	.size	 sub_811C938,.Lfe82-sub_811C938
	.align	2, 0
	.type	 sub_811C984,function
	.thumb_func
sub_811C984:
	push	{lr}
	add	r1, r0, #0
	ldrh	r0, [r1, #0x30]
	ldrh	r3, [r1, #0x20]
	add	r2, r0, r3
	strh	r2, [r1, #0x20]
	mov	r3, #0x3c
	ldrsh	r0, [r1, r3]
	cmp	r0, #0
	beq	.L501	@cond_branch
	lsl	r0, r2, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x84
	bgt	.L499	@cond_branch
	b	.L502
.L501:
	lsl	r0, r2, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x67
	ble	.L499	@cond_branch
.L502:
	ldrh	r0, [r1, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x2e]
.L499:
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.Lfe83:
	.size	 sub_811C984,.Lfe83-sub_811C984
	.align	2, 0
	.type	 sub_811C9B8,function
	.thumb_func
sub_811C9B8:
	push	{lr}
	add	r2, r0, #0
	ldrh	r3, [r2, #0x32]
	ldrh	r0, [r2, #0x30]
	add	r1, r3, r0
	strh	r1, [r2, #0x30]
	ldrh	r0, [r2, #0x20]
	add	r0, r0, r1
	strh	r0, [r2, #0x20]
	lsl	r1, r1, #0x10
	cmp	r1, #0
	bne	.L504	@cond_branch
	ldrh	r0, [r2, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r2, #0x2e]
	neg	r0, r3
	strh	r0, [r2, #0x32]
	mov	r0, #0x1
	strh	r0, [r2, #0x3a]
.L504:
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.Lfe84:
	.size	 sub_811C9B8,.Lfe84-sub_811C9B8
	.align	2, 0
	.type	 sub_811C9E4,function
	.thumb_func
sub_811C9E4:
	push	{lr}
	add	r2, r0, #0
	ldrh	r0, [r2, #0x32]
	ldrh	r1, [r2, #0x30]
	add	r0, r0, r1
	strh	r0, [r2, #0x30]
	ldrh	r1, [r2, #0x20]
	add	r1, r1, r0
	strh	r1, [r2, #0x20]
	add	r1, r1, #0x1f
	lsl	r1, r1, #0x10
	mov	r0, #0x97
	lsl	r0, r0, #0x11
	cmp	r1, r0
	bls	.L506	@cond_branch
	ldrh	r0, [r2, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r2, #0x2e]
.L506:
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.Lfe85:
	.size	 sub_811C9E4,.Lfe85-sub_811C9E4
	.align	2, 0
	.type	 sub_811CA10,function
	.thumb_func
sub_811CA10:
	ldr	r3, .L508
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	add	r2, r2, r3
	strh	r1, [r2, #0x3c]
	bx	lr
.L509:
	.align	2, 0
.L508:
	.word	gSprites
.Lfe86:
	.size	 sub_811CA10,.Lfe86-sub_811CA10
	.align	2, 0
	.type	 sub_811CA28,function
	.thumb_func
sub_811CA28:
	ldr	r2, .L511
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldrh	r0, [r1, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x2e]
	bx	lr
.L512:
	.align	2, 0
.L511:
	.word	gSprites
.Lfe87:
	.size	 sub_811CA28,.Lfe87-sub_811CA28
	.align	2, 0
	.type	 sub_811CA44,function
	.thumb_func
sub_811CA44:
	ldr	r2, .L514
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	mov	r2, #0x3a
	ldrsh	r0, [r1, r2]
	bx	lr
.L515:
	.align	2, 0
.L514:
	.word	gSprites
.Lfe88:
	.size	 sub_811CA44,.Lfe88-sub_811CA44
	.align	2, 0
	.type	 Phase2Task_Transition_Slice,function
	.thumb_func
Phase2Task_Transition_Slice:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r5, .L521
	ldr	r2, .L521+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r4, r1, r2
.L517:
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	_call_via_r1
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L517	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L522:
	.align	2, 0
.L521:
	.word	sPhase2_Transition_Slice_Funcs
	.word	gTasks
.Lfe89:
	.size	 Phase2Task_Transition_Slice,.Lfe89-Phase2Task_Transition_Slice
	.align	2, 0
	.type	 Phase2_Transition_Slice_Func1,function
	.thumb_func
Phase2_Transition_Slice_Func1:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	bl	sub_811D658
	bl	dp12_8087EA4
	mov	r2, #0x0
	mov	r0, #0x80
	lsl	r0, r0, #0x1
	strh	r0, [r4, #0xc]
	mov	r0, #0x1
	strh	r0, [r4, #0xe]
	ldr	r1, .L529
	mov	r0, #0x3f
	strh	r0, [r1, #0x2]
	strh	r2, [r1, #0x4]
	mov	r0, #0xa0
	strh	r0, [r1, #0x8]
	ldr	r3, .L529+0x4
	add	r6, r1, #0
	mov	r5, #0xf0
.L527:
	lsl	r0, r2, #0x1
	add	r0, r0, r3
	ldrh	r1, [r6, #0x14]
	strh	r1, [r0]
	add	r0, r2, #0
	add	r0, r0, #0xa0
	lsl	r0, r0, #0x1
	add	r0, r0, r3
	strh	r5, [r0]
	add	r0, r2, #0x1
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	cmp	r2, #0x9f
	bls	.L527	@cond_branch
	ldr	r2, .L529+0x8
	ldrh	r0, [r2]
	mov	r1, #0x2
	orr	r0, r0, r1
	strh	r0, [r2]
	ldr	r2, .L529+0xc
	ldrh	r0, [r2]
	mov	r1, #0x10
	orr	r0, r0, r1
	strh	r0, [r2]
	ldr	r0, .L529+0x10
	bl	SetVBlankCallback
	ldr	r0, .L529+0x14
	bl	SetHBlankCallback
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	mov	r0, #0x1
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L530:
	.align	2, 0
.L529:
	.word	gSharedMem+0xc000
	.word	gUnknown_03004DE0+0x780
	.word	0x4000200
	.word	0x4000004
	.word	VBlankCB_Phase2_Transition_Slice
	.word	HBlankCB_Phase2_Transition_Slice
.Lfe90:
	.size	 Phase2_Transition_Slice_Func1,.Lfe90-Phase2_Transition_Slice_Func1
	.align	2, 0
	.type	 Phase2_Transition_Slice_Func2,function
	.thumb_func
Phase2_Transition_Slice_Func2:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	r2, r0, #0
	ldr	r1, .L544
	ldrb	r0, [r1]
	mov	r0, #0x0
	strb	r0, [r1]
	ldrh	r0, [r2, #0xc]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x18
	ldrh	r3, [r2, #0xa]
	add	r0, r0, r3
	strh	r0, [r2, #0xa]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	mov	ip, r1
	cmp	r0, #0xf0
	ble	.L532	@cond_branch
	mov	r0, #0xf0
	strh	r0, [r2, #0xa]
.L532:
	ldrh	r4, [r2, #0xc]
	mov	r0, #0xc
	ldrsh	r1, [r2, r0]
	ldr	r0, .L544+0x4
	ldrh	r3, [r2, #0xe]
	cmp	r1, r0
	bgt	.L533	@cond_branch
	add	r0, r4, r3
	strh	r0, [r2, #0xc]
.L533:
	lsl	r0, r3, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x7f
	bgt	.L534	@cond_branch
	lsl	r0, r3, #0x1
	strh	r0, [r2, #0xe]
.L534:
	mov	r5, #0x0
	ldr	r7, .L544+0x8
	mov	r1, #0xa0
	lsl	r1, r1, #0x1
	add	r1, r1, r7
	mov	r8, r1
	mov	r6, ip
.L538:
	lsl	r0, r5, #0x1
	add	r3, r0, r7
	mov	r1, r8
	add	r4, r0, r1
	mov	r0, #0x1
	and	r0, r0, r5
	cmp	r0, #0
	beq	.L539	@cond_branch
	ldrh	r0, [r2, #0xa]
	ldrh	r1, [r6, #0x14]
	add	r0, r0, r1
	strh	r0, [r3]
	ldrh	r1, [r2, #0xa]
	mov	r0, #0xf0
	sub	r0, r0, r1
	b	.L543
.L545:
	.align	2, 0
.L544:
	.word	gSharedMem+0xc000
	.word	0xfff
	.word	gUnknown_03004DE0
.L539:
	ldrh	r0, [r6, #0x14]
	ldrh	r1, [r2, #0xa]
	sub	r0, r0, r1
	strh	r0, [r3]
	ldrh	r0, [r2, #0xa]
	lsl	r0, r0, #0x8
	mov	r1, #0xf1
	orr	r0, r0, r1
.L543:
	strh	r0, [r4]
	add	r0, r5, #0x1
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	cmp	r5, #0x9f
	bls	.L538	@cond_branch
	mov	r3, #0xa
	ldrsh	r0, [r2, r3]
	cmp	r0, #0xef
	ble	.L542	@cond_branch
	ldrh	r0, [r2, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r2, #0x8]
.L542:
	mov	r1, ip
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	ldrb	r1, [r1]
	mov	r2, ip
	strb	r0, [r2]
	mov	r0, #0x0
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe91:
	.size	 Phase2_Transition_Slice_Func2,.Lfe91-Phase2_Transition_Slice_Func2
	.align	2, 0
	.type	 Phase2_Transition_Slice_Func3,function
	.thumb_func
Phase2_Transition_Slice_Func3:
	push	{lr}
	ldr	r1, .L547
	ldrh	r2, [r1, #0xa]
	ldr	r0, .L547+0x4
	and	r0, r0, r2
	strh	r0, [r1, #0xa]
	ldrh	r2, [r1, #0xa]
	ldr	r0, .L547+0x8
	and	r0, r0, r2
	strh	r0, [r1, #0xa]
	ldrh	r0, [r1, #0xa]
	bl	sub_811D6D4
	ldr	r0, .L547+0xc
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L548:
	.align	2, 0
.L547:
	.word	0x40000b0
	.word	0xc5ff
	.word	0x7fff
	.word	Phase2Task_Transition_Slice
.Lfe92:
	.size	 Phase2_Transition_Slice_Func3,.Lfe92-Phase2_Transition_Slice_Func3
	.align	2, 0
	.type	 VBlankCB_Phase2_Transition_Slice,function
	.thumb_func
VBlankCB_Phase2_Transition_Slice:
	push	{r4, lr}
	ldr	r4, .L551
	ldrh	r1, [r4, #0xa]
	ldr	r0, .L551+0x4
	and	r0, r0, r1
	strh	r0, [r4, #0xa]
	ldrh	r1, [r4, #0xa]
	ldr	r0, .L551+0x8
	and	r0, r0, r1
	strh	r0, [r4, #0xa]
	ldrh	r0, [r4, #0xa]
	bl	VBlankCB_BattleTransition
	ldr	r2, .L551+0xc
	ldr	r1, .L551+0x10
	ldrh	r0, [r1, #0x2]
	strh	r0, [r2]
	add	r2, r2, #0x2
	ldrh	r0, [r1, #0x4]
	strh	r0, [r2]
	sub	r2, r2, #0x6
	ldrh	r0, [r1, #0x8]
	strh	r0, [r2]
	ldrb	r0, [r1]
	cmp	r0, #0
	beq	.L550	@cond_branch
	ldr	r1, .L551+0x14
	ldr	r0, .L551+0x18
	str	r0, [r1]
	mov	r2, #0xf0
	lsl	r2, r2, #0x3
	add	r0, r0, r2
	str	r0, [r1, #0x4]
	ldr	r0, .L551+0x1c
	str	r0, [r1, #0x8]
	ldr	r0, [r1, #0x8]
.L550:
	ldr	r0, .L551+0x20
	str	r0, [r4]
	ldr	r0, .L551+0x24
	str	r0, [r4, #0x4]
	ldr	r0, .L551+0x28
	str	r0, [r4, #0x8]
	ldr	r0, [r4, #0x8]
	pop	{r4}
	pop	{r0}
	bx	r0
.L552:
	.align	2, 0
.L551:
	.word	0x40000b0
	.word	0xc5ff
	.word	0x7fff
	.word	0x4000048
	.word	gSharedMem+0xc000
	.word	0x40000d4
	.word	gUnknown_03004DE0
	.word	0x80000140
	.word	gUnknown_03004DE0+0x8c0
	.word	0x4000040
	.word	0xa2400001
.Lfe93:
	.size	 VBlankCB_Phase2_Transition_Slice,.Lfe93-VBlankCB_Phase2_Transition_Slice
	.align	2, 0
	.type	 HBlankCB_Phase2_Transition_Slice,function
	.thumb_func
HBlankCB_Phase2_Transition_Slice:
	ldr	r1, .L554
	ldr	r0, .L554+0x4
	ldrh	r0, [r0]
	lsl	r0, r0, #0x1
	mov	r2, #0xf0
	lsl	r2, r2, #0x3
	add	r1, r1, r2
	add	r0, r0, r1
	ldrh	r1, [r0]
	ldr	r0, .L554+0x8
	strh	r1, [r0]
	add	r0, r0, #0x4
	strh	r1, [r0]
	add	r0, r0, #0x4
	strh	r1, [r0]
	bx	lr
.L555:
	.align	2, 0
.L554:
	.word	gUnknown_03004DE0
	.word	0x4000006
	.word	0x4000014
.Lfe94:
	.size	 HBlankCB_Phase2_Transition_Slice,.Lfe94-HBlankCB_Phase2_Transition_Slice
	.align	2, 0
	.type	 Phase2Task_Transition_WhiteFade,function
	.thumb_func
Phase2Task_Transition_WhiteFade:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r5, .L561
	ldr	r2, .L561+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r4, r1, r2
.L557:
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	_call_via_r1
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L557	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L562:
	.align	2, 0
.L561:
	.word	sPhase2_Transition_WhiteFade_Funcs
	.word	gTasks
.Lfe95:
	.size	 Phase2Task_Transition_WhiteFade,.Lfe95-Phase2Task_Transition_WhiteFade
	.align	2, 0
	.type	 Phase2_Transition_WhiteFade_Func1,function
	.thumb_func
Phase2_Transition_WhiteFade_Func1:
	push	{r4, r5, lr}
	add	r5, r0, #0
	bl	sub_811D658
	bl	dp12_8087EA4
	ldr	r1, .L569
	mov	r2, #0x0
	mov	r0, #0xbf
	strh	r0, [r1, #0xe]
	strh	r2, [r1, #0x12]
	mov	r0, #0x1e
	strh	r0, [r1, #0x2]
	mov	r0, #0x3f
	strh	r0, [r1, #0x4]
	mov	r0, #0xa0
	strh	r0, [r1, #0x8]
	mov	r1, #0x0
	ldr	r2, .L569+0x4
	mov	r4, #0x0
	mov	r3, #0xf0
.L567:
	lsl	r0, r1, #0x1
	add	r0, r0, r2
	strh	r4, [r0]
	add	r0, r1, #0
	add	r0, r0, #0xa0
	lsl	r0, r0, #0x1
	add	r0, r0, r2
	strh	r3, [r0]
	add	r0, r1, #0x1
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	cmp	r1, #0x9f
	bls	.L567	@cond_branch
	ldr	r2, .L569+0x8
	ldrh	r0, [r2]
	mov	r1, #0x2
	orr	r0, r0, r1
	strh	r0, [r2]
	ldr	r2, .L569+0xc
	ldrh	r0, [r2]
	mov	r1, #0x10
	orr	r0, r0, r1
	strh	r0, [r2]
	ldr	r0, .L569+0x10
	bl	SetHBlankCallback
	ldr	r0, .L569+0x14
	bl	SetVBlankCallback
	ldrh	r0, [r5, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x8]
	mov	r0, #0x0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L570:
	.align	2, 0
.L569:
	.word	gSharedMem+0xc000
	.word	gUnknown_03004DE0+0x780
	.word	0x4000200
	.word	0x4000004
	.word	HBlankCB_Phase2_Transition_WhiteFade
	.word	VBlankCB0_Phase2_Transition_WhiteFade
.Lfe96:
	.size	 Phase2_Transition_WhiteFade_Func1,.Lfe96-Phase2_Transition_WhiteFade_Func1
	.align	2, 0
	.type	 Phase2_Transition_WhiteFade_Func2,function
	.thumb_func
Phase2_Transition_WhiteFade_Func2:
	push	{r4, r5, r6, lr}
	add	sp, sp, #0xfffffff0
	add	r6, r0, #0
	ldr	r1, .L577
	mov	r0, sp
	mov	r2, #0x10
	bl	memcpy
	mov	r5, #0x0
	mov	r4, #0x0
.L575:
	ldr	r0, .L577+0x4
	bl	CreateInvisibleSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L577+0x8
	add	r2, r1, r0
	mov	r0, #0xf0
	strh	r0, [r2, #0x20]
	strh	r4, [r2, #0x22]
	lsl	r1, r5, #0x10
	asr	r1, r1, #0x10
	lsl	r0, r1, #0x1
	add	r0, r0, sp
	ldrh	r0, [r0]
	strh	r0, [r2, #0x38]
	add	r1, r1, #0x1
	lsl	r1, r1, #0x10
	lsl	r0, r4, #0x10
	mov	r3, #0xa0
	lsl	r3, r3, #0xd
	add	r0, r0, r3
	lsr	r4, r0, #0x10
	lsr	r5, r1, #0x10
	asr	r1, r1, #0x10
	cmp	r1, #0x7
	ble	.L575	@cond_branch
	ldrh	r0, [r2, #0x3a]
	add	r0, r0, #0x1
	strh	r0, [r2, #0x3a]
	ldrh	r0, [r6, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r6, #0x8]
	mov	r0, #0x0
	add	sp, sp, #0x10
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L578:
	.align	2, 0
.L577:
	.word	sUnknown_083FD8C4
	.word	sub_811CFD0
	.word	gSprites
.Lfe97:
	.size	 Phase2_Transition_WhiteFade_Func2,.Lfe97-Phase2_Transition_WhiteFade_Func2
	.align	2, 0
	.type	 Phase2_Transition_WhiteFade_Func3,function
	.thumb_func
Phase2_Transition_WhiteFade_Func3:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r0, .L581
	ldrb	r1, [r0]
	mov	r1, #0x0
	strb	r1, [r0]
	mov	r1, #0x20
	ldrsh	r0, [r0, r1]
	cmp	r0, #0x7
	ble	.L580	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	ldr	r2, .L581+0x4
	mov	r1, #0x10
	bl	BlendPalettes
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
.L580:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L582:
	.align	2, 0
.L581:
	.word	gSharedMem+0xc000
	.word	0x7fff
.Lfe98:
	.size	 Phase2_Transition_WhiteFade_Func3,.Lfe98-Phase2_Transition_WhiteFade_Func3
	.align	2, 0
	.type	 Phase2_Transition_WhiteFade_Func4,function
	.thumb_func
Phase2_Transition_WhiteFade_Func4:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	ldr	r4, .L584
	ldrb	r0, [r4]
	mov	r5, #0x0
	strb	r5, [r4]
	ldr	r1, .L584+0x4
	ldrh	r2, [r1, #0xa]
	ldr	r0, .L584+0x8
	and	r0, r0, r2
	strh	r0, [r1, #0xa]
	ldrh	r2, [r1, #0xa]
	ldr	r0, .L584+0xc
	and	r0, r0, r2
	strh	r0, [r1, #0xa]
	ldrh	r0, [r1, #0xa]
	mov	r0, #0x0
	bl	SetVBlankCallback
	mov	r0, #0x0
	bl	SetHBlankCallback
	mov	r0, #0xf0
	strh	r0, [r4, #0x6]
	strh	r5, [r4, #0x12]
	mov	r0, #0xff
	strh	r0, [r4, #0xe]
	mov	r0, #0x3f
	strh	r0, [r4, #0x2]
	ldr	r0, .L584+0x10
	bl	SetVBlankCallback
	ldrh	r0, [r6, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r6, #0x8]
	mov	r0, #0x0
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L585:
	.align	2, 0
.L584:
	.word	gSharedMem+0xc000
	.word	0x40000b0
	.word	0xc5ff
	.word	0x7fff
	.word	VBlankCB1_Phase2_Transition_WhiteFade
.Lfe99:
	.size	 Phase2_Transition_WhiteFade_Func4,.Lfe99-Phase2_Transition_WhiteFade_Func4
	.align	2, 0
	.type	 Phase2_Transition_WhiteFade_Func5,function
	.thumb_func
Phase2_Transition_WhiteFade_Func5:
	push	{lr}
	ldr	r1, .L588
	ldrh	r0, [r1, #0x12]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x12]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x10
	bls	.L587	@cond_branch
	bl	sub_811D6D4
	ldr	r0, .L588+0x4
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
.L587:
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L589:
	.align	2, 0
.L588:
	.word	gSharedMem+0xc000
	.word	Phase2Task_Transition_WhiteFade
.Lfe100:
	.size	 Phase2_Transition_WhiteFade_Func5,.Lfe100-Phase2_Transition_WhiteFade_Func5
	.align	2, 0
	.type	 VBlankCB0_Phase2_Transition_WhiteFade,function
	.thumb_func
VBlankCB0_Phase2_Transition_WhiteFade:
	push	{r4, lr}
	ldr	r4, .L592
	ldrh	r1, [r4, #0xa]
	ldr	r0, .L592+0x4
	and	r0, r0, r1
	strh	r0, [r4, #0xa]
	ldrh	r1, [r4, #0xa]
	ldr	r0, .L592+0x8
	and	r0, r0, r1
	strh	r0, [r4, #0xa]
	ldrh	r0, [r4, #0xa]
	bl	VBlankCB_BattleTransition
	ldr	r2, .L592+0xc
	ldr	r1, .L592+0x10
	ldrh	r0, [r1, #0xe]
	strh	r0, [r2]
	sub	r2, r2, #0x8
	ldrh	r0, [r1, #0x2]
	strh	r0, [r2]
	add	r2, r2, #0x2
	ldrh	r0, [r1, #0x4]
	strh	r0, [r2]
	sub	r2, r2, #0x6
	ldrh	r0, [r1, #0x6]
	strh	r0, [r2]
	ldrb	r0, [r1]
	cmp	r0, #0
	beq	.L591	@cond_branch
	ldr	r1, .L592+0x14
	ldr	r0, .L592+0x18
	str	r0, [r1]
	mov	r2, #0xf0
	lsl	r2, r2, #0x3
	add	r0, r0, r2
	str	r0, [r1, #0x4]
	ldr	r0, .L592+0x1c
	str	r0, [r1, #0x8]
	ldr	r0, [r1, #0x8]
.L591:
	ldr	r0, .L592+0x20
	str	r0, [r4]
	ldr	r0, .L592+0x24
	str	r0, [r4, #0x4]
	ldr	r0, .L592+0x28
	str	r0, [r4, #0x8]
	ldr	r0, [r4, #0x8]
	pop	{r4}
	pop	{r0}
	bx	r0
.L593:
	.align	2, 0
.L592:
	.word	0x40000b0
	.word	0xc5ff
	.word	0x7fff
	.word	0x4000050
	.word	gSharedMem+0xc000
	.word	0x40000d4
	.word	gUnknown_03004DE0
	.word	0x80000140
	.word	gUnknown_03004DE0+0x8c0
	.word	0x4000040
	.word	0xa2400001
.Lfe101:
	.size	 VBlankCB0_Phase2_Transition_WhiteFade,.Lfe101-VBlankCB0_Phase2_Transition_WhiteFade
	.align	2, 0
	.type	 VBlankCB1_Phase2_Transition_WhiteFade,function
	.thumb_func
VBlankCB1_Phase2_Transition_WhiteFade:
	push	{lr}
	bl	VBlankCB_BattleTransition
	ldr	r1, .L595
	ldr	r2, .L595+0x4
	ldrh	r0, [r2, #0x12]
	strh	r0, [r1]
	sub	r1, r1, #0x4
	ldrh	r0, [r2, #0xe]
	strh	r0, [r1]
	sub	r1, r1, #0x8
	ldrh	r0, [r2, #0x2]
	strh	r0, [r1]
	add	r1, r1, #0x2
	ldrh	r0, [r2, #0x4]
	strh	r0, [r1]
	sub	r1, r1, #0xa
	ldrh	r0, [r2, #0x6]
	strh	r0, [r1]
	add	r1, r1, #0x4
	ldrh	r0, [r2, #0x8]
	strh	r0, [r1]
	pop	{r0}
	bx	r0
.L596:
	.align	2, 0
.L595:
	.word	0x4000054
	.word	gSharedMem+0xc000
.Lfe102:
	.size	 VBlankCB1_Phase2_Transition_WhiteFade,.Lfe102-VBlankCB1_Phase2_Transition_WhiteFade
	.align	2, 0
	.type	 HBlankCB_Phase2_Transition_WhiteFade,function
	.thumb_func
HBlankCB_Phase2_Transition_WhiteFade:
	ldr	r2, .L598
	ldr	r1, .L598+0x4
	ldr	r0, .L598+0x8
	ldrh	r0, [r0]
	lsl	r0, r0, #0x1
	mov	r3, #0xf0
	lsl	r3, r3, #0x3
	add	r1, r1, r3
	add	r0, r0, r1
	ldrh	r0, [r0]
	strh	r0, [r2]
	bx	lr
.L599:
	.align	2, 0
.L598:
	.word	0x4000054
	.word	gUnknown_03004DE0
	.word	0x4000006
.Lfe103:
	.size	 HBlankCB_Phase2_Transition_WhiteFade,.Lfe103-HBlankCB_Phase2_Transition_WhiteFade
	.align	2, 0
	.type	 sub_811CFD0,function
	.thumb_func
sub_811CFD0:
	push	{r4, r5, r6, lr}
	add	r3, r0, #0
	ldrh	r1, [r3, #0x38]
	mov	r2, #0x38
	ldrsh	r0, [r3, r2]
	cmp	r0, #0
	beq	.L601	@cond_branch
	sub	r0, r1, #0x1
	strh	r0, [r3, #0x38]
	mov	r1, #0x3a
	ldrsh	r0, [r3, r1]
	cmp	r0, #0
	beq	.L603	@cond_branch
	ldr	r0, .L616
	ldrb	r1, [r0]
	mov	r1, #0x1
	strb	r1, [r0]
	b	.L603
.L617:
	.align	2, 0
.L616:
	.word	gSharedMem+0xc000
.L601:
	mov	r2, #0x22
	ldrsh	r1, [r3, r2]
	lsl	r1, r1, #0x1
	ldr	r0, .L618
	add	r6, r1, r0
	mov	r2, #0xa0
	lsl	r2, r2, #0x1
	add	r0, r0, r2
	add	r5, r1, r0
	mov	r4, #0x0
.L607:
	lsl	r1, r4, #0x1
	add	r2, r1, r6
	ldrh	r0, [r3, #0x2e]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x18
	strh	r0, [r2]
	add	r1, r1, r5
	ldrh	r0, [r3, #0x20]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r1]
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r4, #0x13
	bls	.L607	@cond_branch
	mov	r1, #0x20
	ldrsh	r0, [r3, r1]
	ldrh	r2, [r3, #0x20]
	cmp	r0, #0
	bne	.L609	@cond_branch
	mov	r0, #0x2e
	ldrsh	r1, [r3, r0]
	mov	r0, #0x80
	lsl	r0, r0, #0x5
	cmp	r1, r0
	bne	.L609	@cond_branch
	mov	r0, #0x1
	strh	r0, [r3, #0x30]
.L609:
	add	r1, r2, #0
	sub	r1, r1, #0x10
	strh	r1, [r3, #0x20]
	ldrh	r0, [r3, #0x2e]
	add	r0, r0, #0x80
	strh	r0, [r3, #0x2e]
	lsl	r1, r1, #0x10
	cmp	r1, #0
	bge	.L610	@cond_branch
	mov	r0, #0x0
	strh	r0, [r3, #0x20]
.L610:
	mov	r1, #0x2e
	ldrsh	r0, [r3, r1]
	mov	r1, #0x80
	lsl	r1, r1, #0x5
	cmp	r0, r1
	ble	.L611	@cond_branch
	strh	r1, [r3, #0x2e]
.L611:
	mov	r0, #0x3a
	ldrsh	r2, [r3, r0]
	cmp	r2, #0
	beq	.L612	@cond_branch
	ldr	r0, .L618+0x4
	ldrb	r1, [r0]
	mov	r1, #0x1
	strb	r1, [r0]
.L612:
	mov	r1, #0x30
	ldrsh	r0, [r3, r1]
	cmp	r0, #0
	beq	.L603	@cond_branch
	ldr	r4, .L618+0x4
	cmp	r2, #0
	beq	.L615	@cond_branch
	mov	r2, #0x20
	ldrsh	r0, [r4, r2]
	cmp	r0, #0x6
	ble	.L603	@cond_branch
	ldrh	r0, [r3, #0x32]
	add	r1, r0, #0x1
	strh	r1, [r3, #0x32]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x7
	ble	.L603	@cond_branch
.L615:
	ldrh	r0, [r4, #0x20]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x20]
	add	r0, r3, #0
	bl	DestroySprite
.L603:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L619:
	.align	2, 0
.L618:
	.word	gUnknown_03004DE0
	.word	gSharedMem+0xc000
.Lfe104:
	.size	 sub_811CFD0,.Lfe104-sub_811CFD0
	.align	2, 0
	.type	 Phase2Task_Transition_GridSquares,function
	.thumb_func
Phase2Task_Transition_GridSquares:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r5, .L625
	ldr	r2, .L625+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r4, r1, r2
.L621:
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	_call_via_r1
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L621	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L626:
	.align	2, 0
.L625:
	.word	sPhase2_Transition_GridSquares_Funcs
	.word	gTasks
.Lfe105:
	.size	 Phase2Task_Transition_GridSquares,.Lfe105-Phase2Task_Transition_GridSquares
	.align	2, 0
	.type	 Phase2_Transition_GridSquares_Func1,function
	.thumb_func
Phase2_Transition_GridSquares_Func1:
	push	{r4, lr}
	add	sp, sp, #0xfffffff4
	add	r4, r0, #0
	add	r0, sp, #0x4
	add	r1, sp, #0x8
	bl	sub_811D6A8
	ldr	r0, .L628
	ldr	r1, [sp, #0x8]
	mov	r2, #0x10
	bl	CpuSet
	mov	r1, sp
	mov	r2, #0xf0
	lsl	r2, r2, #0x8
	add	r0, r2, #0
	strh	r0, [r1]
	ldr	r1, [sp, #0x4]
	ldr	r2, .L628+0x4
	mov	r0, sp
	bl	CpuSet
	ldr	r0, .L628+0x8
	mov	r1, #0xf0
	mov	r2, #0x20
	bl	LoadPalette
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	mov	r0, #0x0
	add	sp, sp, #0xc
	pop	{r4}
	pop	{r1}
	bx	r1
.L629:
	.align	2, 0
.L628:
	.word	sShrinkingBoxTileset
	.word	0x1000400
	.word	gFieldEffectObjectPalette10
.Lfe106:
	.size	 Phase2_Transition_GridSquares_Func1,.Lfe106-Phase2_Transition_GridSquares_Func1
	.align	2, 0
	.type	 Phase2_Transition_GridSquares_Func2,function
	.thumb_func
Phase2_Transition_GridSquares_Func2:
	push	{r4, lr}
	add	sp, sp, #0xfffffffc
	add	r4, r0, #0
	mov	r1, #0xa
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	bne	.L631	@cond_branch
	mov	r0, sp
	bl	sub_811D690
	mov	r0, #0x3
	strh	r0, [r4, #0xa]
	ldrh	r0, [r4, #0xc]
	add	r0, r0, #0x1
	strh	r0, [r4, #0xc]
	mov	r1, #0xc
	ldrsh	r0, [r4, r1]
	lsl	r0, r0, #0x5
	ldr	r1, .L633
	add	r0, r0, r1
	ldr	r1, [sp]
	mov	r2, #0x10
	bl	CpuSet
	mov	r1, #0xc
	ldrsh	r0, [r4, r1]
	cmp	r0, #0xd
	ble	.L631	@cond_branch
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	mov	r0, #0x10
	strh	r0, [r4, #0xa]
.L631:
	ldrh	r0, [r4, #0xa]
	sub	r0, r0, #0x1
	strh	r0, [r4, #0xa]
	mov	r0, #0x0
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r1}
	bx	r1
.L634:
	.align	2, 0
.L633:
	.word	sShrinkingBoxTileset
.Lfe107:
	.size	 Phase2_Transition_GridSquares_Func2,.Lfe107-Phase2_Transition_GridSquares_Func2
	.align	2, 0
	.type	 Phase2_Transition_GridSquares_Func3,function
	.thumb_func
Phase2_Transition_GridSquares_Func3:
	push	{lr}
	ldrh	r1, [r0, #0xa]
	sub	r1, r1, #0x1
	strh	r1, [r0, #0xa]
	lsl	r1, r1, #0x10
	cmp	r1, #0
	bne	.L636	@cond_branch
	bl	sub_811D6D4
	ldr	r0, .L637
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
.L636:
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L638:
	.align	2, 0
.L637:
	.word	Phase2Task_Transition_GridSquares
.Lfe108:
	.size	 Phase2_Transition_GridSquares_Func3,.Lfe108-Phase2_Transition_GridSquares_Func3
	.align	2, 0
	.type	 Phase2Task_Transition_Shards,function
	.thumb_func
Phase2Task_Transition_Shards:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r5, .L644
	ldr	r2, .L644+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r4, r1, r2
.L640:
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	_call_via_r1
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L640	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L645:
	.align	2, 0
.L644:
	.word	sPhase2_Transition_Shards_Funcs
	.word	gTasks
.Lfe109:
	.size	 Phase2Task_Transition_Shards,.Lfe109-Phase2Task_Transition_Shards
	.align	2, 0
	.type	 Phase2_Transition_Shards_Func1,function
	.thumb_func
Phase2_Transition_Shards_Func1:
	push	{r4, r5, lr}
	add	r5, r0, #0
	bl	sub_811D658
	bl	dp12_8087EA4
	ldr	r1, .L652
	mov	r2, #0x0
	mov	r0, #0x3f
	strh	r0, [r1, #0x2]
	strh	r2, [r1, #0x4]
	mov	r0, #0xa0
	strh	r0, [r1, #0x8]
	mov	r1, #0x0
	ldr	r2, .L652+0x4
	mov	r3, #0xf0
	add	r4, r2, #0
.L650:
	lsl	r0, r1, #0x1
	add	r0, r0, r2
	strh	r3, [r0]
	add	r0, r1, #0x1
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	cmp	r1, #0x9f
	bls	.L650	@cond_branch
	mov	r0, #0xf0
	lsl	r0, r0, #0x3
	add	r1, r4, r0
	add	r0, r4, #0
	mov	r2, #0xa0
	bl	CpuSet
	ldr	r0, .L652+0x8
	bl	SetVBlankCallback
	ldrh	r0, [r5, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x8]
	mov	r0, #0x1
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L653:
	.align	2, 0
.L652:
	.word	gSharedMem+0xc000
	.word	gUnknown_03004DE0
	.word	VBlankCB_Phase2_Transition_Shards
.Lfe110:
	.size	 Phase2_Transition_Shards_Func1,.Lfe110-Phase2_Transition_Shards_Func1
	.align	2, 0
	.type	 Phase2_Transition_Shards_Func2,function
	.thumb_func
Phase2_Transition_Shards_Func2:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	sp, sp, #0xfffffff4
	mov	r8, r0
	ldr	r0, .L655
	ldr	r6, .L655+0x4
	mov	r2, r8
	mov	r3, #0xa
	ldrsh	r1, [r2, r3]
	lsl	r4, r1, #0x2
	add	r4, r4, r1
	lsl	r4, r4, #0x1
	add	r1, r4, r6
	mov	r5, #0x0
	ldrsh	r1, [r1, r5]
	add	r2, r6, #0x2
	add	r2, r4, r2
	mov	r3, #0x0
	ldrsh	r2, [r2, r3]
	add	r3, r6, #0x4
	add	r3, r4, r3
	mov	r5, #0x0
	ldrsh	r3, [r3, r5]
	add	r5, r6, #0x6
	add	r4, r4, r5
	mov	r5, #0x0
	ldrsh	r4, [r4, r5]
	str	r4, [sp]
	mov	r4, #0x1
	str	r4, [sp, #0x4]
	str	r4, [sp, #0x8]
	bl	sub_811D8FC
	mov	r0, r8
	mov	r2, #0xa
	ldrsh	r1, [r0, r2]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x1
	add	r6, r6, #0x8
	add	r0, r0, r6
	ldrh	r0, [r0]
	mov	r3, r8
	strh	r0, [r3, #0xc]
	ldrh	r0, [r3, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r3, #0x8]
	mov	r0, #0x1
	add	sp, sp, #0xc
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L656:
	.align	2, 0
.L655:
	.word	gSharedMem+0xc024
	.word	sUnknown_083FD8F4
.Lfe111:
	.size	 Phase2_Transition_Shards_Func2,.Lfe111-Phase2_Transition_Shards_Func2
	.align	2, 0
	.type	 Phase2_Transition_Shards_Func3,function
	.thumb_func
Phase2_Transition_Shards_Func3:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	r7, r0, #0
	ldr	r0, .L671
	ldrb	r1, [r0]
	mov	r1, #0x0
	strb	r1, [r0]
	mov	r8, r1
	mov	ip, r1
	add	r6, r0, #0
	ldr	r0, .L671+0x4
	mov	r9, r0
.L661:
	ldr	r1, .L671+0x4
	mov	r2, #0x2a
	ldrsh	r0, [r6, r2]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrh	r0, [r0]
	lsr	r3, r0, #0x8
	mov	r4, #0xff
	and	r4, r4, r0
	mov	r1, #0xc
	ldrsh	r0, [r7, r1]
	cmp	r0, #0
	bne	.L662	@cond_branch
	mov	r2, #0x28
	ldrsh	r0, [r6, r2]
	cmp	r3, r0
	bge	.L663	@cond_branch
	ldrh	r3, [r6, #0x28]
.L663:
	lsl	r0, r3, #0x10
	lsl	r1, r4, #0x10
	cmp	r0, r1
	ble	.L665	@cond_branch
	lsr	r3, r1, #0x10
	b	.L665
.L672:
	.align	2, 0
.L671:
	.word	gSharedMem+0xc000
	.word	gUnknown_03004DE0
.L662:
	lsl	r0, r4, #0x10
	asr	r0, r0, #0x10
	mov	r2, #0x28
	ldrsh	r1, [r6, r2]
	cmp	r0, r1
	ble	.L666	@cond_branch
	ldrh	r4, [r6, #0x28]
.L666:
	lsl	r0, r4, #0x10
	lsl	r1, r3, #0x10
	cmp	r0, r1
	bgt	.L665	@cond_branch
	lsr	r4, r1, #0x10
.L665:
	ldr	r5, .L673
	mov	r0, #0x2a
	ldrsh	r2, [r5, r0]
	lsl	r2, r2, #0x1
	add	r2, r2, r9
	lsl	r1, r3, #0x10
	asr	r1, r1, #0x8
	lsl	r0, r4, #0x10
	asr	r0, r0, #0x10
	orr	r0, r0, r1
	strh	r0, [r2]
	mov	r1, ip
	cmp	r1, #0
	beq	.L668	@cond_branch
	ldrh	r0, [r7, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r7, #0x8]
	b	.L659
.L674:
	.align	2, 0
.L673:
	.word	gSharedMem+0xc000
.L668:
	add	r0, r5, #0
	add	r0, r0, #0x24
	mov	r1, #0x1
	mov	r2, #0x1
	bl	sub_811D978
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	ip, r0
	mov	r2, r8
	lsl	r0, r2, #0x10
	mov	r1, #0x80
	lsl	r1, r1, #0x9
	add	r0, r0, r1
	lsr	r2, r0, #0x10
	mov	r8, r2
	asr	r0, r0, #0x10
	cmp	r0, #0xf
	ble	.L661	@cond_branch
.L659:
	ldr	r0, .L675
	ldrb	r1, [r0]
	add	r1, r1, #0x1
	ldrb	r2, [r0]
	strb	r1, [r0]
	mov	r0, #0x0
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L676:
	.align	2, 0
.L675:
	.word	gSharedMem+0xc000
.Lfe112:
	.size	 Phase2_Transition_Shards_Func3,.Lfe112-Phase2_Transition_Shards_Func3
	.align	2, 0
	.type	 Phase2_Transition_Shards_Func4,function
	.thumb_func
Phase2_Transition_Shards_Func4:
	push	{lr}
	add	r2, r0, #0
	ldrh	r0, [r2, #0xa]
	add	r0, r0, #0x1
	strh	r0, [r2, #0xa]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x6
	ble	.L678	@cond_branch
	ldr	r1, .L681
	ldrh	r2, [r1, #0xa]
	ldr	r0, .L681+0x4
	and	r0, r0, r2
	strh	r0, [r1, #0xa]
	ldrh	r2, [r1, #0xa]
	ldr	r0, .L681+0x8
	and	r0, r0, r2
	strh	r0, [r1, #0xa]
	ldrh	r0, [r1, #0xa]
	bl	sub_811D6D4
	ldr	r0, .L681+0xc
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
	mov	r0, #0x0
	b	.L680
.L682:
	.align	2, 0
.L681:
	.word	0x40000b0
	.word	0xc5ff
	.word	0x7fff
	.word	Phase2Task_Transition_Shards
.L678:
	ldrh	r0, [r2, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r2, #0x8]
	ldr	r1, .L683
	mov	r3, #0xa
	ldrsh	r0, [r2, r3]
	sub	r0, r0, #0x1
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrh	r0, [r0]
	strh	r0, [r2, #0xe]
	mov	r0, #0x1
.L680:
	pop	{r1}
	bx	r1
.L684:
	.align	2, 0
.L683:
	.word	sUnknown_083FD93A
.Lfe113:
	.size	 Phase2_Transition_Shards_Func4,.Lfe113-Phase2_Transition_Shards_Func4
	.align	2, 0
	.type	 Phase2_Transition_Shards_Func5,function
	.thumb_func
Phase2_Transition_Shards_Func5:
	push	{lr}
	add	r1, r0, #0
	ldrh	r0, [r1, #0xe]
	sub	r0, r0, #0x1
	strh	r0, [r1, #0xe]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	beq	.L686	@cond_branch
	mov	r0, #0x0
	b	.L688
.L686:
	mov	r0, #0x1
	strh	r0, [r1, #0x8]
.L688:
	pop	{r1}
	bx	r1
.Lfe114:
	.size	 Phase2_Transition_Shards_Func5,.Lfe114-Phase2_Transition_Shards_Func5
	.align	2, 0
	.type	 VBlankCB_Phase2_Transition_Shards,function
	.thumb_func
VBlankCB_Phase2_Transition_Shards:
	push	{r4, lr}
	ldr	r4, .L691
	ldrh	r1, [r4, #0xa]
	ldr	r0, .L691+0x4
	and	r0, r0, r1
	strh	r0, [r4, #0xa]
	ldrh	r1, [r4, #0xa]
	ldr	r0, .L691+0x8
	and	r0, r0, r1
	strh	r0, [r4, #0xa]
	ldrh	r0, [r4, #0xa]
	bl	VBlankCB_BattleTransition
	ldr	r2, .L691+0xc
	ldrb	r0, [r2]
	cmp	r0, #0
	beq	.L690	@cond_branch
	ldr	r1, .L691+0x10
	ldr	r0, .L691+0x14
	str	r0, [r1]
	mov	r3, #0xf0
	lsl	r3, r3, #0x3
	add	r0, r0, r3
	str	r0, [r1, #0x4]
	ldr	r0, .L691+0x18
	str	r0, [r1, #0x8]
	ldr	r0, [r1, #0x8]
.L690:
	ldr	r1, .L691+0x1c
	ldrh	r0, [r2, #0x2]
	strh	r0, [r1]
	add	r1, r1, #0x2
	ldrh	r0, [r2, #0x4]
	strh	r0, [r1]
	sub	r1, r1, #0x6
	ldrh	r0, [r2, #0x8]
	strh	r0, [r1]
	ldr	r2, .L691+0x20
	ldr	r0, .L691+0x14
	mov	r1, #0xf0
	lsl	r1, r1, #0x3
	add	r0, r0, r1
	ldrh	r1, [r0]
	strh	r1, [r2]
	str	r0, [r4]
	str	r2, [r4, #0x4]
	ldr	r0, .L691+0x24
	str	r0, [r4, #0x8]
	ldr	r0, [r4, #0x8]
	pop	{r4}
	pop	{r0}
	bx	r0
.L692:
	.align	2, 0
.L691:
	.word	0x40000b0
	.word	0xc5ff
	.word	0x7fff
	.word	gSharedMem+0xc000
	.word	0x40000d4
	.word	gUnknown_03004DE0
	.word	0x800000a0
	.word	0x4000048
	.word	0x4000040
	.word	0xa2400001
.Lfe115:
	.size	 VBlankCB_Phase2_Transition_Shards,.Lfe115-VBlankCB_Phase2_Transition_Shards
	.align	2, 0
	.type	 CreatePhase1Task,function
	.thumb_func
CreatePhase1Task:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	sp, sp, #0xfffffffc
	mov	r8, r0
	add	r4, r1, #0
	add	r5, r2, #0
	add	r6, r3, #0
	ldr	r3, [sp, #0x18]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r8, r0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	lsl	r6, r6, #0x10
	lsr	r6, r6, #0x10
	lsl	r3, r3, #0x10
	lsr	r3, r3, #0x10
	ldr	r0, .L694
	mov	r1, #0x3
	str	r3, [sp]
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L694+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	mov	r0, r8
	strh	r0, [r1, #0xa]
	strh	r4, [r1, #0xc]
	strh	r5, [r1, #0xe]
	strh	r6, [r1, #0x10]
	ldr	r3, [sp]
	strh	r3, [r1, #0x12]
	strh	r0, [r1, #0x14]
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L695:
	.align	2, 0
.L694:
	.word	Phase1_Task_RunFuncs
	.word	gTasks
.Lfe116:
	.size	 CreatePhase1Task,.Lfe116-CreatePhase1Task
	.align	2, 0
	.type	 sub_811D52C,function
	.thumb_func
sub_811D52C:
	push	{lr}
	ldr	r0, .L700
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xff
	beq	.L697	@cond_branch
	mov	r0, #0x0
	b	.L699
.L701:
	.align	2, 0
.L700:
	.word	Phase1_Task_RunFuncs
.L697:
	mov	r0, #0x1
.L699:
	pop	{r1}
	bx	r1
.Lfe117:
	.size	 sub_811D52C,.Lfe117-sub_811D52C
	.align	2, 0
	.type	 Phase1_Task_RunFuncs,function
	.thumb_func
Phase1_Task_RunFuncs:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r5, .L707
	ldr	r2, .L707+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r4, r1, r2
.L703:
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	_call_via_r1
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L703	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L708:
	.align	2, 0
.L707:
	.word	sPhase1_TransitionAll_Funcs
	.word	gTasks
.Lfe118:
	.size	 Phase1_Task_RunFuncs,.Lfe118-Phase1_Task_RunFuncs
	.align	2, 0
	.type	 Phase1_TransitionAll_Func1,function
	.thumb_func
Phase1_TransitionAll_Func1:
	push	{r4, lr}
	add	r4, r0, #0
	ldrh	r1, [r4, #0x14]
	mov	r2, #0x14
	ldrsh	r0, [r4, r2]
	cmp	r0, #0
	beq	.L711	@cond_branch
	sub	r0, r1, #0x1
	strh	r0, [r4, #0x14]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L710	@cond_branch
.L711:
	ldrh	r0, [r4, #0xa]
	strh	r0, [r4, #0x14]
	ldrh	r0, [r4, #0x10]
	ldrh	r1, [r4, #0x16]
	add	r0, r0, r1
	strh	r0, [r4, #0x16]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x10
	ble	.L712	@cond_branch
	mov	r0, #0x10
	strh	r0, [r4, #0x16]
.L712:
	mov	r0, #0x1
	neg	r0, r0
	ldrb	r1, [r4, #0x16]
	ldr	r2, .L714
	bl	BlendPalettes
.L710:
	mov	r2, #0x16
	ldrsh	r0, [r4, r2]
	cmp	r0, #0xf
	ble	.L713	@cond_branch
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	ldrh	r0, [r4, #0xc]
	strh	r0, [r4, #0x14]
.L713:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L715:
	.align	2, 0
.L714:
	.word	0x2d6b
.Lfe119:
	.size	 Phase1_TransitionAll_Func1,.Lfe119-Phase1_TransitionAll_Func1
	.align	2, 0
	.type	 Phase1_TransitionAll_Func2,function
	.thumb_func
Phase1_TransitionAll_Func2:
	push	{r4, lr}
	add	r4, r0, #0
	ldrh	r1, [r4, #0x14]
	mov	r2, #0x14
	ldrsh	r0, [r4, r2]
	cmp	r0, #0
	beq	.L718	@cond_branch
	sub	r0, r1, #0x1
	strh	r0, [r4, #0x14]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L717	@cond_branch
.L718:
	ldrh	r0, [r4, #0xc]
	strh	r0, [r4, #0x14]
	ldrh	r0, [r4, #0x16]
	ldrh	r1, [r4, #0x12]
	sub	r0, r0, r1
	strh	r0, [r4, #0x16]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bge	.L719	@cond_branch
	mov	r0, #0x0
	strh	r0, [r4, #0x16]
.L719:
	mov	r0, #0x1
	neg	r0, r0
	ldrb	r1, [r4, #0x16]
	ldr	r2, .L723
	bl	BlendPalettes
.L717:
	mov	r0, #0x16
	ldrsh	r1, [r4, r0]
	cmp	r1, #0
	bne	.L720	@cond_branch
	ldrh	r0, [r4, #0xe]
	sub	r0, r0, #0x1
	strh	r0, [r4, #0xe]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L721	@cond_branch
	ldr	r0, .L723+0x4
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
	b	.L720
.L724:
	.align	2, 0
.L723:
	.word	0x2d6b
	.word	Phase1_Task_RunFuncs
.L721:
	ldrh	r0, [r4, #0xa]
	strh	r0, [r4, #0x14]
	strh	r1, [r4, #0x8]
.L720:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe120:
	.size	 Phase1_TransitionAll_Func2,.Lfe120-Phase1_TransitionAll_Func2
	.align	2, 0
	.type	 sub_811D658,function
	.thumb_func
sub_811D658:
	push	{lr}
	ldr	r0, .L726
	ldr	r0, [r0]
	mov	r1, #0x0
	mov	r2, #0x3c
	bl	memset
	ldr	r0, .L726+0x4
	add	r1, r0, #0x2
	bl	sub_8057B14
	pop	{r0}
	bx	r0
.L727:
	.align	2, 0
.L726:
	.word	sTransitionStructPtr
	.word	gSharedMem+0xc014
.Lfe121:
	.size	 sub_811D658,.Lfe121-sub_811D658
	.align	2, 0
	.type	 VBlankCB_BattleTransition,function
	.thumb_func
VBlankCB_BattleTransition:
	push	{lr}
	bl	LoadOam
	bl	ProcessSpriteCopyRequests
	bl	TransferPlttBuffer
	pop	{r0}
	bx	r0
.Lfe122:
	.size	 VBlankCB_BattleTransition,.Lfe122-VBlankCB_BattleTransition
	.align	2, 0
	.type	 sub_811D690,function
	.thumb_func
sub_811D690:
	ldr	r1, .L730
	ldrh	r1, [r1]
	lsr	r1, r1, #0x2
	lsl	r1, r1, #0x1e
	lsr	r1, r1, #0x10
	mov	r2, #0xc0
	lsl	r2, r2, #0x13
	add	r1, r1, r2
	str	r1, [r0]
	bx	lr
.L731:
	.align	2, 0
.L730:
	.word	0x4000008
.Lfe123:
	.size	 sub_811D690,.Lfe123-sub_811D690
	.align	2, 0
	.type	 sub_811D6A8,function
	.thumb_func
sub_811D6A8:
	push	{r4, lr}
	ldr	r3, .L733
	ldrh	r2, [r3]
	lsr	r2, r2, #0x8
	ldrh	r3, [r3]
	lsr	r3, r3, #0x2
	lsl	r2, r2, #0x1b
	lsr	r2, r2, #0x10
	lsl	r3, r3, #0x1e
	lsr	r3, r3, #0x10
	mov	r4, #0xc0
	lsl	r4, r4, #0x13
	add	r2, r2, r4
	str	r2, [r0]
	add	r3, r3, r4
	str	r3, [r1]
	pop	{r4}
	pop	{r0}
	bx	r0
.L734:
	.align	2, 0
.L733:
	.word	0x4000008
.Lfe124:
	.size	 sub_811D6A8,.Lfe124-sub_811D6A8
	.align	2, 0
	.type	 sub_811D6D4,function
	.thumb_func
sub_811D6D4:
	push	{lr}
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x10
	mov	r2, #0x0
	bl	BlendPalettes
	pop	{r0}
	bx	r0
.Lfe125:
	.size	 sub_811D6D4,.Lfe125-sub_811D6D4
	.align	2, 0
	.type	 sub_811D6E8,function
	.thumb_func
sub_811D6E8:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	mov	sl, r0
	ldr	r0, [sp, #0x20]
	ldr	r4, [sp, #0x24]
	lsl	r1, r1, #0x10
	lsr	r7, r1, #0x10
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	lsl	r3, r3, #0x10
	lsr	r3, r3, #0x10
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	lsl	r4, r4, #0x10
	mov	r6, #0x0
	lsr	r5, r4, #0x10
	cmp	r4, #0
	ble	.L738	@cond_branch
	lsl	r0, r7, #0x10
	asr	r0, r0, #0x10
	mov	r9, r0
	lsl	r1, r1, #0x10
	mov	r8, r1
	lsl	r0, r3, #0x10
	asr	r7, r0, #0x10
.L740:
	lsl	r4, r2, #0x10
	asr	r4, r4, #0x10
	mov	r0, #0xff
	and	r0, r0, r4
	mov	r2, r8
	asr	r1, r2, #0x10
	bl	Sin
	lsl	r1, r6, #0x1
	add	r1, r1, sl
	add	r0, r0, r9
	strh	r0, [r1]
	lsl	r1, r5, #0x10
	ldr	r0, .L742
	add	r1, r1, r0
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	add	r4, r4, r7
	lsl	r4, r4, #0x10
	lsr	r2, r4, #0x10
	lsr	r5, r1, #0x10
	cmp	r1, #0
	bgt	.L740	@cond_branch
.L738:
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L743:
	.align	2, 0
.L742:
	.word	0xffff0000
.Lfe126:
	.size	 sub_811D6E8,.Lfe126-sub_811D6E8
	.align	2, 0
	.type	 sub_811D764,function
	.thumb_func
sub_811D764:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #0xffffffec
	mov	r9, r0
	add	r5, r2, #0
	add	r4, r3, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	str	r1, [sp]
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	mov	r2, #0xa0
	lsl	r2, r2, #0x1
	mov	r1, #0xa
	bl	memset
	mov	r1, #0x0
	lsl	r4, r4, #0x10
	asr	r4, r4, #0x10
	str	r4, [sp, #0x4]
	lsl	r5, r5, #0x10
	asr	r5, r5, #0x10
	str	r5, [sp, #0x8]
.L748:
	lsl	r5, r1, #0x10
	asr	r0, r5, #0x10
	mov	sl, r0
	ldr	r1, [sp, #0x4]
	bl	Sin
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	mov	r0, sl
	ldr	r1, [sp, #0x4]
	bl	Cos
	ldr	r2, [sp]
	lsl	r1, r2, #0x10
	asr	r1, r1, #0x10
	lsl	r4, r4, #0x10
	asr	r4, r4, #0x10
	sub	r2, r1, r4
	lsl	r2, r2, #0x10
	add	r1, r1, r4
	lsl	r1, r1, #0x10
	lsr	r6, r1, #0x10
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	ldr	r3, [sp, #0x8]
	sub	r1, r3, r0
	lsl	r1, r1, #0x10
	lsr	r7, r1, #0x10
	add	r0, r3, r0
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r8, r0
	lsr	r1, r2, #0x10
	str	r5, [sp, #0x10]
	cmp	r2, #0
	bge	.L749	@cond_branch
	mov	r1, #0x0
.L749:
	lsl	r0, r6, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0xf0
	ble	.L750	@cond_branch
	mov	r6, #0xf0
.L750:
	lsl	r0, r7, #0x10
	cmp	r0, #0
	bge	.L751	@cond_branch
	mov	r7, #0x0
.L751:
	mov	r2, r8
	lsl	r0, r2, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x9f
	ble	.L752	@cond_branch
	mov	r3, #0x9f
	mov	r8, r3
.L752:
	lsl	r0, r1, #0x18
	lsr	r0, r0, #0x10
	orr	r6, r6, r0
	lsl	r0, r7, #0x10
	asr	r0, r0, #0x10
	str	r0, [sp, #0xc]
	lsl	r0, r0, #0x1
	add	r0, r0, r9
	strh	r6, [r0]
	mov	r0, r8
	lsl	r4, r0, #0x10
	asr	r0, r4, #0xf
	add	r0, r0, r9
	strh	r6, [r0]
	mov	r0, sl
	add	r0, r0, #0x1
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	ldr	r1, [sp, #0x4]
	bl	Cos
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	ldr	r2, [sp, #0x8]
	sub	r1, r2, r0
	lsl	r1, r1, #0x10
	add	r0, r2, r0
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	lsr	r3, r1, #0x10
	cmp	r1, #0
	bge	.L753	@cond_branch
	mov	r3, #0x0
.L753:
	lsl	r0, r2, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x9f
	ble	.L754	@cond_branch
	mov	r2, #0x9f
.L754:
	lsl	r0, r3, #0x10
	asr	r1, r0, #0x10
	add	r3, r0, #0
	lsl	r5, r2, #0x10
	ldr	r0, [sp, #0xc]
	cmp	r0, r1
	ble	.L756	@cond_branch
	add	r2, r1, #0
.L757:
	lsl	r1, r7, #0x10
	ldr	r0, .L775
	add	r1, r1, r0
	asr	r0, r1, #0xf
	add	r0, r0, r9
	strh	r6, [r0]
	lsr	r7, r1, #0x10
	asr	r1, r1, #0x10
	cmp	r1, r2
	bgt	.L757	@cond_branch
.L756:
	lsl	r1, r7, #0x10
	asr	r0, r3, #0x10
	cmp	r1, r3
	bge	.L772	@cond_branch
	add	r2, r0, #0
.L761:
	mov	r3, #0x80
	lsl	r3, r3, #0x9
	add	r0, r1, r3
	asr	r1, r0, #0xf
	add	r1, r1, r9
	strh	r6, [r1]
	add	r1, r0, #0
	asr	r0, r1, #0x10
	cmp	r0, r2
	blt	.L761	@cond_branch
.L772:
	asr	r0, r5, #0x10
	cmp	r4, r5
	ble	.L773	@cond_branch
	add	r1, r0, #0
.L765:
	ldr	r2, .L775
	add	r0, r4, r2
	lsr	r3, r0, #0x10
	mov	r8, r3
	asr	r0, r0, #0xf
	add	r0, r0, r9
	strh	r6, [r0]
	lsl	r4, r3, #0x10
	asr	r0, r4, #0x10
	cmp	r0, r1
	bgt	.L765	@cond_branch
.L773:
	mov	r0, r8
	lsl	r4, r0, #0x10
	asr	r0, r5, #0x10
	cmp	r4, r5
	bge	.L774	@cond_branch
	add	r2, r0, #0
.L769:
	mov	r1, #0x80
	lsl	r1, r1, #0x9
	add	r0, r4, r1
	asr	r1, r0, #0xf
	add	r1, r1, r9
	strh	r6, [r1]
	add	r4, r0, #0
	asr	r0, r4, #0x10
	cmp	r0, r2
	blt	.L769	@cond_branch
.L774:
	ldr	r2, [sp, #0x10]
	mov	r3, #0x80
	lsl	r3, r3, #0x9
	add	r0, r2, r3
	lsr	r1, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x3f
	bgt	.LCB8075
	b	.L748	@long jump
.LCB8075:
	add	sp, sp, #0x14
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L776:
	.align	2, 0
.L775:
	.word	0xffff0000
.Lfe127:
	.size	 sub_811D764,.Lfe127-sub_811D764
	.align	2, 0
	.type	 sub_811D8FC,function
	.thumb_func
sub_811D8FC:
	push	{r4, r5, r6, r7, lr}
	add	r6, r0, #0
	ldr	r0, [sp, #0x14]
	ldr	r5, [sp, #0x18]
	ldr	r4, [sp, #0x1c]
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	lsl	r3, r3, #0x10
	lsr	r3, r3, #0x10
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r7, r0, #0
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	strh	r1, [r6]
	strh	r2, [r6, #0x2]
	strh	r1, [r6, #0x4]
	strh	r2, [r6, #0x6]
	strh	r3, [r6, #0x8]
	strh	r7, [r6, #0xa]
	strh	r5, [r6, #0xc]
	strh	r4, [r6, #0xe]
	lsl	r3, r3, #0x10
	asr	r3, r3, #0x10
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	sub	r3, r3, r1
	strh	r3, [r6, #0x10]
	lsl	r0, r3, #0x10
	cmp	r0, #0
	bge	.L778	@cond_branch
	neg	r0, r3
	strh	r0, [r6, #0x10]
	lsl	r0, r5, #0x10
	asr	r0, r0, #0x10
	neg	r0, r0
	strh	r0, [r6, #0xc]
.L778:
	lsl	r0, r7, #0x10
	asr	r0, r0, #0x10
	lsl	r1, r2, #0x10
	asr	r1, r1, #0x10
	sub	r1, r0, r1
	strh	r1, [r6, #0x12]
	lsl	r0, r1, #0x10
	cmp	r0, #0
	bge	.L779	@cond_branch
	neg	r0, r1
	strh	r0, [r6, #0x12]
	lsl	r0, r4, #0x10
	asr	r0, r0, #0x10
	neg	r0, r0
	strh	r0, [r6, #0xe]
.L779:
	mov	r0, #0x0
	strh	r0, [r6, #0x14]
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe128:
	.size	 sub_811D8FC,.Lfe128-sub_811D8FC
	.align	2, 0
	.type	 sub_811D978,function
	.thumb_func
sub_811D978:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	r3, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r9, r1
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	sl, r2
	ldrh	r0, [r3, #0x10]
	mov	r8, r0
	mov	r1, #0x10
	ldrsh	r6, [r3, r1]
	ldrh	r2, [r3, #0x12]
	mov	ip, r2
	mov	r4, #0x12
	ldrsh	r5, [r3, r4]
	cmp	r6, r5
	ble	.L781	@cond_branch
	ldrh	r0, [r3, #0xc]
	ldrh	r2, [r3, #0x4]
	add	r1, r0, r2
	strh	r1, [r3, #0x4]
	ldrh	r2, [r3, #0x14]
	add	r2, r2, ip
	strh	r2, [r3, #0x14]
	lsl	r1, r2, #0x10
	asr	r1, r1, #0x10
	add	r4, r0, #0
	ldrh	r7, [r3, #0xe]
	cmp	r1, r6
	ble	.L783	@cond_branch
	ldrh	r1, [r3, #0x6]
	add	r0, r7, r1
	strh	r0, [r3, #0x6]
	mov	r1, r8
	b	.L796
.L781:
	ldrh	r0, [r3, #0xe]
	ldrh	r2, [r3, #0x6]
	add	r1, r0, r2
	strh	r1, [r3, #0x6]
	ldrh	r2, [r3, #0x14]
	add	r2, r2, r8
	strh	r2, [r3, #0x14]
	lsl	r1, r2, #0x10
	asr	r1, r1, #0x10
	ldrh	r4, [r3, #0xc]
	add	r7, r0, #0
	cmp	r1, r5
	ble	.L783	@cond_branch
	ldrh	r1, [r3, #0x4]
	add	r0, r4, r1
	strh	r0, [r3, #0x4]
	mov	r1, ip
.L796:
	sub	r0, r2, r1
	strh	r0, [r3, #0x14]
.L783:
	mov	r5, #0x0
	lsl	r0, r4, #0x10
	asr	r2, r0, #0x10
	cmp	r2, #0
	ble	.L787	@cond_branch
	mov	r4, #0x4
	ldrsh	r1, [r3, r4]
	mov	r4, #0x8
	ldrsh	r0, [r3, r4]
	ldrh	r4, [r3, #0x8]
	cmp	r1, r0
	bge	.L786	@cond_branch
.L787:
	cmp	r2, #0
	bge	.L785	@cond_branch
	mov	r0, #0x4
	ldrsh	r1, [r3, r0]
	mov	r2, #0x8
	ldrsh	r0, [r3, r2]
	ldrh	r4, [r3, #0x8]
	cmp	r1, r0
	bgt	.L785	@cond_branch
.L786:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r0, r9
	cmp	r0, #0
	beq	.L785	@cond_branch
	strh	r4, [r3, #0x4]
.L785:
	lsl	r0, r7, #0x10
	asr	r2, r0, #0x10
	cmp	r2, #0
	ble	.L791	@cond_branch
	mov	r4, #0x6
	ldrsh	r1, [r3, r4]
	mov	r4, #0xa
	ldrsh	r0, [r3, r4]
	ldrh	r4, [r3, #0xa]
	cmp	r1, r0
	bge	.L790	@cond_branch
.L791:
	cmp	r2, #0
	bge	.L789	@cond_branch
	mov	r0, #0x6
	ldrsh	r1, [r3, r0]
	mov	r2, #0xa
	ldrsh	r0, [r3, r2]
	ldrh	r4, [r3, #0xa]
	cmp	r1, r0
	bgt	.L789	@cond_branch
.L790:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r0, sl
	cmp	r0, #0
	beq	.L789	@cond_branch
	strh	r4, [r3, #0x6]
.L789:
	cmp	r5, #0x2
	beq	.L793	@cond_branch
	mov	r0, #0x0
	b	.L795
.L793:
	mov	r0, #0x1
.L795:
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe129:
	.size	 sub_811D978,.Lfe129-sub_811D978
.text
	.align	2, 0
