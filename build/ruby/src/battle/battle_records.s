@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
.text
	.align	2, 0
	.type	 InitLinkBattleRecord,function
	.thumb_func
InitLinkBattleRecord:
	push	{r4, lr}
	add	sp, sp, #0xfffffffc
	add	r4, r0, #0
	mov	r1, sp
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r2, .L3
	mov	r0, sp
	add	r1, r4, #0
	bl	CpuSet
	mov	r0, #0xff
	strb	r0, [r4]
	mov	r0, #0x0
	strh	r0, [r4, #0x8]
	strh	r0, [r4, #0xa]
	strh	r0, [r4, #0xc]
	strh	r0, [r4, #0xe]
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L4:
	.align	2, 0
.L3:
	.word	0x1000008
.Lfe1:
	.size	 InitLinkBattleRecord,.Lfe1-InitLinkBattleRecord
	.align	2, 0
	.type	 InitLinkBattleRecords_,function
	.thumb_func
InitLinkBattleRecords_:
	push	{r4, r5, lr}
	add	r4, r0, #0
	mov	r5, #0x4
.L9:
	add	r0, r4, #0
	bl	InitLinkBattleRecord
	add	r4, r4, #0x10
	sub	r5, r5, #0x1
	cmp	r5, #0
	bge	.L9	@cond_branch
	mov	r0, #0x17
	mov	r1, #0x0
	bl	SetGameStat
	mov	r0, #0x18
	mov	r1, #0x0
	bl	SetGameStat
	mov	r0, #0x19
	mov	r1, #0x0
	bl	SetGameStat
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe2:
	.size	 InitLinkBattleRecords_,.Lfe2-InitLinkBattleRecords_
	.align	2, 0
	.type	 GetLinkBattleRecordTotalBattles,function
	.thumb_func
GetLinkBattleRecordTotalBattles:
	add	r1, r0, #0
	ldrh	r0, [r1, #0xa]
	ldrh	r2, [r1, #0xc]
	add	r0, r0, r2
	ldrh	r1, [r1, #0xe]
	add	r0, r0, r1
	bx	lr
.Lfe3:
	.size	 GetLinkBattleRecordTotalBattles,.Lfe3-GetLinkBattleRecordTotalBattles
	.align	2, 0
	.type	 FindLinkBattleRecord,function
	.thumb_func
FindLinkBattleRecord:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	mov	r8, r1
	lsl	r2, r2, #0x10
	lsr	r7, r2, #0x10
	mov	r5, #0x0
	ldr	r6, .L20
	add	r4, r0, #0
.L16:
	add	r0, r6, #0
	add	r1, r4, #0
	mov	r2, #0x7
	bl	memcpy
	mov	r0, #0xff
	strb	r0, [r6, #0x7]
	add	r0, r6, #0
	mov	r1, r8
	bl	StringCompareWithoutExtCtrlCodes
	cmp	r0, #0
	bne	.L15	@cond_branch
	ldrh	r0, [r4, #0x8]
	cmp	r0, r7
	bne	.L15	@cond_branch
	add	r0, r5, #0
	b	.L19
.L21:
	.align	2, 0
.L20:
	.word	gStringVar1
.L15:
	add	r4, r4, #0x10
	add	r5, r5, #0x1
	cmp	r5, #0x4
	ble	.L16	@cond_branch
	mov	r0, #0x5
.L19:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe4:
	.size	 FindLinkBattleRecord,.Lfe4-FindLinkBattleRecord
	.align	2, 0
	.type	 SortLinkBattleRecords,function
	.thumb_func
SortLinkBattleRecords:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #0xffffffec
	mov	r8, r0
	mov	r0, #0x4
.L26:
	sub	r2, r0, #0x1
	mov	r9, r2
	cmp	r2, #0
	blt	.L25	@cond_branch
	lsl	r0, r0, #0x4
	mov	r1, r8
	add	r6, r1, r0
	lsl	r0, r2, #0x4
	add	r5, r0, r1
.L30:
	add	r0, r6, #0
	str	r2, [sp, #0x10]
	bl	GetLinkBattleRecordTotalBattles
	add	r4, r0, #0
	add	r0, r5, #0
	bl	GetLinkBattleRecordTotalBattles
	ldr	r2, [sp, #0x10]
	cmp	r4, r0
	ble	.L29	@cond_branch
	mov	r1, sp
	add	r0, r6, #0
	ldmia	r0!, {r3, r4, r7}
	stmia	r1!, {r3, r4, r7}
	ldr	r0, [r0]
	str	r0, [r1]
	add	r1, r6, #0
	add	r0, r5, #0
	ldmia	r0!, {r3, r4, r7}
	stmia	r1!, {r3, r4, r7}
	ldr	r0, [r0]
	str	r0, [r1]
	add	r1, r5, #0
	mov	r0, sp
	ldmia	r0!, {r3, r4, r7}
	stmia	r1!, {r3, r4, r7}
	ldr	r0, [r0]
	str	r0, [r1]
.L29:
	sub	r5, r5, #0x10
	mov	r0, #0x1
	neg	r0, r0
	add	r9, r9, r0
	mov	r1, r9
	cmp	r1, #0
	bge	.L30	@cond_branch
.L25:
	add	r0, r2, #0
	cmp	r0, #0
	bgt	.L26	@cond_branch
	add	sp, sp, #0x14
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe5:
	.size	 SortLinkBattleRecords,.Lfe5-SortLinkBattleRecords
	.align	2, 0
	.type	 UpdateLinkBattleRecord,function
	.thumb_func
UpdateLinkBattleRecord:
	push	{lr}
	add	r2, r0, #0
	cmp	r1, #0x2
	beq	.L38	@cond_branch
	cmp	r1, #0x2
	bgt	.L44	@cond_branch
	cmp	r1, #0x1
	beq	.L36	@cond_branch
	b	.L35
.L44:
	cmp	r1, #0x3
	beq	.L40	@cond_branch
	b	.L35
.L36:
	ldrh	r0, [r2, #0xa]
	add	r0, r0, #0x1
	strh	r0, [r2, #0xa]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r1, .L45
	cmp	r0, r1
	bls	.L35	@cond_branch
	strh	r1, [r2, #0xa]
	b	.L35
.L46:
	.align	2, 0
.L45:
	.word	0x270f
.L38:
	ldrh	r0, [r2, #0xc]
	add	r0, r0, #0x1
	strh	r0, [r2, #0xc]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r1, .L47
	cmp	r0, r1
	bls	.L35	@cond_branch
	strh	r1, [r2, #0xc]
	b	.L35
.L48:
	.align	2, 0
.L47:
	.word	0x270f
.L40:
	ldrh	r0, [r2, #0xe]
	add	r0, r0, #0x1
	strh	r0, [r2, #0xe]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r1, .L49
	cmp	r0, r1
	bls	.L35	@cond_branch
	strh	r1, [r2, #0xe]
.L35:
	pop	{r0}
	bx	r0
.L50:
	.align	2, 0
.L49:
	.word	0x270f
.Lfe6:
	.size	 UpdateLinkBattleRecord,.Lfe6-UpdateLinkBattleRecord
	.align	2, 0
	.type	 UpdateLinkBattleGameStats,function
	.thumb_func
UpdateLinkBattleGameStats:
	push	{r4, lr}
	cmp	r0, #0x2
	beq	.L54	@cond_branch
	cmp	r0, #0x2
	bgt	.L58	@cond_branch
	cmp	r0, #0x1
	beq	.L53	@cond_branch
	b	.L51
.L58:
	cmp	r0, #0x3
	beq	.L55	@cond_branch
	b	.L51
.L53:
	mov	r4, #0x17
	b	.L52
.L54:
	mov	r4, #0x18
	b	.L52
.L55:
	mov	r4, #0x19
.L52:
	add	r0, r4, #0
	bl	GetGameStat
	ldr	r1, .L60
	cmp	r0, r1
	bhi	.L51	@cond_branch
	add	r0, r4, #0
	bl	IncrementGameStat
.L51:
	pop	{r4}
	pop	{r0}
	bx	r0
.L61:
	.align	2, 0
.L60:
	.word	0x270e
.Lfe7:
	.size	 UpdateLinkBattleGameStats,.Lfe7-UpdateLinkBattleGameStats
	.align	2, 0
	.type	 UpdateLinkBattleRecords_,function
	.thumb_func
UpdateLinkBattleRecords_:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	r5, r0, #0
	add	r7, r1, #0
	mov	sl, r3
	ldr	r0, [sp, #0x20]
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	mov	r9, r2
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	mov	r0, sl
	bl	UpdateLinkBattleGameStats
	add	r0, r5, #0
	bl	SortLinkBattleRecords
	add	r0, r5, #0
	add	r1, r7, #0
	mov	r2, r9
	bl	FindLinkBattleRecord
	add	r6, r0, #0
	cmp	r6, #0x5
	bne	.L63	@cond_branch
	mov	r6, #0x4
	add	r4, r5, #0
	add	r4, r4, #0x40
	add	r0, r4, #0
	bl	InitLinkBattleRecord
	mov	r0, r8
	cmp	r0, #0x1
	bne	.L64	@cond_branch
	mov	r0, #0xfc
	strb	r0, [r4]
	mov	r0, #0x15
	strb	r0, [r4, #0x1]
	add	r0, r5, #0
	add	r0, r0, #0x42
	add	r1, r7, #0
	mov	r2, #0x5
	bl	StringCopyN
	b	.L65
.L64:
	add	r0, r4, #0
	add	r1, r7, #0
	mov	r2, #0x7
	bl	StringCopyN
.L65:
	lsl	r0, r6, #0x4
	add	r0, r5, r0
	mov	r1, r9
	strh	r1, [r0, #0x8]
.L63:
	lsl	r0, r6, #0x4
	add	r0, r5, r0
	mov	r1, sl
	bl	UpdateLinkBattleRecord
	add	r0, r5, #0
	bl	SortLinkBattleRecords
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe8:
	.size	 UpdateLinkBattleRecords_,.Lfe8-UpdateLinkBattleRecords_
	.align	2, 0
	.globl	InitLinkBattleRecords
	.type	 InitLinkBattleRecords,function
	.thumb_func
InitLinkBattleRecords:
	push	{lr}
	ldr	r0, .L67
	bl	InitLinkBattleRecords_
	pop	{r0}
	bx	r0
.L68:
	.align	2, 0
.L67:
	.word	gSaveBlock1+0x30b8
.Lfe9:
	.size	 InitLinkBattleRecords,.Lfe9-InitLinkBattleRecords
	.align	2, 0
	.type	 IncTrainerCardWins,function
	.thumb_func
IncTrainerCardWins:
	push	{lr}
	lsl	r1, r0, #0x3
	sub	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L71
	add	r1, r1, r0
	ldrh	r0, [r1]
	add	r0, r0, #0x1
	strh	r0, [r1]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r2, .L71+0x4
	cmp	r0, r2
	bls	.L70	@cond_branch
	strh	r2, [r1]
.L70:
	pop	{r0}
	bx	r0
.L72:
	.align	2, 0
.L71:
	.word	gTrainerCards+0x14
	.word	0x270f
.Lfe10:
	.size	 IncTrainerCardWins,.Lfe10-IncTrainerCardWins
	.align	2, 0
	.type	 IncTrainerCardLosses,function
	.thumb_func
IncTrainerCardLosses:
	push	{lr}
	lsl	r1, r0, #0x3
	sub	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L75
	add	r1, r1, r0
	ldrh	r0, [r1]
	add	r0, r0, #0x1
	strh	r0, [r1]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r2, .L75+0x4
	cmp	r0, r2
	bls	.L74	@cond_branch
	strh	r2, [r1]
.L74:
	pop	{r0}
	bx	r0
.L76:
	.align	2, 0
.L75:
	.word	gTrainerCards+0x16
	.word	0x270f
.Lfe11:
	.size	 IncTrainerCardLosses,.Lfe11-IncTrainerCardLosses
	.align	2, 0
	.type	 UpdateTrainerCardWinsLosses,function
	.thumb_func
UpdateTrainerCardWinsLosses:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r0, .L83
	ldrb	r0, [r0]
	cmp	r0, #0x1
	beq	.L79	@cond_branch
	cmp	r0, #0x2
	beq	.L80	@cond_branch
	b	.L78
.L84:
	.align	2, 0
.L83:
	.word	gBattleOutcome
.L79:
	eor	r0, r0, r4
	bl	IncTrainerCardWins
	add	r0, r4, #0
	bl	IncTrainerCardLosses
	b	.L78
.L80:
	mov	r0, #0x1
	eor	r0, r0, r4
	bl	IncTrainerCardLosses
	add	r0, r4, #0
	bl	IncTrainerCardWins
.L78:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe12:
	.size	 UpdateTrainerCardWinsLosses,.Lfe12-UpdateTrainerCardWinsLosses
	.align	2, 0
	.globl	UpdateLinkBattleRecords
	.type	 UpdateLinkBattleRecords,function
	.thumb_func
UpdateLinkBattleRecords:
	push	{r4, r5, r6, lr}
	add	sp, sp, #0xfffffffc
	add	r4, r0, #0
	bl	UpdateTrainerCardWinsLosses
	ldr	r0, .L86
	lsl	r2, r4, #0x3
	sub	r2, r2, r4
	lsl	r2, r2, #0x3
	ldr	r3, .L86+0x4
	add	r1, r2, r3
	sub	r3, r3, #0x30
	add	r2, r2, r3
	ldrh	r2, [r2, #0xe]
	ldr	r3, .L86+0x8
	ldrb	r3, [r3]
	ldr	r6, .L86+0xc
	ldr	r5, .L86+0x10
	lsl	r4, r4, #0x2
	add	r4, r4, r5
	ldrb	r5, [r4, #0x1]
	lsl	r4, r5, #0x3
	sub	r4, r4, r5
	lsl	r4, r4, #0x2
	add	r4, r4, r6
	ldrb	r4, [r4, #0x1a]
	str	r4, [sp]
	bl	UpdateLinkBattleRecords_
	add	sp, sp, #0x4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L87:
	.align	2, 0
.L86:
	.word	gSaveBlock1+0x30b8
	.word	gTrainerCards+0x30
	.word	gBattleOutcome
	.word	gLinkPlayers
	.word	gLinkPlayerMapObjects
.Lfe13:
	.size	 UpdateLinkBattleRecords,.Lfe13-UpdateLinkBattleRecords
	.align	2, 0
	.type	 PrintLinkBattleWinsLossesDraws,function
	.thumb_func
PrintLinkBattleWinsLossesDraws:
	push	{r4, lr}
	ldr	r4, .L89
	mov	r0, #0x17
	bl	GetGameStat
	add	r1, r0, #0
	add	r0, r4, #0
	mov	r2, #0x1
	mov	r3, #0x4
	bl	ConvertIntToDecimalStringN_DigitWidth6
	ldr	r4, .L89+0x4
	mov	r0, #0x18
	bl	GetGameStat
	add	r1, r0, #0
	add	r0, r4, #0
	mov	r2, #0x1
	mov	r3, #0x4
	bl	ConvertIntToDecimalStringN_DigitWidth6
	ldr	r4, .L89+0x8
	mov	r0, #0x19
	bl	GetGameStat
	add	r1, r0, #0
	add	r0, r4, #0
	mov	r2, #0x1
	mov	r3, #0x4
	bl	ConvertIntToDecimalStringN_DigitWidth6
	ldr	r0, .L89+0xc
	mov	r1, #0x3
	mov	r2, #0x3
	bl	MenuPrint
	pop	{r4}
	pop	{r0}
	bx	r0
.L90:
	.align	2, 0
.L89:
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar3
	.word	gOtherText_WinRecord
.Lfe14:
	.size	 PrintLinkBattleWinsLossesDraws,.Lfe14-PrintLinkBattleWinsLossesDraws
	.align	2, 0
	.type	 PrintLinkBattleRecord,function
	.thumb_func
PrintLinkBattleRecord:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #0xfffffff0
	add	r7, r0, #0
	lsl	r1, r1, #0x18
	lsr	r6, r1, #0x18
	ldrh	r0, [r7, #0xa]
	cmp	r0, #0
	bne	.L92	@cond_branch
	ldr	r0, [r7, #0xc]
	cmp	r0, #0
	bne	.L92	@cond_branch
	mov	r0, sp
	mov	r2, #0xfc
	strb	r2, [r0]
	mov	r1, sp
	mov	r0, #0x14
	strb	r0, [r1, #0x1]
	mov	r0, #0x6
	strb	r0, [r1, #0x2]
	mov	r0, sp
	strb	r2, [r0, #0x3]
	mov	r0, #0x11
	strb	r0, [r1, #0x4]
	mov	r0, #0x1
	strb	r0, [r1, #0x5]
	mov	r4, sp
	add	r4, r4, #0x6
	ldr	r1, .L94
	add	r0, r4, #0
	bl	StringCopy
	mov	r0, sp
	mov	r1, #0x3
	add	r2, r6, #0
	bl	MenuPrint
	ldr	r1, .L94+0x4
	add	r0, r4, #0
	bl	StringCopy
	mov	r0, sp
	mov	r1, #0xb
	add	r2, r6, #0
	bl	MenuPrint
	mov	r0, sp
	mov	r1, #0x11
	add	r2, r6, #0
	bl	MenuPrint
	mov	r0, sp
	mov	r1, #0x17
	add	r2, r6, #0
	bl	MenuPrint
	b	.L93
.L95:
	.align	2, 0
.L94:
	.word	gOtherText_SevenDashes
	.word	gOtherText_FourDashes
.L92:
	ldr	r4, .L96
	add	r0, r4, #0
	mov	r1, #0x8
	bl	StringFillWithTerminator
	add	r0, r4, #0
	add	r1, r7, #0
	mov	r2, #0x7
	bl	StringCopyN
	add	r0, r4, #0
	mov	r1, #0x3
	add	r2, r6, #0
	bl	MenuPrint
	mov	r0, #0xfc
	strb	r0, [r4]
	mov	r0, #0x14
	strb	r0, [r4, #0x1]
	mov	r0, #0x6
	strb	r0, [r4, #0x2]
	add	r5, r4, #0x3
	ldrh	r1, [r7, #0xa]
	add	r0, r5, #0
	mov	r2, #0x1
	mov	r3, #0x4
	bl	ConvertIntToDecimalStringN
	add	r0, r4, #0
	mov	r1, #0xb
	add	r2, r6, #0
	bl	MenuPrint
	ldrh	r1, [r7, #0xc]
	add	r0, r5, #0
	mov	r2, #0x1
	mov	r3, #0x4
	bl	ConvertIntToDecimalStringN
	add	r0, r4, #0
	mov	r1, #0x11
	add	r2, r6, #0
	bl	MenuPrint
	ldrh	r1, [r7, #0xe]
	add	r0, r5, #0
	mov	r2, #0x1
	mov	r3, #0x4
	bl	ConvertIntToDecimalStringN
	add	r0, r4, #0
	mov	r1, #0x17
	add	r2, r6, #0
	bl	MenuPrint
.L93:
	add	sp, sp, #0x10
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L97:
	.align	2, 0
.L96:
	.word	gStringVar1
.Lfe15:
	.size	 PrintLinkBattleRecord,.Lfe15-PrintLinkBattleRecord
	.align	2, 0
	.globl	ShowLinkBattleRecords
	.type	 ShowLinkBattleRecords,function
	.thumb_func
ShowLinkBattleRecords:
	push	{r4, lr}
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x1c
	mov	r3, #0x12
	bl	MenuDrawTextWindow
	ldr	r0, .L104
	mov	r1, #0x0
	mov	r2, #0x1
	mov	r3, #0xf0
	bl	sub_8072BD8
	ldr	r0, .L104+0x4
	bl	PrintLinkBattleWinsLossesDraws
	ldr	r0, .L104+0x8
	mov	r1, #0xc
	mov	r2, #0x6
	bl	MenuPrint
	mov	r4, #0x0
.L102:
	lsl	r0, r4, #0x4
	ldr	r1, .L104+0x4
	add	r0, r0, r1
	add	r4, r4, #0x1
	lsl	r1, r4, #0x19
	mov	r2, #0xc0
	lsl	r2, r2, #0x13
	add	r1, r1, r2
	lsr	r1, r1, #0x18
	bl	PrintLinkBattleRecord
	cmp	r4, #0x4
	ble	.L102	@cond_branch
	pop	{r4}
	pop	{r0}
	bx	r0
.L105:
	.align	2, 0
.L104:
	.word	gOtherText_BattleResults
	.word	gSaveBlock1+0x30b8
	.word	gOtherText_WinLoseDraw
.Lfe16:
	.size	 ShowLinkBattleRecords,.Lfe16-ShowLinkBattleRecords
	.align	2, 0
	.type	 sub_8110494,function
	.thumb_func
sub_8110494:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L118
	ldr	r2, .L118+0x4
	add	r1, r1, r2
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x6
	bhi	.L115	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L118+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L119:
	.align	2, 0
.L118:
	.word	gSaveBlock2+0xa8
	.word	0x4ae
	.word	.L116
	.align	2, 0
	.align	2, 0
.L116:
	.word	.L115
	.word	.L115
	.word	.L114
	.word	.L114
	.word	.L115
	.word	.L115
	.word	.L114
.L114:
	mov	r0, #0x1
	b	.L117
.L115:
	mov	r0, #0x0
.L117:
	pop	{r1}
	bx	r1
.Lfe17:
	.size	 sub_8110494,.Lfe17-sub_8110494
	.align	2, 0
	.type	 PrintWinStreak,function
	.thumb_func
PrintWinStreak:
	push	{r4, r5, r6, lr}
	lsl	r1, r1, #0x10
	lsr	r4, r1, #0x10
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	add	r5, r2, #0
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	add	r6, r3, #0
	add	r1, r5, #0
	add	r2, r6, #0
	bl	MenuPrint
	ldr	r0, .L122
	cmp	r4, r0
	bls	.L121	@cond_branch
	add	r4, r0, #0
.L121:
	ldr	r0, .L122+0x4
	add	r1, r4, #0
	mov	r2, #0x18
	mov	r3, #0x1
	bl	sub_8072C14
	ldr	r0, .L122+0x8
	add	r1, r5, #0x7
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r2, r6, #0
	bl	MenuPrint
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L123:
	.align	2, 0
.L122:
	.word	0x270f
	.word	gStringVar1
	.word	gOtherText_WinStreak
.Lfe18:
	.size	 PrintWinStreak,.Lfe18-PrintWinStreak
	.align	2, 0
	.type	 PrintRecordWinStreak,function
	.thumb_func
PrintRecordWinStreak:
	push	{r4, lr}
	add	r4, r1, #0
	add	r3, r2, #0
	lsl	r0, r0, #0x18
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	ldr	r1, .L125
	lsr	r0, r0, #0x17
	mov	r2, #0x97
	lsl	r2, r2, #0x3
	add	r1, r1, r2
	add	r0, r0, r1
	ldrh	r1, [r0]
	ldr	r0, .L125+0x4
	add	r2, r4, #0
	bl	PrintWinStreak
	pop	{r4}
	pop	{r0}
	bx	r0
.L126:
	.align	2, 0
.L125:
	.word	gSaveBlock2+0xa8
	.word	gOtherText_Record
.Lfe19:
	.size	 PrintRecordWinStreak,.Lfe19-PrintRecordWinStreak
	.align	2, 0
	.type	 GetLastWinStreak,function
	.thumb_func
GetLastWinStreak:
	push	{lr}
	lsl	r0, r0, #0x18
	ldr	r1, .L129
	lsr	r0, r0, #0x17
	ldr	r2, .L129+0x4
	add	r1, r1, r2
	add	r0, r0, r1
	ldrh	r0, [r0]
	ldr	r1, .L129+0x8
	cmp	r0, r1
	bls	.L128	@cond_branch
	add	r0, r1, #0
.L128:
	pop	{r1}
	bx	r1
.L130:
	.align	2, 0
.L129:
	.word	gSaveBlock2
	.word	0x574
	.word	0x270f
.Lfe20:
	.size	 GetLastWinStreak,.Lfe20-GetLastWinStreak
	.align	2, 0
	.type	 PrintLastWinStreak,function
	.thumb_func
PrintLastWinStreak:
	push	{r4, r5, r6, r7, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r1, r1, #0x18
	lsr	r6, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r7, r2, #0x18
	add	r0, r4, #0
	bl	GetLastWinStreak
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	add	r0, r4, #0
	bl	sub_8110494
	cmp	r0, #0x1
	bne	.L132	@cond_branch
	ldr	r0, .L134
	add	r1, r5, #0
	add	r2, r6, #0
	add	r3, r7, #0
	bl	PrintWinStreak
	b	.L133
.L135:
	.align	2, 0
.L134:
	.word	gOtherText_Current
.L132:
	ldr	r0, .L136
	add	r1, r5, #0
	add	r2, r6, #0
	add	r3, r7, #0
	bl	PrintWinStreak
.L133:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L137:
	.align	2, 0
.L136:
	.word	gOtherText_Prev
.Lfe21:
	.size	 PrintLastWinStreak,.Lfe21-PrintLastWinStreak
	.align	2, 0
	.globl	ShowBattleTowerRecords
	.type	 ShowBattleTowerRecords,function
	.thumb_func
ShowBattleTowerRecords:
	push	{r4, lr}
	mov	r0, #0x3
	mov	r1, #0x1
	mov	r2, #0x1b
	mov	r3, #0x11
	bl	MenuDrawTextWindow
	ldr	r0, .L144
	mov	r1, #0x3
	mov	r2, #0x2
	mov	r3, #0xc8
	bl	sub_8072BD8
	ldr	r0, .L144+0x4
	mov	r1, #0x5
	mov	r2, #0x6
	bl	MenuPrint
	ldr	r0, .L144+0x8
	mov	r1, #0x5
	mov	r2, #0xc
	bl	MenuPrint
	mov	r4, #0x5
.L142:
	lsl	r1, r4, #0x18
	lsr	r1, r1, #0x18
	mov	r0, #0xae
	mov	r2, #0xa
	bl	sub_8071F60
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r4, #0x19
	bls	.L142	@cond_branch
	mov	r0, #0x0
	mov	r1, #0xa
	mov	r2, #0x6
	bl	PrintLastWinStreak
	mov	r0, #0x0
	mov	r1, #0xa
	mov	r2, #0x8
	bl	PrintRecordWinStreak
	mov	r0, #0x1
	mov	r1, #0xa
	mov	r2, #0xc
	bl	PrintLastWinStreak
	mov	r0, #0x1
	mov	r1, #0xa
	mov	r2, #0xe
	bl	PrintRecordWinStreak
	pop	{r4}
	pop	{r0}
	bx	r0
.L145:
	.align	2, 0
.L144:
	.word	gOtherText_BattleTowerResults
	.word	gOtherText_Lv50
	.word	gOtherText_Lv100
.Lfe22:
	.size	 ShowBattleTowerRecords,.Lfe22-ShowBattleTowerRecords
.text
	.align	2, 0
