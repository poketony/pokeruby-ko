@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section .rodata
	.align	2, 0
	.type	 gLinkPartnerBufferCommands,object
gLinkPartnerBufferCommands:
	.word	LinkPartnerHandleGetAttributes
	.word	LinkPartnerHandlecmd1
	.word	LinkPartnerHandleSetAttributes
	.word	LinkPartnerHandlecmd3
	.word	LinkPartnerHandleLoadPokeSprite
	.word	LinkPartnerHandleSendOutPoke
	.word	LinkPartnerHandleReturnPokeToBall
	.word	LinkPartnerHandleTrainerThrow
	.word	LinkPartnerHandleTrainerSlide
	.word	LinkPartnerHandleTrainerSlideBack
	.word	LinkPartnerHandlecmd10
	.word	LinkPartnerHandlecmd11
	.word	LinkPartnerHandlecmd12
	.word	LinkPartnerHandleBallThrow
	.word	LinkPartnerHandlePuase
	.word	LinkPartnerHandleMoveAnimation
	.word	LinkPartnerHandlePrintString
	.word	LinkPartnerHandlePrintStringPlayerOnly
	.word	LinkPartnerHandlecmd18
	.word	LinkPartnerHandlecmd19
	.word	LinkPartnerHandlecmd20
	.word	LinkPartnerHandleOpenBag
	.word	LinkPartnerHandlecmd22
	.word	LinkPartnerHandlecmd23
	.word	LinkPartnerHandleHealthBarUpdate
	.word	LinkPartnerHandleExpBarUpdate
	.word	LinkPartnerHandleStatusIconUpdate
	.word	LinkPartnerHandleStatusAnimation
	.word	LinkPartnerHandleStatusXor
	.word	LinkPartnerHandlecmd29
	.word	LinkPartnerHandleDMATransfer
	.word	LinkPartnerHandlecmd31
	.word	LinkPartnerHandlecmd32
	.word	LinkPartnerHandlecmd33
	.word	LinkPartnerHandlecmd34
	.word	LinkPartnerHandlecmd35
	.word	LinkPartnerHandlecmd36
	.word	LinkPartnerHandlecmd37
	.word	LinkPartnerHandlecmd38
	.word	LinkPartnerHandlecmd39
	.word	LinkPartnerHandlecmd40
	.word	LinkPartnerHandleHitAnimation
	.word	LinkPartnerHandlecmd42
	.word	LinkPartnerHandleEffectivenessSound
	.word	LinkPartnerHandlecmd44
	.word	LinkPartnerHandleFaintingCry
	.word	LinkPartnerHandleIntroSlide
	.word	LinkPartnerHandleTrainerBallThrow
	.word	LinkPartnerHandlecmd48
	.word	LinkPartnerHandlecmd49
	.word	LinkPartnerHandlecmd50
	.word	LinkPartnerHandleSpriteInvisibility
	.word	LinkPartnerHandleBattleAnimation
	.word	LinkPartnerHandleLinkStandbyMsg
	.word	LinkPartnerHandleResetActionMoveSelection
	.word	LinkPartnerHandlecmd55
	.word	LinkPartnerHandlecmd56
	.size	 gLinkPartnerBufferCommands,228
.text
	.align	2, 0
	.globl	nullsub_74
	.type	 nullsub_74,function
	.thumb_func
nullsub_74:
	bx	lr
.Lfe1:
	.size	 nullsub_74,.Lfe1-nullsub_74
	.align	2, 0
	.globl	SetBankFuncToLinkPartnerBufferRunCommand
	.type	 SetBankFuncToLinkPartnerBufferRunCommand,function
	.thumb_func
SetBankFuncToLinkPartnerBufferRunCommand:
	ldr	r1, .L4
	ldr	r0, .L4+0x4
	ldrb	r0, [r0]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, .L4+0x8
	str	r1, [r0]
	bx	lr
.L5:
	.align	2, 0
.L4:
	.word	gBattleBankFunc
	.word	gActiveBank
	.word	LinkPartnerBufferRunCommand
.Lfe2:
	.size	 SetBankFuncToLinkPartnerBufferRunCommand,.Lfe2-SetBankFuncToLinkPartnerBufferRunCommand
	.align	2, 0
	.globl	LinkPartnerBufferRunCommand
	.type	 LinkPartnerBufferRunCommand,function
	.thumb_func
LinkPartnerBufferRunCommand:
	push	{lr}
	ldr	r2, .L10
	ldr	r1, .L10+0x4
	ldr	r0, .L10+0x8
	ldrb	r3, [r0]
	lsl	r0, r3, #0x2
	add	r0, r0, r1
	ldr	r1, [r2]
	ldr	r0, [r0]
	and	r1, r1, r0
	cmp	r1, #0
	beq	.L7	@cond_branch
	ldr	r0, .L10+0xc
	lsl	r1, r3, #0x9
	add	r1, r1, r0
	ldrb	r0, [r1]
	cmp	r0, #0x38
	bhi	.L8	@cond_branch
	ldr	r0, .L10+0x10
	ldrb	r1, [r1]
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	_call_via_r0
	b	.L7
.L11:
	.align	2, 0
.L10:
	.word	gBattleExecBuffer
	.word	gBitTable
	.word	gActiveBank
	.word	gBattleBufferA
	.word	gLinkPartnerBufferCommands
.L8:
	bl	LinkPartnerBufferExecCompleted
.L7:
	pop	{r0}
	bx	r0
.Lfe3:
	.size	 LinkPartnerBufferRunCommand,.Lfe3-LinkPartnerBufferRunCommand
	.align	2, 0
	.globl	sub_811DAE4
	.type	 sub_811DAE4,function
	.thumb_func
sub_811DAE4:
	push	{lr}
	ldr	r2, .L14
	ldr	r1, .L14+0x4
	ldr	r0, .L14+0x8
	ldrb	r0, [r0]
	add	r0, r0, r1
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r2, r2, #0x1c
	add	r0, r0, r2
	ldr	r1, [r0]
	ldr	r0, .L14+0xc
	cmp	r1, r0
	bne	.L13	@cond_branch
	bl	LinkPartnerBufferExecCompleted
.L13:
	pop	{r0}
	bx	r0
.L15:
	.align	2, 0
.L14:
	.word	gSprites
	.word	gObjectBankIDs
	.word	gActiveBank
	.word	SpriteCallbackDummy
.Lfe4:
	.size	 sub_811DAE4,.Lfe4-sub_811DAE4
	.align	2, 0
	.globl	sub_811DB1C
	.type	 sub_811DB1C,function
	.thumb_func
sub_811DB1C:
	push	{r4, r5, r6, lr}
	ldr	r6, .L18
	ldr	r5, .L18+0x4
	ldr	r4, .L18+0x8
	ldrb	r0, [r4]
	add	r0, r0, r5
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r1, r6, #0
	add	r1, r1, #0x1c
	add	r0, r0, r1
	ldr	r1, [r0]
	ldr	r0, .L18+0xc
	cmp	r1, r0
	bne	.L17	@cond_branch
	mov	r0, #0x0
	bl	nullsub_10
	ldrb	r0, [r4]
	add	r0, r0, r5
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	bl	FreeSpriteOamMatrix
	ldrb	r0, [r4]
	add	r0, r0, r5
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	bl	DestroySprite
	bl	LinkPartnerBufferExecCompleted
.L17:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L19:
	.align	2, 0
.L18:
	.word	gSprites
	.word	gObjectBankIDs
	.word	gActiveBank
	.word	SpriteCallbackDummy
.Lfe5:
	.size	 sub_811DB1C,.Lfe5-sub_811DB1C
	.align	2, 0
	.globl	sub_811DB84
	.type	 sub_811DB84,function
	.thumb_func
sub_811DB84:
	push	{lr}
	ldr	r3, .L22
	ldrb	r0, [r3]
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r2, .L22+0x4
	add	r1, r1, r2
	ldrb	r0, [r1, #0x9]
	sub	r0, r0, #0x1
	strb	r0, [r1, #0x9]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xff
	bne	.L21	@cond_branch
	ldrb	r0, [r3]
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	mov	r0, #0x0
	strb	r0, [r1, #0x9]
	bl	LinkPartnerBufferExecCompleted
.L21:
	pop	{r0}
	bx	r0
.L23:
	.align	2, 0
.L22:
	.word	gActiveBank
	.word	gSharedMem+0x17810
.Lfe6:
	.size	 sub_811DB84,.Lfe6-sub_811DB84
	.align	2, 0
	.globl	sub_811DBC0
	.type	 sub_811DBC0,function
	.thumb_func
sub_811DBC0:
	push	{r4, r5, r6, lr}
	mov	r6, #0x0
	bl	IsDoubleBattle
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L26	@cond_branch
	bl	IsDoubleBattle
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L25	@cond_branch
	ldr	r0, .L33
	ldrh	r1, [r0]
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L25	@cond_branch
.L26:
	ldr	r2, .L33+0x4
	ldr	r1, .L33+0x8
	ldr	r0, .L33+0xc
	ldrb	r0, [r0]
	add	r0, r0, r1
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r2, r2, #0x1c
	add	r0, r0, r2
	ldr	r1, [r0]
	ldr	r0, .L33+0x10
	cmp	r1, r0
	bne	.L28	@cond_branch
	b	.L32
.L34:
	.align	2, 0
.L33:
	.word	gBattleTypeFlags
	.word	gSprites
	.word	gHealthboxIDs
	.word	gActiveBank
	.word	SpriteCallbackDummy
.L25:
	ldr	r2, .L35
	ldr	r5, .L35+0x4
	ldr	r0, .L35+0x8
	ldrb	r3, [r0]
	add	r0, r3, r5
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r4, r2, #0
	add	r4, r4, #0x1c
	add	r0, r0, r4
	ldr	r2, [r0]
	ldr	r0, .L35+0xc
	cmp	r2, r0
	bne	.L28	@cond_branch
	mov	r0, #0x2
	eor	r3, r3, r0
	add	r0, r3, r5
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	ldr	r0, [r0]
	cmp	r0, r2
	bne	.L28	@cond_branch
.L32:
	mov	r6, #0x1
.L28:
	bl	IsCryPlayingOrClearCrySongs
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L30	@cond_branch
	mov	r6, #0x0
.L30:
	cmp	r6, #0
	beq	.L31	@cond_branch
	ldr	r2, .L35+0x8
	ldrb	r1, [r2]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L35+0x10
	add	r0, r0, r1
	mov	r1, #0x3
	strb	r1, [r0, #0x9]
	ldr	r1, .L35+0x14
	ldrb	r0, [r2]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, .L35+0x18
	str	r1, [r0]
.L31:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L36:
	.align	2, 0
.L35:
	.word	gSprites
	.word	gHealthboxIDs
	.word	gActiveBank
	.word	SpriteCallbackDummy
	.word	gSharedMem+0x17810
	.word	gBattleBankFunc
	.word	sub_811DB84
.Lfe7:
	.size	 sub_811DBC0,.Lfe7-sub_811DBC0
	.align	2, 0
	.globl	sub_811DCA0
	.type	 sub_811DCA0,function
	.thumb_func
sub_811DCA0:
	push	{r4, r5, r6, r7, lr}
	ldr	r6, .L41
	ldrb	r2, [r6]
	lsl	r0, r2, #0x1
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	ldr	r4, .L41+0x4
	add	r3, r0, r4
	ldrb	r1, [r3]
	mov	r5, #0x8
	add	r0, r5, #0
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L38	@cond_branch
	mov	r7, #0x2
	add	r1, r7, #0
	eor	r1, r1, r2
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	ldrb	r1, [r0]
	add	r0, r5, #0
	and	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0
	bne	.L38	@cond_branch
	ldrb	r0, [r3, #0x9]
	add	r0, r0, #0x1
	strb	r0, [r3, #0x9]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L38	@cond_branch
	ldrb	r0, [r6]
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r4
	strb	r2, [r1, #0x9]
	bl	IsDoubleBattle
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L40	@cond_branch
	ldr	r0, .L41+0x8
	ldrh	r1, [r0]
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L40	@cond_branch
	ldr	r1, .L41+0xc
	ldrb	r0, [r6]
	eor	r0, r0, r7
	add	r0, r0, r1
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L41+0x10
	add	r0, r0, r1
	bl	DestroySprite
	ldr	r4, .L41+0x14
	ldrb	r0, [r6]
	add	r1, r7, #0
	eor	r1, r1, r0
	add	r0, r1, r4
	ldrb	r0, [r0]
	ldr	r2, .L41+0x18
	lsl	r1, r1, #0x1
	add	r1, r1, r2
	ldrh	r2, [r1]
	mov	r1, #0x64
	mul	r1, r1, r2
	ldr	r2, .L41+0x1c
	add	r1, r1, r2
	mov	r2, #0x0
	bl	sub_8045A5C
	ldrb	r0, [r6]
	eor	r0, r0, r7
	bl	sub_804777C
	ldrb	r0, [r6]
	eor	r0, r0, r7
	add	r0, r0, r4
	ldrb	r0, [r0]
	bl	sub_8043DFC
.L40:
	ldr	r1, .L41+0xc
	ldr	r4, .L41
	ldrb	r0, [r4]
	add	r0, r0, r1
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L41+0x10
	add	r0, r0, r1
	bl	DestroySprite
	ldr	r5, .L41+0x14
	ldrb	r1, [r4]
	add	r0, r1, r5
	ldrb	r0, [r0]
	ldr	r2, .L41+0x18
	lsl	r1, r1, #0x1
	add	r1, r1, r2
	ldrh	r2, [r1]
	mov	r1, #0x64
	mul	r1, r1, r2
	ldr	r2, .L41+0x1c
	add	r1, r1, r2
	mov	r2, #0x0
	bl	sub_8045A5C
	ldrb	r0, [r4]
	bl	sub_804777C
	ldrb	r0, [r4]
	add	r0, r0, r5
	ldrb	r0, [r0]
	bl	sub_8043DFC
	ldr	r2, .L41+0x20
	ldrb	r1, [r2, #0x9]
	mov	r0, #0x2
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2, #0x9]
	ldr	r1, .L41+0x24
	ldrb	r0, [r4]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, .L41+0x28
	str	r1, [r0]
.L38:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L42:
	.align	2, 0
.L41:
	.word	gActiveBank
	.word	gSharedMem+0x17810
	.word	gBattleTypeFlags
	.word	gUnknown_0300434C
	.word	gSprites
	.word	gHealthboxIDs
	.word	gBattlePartyID
	.word	gPlayerParty
	.word	gSharedMem+0x17840
	.word	gBattleBankFunc
	.word	sub_811DBC0
.Lfe8:
	.size	 sub_811DCA0,.Lfe8-sub_811DCA0
	.align	2, 0
	.globl	sub_811DDE8
	.type	 sub_811DDE8,function
	.thumb_func
sub_811DDE8:
	push	{lr}
	ldr	r2, .L45
	ldr	r1, .L45+0x4
	ldr	r0, .L45+0x8
	ldrb	r0, [r0]
	add	r0, r0, r1
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r1, r0, r2
	add	r0, r1, #0
	add	r0, r0, #0x3f
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1b
	cmp	r0, #0
	bge	.L44	@cond_branch
	mov	r2, #0x24
	ldrsh	r0, [r1, r2]
	cmp	r0, #0
	bne	.L44	@cond_branch
	bl	LinkPartnerBufferExecCompleted
.L44:
	pop	{r0}
	bx	r0
.L46:
	.align	2, 0
.L45:
	.word	gSprites
	.word	gObjectBankIDs
	.word	gActiveBank
.Lfe9:
	.size	 sub_811DDE8,.Lfe9-sub_811DDE8
	.align	2, 0
	.globl	bx_t3_healthbar_update
	.type	 bx_t3_healthbar_update,function
	.thumb_func
bx_t3_healthbar_update:
	push	{r4, r5, r6, lr}
	ldr	r5, .L50
	ldrb	r0, [r5]
	ldr	r6, .L50+0x4
	add	r1, r0, r6
	ldrb	r1, [r1]
	mov	r2, #0x0
	mov	r3, #0x0
	bl	sub_8045C78
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	ldrb	r0, [r5]
	add	r0, r0, r6
	ldrb	r0, [r0]
	bl	sub_8043DFC
	lsl	r4, r4, #0x10
	asr	r1, r4, #0x10
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L48	@cond_branch
	ldrb	r0, [r5]
	add	r0, r0, r6
	ldrb	r0, [r0]
	mov	r2, #0x0
	bl	sub_80440EC
	b	.L49
.L51:
	.align	2, 0
.L50:
	.word	gActiveBank
	.word	gHealthboxIDs
.L48:
	ldr	r2, .L52
	ldrb	r1, [r5]
	lsl	r0, r1, #0x1
	add	r0, r0, r2
	ldrh	r2, [r0]
	mov	r0, #0x64
	mul	r0, r0, r2
	ldr	r2, .L52+0x4
	add	r0, r0, r2
	bl	sub_80324F8
	bl	LinkPartnerBufferExecCompleted
.L49:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L53:
	.align	2, 0
.L52:
	.word	gBattlePartyID
	.word	gPlayerParty
.Lfe10:
	.size	 bx_t3_healthbar_update,.Lfe10-bx_t3_healthbar_update
	.align	2, 0
	.globl	sub_811DE98
	.type	 sub_811DE98,function
	.thumb_func
sub_811DE98:
	push	{r4, r5, r6, lr}
	ldr	r6, .L56
	ldr	r5, .L56+0x4
	ldr	r4, .L56+0x8
	ldrb	r2, [r4]
	add	r0, r2, r5
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	mov	r3, #0x22
	ldrsh	r1, [r0, r3]
	mov	r3, #0x26
	ldrsh	r0, [r0, r3]
	add	r1, r1, r0
	cmp	r1, #0xa0
	ble	.L55	@cond_branch
	ldr	r1, .L56+0xc
	lsl	r0, r2, #0x1
	add	r0, r0, r1
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L56+0x10
	add	r0, r0, r1
	mov	r1, #0xb
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	nullsub_9
	ldrb	r0, [r4]
	add	r0, r0, r5
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	ldrb	r0, [r0, #0x3]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1b
	bl	FreeOamMatrix
	ldrb	r0, [r4]
	add	r0, r0, r5
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	bl	DestroySprite
	ldr	r1, .L56+0x14
	ldrb	r0, [r4]
	add	r0, r0, r1
	ldrb	r0, [r0]
	bl	sub_8043DB0
	bl	LinkPartnerBufferExecCompleted
.L55:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L57:
	.align	2, 0
.L56:
	.word	gSprites
	.word	gObjectBankIDs
	.word	gActiveBank
	.word	gBattlePartyID
	.word	gPlayerParty
	.word	gHealthboxIDs
.Lfe11:
	.size	 sub_811DE98,.Lfe11-sub_811DE98
	.align	2, 0
	.globl	sub_811DF34
	.type	 sub_811DF34,function
	.thumb_func
sub_811DF34:
	push	{r4, r5, r6, lr}
	ldr	r6, .L60
	ldrb	r2, [r6]
	lsl	r0, r2, #0x1
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	ldr	r1, .L60+0x4
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L59	@cond_branch
	ldr	r5, .L60+0x8
	add	r0, r2, r5
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r4, .L60+0xc
	add	r0, r0, r4
	bl	FreeSpriteOamMatrix
	ldrb	r0, [r6]
	add	r0, r0, r5
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	bl	DestroySprite
	ldr	r1, .L60+0x10
	ldrb	r0, [r6]
	add	r0, r0, r1
	ldrb	r0, [r0]
	bl	sub_8043DB0
	bl	LinkPartnerBufferExecCompleted
.L59:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L61:
	.align	2, 0
.L60:
	.word	gActiveBank
	.word	gSharedMem+0x17810
	.word	gObjectBankIDs
	.word	gSprites
	.word	gHealthboxIDs
.Lfe12:
	.size	 sub_811DF34,.Lfe12-sub_811DF34
	.align	2, 0
	.globl	sub_811DFA0
	.type	 sub_811DFA0,function
	.thumb_func
sub_811DFA0:
	push	{lr}
	ldr	r0, .L64
	ldrh	r0, [r0, #0x16]
	cmp	r0, #0
	bne	.L63	@cond_branch
	bl	LinkPartnerBufferExecCompleted
.L63:
	pop	{r0}
	bx	r0
.L65:
	.align	2, 0
.L64:
	.word	gUnknown_03004210
.Lfe13:
	.size	 sub_811DFA0,.Lfe13-sub_811DFA0
	.align	2, 0
	.globl	bx_blink_t3
	.type	 bx_blink_t3,function
	.thumb_func
bx_blink_t3:
	push	{r4, lr}
	ldr	r1, .L70
	ldr	r0, .L70+0x4
	ldrb	r0, [r0]
	add	r0, r0, r1
	ldrb	r1, [r0]
	ldr	r2, .L70+0x8
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r4, r0, r2
	mov	r1, #0x30
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x20
	bne	.L67	@cond_branch
	mov	r3, #0x0
	mov	r0, #0x0
	strh	r0, [r4, #0x30]
	add	r2, r4, #0
	add	r2, r2, #0x3e
	ldrb	r1, [r2]
	sub	r0, r0, #0x5
	and	r0, r0, r1
	strb	r0, [r2]
	ldr	r0, .L70+0xc
	strb	r3, [r0]
	bl	LinkPartnerBufferExecCompleted
	b	.L68
.L71:
	.align	2, 0
.L70:
	.word	gObjectBankIDs
	.word	gActiveBank
	.word	gSprites
	.word	gDoingBattleAnim
.L67:
	ldrh	r0, [r4, #0x30]
	mov	r1, #0x3
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L69	@cond_branch
	add	r3, r4, #0
	add	r3, r3, #0x3e
	ldrb	r2, [r3]
	lsl	r0, r2, #0x1d
	lsr	r0, r0, #0x1f
	mov	r1, #0x1
	eor	r1, r1, r0
	lsl	r1, r1, #0x2
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r3]
.L69:
	ldrh	r0, [r4, #0x30]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x30]
.L68:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe14:
	.size	 bx_blink_t3,.Lfe14-bx_blink_t3
	.align	2, 0
	.globl	sub_811E034
	.type	 sub_811E034,function
	.thumb_func
sub_811E034:
	push	{r4, lr}
	ldr	r2, .L75
	ldr	r0, .L75+0x4
	ldr	r4, .L75+0x8
	ldrb	r3, [r4]
	add	r0, r3, r0
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r2, r2, #0x1c
	add	r0, r0, r2
	ldr	r1, [r0]
	ldr	r0, .L75+0xc
	cmp	r1, r0
	bne	.L73	@cond_branch
	lsl	r0, r3, #0x2
	ldr	r1, .L75+0x10
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0x4
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L74	@cond_branch
	add	r0, r3, #0
	add	r1, r3, #0
	add	r2, r3, #0
	mov	r3, #0x6
	bl	move_anim_start_t4
.L74:
	ldr	r0, .L75+0x14
	ldrb	r1, [r4]
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	ldr	r0, .L75+0x18
	str	r0, [r1]
.L73:
	pop	{r4}
	pop	{r0}
	bx	r0
.L76:
	.align	2, 0
.L75:
	.word	gSprites
	.word	gHealthboxIDs
	.word	gActiveBank
	.word	SpriteCallbackDummy
	.word	gSharedMem+0x17800
	.word	gBattleBankFunc
	.word	sub_811E0A0
.Lfe15:
	.size	 sub_811E034,.Lfe15-sub_811E034
	.align	2, 0
	.globl	sub_811E0A0
	.type	 sub_811E0A0,function
	.thumb_func
sub_811E0A0:
	push	{lr}
	ldr	r0, .L79
	ldrb	r1, [r0]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L79+0x4
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L78	@cond_branch
	bl	LinkPartnerBufferExecCompleted
.L78:
	pop	{r0}
	bx	r0
.L80:
	.align	2, 0
.L79:
	.word	gActiveBank
	.word	gSharedMem+0x17810
.Lfe16:
	.size	 sub_811E0A0,.Lfe16-sub_811E0A0
	.align	2, 0
	.globl	sub_811E0CC
	.type	 sub_811E0CC,function
	.thumb_func
sub_811E0CC:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	ldr	r7, .L83
	ldrb	r1, [r7]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r3, .L83+0x4
	add	r2, r0, r3
	ldrb	r1, [r2, #0x1]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L82	@cond_branch
	ldrb	r1, [r2]
	mov	r0, #0x7f
	and	r0, r0, r1
	strb	r0, [r2]
	ldrb	r0, [r7]
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r3
	ldrb	r2, [r1, #0x1]
	mov	r0, #0x2
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r1, #0x1]
	ldr	r4, .L83+0x8
	add	r0, r4, #0
	bl	FreeSpriteTilesByTag
	add	r0, r4, #0
	bl	FreeSpritePaletteByTag
	ldr	r0, .L83+0xc
	mov	r1, #0xa
	bl	CreateTask
	ldr	r0, .L83+0x10
	mov	r8, r0
	ldrb	r1, [r7]
	lsl	r0, r1, #0x1
	add	r0, r0, r8
	ldrh	r0, [r0]
	mov	r6, #0x64
	mul	r0, r0, r6
	ldr	r5, .L83+0x14
	add	r0, r0, r5
	bl	sub_80324F8
	ldr	r1, .L83+0x18
	ldrb	r0, [r7]
	add	r0, r0, r1
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L83+0x1c
	add	r0, r0, r1
	mov	r1, #0x0
	bl	StartSpriteAnim
	ldr	r4, .L83+0x20
	ldrb	r1, [r7]
	add	r0, r1, r4
	ldrb	r0, [r0]
	lsl	r1, r1, #0x1
	add	r1, r1, r8
	ldrh	r1, [r1]
	mul	r1, r1, r6
	add	r1, r1, r5
	mov	r2, #0x0
	bl	sub_8045A5C
	ldrb	r0, [r7]
	bl	sub_804777C
	ldrb	r0, [r7]
	add	r0, r0, r4
	ldrb	r0, [r0]
	bl	sub_8043DFC
	ldrb	r0, [r7]
	bl	sub_8031F88
	ldr	r1, .L83+0x24
	ldrb	r0, [r7]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, .L83+0x28
	str	r1, [r0]
.L82:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L84:
	.align	2, 0
.L83:
	.word	gActiveBank
	.word	gSharedMem+0x17810
	.word	0x27f9
	.word	c3_0802FDF4
	.word	gBattlePartyID
	.word	gPlayerParty
	.word	gObjectBankIDs
	.word	gSprites
	.word	gHealthboxIDs
	.word	gBattleBankFunc
	.word	sub_811E034
.Lfe17:
	.size	 sub_811E0CC,.Lfe17-sub_811E0CC
	.align	2, 0
	.globl	sub_811E1BC
	.type	 sub_811E1BC,function
	.thumb_func
sub_811E1BC:
	push	{r4, r5, r6, lr}
	ldr	r4, .L88
	ldrb	r2, [r4]
	lsl	r3, r2, #0x1
	add	r0, r3, r2
	lsl	r0, r0, #0x2
	ldr	r6, .L88+0x4
	add	r0, r0, r6
	ldrb	r1, [r0]
	mov	r0, #0x88
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L86	@cond_branch
	ldr	r0, .L88+0x8
	add	r0, r3, r0
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r1, r1, r0
	ldr	r0, .L88+0xc
	add	r1, r1, r0
	add	r0, r2, #0
	bl	sub_8141828
.L86:
	ldr	r5, .L88+0x10
	ldr	r0, .L88+0x14
	ldrb	r2, [r4]
	add	r0, r2, r0
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r3, r0, #0x2
	add	r0, r5, #0
	add	r0, r0, #0x1c
	add	r0, r3, r0
	ldr	r1, [r0]
	ldr	r0, .L88+0x18
	cmp	r1, r0
	bne	.L87	@cond_branch
	lsl	r0, r2, #0x1
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	ldrb	r1, [r0]
	mov	r0, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L87	@cond_branch
	add	r0, r3, r5
	bl	DestroySprite
	ldr	r1, .L88+0x1c
	ldrb	r0, [r4]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, .L88+0x20
	str	r1, [r0]
.L87:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L89:
	.align	2, 0
.L88:
	.word	gActiveBank
	.word	gSharedMem+0x17810
	.word	gBattlePartyID
	.word	gPlayerParty
	.word	gSprites
	.word	gUnknown_0300434C
	.word	SpriteCallbackDummy
	.word	gBattleBankFunc
	.word	sub_811E0CC
.Lfe18:
	.size	 sub_811E1BC,.Lfe18-sub_811E1BC
	.align	2, 0
	.globl	sub_811E258
	.type	 sub_811E258,function
	.thumb_func
sub_811E258:
	push	{lr}
	ldr	r0, .L92
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L91	@cond_branch
	mov	r0, #0x5a
	bl	m4aSongNumStop
	ldr	r3, .L92+0x4
	ldr	r0, .L92+0x8
	add	r2, r3, r0
	ldrb	r1, [r2]
	mov	r0, #0x3
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2]
	ldr	r0, .L92+0xc
	ldr	r0, [r0]
	str	r0, [r3]
	ldr	r0, .L92+0x10
	bl	SetMainCallback2
.L91:
	pop	{r0}
	bx	r0
.L93:
	.align	2, 0
.L92:
	.word	gReceivedRemoteLinkPlayers
	.word	gMain
	.word	0x43d
	.word	gPreBattleCallback1
	.word	c2_8011A1C
.Lfe19:
	.size	 sub_811E258,.Lfe19-sub_811E258
	.align	2, 0
	.globl	sub_811E29C
	.type	 sub_811E29C,function
	.thumb_func
sub_811E29C:
	push	{lr}
	ldr	r0, .L98
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L95	@cond_branch
	ldr	r0, .L98+0x4
	ldrh	r1, [r0]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L96	@cond_branch
	bl	sub_800832C
	ldr	r1, .L98+0x8
	ldr	r0, .L98+0xc
	ldrb	r0, [r0]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, .L98+0x10
	str	r1, [r0]
	b	.L95
.L99:
	.align	2, 0
.L98:
	.word	gPaletteFade
	.word	gBattleTypeFlags
	.word	gBattleBankFunc
	.word	gActiveBank
	.word	sub_811E258
.L96:
	mov	r0, #0x5a
	bl	m4aSongNumStop
	ldr	r2, .L100
	ldr	r0, .L100+0x4
	add	r3, r2, r0
	ldrb	r1, [r3]
	mov	r0, #0x3
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r3]
	ldr	r0, .L100+0x8
	ldr	r0, [r0]
	str	r0, [r2]
	ldr	r0, [r2, #0x8]
	bl	SetMainCallback2
.L95:
	pop	{r0}
	bx	r0
.L101:
	.align	2, 0
.L100:
	.word	gMain
	.word	0x43d
	.word	gPreBattleCallback1
.Lfe20:
	.size	 sub_811E29C,.Lfe20-sub_811E29C
	.align	2, 0
	.globl	LinkPartnerBufferExecCompleted
	.type	 LinkPartnerBufferExecCompleted,function
	.thumb_func
LinkPartnerBufferExecCompleted:
	push	{r4, lr}
	add	sp, sp, #0xfffffffc
	ldr	r1, .L105
	ldr	r4, .L105+0x4
	ldrb	r0, [r4]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, .L105+0x8
	str	r1, [r0]
	ldr	r0, .L105+0xc
	ldrh	r1, [r0]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L103	@cond_branch
	bl	GetMultiplayerId
	mov	r1, sp
	strb	r0, [r1]
	mov	r0, #0x2
	mov	r1, #0x4
	mov	r2, sp
	bl	PrepareBufferDataTransferLink
	ldr	r1, .L105+0x10
	ldrb	r0, [r4]
	lsl	r0, r0, #0x9
	add	r0, r0, r1
	mov	r1, #0x38
	strb	r1, [r0]
	b	.L104
.L106:
	.align	2, 0
.L105:
	.word	gBattleBankFunc
	.word	gActiveBank
	.word	LinkPartnerBufferRunCommand
	.word	gBattleTypeFlags
	.word	gBattleBufferA
.L103:
	ldr	r2, .L107
	ldr	r1, .L107+0x4
	ldrb	r0, [r4]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	ldr	r0, [r2]
	bic	r0, r0, r1
	str	r0, [r2]
.L104:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L108:
	.align	2, 0
.L107:
	.word	gBattleExecBuffer
	.word	gBitTable
.Lfe21:
	.size	 LinkPartnerBufferExecCompleted,.Lfe21-LinkPartnerBufferExecCompleted
	.align	2, 0
	.globl	sub_811E38C
	.type	 sub_811E38C,function
	.thumb_func
sub_811E38C:
	push	{lr}
	ldr	r0, .L111
	ldrb	r1, [r0]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L111+0x4
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L110	@cond_branch
	bl	LinkPartnerBufferExecCompleted
.L110:
	pop	{r0}
	bx	r0
.L112:
	.align	2, 0
.L111:
	.word	gActiveBank
	.word	gSharedMem+0x17810
.Lfe22:
	.size	 sub_811E38C,.Lfe22-sub_811E38C
	.align	2, 0
	.globl	sub_811E3B8
	.type	 sub_811E3B8,function
	.thumb_func
sub_811E3B8:
	push	{lr}
	ldr	r0, .L115
	ldrb	r1, [r0]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L115+0x4
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0x20
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L114	@cond_branch
	bl	LinkPartnerBufferExecCompleted
.L114:
	pop	{r0}
	bx	r0
.L116:
	.align	2, 0
.L115:
	.word	gActiveBank
	.word	gSharedMem+0x17810
.Lfe23:
	.size	 sub_811E3B8,.Lfe23-sub_811E3B8
	.align	2, 0
	.globl	LinkPartnerHandleGetAttributes
	.type	 LinkPartnerHandleGetAttributes,function
	.thumb_func
LinkPartnerHandleGetAttributes:
	push	{r4, r5, r6, lr}
	add	sp, sp, #0xffffff00
	mov	r6, #0x0
	ldr	r1, .L126
	ldr	r0, .L126+0x4
	ldrb	r2, [r0]
	lsl	r0, r2, #0x9
	add	r1, r1, #0x2
	add	r1, r0, r1
	ldrb	r0, [r1]
	cmp	r0, #0
	bne	.L118	@cond_branch
	ldr	r0, .L126+0x8
	lsl	r1, r2, #0x1
	add	r1, r1, r0
	ldrb	r0, [r1]
	mov	r1, sp
	bl	dp01_getattr_by_ch1_for_player_pokemon
	add	r6, r0, #0
	b	.L119
.L127:
	.align	2, 0
.L126:
	.word	gBattleBufferA
	.word	gActiveBank
	.word	gBattlePartyID
.L118:
	ldrb	r4, [r1]
	mov	r5, #0x0
.L123:
	mov	r0, #0x1
	and	r0, r0, r4
	cmp	r0, #0
	beq	.L124	@cond_branch
	lsl	r0, r5, #0x18
	lsr	r0, r0, #0x18
	mov	r2, sp
	add	r1, r2, r6
	bl	dp01_getattr_by_ch1_for_player_pokemon
	add	r6, r6, r0
.L124:
	lsr	r4, r4, #0x1
	add	r5, r5, #0x1
	cmp	r5, #0x5
	ble	.L123	@cond_branch
.L119:
	lsl	r1, r6, #0x10
	lsr	r1, r1, #0x10
	mov	r0, #0x1
	mov	r2, sp
	bl	Emitcmd29
	bl	LinkPartnerBufferExecCompleted
	add	sp, sp, #0x100
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe24:
	.size	 LinkPartnerHandleGetAttributes,.Lfe24-LinkPartnerHandleGetAttributes
	.align	2, 0
	.globl	dp01_getattr_by_ch1_for_player_pokemon
	.type	 dp01_getattr_by_ch1_for_player_pokemon,function
	.thumb_func
dp01_getattr_by_ch1_for_player_pokemon:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #0xffffff70
	add	r7, r1, #0
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r6, #0x0
	ldr	r2, .L217
	ldr	r3, .L217+0x4
	ldrb	r0, [r3]
	lsl	r0, r0, #0x9
	add	r1, r2, #0x1
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x3b
	bls	.LCB1595
	bl	.L129	@far jump
.LCB1595:
	lsl	r0, r0, #0x2
	ldr	r1, .L217+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L218:
	.align	2, 0
.L217:
	.word	gBattleBufferA
	.word	gActiveBank
	.word	.L211
	.align	2, 0
	.align	2, 0
.L211:
	.word	.L130
	.word	.L141
	.word	.L142
	.word	.L143
	.word	.L157
	.word	.L157
	.word	.L157
	.word	.L157
	.word	.L158
	.word	.L167
	.word	.L167
	.word	.L167
	.word	.L167
	.word	.L129
	.word	.L129
	.word	.L129
	.word	.L129
	.word	.L168
	.word	.L169
	.word	.L170
	.word	.L171
	.word	.L172
	.word	.L173
	.word	.L174
	.word	.L175
	.word	.L176
	.word	.L177
	.word	.L178
	.word	.L179
	.word	.L180
	.word	.L181
	.word	.L182
	.word	.L183
	.word	.L184
	.word	.L185
	.word	.L186
	.word	.L187
	.word	.L188
	.word	.L189
	.word	.L190
	.word	.L191
	.word	.L192
	.word	.L193
	.word	.L194
	.word	.L195
	.word	.L196
	.word	.L197
	.word	.L198
	.word	.L199
	.word	.L200
	.word	.L201
	.word	.L202
	.word	.L203
	.word	.L204
	.word	.L205
	.word	.L206
	.word	.L207
	.word	.L208
	.word	.L209
	.word	.L210
.L130:
	mov	r0, #0x64
	mov	r4, r5
	mul	r4, r4, r0
	ldr	r0, .L219
	add	r4, r4, r0
	add	r0, r4, #0
	mov	r1, #0xb
	bl	GetMonData
	mov	r1, sp
	strh	r0, [r1]
	add	r0, r4, #0
	mov	r1, #0xc
	bl	GetMonData
	mov	r1, sp
	strh	r0, [r1, #0x2e]
	mov	r6, #0x0
	add	r0, sp, #0x24
	mov	r9, r0
	mov	r1, #0x3b
	add	r1, r1, sp
	mov	sl, r1
	mov	r2, sp
	add	r2, r2, #0x2b
	str	r2, [sp, #0x80]
	mov	r0, sp
	add	r0, r0, #0x2a
	str	r0, [sp, #0x7c]
	mov	r1, sp
	add	r1, r1, #0x68
	str	r1, [sp, #0x8c]
	add	r2, r2, #0x5
	str	r2, [sp, #0x84]
	add	r0, r0, #0x12
	str	r0, [sp, #0x88]
	mov	r8, r4
	add	r4, sp, #0xc
.L134:
	add	r1, r6, #0
	add	r1, r1, #0xd
	mov	r0, r8
	bl	GetMonData
	strh	r0, [r4]
	add	r1, r6, #0
	add	r1, r1, #0x11
	mov	r0, r8
	bl	GetMonData
	mov	r2, r9
	add	r1, r2, r6
	strb	r0, [r1]
	add	r4, r4, #0x2
	add	r6, r6, #0x1
	cmp	r6, #0x3
	ble	.L134	@cond_branch
	mov	r0, #0x64
	mov	r4, r5
	mul	r4, r4, r0
	ldr	r0, .L219
	add	r4, r4, r0
	add	r0, r4, #0
	mov	r1, #0x15
	bl	GetMonData
	mov	r1, sl
	strb	r0, [r1]
	add	r0, r4, #0
	mov	r1, #0x20
	bl	GetMonData
	ldr	r2, [sp, #0x80]
	strb	r0, [r2]
	add	r0, r4, #0
	mov	r1, #0x19
	bl	GetMonData
	str	r0, [sp, #0x44]
	add	r0, r4, #0
	mov	r1, #0x27
	bl	GetMonData
	mov	r3, sp
	mov	r5, #0x1f
	and	r0, r0, r5
	ldrb	r2, [r3, #0x14]
	mov	r1, #0x20
	neg	r1, r1
	and	r1, r1, r2
	orr	r1, r1, r0
	strb	r1, [r3, #0x14]
	add	r0, r4, #0
	mov	r1, #0x28
	bl	GetMonData
	mov	r3, sp
	mov	r6, #0x1f
	and	r0, r0, r6
	lsl	r0, r0, #0x5
	ldrh	r2, [r3, #0x14]
	ldr	r1, .L219+0x4
	and	r1, r1, r2
	orr	r1, r1, r0
	strh	r1, [r3, #0x14]
	add	r0, r4, #0
	mov	r1, #0x29
	bl	GetMonData
	mov	r3, sp
	and	r0, r0, r5
	lsl	r0, r0, #0x2
	ldrb	r2, [r3, #0x15]
	mov	r1, #0x7d
	neg	r1, r1
	and	r1, r1, r2
	orr	r1, r1, r0
	strb	r1, [r3, #0x15]
	add	r0, r4, #0
	mov	r1, #0x2a
	bl	GetMonData
	mov	r1, #0x1f
	and	r1, r1, r0
	lsl	r1, r1, #0xf
	ldr	r0, [sp, #0x14]
	ldr	r2, .L219+0x8
	and	r0, r0, r2
	orr	r0, r0, r1
	str	r0, [sp, #0x14]
	add	r0, r4, #0
	mov	r1, #0x2b
	bl	GetMonData
	mov	r3, sp
	and	r0, r0, r6
	lsl	r0, r0, #0x4
	ldrh	r2, [r3, #0x16]
	ldr	r1, .L219+0xc
	and	r1, r1, r2
	orr	r1, r1, r0
	strh	r1, [r3, #0x16]
	add	r0, r4, #0
	mov	r1, #0x2c
	bl	GetMonData
	mov	r3, sp
	and	r0, r0, r5
	lsl	r0, r0, #0x1
	ldrb	r2, [r3, #0x17]
	mov	r1, #0x3f
	neg	r1, r1
	and	r1, r1, r2
	orr	r1, r1, r0
	strb	r1, [r3, #0x17]
	add	r0, r4, #0
	mov	r1, #0x0
	bl	GetMonData
	str	r0, [sp, #0x48]
	add	r0, r4, #0
	mov	r1, #0x37
	bl	GetMonData
	str	r0, [sp, #0x4c]
	add	r0, r4, #0
	mov	r1, #0x38
	bl	GetMonData
	ldr	r1, [sp, #0x7c]
	strb	r0, [r1]
	add	r0, r4, #0
	mov	r1, #0x39
	bl	GetMonData
	mov	r1, sp
	strh	r0, [r1, #0x28]
	add	r0, r4, #0
	mov	r1, #0x3a
	bl	GetMonData
	mov	r1, sp
	strh	r0, [r1, #0x2c]
	add	r0, r4, #0
	mov	r1, #0x3b
	bl	GetMonData
	mov	r1, sp
	strh	r0, [r1, #0x2]
	add	r0, r4, #0
	mov	r1, #0x3c
	bl	GetMonData
	mov	r1, sp
	strh	r0, [r1, #0x4]
	add	r0, r4, #0
	mov	r1, #0x3d
	bl	GetMonData
	mov	r1, sp
	strh	r0, [r1, #0x6]
	add	r0, r4, #0
	mov	r1, #0x3e
	bl	GetMonData
	mov	r1, sp
	strh	r0, [r1, #0x8]
	add	r0, r4, #0
	mov	r1, #0x3f
	bl	GetMonData
	mov	r1, sp
	strh	r0, [r1, #0xa]
	add	r0, r4, #0
	mov	r1, #0x2d
	bl	GetMonData
	mov	r3, sp
	mov	r1, #0x1
	and	r0, r0, r1
	lsl	r0, r0, #0x6
	ldrb	r2, [r3, #0x17]
	mov	r1, #0x41
	neg	r1, r1
	and	r1, r1, r2
	orr	r1, r1, r0
	strb	r1, [r3, #0x17]
	add	r0, r4, #0
	mov	r1, #0x2e
	bl	GetMonData
	mov	r3, sp
	lsl	r0, r0, #0x7
	ldrb	r2, [r3, #0x17]
	mov	r1, #0x7f
	and	r1, r1, r2
	orr	r1, r1, r0
	strb	r1, [r3, #0x17]
	add	r0, r4, #0
	mov	r1, #0x1
	bl	GetMonData
	str	r0, [sp, #0x54]
	add	r0, r4, #0
	mov	r1, #0x2
	ldr	r2, [sp, #0x8c]
	bl	GetMonData
	ldr	r0, [sp, #0x84]
	ldr	r1, [sp, #0x8c]
	bl	StringCopy10
	add	r0, r4, #0
	mov	r1, #0x7
	ldr	r2, [sp, #0x88]
	bl	GetMonData
	mov	r2, sp
	mov	r6, #0x0
.L139:
	add	r0, r7, r6
	add	r1, r2, r6
	ldrb	r1, [r1]
	strb	r1, [r0]
	add	r6, r6, #0x1
	cmp	r6, #0x57
	bls	.L139	@cond_branch
	b	.L129
.L220:
	.align	2, 0
.L219:
	.word	gPlayerParty
	.word	0xfffffc1f
	.word	0xfff07fff
	.word	0xfffffe0f
.L141:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L221
	add	r0, r0, r1
	mov	r1, #0xb
	b	.L213
.L222:
	.align	2, 0
.L221:
	.word	gPlayerParty
.L142:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L223
	add	r0, r0, r1
	mov	r1, #0xc
	b	.L213
.L224:
	.align	2, 0
.L223:
	.word	gPlayerParty
.L143:
	mov	r6, #0x0
	add	r2, sp, #0x58
	mov	r9, r2
	add	r0, sp, #0x60
	mov	sl, r0
	mov	r0, #0x64
	mov	r1, r5
	mul	r1, r1, r0
	ldr	r0, .L225
	add	r4, r1, r0
	mov	r8, r9
.L147:
	add	r1, r6, #0
	add	r1, r1, #0xd
	add	r0, r4, #0
	bl	GetMonData
	mov	r1, r8
	strh	r0, [r1]
	add	r1, r6, #0
	add	r1, r1, #0x11
	add	r0, r4, #0
	bl	GetMonData
	mov	r2, sl
	add	r1, r2, r6
	strb	r0, [r1]
	mov	r0, #0x2
	add	r8, r8, r0
	add	r6, r6, #0x1
	cmp	r6, #0x3
	ble	.L147	@cond_branch
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L225
	add	r0, r0, r1
	mov	r1, #0x15
	bl	GetMonData
	mov	r1, r9
	strb	r0, [r1, #0xc]
	mov	r2, r9
	mov	r6, #0x0
.L152:
	add	r0, r7, r6
	add	r1, r2, r6
	ldrb	r1, [r1]
	strb	r1, [r0]
	add	r6, r6, #0x1
	cmp	r6, #0xf
	bls	.L152	@cond_branch
	b	.L129
.L226:
	.align	2, 0
.L225:
	.word	gPlayerParty
.L157:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L227
	add	r0, r0, r1
	ldrb	r1, [r3]
	lsl	r1, r1, #0x9
	add	r2, r2, #0x1
	add	r1, r1, r2
	ldrb	r1, [r1]
	add	r1, r1, #0x9
	b	.L213
.L228:
	.align	2, 0
.L227:
	.word	gPlayerParty
.L158:
	mov	r6, #0x0
	mov	r0, #0x64
	mov	r4, r5
	mul	r4, r4, r0
	ldr	r2, .L229
	mov	r8, r2
.L162:
	add	r1, r6, #0
	add	r1, r1, #0x11
	mov	r2, r8
	add	r0, r4, r2
	bl	GetMonData
	add	r1, r7, r6
	strb	r0, [r1]
	add	r6, r6, #0x1
	cmp	r6, #0x3
	ble	.L162	@cond_branch
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L229
	add	r0, r0, r1
	mov	r1, #0x15
	bl	GetMonData
	add	r1, r7, r6
	strb	r0, [r1]
	add	r6, r6, #0x1
	b	.L129
.L230:
	.align	2, 0
.L229:
	.word	gPlayerParty
.L167:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L231
	add	r0, r0, r1
	ldrb	r1, [r3]
	lsl	r1, r1, #0x9
	add	r2, r2, #0x1
	add	r1, r1, r2
	ldrb	r1, [r1]
	add	r1, r1, #0x8
	b	.L214
.L232:
	.align	2, 0
.L231:
	.word	gPlayerParty
.L168:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L233
	add	r0, r0, r1
	mov	r1, #0x1
	b	.L215
.L234:
	.align	2, 0
.L233:
	.word	gPlayerParty
.L169:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L235
	add	r0, r0, r1
	mov	r1, #0x19
.L215:
	bl	GetMonData
	add	r1, r0, #0
	strb	r1, [r7]
	mov	r0, #0xff
	lsl	r0, r0, #0x8
	and	r0, r0, r1
	lsr	r0, r0, #0x8
	strb	r0, [r7, #0x1]
	mov	r0, #0xff
	lsl	r0, r0, #0x10
	and	r0, r0, r1
	lsr	r0, r0, #0x10
	strb	r0, [r7, #0x2]
	mov	r6, #0x3
	b	.L129
.L236:
	.align	2, 0
.L235:
	.word	gPlayerParty
.L170:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L237
	add	r0, r0, r1
	mov	r1, #0x1a
	b	.L214
.L238:
	.align	2, 0
.L237:
	.word	gPlayerParty
.L171:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L239
	add	r0, r0, r1
	mov	r1, #0x1b
	b	.L214
.L240:
	.align	2, 0
.L239:
	.word	gPlayerParty
.L172:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L241
	add	r0, r0, r1
	mov	r1, #0x1c
	b	.L214
.L242:
	.align	2, 0
.L241:
	.word	gPlayerParty
.L173:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L243
	add	r0, r0, r1
	mov	r1, #0x1d
	b	.L214
.L244:
	.align	2, 0
.L243:
	.word	gPlayerParty
.L174:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L245
	add	r0, r0, r1
	mov	r1, #0x1e
	b	.L214
.L246:
	.align	2, 0
.L245:
	.word	gPlayerParty
.L175:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L247
	add	r0, r0, r1
	mov	r1, #0x1f
	b	.L214
.L248:
	.align	2, 0
.L247:
	.word	gPlayerParty
.L176:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L249
	add	r0, r0, r1
	mov	r1, #0x20
	b	.L214
.L250:
	.align	2, 0
.L249:
	.word	gPlayerParty
.L177:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L251
	add	r0, r0, r1
	mov	r1, #0x22
	b	.L214
.L252:
	.align	2, 0
.L251:
	.word	gPlayerParty
.L178:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L253
	add	r0, r0, r1
	mov	r1, #0x23
	b	.L214
.L254:
	.align	2, 0
.L253:
	.word	gPlayerParty
.L179:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L255
	add	r0, r0, r1
	mov	r1, #0x24
	b	.L214
.L256:
	.align	2, 0
.L255:
	.word	gPlayerParty
.L180:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L257
	add	r0, r0, r1
	mov	r1, #0x25
	b	.L214
.L258:
	.align	2, 0
.L257:
	.word	gPlayerParty
.L181:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L259
	add	r0, r0, r1
	mov	r1, #0x26
	b	.L214
.L260:
	.align	2, 0
.L259:
	.word	gPlayerParty
.L182:
	mov	r0, #0x64
	mov	r4, r5
	mul	r4, r4, r0
	ldr	r0, .L261
	add	r4, r4, r0
	add	r0, r4, #0
	mov	r1, #0x27
	bl	GetMonData
	strb	r0, [r7]
	add	r0, r4, #0
	mov	r1, #0x28
	bl	GetMonData
	strb	r0, [r7, #0x1]
	add	r0, r4, #0
	mov	r1, #0x29
	bl	GetMonData
	strb	r0, [r7, #0x2]
	add	r0, r4, #0
	mov	r1, #0x2a
	bl	GetMonData
	strb	r0, [r7, #0x3]
	add	r0, r4, #0
	mov	r1, #0x2b
	bl	GetMonData
	strb	r0, [r7, #0x4]
	add	r0, r4, #0
	mov	r1, #0x2c
	bl	GetMonData
	strb	r0, [r7, #0x5]
	mov	r6, #0x6
	b	.L129
.L262:
	.align	2, 0
.L261:
	.word	gPlayerParty
.L183:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L263
	add	r0, r0, r1
	mov	r1, #0x27
	b	.L214
.L264:
	.align	2, 0
.L263:
	.word	gPlayerParty
.L184:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L265
	add	r0, r0, r1
	mov	r1, #0x28
	b	.L214
.L266:
	.align	2, 0
.L265:
	.word	gPlayerParty
.L185:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L267
	add	r0, r0, r1
	mov	r1, #0x29
	b	.L214
.L268:
	.align	2, 0
.L267:
	.word	gPlayerParty
.L186:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L269
	add	r0, r0, r1
	mov	r1, #0x2a
	b	.L214
.L270:
	.align	2, 0
.L269:
	.word	gPlayerParty
.L187:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L271
	add	r0, r0, r1
	mov	r1, #0x2b
	b	.L214
.L272:
	.align	2, 0
.L271:
	.word	gPlayerParty
.L188:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L273
	add	r0, r0, r1
	mov	r1, #0x2c
	b	.L214
.L274:
	.align	2, 0
.L273:
	.word	gPlayerParty
.L189:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L275
	add	r0, r0, r1
	mov	r1, #0x0
	b	.L216
.L276:
	.align	2, 0
.L275:
	.word	gPlayerParty
.L190:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L277
	add	r0, r0, r1
	mov	r1, #0x9
	b	.L213
.L278:
	.align	2, 0
.L277:
	.word	gPlayerParty
.L191:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L279
	add	r0, r0, r1
	mov	r1, #0x37
.L216:
	bl	GetMonData
	add	r1, r0, #0
	strb	r1, [r7]
	mov	r0, #0xff
	lsl	r0, r0, #0x8
	and	r0, r0, r1
	lsr	r0, r0, #0x8
	strb	r0, [r7, #0x1]
	mov	r0, #0xff
	lsl	r0, r0, #0x10
	and	r0, r0, r1
	lsr	r0, r0, #0x10
	strb	r0, [r7, #0x2]
	lsr	r0, r1, #0x18
	strb	r0, [r7, #0x3]
	mov	r6, #0x4
	b	.L129
.L280:
	.align	2, 0
.L279:
	.word	gPlayerParty
.L192:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L281
	add	r0, r0, r1
	mov	r1, #0x38
	b	.L214
.L282:
	.align	2, 0
.L281:
	.word	gPlayerParty
.L193:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L283
	add	r0, r0, r1
	mov	r1, #0x39
	b	.L213
.L284:
	.align	2, 0
.L283:
	.word	gPlayerParty
.L194:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L285
	add	r0, r0, r1
	mov	r1, #0x3a
	b	.L213
.L286:
	.align	2, 0
.L285:
	.word	gPlayerParty
.L195:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L287
	add	r0, r0, r1
	mov	r1, #0x3b
	b	.L213
.L288:
	.align	2, 0
.L287:
	.word	gPlayerParty
.L196:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L289
	add	r0, r0, r1
	mov	r1, #0x3c
	b	.L213
.L290:
	.align	2, 0
.L289:
	.word	gPlayerParty
.L197:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L291
	add	r0, r0, r1
	mov	r1, #0x3d
	b	.L213
.L292:
	.align	2, 0
.L291:
	.word	gPlayerParty
.L198:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L293
	add	r0, r0, r1
	mov	r1, #0x3e
	b	.L213
.L294:
	.align	2, 0
.L293:
	.word	gPlayerParty
.L199:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L295
	add	r0, r0, r1
	mov	r1, #0x3f
.L213:
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	strb	r0, [r7]
	lsr	r0, r0, #0x8
	strb	r0, [r7, #0x1]
	mov	r6, #0x2
	b	.L129
.L296:
	.align	2, 0
.L295:
	.word	gPlayerParty
.L200:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L297
	add	r0, r0, r1
	mov	r1, #0x16
	b	.L214
.L298:
	.align	2, 0
.L297:
	.word	gPlayerParty
.L201:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L299
	add	r0, r0, r1
	mov	r1, #0x17
	b	.L214
.L300:
	.align	2, 0
.L299:
	.word	gPlayerParty
.L202:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L301
	add	r0, r0, r1
	mov	r1, #0x18
	b	.L214
.L302:
	.align	2, 0
.L301:
	.word	gPlayerParty
.L203:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L303
	add	r0, r0, r1
	mov	r1, #0x21
	b	.L214
.L304:
	.align	2, 0
.L303:
	.word	gPlayerParty
.L204:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L305
	add	r0, r0, r1
	mov	r1, #0x2f
	b	.L214
.L306:
	.align	2, 0
.L305:
	.word	gPlayerParty
.L205:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L307
	add	r0, r0, r1
	mov	r1, #0x30
	b	.L214
.L308:
	.align	2, 0
.L307:
	.word	gPlayerParty
.L206:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L309
	add	r0, r0, r1
	mov	r1, #0x32
	b	.L214
.L310:
	.align	2, 0
.L309:
	.word	gPlayerParty
.L207:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L311
	add	r0, r0, r1
	mov	r1, #0x33
	b	.L214
.L312:
	.align	2, 0
.L311:
	.word	gPlayerParty
.L208:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L313
	add	r0, r0, r1
	mov	r1, #0x34
	b	.L214
.L314:
	.align	2, 0
.L313:
	.word	gPlayerParty
.L209:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L315
	add	r0, r0, r1
	mov	r1, #0x35
	b	.L214
.L316:
	.align	2, 0
.L315:
	.word	gPlayerParty
.L210:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L317
	add	r0, r0, r1
	mov	r1, #0x36
.L214:
	bl	GetMonData
	strb	r0, [r7]
	mov	r6, #0x1
.L129:
	add	r0, r6, #0
	add	sp, sp, #0x90
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L318:
	.align	2, 0
.L317:
	.word	gPlayerParty
.Lfe25:
	.size	 dp01_getattr_by_ch1_for_player_pokemon,.Lfe25-dp01_getattr_by_ch1_for_player_pokemon
	.align	2, 0
	.globl	LinkPartnerHandlecmd1
	.type	 LinkPartnerHandlecmd1,function
	.thumb_func
LinkPartnerHandlecmd1:
	push	{lr}
	bl	LinkPartnerBufferExecCompleted
	pop	{r0}
	bx	r0
.Lfe26:
	.size	 LinkPartnerHandlecmd1,.Lfe26-LinkPartnerHandlecmd1
	.align	2, 0
	.globl	LinkPartnerHandleSetAttributes
	.type	 LinkPartnerHandleSetAttributes,function
	.thumb_func
LinkPartnerHandleSetAttributes:
	push	{r4, r5, lr}
	ldr	r1, .L329
	ldr	r0, .L329+0x4
	ldrb	r2, [r0]
	lsl	r0, r2, #0x9
	add	r1, r1, #0x2
	add	r1, r0, r1
	ldrb	r0, [r1]
	cmp	r0, #0
	bne	.L321	@cond_branch
	ldr	r0, .L329+0x8
	lsl	r1, r2, #0x1
	add	r1, r1, r0
	ldrb	r0, [r1]
	bl	sub_811EC68
	b	.L322
.L330:
	.align	2, 0
.L329:
	.word	gBattleBufferA
	.word	gActiveBank
	.word	gBattlePartyID
.L321:
	ldrb	r4, [r1]
	mov	r5, #0x0
.L326:
	mov	r0, #0x1
	and	r0, r0, r4
	cmp	r0, #0
	beq	.L327	@cond_branch
	add	r0, r5, #0
	bl	sub_811EC68
.L327:
	lsr	r4, r4, #0x1
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x5
	bls	.L326	@cond_branch
.L322:
	bl	LinkPartnerBufferExecCompleted
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe27:
	.size	 LinkPartnerHandleSetAttributes,.Lfe27-LinkPartnerHandleSetAttributes
	.align	2, 0
	.globl	sub_811EC68
	.type	 sub_811EC68,function
	.thumb_func
sub_811EC68:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #0xffffffcc
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r0, .L403
	ldrb	r0, [r0]
	lsl	r0, r0, #0x9
	ldr	r2, .L403+0x4
	add	r3, r0, r2
	add	r6, r3, #0
	sub	r1, r2, #0x2
	add	r0, r0, r1
	ldrb	r0, [r0]
	add	r7, r2, #0
	cmp	r0, #0x3b
	bls	.LCB3014
	bl	.L332	@far jump
.LCB3014:
	lsl	r0, r0, #0x2
	ldr	r1, .L403+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L404:
	.align	2, 0
.L403:
	.word	gActiveBank
	.word	gBattleBufferA+0x3
	.word	.L399
	.align	2, 0
	.align	2, 0
.L399:
	.word	.L333
	.word	.L339
	.word	.L340
	.word	.L341
	.word	.L350
	.word	.L350
	.word	.L350
	.word	.L350
	.word	.L351
	.word	.L355
	.word	.L355
	.word	.L355
	.word	.L355
	.word	.L332
	.word	.L332
	.word	.L332
	.word	.L332
	.word	.L356
	.word	.L357
	.word	.L358
	.word	.L359
	.word	.L360
	.word	.L361
	.word	.L362
	.word	.L363
	.word	.L364
	.word	.L365
	.word	.L366
	.word	.L367
	.word	.L368
	.word	.L369
	.word	.L370
	.word	.L371
	.word	.L372
	.word	.L373
	.word	.L374
	.word	.L375
	.word	.L376
	.word	.L377
	.word	.L378
	.word	.L379
	.word	.L380
	.word	.L381
	.word	.L382
	.word	.L383
	.word	.L384
	.word	.L385
	.word	.L386
	.word	.L387
	.word	.L388
	.word	.L389
	.word	.L390
	.word	.L391
	.word	.L392
	.word	.L393
	.word	.L394
	.word	.L395
	.word	.L396
	.word	.L397
	.word	.L398
.L333:
	mov	r0, #0x64
	mov	r4, r5
	mul	r4, r4, r0
	ldr	r0, .L405
	add	r4, r4, r0
	add	r0, r4, #0
	mov	r1, #0xb
	add	r2, r6, #0
	bl	SetMonData
	add	r2, r6, #0
	add	r2, r2, #0x2e
	add	r0, r4, #0
	mov	r1, #0xc
	bl	SetMonData
	mov	r0, #0x0
	mov	r8, r0
	mov	r0, #0x3b
	add	r0, r0, r6
	mov	sl, r0
	add	r0, r6, #0
	add	r0, r0, #0x2b
	str	r0, [sp, #0x20]
	add	r0, r0, #0x19
	str	r0, [sp, #0x28]
	add	r0, r0, #0x4
	str	r0, [sp, #0x2c]
	add	r0, r0, #0x4
	str	r0, [sp, #0x30]
	sub	r0, r0, #0x22
	str	r0, [sp, #0x1c]
	sub	r0, r0, #0x2
	str	r0, [sp, #0x18]
	add	r0, r0, #0x4
	str	r0, [sp, #0x24]
	add	r0, r6, #0x2
	str	r0, [sp, #0x4]
	add	r0, r6, #0x4
	str	r0, [sp, #0x8]
	add	r0, r6, #0x6
	str	r0, [sp, #0xc]
	add	r0, r0, #0x2
	str	r0, [sp, #0x10]
	add	r0, r0, #0x2
	str	r0, [sp, #0x14]
	mov	r9, r4
	add	r7, r6, #0
	add	r7, r7, #0x24
	add	r4, r6, #0
	add	r4, r4, #0xc
.L337:
	mov	r1, r8
	add	r1, r1, #0xd
	mov	r0, r9
	add	r2, r4, #0
	bl	SetMonData
	mov	r1, r8
	add	r1, r1, #0x11
	mov	r0, r9
	add	r2, r7, #0
	bl	SetMonData
	add	r7, r7, #0x1
	add	r4, r4, #0x2
	mov	r0, #0x1
	add	r8, r8, r0
	mov	r0, r8
	cmp	r0, #0x3
	ble	.L337	@cond_branch
	mov	r0, #0x64
	mov	r4, r5
	mul	r4, r4, r0
	ldr	r0, .L405
	add	r4, r4, r0
	add	r0, r4, #0
	mov	r1, #0x15
	mov	r2, sl
	bl	SetMonData
	add	r0, r4, #0
	mov	r1, #0x20
	ldr	r2, [sp, #0x20]
	bl	SetMonData
	add	r0, r4, #0
	mov	r1, #0x19
	ldr	r2, [sp, #0x28]
	bl	SetMonData
	ldrb	r0, [r6, #0x14]
	lsl	r0, r0, #0x1b
	lsr	r0, r0, #0x1b
	mov	r1, sp
	strb	r0, [r1]
	add	r0, r4, #0
	mov	r1, #0x27
	mov	r2, sp
	bl	SetMonData
	mov	r1, sp
	ldrh	r0, [r6, #0x14]
	lsl	r0, r0, #0x16
	lsr	r0, r0, #0x1b
	strb	r0, [r1]
	add	r0, r4, #0
	mov	r1, #0x28
	mov	r2, sp
	bl	SetMonData
	mov	r1, sp
	ldrb	r0, [r6, #0x15]
	lsl	r0, r0, #0x19
	lsr	r0, r0, #0x1b
	strb	r0, [r1]
	add	r0, r4, #0
	mov	r1, #0x29
	mov	r2, sp
	bl	SetMonData
	mov	r1, sp
	ldr	r0, [r6, #0x14]
	lsl	r0, r0, #0xc
	lsr	r0, r0, #0x1b
	strb	r0, [r1]
	add	r0, r4, #0
	mov	r1, #0x2a
	mov	r2, sp
	bl	SetMonData
	mov	r1, sp
	ldrh	r0, [r6, #0x16]
	lsl	r0, r0, #0x17
	lsr	r0, r0, #0x1b
	strb	r0, [r1]
	add	r0, r4, #0
	mov	r1, #0x2b
	mov	r2, sp
	bl	SetMonData
	mov	r1, sp
	ldrb	r0, [r6, #0x17]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1b
	strb	r0, [r1]
	add	r0, r4, #0
	mov	r1, #0x2c
	mov	r2, sp
	bl	SetMonData
	add	r0, r4, #0
	mov	r1, #0x0
	ldr	r2, [sp, #0x2c]
	bl	SetMonData
	add	r0, r4, #0
	mov	r1, #0x37
	ldr	r2, [sp, #0x30]
	bl	SetMonData
	add	r0, r4, #0
	mov	r1, #0x38
	ldr	r2, [sp, #0x1c]
	bl	SetMonData
	add	r0, r4, #0
	mov	r1, #0x39
	ldr	r2, [sp, #0x18]
	bl	SetMonData
	add	r0, r4, #0
	mov	r1, #0x3a
	ldr	r2, [sp, #0x24]
	bl	SetMonData
	add	r0, r4, #0
	mov	r1, #0x3b
	ldr	r2, [sp, #0x4]
	bl	SetMonData
	add	r0, r4, #0
	mov	r1, #0x3c
	ldr	r2, [sp, #0x8]
	bl	SetMonData
	add	r0, r4, #0
	mov	r1, #0x3d
	ldr	r2, [sp, #0xc]
	bl	SetMonData
	add	r0, r4, #0
	mov	r1, #0x3e
	ldr	r2, [sp, #0x10]
	bl	SetMonData
	add	r0, r4, #0
	mov	r1, #0x3f
	ldr	r2, [sp, #0x14]
	bl	SetMonData
	b	.L332
.L406:
	.align	2, 0
.L405:
	.word	gPlayerParty
.L339:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L407
	add	r0, r0, r1
	ldr	r1, .L407+0x4
	ldrb	r2, [r1]
	lsl	r2, r2, #0x9
	add	r2, r2, r7
	mov	r1, #0xb
	bl	SetMonData
	b	.L332
.L408:
	.align	2, 0
.L407:
	.word	gPlayerParty
	.word	gActiveBank
.L340:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L409
	add	r0, r0, r1
	ldr	r1, .L409+0x4
	ldrb	r2, [r1]
	lsl	r2, r2, #0x9
	add	r2, r2, r7
	mov	r1, #0xc
	bl	SetMonData
	b	.L332
.L410:
	.align	2, 0
.L409:
	.word	gPlayerParty
	.word	gActiveBank
.L341:
	mov	r0, #0x0
	mov	r8, r0
	mov	r0, #0xc
	add	r0, r0, r3
	mov	r9, r0
	mov	r0, #0x64
	mov	r1, r5
	mul	r1, r1, r0
	ldr	r0, .L411
	add	r7, r1, r0
	add	r6, r3, #0
	add	r6, r6, #0x8
	add	r4, r3, #0
.L345:
	mov	r1, r8
	add	r1, r1, #0xd
	add	r0, r7, #0
	add	r2, r4, #0
	bl	SetMonData
	mov	r1, r8
	add	r1, r1, #0x11
	add	r0, r7, #0
	add	r2, r6, #0
	bl	SetMonData
	add	r6, r6, #0x1
	add	r4, r4, #0x2
	mov	r0, #0x1
	add	r8, r8, r0
	mov	r0, r8
	cmp	r0, #0x3
	ble	.L345	@cond_branch
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L411
	add	r0, r0, r1
	mov	r1, #0x15
	mov	r2, r9
	bl	SetMonData
	b	.L332
.L412:
	.align	2, 0
.L411:
	.word	gPlayerParty
.L350:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L413
	add	r0, r0, r1
	ldr	r3, .L413+0x4
	ldr	r1, .L413+0x8
	ldrb	r2, [r1]
	lsl	r2, r2, #0x9
	add	r1, r3, #0x1
	add	r1, r2, r1
	ldrb	r1, [r1]
	add	r1, r1, #0x9
	b	.L401
.L414:
	.align	2, 0
.L413:
	.word	gPlayerParty
	.word	gBattleBufferA
	.word	gActiveBank
.L351:
	mov	r0, #0x64
	mov	r4, r5
	mul	r4, r4, r0
	ldr	r0, .L415
	add	r4, r4, r0
	ldr	r5, .L415+0x4
	ldrb	r2, [r5]
	lsl	r2, r2, #0x9
	add	r2, r2, r7
	add	r0, r4, #0
	mov	r1, #0x11
	bl	SetMonData
	ldrb	r2, [r5]
	lsl	r2, r2, #0x9
	add	r0, r7, #0x1
	add	r2, r2, r0
	add	r0, r4, #0
	mov	r1, #0x12
	bl	SetMonData
	ldrb	r2, [r5]
	lsl	r2, r2, #0x9
	add	r0, r7, #0x2
	add	r2, r2, r0
	add	r0, r4, #0
	mov	r1, #0x13
	bl	SetMonData
	ldrb	r2, [r5]
	lsl	r2, r2, #0x9
	add	r0, r7, #0x3
	add	r2, r2, r0
	add	r0, r4, #0
	mov	r1, #0x14
	bl	SetMonData
	ldrb	r2, [r5]
	lsl	r2, r2, #0x9
	add	r0, r7, #0x4
	add	r2, r2, r0
	add	r0, r4, #0
	mov	r1, #0x15
	bl	SetMonData
	b	.L332
.L416:
	.align	2, 0
.L415:
	.word	gPlayerParty
	.word	gActiveBank
.L355:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L417
	add	r0, r0, r1
	ldr	r3, .L417+0x4
	ldr	r1, .L417+0x8
	ldrb	r2, [r1]
	lsl	r2, r2, #0x9
	add	r1, r3, #0x1
	add	r1, r2, r1
	ldrb	r1, [r1]
	add	r1, r1, #0x8
.L401:
	add	r3, r3, #0x3
	add	r2, r2, r3
	bl	SetMonData
	b	.L332
.L418:
	.align	2, 0
.L417:
	.word	gPlayerParty
	.word	gBattleBufferA
	.word	gActiveBank
.L356:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L419
	add	r0, r0, r1
	ldr	r1, .L419+0x4
	ldrb	r2, [r1]
	lsl	r2, r2, #0x9
	add	r2, r2, r7
	mov	r1, #0x1
	bl	SetMonData
	b	.L332
.L420:
	.align	2, 0
.L419:
	.word	gPlayerParty
	.word	gActiveBank
.L357:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L421
	add	r0, r0, r1
	ldr	r1, .L421+0x4
	ldrb	r2, [r1]
	lsl	r2, r2, #0x9
	add	r2, r2, r7
	mov	r1, #0x19
	bl	SetMonData
	b	.L332
.L422:
	.align	2, 0
.L421:
	.word	gPlayerParty
	.word	gActiveBank
.L358:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L423
	add	r0, r0, r1
	ldr	r1, .L423+0x4
	ldrb	r2, [r1]
	lsl	r2, r2, #0x9
	add	r2, r2, r7
	mov	r1, #0x1a
	bl	SetMonData
	b	.L332
.L424:
	.align	2, 0
.L423:
	.word	gPlayerParty
	.word	gActiveBank
.L359:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L425
	add	r0, r0, r1
	ldr	r1, .L425+0x4
	ldrb	r2, [r1]
	lsl	r2, r2, #0x9
	add	r2, r2, r7
	mov	r1, #0x1b
	bl	SetMonData
	b	.L332
.L426:
	.align	2, 0
.L425:
	.word	gPlayerParty
	.word	gActiveBank
.L360:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L427
	add	r0, r0, r1
	ldr	r1, .L427+0x4
	ldrb	r2, [r1]
	lsl	r2, r2, #0x9
	add	r2, r2, r7
	mov	r1, #0x1c
	bl	SetMonData
	b	.L332
.L428:
	.align	2, 0
.L427:
	.word	gPlayerParty
	.word	gActiveBank
.L361:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L429
	add	r0, r0, r1
	ldr	r1, .L429+0x4
	ldrb	r2, [r1]
	lsl	r2, r2, #0x9
	add	r2, r2, r7
	mov	r1, #0x1d
	bl	SetMonData
	b	.L332
.L430:
	.align	2, 0
.L429:
	.word	gPlayerParty
	.word	gActiveBank
.L362:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L431
	add	r0, r0, r1
	ldr	r1, .L431+0x4
	ldrb	r2, [r1]
	lsl	r2, r2, #0x9
	add	r2, r2, r7
	mov	r1, #0x1e
	bl	SetMonData
	b	.L332
.L432:
	.align	2, 0
.L431:
	.word	gPlayerParty
	.word	gActiveBank
.L363:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L433
	add	r0, r0, r1
	ldr	r1, .L433+0x4
	ldrb	r2, [r1]
	lsl	r2, r2, #0x9
	add	r2, r2, r7
	mov	r1, #0x1f
	bl	SetMonData
	b	.L332
.L434:
	.align	2, 0
.L433:
	.word	gPlayerParty
	.word	gActiveBank
.L364:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L435
	add	r0, r0, r1
	ldr	r1, .L435+0x4
	ldrb	r2, [r1]
	lsl	r2, r2, #0x9
	add	r2, r2, r7
	mov	r1, #0x20
	bl	SetMonData
	b	.L332
.L436:
	.align	2, 0
.L435:
	.word	gPlayerParty
	.word	gActiveBank
.L365:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L437
	add	r0, r0, r1
	ldr	r1, .L437+0x4
	ldrb	r2, [r1]
	lsl	r2, r2, #0x9
	add	r2, r2, r7
	mov	r1, #0x22
	bl	SetMonData
	b	.L332
.L438:
	.align	2, 0
.L437:
	.word	gPlayerParty
	.word	gActiveBank
.L366:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L439
	add	r0, r0, r1
	ldr	r1, .L439+0x4
	ldrb	r2, [r1]
	lsl	r2, r2, #0x9
	add	r2, r2, r7
	mov	r1, #0x23
	bl	SetMonData
	b	.L332
.L440:
	.align	2, 0
.L439:
	.word	gPlayerParty
	.word	gActiveBank
.L367:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L441
	add	r0, r0, r1
	ldr	r1, .L441+0x4
	ldrb	r2, [r1]
	lsl	r2, r2, #0x9
	add	r2, r2, r7
	mov	r1, #0x24
	bl	SetMonData
	b	.L332
.L442:
	.align	2, 0
.L441:
	.word	gPlayerParty
	.word	gActiveBank
.L368:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L443
	add	r0, r0, r1
	ldr	r1, .L443+0x4
	ldrb	r2, [r1]
	lsl	r2, r2, #0x9
	add	r2, r2, r7
	mov	r1, #0x25
	bl	SetMonData
	b	.L332
.L444:
	.align	2, 0
.L443:
	.word	gPlayerParty
	.word	gActiveBank
.L369:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L445
	add	r0, r0, r1
	ldr	r1, .L445+0x4
	ldrb	r2, [r1]
	lsl	r2, r2, #0x9
	add	r2, r2, r7
	mov	r1, #0x26
	bl	SetMonData
	b	.L332
.L446:
	.align	2, 0
.L445:
	.word	gPlayerParty
	.word	gActiveBank
.L370:
	mov	r0, #0x64
	mov	r4, r5
	mul	r4, r4, r0
	ldr	r0, .L447
	add	r4, r4, r0
	ldr	r5, .L447+0x4
	ldrb	r2, [r5]
	lsl	r2, r2, #0x9
	add	r2, r2, r7
	add	r0, r4, #0
	mov	r1, #0x27
	bl	SetMonData
	ldrb	r2, [r5]
	lsl	r2, r2, #0x9
	add	r0, r7, #0x1
	add	r2, r2, r0
	add	r0, r4, #0
	mov	r1, #0x28
	bl	SetMonData
	ldrb	r2, [r5]
	lsl	r2, r2, #0x9
	add	r0, r7, #0x2
	add	r2, r2, r0
	add	r0, r4, #0
	mov	r1, #0x29
	bl	SetMonData
	ldrb	r2, [r5]
	lsl	r2, r2, #0x9
	add	r0, r7, #0x3
	add	r2, r2, r0
	add	r0, r4, #0
	mov	r1, #0x2a
	bl	SetMonData
	ldrb	r2, [r5]
	lsl	r2, r2, #0x9
	add	r0, r7, #0x4
	add	r2, r2, r0
	add	r0, r4, #0
	mov	r1, #0x2b
	bl	SetMonData
	ldrb	r2, [r5]
	lsl	r2, r2, #0x9
	add	r0, r7, #0x5
	add	r2, r2, r0
	add	r0, r4, #0
	b	.L402
.L448:
	.align	2, 0
.L447:
	.word	gPlayerParty
	.word	gActiveBank
.L371:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L449
	add	r0, r0, r1
	ldr	r1, .L449+0x4
	ldrb	r2, [r1]
	lsl	r2, r2, #0x9
	add	r2, r2, r7
	mov	r1, #0x27
	bl	SetMonData
	b	.L332
.L450:
	.align	2, 0
.L449:
	.word	gPlayerParty
	.word	gActiveBank
.L372:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L451
	add	r0, r0, r1
	ldr	r1, .L451+0x4
	ldrb	r2, [r1]
	lsl	r2, r2, #0x9
	add	r2, r2, r7
	mov	r1, #0x28
	bl	SetMonData
	b	.L332
.L452:
	.align	2, 0
.L451:
	.word	gPlayerParty
	.word	gActiveBank
.L373:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L453
	add	r0, r0, r1
	ldr	r1, .L453+0x4
	ldrb	r2, [r1]
	lsl	r2, r2, #0x9
	add	r2, r2, r7
	mov	r1, #0x29
	bl	SetMonData
	b	.L332
.L454:
	.align	2, 0
.L453:
	.word	gPlayerParty
	.word	gActiveBank
.L374:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L455
	add	r0, r0, r1
	ldr	r1, .L455+0x4
	ldrb	r2, [r1]
	lsl	r2, r2, #0x9
	add	r2, r2, r7
	mov	r1, #0x2a
	bl	SetMonData
	b	.L332
.L456:
	.align	2, 0
.L455:
	.word	gPlayerParty
	.word	gActiveBank
.L375:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L457
	add	r0, r0, r1
	ldr	r1, .L457+0x4
	ldrb	r2, [r1]
	lsl	r2, r2, #0x9
	add	r2, r2, r7
	mov	r1, #0x2b
	bl	SetMonData
	b	.L332
.L458:
	.align	2, 0
.L457:
	.word	gPlayerParty
	.word	gActiveBank
.L376:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L459
	add	r0, r0, r1
	ldr	r1, .L459+0x4
	ldrb	r2, [r1]
	lsl	r2, r2, #0x9
	add	r2, r2, r7
.L402:
	mov	r1, #0x2c
	bl	SetMonData
	b	.L332
.L460:
	.align	2, 0
.L459:
	.word	gPlayerParty
	.word	gActiveBank
.L377:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L461
	add	r0, r0, r1
	ldr	r1, .L461+0x4
	ldrb	r2, [r1]
	lsl	r2, r2, #0x9
	add	r2, r2, r7
	mov	r1, #0x0
	bl	SetMonData
	b	.L332
.L462:
	.align	2, 0
.L461:
	.word	gPlayerParty
	.word	gActiveBank
.L378:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L463
	add	r0, r0, r1
	ldr	r1, .L463+0x4
	ldrb	r2, [r1]
	lsl	r2, r2, #0x9
	add	r2, r2, r7
	mov	r1, #0x9
	bl	SetMonData
	b	.L332
.L464:
	.align	2, 0
.L463:
	.word	gPlayerParty
	.word	gActiveBank
.L379:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L465
	add	r0, r0, r1
	ldr	r1, .L465+0x4
	ldrb	r2, [r1]
	lsl	r2, r2, #0x9
	add	r2, r2, r7
	mov	r1, #0x37
	bl	SetMonData
	b	.L332
.L466:
	.align	2, 0
.L465:
	.word	gPlayerParty
	.word	gActiveBank
.L380:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L467
	add	r0, r0, r1
	ldr	r1, .L467+0x4
	ldrb	r2, [r1]
	lsl	r2, r2, #0x9
	add	r2, r2, r7
	mov	r1, #0x38
	bl	SetMonData
	b	.L332
.L468:
	.align	2, 0
.L467:
	.word	gPlayerParty
	.word	gActiveBank
.L381:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L469
	add	r0, r0, r1
	ldr	r1, .L469+0x4
	ldrb	r2, [r1]
	lsl	r2, r2, #0x9
	add	r2, r2, r7
	mov	r1, #0x39
	bl	SetMonData
	b	.L332
.L470:
	.align	2, 0
.L469:
	.word	gPlayerParty
	.word	gActiveBank
.L382:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L471
	add	r0, r0, r1
	ldr	r1, .L471+0x4
	ldrb	r2, [r1]
	lsl	r2, r2, #0x9
	add	r2, r2, r7
	mov	r1, #0x3a
	bl	SetMonData
	b	.L332
.L472:
	.align	2, 0
.L471:
	.word	gPlayerParty
	.word	gActiveBank
.L383:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L473
	add	r0, r0, r1
	ldr	r1, .L473+0x4
	ldrb	r2, [r1]
	lsl	r2, r2, #0x9
	add	r2, r2, r7
	mov	r1, #0x3b
	bl	SetMonData
	b	.L332
.L474:
	.align	2, 0
.L473:
	.word	gPlayerParty
	.word	gActiveBank
.L384:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L475
	add	r0, r0, r1
	ldr	r1, .L475+0x4
	ldrb	r2, [r1]
	lsl	r2, r2, #0x9
	add	r2, r2, r7
	mov	r1, #0x3c
	bl	SetMonData
	b	.L332
.L476:
	.align	2, 0
.L475:
	.word	gPlayerParty
	.word	gActiveBank
.L385:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L477
	add	r0, r0, r1
	ldr	r1, .L477+0x4
	ldrb	r2, [r1]
	lsl	r2, r2, #0x9
	add	r2, r2, r7
	mov	r1, #0x3d
	bl	SetMonData
	b	.L332
.L478:
	.align	2, 0
.L477:
	.word	gPlayerParty
	.word	gActiveBank
.L386:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L479
	add	r0, r0, r1
	ldr	r1, .L479+0x4
	ldrb	r2, [r1]
	lsl	r2, r2, #0x9
	add	r2, r2, r7
	mov	r1, #0x3e
	bl	SetMonData
	b	.L332
.L480:
	.align	2, 0
.L479:
	.word	gPlayerParty
	.word	gActiveBank
.L387:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L481
	add	r0, r0, r1
	ldr	r1, .L481+0x4
	ldrb	r2, [r1]
	lsl	r2, r2, #0x9
	add	r2, r2, r7
	mov	r1, #0x3f
	bl	SetMonData
	b	.L332
.L482:
	.align	2, 0
.L481:
	.word	gPlayerParty
	.word	gActiveBank
.L388:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L483
	add	r0, r0, r1
	ldr	r1, .L483+0x4
	ldrb	r2, [r1]
	lsl	r2, r2, #0x9
	add	r2, r2, r7
	mov	r1, #0x16
	bl	SetMonData
	b	.L332
.L484:
	.align	2, 0
.L483:
	.word	gPlayerParty
	.word	gActiveBank
.L389:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L485
	add	r0, r0, r1
	ldr	r1, .L485+0x4
	ldrb	r2, [r1]
	lsl	r2, r2, #0x9
	add	r2, r2, r7
	mov	r1, #0x17
	bl	SetMonData
	b	.L332
.L486:
	.align	2, 0
.L485:
	.word	gPlayerParty
	.word	gActiveBank
.L390:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L487
	add	r0, r0, r1
	ldr	r1, .L487+0x4
	ldrb	r2, [r1]
	lsl	r2, r2, #0x9
	add	r2, r2, r7
	mov	r1, #0x18
	bl	SetMonData
	b	.L332
.L488:
	.align	2, 0
.L487:
	.word	gPlayerParty
	.word	gActiveBank
.L391:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L489
	add	r0, r0, r1
	ldr	r1, .L489+0x4
	ldrb	r2, [r1]
	lsl	r2, r2, #0x9
	add	r2, r2, r7
	mov	r1, #0x21
	bl	SetMonData
	b	.L332
.L490:
	.align	2, 0
.L489:
	.word	gPlayerParty
	.word	gActiveBank
.L392:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L491
	add	r0, r0, r1
	ldr	r1, .L491+0x4
	ldrb	r2, [r1]
	lsl	r2, r2, #0x9
	add	r2, r2, r7
	mov	r1, #0x2f
	bl	SetMonData
	b	.L332
.L492:
	.align	2, 0
.L491:
	.word	gPlayerParty
	.word	gActiveBank
.L393:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L493
	add	r0, r0, r1
	ldr	r1, .L493+0x4
	ldrb	r2, [r1]
	lsl	r2, r2, #0x9
	add	r2, r2, r7
	mov	r1, #0x30
	bl	SetMonData
	b	.L332
.L494:
	.align	2, 0
.L493:
	.word	gPlayerParty
	.word	gActiveBank
.L394:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L495
	add	r0, r0, r1
	ldr	r1, .L495+0x4
	ldrb	r2, [r1]
	lsl	r2, r2, #0x9
	add	r2, r2, r7
	mov	r1, #0x32
	bl	SetMonData
	b	.L332
.L496:
	.align	2, 0
.L495:
	.word	gPlayerParty
	.word	gActiveBank
.L395:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L497
	add	r0, r0, r1
	ldr	r1, .L497+0x4
	ldrb	r2, [r1]
	lsl	r2, r2, #0x9
	add	r2, r2, r7
	mov	r1, #0x33
	bl	SetMonData
	b	.L332
.L498:
	.align	2, 0
.L497:
	.word	gPlayerParty
	.word	gActiveBank
.L396:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L499
	add	r0, r0, r1
	ldr	r1, .L499+0x4
	ldrb	r2, [r1]
	lsl	r2, r2, #0x9
	add	r2, r2, r7
	mov	r1, #0x34
	bl	SetMonData
	b	.L332
.L500:
	.align	2, 0
.L499:
	.word	gPlayerParty
	.word	gActiveBank
.L397:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L501
	add	r0, r0, r1
	ldr	r1, .L501+0x4
	ldrb	r2, [r1]
	lsl	r2, r2, #0x9
	add	r2, r2, r7
	mov	r1, #0x35
	bl	SetMonData
	b	.L332
.L502:
	.align	2, 0
.L501:
	.word	gPlayerParty
	.word	gActiveBank
.L398:
	mov	r0, #0x64
	mul	r0, r0, r5
	ldr	r1, .L503
	add	r0, r0, r1
	ldr	r1, .L503+0x4
	ldrb	r2, [r1]
	lsl	r2, r2, #0x9
	add	r2, r2, r7
	mov	r1, #0x36
	bl	SetMonData
.L332:
	ldr	r2, .L503+0x8
	ldr	r0, .L503+0x4
	ldrb	r1, [r0]
	lsl	r0, r1, #0x1
	add	r0, r0, r2
	ldrh	r2, [r0]
	mov	r0, #0x64
	mul	r0, r0, r2
	ldr	r2, .L503
	add	r0, r0, r2
	bl	sub_80324F8
	add	sp, sp, #0x34
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L504:
	.align	2, 0
.L503:
	.word	gPlayerParty
	.word	gActiveBank
	.word	gBattlePartyID
.Lfe28:
	.size	 sub_811EC68,.Lfe28-sub_811EC68
	.align	2, 0
	.globl	LinkPartnerHandlecmd3
	.type	 LinkPartnerHandlecmd3,function
	.thumb_func
LinkPartnerHandlecmd3:
	push	{r4, r5, r6, r7, lr}
	ldr	r1, .L511
	ldr	r7, .L511+0x4
	ldrb	r2, [r7]
	lsl	r0, r2, #0x1
	add	r0, r0, r1
	ldrh	r1, [r0]
	mov	r0, #0x64
	mov	r3, r1
	mul	r3, r3, r0
	ldr	r4, .L511+0x8
	lsl	r2, r2, #0x9
	add	r0, r4, #0x1
	add	r0, r2, r0
	ldrb	r0, [r0]
	ldr	r1, .L511+0xc
	add	r0, r0, r1
	add	r5, r3, r0
	mov	r3, #0x0
	add	r0, r4, #0x2
	add	r2, r2, r0
	ldrb	r2, [r2]
	cmp	r3, r2
	bcs	.L507	@cond_branch
	add	r6, r4, #0
	add	r2, r7, #0
	add	r4, r0, #0
.L509:
	add	r1, r5, r3
	ldrb	r0, [r2]
	lsl	r0, r0, #0x9
	add	r0, r0, #0x3
	add	r0, r3, r0
	add	r0, r0, r6
	ldrb	r0, [r0]
	strb	r0, [r1]
	add	r0, r3, #0x1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	ldrb	r0, [r2]
	lsl	r0, r0, #0x9
	add	r0, r0, r4
	ldrb	r0, [r0]
	cmp	r3, r0
	bcc	.L509	@cond_branch
.L507:
	bl	LinkPartnerBufferExecCompleted
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L512:
	.align	2, 0
.L511:
	.word	gBattlePartyID
	.word	gActiveBank
	.word	gBattleBufferA
	.word	gPlayerParty
.Lfe29:
	.size	 LinkPartnerHandlecmd3,.Lfe29-LinkPartnerHandlecmd3
	.align	2, 0
	.globl	LinkPartnerHandleLoadPokeSprite
	.type	 LinkPartnerHandleLoadPokeSprite,function
	.thumb_func
LinkPartnerHandleLoadPokeSprite:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	ldr	r0, .L514
	mov	r8, r0
	ldr	r6, .L514+0x4
	ldrb	r1, [r6]
	lsl	r0, r1, #0x1
	add	r0, r0, r8
	ldrh	r0, [r0]
	mov	r5, #0x64
	mul	r0, r0, r5
	ldr	r4, .L514+0x8
	add	r0, r0, r4
	bl	BattleLoadPlayerMonSprite
	ldrb	r0, [r6]
	lsl	r0, r0, #0x1
	add	r0, r0, r8
	ldrh	r0, [r0]
	mul	r0, r0, r5
	add	r0, r0, r4
	mov	r1, #0xb
	bl	GetMonData
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	ldrb	r0, [r6]
	bl	GetBankIdentity
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	GetMonSpriteTemplate_803C56C
	ldr	r0, .L514+0xc
	mov	r8, r0
	ldrb	r0, [r6]
	mov	r1, #0x2
	bl	sub_8077ABC
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	ldrb	r0, [r6]
	bl	sub_8077F68
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldrb	r0, [r6]
	bl	sub_8079E90
	add	r3, r0, #0
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r0, r8
	add	r1, r5, #0
	add	r2, r4, #0
	bl	CreateSprite
	ldr	r4, .L514+0x10
	ldrb	r1, [r6]
	add	r1, r1, r4
	strb	r0, [r1]
	ldr	r5, .L514+0x14
	ldrb	r0, [r6]
	add	r0, r0, r4
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r1, .L514+0x18
	strh	r1, [r0, #0x24]
	ldrb	r2, [r6]
	add	r0, r2, r4
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	strh	r2, [r0, #0x2e]
	ldrb	r3, [r6]
	add	r0, r3, r4
	ldrb	r0, [r0]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r5
	lsl	r3, r3, #0x4
	ldrb	r2, [r1, #0x5]
	mov	r0, #0xf
	and	r0, r0, r2
	orr	r0, r0, r3
	strb	r0, [r1, #0x5]
	ldrb	r2, [r6]
	add	r4, r2, r4
	ldrb	r1, [r4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r1, .L514+0x1c
	add	r2, r2, r1
	ldrb	r1, [r2]
	bl	StartSpriteAnim
	ldr	r1, .L514+0x20
	ldrb	r0, [r6]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, .L514+0x24
	str	r1, [r0]
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L515:
	.align	2, 0
.L514:
	.word	gBattlePartyID
	.word	gActiveBank
	.word	gPlayerParty
	.word	gUnknown_02024E8C
	.word	gObjectBankIDs
	.word	gSprites
	.word	0xff10
	.word	gBattleMonForms
	.word	gBattleBankFunc
	.word	sub_811DDE8
.Lfe30:
	.size	 LinkPartnerHandleLoadPokeSprite,.Lfe30-LinkPartnerHandleLoadPokeSprite
	.align	2, 0
	.globl	LinkPartnerHandleSendOutPoke
	.type	 LinkPartnerHandleSendOutPoke,function
	.thumb_func
LinkPartnerHandleSendOutPoke:
	push	{r4, r5, r6, lr}
	ldr	r5, .L517
	ldrb	r0, [r5]
	ldr	r4, .L517+0x4
	lsl	r1, r0, #0x9
	add	r6, r4, #0x2
	add	r1, r1, r6
	ldrb	r1, [r1]
	bl	sub_8032AA8
	ldr	r2, .L517+0x8
	ldrb	r0, [r5]
	lsl	r1, r0, #0x1
	add	r1, r1, r2
	lsl	r0, r0, #0x9
	add	r4, r4, #0x1
	add	r0, r0, r4
	ldrb	r0, [r0]
	strh	r0, [r1]
	ldrb	r1, [r5]
	lsl	r0, r1, #0x1
	add	r0, r0, r2
	ldrh	r2, [r0]
	mov	r0, #0x64
	mul	r0, r0, r2
	ldr	r2, .L517+0xc
	add	r0, r0, r2
	bl	BattleLoadPlayerMonSprite
	ldrb	r0, [r5]
	lsl	r1, r0, #0x9
	add	r1, r1, r6
	ldrb	r1, [r1]
	bl	sub_811F864
	ldr	r1, .L517+0x10
	ldrb	r0, [r5]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, .L517+0x14
	str	r1, [r0]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L518:
	.align	2, 0
.L517:
	.word	gActiveBank
	.word	gBattleBufferA
	.word	gBattlePartyID
	.word	gPlayerParty
	.word	gBattleBankFunc
	.word	sub_811E1BC
.Lfe31:
	.size	 LinkPartnerHandleSendOutPoke,.Lfe31-LinkPartnerHandleSendOutPoke
	.align	2, 0
	.globl	sub_811F864
	.type	 sub_811F864,function
	.thumb_func
sub_811F864:
	push	{r4, r5, r6, lr}
	mov	r6, sl
	mov	r5, r9
	mov	r4, r8
	push	{r4, r5, r6}
	add	r6, r0, #0
	lsl	r6, r6, #0x18
	lsr	r6, r6, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r6, #0
	bl	sub_8032AA8
	ldr	r0, .L520
	lsl	r2, r6, #0x1
	add	r2, r2, r0
	ldr	r0, .L520+0x4
	lsl	r1, r6, #0x9
	add	r0, r0, #0x1
	add	r1, r1, r0
	ldrb	r0, [r1]
	strh	r0, [r2]
	ldrh	r1, [r2]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L520+0x8
	add	r0, r0, r1
	mov	r1, #0xb
	bl	GetMonData
	mov	r8, r0
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r8, r0
	ldr	r0, .L520+0xc
	bl	CreateInvisibleSpriteWithCallback
	ldr	r1, .L520+0x10
	mov	r9, r1
	add	r9, r9, r6
	mov	r1, r9
	strb	r0, [r1]
	add	r0, r6, #0
	bl	GetBankIdentity
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r0, r8
	bl	GetMonSpriteTemplate_803C56C
	ldr	r0, .L520+0x14
	mov	sl, r0
	add	r0, r6, #0
	mov	r1, #0x2
	bl	sub_8077ABC
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	add	r0, r6, #0
	bl	sub_8077F68
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r6, #0
	bl	sub_8079E90
	add	r3, r0, #0
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r0, sl
	add	r1, r5, #0
	add	r2, r4, #0
	bl	CreateSprite
	ldr	r4, .L520+0x18
	add	r4, r6, r4
	strb	r0, [r4]
	ldr	r5, .L520+0x1c
	mov	r0, r9
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldrb	r1, [r4]
	strh	r1, [r0, #0x30]
	ldrb	r1, [r4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	strh	r6, [r0, #0x2e]
	ldrb	r1, [r4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	mov	r1, r8
	strh	r1, [r0, #0x32]
	ldrb	r0, [r4]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r5
	lsl	r3, r6, #0x4
	ldrb	r2, [r1, #0x5]
	mov	r0, #0xf
	and	r0, r0, r2
	orr	r0, r0, r3
	strb	r0, [r1, #0x5]
	ldrb	r1, [r4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r1, .L520+0x20
	add	r6, r6, r1
	ldrb	r1, [r6]
	bl	StartSpriteAnim
	ldrb	r1, [r4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r2, #0x4
	orr	r1, r1, r2
	strb	r1, [r0]
	ldrb	r1, [r4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r1, r5, #0
	add	r1, r1, #0x1c
	add	r0, r0, r1
	ldr	r1, .L520+0x24
	str	r1, [r0]
	mov	r0, #0x0
	mov	r1, #0xff
	bl	sub_8046400
	mov	r1, r9
	ldrb	r2, [r1]
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r5
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r1, #0x2e]
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L521:
	.align	2, 0
.L520:
	.word	gBattlePartyID
	.word	gBattleBufferA
	.word	gPlayerParty
	.word	sub_80312F0
	.word	gUnknown_0300434C
	.word	gUnknown_02024E8C
	.word	gObjectBankIDs
	.word	gSprites
	.word	gBattleMonForms
	.word	SpriteCallbackDummy
.Lfe32:
	.size	 sub_811F864,.Lfe32-sub_811F864
	.align	2, 0
	.globl	LinkPartnerHandleReturnPokeToBall
	.type	 LinkPartnerHandleReturnPokeToBall,function
	.thumb_func
LinkPartnerHandleReturnPokeToBall:
	push	{r4, r5, r6, lr}
	ldr	r1, .L525
	ldr	r6, .L525+0x4
	ldrb	r2, [r6]
	lsl	r0, r2, #0x9
	add	r1, r1, #0x1
	add	r0, r0, r1
	ldrb	r3, [r0]
	cmp	r3, #0
	bne	.L523	@cond_branch
	lsl	r0, r2, #0x1
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	ldr	r1, .L525+0x8
	add	r0, r0, r1
	strb	r3, [r0, #0x4]
	ldr	r1, .L525+0xc
	ldrb	r0, [r6]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, .L525+0x10
	str	r1, [r0]
	b	.L524
.L526:
	.align	2, 0
.L525:
	.word	gBattleBufferA
	.word	gActiveBank
	.word	gSharedMem+0x17810
	.word	gBattleBankFunc
	.word	sub_811FA5C
.L523:
	ldr	r5, .L527
	add	r0, r2, r5
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r4, .L527+0x4
	add	r0, r0, r4
	bl	FreeSpriteOamMatrix
	ldrb	r0, [r6]
	add	r0, r0, r5
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	bl	DestroySprite
	ldr	r1, .L527+0x8
	ldrb	r0, [r6]
	add	r0, r0, r1
	ldrb	r0, [r0]
	bl	sub_8043DB0
	bl	LinkPartnerBufferExecCompleted
.L524:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L528:
	.align	2, 0
.L527:
	.word	gObjectBankIDs
	.word	gSprites
	.word	gHealthboxIDs
.Lfe33:
	.size	 LinkPartnerHandleReturnPokeToBall,.Lfe33-LinkPartnerHandleReturnPokeToBall
	.align	2, 0
	.globl	sub_811FA5C
	.type	 sub_811FA5C,function
	.thumb_func
sub_811FA5C:
	push	{r4, r5, lr}
	ldr	r5, .L537
	ldrb	r2, [r5]
	lsl	r0, r2, #0x1
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	ldr	r4, .L537+0x4
	add	r3, r0, r4
	ldrb	r0, [r3, #0x4]
	cmp	r0, #0
	beq	.L531	@cond_branch
	cmp	r0, #0x1
	beq	.L533	@cond_branch
	b	.L530
.L538:
	.align	2, 0
.L537:
	.word	gActiveBank
	.word	gSharedMem+0x17810
.L531:
	lsl	r0, r2, #0x2
	add	r1, r4, #0
	sub	r1, r1, #0x10
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0x4
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L532	@cond_branch
	add	r0, r2, #0
	add	r1, r2, #0
	mov	r3, #0x5
	bl	move_anim_start_t4
.L532:
	ldrb	r0, [r5]
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r4
	mov	r0, #0x1
	strb	r0, [r1, #0x4]
	b	.L530
.L533:
	ldrb	r1, [r3]
	mov	r0, #0x40
	and	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0
	bne	.L530	@cond_branch
	strb	r0, [r3, #0x4]
	ldrb	r2, [r5]
	add	r0, r2, #0
	add	r1, r2, #0
	mov	r3, #0x1
	bl	move_anim_start_t4
	ldr	r1, .L539
	ldrb	r0, [r5]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, .L539+0x4
	str	r1, [r0]
.L530:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L540:
	.align	2, 0
.L539:
	.word	gBattleBankFunc
	.word	sub_811DF34
.Lfe34:
	.size	 sub_811FA5C,.Lfe34-sub_811FA5C
	.align	2, 0
	.globl	LinkPartnerHandleTrainerThrow
	.type	 LinkPartnerHandleTrainerThrow,function
	.thumb_func
LinkPartnerHandleTrainerThrow:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	ldr	r0, .L547
	ldrh	r1, [r0]
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L542	@cond_branch
	ldr	r6, .L547+0x4
	ldrb	r0, [r6]
	bl	GetBankIdentity
	mov	r1, #0x2
	and	r1, r1, r0
	ldr	r5, .L547+0x8
	cmp	r1, #0
	beq	.L543	@cond_branch
	mov	r5, #0x10
.L543:
	ldr	r4, .L547+0xc
	ldrb	r0, [r6]
	bl	sub_803FC34
	b	.L546
.L548:
	.align	2, 0
.L547:
	.word	gBattleTypeFlags
	.word	gActiveBank
	.word	0xfff0
	.word	gLinkPlayers
.L542:
	mov	r5, #0x0
	ldr	r4, .L549
	bl	GetMultiplayerId
	mov	r1, #0x1
	eor	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
.L546:
	lsl	r1, r0, #0x3
	sub	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r4
	ldrb	r4, [r1, #0x13]
	ldr	r6, .L549+0x4
	ldrb	r1, [r6]
	add	r0, r4, #0
	bl	LoadPlayerTrainerBankSprite
	ldrb	r0, [r6]
	bl	GetBankIdentity
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	GetMonSpriteTemplate_803C5A0
	ldr	r0, .L549+0x8
	mov	r8, r0
	lsl	r5, r5, #0x10
	mov	r0, #0xa0
	lsl	r0, r0, #0xf
	add	r5, r5, r0
	asr	r5, r5, #0x10
	ldr	r0, .L549+0xc
	lsl	r4, r4, #0x2
	add	r4, r4, r0
	ldrb	r0, [r4]
	mov	r4, #0x8
	sub	r4, r4, r0
	lsl	r4, r4, #0x12
	mov	r0, #0xa0
	lsl	r0, r0, #0xf
	add	r4, r4, r0
	asr	r4, r4, #0x10
	ldrb	r0, [r6]
	bl	sub_8079E90
	add	r3, r0, #0
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r0, r8
	add	r1, r5, #0
	add	r2, r4, #0
	bl	CreateSprite
	ldr	r5, .L549+0x10
	ldrb	r1, [r6]
	add	r1, r1, r5
	strb	r0, [r1]
	ldr	r4, .L549+0x14
	ldrb	r3, [r6]
	add	r0, r3, r5
	ldrb	r0, [r0]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r4
	lsl	r3, r3, #0x4
	ldrb	r2, [r1, #0x5]
	mov	r0, #0xf
	and	r0, r0, r2
	orr	r0, r0, r3
	strb	r0, [r1, #0x5]
	ldrb	r0, [r6]
	add	r0, r0, r5
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	mov	r1, #0xf0
	strh	r1, [r0, #0x24]
	ldrb	r0, [r6]
	add	r0, r0, r5
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	ldr	r1, .L549+0x18
	strh	r1, [r0, #0x2e]
	ldrb	r0, [r6]
	add	r0, r0, r5
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r4, r4, #0x1c
	add	r0, r0, r4
	ldr	r1, .L549+0x1c
	str	r1, [r0]
	ldr	r1, .L549+0x20
	ldrb	r0, [r6]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, .L549+0x24
	str	r1, [r0]
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L550:
	.align	2, 0
.L549:
	.word	gLinkPlayers
	.word	gActiveBank
	.word	gUnknown_02024E8C
	.word	gTrainerBackPicCoords
	.word	gObjectBankIDs
	.word	gSprites
	.word	0xfffe
	.word	sub_80313A0
	.word	gBattleBankFunc
	.word	sub_811DAE4
.Lfe35:
	.size	 LinkPartnerHandleTrainerThrow,.Lfe35-LinkPartnerHandleTrainerThrow
	.align	2, 0
	.globl	LinkPartnerHandleTrainerSlide
	.type	 LinkPartnerHandleTrainerSlide,function
	.thumb_func
LinkPartnerHandleTrainerSlide:
	push	{lr}
	bl	LinkPartnerBufferExecCompleted
	pop	{r0}
	bx	r0
.Lfe36:
	.size	 LinkPartnerHandleTrainerSlide,.Lfe36-LinkPartnerHandleTrainerSlide
	.align	2, 0
	.globl	LinkPartnerHandleTrainerSlideBack
	.type	 LinkPartnerHandleTrainerSlideBack,function
	.thumb_func
LinkPartnerHandleTrainerSlideBack:
	push	{r4, r5, r6, lr}
	ldr	r6, .L553
	ldr	r4, .L553+0x4
	ldrb	r0, [r4]
	add	r0, r0, r6
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r5, .L553+0x8
	add	r0, r0, r5
	bl	oamt_add_pos2_onto_pos1
	ldrb	r0, [r4]
	add	r0, r0, r6
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	mov	r1, #0x23
	strh	r1, [r0, #0x2e]
	ldrb	r0, [r4]
	add	r0, r0, r6
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r1, .L553+0xc
	strh	r1, [r0, #0x32]
	ldrb	r0, [r4]
	add	r0, r0, r6
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldrh	r1, [r0, #0x22]
	strh	r1, [r0, #0x36]
	ldrb	r0, [r4]
	add	r0, r0, r6
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r1, r5, #0
	add	r1, r1, #0x1c
	add	r0, r0, r1
	ldr	r1, .L553+0x10
	str	r1, [r0]
	ldrb	r0, [r4]
	add	r0, r0, r6
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r1, .L553+0x14
	bl	StoreSpriteCallbackInData
	ldr	r1, .L553+0x18
	ldrb	r0, [r4]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, .L553+0x1c
	str	r1, [r0]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L554:
	.align	2, 0
.L553:
	.word	gObjectBankIDs
	.word	gActiveBank
	.word	gSprites
	.word	0xffd8
	.word	sub_8078B34
	.word	SpriteCallbackDummy
	.word	gBattleBankFunc
	.word	sub_811DB1C
.Lfe37:
	.size	 LinkPartnerHandleTrainerSlideBack,.Lfe37-LinkPartnerHandleTrainerSlideBack
	.align	2, 0
	.globl	LinkPartnerHandlecmd10
	.type	 LinkPartnerHandlecmd10,function
	.thumb_func
LinkPartnerHandlecmd10:
	push	{r4, r5, lr}
	ldr	r5, .L560
	ldrb	r2, [r5]
	lsl	r0, r2, #0x1
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	ldr	r4, .L560+0x4
	add	r3, r0, r4
	ldrb	r0, [r3, #0x4]
	cmp	r0, #0
	bne	.L556	@cond_branch
	lsl	r0, r2, #0x2
	add	r1, r4, #0
	sub	r1, r1, #0x10
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0x4
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L557	@cond_branch
	add	r0, r2, #0
	add	r1, r2, #0
	mov	r3, #0x5
	bl	move_anim_start_t4
.L557:
	ldrb	r0, [r5]
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r4
	ldrb	r0, [r1, #0x4]
	add	r0, r0, #0x1
	strb	r0, [r1, #0x4]
	b	.L558
.L561:
	.align	2, 0
.L560:
	.word	gActiveBank
	.word	gSharedMem+0x17810
.L556:
	ldrb	r1, [r3]
	mov	r0, #0x40
	and	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0
	bne	.L558	@cond_branch
	strb	r4, [r3, #0x4]
	ldr	r2, .L562
	ldrb	r1, [r5]
	lsl	r0, r1, #0x1
	add	r0, r0, r2
	ldrh	r2, [r0]
	mov	r0, #0x64
	mul	r0, r0, r2
	ldr	r2, .L562+0x4
	add	r0, r0, r2
	bl	sub_80324F8
	mov	r1, #0x40
	neg	r1, r1
	mov	r0, #0x10
	bl	PlaySE12WithPanning
	ldr	r2, .L562+0x8
	ldr	r3, .L562+0xc
	ldrb	r0, [r5]
	add	r0, r0, r3
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	strh	r4, [r0, #0x30]
	ldrb	r0, [r5]
	add	r0, r0, r3
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	mov	r1, #0x5
	strh	r1, [r0, #0x32]
	ldrb	r0, [r5]
	add	r0, r0, r3
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r2, r2, #0x1c
	add	r0, r0, r2
	ldr	r1, .L562+0x10
	str	r1, [r0]
	ldr	r1, .L562+0x14
	ldrb	r0, [r5]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, .L562+0x18
	str	r1, [r0]
.L558:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L563:
	.align	2, 0
.L562:
	.word	gBattlePartyID
	.word	gPlayerParty
	.word	gSprites
	.word	gObjectBankIDs
	.word	sub_80105EC
	.word	gBattleBankFunc
	.word	sub_811DE98
.Lfe38:
	.size	 LinkPartnerHandlecmd10,.Lfe38-LinkPartnerHandlecmd10
	.align	2, 0
	.globl	LinkPartnerHandlecmd11
	.type	 LinkPartnerHandlecmd11,function
	.thumb_func
LinkPartnerHandlecmd11:
	push	{lr}
	bl	LinkPartnerBufferExecCompleted
	pop	{r0}
	bx	r0
.Lfe39:
	.size	 LinkPartnerHandlecmd11,.Lfe39-LinkPartnerHandlecmd11
	.align	2, 0
	.globl	LinkPartnerHandlecmd12
	.type	 LinkPartnerHandlecmd12,function
	.thumb_func
LinkPartnerHandlecmd12:
	push	{lr}
	bl	LinkPartnerBufferExecCompleted
	pop	{r0}
	bx	r0
.Lfe40:
	.size	 LinkPartnerHandlecmd12,.Lfe40-LinkPartnerHandlecmd12
	.align	2, 0
	.globl	LinkPartnerHandleBallThrow
	.type	 LinkPartnerHandleBallThrow,function
	.thumb_func
LinkPartnerHandleBallThrow:
	push	{lr}
	bl	LinkPartnerBufferExecCompleted
	pop	{r0}
	bx	r0
.Lfe41:
	.size	 LinkPartnerHandleBallThrow,.Lfe41-LinkPartnerHandleBallThrow
	.align	2, 0
	.globl	LinkPartnerHandlePuase
	.type	 LinkPartnerHandlePuase,function
	.thumb_func
LinkPartnerHandlePuase:
	push	{lr}
	bl	LinkPartnerBufferExecCompleted
	pop	{r0}
	bx	r0
.Lfe42:
	.size	 LinkPartnerHandlePuase,.Lfe42-LinkPartnerHandlePuase
	.align	2, 0
	.globl	LinkPartnerHandleMoveAnimation
	.type	 LinkPartnerHandleMoveAnimation,function
	.thumb_func
LinkPartnerHandleMoveAnimation:
	push	{r4, r5, r6, lr}
	ldr	r6, .L572
	ldrb	r0, [r6]
	bl	mplay_80342A4
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB5625
	b	.L569	@long jump
.LCB5625:
	ldr	r0, .L572+0x4
	mov	ip, r0
	ldrb	r2, [r6]
	lsl	r2, r2, #0x9
	add	r0, r0, #0x1
	add	r0, r2, r0
	ldrb	r0, [r0]
	mov	r1, ip
	add	r1, r1, #0x2
	add	r1, r2, r1
	ldrb	r1, [r1]
	lsl	r1, r1, #0x8
	orr	r0, r0, r1
	ldr	r5, .L572+0x8
	mov	r1, ip
	add	r1, r1, #0x3
	add	r2, r2, r1
	ldrb	r1, [r2]
	strb	r1, [r5]
	ldr	r4, .L572+0xc
	ldrb	r2, [r6]
	lsl	r2, r2, #0x9
	mov	r1, ip
	add	r1, r1, #0x4
	add	r1, r2, r1
	ldrb	r3, [r1]
	mov	r1, ip
	add	r1, r1, #0x5
	add	r2, r2, r1
	ldrb	r1, [r2]
	lsl	r1, r1, #0x8
	orr	r3, r3, r1
	strh	r3, [r4]
	ldr	r4, .L572+0x10
	ldrb	r2, [r6]
	lsl	r2, r2, #0x9
	mov	r1, ip
	add	r1, r1, #0x6
	add	r1, r2, r1
	ldrb	r3, [r1]
	mov	r1, ip
	add	r1, r1, #0x7
	add	r1, r2, r1
	ldrb	r1, [r1]
	lsl	r1, r1, #0x8
	orr	r3, r3, r1
	mov	r1, ip
	add	r1, r1, #0x8
	add	r1, r2, r1
	ldrb	r1, [r1]
	lsl	r1, r1, #0x10
	orr	r3, r3, r1
	mov	r1, ip
	add	r1, r1, #0x9
	add	r2, r2, r1
	ldrb	r1, [r2]
	lsl	r1, r1, #0x18
	orr	r3, r3, r1
	str	r3, [r4]
	ldr	r3, .L572+0x14
	ldrb	r1, [r6]
	lsl	r1, r1, #0x9
	mov	r2, ip
	add	r2, r2, #0xa
	add	r1, r1, r2
	ldrb	r1, [r1]
	strb	r1, [r3]
	ldr	r4, .L572+0x18
	ldrb	r2, [r6]
	lsl	r2, r2, #0x9
	mov	r1, ip
	add	r1, r1, #0xc
	add	r1, r2, r1
	ldrb	r3, [r1]
	mov	r1, ip
	add	r1, r1, #0xd
	add	r2, r2, r1
	ldrb	r1, [r2]
	lsl	r1, r1, #0x8
	orr	r3, r3, r1
	strh	r3, [r4]
	ldr	r3, .L572+0x1c
	ldrb	r2, [r6]
	lsl	r2, r2, #0x9
	mov	r1, ip
	add	r1, r1, #0x10
	add	r2, r2, r1
	str	r2, [r3]
	ldr	r3, .L572+0x20
	ldrb	r1, [r6]
	lsl	r1, r1, #0x2
	add	r1, r1, r3
	ldr	r2, [r2]
	str	r2, [r1]
	ldrb	r1, [r5]
	bl	sub_8031720
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0
	beq	.L570	@cond_branch
	bl	LinkPartnerBufferExecCompleted
	b	.L569
.L573:
	.align	2, 0
.L572:
	.word	gActiveBank
	.word	gBattleBufferA
	.word	gUnknown_0202F7C4
	.word	gMovePowerMoveAnim
	.word	gMoveDmgMoveAnim
	.word	gHappinessMoveAnim
	.word	gWeatherMoveAnim
	.word	gDisableStructMoveAnim
	.word	gPID_perBank
.L570:
	ldrb	r1, [r6]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L574
	add	r0, r0, r1
	strb	r2, [r0, #0x4]
	ldr	r1, .L574+0x4
	ldrb	r0, [r6]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, .L574+0x8
	str	r1, [r0]
.L569:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L575:
	.align	2, 0
.L574:
	.word	gSharedMem+0x17810
	.word	gBattleBankFunc
	.word	sub_811FF30
.Lfe43:
	.size	 LinkPartnerHandleMoveAnimation,.Lfe43-LinkPartnerHandleMoveAnimation
	.align	2, 0
	.globl	sub_811FF30
	.type	 sub_811FF30,function
	.thumb_func
sub_811FF30:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	ldr	r2, .L590
	ldr	r5, .L590+0x4
	ldrb	r3, [r5]
	lsl	r1, r3, #0x9
	add	r0, r2, #0x1
	mov	r9, r0
	add	r0, r1, r0
	ldrb	r4, [r0]
	add	r6, r2, #0x2
	mov	r8, r6
	add	r0, r1, r6
	ldrb	r0, [r0]
	lsl	r0, r0, #0x8
	orr	r4, r4, r0
	add	r2, r2, #0xb
	add	r1, r1, r2
	ldrb	r7, [r1]
	lsl	r0, r3, #0x1
	add	r0, r0, r3
	lsl	r0, r0, #0x2
	ldr	r6, .L590+0x8
	add	r0, r0, r6
	ldrb	r2, [r0, #0x4]
	cmp	r2, #0x1
	beq	.L580	@cond_branch
	cmp	r2, #0x1
	bgt	.L589	@cond_branch
	cmp	r2, #0
	beq	.L578	@cond_branch
	b	.L577
.L591:
	.align	2, 0
.L590:
	.word	gBattleBufferA
	.word	gActiveBank
	.word	gSharedMem+0x17810
.L589:
	cmp	r2, #0x2
	beq	.L582	@cond_branch
	cmp	r2, #0x3
	beq	.L585	@cond_branch
	b	.L577
.L578:
	lsl	r1, r3, #0x2
	add	r0, r6, #0
	sub	r0, r0, #0x10
	add	r1, r1, r0
	ldrb	r2, [r1]
	mov	r0, #0xc
	and	r0, r0, r2
	cmp	r0, #0x4
	bne	.L579	@cond_branch
	mov	r0, #0x8
	orr	r0, r0, r2
	strb	r0, [r1]
	ldrb	r2, [r5]
	add	r0, r2, #0
	add	r1, r2, #0
	mov	r3, #0x5
	bl	move_anim_start_t4
.L579:
	ldrb	r0, [r5]
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r6
	mov	r0, #0x1
	strb	r0, [r1, #0x4]
	b	.L577
.L580:
	ldrb	r1, [r0]
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L577	@cond_branch
	mov	r0, #0x0
	bl	sub_80326EC
	add	r0, r4, #0
	bl	ExecuteMoveAnim
	ldrb	r0, [r5]
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r6
	mov	r0, #0x2
	strb	r0, [r1, #0x4]
	b	.L577
.L582:
	ldr	r0, .L592
	ldr	r0, [r0]
	bl	_call_via_r0
	ldr	r0, .L592+0x4
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L577	@cond_branch
	mov	r0, #0x1
	bl	sub_80326EC
	ldrb	r2, [r5]
	lsl	r0, r2, #0x2
	add	r4, r6, #0
	sub	r4, r4, #0x10
	add	r0, r0, r4
	ldrb	r1, [r0]
	mov	r0, #0x4
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L584	@cond_branch
	cmp	r7, #0x1
	bhi	.L584	@cond_branch
	add	r0, r2, #0
	add	r1, r2, #0
	mov	r3, #0x6
	bl	move_anim_start_t4
	ldrb	r0, [r5]
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	ldrb	r2, [r0]
	mov	r1, #0x9
	neg	r1, r1
	and	r1, r1, r2
	strb	r1, [r0]
.L584:
	ldr	r0, .L592+0x8
	ldrb	r1, [r0]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L592+0xc
	add	r0, r0, r1
	mov	r1, #0x3
	strb	r1, [r0, #0x4]
	b	.L577
.L593:
	.align	2, 0
.L592:
	.word	gAnimScriptCallback
	.word	gAnimScriptActive
	.word	gActiveBank
	.word	gSharedMem+0x17810
.L585:
	ldrb	r1, [r0]
	mov	r0, #0x40
	and	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0
	bne	.L577	@cond_branch
	bl	sub_8031F24
	ldrb	r0, [r5]
	lsl	r2, r0, #0x9
	mov	r3, r9
	add	r1, r2, r3
	ldrb	r1, [r1]
	add	r2, r2, r8
	ldrb	r2, [r2]
	lsl	r2, r2, #0x8
	orr	r1, r1, r2
	bl	sub_80324BC
	ldrb	r1, [r5]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	strb	r4, [r0, #0x4]
	bl	LinkPartnerBufferExecCompleted
.L577:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe44:
	.size	 sub_811FF30,.Lfe44-sub_811FF30
	.align	2, 0
	.globl	LinkPartnerHandlePrintString
	.type	 LinkPartnerHandlePrintString,function
	.thumb_func
LinkPartnerHandlePrintString:
	push	{r4, lr}
	add	sp, sp, #0xfffffffc
	ldr	r0, .L595
	mov	r1, #0x0
	strh	r1, [r0]
	ldr	r0, .L595+0x4
	strh	r1, [r0]
	ldr	r4, .L595+0x8
	ldrb	r0, [r4]
	lsl	r0, r0, #0x9
	ldr	r1, .L595+0xc
	add	r0, r0, r1
	ldrh	r0, [r0]
	bl	BufferStringBattle
	ldr	r0, .L595+0x10
	ldr	r1, .L595+0x14
	mov	r2, #0xf
	str	r2, [sp]
	mov	r2, #0x90
	mov	r3, #0x2
	bl	sub_8002EB0
	ldr	r1, .L595+0x18
	ldrb	r0, [r4]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, .L595+0x1c
	str	r1, [r0]
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L596:
	.align	2, 0
.L595:
	.word	gUnknown_030042A4
	.word	gUnknown_030042A0
	.word	gActiveBank
	.word	gBattleBufferA+0x2
	.word	gUnknown_03004210
	.word	gDisplayedStringBattle
	.word	gBattleBankFunc
	.word	sub_811DFA0
.Lfe45:
	.size	 LinkPartnerHandlePrintString,.Lfe45-LinkPartnerHandlePrintString
	.align	2, 0
	.globl	LinkPartnerHandlePrintStringPlayerOnly
	.type	 LinkPartnerHandlePrintStringPlayerOnly,function
	.thumb_func
LinkPartnerHandlePrintStringPlayerOnly:
	push	{lr}
	bl	LinkPartnerBufferExecCompleted
	pop	{r0}
	bx	r0
.Lfe46:
	.size	 LinkPartnerHandlePrintStringPlayerOnly,.Lfe46-LinkPartnerHandlePrintStringPlayerOnly
	.align	2, 0
	.globl	LinkPartnerHandlecmd18
	.type	 LinkPartnerHandlecmd18,function
	.thumb_func
LinkPartnerHandlecmd18:
	push	{lr}
	bl	LinkPartnerBufferExecCompleted
	pop	{r0}
	bx	r0
.Lfe47:
	.size	 LinkPartnerHandlecmd18,.Lfe47-LinkPartnerHandlecmd18
	.align	2, 0
	.globl	LinkPartnerHandlecmd19
	.type	 LinkPartnerHandlecmd19,function
	.thumb_func
LinkPartnerHandlecmd19:
	push	{lr}
	bl	LinkPartnerBufferExecCompleted
	pop	{r0}
	bx	r0
.Lfe48:
	.size	 LinkPartnerHandlecmd19,.Lfe48-LinkPartnerHandlecmd19
	.align	2, 0
	.globl	LinkPartnerHandlecmd20
	.type	 LinkPartnerHandlecmd20,function
	.thumb_func
LinkPartnerHandlecmd20:
	push	{lr}
	bl	LinkPartnerBufferExecCompleted
	pop	{r0}
	bx	r0
.Lfe49:
	.size	 LinkPartnerHandlecmd20,.Lfe49-LinkPartnerHandlecmd20
	.align	2, 0
	.globl	LinkPartnerHandleOpenBag
	.type	 LinkPartnerHandleOpenBag,function
	.thumb_func
LinkPartnerHandleOpenBag:
	push	{lr}
	bl	LinkPartnerBufferExecCompleted
	pop	{r0}
	bx	r0
.Lfe50:
	.size	 LinkPartnerHandleOpenBag,.Lfe50-LinkPartnerHandleOpenBag
	.align	2, 0
	.globl	LinkPartnerHandlecmd22
	.type	 LinkPartnerHandlecmd22,function
	.thumb_func
LinkPartnerHandlecmd22:
	push	{lr}
	bl	LinkPartnerBufferExecCompleted
	pop	{r0}
	bx	r0
.Lfe51:
	.size	 LinkPartnerHandlecmd22,.Lfe51-LinkPartnerHandlecmd22
	.align	2, 0
	.globl	LinkPartnerHandlecmd23
	.type	 LinkPartnerHandlecmd23,function
	.thumb_func
LinkPartnerHandlecmd23:
	push	{lr}
	bl	LinkPartnerBufferExecCompleted
	pop	{r0}
	bx	r0
.Lfe52:
	.size	 LinkPartnerHandlecmd23,.Lfe52-LinkPartnerHandlecmd23
	.align	2, 0
	.globl	LinkPartnerHandleHealthBarUpdate
	.type	 LinkPartnerHandleHealthBarUpdate,function
	.thumb_func
LinkPartnerHandleHealthBarUpdate:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #0xfffffffc
	mov	r0, #0x0
	bl	load_gfxc_health_bar
	ldr	r3, .L607
	ldr	r0, .L607+0x4
	mov	r9, r0
	ldrb	r4, [r0]
	lsl	r2, r4, #0x9
	add	r0, r3, #0x2
	add	r0, r2, r0
	ldrb	r1, [r0]
	add	r3, r3, #0x3
	add	r2, r2, r3
	ldrb	r0, [r2]
	lsl	r0, r0, #0x8
	orr	r1, r1, r0
	lsl	r1, r1, #0x10
	asr	r7, r1, #0x10
	ldr	r0, .L607+0x8
	cmp	r7, r0
	beq	.L605	@cond_branch
	ldr	r6, .L607+0xc
	lsl	r0, r4, #0x1
	add	r0, r0, r6
	ldrh	r0, [r0]
	mov	r5, #0x64
	mul	r0, r0, r5
	ldr	r4, .L607+0x10
	add	r0, r0, r4
	mov	r1, #0x3a
	bl	GetMonData
	mov	r8, r0
	mov	r1, r9
	ldrb	r0, [r1]
	lsl	r0, r0, #0x1
	add	r0, r0, r6
	ldrh	r0, [r0]
	mul	r0, r0, r5
	add	r0, r0, r4
	mov	r1, #0x39
	bl	GetMonData
	add	r3, r0, #0
	mov	r1, r9
	ldrb	r0, [r1]
	ldr	r1, .L607+0x14
	add	r1, r0, r1
	ldrb	r1, [r1]
	str	r7, [sp]
	mov	r2, r8
	bl	sub_8043D84
	b	.L606
.L608:
	.align	2, 0
.L607:
	.word	gBattleBufferA
	.word	gActiveBank
	.word	0x7fff
	.word	gBattlePartyID
	.word	gPlayerParty
	.word	gHealthboxIDs
.L605:
	ldr	r1, .L609
	lsl	r0, r4, #0x1
	add	r0, r0, r1
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L609+0x4
	add	r0, r0, r1
	mov	r1, #0x3a
	bl	GetMonData
	add	r2, r0, #0
	mov	r1, r9
	ldrb	r0, [r1]
	ldr	r1, .L609+0x8
	add	r1, r0, r1
	ldrb	r1, [r1]
	str	r7, [sp]
	mov	r3, #0x0
	bl	sub_8043D84
.L606:
	ldr	r1, .L609+0xc
	ldr	r0, .L609+0x10
	ldrb	r0, [r0]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, .L609+0x14
	str	r1, [r0]
	add	sp, sp, #0x4
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L610:
	.align	2, 0
.L609:
	.word	gBattlePartyID
	.word	gPlayerParty
	.word	gHealthboxIDs
	.word	gBattleBankFunc
	.word	gActiveBank
	.word	bx_t3_healthbar_update
.Lfe53:
	.size	 LinkPartnerHandleHealthBarUpdate,.Lfe53-LinkPartnerHandleHealthBarUpdate
	.align	2, 0
	.globl	LinkPartnerHandleExpBarUpdate
	.type	 LinkPartnerHandleExpBarUpdate,function
	.thumb_func
LinkPartnerHandleExpBarUpdate:
	push	{lr}
	bl	LinkPartnerBufferExecCompleted
	pop	{r0}
	bx	r0
.Lfe54:
	.size	 LinkPartnerHandleExpBarUpdate,.Lfe54-LinkPartnerHandleExpBarUpdate
	.align	2, 0
	.globl	LinkPartnerHandleStatusIconUpdate
	.type	 LinkPartnerHandleStatusIconUpdate,function
	.thumb_func
LinkPartnerHandleStatusIconUpdate:
	push	{r4, lr}
	ldr	r4, .L614
	ldrb	r0, [r4]
	bl	mplay_80342A4
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L613	@cond_branch
	ldr	r0, .L614+0x4
	ldrb	r1, [r4]
	add	r0, r1, r0
	ldrb	r0, [r0]
	ldr	r2, .L614+0x8
	lsl	r1, r1, #0x1
	add	r1, r1, r2
	ldrh	r2, [r1]
	mov	r1, #0x64
	mul	r1, r1, r2
	ldr	r2, .L614+0xc
	add	r1, r1, r2
	mov	r2, #0x9
	bl	sub_8045A5C
	ldrb	r0, [r4]
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L614+0x10
	add	r1, r1, r0
	ldrb	r2, [r1]
	mov	r0, #0x11
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r1]
	ldr	r1, .L614+0x14
	ldrb	r0, [r4]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, .L614+0x18
	str	r1, [r0]
.L613:
	pop	{r4}
	pop	{r0}
	bx	r0
.L615:
	.align	2, 0
.L614:
	.word	gActiveBank
	.word	gHealthboxIDs
	.word	gBattlePartyID
	.word	gPlayerParty
	.word	gSharedMem+0x17810
	.word	gBattleBankFunc
	.word	sub_811E38C
.Lfe55:
	.size	 LinkPartnerHandleStatusIconUpdate,.Lfe55-LinkPartnerHandleStatusIconUpdate
	.align	2, 0
	.globl	LinkPartnerHandleStatusAnimation
	.type	 LinkPartnerHandleStatusAnimation,function
	.thumb_func
LinkPartnerHandleStatusAnimation:
	push	{r4, r5, lr}
	ldr	r5, .L618
	ldrb	r0, [r5]
	bl	mplay_80342A4
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L617	@cond_branch
	ldr	r4, .L618+0x4
	ldrb	r3, [r5]
	lsl	r3, r3, #0x9
	add	r0, r4, #0x1
	add	r0, r3, r0
	ldrb	r0, [r0]
	add	r1, r4, #0x2
	add	r1, r3, r1
	ldrb	r1, [r1]
	add	r2, r4, #0x3
	add	r2, r3, r2
	ldrb	r2, [r2]
	lsl	r2, r2, #0x8
	orr	r1, r1, r2
	add	r2, r4, #0x4
	add	r2, r3, r2
	ldrb	r2, [r2]
	lsl	r2, r2, #0x10
	orr	r1, r1, r2
	add	r4, r4, #0x5
	add	r3, r3, r4
	ldrb	r2, [r3]
	lsl	r2, r2, #0x18
	orr	r1, r1, r2
	bl	move_anim_start_t2_for_situation
	ldr	r1, .L618+0x8
	ldrb	r0, [r5]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, .L618+0xc
	str	r1, [r0]
.L617:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L619:
	.align	2, 0
.L618:
	.word	gActiveBank
	.word	gBattleBufferA
	.word	gBattleBankFunc
	.word	sub_811E38C
.Lfe56:
	.size	 LinkPartnerHandleStatusAnimation,.Lfe56-LinkPartnerHandleStatusAnimation
	.align	2, 0
	.globl	LinkPartnerHandleStatusXor
	.type	 LinkPartnerHandleStatusXor,function
	.thumb_func
LinkPartnerHandleStatusXor:
	push	{lr}
	bl	LinkPartnerBufferExecCompleted
	pop	{r0}
	bx	r0
.Lfe57:
	.size	 LinkPartnerHandleStatusXor,.Lfe57-LinkPartnerHandleStatusXor
	.align	2, 0
	.globl	LinkPartnerHandlecmd29
	.type	 LinkPartnerHandlecmd29,function
	.thumb_func
LinkPartnerHandlecmd29:
	push	{lr}
	bl	LinkPartnerBufferExecCompleted
	pop	{r0}
	bx	r0
.Lfe58:
	.size	 LinkPartnerHandlecmd29,.Lfe58-LinkPartnerHandlecmd29
	.align	2, 0
	.globl	LinkPartnerHandleDMATransfer
	.type	 LinkPartnerHandleDMATransfer,function
	.thumb_func
LinkPartnerHandleDMATransfer:
	push	{lr}
	bl	LinkPartnerBufferExecCompleted
	pop	{r0}
	bx	r0
.Lfe59:
	.size	 LinkPartnerHandleDMATransfer,.Lfe59-LinkPartnerHandleDMATransfer
	.align	2, 0
	.globl	LinkPartnerHandlecmd31
	.type	 LinkPartnerHandlecmd31,function
	.thumb_func
LinkPartnerHandlecmd31:
	push	{lr}
	bl	LinkPartnerBufferExecCompleted
	pop	{r0}
	bx	r0
.Lfe60:
	.size	 LinkPartnerHandlecmd31,.Lfe60-LinkPartnerHandlecmd31
	.align	2, 0
	.globl	LinkPartnerHandlecmd32
	.type	 LinkPartnerHandlecmd32,function
	.thumb_func
LinkPartnerHandlecmd32:
	push	{lr}
	bl	LinkPartnerBufferExecCompleted
	pop	{r0}
	bx	r0
.Lfe61:
	.size	 LinkPartnerHandlecmd32,.Lfe61-LinkPartnerHandlecmd32
	.align	2, 0
	.globl	LinkPartnerHandlecmd33
	.type	 LinkPartnerHandlecmd33,function
	.thumb_func
LinkPartnerHandlecmd33:
	push	{lr}
	bl	LinkPartnerBufferExecCompleted
	pop	{r0}
	bx	r0
.Lfe62:
	.size	 LinkPartnerHandlecmd33,.Lfe62-LinkPartnerHandlecmd33
	.align	2, 0
	.globl	LinkPartnerHandlecmd34
	.type	 LinkPartnerHandlecmd34,function
	.thumb_func
LinkPartnerHandlecmd34:
	push	{lr}
	bl	LinkPartnerBufferExecCompleted
	pop	{r0}
	bx	r0
.Lfe63:
	.size	 LinkPartnerHandlecmd34,.Lfe63-LinkPartnerHandlecmd34
	.align	2, 0
	.globl	LinkPartnerHandlecmd35
	.type	 LinkPartnerHandlecmd35,function
	.thumb_func
LinkPartnerHandlecmd35:
	push	{lr}
	bl	LinkPartnerBufferExecCompleted
	pop	{r0}
	bx	r0
.Lfe64:
	.size	 LinkPartnerHandlecmd35,.Lfe64-LinkPartnerHandlecmd35
	.align	2, 0
	.globl	LinkPartnerHandlecmd36
	.type	 LinkPartnerHandlecmd36,function
	.thumb_func
LinkPartnerHandlecmd36:
	push	{lr}
	bl	LinkPartnerBufferExecCompleted
	pop	{r0}
	bx	r0
.Lfe65:
	.size	 LinkPartnerHandlecmd36,.Lfe65-LinkPartnerHandlecmd36
	.align	2, 0
	.globl	LinkPartnerHandlecmd37
	.type	 LinkPartnerHandlecmd37,function
	.thumb_func
LinkPartnerHandlecmd37:
	push	{lr}
	ldr	r2, .L630
	ldrb	r1, [r2]
	mov	r0, #0x80
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2]
	bl	LinkPartnerBufferExecCompleted
	pop	{r0}
	bx	r0
.L631:
	.align	2, 0
.L630:
	.word	gUnknown_020238C8
.Lfe66:
	.size	 LinkPartnerHandlecmd37,.Lfe66-LinkPartnerHandlecmd37
	.align	2, 0
	.globl	LinkPartnerHandlecmd38
	.type	 LinkPartnerHandlecmd38,function
	.thumb_func
LinkPartnerHandlecmd38:
	push	{lr}
	ldr	r3, .L633
	ldr	r1, .L633+0x4
	ldr	r0, .L633+0x8
	ldrb	r0, [r0]
	lsl	r0, r0, #0x9
	add	r1, r1, #0x1
	add	r0, r0, r1
	ldrb	r0, [r0]
	mov	r1, #0x7f
	and	r1, r1, r0
	ldrb	r2, [r3]
	mov	r0, #0x80
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r3]
	bl	LinkPartnerBufferExecCompleted
	pop	{r0}
	bx	r0
.L634:
	.align	2, 0
.L633:
	.word	gUnknown_020238C8
	.word	gBattleBufferA
	.word	gActiveBank
.Lfe67:
	.size	 LinkPartnerHandlecmd38,.Lfe67-LinkPartnerHandlecmd38
	.align	2, 0
	.globl	LinkPartnerHandlecmd39
	.type	 LinkPartnerHandlecmd39,function
	.thumb_func
LinkPartnerHandlecmd39:
	push	{lr}
	ldr	r2, .L636
	ldrb	r1, [r2]
	mov	r0, #0x7f
	and	r0, r0, r1
	strb	r0, [r2]
	bl	LinkPartnerBufferExecCompleted
	pop	{r0}
	bx	r0
.L637:
	.align	2, 0
.L636:
	.word	gUnknown_020238C8
.Lfe68:
	.size	 LinkPartnerHandlecmd39,.Lfe68-LinkPartnerHandlecmd39
	.align	2, 0
	.globl	LinkPartnerHandlecmd40
	.type	 LinkPartnerHandlecmd40,function
	.thumb_func
LinkPartnerHandlecmd40:
	push	{lr}
	ldr	r3, .L639
	ldr	r1, [r3]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x1f
	mov	r0, #0x1
	eor	r1, r1, r0
	lsl	r1, r1, #0x7
	ldrb	r2, [r3]
	mov	r0, #0x7f
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r3]
	bl	LinkPartnerBufferExecCompleted
	pop	{r0}
	bx	r0
.L640:
	.align	2, 0
.L639:
	.word	gUnknown_020238C8
.Lfe69:
	.size	 LinkPartnerHandlecmd40,.Lfe69-LinkPartnerHandlecmd40
	.align	2, 0
	.globl	LinkPartnerHandleHitAnimation
	.type	 LinkPartnerHandleHitAnimation,function
	.thumb_func
LinkPartnerHandleHitAnimation:
	push	{r4, lr}
	ldr	r3, .L644
	ldr	r2, .L644+0x4
	ldr	r4, .L644+0x8
	ldrb	r0, [r4]
	add	r0, r0, r2
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	add	r0, r0, #0x3e
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1d
	cmp	r0, #0
	bge	.L642	@cond_branch
	bl	LinkPartnerBufferExecCompleted
	b	.L643
.L645:
	.align	2, 0
.L644:
	.word	gSprites
	.word	gObjectBankIDs
	.word	gActiveBank
.L642:
	ldr	r1, .L646
	mov	r0, #0x1
	strb	r0, [r1]
	ldrb	r0, [r4]
	add	r0, r0, r2
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	mov	r1, #0x0
	strh	r1, [r0, #0x30]
	ldrb	r0, [r4]
	bl	sub_8047858
	ldr	r1, .L646+0x4
	ldrb	r0, [r4]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, .L646+0x8
	str	r1, [r0]
.L643:
	pop	{r4}
	pop	{r0}
	bx	r0
.L647:
	.align	2, 0
.L646:
	.word	gDoingBattleAnim
	.word	gBattleBankFunc
	.word	bx_blink_t3
.Lfe70:
	.size	 LinkPartnerHandleHitAnimation,.Lfe70-LinkPartnerHandleHitAnimation
	.align	2, 0
	.globl	LinkPartnerHandlecmd42
	.type	 LinkPartnerHandlecmd42,function
	.thumb_func
LinkPartnerHandlecmd42:
	push	{lr}
	bl	LinkPartnerBufferExecCompleted
	pop	{r0}
	bx	r0
.Lfe71:
	.size	 LinkPartnerHandlecmd42,.Lfe71-LinkPartnerHandlecmd42
	.align	2, 0
	.globl	LinkPartnerHandleEffectivenessSound
	.type	 LinkPartnerHandleEffectivenessSound,function
	.thumb_func
LinkPartnerHandleEffectivenessSound:
	push	{r4, lr}
	ldr	r4, .L652
	ldrb	r0, [r4]
	bl	GetBankSide
	lsl	r0, r0, #0x18
	mov	r3, #0x3f
	cmp	r0, #0
	bne	.L650	@cond_branch
	mov	r3, #0xc0
.L650:
	ldr	r2, .L652+0x4
	ldrb	r1, [r4]
	lsl	r1, r1, #0x9
	add	r0, r2, #0x1
	add	r0, r1, r0
	ldrb	r0, [r0]
	add	r2, r2, #0x2
	add	r1, r1, r2
	ldrb	r1, [r1]
	lsl	r1, r1, #0x8
	orr	r0, r0, r1
	lsl	r1, r3, #0x18
	asr	r1, r1, #0x18
	bl	PlaySE12WithPanning
	bl	LinkPartnerBufferExecCompleted
	pop	{r4}
	pop	{r0}
	bx	r0
.L653:
	.align	2, 0
.L652:
	.word	gActiveBank
	.word	gBattleBufferA
.Lfe72:
	.size	 LinkPartnerHandleEffectivenessSound,.Lfe72-LinkPartnerHandleEffectivenessSound
	.align	2, 0
	.globl	LinkPartnerHandlecmd44
	.type	 LinkPartnerHandlecmd44,function
	.thumb_func
LinkPartnerHandlecmd44:
	push	{lr}
	ldr	r2, .L655
	ldr	r0, .L655+0x4
	ldrb	r1, [r0]
	lsl	r1, r1, #0x9
	add	r0, r2, #0x1
	add	r0, r1, r0
	ldrb	r0, [r0]
	add	r2, r2, #0x2
	add	r1, r1, r2
	ldrb	r1, [r1]
	lsl	r1, r1, #0x8
	orr	r0, r0, r1
	bl	PlayFanfare
	bl	LinkPartnerBufferExecCompleted
	pop	{r0}
	bx	r0
.L656:
	.align	2, 0
.L655:
	.word	gBattleBufferA
	.word	gActiveBank
.Lfe73:
	.size	 LinkPartnerHandlecmd44,.Lfe73-LinkPartnerHandlecmd44
	.align	2, 0
	.globl	LinkPartnerHandleFaintingCry
	.type	 LinkPartnerHandleFaintingCry,function
	.thumb_func
LinkPartnerHandleFaintingCry:
	push	{lr}
	ldr	r1, .L658
	ldr	r0, .L658+0x4
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L658+0x8
	add	r0, r0, r1
	mov	r1, #0xb
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x19
	neg	r1, r1
	mov	r2, #0x5
	bl	PlayCry3
	bl	LinkPartnerBufferExecCompleted
	pop	{r0}
	bx	r0
.L659:
	.align	2, 0
.L658:
	.word	gBattlePartyID
	.word	gActiveBank
	.word	gPlayerParty
.Lfe74:
	.size	 LinkPartnerHandleFaintingCry,.Lfe74-LinkPartnerHandleFaintingCry
	.align	2, 0
	.globl	LinkPartnerHandleIntroSlide
	.type	 LinkPartnerHandleIntroSlide,function
	.thumb_func
LinkPartnerHandleIntroSlide:
	push	{lr}
	ldr	r1, .L661
	ldr	r0, .L661+0x4
	ldrb	r0, [r0]
	lsl	r0, r0, #0x9
	add	r1, r1, #0x1
	add	r0, r0, r1
	ldrb	r0, [r0]
	bl	sub_80E43C0
	ldr	r2, .L661+0x8
	ldrh	r0, [r2]
	mov	r1, #0x1
	orr	r0, r0, r1
	strh	r0, [r2]
	bl	LinkPartnerBufferExecCompleted
	pop	{r0}
	bx	r0
.L662:
	.align	2, 0
.L661:
	.word	gBattleBufferA
	.word	gActiveBank
	.word	gUnknown_02024DE8
.Lfe75:
	.size	 LinkPartnerHandleIntroSlide,.Lfe75-LinkPartnerHandleIntroSlide
	.align	2, 0
	.globl	LinkPartnerHandleTrainerBallThrow
	.type	 LinkPartnerHandleTrainerBallThrow,function
	.thumb_func
LinkPartnerHandleTrainerBallThrow:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	ldr	r6, .L665
	ldr	r7, .L665+0x4
	ldrb	r0, [r7]
	add	r0, r0, r6
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r5, .L665+0x8
	add	r0, r0, r5
	bl	oamt_add_pos2_onto_pos1
	ldrb	r0, [r7]
	add	r0, r0, r6
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	mov	r1, #0x32
	strh	r1, [r0, #0x2e]
	ldrb	r0, [r7]
	add	r0, r0, r6
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r1, .L665+0xc
	strh	r1, [r0, #0x32]
	ldrb	r0, [r7]
	add	r0, r0, r6
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldrh	r1, [r0, #0x22]
	strh	r1, [r0, #0x36]
	ldrb	r0, [r7]
	add	r0, r0, r6
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r1, r5, #0
	add	r1, r1, #0x1c
	add	r0, r0, r1
	ldr	r1, .L665+0x10
	str	r1, [r0]
	ldrb	r2, [r7]
	add	r0, r2, r6
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	strh	r2, [r0, #0x38]
	ldrb	r0, [r7]
	add	r0, r0, r6
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r1, .L665+0x14
	bl	StoreSpriteCallbackInData
	ldrb	r0, [r7]
	add	r0, r0, r6
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	mov	r1, #0x1
	bl	StartSpriteAnim
	ldr	r0, .L665+0x18
	bl	AllocSpritePalette
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L665+0x1c
	mov	r8, r0
	ldrb	r0, [r7]
	bl	sub_803FC34
	ldr	r2, .L665+0x20
	lsl	r1, r0, #0x3
	sub	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldrb	r0, [r1, #0x13]
	lsl	r0, r0, #0x3
	add	r0, r0, r8
	ldr	r0, [r0]
	lsl	r4, r4, #0x4
	mov	r2, #0x80
	lsl	r2, r2, #0x1
	add	r1, r4, r2
	mov	r2, #0x20
	bl	LoadCompressedPalette
	ldrb	r0, [r7]
	add	r0, r0, r6
	ldrb	r0, [r0]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r5
	ldrb	r2, [r1, #0x5]
	mov	r0, #0xf
	and	r0, r0, r2
	orr	r0, r0, r4
	strb	r0, [r1, #0x5]
	ldr	r0, .L665+0x24
	mov	r1, #0x5
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r4, .L665+0x28
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r4
	ldrb	r0, [r7]
	strh	r0, [r1, #0x8]
	ldrb	r3, [r7]
	lsl	r0, r3, #0x1
	add	r0, r0, r3
	lsl	r0, r0, #0x2
	ldr	r2, .L665+0x2c
	add	r0, r0, r2
	ldrb	r1, [r0]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L664	@cond_branch
	ldr	r0, .L665+0x30
	add	r0, r3, r0
	ldrb	r1, [r0]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r0, r0, r4
	ldr	r1, .L665+0x34
	str	r1, [r0]
.L664:
	add	r2, r2, #0x30
	ldrb	r0, [r2, #0x9]
	mov	r1, #0x1
	orr	r0, r0, r1
	strb	r0, [r2, #0x9]
	ldr	r1, .L665+0x38
	ldrb	r0, [r7]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, .L665+0x3c
	str	r1, [r0]
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L666:
	.align	2, 0
.L665:
	.word	gObjectBankIDs
	.word	gActiveBank
	.word	gSprites
	.word	0xffd8
	.word	sub_8078B34
	.word	sub_8030E38
	.word	0xd6f9
	.word	gTrainerBackPicPaletteTable
	.word	gLinkPlayers
	.word	sub_812071C
	.word	gTasks
	.word	gSharedMem+0x17810
	.word	gUnknown_02024E68
	.word	sub_8044CA0
	.word	gBattleBankFunc
	.word	nullsub_74
.Lfe76:
	.size	 LinkPartnerHandleTrainerBallThrow,.Lfe76-LinkPartnerHandleTrainerBallThrow
	.align	2, 0
	.globl	sub_812071C
	.type	 sub_812071C,function
	.thumb_func
sub_812071C:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	ldr	r1, .L672
	lsl	r0, r0, #0x2
	add	r0, r0, r8
	lsl	r0, r0, #0x3
	add	r1, r0, r1
	ldrh	r2, [r1, #0xa]
	mov	r3, #0xa
	ldrsh	r0, [r1, r3]
	cmp	r0, #0x17
	bgt	.L668	@cond_branch
	add	r0, r2, #0x1
	strh	r0, [r1, #0xa]
	b	.L667
.L673:
	.align	2, 0
.L672:
	.word	gTasks
.L668:
	ldr	r7, .L674
	ldrb	r0, [r7]
	mov	r9, r0
	ldrh	r0, [r1, #0x8]
	strb	r0, [r7]
	bl	IsDoubleBattle
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L670	@cond_branch
	ldr	r0, .L674+0x4
	ldrh	r1, [r0]
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L669	@cond_branch
.L670:
	ldr	r0, .L674+0x8
	ldrb	r1, [r7]
	lsl	r2, r1, #0x9
	add	r0, r0, #0x1
	add	r2, r2, r0
	ldr	r0, .L674+0xc
	lsl	r1, r1, #0x1
	add	r1, r1, r0
	ldrh	r0, [r1]
	strb	r0, [r2]
	ldrb	r0, [r7]
	mov	r1, #0x0
	bl	sub_811F864
	b	.L671
.L675:
	.align	2, 0
.L674:
	.word	gActiveBank
	.word	gBattleTypeFlags
	.word	gBattleBufferA
	.word	gBattlePartyID
.L669:
	ldr	r4, .L676
	ldrb	r0, [r7]
	lsl	r1, r0, #0x9
	add	r4, r4, #0x1
	add	r1, r1, r4
	ldr	r5, .L676+0x4
	lsl	r0, r0, #0x1
	add	r0, r0, r5
	ldrh	r0, [r0]
	strb	r0, [r1]
	ldrb	r0, [r7]
	mov	r1, #0x0
	bl	sub_811F864
	ldrb	r0, [r7]
	mov	r6, #0x2
	eor	r0, r0, r6
	strb	r0, [r7]
	ldrb	r0, [r7]
	lsl	r1, r0, #0x9
	add	r1, r1, r4
	lsl	r0, r0, #0x1
	add	r0, r0, r5
	ldrh	r0, [r0]
	strb	r0, [r1]
	ldrb	r1, [r7]
	lsl	r0, r1, #0x1
	add	r0, r0, r5
	ldrh	r2, [r0]
	mov	r0, #0x64
	mul	r0, r0, r2
	ldr	r2, .L676+0x8
	add	r0, r0, r2
	bl	BattleLoadPlayerMonSprite
	ldrb	r0, [r7]
	mov	r1, #0x0
	bl	sub_811F864
	ldrb	r0, [r7]
	eor	r0, r0, r6
	strb	r0, [r7]
.L671:
	ldr	r1, .L676+0xc
	ldr	r2, .L676+0x10
	ldrb	r0, [r2]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, .L676+0x14
	str	r1, [r0]
	mov	r3, r9
	strb	r3, [r2]
	mov	r0, r8
	bl	DestroyTask
.L667:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L677:
	.align	2, 0
.L676:
	.word	gBattleBufferA
	.word	gBattlePartyID
	.word	gPlayerParty
	.word	gBattleBankFunc
	.word	gActiveBank
	.word	sub_811DCA0
.Lfe77:
	.size	 sub_812071C,.Lfe77-sub_812071C
	.align	2, 0
	.globl	LinkPartnerHandlecmd48
	.type	 LinkPartnerHandlecmd48,function
	.thumb_func
LinkPartnerHandlecmd48:
	push	{r4, r5, r6, lr}
	ldr	r1, .L681
	ldr	r0, .L681+0x4
	ldrb	r2, [r0]
	lsl	r0, r2, #0x9
	add	r1, r1, #0x1
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L679	@cond_branch
	add	r0, r2, #0
	bl	GetBankSide
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L679	@cond_branch
	bl	LinkPartnerBufferExecCompleted
	b	.L678
.L682:
	.align	2, 0
.L681:
	.word	gBattleBufferA
	.word	gActiveBank
.L679:
	ldr	r5, .L683
	ldrb	r1, [r5]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r6, .L683+0x4
	add	r0, r0, r6
	ldrb	r1, [r0]
	mov	r2, #0x1
	orr	r1, r1, r2
	strb	r1, [r0]
	ldrb	r0, [r5]
	lsl	r3, r0, #0x9
	ldr	r4, .L683+0x8
	add	r1, r3, r4
	sub	r2, r4, #0x3
	add	r2, r3, r2
	ldrb	r2, [r2]
	sub	r4, r4, #0x2
	add	r3, r3, r4
	ldrb	r3, [r3]
	bl	sub_8044804
	ldr	r2, .L683+0xc
	ldrb	r1, [r5]
	add	r1, r1, r2
	mov	r2, #0x0
	strb	r0, [r1]
	ldrb	r1, [r5]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	strb	r2, [r0, #0x5]
	ldrb	r1, [r5]
	lsl	r0, r1, #0x9
	add	r0, r0, r4
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L680	@cond_branch
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	mov	r1, #0x5d
	strb	r1, [r0, #0x5]
.L680:
	ldr	r0, .L683+0x10
	ldrb	r1, [r5]
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	ldr	r0, .L683+0x14
	str	r0, [r1]
.L678:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L684:
	.align	2, 0
.L683:
	.word	gActiveBank
	.word	gSharedMem+0x17810
	.word	gBattleBufferA+0x4
	.word	gUnknown_02024E68
	.word	gBattleBankFunc
	.word	sub_81208E0
.Lfe78:
	.size	 LinkPartnerHandlecmd48,.Lfe78-LinkPartnerHandlecmd48
	.align	2, 0
	.globl	sub_81208E0
	.type	 sub_81208E0,function
	.thumb_func
sub_81208E0:
	push	{r4, lr}
	ldr	r4, .L687
	ldrb	r1, [r4]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r3, .L687+0x4
	add	r0, r0, r3
	ldrb	r1, [r0, #0x5]
	add	r2, r1, #0x1
	strb	r2, [r0, #0x5]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	cmp	r1, #0x5c
	bls	.L686	@cond_branch
	ldrb	r0, [r4]
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r3
	mov	r0, #0x0
	strb	r0, [r1, #0x5]
	bl	LinkPartnerBufferExecCompleted
.L686:
	pop	{r4}
	pop	{r0}
	bx	r0
.L688:
	.align	2, 0
.L687:
	.word	gActiveBank
	.word	gSharedMem+0x17810
.Lfe79:
	.size	 sub_81208E0,.Lfe79-sub_81208E0
	.align	2, 0
	.globl	LinkPartnerHandlecmd49
	.type	 LinkPartnerHandlecmd49,function
	.thumb_func
LinkPartnerHandlecmd49:
	push	{lr}
	ldr	r0, .L691
	ldrb	r3, [r0]
	lsl	r0, r3, #0x1
	add	r0, r0, r3
	lsl	r0, r0, #0x2
	ldr	r1, .L691+0x4
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L690	@cond_branch
	ldr	r2, .L691+0x8
	ldr	r0, .L691+0xc
	add	r0, r3, r0
	ldrb	r1, [r0]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r0, r0, r2
	ldr	r1, .L691+0x10
	str	r1, [r0]
.L690:
	bl	LinkPartnerBufferExecCompleted
	pop	{r0}
	bx	r0
.L692:
	.align	2, 0
.L691:
	.word	gActiveBank
	.word	gSharedMem+0x17810
	.word	gTasks
	.word	gUnknown_02024E68
	.word	sub_8044CA0
.Lfe80:
	.size	 LinkPartnerHandlecmd49,.Lfe80-LinkPartnerHandlecmd49
	.align	2, 0
	.globl	LinkPartnerHandlecmd50
	.type	 LinkPartnerHandlecmd50,function
	.thumb_func
LinkPartnerHandlecmd50:
	push	{lr}
	bl	LinkPartnerBufferExecCompleted
	pop	{r0}
	bx	r0
.Lfe81:
	.size	 LinkPartnerHandlecmd50,.Lfe81-LinkPartnerHandlecmd50
	.align	2, 0
	.globl	LinkPartnerHandleSpriteInvisibility
	.type	 LinkPartnerHandleSpriteInvisibility,function
	.thumb_func
LinkPartnerHandleSpriteInvisibility:
	push	{r4, lr}
	ldr	r4, .L696
	ldrb	r0, [r4]
	bl	AnimBankSpriteExists
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L695	@cond_branch
	ldr	r3, .L696+0x4
	ldr	r0, .L696+0x8
	ldrb	r1, [r4]
	add	r0, r1, r0
	ldrb	r0, [r0]
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	add	r2, r2, r3
	ldr	r0, .L696+0xc
	lsl	r1, r1, #0x9
	add	r0, r0, #0x1
	add	r1, r1, r0
	add	r2, r2, #0x3e
	mov	r0, #0x1
	ldrb	r1, [r1]
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r3, [r2]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2]
	ldrb	r0, [r4]
	bl	sub_8031F88
.L695:
	bl	LinkPartnerBufferExecCompleted
	pop	{r4}
	pop	{r0}
	bx	r0
.L697:
	.align	2, 0
.L696:
	.word	gActiveBank
	.word	gSprites
	.word	gObjectBankIDs
	.word	gBattleBufferA
.Lfe82:
	.size	 LinkPartnerHandleSpriteInvisibility,.Lfe82-LinkPartnerHandleSpriteInvisibility
	.align	2, 0
	.globl	LinkPartnerHandleBattleAnimation
	.type	 LinkPartnerHandleBattleAnimation,function
	.thumb_func
LinkPartnerHandleBattleAnimation:
	push	{r4, r5, r6, lr}
	add	sp, sp, #0xfffffffc
	ldr	r6, .L702
	ldrb	r0, [r6]
	bl	mplay_80342A4
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L699	@cond_branch
	ldr	r5, .L702+0x4
	ldrb	r2, [r6]
	lsl	r1, r2, #0x9
	add	r0, r5, #0x1
	add	r0, r1, r0
	ldrb	r3, [r0]
	add	r0, r5, #0x2
	add	r0, r1, r0
	ldrb	r4, [r0]
	add	r5, r5, #0x3
	add	r1, r1, r5
	ldrb	r0, [r1]
	lsl	r0, r0, #0x8
	orr	r4, r4, r0
	str	r4, [sp]
	add	r0, r2, #0
	add	r1, r2, #0
	bl	move_anim_start_t3
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L700	@cond_branch
	bl	LinkPartnerBufferExecCompleted
	b	.L699
.L703:
	.align	2, 0
.L702:
	.word	gActiveBank
	.word	gBattleBufferA
.L700:
	ldr	r0, .L704
	ldrb	r1, [r6]
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	ldr	r0, .L704+0x4
	str	r0, [r1]
.L699:
	add	sp, sp, #0x4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L705:
	.align	2, 0
.L704:
	.word	gBattleBankFunc
	.word	sub_811E3B8
.Lfe83:
	.size	 LinkPartnerHandleBattleAnimation,.Lfe83-LinkPartnerHandleBattleAnimation
	.align	2, 0
	.globl	LinkPartnerHandleLinkStandbyMsg
	.type	 LinkPartnerHandleLinkStandbyMsg,function
	.thumb_func
LinkPartnerHandleLinkStandbyMsg:
	push	{lr}
	bl	LinkPartnerBufferExecCompleted
	pop	{r0}
	bx	r0
.Lfe84:
	.size	 LinkPartnerHandleLinkStandbyMsg,.Lfe84-LinkPartnerHandleLinkStandbyMsg
	.align	2, 0
	.globl	LinkPartnerHandleResetActionMoveSelection
	.type	 LinkPartnerHandleResetActionMoveSelection,function
	.thumb_func
LinkPartnerHandleResetActionMoveSelection:
	push	{lr}
	bl	LinkPartnerBufferExecCompleted
	pop	{r0}
	bx	r0
.Lfe85:
	.size	 LinkPartnerHandleResetActionMoveSelection,.Lfe85-LinkPartnerHandleResetActionMoveSelection
	.align	2, 0
	.globl	LinkPartnerHandlecmd55
	.type	 LinkPartnerHandlecmd55,function
	.thumb_func
LinkPartnerHandlecmd55:
	push	{r4, lr}
	ldr	r2, .L709
	ldr	r1, .L709+0x4
	ldr	r4, .L709+0x8
	ldrb	r0, [r4]
	lsl	r0, r0, #0x9
	add	r1, r1, #0x1
	add	r0, r0, r1
	ldrb	r0, [r0]
	strb	r0, [r2]
	mov	r0, #0x5
	bl	FadeOutMapMusic
	mov	r0, #0x3
	bl	BeginFastPaletteFade
	bl	LinkPartnerBufferExecCompleted
	ldr	r1, .L709+0xc
	ldrb	r0, [r4]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, .L709+0x10
	str	r1, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L710:
	.align	2, 0
.L709:
	.word	gBattleOutcome
	.word	gBattleBufferA
	.word	gActiveBank
	.word	gBattleBankFunc
	.word	sub_811E29C
.Lfe86:
	.size	 LinkPartnerHandlecmd55,.Lfe86-LinkPartnerHandlecmd55
	.align	2, 0
	.globl	LinkPartnerHandlecmd56
	.type	 LinkPartnerHandlecmd56,function
	.thumb_func
LinkPartnerHandlecmd56:
	bx	lr
.Lfe87:
	.size	 LinkPartnerHandlecmd56,.Lfe87-LinkPartnerHandlecmd56
.text
	.align	2, 0
