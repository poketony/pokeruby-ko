@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section ewram_data,"aw"
	.type	 gUnknown_02039338,object
	.size	 gUnknown_02039338,1
gUnknown_02039338:
	.byte	0x0
.text
	.align	2, 0
	.type	 VBlankCB,function
	.thumb_func
VBlankCB:
	push	{lr}
	bl	LoadOam
	bl	ProcessSpriteCopyRequests
	bl	TransferPlttBuffer
	pop	{r0}
	bx	r0
.Lfe1:
	.size	 VBlankCB,.Lfe1-VBlankCB
	.align	2, 0
	.type	 CheckLanguageMatch,function
	.thumb_func
CheckLanguageMatch:
	push	{lr}
	mov	r2, #0x0
	ldr	r1, .L5
	ldrh	r0, [r1, #0x1a]
	ldrh	r1, [r1, #0x36]
	cmp	r0, r1
	bne	.L4	@cond_branch
	mov	r2, #0x1
.L4:
	add	r0, r2, #0
	pop	{r1}
	bx	r1
.L6:
	.align	2, 0
.L5:
	.word	gLinkPlayers
.Lfe2:
	.size	 CheckLanguageMatch,.Lfe2-CheckLanguageMatch
	.align	2, 0
	.globl	CB2_InitMysteryEventMenu
	.type	 CB2_InitMysteryEventMenu,function
	.thumb_func
CB2_InitMysteryEventMenu:
	push	{r4, lr}
	bl	ResetSpriteData
	bl	FreeAllSpritePalettes
	bl	ResetTasks
	ldr	r0, .L8
	bl	SetVBlankCallback
	ldr	r4, .L8+0x4
	add	r0, r4, #0
	bl	SetUpWindowConfig
	add	r0, r4, #0
	bl	InitMenuWindow
	bl	MenuZeroFillScreen
	mov	r1, #0x80
	lsl	r1, r1, #0x13
	mov	r2, #0xa0
	lsl	r2, r2, #0x1
	add	r0, r2, #0
	strh	r0, [r1]
	add	r1, r1, #0x50
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L8+0x8
	mov	r1, #0x0
	bl	CreateTask
	bl	StopMapMusic
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	UpdatePaletteFade
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x2
	bl	FillPalette
	ldr	r0, .L8+0xc
	bl	SetMainCallback2
	pop	{r4}
	pop	{r0}
	bx	r0
.L9:
	.align	2, 0
.L8:
	.word	VBlankCB
	.word	gWindowConfig_81E6CE4
	.word	Task_DestroySelf
	.word	CB2_MysteryEventMenu
.Lfe3:
	.size	 CB2_InitMysteryEventMenu,.Lfe3-CB2_InitMysteryEventMenu
	.align	2, 0
	.type	 GetEventLoadMessage,function
	.thumb_func
GetEventLoadMessage:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	add	r4, r1, #0
	mov	r5, #0x1
	cmp	r4, #0
	bne	.L11	@cond_branch
	ldr	r1, .L14
	bl	StringCopy
	mov	r5, #0x0
.L11:
	cmp	r4, #0x2
	bne	.L12	@cond_branch
	mov	r5, #0x0
.L12:
	cmp	r4, #0x1
	bne	.L13	@cond_branch
	ldr	r1, .L14+0x4
	add	r0, r6, #0
	bl	StringCopy
.L13:
	add	r0, r5, #0
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L15:
	.align	2, 0
.L14:
	.word	gSystemText_EventLoadSuccess
	.word	gSystemText_LoadingError
.Lfe4:
	.size	 GetEventLoadMessage,.Lfe4-GetEventLoadMessage
	.align	2, 0
	.type	 CB2_MysteryEventMenu,function
	.thumb_func
CB2_MysteryEventMenu:
	push	{r4, r5, r6, lr}
	add	sp, sp, #0xfffffff8
	ldr	r1, .L69
	ldr	r2, .L69+0x4
	add	r0, r1, r2
	ldrb	r0, [r0]
	add	r4, r1, #0
	cmp	r0, #0x10
	bls	.LCB156
	b	.L17	@long jump
.LCB156:
	lsl	r0, r0, #0x2
	ldr	r1, .L69+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L70:
	.align	2, 0
.L69:
	.word	gMain
	.word	0x43c
	.word	.L60
	.align	2, 0
	.align	2, 0
.L60:
	.word	.L18
	.word	.L19
	.word	.L21
	.word	.L23
	.word	.L26
	.word	.L28
	.word	.L34
	.word	.L43
	.word	.L45
	.word	.L47
	.word	.L48
	.word	.L49
	.word	.L52
	.word	.L53
	.word	.L55
	.word	.L57
	.word	.L58
.L18:
	mov	r0, #0x0
	mov	r1, #0xe
	mov	r2, #0x1d
	mov	r3, #0x13
	bl	MenuDrawTextWindow
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x10
	mov	r3, #0x0
	b	.L64
.L19:
	ldr	r0, .L71
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.LCB201
	b	.L17	@long jump
.LCB201:
	ldr	r0, .L71+0x4
	bl	MenuPrintMessageDefaultCoords
	ldr	r1, .L71+0x8
	ldr	r2, .L71+0xc
	add	r1, r1, r2
	b	.L65
.L72:
	.align	2, 0
.L71:
	.word	gPaletteFade
	.word	gSystemText_LinkStandby
	.word	gMain
	.word	0x43c
.L21:
	bl	MenuUpdateWindowText
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB226
	b	.L17	@long jump
.LCB226:
	ldr	r1, .L73
	ldr	r0, .L73+0x4
	add	r1, r1, r0
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	ldr	r1, .L73+0x8
	ldr	r2, .L73+0xc
	add	r0, r2, #0
	strh	r0, [r1]
	bl	OpenLink
	b	.L17
.L74:
	.align	2, 0
.L73:
	.word	gMain
	.word	0x43c
	.word	gLinkType
	.word	0x5501
.L23:
	ldr	r0, .L75
	ldr	r1, [r0]
	mov	r0, #0x20
	and	r0, r0, r1
	cmp	r0, #0
	bne	.LCB257
	b	.L35	@long jump
.LCB257:
	mov	r0, #0x1c
	and	r1, r1, r0
	cmp	r1, #0x4
	bhi	.LCB261
	b	.L35	@long jump
.LCB261:
	mov	r0, #0x15
	bl	PlaySE
	ldr	r0, .L75+0x4
	bl	MenuPrintMessageDefaultCoords
	ldr	r1, .L75+0x8
	ldr	r0, .L75+0xc
	add	r1, r1, r0
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L35
.L76:
	.align	2, 0
.L75:
	.word	gLinkStatus
	.word	gSystemText_LoadEventPressA
	.word	gMain
	.word	0x43c
.L26:
	bl	MenuUpdateWindowText
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB296
	b	.L17	@long jump
.LCB296:
	b	.L66
.L28:
	bl	GetLinkPlayerCount_2
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x2
	bne	.L30	@cond_branch
	ldr	r4, .L77
	ldrh	r1, [r4, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L31	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	bl	sub_8007F4C
	mov	r0, #0x6
	mov	r1, #0x5
	mov	r2, #0x17
	mov	r3, #0x8
	bl	MenuDrawTextWindow
	ldr	r0, .L77+0x4
	mov	r1, #0x7
	mov	r2, #0x6
	bl	MenuPrint
	ldr	r2, .L77+0x8
	add	r1, r4, r2
	b	.L65
.L78:
	.align	2, 0
.L77:
	.word	gMain
	.word	gSystemText_LoadingEvent
	.word	0x43c
.L31:
	add	r0, r2, #0
	and	r0, r0, r1
	cmp	r0, #0
	bne	.LCB349
	b	.L17	@long jump
.LCB349:
	mov	r0, #0x5
	bl	PlaySE
	bl	CloseLink
	ldr	r0, .L79
	add	r1, r4, r0
	b	.L67
.L80:
	.align	2, 0
.L79:
	.word	0x43c
.L34:
	bl	IsLinkConnectionEstablished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L35	@cond_branch
	ldr	r0, .L81
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.LCB378
	b	.L17	@long jump
.LCB378:
	bl	GetLinkPlayerDataExchangeStatusTimed
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	bne	.L37	@cond_branch
	bl	sub_800832C
	mov	r0, #0x6
	mov	r1, #0x5
	mov	r2, #0x17
	mov	r3, #0x8
	bl	MenuZeroFillWindowRect
	ldr	r4, .L81+0x4
	add	r0, r4, #0
	mov	r1, #0x1
	bl	GetEventLoadMessage
	add	r0, r4, #0
	bl	MenuPrintMessageDefaultCoords
	ldr	r0, .L81+0x8
	ldr	r2, .L81+0xc
	.code	16
	add	r0, r0, r2
	b	.L68
.L82:
	.align	2, 0
.L81:
	.word	gReceivedRemoteLinkPlayers
	.word	gStringVar4
	.word	gMain
	.word	0x43c
.L37:
	bl	CheckLanguageMatch
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L39	@cond_branch
	ldr	r0, .L83
	bl	MenuPrintMessageDefaultCoords
	b	.L66
.L84:
	.align	2, 0
.L83:
	.word	gSystemText_DontCutLink
.L39:
	bl	CloseLink
	mov	r0, #0x6
	mov	r1, #0x5
	mov	r2, #0x17
	mov	r3, #0x8
	bl	MenuZeroFillWindowRect
.L30:
	ldr	r4, .L85
	add	r0, r4, #0
	mov	r1, #0x1
	bl	GetEventLoadMessage
	add	r0, r4, #0
	bl	MenuPrintMessageDefaultCoords
	ldr	r0, .L85+0x4
	ldr	r1, .L85+0x8
	add	r0, r0, r1
.L68:
	mov	r1, #0xd
	strb	r1, [r0]
	b	.L17
.L86:
	.align	2, 0
.L85:
	.word	gStringVar4
	.word	gMain
	.word	0x43c
.L35:
	ldr	r4, .L87
	ldrh	r1, [r4, #0x2e]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	bne	.LCB479
	b	.L17	@long jump
.LCB479:
	mov	r0, #0x5
	bl	PlaySE
	bl	CloseLink
	ldr	r2, .L87+0x4
	add	r1, r4, r2
.L67:
	mov	r0, #0xf
	strb	r0, [r1]
	b	.L17
.L88:
	.align	2, 0
.L87:
	.word	gMain
	.word	0x43c
.L43:
	bl	MenuUpdateWindowText
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB505
	b	.L17	@long jump
.LCB505:
	b	.L66
.L45:
	bl	GetBlockReceivedStatus
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB515
	b	.L17	@long jump
.LCB515:
	bl	ResetBlockReceivedFlags
	ldr	r1, .L89
	ldr	r2, .L89+0x4
	add	r1, r1, r2
	b	.L65
.L90:
	.align	2, 0
.L89:
	.word	gMain
	.word	0x43c
.L47:
	ldr	r0, .L91
	add	r1, r4, r0
	b	.L65
.L92:
	.align	2, 0
.L91:
	.word	0x43c
.L48:
	bl	sub_800832C
	ldr	r1, .L93
	ldr	r2, .L93+0x4
	add	r1, r1, r2
	b	.L65
.L94:
	.align	2, 0
.L93:
	.word	gMain
	.word	0x43c
.L49:
	ldr	r0, .L95
	ldrb	r6, [r0]
	cmp	r6, #0
	bne	.L17	@cond_branch
	ldr	r5, .L95+0x4
	add	r0, r5, #0
	bl	RunMysteryEventScript
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	str	r6, [sp, #0x4]
	ldr	r2, .L95+0x8
	add	r0, sp, #0x4
	add	r1, r5, #0
	bl	CpuSet
	ldr	r0, .L95+0xc
	add	r1, r4, #0
	bl	GetEventLoadMessage
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L66	@cond_branch
	mov	r0, #0x0
	bl	TrySavingData
	b	.L66
.L96:
	.align	2, 0
.L95:
	.word	gReceivedRemoteLinkPlayers
	.word	gSharedMem
	.word	0x50001f5
	.word	gStringVar4
.L52:
	ldr	r0, .L97
	bl	MenuPrintMessageDefaultCoords
	ldr	r1, .L97+0x4
	ldr	r2, .L97+0x8
	add	r1, r1, r2
	b	.L65
.L98:
	.align	2, 0
.L97:
	.word	gStringVar4
	.word	gMain
	.word	0x43c
.L53:
	mov	r0, #0x6
	mov	r1, #0x5
	mov	r2, #0x17
	mov	r3, #0x8
	bl	MenuZeroFillWindowRect
	bl	MenuUpdateWindowText
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L17	@cond_branch
	ldr	r1, .L99
	ldr	r0, .L99+0x4
	add	r1, r1, r0
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	mov	r2, #0x0
	strb	r0, [r1]
	ldr	r0, .L99+0x8
	strb	r2, [r0]
	b	.L17
.L100:
	.align	2, 0
.L99:
	.word	gMain
	.word	0x43c
	.word	gUnknown_02039338
.L55:
	ldrh	r1, [r4, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L17	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r2, .L101
	add	r1, r4, r2
	b	.L65
.L102:
	.align	2, 0
.L101:
	.word	0x43c
.L57:
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
.L64:
	bl	BeginNormalPaletteFade
.L66:
	ldr	r1, .L103
	ldr	r0, .L103+0x4
	add	r1, r1, r0
.L65:
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L17
.L104:
	.align	2, 0
.L103:
	.word	gMain
	.word	0x43c
.L58:
	ldr	r0, .L105
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L17	@cond_branch
	bl	DoSoftReset
.L17:
	ldr	r0, .L105+0x4
	ldr	r0, [r0]
	mov	r1, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L62	@cond_branch
	bl	IsLinkMaster
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L62	@cond_branch
	bl	CloseLink
	mov	r0, #0x6
	mov	r1, #0x5
	mov	r2, #0x17
	mov	r3, #0x8
	bl	MenuZeroFillWindowRect
	ldr	r4, .L105+0x8
	add	r0, r4, #0
	mov	r1, #0x1
	bl	GetEventLoadMessage
	add	r0, r4, #0
	bl	MenuPrintMessageDefaultCoords
	ldr	r0, .L105+0xc
	ldr	r1, .L105+0x10
	add	r0, r0, r1
	mov	r1, #0xd
	strb	r1, [r0]
.L62:
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	UpdatePaletteFade
	add	sp, sp, #0x8
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L106:
	.align	2, 0
.L105:
	.word	gPaletteFade
	.word	gLinkStatus
	.word	gStringVar4
	.word	gMain
	.word	0x43c
.Lfe5:
	.size	 CB2_MysteryEventMenu,.Lfe5-CB2_MysteryEventMenu
.text
	.align	2, 0
