@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section .rodata
	.align	1, 0
	.type	 gUnknown_081E764C,object
gUnknown_081E764C:
	.short	0x0
	.short	0x53ff
	.short	0x37ff
	.short	0x2f7b
	.short	0x26f7
	.short	0x1e73
	.short	0x19ef
	.short	0x116b
	.short	0x8e7
	.short	0x1f
	.short	0x1f
	.short	0x1f
	.short	0x1f
	.short	0x1f
	.short	0x1f
	.short	0x0
	.short	0x3686
	.short	0x53ff
	.short	0x37ff
	.short	0x2f7b
	.short	0x26f7
	.short	0x1e73
	.short	0x19ef
	.short	0x116b
	.short	0x8e7
	.short	0x1f
	.short	0x1f
	.short	0x1f
	.short	0x1f
	.short	0x1f
	.short	0x1f
	.short	0x0
	.size	 gUnknown_081E764C,64
	.type	 gBirchIntroShadowGfx,object
gBirchIntroShadowGfx:
	.byte	0x10
	.byte	0x0
	.byte	0x6
	.byte	0x0
	.byte	0x32
	.byte	0x0
	.byte	0x0
	.byte	0xf0
	.byte	0x1
	.byte	0x90
	.byte	0x1
	.byte	0x11
	.byte	0x11
	.byte	0xb0
	.byte	0x1
	.byte	0x22
	.byte	0x49
	.byte	0x22
	.byte	0xb0
	.byte	0x1
	.byte	0x33
	.byte	0x33
	.byte	0xb0
	.byte	0x1
	.byte	0x44
	.byte	0x44
	.byte	0xb0
	.byte	0x1
	.byte	0x24
	.byte	0x55
	.byte	0x55
	.byte	0xb0
	.byte	0x1
	.byte	0x66
	.byte	0x66
	.byte	0xb0
	.byte	0x1
	.byte	0x77
	.byte	0x77
	.byte	0x93
	.byte	0xb0
	.byte	0x1
	.byte	0x88
	.byte	0x88
	.byte	0xb0
	.byte	0x1
	.byte	0xff
	.byte	0xff
	.byte	0xf0
	.byte	0x1
	.byte	0x90
	.byte	0x1
	.byte	0xff
	.byte	0xf0
	.byte	0xb1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xff
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xfc
	.byte	0xf0
	.byte	0x1
	.byte	0xb0
	.byte	0x1
	.byte	0xf1
	.byte	0x51
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0x10
	.byte	0x1
	.byte	0x8f
	.byte	0x78
	.byte	0x8
	.byte	0xff
	.byte	0x88
	.byte	0x57
	.byte	0x44
	.byte	0xf0
	.byte	0x17
	.byte	0x88
	.byte	0x78
	.byte	0x88
	.byte	0x0
	.byte	0x78
	.byte	0x45
	.byte	0x44
	.byte	0x45
	.byte	0x34
	.byte	0x12
	.byte	0x11
	.byte	0x13
	.byte	0xc0
	.byte	0x2
	.byte	0x2f
	.byte	0x90
	.byte	0x18
	.byte	0x8f
	.byte	0x88
	.byte	0x78
	.byte	0x57
	.byte	0x57
	.byte	0x45
	.byte	0x18
	.byte	0x34
	.byte	0x22
	.byte	0x23
	.byte	0x82
	.byte	0x4f
	.byte	0x50
	.byte	0x1b
	.byte	0x88
	.byte	0x88
	.byte	0x78
	.byte	0x6
	.byte	0x77
	.byte	0x45
	.byte	0x34
	.byte	0x23
	.byte	0x22
	.byte	0xd2
	.byte	0x6f
	.byte	0x40
	.byte	0x1c
	.byte	0x88
	.byte	0x6
	.byte	0x55
	.byte	0x44
	.byte	0x34
	.byte	0x33
	.byte	0x12
	.byte	0xd0
	.byte	0x1c
	.byte	0x0
	.byte	0x1
	.byte	0x8f
	.byte	0xd9
	.byte	0x0
	.byte	0x1b
	.byte	0x2
	.byte	0x36
	.byte	0x67
	.byte	0x12
	.byte	0x8b
	.byte	0xf0
	.byte	0x1d
	.byte	0x11
	.byte	0x11
	.byte	0x10
	.byte	0x3b
	.byte	0xe0
	.byte	0x12
	.byte	0x67
	.byte	0xf0
	.byte	0x1f
	.byte	0x30
	.byte	0x1
	.byte	0x78
	.byte	0x45
	.byte	0x23
	.byte	0x11
	.byte	0x78
	.byte	0x0
	.byte	0x55
	.byte	0x34
	.byte	0x12
	.byte	0x8f
	.byte	0x57
	.byte	0x45
	.byte	0x24
	.byte	0xff
	.byte	0x1
	.byte	0x78
	.byte	0x55
	.byte	0x45
	.byte	0xff
	.byte	0x8f
	.byte	0x77
	.byte	0x55
	.byte	0x0
	.byte	0x71
	.byte	0x5d
	.byte	0x67
	.byte	0x0
	.byte	0x76
	.byte	0x78
	.byte	0x10
	.byte	0x7b
	.byte	0x50
	.byte	0x27
	.byte	0x10
	.byte	0x7b
	.byte	0x23
	.byte	0x0
	.byte	0x4
	.byte	0x40
	.byte	0x45
	.byte	0x0
	.byte	0x4
	.byte	0x55
	.byte	0x55
	.byte	0x34
	.byte	0x22
	.byte	0x67
	.byte	0x55
	.byte	0x3
	.byte	0x55
	.byte	0x45
	.byte	0x78
	.byte	0x77
	.byte	0x56
	.byte	0x55
	.byte	0xf0
	.byte	0x51
	.byte	0x40
	.byte	0x2b
	.byte	0x4f
	.byte	0x22
	.byte	0x0
	.byte	0x27
	.byte	0x44
	.byte	0x33
	.byte	0xf0
	.byte	0x73
	.byte	0x93
	.byte	0x4b
	.byte	0xf0
	.byte	0x12
	.byte	0xf0
	.byte	0x1
	.byte	0xfe
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0x91
	.byte	0x7f
	.byte	0x0
	.byte	0xeb
	.byte	0x58
	.byte	0x0
	.byte	0x35
	.byte	0xff
	.byte	0x8f
	.byte	0x35
	.byte	0x12
	.byte	0xff
	.byte	0x58
	.byte	0x24
	.byte	0xa
	.byte	0x11
	.byte	0x8f
	.byte	0x45
	.byte	0x13
	.byte	0x1
	.byte	0x17
	.byte	0x12
	.byte	0x40
	.byte	0x3
	.byte	0x13
	.byte	0x7f
	.byte	0x11
	.byte	0x1
	.byte	0xca
	.byte	0x20
	.byte	0xd3
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xff
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0xff
	.byte	0xf0
	.byte	0x1
	.byte	0xdc
	.byte	0xa2
	.byte	0xce
	.byte	0x2
	.byte	0xb
	.byte	0x8f
	.byte	0xf4
	.byte	0x87
	.byte	0x40
	.byte	0x1
	.byte	0x4
	.byte	0xd2
	.byte	0x45
	.byte	0x77
	.byte	0xfa
	.byte	0x2
	.byte	0xc
	.byte	0x2
	.byte	0xbe
	.byte	0x0
	.byte	0x27
	.byte	0xf4
	.byte	0xaf
	.byte	0x2
	.byte	0xd2
	.byte	0x22
	.byte	0x0
	.byte	0x22
	.byte	0x34
	.byte	0x6b
	.byte	0x56
	.byte	0x0
	.byte	0x28
	.byte	0x2
	.byte	0xa6
	.byte	0x66
	.byte	0x3
	.byte	0x3
	.byte	0x77
	.byte	0x10
	.byte	0x55
	.byte	0x50
	.byte	0x1f
	.byte	0xe4
	.byte	0x10
	.byte	0x83
	.byte	0x0
	.byte	0x22
	.byte	0x0
	.byte	0x23
	.byte	0x44
	.byte	0x34
	.byte	0x15
	.byte	0x1f
	.byte	0x77
	.byte	0x77
	.byte	0x3a
	.byte	0x66
	.byte	0x66
	.byte	0x13
	.byte	0xb
	.byte	0x50
	.byte	0x23
	.byte	0x52
	.byte	0x4f
	.byte	0x33
	.byte	0x20
	.byte	0x23
	.byte	0x55
	.byte	0x7e
	.byte	0x55
	.byte	0x30
	.byte	0x47
	.byte	0x35
	.byte	0x27
	.byte	0x92
	.byte	0x9f
	.byte	0x12
	.byte	0xdf
	.byte	0x55
	.byte	0x6f
	.byte	0x12
	.byte	0xef
	.byte	0x78
	.byte	0xf8
	.byte	0x0
	.byte	0x23
	.byte	0x13
	.byte	0x38
	.byte	0xf0
	.byte	0x1f
	.byte	0x30
	.byte	0x1f
	.byte	0x50
	.byte	0x43
	.byte	0x0
	.byte	0x0
	.size	 gBirchIntroShadowGfx,424
	.type	 gUnknown_081E7834,object
gUnknown_081E7834:
	.byte	0x10
	.byte	0x0
	.byte	0x5
	.byte	0x0
	.byte	0x3d
	.byte	0x1
	.byte	0x10
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0x50
	.byte	0x1
	.byte	0x2
	.byte	0xf0
	.byte	0x1
	.byte	0xef
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0x60
	.byte	0x1
	.byte	0x3
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0x60
	.byte	0x1
	.byte	0x7b
	.byte	0x4
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0x60
	.byte	0x1
	.byte	0x5
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xff
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xff
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0x80
	.byte	0x60
	.byte	0x1
	.byte	0x10
	.byte	0x0
	.byte	0x11
	.byte	0x0
	.byte	0x12
	.byte	0x0
	.byte	0x13
	.byte	0x0
	.byte	0x0
	.byte	0x14
	.byte	0x0
	.byte	0x15
	.byte	0x0
	.byte	0x16
	.byte	0x0
	.byte	0x17
	.byte	0x0
	.byte	0x0
	.byte	0x17
	.byte	0x4
	.byte	0x16
	.byte	0x4
	.byte	0x15
	.byte	0x4
	.byte	0x14
	.byte	0x3
	.byte	0x4
	.byte	0x13
	.byte	0x4
	.byte	0x12
	.byte	0x4
	.byte	0x11
	.byte	0x1
	.byte	0x6e
	.byte	0xf0
	.byte	0x31
	.byte	0x80
	.byte	0xb0
	.byte	0x1
	.byte	0x20
	.byte	0x0
	.byte	0x21
	.byte	0x0
	.byte	0x22
	.byte	0x0
	.byte	0x23
	.byte	0x0
	.byte	0x0
	.byte	0x24
	.byte	0x0
	.byte	0x25
	.byte	0x0
	.byte	0x26
	.byte	0x0
	.byte	0x27
	.byte	0x0
	.byte	0x0
	.byte	0x27
	.byte	0x4
	.byte	0x26
	.byte	0x4
	.byte	0x25
	.byte	0x4
	.byte	0x24
	.byte	0x0
	.byte	0x4
	.byte	0x23
	.byte	0x4
	.byte	0x22
	.byte	0x4
	.byte	0x21
	.byte	0x4
	.byte	0x20
	.byte	0xc0
	.byte	0xf0
	.byte	0x3f
	.byte	0xc0
	.byte	0x1
	.byte	0x18
	.byte	0x0
	.byte	0x19
	.byte	0x0
	.byte	0x1a
	.byte	0x0
	.byte	0x0
	.byte	0x1b
	.byte	0x0
	.byte	0x1c
	.byte	0x0
	.byte	0x1d
	.byte	0x0
	.byte	0x1e
	.byte	0x0
	.byte	0x0
	.byte	0x1f
	.byte	0x0
	.byte	0x1f
	.byte	0x4
	.byte	0x1e
	.byte	0x4
	.byte	0x1d
	.byte	0x4
	.byte	0x0
	.byte	0x1c
	.byte	0x4
	.byte	0x1b
	.byte	0x4
	.byte	0x1a
	.byte	0x4
	.byte	0x19
	.byte	0x4
	.byte	0x60
	.byte	0x18
	.byte	0xf0
	.byte	0x3f
	.byte	0xc0
	.byte	0x1
	.byte	0x28
	.byte	0x0
	.byte	0x29
	.byte	0x0
	.byte	0x2a
	.byte	0x0
	.byte	0x0
	.byte	0x2b
	.byte	0x0
	.byte	0x2c
	.byte	0x0
	.byte	0x2d
	.byte	0x0
	.byte	0x2e
	.byte	0x0
	.byte	0x0
	.byte	0x2f
	.byte	0x0
	.byte	0x2f
	.byte	0x4
	.byte	0x2e
	.byte	0x4
	.byte	0x2d
	.byte	0x0
	.byte	0x4
	.byte	0x2c
	.byte	0x4
	.byte	0x2b
	.byte	0x4
	.byte	0x2a
	.byte	0x4
	.byte	0x29
	.byte	0x3f
	.byte	0x4
	.byte	0x28
	.byte	0xf0
	.byte	0x3f
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xff
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xff
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xf0
	.byte	0x1
	.byte	0xe0
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.size	 gUnknown_081E7834,296
	.align	1, 0
	.type	 gUnknown_081E795C,object
gUnknown_081E795C:
	.short	0x53ff
	.short	0x37ff
	.short	0x2f7b
	.short	0x26f7
	.short	0x1e73
	.short	0x19ef
	.short	0x116b
	.short	0x8e7
	.size	 gUnknown_081E795C,16
	.align	1, 0
	.type	 gUnknown_081E796C,object
gUnknown_081E796C:
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.size	 gUnknown_081E796C,16
	.align	1, 0
	.type	 gMainMenuPalette,object
gMainMenuPalette:
	.short	0x7e51
	.short	0x7fff
	.short	0x28e6
	.short	0x398b
	.short	0x821
	.short	0x5672
	.short	0x7779
	.short	0x5ed6
	.short	0x6f37
	.short	0x1884
	.short	0x460f
	.short	0x3d46
	.short	0x61e5
	.short	0x6a27
	.short	0x728b
	.short	0x7b11
	.size	 gMainMenuPalette,32
	.align	2, 0
	.type	 gSpriteAffineAnim_81E799C,object
gSpriteAffineAnim_81E799C:
	.short	0xfffffffe
	.short	0xfffffffe
	.byte	0x0
	.byte	0x30
	.space	2
	.short	0x7fff
	.space	6
	.size	 gSpriteAffineAnim_81E799C,16
	.align	2, 0
	.type	 gSpriteAffineAnimTable_81E79AC,object
gSpriteAffineAnimTable_81E79AC:
	.word	gSpriteAffineAnim_81E799C
	.size	 gSpriteAffineAnimTable_81E79AC,4
	.align	2, 0
	.type	 gUnknown_081E79B0,object
gUnknown_081E79B0:
	.word	gBirchText_Boy
	.word	0x0
	.word	gBirchText_Girl
	.word	0x0
	.size	 gUnknown_081E79B0,16
	.align	2, 0
	.type	 gMalePresetNames,object
gMalePresetNames:
	.word	gBirchText_NewName
	.word	0x0
	.word	gDefaultBoyName1
	.word	0x0
	.word	gDefaultBoyName2
	.word	0x0
	.word	gDefaultBoyName3
	.word	0x0
	.word	gDefaultBoyName4
	.word	0x0
	.size	 gMalePresetNames,40
	.align	2, 0
	.type	 gFemalePresetNames,object
gFemalePresetNames:
	.word	gBirchText_NewName
	.word	0x0
	.word	gDefaultGirlName1
	.word	0x0
	.word	gDefaultGirlName2
	.word	0x0
	.word	gDefaultGirlName3
	.word	0x0
	.word	gDefaultGirlName4
	.word	0x0
	.size	 gFemalePresetNames,40
.text
	.align	2, 0
	.type	 CB2_MainMenu,function
	.thumb_func
CB2_MainMenu:
	push	{lr}
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	UpdatePaletteFade
	pop	{r0}
	bx	r0
.Lfe1:
	.size	 CB2_MainMenu,.Lfe1-CB2_MainMenu
	.align	2, 0
	.type	 VBlankCB_MainMenu,function
	.thumb_func
VBlankCB_MainMenu:
	push	{lr}
	bl	LoadOam
	bl	ProcessSpriteCopyRequests
	bl	TransferPlttBuffer
	pop	{r0}
	bx	r0
.Lfe2:
	.size	 VBlankCB_MainMenu,.Lfe2-VBlankCB_MainMenu
	.align	2, 0
	.globl	CB2_InitMainMenu
	.type	 CB2_InitMainMenu,function
	.thumb_func
CB2_InitMainMenu:
	push	{lr}
	mov	r0, #0x0
	bl	InitMainMenu
	pop	{r0}
	bx	r0
.Lfe3:
	.size	 CB2_InitMainMenu,.Lfe3-CB2_InitMainMenu
	.align	2, 0
	.type	 CB2_InitMainMenuFromOptions,function
	.thumb_func
CB2_InitMainMenuFromOptions:
	push	{lr}
	mov	r0, #0x1
	bl	InitMainMenu
	pop	{r0}
	bx	r0
.Lfe4:
	.size	 CB2_InitMainMenuFromOptions,.Lfe4-CB2_InitMainMenuFromOptions
	.align	2, 0
	.type	 InitMainMenu,function
	.thumb_func
InitMainMenu:
	push	{r4, r5, lr}
	add	sp, sp, #0xfffffff4
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x0
	bl	SetVBlankCallback
	mov	r0, #0x80
	lsl	r0, r0, #0x13
	mov	r1, #0x0
	strh	r1, [r0]
	add	r0, r0, #0xc
	strh	r1, [r0]
	sub	r0, r0, #0x2
	strh	r1, [r0]
	sub	r0, r0, #0x2
	strh	r1, [r0]
	add	r0, r0, #0x10
	strh	r1, [r0]
	add	r0, r0, #0x2
	strh	r1, [r0]
	sub	r0, r0, #0x6
	strh	r1, [r0]
	add	r0, r0, #0x2
	strh	r1, [r0]
	sub	r0, r0, #0x6
	strh	r1, [r0]
	add	r0, r0, #0x2
	strh	r1, [r0]
	add	r0, sp, #0x4
	strh	r1, [r0]
	ldr	r1, .L9
	str	r0, [r1]
	mov	r0, #0xc0
	lsl	r0, r0, #0x13
	str	r0, [r1, #0x4]
	ldr	r0, .L9+0x4
	str	r0, [r1, #0x8]
	ldr	r0, [r1, #0x8]
	mov	r5, #0x0
	str	r5, [sp, #0x8]
	add	r0, sp, #0x8
	str	r0, [r1]
	mov	r0, #0xe0
	lsl	r0, r0, #0x13
	str	r0, [r1, #0x4]
	ldr	r0, .L9+0x8
	str	r0, [r1, #0x8]
	ldr	r0, [r1, #0x8]
	add	r0, sp, #0x4
	strh	r5, [r0]
	str	r0, [r1]
	ldr	r0, .L9+0xc
	str	r0, [r1, #0x4]
	ldr	r0, .L9+0x10
	str	r0, [r1, #0x8]
	ldr	r0, [r1, #0x8]
	bl	ResetPaletteFade
	ldr	r0, .L9+0x14
	mov	r1, #0x0
	mov	r2, #0x20
	bl	LoadPalette
	bl	remove_some_task
	bl	ResetTasks
	bl	ResetSpriteData
	bl	FreeAllSpritePalettes
	ldr	r0, .L9+0x18
	bl	SetUpWindowConfig
	ldr	r0, .L9+0x1c
	bl	InitMenuWindow
	cmp	r4, #0
	beq	.L7	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	str	r5, [sp]
	mov	r1, #0x0
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	b	.L8
.L10:
	.align	2, 0
.L9:
	.word	0x40000d4
	.word	0x8100c000
	.word	0x85000100
	.word	0x5000002
	.word	0x810001ff
	.word	gMainMenuPalette
	.word	gWindowConfig_81E6C3C
	.word	gWindowConfig_81E6CE4
.L7:
	mov	r0, #0x1
	neg	r0, r0
	ldr	r1, .L11
	str	r1, [sp]
	mov	r1, #0x0
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
.L8:
	ldr	r0, .L11+0x4
	mov	r1, #0x0
	strh	r1, [r0]
	add	r0, r0, #0x4
	strh	r1, [r0]
	add	r0, r0, #0x4
	strh	r1, [r0]
	add	r0, r0, #0x2
	strh	r1, [r0]
	add	r0, r0, #0x6
	strh	r1, [r0]
	add	r0, r0, #0x2
	strh	r1, [r0]
	add	r0, r0, #0x2
	strh	r1, [r0]
	ldr	r3, .L11+0x8
	ldrh	r2, [r3]
	strh	r1, [r3]
	ldr	r4, .L11+0xc
	ldrh	r0, [r4]
	mov	r1, #0x1
	orr	r0, r0, r1
	strh	r0, [r4]
	strh	r2, [r3]
	ldr	r0, .L11+0x10
	bl	SetVBlankCallback
	ldr	r0, .L11+0x14
	bl	SetMainCallback2
	mov	r1, #0x80
	lsl	r1, r1, #0x13
	mov	r2, #0xc5
	lsl	r2, r2, #0x6
	add	r0, r2, #0
	strh	r0, [r1]
	ldr	r0, .L11+0x18
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L11+0x1c
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	mov	r0, #0x0
	strh	r0, [r1, #0xa]
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L12:
	.align	2, 0
.L11:
	.word	0xffff
	.word	0x4000040
	.word	0x4000208
	.word	0x4000200
	.word	VBlankCB_MainMenu
	.word	CB2_MainMenu
	.word	Task_MainMenuCheckSave
	.word	gTasks
.Lfe5:
	.size	 InitMainMenu,.Lfe5-InitMainMenu
	.align	2, 0
	.type	 Task_MainMenuCheckSave,function
	.thumb_func
Task_MainMenuCheckSave:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r0, .L30
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0
	beq	.LCB264
	b	.L13	@long jump
.LCB264:
	ldr	r7, .L30+0x4
	strh	r6, [r7]
	ldr	r0, .L30+0x8
	mov	r8, r0
	strh	r6, [r0]
	ldr	r1, .L30+0xc
	ldr	r2, .L30+0x10
	add	r0, r2, #0
	strh	r0, [r1]
	add	r1, r1, #0x2
	mov	r0, #0x31
	strh	r0, [r1]
	add	r1, r1, #0x6
	mov	r0, #0xf1
	strh	r0, [r1]
	ldr	r0, .L30+0x14
	strh	r6, [r0]
	add	r1, r1, #0x4
	mov	r0, #0x7
	strh	r0, [r1]
	ldr	r0, .L30+0x18
	ldrh	r4, [r0]
	cmp	r4, #0x2
	beq	.L19	@cond_branch
	cmp	r4, #0x2
	bgt	.L27	@cond_branch
	cmp	r4, #0
	beq	.L24	@cond_branch
	cmp	r4, #0x1
	beq	.L16	@cond_branch
	b	.L24
.L31:
	.align	2, 0
.L30:
	.word	gPaletteFade
	.word	0x4000040
	.word	0x4000044
	.word	0x4000048
	.word	0x1111
	.word	0x4000052
	.word	gSaveFileStatus
.L27:
	cmp	r4, #0x4
	beq	.L25	@cond_branch
	cmp	r4, #0xff
	beq	.L20	@cond_branch
	b	.L24
.L16:
	bl	IsMysteryGiftEnabled
	cmp	r0, #0x1
	bne	.L17	@cond_branch
	ldr	r2, .L32
	lsl	r3, r5, #0x2
	add	r0, r3, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r2
	mov	r1, #0x2
	strh	r1, [r0, #0x8]
	add	r1, r2, #0
	add	r2, r3, #0
	b	.L18
.L33:
	.align	2, 0
.L32:
	.word	gTasks
.L17:
	ldr	r0, .L34
	lsl	r2, r5, #0x2
	add	r1, r2, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	strh	r4, [r1, #0x8]
	add	r1, r0, #0
.L18:
	add	r0, r2, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L34+0x4
	b	.L28
.L35:
	.align	2, 0
.L34:
	.word	gTasks
	.word	Task_MainMenuCheckRtc
.L19:
	mov	r0, #0x2
	mov	r1, #0xe
	mov	r2, #0x1b
	mov	r3, #0x13
	bl	MenuDrawTextWindow
	ldr	r0, .L36
	b	.L29
.L37:
	.align	2, 0
.L36:
	.word	gSaveFileDeletedMessage
.L20:
	mov	r0, #0x2
	mov	r1, #0xe
	mov	r2, #0x1b
	mov	r3, #0x13
	bl	MenuDrawTextWindow
	ldr	r0, .L38
	mov	r1, #0x3
	mov	r2, #0xf
	bl	MenuPrintMessage
	ldr	r2, .L38+0x4
	add	r0, r2, #0
	strh	r0, [r7]
	ldr	r1, .L38+0x8
	add	r0, r1, #0
	mov	r2, r8
	strh	r0, [r2]
	ldr	r1, .L38+0xc
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r4, r0, r1
	mov	r5, #0x1
	strh	r5, [r4, #0x8]
	ldr	r0, .L38+0x10
	str	r0, [r4]
	bl	IsMysteryGiftEnabled
	cmp	r0, #0x1
	bne	.L21	@cond_branch
	mov	r0, #0x2
	strh	r0, [r4, #0x8]
	b	.L13
.L39:
	.align	2, 0
.L38:
	.word	gSaveFileCorruptMessage
	.word	0x11df
	.word	0x719f
	.word	gTasks
	.word	Task_MainMenuWaitForSaveErrorAck
.L21:
	strh	r5, [r4, #0x8]
	b	.L13
.L24:
	ldr	r1, .L40
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r1, #0x0
	strh	r1, [r0, #0x8]
	ldr	r1, .L40+0x4
	b	.L28
.L41:
	.align	2, 0
.L40:
	.word	gTasks
	.word	Task_MainMenuCheckRtc
.L25:
	mov	r0, #0x2
	mov	r1, #0xe
	mov	r2, #0x1b
	mov	r3, #0x13
	bl	MenuDrawTextWindow
	ldr	r0, .L42
.L29:
	mov	r1, #0x3
	mov	r2, #0xf
	bl	MenuPrintMessage
	ldr	r1, .L42+0x4
	add	r0, r1, #0
	strh	r0, [r7]
	ldr	r2, .L42+0x8
	add	r0, r2, #0
	mov	r1, r8
	strh	r0, [r1]
	ldr	r1, .L42+0xc
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	strh	r6, [r0, #0x8]
	ldr	r1, .L42+0x10
.L28:
	str	r1, [r0]
.L13:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L43:
	.align	2, 0
.L42:
	.word	gBoardNotInstalledMessage
	.word	0x11df
	.word	0x719f
	.word	gTasks
	.word	Task_MainMenuWaitForSaveErrorAck
.Lfe6:
	.size	 Task_MainMenuCheckSave,.Lfe6-Task_MainMenuCheckSave
	.align	2, 0
	.type	 Task_MainMenuWaitForSaveErrorAck,function
	.thumb_func
Task_MainMenuWaitForSaveErrorAck:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	MenuUpdateWindowText
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L45	@cond_branch
	ldr	r0, .L47
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L45	@cond_branch
	mov	r0, #0x2
	mov	r1, #0xe
	mov	r2, #0x1b
	mov	r3, #0x13
	bl	MenuZeroFillWindowRect
	ldr	r0, .L47+0x4
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L47+0x8
	str	r0, [r1]
.L45:
	pop	{r4}
	pop	{r0}
	bx	r0
.L48:
	.align	2, 0
.L47:
	.word	gMain
	.word	gTasks
	.word	Task_MainMenuCheckRtc
.Lfe7:
	.size	 Task_MainMenuWaitForSaveErrorAck,.Lfe7-Task_MainMenuWaitForSaveErrorAck
	.align	2, 0
	.type	 Task_MainMenuCheckRtc,function
	.thumb_func
Task_MainMenuCheckRtc:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r5, r4, #0
	ldr	r0, .L53
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0
	bne	.L50	@cond_branch
	ldr	r6, .L53+0x4
	strh	r2, [r6]
	ldr	r7, .L53+0x8
	strh	r2, [r7]
	ldr	r1, .L53+0xc
	ldr	r3, .L53+0x10
	add	r0, r3, #0
	strh	r0, [r1]
	add	r1, r1, #0x2
	mov	r0, #0x31
	strh	r0, [r1]
	add	r1, r1, #0x6
	mov	r0, #0xf1
	strh	r0, [r1]
	ldr	r0, .L53+0x14
	strh	r2, [r0]
	add	r1, r1, #0x4
	mov	r0, #0x7
	strh	r0, [r1]
	bl	RtcGetErrorStatus
	mov	r1, #0xff
	lsl	r1, r1, #0x4
	and	r1, r1, r0
	cmp	r1, #0
	bne	.L51	@cond_branch
	ldr	r0, .L53+0x18
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L53+0x1c
	str	r0, [r1]
	b	.L50
.L54:
	.align	2, 0
.L53:
	.word	gPaletteFade
	.word	0x4000040
	.word	0x4000044
	.word	0x4000048
	.word	0x1111
	.word	0x4000052
	.word	gTasks
	.word	Task_MainMenuDraw
.L51:
	mov	r0, #0x2
	mov	r1, #0xe
	mov	r2, #0x1b
	mov	r3, #0x13
	bl	MenuDrawTextWindow
	ldr	r0, .L55
	mov	r1, #0x3
	mov	r2, #0xf
	bl	MenuPrintMessage
	ldr	r1, .L55+0x4
	add	r0, r1, #0
	strh	r0, [r6]
	ldr	r3, .L55+0x8
	add	r0, r3, #0
	strh	r0, [r7]
	ldr	r1, .L55+0xc
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L55+0x10
	str	r1, [r0]
.L50:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L56:
	.align	2, 0
.L55:
	.word	gBatteryDryMessage
	.word	0x11df
	.word	0x719f
	.word	gTasks
	.word	Task_MainMenuWaitForRtcErrorAck
.Lfe8:
	.size	 Task_MainMenuCheckRtc,.Lfe8-Task_MainMenuCheckRtc
	.align	2, 0
	.type	 Task_MainMenuWaitForRtcErrorAck,function
	.thumb_func
Task_MainMenuWaitForRtcErrorAck:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	MenuUpdateWindowText
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L58	@cond_branch
	ldr	r0, .L60
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L58	@cond_branch
	mov	r0, #0x2
	mov	r1, #0xe
	mov	r2, #0x1b
	mov	r3, #0x13
	bl	MenuZeroFillWindowRect
	ldr	r0, .L60+0x4
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L60+0x8
	str	r0, [r1]
.L58:
	pop	{r4}
	pop	{r0}
	bx	r0
.L61:
	.align	2, 0
.L60:
	.word	gMain
	.word	gTasks
	.word	Task_MainMenuDraw
.Lfe9:
	.size	 Task_MainMenuWaitForRtcErrorAck,.Lfe9-Task_MainMenuWaitForRtcErrorAck
	.align	2, 0
	.type	 Task_MainMenuDraw,function
	.thumb_func
Task_MainMenuDraw:
	push	{r4, r5, lr}
	add	sp, sp, #0xfffffffc
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L73
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0
	beq	.LCB716
	b	.L63	@long jump
.LCB716:
	ldr	r0, .L73+0x4
	strh	r2, [r0]
	add	r0, r0, #0x4
	strh	r2, [r0]
	ldr	r1, .L73+0x8
	ldr	r3, .L73+0xc
	add	r0, r3, #0
	strh	r0, [r1]
	add	r1, r1, #0x2
	mov	r0, #0x31
	strh	r0, [r1]
	add	r1, r1, #0x6
	mov	r0, #0xf1
	strh	r0, [r1]
	ldr	r0, .L73+0x10
	strh	r2, [r0]
	add	r1, r1, #0x4
	mov	r0, #0x7
	strh	r0, [r1]
	mov	r0, sp
	strh	r2, [r0]
	mov	r1, #0xfe
	mov	r2, #0x2
	bl	LoadPalette
	ldr	r0, .L73+0x14
	ldrb	r0, [r0, #0x8]
	cmp	r0, #0
	bne	.L64	@cond_branch
	mov	r1, sp
	ldr	r2, .L73+0x18
	add	r0, r2, #0
	strh	r0, [r1]
	mov	r0, sp
	mov	r1, #0xf1
	mov	r2, #0x2
	bl	LoadPalette
	b	.L65
.L74:
	.align	2, 0
.L73:
	.word	gPaletteFade
	.word	0x4000040
	.word	0x4000048
	.word	0x1111
	.word	0x4000052
	.word	gSaveBlock2
	.word	0x7e04
.L64:
	mov	r1, sp
	ldr	r3, .L75
	add	r0, r3, #0
	strh	r0, [r1]
	mov	r0, sp
	mov	r1, #0xf1
	mov	r2, #0x2
	bl	LoadPalette
.L65:
	ldr	r2, .L75+0x4
	lsl	r1, r4, #0x2
	add	r0, r1, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r2
	mov	r2, #0x8
	ldrsh	r0, [r0, r2]
	add	r5, r1, #0
	cmp	r0, #0x1
	beq	.L69	@cond_branch
	cmp	r0, #0x1
	ble	.L68	@cond_branch
	cmp	r0, #0x2
	beq	.L70	@cond_branch
.L68:
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x1c
	mov	r3, #0x3
	bl	MenuDrawTextWindow
	ldr	r0, .L75+0x8
	mov	r1, #0x2
	mov	r2, #0x1
	bl	PrintMainMenuItem
	mov	r0, #0x1
	mov	r1, #0x4
	mov	r2, #0x1c
	mov	r3, #0x7
	bl	MenuDrawTextWindow
	ldr	r0, .L75+0xc
	mov	r1, #0x2
	mov	r2, #0x5
	bl	PrintMainMenuItem
	b	.L66
.L76:
	.align	2, 0
.L75:
	.word	0x547f
	.word	gTasks
	.word	gMainMenuString_NewGame
	.word	gMainMenuString_Option
.L69:
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x1c
	mov	r3, #0x7
	bl	MenuDrawTextWindow
	ldr	r0, .L77
	mov	r1, #0x2
	mov	r2, #0x1
	bl	PrintMainMenuItem
	mov	r0, #0x1
	mov	r1, #0x8
	mov	r2, #0x1c
	mov	r3, #0xb
	bl	MenuDrawTextWindow
	ldr	r0, .L77+0x4
	mov	r1, #0x2
	mov	r2, #0x9
	bl	PrintMainMenuItem
	mov	r0, #0x1
	mov	r1, #0xc
	mov	r2, #0x1c
	mov	r3, #0xf
	bl	MenuDrawTextWindow
	ldr	r0, .L77+0x8
	mov	r1, #0x2
	mov	r2, #0xd
	bl	PrintMainMenuItem
	bl	PrintSaveFileInfo
	b	.L66
.L78:
	.align	2, 0
.L77:
	.word	gMainMenuString_Continue
	.word	gMainMenuString_NewGame
	.word	gMainMenuString_Option
.L70:
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x1c
	mov	r3, #0x7
	bl	MenuDrawTextWindow
	ldr	r0, .L79
	mov	r1, #0x2
	mov	r2, #0x1
	bl	PrintMainMenuItem
	mov	r0, #0x1
	mov	r1, #0x8
	mov	r2, #0x1c
	mov	r3, #0xb
	bl	MenuDrawTextWindow
	ldr	r0, .L79+0x4
	mov	r1, #0x2
	mov	r2, #0x9
	bl	PrintMainMenuItem
	mov	r0, #0x1
	mov	r1, #0xc
	mov	r2, #0x1c
	mov	r3, #0xf
	bl	MenuDrawTextWindow
	ldr	r0, .L79+0x8
	mov	r1, #0x2
	mov	r2, #0xd
	bl	PrintMainMenuItem
	mov	r0, #0x1
	mov	r1, #0x10
	mov	r2, #0x1c
	mov	r3, #0x13
	bl	MenuDrawTextWindow
	ldr	r0, .L79+0xc
	mov	r1, #0x2
	mov	r2, #0x11
	bl	PrintMainMenuItem
	bl	PrintSaveFileInfo
.L66:
	ldr	r0, .L79+0x10
	add	r1, r5, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L79+0x14
	str	r0, [r1]
.L63:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L80:
	.align	2, 0
.L79:
	.word	gMainMenuString_Continue
	.word	gMainMenuString_NewGame
	.word	gMainMenuString_MysteryEvents
	.word	gMainMenuString_Option
	.word	gTasks
	.word	Task_MainMenuHighlight
.Lfe10:
	.size	 Task_MainMenuDraw,.Lfe10-Task_MainMenuDraw
	.align	2, 0
	.type	 Task_MainMenuHighlight,function
	.thumb_func
Task_MainMenuHighlight:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L82
	lsl	r4, r0, #0x2
	add	r4, r4, r0
	lsl	r4, r4, #0x3
	add	r4, r4, r1
	ldrb	r0, [r4, #0x8]
	ldrb	r1, [r4, #0xa]
	bl	HighlightCurrentMenuItem
	ldr	r0, .L82+0x4
	str	r0, [r4]
	pop	{r4}
	pop	{r0}
	bx	r0
.L83:
	.align	2, 0
.L82:
	.word	gTasks
	.word	Task_MainMenuProcessKeyInput
.Lfe11:
	.size	 Task_MainMenuHighlight,.Lfe11-Task_MainMenuHighlight
	.align	2, 0
	.type	 MainMenuProcessKeyInput,function
	.thumb_func
MainMenuProcessKeyInput:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #0xfffffffc
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r1, .L101
	ldrh	r2, [r1, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r2
	mov	ip, r1
	cmp	r0, #0
	beq	.L85	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r1, .L101+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L101+0x8
	str	r1, [r0]
	b	.L86
.L102:
	.align	2, 0
.L101:
	.word	gMain
	.word	gTasks
	.word	Task_MainMenuPressedA
.L85:
	mov	r0, #0x2
	and	r0, r0, r2
	cmp	r0, #0
	beq	.L87	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x1
	neg	r0, r0
	ldr	r1, .L103
	str	r1, [sp]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r1, .L103+0x4
	mov	r0, #0xf0
	strh	r0, [r1]
	add	r1, r1, #0x4
	mov	r0, #0xa0
	strh	r0, [r1]
	ldr	r1, .L103+0x8
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L103+0xc
	str	r1, [r0]
	b	.L86
.L104:
	.align	2, 0
.L103:
	.word	0xffff
	.word	0x4000040
	.word	gTasks
	.word	Task_MainMenuPressedB
.L87:
	ldr	r0, .L105
	lsl	r2, r4, #0x2
	add	r1, r2, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r3, #0x8
	ldrsh	r1, [r1, r3]
	add	r6, r0, #0
	cmp	r1, #0x1
	beq	.L92	@cond_branch
	cmp	r1, #0x1
	ble	.L91	@cond_branch
	cmp	r1, #0x2
	beq	.L93	@cond_branch
.L91:
	mov	r5, #0x2
	b	.L89
.L106:
	.align	2, 0
.L105:
	.word	gTasks
.L92:
	mov	r5, #0x3
	b	.L89
.L93:
	mov	r5, #0x4
.L89:
	mov	r7, ip
	ldrh	r1, [r7, #0x2e]
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L96	@cond_branch
	add	r0, r2, r4
	lsl	r0, r0, #0x3
	add	r1, r0, r6
	ldrh	r3, [r1, #0xa]
	mov	r7, #0xa
	ldrsh	r0, [r1, r7]
	cmp	r0, #0
	ble	.L96	@cond_branch
	sub	r0, r3, #0x1
	strh	r0, [r1, #0xa]
	mov	r0, #0x1
	b	.L100
.L96:
	mov	r0, ip
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L86	@cond_branch
	add	r0, r2, r4
	lsl	r0, r0, #0x3
	add	r2, r0, r6
	mov	r3, #0xa
	ldrsh	r1, [r2, r3]
	sub	r0, r5, #0x1
	cmp	r1, r0
	bge	.L86	@cond_branch
	ldrh	r0, [r2, #0xa]
	add	r0, r0, #0x1
	strh	r0, [r2, #0xa]
	mov	r0, #0x1
	b	.L100
.L86:
	mov	r0, #0x0
.L100:
	add	sp, sp, #0x4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe12:
	.size	 MainMenuProcessKeyInput,.Lfe12-MainMenuProcessKeyInput
	.align	2, 0
	.type	 Task_MainMenuProcessKeyInput,function
	.thumb_func
Task_MainMenuProcessKeyInput:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r0, r4, #0
	bl	MainMenuProcessKeyInput
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L108	@cond_branch
	ldr	r0, .L109
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L109+0x4
	str	r0, [r1]
.L108:
	pop	{r4}
	pop	{r0}
	bx	r0
.L110:
	.align	2, 0
.L109:
	.word	gTasks
	.word	Task_MainMenuHighlight
.Lfe13:
	.size	 Task_MainMenuProcessKeyInput,.Lfe13-Task_MainMenuProcessKeyInput
	.align	2, 0
	.type	 Task_MainMenuPressedA,function
	.thumb_func
Task_MainMenuPressedA:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L149
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L111	@cond_branch
	ldr	r0, .L149+0x4
	lsl	r2, r4, #0x2
	add	r1, r2, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r5, #0x8
	ldrsh	r3, [r1, r5]
	add	r5, r0, #0
	cmp	r3, #0x1
	beq	.L121	@cond_branch
	cmp	r3, #0x1
	ble	.L115	@cond_branch
	cmp	r3, #0x2
	beq	.L129	@cond_branch
.L115:
	mov	r0, #0xa
	ldrsh	r1, [r1, r0]
	cmp	r1, #0
	beq	.L133	@cond_branch
	cmp	r1, #0x1
	bne	.L133	@cond_branch
	b	.L135
.L150:
	.align	2, 0
.L149:
	.word	gPaletteFade
	.word	gTasks
.L121:
	mov	r0, #0xa
	ldrsh	r1, [r1, r0]
	cmp	r1, #0x1
	beq	.L133	@cond_branch
	cmp	r1, #0x1
	ble	.L132	@cond_branch
	cmp	r1, #0x2
	bne	.L132	@cond_branch
	b	.L135
.L129:
	mov	r0, #0xa
	ldrsh	r1, [r1, r0]
	cmp	r1, #0x1
	beq	.L133	@cond_branch
	cmp	r1, #0x1
	ble	.L132	@cond_branch
	cmp	r1, #0x2
	beq	.L134	@cond_branch
	cmp	r1, #0x3
	beq	.L135	@cond_branch
.L132:
	mov	r0, #0x1
	b	.L113
.L133:
	mov	r0, #0x0
	b	.L113
.L134:
	mov	r0, #0x3
	b	.L113
.L135:
	mov	r0, #0x2
.L113:
	cmp	r0, #0x1
	beq	.L143	@cond_branch
	cmp	r0, #0x1
	ble	.L142	@cond_branch
	cmp	r0, #0x2
	beq	.L144	@cond_branch
	cmp	r0, #0x3
	beq	.L145	@cond_branch
.L142:
	ldr	r0, .L151
	mov	r1, #0x0
	strh	r1, [r0]
	ldr	r0, .L151+0x4
	strh	r1, [r0]
	add	r0, r2, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r5
	ldr	r1, .L151+0x8
	str	r1, [r0]
	b	.L111
.L152:
	.align	2, 0
.L151:
	.word	gPlttBufferUnfaded
	.word	gPlttBufferFaded
	.word	Task_NewGameSpeech1
.L143:
	ldr	r0, .L153
	mov	r1, #0x0
	strh	r1, [r0]
	ldr	r0, .L153+0x4
	strh	r1, [r0]
	ldr	r0, .L153+0x8
	b	.L148
.L154:
	.align	2, 0
.L153:
	.word	gPlttBufferUnfaded
	.word	gPlttBufferFaded
	.word	CB2_ContinueSavedGame
.L144:
	ldr	r0, .L155
	ldr	r1, .L155+0x4
	str	r1, [r0, #0x8]
	ldr	r0, .L155+0x8
.L148:
	bl	SetMainCallback2
	add	r0, r4, #0
	bl	DestroyTask
	b	.L111
.L156:
	.align	2, 0
.L155:
	.word	gMain
	.word	CB2_InitMainMenuFromOptions
	.word	CB2_InitOptionMenu
.L145:
	ldr	r0, .L157
	bl	SetMainCallback2
	add	r0, r4, #0
	bl	DestroyTask
.L111:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L158:
	.align	2, 0
.L157:
	.word	CB2_InitMysteryEventMenu
.Lfe14:
	.size	 Task_MainMenuPressedA,.Lfe14-Task_MainMenuPressedA
	.align	2, 0
	.type	 Task_MainMenuPressedB,function
	.thumb_func
Task_MainMenuPressedB:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L161
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L160	@cond_branch
	ldr	r0, .L161+0x4
	bl	SetMainCallback2
	add	r0, r4, #0
	bl	DestroyTask
.L160:
	pop	{r4}
	pop	{r0}
	bx	r0
.L162:
	.align	2, 0
.L161:
	.word	gPaletteFade
	.word	CB2_InitTitleScreen
.Lfe15:
	.size	 Task_MainMenuPressedB,.Lfe15-Task_MainMenuPressedB
	.align	2, 0
	.type	 HighlightCurrentMenuItem,function
	.thumb_func
HighlightCurrentMenuItem:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r2, r1, #0x18
	ldr	r1, .L193
	ldr	r4, .L193+0x4
	add	r0, r4, #0
	strh	r0, [r1]
	cmp	r3, #0x1
	beq	.L172	@cond_branch
	cmp	r3, #0x1
	ble	.L166	@cond_branch
	cmp	r3, #0x2
	beq	.L180	@cond_branch
.L166:
	cmp	r2, #0
	beq	.L169	@cond_branch
	cmp	r2, #0x1
	beq	.L170	@cond_branch
.L169:
	ldr	r1, .L193+0x8
	ldr	r2, .L193+0xc
	b	.L191
.L194:
	.align	2, 0
.L193:
	.word	0x4000040
	.word	0x9e7
	.word	0x4000044
	.word	0x11f
.L170:
	ldr	r1, .L195
	ldr	r4, .L195+0x4
	add	r0, r4, #0
	b	.L192
.L196:
	.align	2, 0
.L195:
	.word	0x4000044
	.word	0x213f
.L172:
	cmp	r2, #0x1
	beq	.L176	@cond_branch
	cmp	r2, #0x1
	ble	.L175	@cond_branch
	cmp	r2, #0x2
	beq	.L177	@cond_branch
.L175:
	ldr	r1, .L197
	ldr	r2, .L197+0x4
	b	.L191
.L198:
	.align	2, 0
.L197:
	.word	0x4000044
	.word	0x13f
.L176:
	ldr	r1, .L199
	ldr	r4, .L199+0x4
	add	r0, r4, #0
	b	.L192
.L200:
	.align	2, 0
.L199:
	.word	0x4000044
	.word	0x415f
.L177:
	ldr	r1, .L201
	ldr	r2, .L201+0x4
	b	.L191
.L202:
	.align	2, 0
.L201:
	.word	0x4000044
	.word	0x617f
.L180:
	cmp	r2, #0x1
	beq	.L184	@cond_branch
	cmp	r2, #0x1
	ble	.L183	@cond_branch
	cmp	r2, #0x2
	beq	.L185	@cond_branch
	cmp	r2, #0x3
	beq	.L186	@cond_branch
.L183:
	ldr	r1, .L203
	ldr	r4, .L203+0x4
	add	r0, r4, #0
	b	.L192
.L204:
	.align	2, 0
.L203:
	.word	0x4000044
	.word	0x13f
.L184:
	ldr	r1, .L205
	ldr	r2, .L205+0x4
	b	.L191
.L206:
	.align	2, 0
.L205:
	.word	0x4000044
	.word	0x415f
.L185:
	ldr	r1, .L207
	ldr	r4, .L207+0x4
	add	r0, r4, #0
	b	.L192
.L208:
	.align	2, 0
.L207:
	.word	0x4000044
	.word	0x617f
.L186:
	ldr	r1, .L209
	ldr	r2, .L209+0x4
.L191:
	add	r0, r2, #0
.L192:
	strh	r0, [r1]
	pop	{r4}
	pop	{r0}
	bx	r0
.L210:
	.align	2, 0
.L209:
	.word	0x4000044
	.word	0x819f
.Lfe16:
	.size	 HighlightCurrentMenuItem,.Lfe16-HighlightCurrentMenuItem
	.align	2, 0
	.type	 PrintMainMenuItem,function
	.thumb_func
PrintMainMenuItem:
	push	{r4, r5, r6, lr}
	add	sp, sp, #0xffffffe0
	add	r4, r0, #0
	lsl	r1, r1, #0x18
	lsr	r5, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r1, sp
	mov	r0, #0xfc
	strb	r0, [r1]
	mov	r0, #0x1
	strb	r0, [r1, #0x1]
	mov	r0, #0xe
	strb	r0, [r1, #0x2]
	mov	r3, #0x0
.L215:
	add	r0, r3, #0x3
	mov	r6, sp
	add	r1, r6, r0
	add	r0, r4, r3
	ldrb	r0, [r0]
	strb	r0, [r1]
	add	r0, r3, #0x1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0x19
	bls	.L215	@cond_branch
	mov	r1, sp
	mov	r0, #0xff
	strb	r0, [r1, #0x1d]
	mov	r0, sp
	add	r1, r5, #0
	bl	MenuPrint
	add	sp, sp, #0x20
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe17:
	.size	 PrintMainMenuItem,.Lfe17-PrintMainMenuItem
	.align	2, 0
	.type	 PrintSaveFileInfo,function
	.thumb_func
PrintSaveFileInfo:
	push	{lr}
	bl	PrintPlayerName
	bl	PrintPokedexCount
	bl	PrintPlayTime
	bl	PrintBadgeCount
	pop	{r0}
	bx	r0
.Lfe18:
	.size	 PrintSaveFileInfo,.Lfe18-PrintSaveFileInfo
	.align	2, 0
	.type	 PrintPlayerName,function
	.thumb_func
PrintPlayerName:
	push	{lr}
	ldr	r0, .L219
	mov	r1, #0x2
	mov	r2, #0x3
	bl	MenuPrint
	ldr	r0, .L219+0x4
	mov	r1, #0xf
	mov	r2, #0x3
	bl	MenuPrint_RightAligned
	pop	{r0}
	bx	r0
.L220:
	.align	2, 0
.L219:
	.word	gMainMenuString_Player
	.word	gSaveBlock2
.Lfe19:
	.size	 PrintPlayerName,.Lfe19-PrintPlayerName
	.align	2, 0
	.type	 PrintPlayTime,function
	.thumb_func
PrintPlayTime:
	push	{lr}
	add	sp, sp, #0xfffffff0
	ldr	r0, .L222
	mov	r1, #0x7a
	mov	r2, #0x18
	mov	r3, #0x1
	bl	MenuPrint_PixelCoords
	ldr	r0, .L222+0x4
	ldrh	r1, [r0, #0xe]
	ldrb	r2, [r0, #0x10]
	mov	r0, sp
	mov	r3, #0x1
	bl	FormatPlayTime
	mov	r0, sp
	mov	r1, #0x1c
	mov	r2, #0x3
	bl	MenuPrint_RightAligned
	add	sp, sp, #0x10
	pop	{r0}
	bx	r0
.L223:
	.align	2, 0
.L222:
	.word	gMainMenuString_Time
	.word	gSaveBlock2
.Lfe20:
	.size	 PrintPlayTime,.Lfe20-PrintPlayTime
	.section .rodata
.LC70:
	.byte	0x3a
	.byte	0x39
	.byte	0x3a
	.byte	0x31
	.byte	0xff
.text
	.align	2, 0
	.type	 PrintPokedexCount,function
	.thumb_func
PrintPokedexCount:
	push	{r4, lr}
	add	sp, sp, #0xffffffe8
	add	r4, sp, #0x10
	ldr	r1, .L225
	add	r0, r4, #0
	mov	r2, #0x5
	bl	memcpy
	ldr	r0, .L225+0x4
	mov	r1, #0x2
	mov	r2, #0x5
	bl	MenuPrint
	bl	GetPokedexSeenCount
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r0, sp
	bl	ConvertIntToDecimalString
	mov	r0, sp
	add	r1, r4, #0
	bl	StringAppend
	mov	r0, sp
	mov	r1, #0xf
	mov	r2, #0x5
	bl	MenuPrint_RightAligned
	add	sp, sp, #0x18
	pop	{r4}
	pop	{r0}
	bx	r0
.L226:
	.align	2, 0
.L225:
	.word	.LC70
	.word	gMainMenuString_Pokedex
.Lfe21:
	.size	 PrintPokedexCount,.Lfe21-PrintPokedexCount
	.section .rodata
.LC73:
	.byte	0x37
	.byte	0x1
	.byte	0x3e
	.byte	0xb
	.byte	0x37
	.byte	0x4d
	.byte	0x0
	.byte	0x3d
	.byte	0x7c
	.byte	0x38
	.byte	0xab
	.byte	0x0
	.byte	0x3a
	.byte	0xc9
	.byte	0x3e
	.byte	0xb
	.byte	0x0
	.byte	0xff
.LC75:
	.byte	0x37
	.byte	0x13
	.byte	0xff
.text
	.align	2, 0
	.type	 PrintBadgeCount,function
	.thumb_func
PrintBadgeCount:
	push	{r4, r5, lr}
	add	sp, sp, #0xffffffc4
	add	r4, sp, #0x24
	ldr	r1, .L228
	add	r0, r4, #0
	mov	r2, #0x12
	bl	memcpy
	add	r5, sp, #0x38
	ldr	r1, .L228+0x4
	add	r0, r5, #0
	mov	r2, #0x3
	bl	memcpy
	mov	r0, sp
	add	r1, r4, #0
	bl	StringCopy
	add	r4, sp, #0x14
	bl	GetBadgeCount
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	ConvertIntToDecimalString
	add	r0, r4, #0
	add	r1, r5, #0
	bl	StringAppend
	mov	r0, sp
	add	r1, r4, #0
	bl	StringAppend
	mov	r0, sp
	mov	r1, #0x7a
	mov	r2, #0x28
	mov	r3, #0x1
	bl	MenuPrint_PixelCoords
	add	sp, sp, #0x3c
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L229:
	.align	2, 0
.L228:
	.word	.LC73
	.word	.LC75
.Lfe22:
	.size	 PrintBadgeCount,.Lfe22-PrintBadgeCount
	.align	2, 0
	.type	 Task_NewGameSpeech1,function
	.thumb_func
Task_NewGameSpeech1:
	push	{r4, r5, lr}
	add	sp, sp, #0xfffffffc
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L231
	bl	SetUpWindowConfig
	ldr	r0, .L231+0x4
	bl	InitMenuWindow
	ldr	r0, .L231+0x8
	mov	r1, #0x0
	strh	r1, [r0]
	add	r0, r0, #0x4
	strh	r1, [r0]
	add	r0, r0, #0x4
	strh	r1, [r0]
	add	r0, r0, #0x2
	strh	r1, [r0]
	add	r0, r0, #0x6
	strh	r1, [r0]
	add	r0, r0, #0x2
	strh	r1, [r0]
	add	r0, r0, #0x2
	strh	r1, [r0]
	ldr	r0, .L231+0xc
	mov	r1, #0xc0
	lsl	r1, r1, #0x13
	bl	LZ77UnCompVram
	ldr	r0, .L231+0x10
	ldr	r1, .L231+0x14
	bl	LZ77UnCompVram
	ldr	r0, .L231+0x18
	mov	r1, #0x0
	mov	r2, #0x40
	bl	LoadPalette
	ldr	r0, .L231+0x1c
	mov	r1, #0x1
	mov	r2, #0x10
	bl	LoadPalette
	bl	remove_some_task
	bl	ResetSpriteData
	bl	FreeAllSpritePalettes
	add	r0, r4, #0
	bl	AddBirchSpeechObjects
	mov	r0, #0x1
	neg	r0, r0
	mov	r5, #0x0
	str	r5, [sp]
	mov	r1, #0x0
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	ldr	r1, .L231+0x20
	ldr	r2, .L231+0x24
	add	r0, r2, #0
	strh	r0, [r1]
	sub	r1, r1, #0xa
	mov	r2, #0x9a
	lsl	r2, r2, #0x5
	add	r0, r2, #0
	strh	r0, [r1]
	ldr	r1, .L231+0x28
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	strh	r5, [r0, #0x10]
	ldr	r1, .L231+0x2c
	str	r1, [r0]
	mov	r1, #0xff
	strh	r1, [r0, #0xc]
	strh	r1, [r0, #0xe]
	mov	r1, #0xd8
	strh	r1, [r0, #0x16]
	mov	r0, #0xbb
	lsl	r0, r0, #0x1
	bl	PlayBGM
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L232:
	.align	2, 0
.L231:
	.word	gWindowConfig_81E6C3C
	.word	gWindowConfig_81E6CE4
	.word	0x4000040
	.word	gBirchIntroShadowGfx
	.word	gUnknown_081E7834
	.word	0x6003800
	.word	gUnknown_081E764C
	.word	gUnknown_081E796C
	.word	0x400000a
	.word	0x703
	.word	gTasks
	.word	Task_NewGameSpeech2
.Lfe23:
	.size	 Task_NewGameSpeech1,.Lfe23-Task_NewGameSpeech1
	.align	2, 0
	.type	 Task_NewGameSpeech2,function
	.thumb_func
Task_NewGameSpeech2:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r1, .L236
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r4, r0, r1
	ldrh	r1, [r4, #0x16]
	mov	r2, #0x16
	ldrsh	r0, [r4, r2]
	cmp	r0, #0
	beq	.L234	@cond_branch
	sub	r0, r1, #0x1
	strh	r0, [r4, #0x16]
	b	.L235
.L237:
	.align	2, 0
.L236:
	.word	gTasks
.L234:
	ldrb	r0, [r4, #0x18]
	ldr	r2, .L238
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	mov	r0, #0x88
	strh	r0, [r1, #0x20]
	mov	r0, #0x3c
	strh	r0, [r1, #0x22]
	add	r3, r1, #0
	add	r3, r3, #0x3e
	ldrb	r2, [r3]
	sub	r0, r0, #0x41
	and	r0, r0, r2
	strb	r0, [r3]
	ldrb	r2, [r1, #0x1]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r2
	mov	r2, #0x4
	orr	r0, r0, r2
	strb	r0, [r1, #0x1]
	add	r0, r5, #0
	mov	r1, #0xa
	bl	StartSpriteFadeIn
	add	r0, r5, #0
	mov	r1, #0x14
	bl	StartBackgroundFadeIn
	mov	r0, #0x50
	strh	r0, [r4, #0x16]
	ldr	r0, .L238+0x4
	str	r0, [r4]
.L235:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L239:
	.align	2, 0
.L238:
	.word	gSprites
	.word	Task_NewGameSpeech3
.Lfe24:
	.size	 Task_NewGameSpeech2,.Lfe24-Task_NewGameSpeech2
	.align	2, 0
	.type	 Task_NewGameSpeech3,function
	.thumb_func
Task_NewGameSpeech3:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L244
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r4, r1, r2
	mov	r1, #0x12
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	beq	.L241	@cond_branch
	ldr	r2, .L244+0x4
	mov	r1, #0x18
	ldrsh	r0, [r4, r1]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldrb	r2, [r1, #0x1]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r1, #0x1]
	ldrh	r1, [r4, #0x16]
	mov	r2, #0x16
	ldrsh	r0, [r4, r2]
	cmp	r0, #0
	beq	.L242	@cond_branch
	sub	r0, r1, #0x1
	strh	r0, [r4, #0x16]
	b	.L241
.L245:
	.align	2, 0
.L244:
	.word	gTasks
	.word	gSprites
.L242:
	mov	r0, #0x2
	mov	r1, #0xd
	mov	r2, #0x1b
	mov	r3, #0x12
	bl	MenuDrawTextWindow
	ldr	r0, .L246
	mov	r1, #0x3
	mov	r2, #0xe
	bl	MenuPrintMessage
	ldr	r0, .L246+0x4
	str	r0, [r4]
.L241:
	pop	{r4}
	pop	{r0}
	bx	r0
.L247:
	.align	2, 0
.L246:
	.word	gBirchSpeech_Welcome
	.word	Task_NewGameSpeech4
.Lfe25:
	.size	 Task_NewGameSpeech3,.Lfe25-Task_NewGameSpeech3
	.align	2, 0
	.type	 Task_NewGameSpeech4,function
	.thumb_func
Task_NewGameSpeech4:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L250
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L249	@cond_branch
	mov	r0, #0x18
	bl	MenuUpdateWindowText_OverrideLineLength
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L249	@cond_branch
	ldr	r1, .L250+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L250+0x8
	str	r1, [r0]
	ldr	r0, .L250+0xc
	mov	r1, #0x3
	mov	r2, #0xe
	bl	MenuPrintMessage
.L249:
	pop	{r4}
	pop	{r0}
	bx	r0
.L251:
	.align	2, 0
.L250:
	.word	gPaletteFade
	.word	gTasks
	.word	Task_NewGameSpeech5
	.word	gBirchSpeech_ThisIsPokemon
.Lfe26:
	.size	 Task_NewGameSpeech4,.Lfe26-Task_NewGameSpeech4
	.align	2, 0
	.type	 Task_NewGameSpeech5,function
	.thumb_func
Task_NewGameSpeech5:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r0, #0x18
	bl	MenuUpdateWindowText_OverrideLineLength
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L253	@cond_branch
	ldr	r0, .L254
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L254+0x4
	str	r0, [r1]
.L253:
	pop	{r4}
	pop	{r0}
	bx	r0
.L255:
	.align	2, 0
.L254:
	.word	gTasks
	.word	Task_NewGameSpeech6
.Lfe27:
	.size	 Task_NewGameSpeech5,.Lfe27-Task_NewGameSpeech5
	.align	2, 0
	.type	 Task_NewGameSpeech6,function
	.thumb_func
Task_NewGameSpeech6:
	push	{r4, r5, lr}
	add	sp, sp, #0xfffffff0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L257
	lsl	r4, r0, #0x2
	add	r4, r4, r0
	lsl	r4, r4, #0x3
	add	r4, r4, r1
	ldrb	r0, [r4, #0x1a]
	ldr	r1, .L257+0x4
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	add	r2, r2, r1
	mov	r5, #0x0
	mov	r1, #0x68
	strh	r1, [r2, #0x20]
	mov	r1, #0x48
	strh	r1, [r2, #0x22]
	mov	r1, #0x3e
	add	r1, r1, r2
	mov	ip, r1
	ldrb	r3, [r1]
	mov	r1, #0x5
	neg	r1, r1
	and	r1, r1, r3
	mov	r3, ip
	strb	r1, [r3]
	strh	r5, [r2, #0x2e]
	ldrb	r1, [r2, #0x5]
	lsr	r1, r1, #0x4
	str	r5, [sp]
	str	r5, [sp, #0x4]
	mov	r2, #0x20
	str	r2, [sp, #0x8]
	ldr	r2, .L257+0x8
	str	r2, [sp, #0xc]
	mov	r2, #0x70
	mov	r3, #0x3a
	bl	CreatePokeballSprite
	ldr	r0, .L257+0xc
	str	r0, [r4]
	strh	r5, [r4, #0x16]
	add	sp, sp, #0x10
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L258:
	.align	2, 0
.L257:
	.word	gTasks
	.word	gSprites
	.word	0xffff
	.word	Task_NewGameSpeech7
.Lfe28:
	.size	 Task_NewGameSpeech6,.Lfe28-Task_NewGameSpeech6
	.align	2, 0
	.type	 Task_NewGameSpeech7,function
	.thumb_func
Task_NewGameSpeech7:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	IsCryFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L260	@cond_branch
	ldr	r0, .L264
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r5, r1, r0
	mov	r1, #0x16
	ldrsh	r0, [r5, r1]
	cmp	r0, #0x5f
	ble	.L260	@cond_branch
	ldr	r0, .L264+0x4
	bl	MenuSetText
	ldr	r0, .L264+0x8
	str	r0, [r5]
.L260:
	ldr	r1, .L264
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r2, r0, r1
	ldrh	r3, [r2, #0x16]
	mov	r0, #0x16
	ldrsh	r1, [r2, r0]
	ldr	r0, .L264+0xc
	cmp	r1, r0
	bgt	.L262	@cond_branch
	add	r0, r3, #0x1
	strh	r0, [r2, #0x16]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x20
	bne	.L262	@cond_branch
	mov	r0, #0xaf
	lsl	r0, r0, #0x1
	mov	r1, #0x0
	bl	PlayCry1
.L262:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L265:
	.align	2, 0
.L264:
	.word	gTasks
	.word	gSystemText_NewPara
	.word	Task_NewGameSpeech8
	.word	0x3fff
.Lfe29:
	.size	 Task_NewGameSpeech7,.Lfe29-Task_NewGameSpeech7
	.align	2, 0
	.type	 Task_NewGameSpeech8,function
	.thumb_func
Task_NewGameSpeech8:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r0, #0x18
	bl	MenuUpdateWindowText_OverrideLineLength
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L267	@cond_branch
	ldr	r0, .L268
	mov	r1, #0x3
	mov	r2, #0xe
	bl	MenuPrintMessage
	ldr	r1, .L268+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L268+0x8
	str	r1, [r0]
.L267:
	pop	{r4}
	pop	{r0}
	bx	r0
.L269:
	.align	2, 0
.L268:
	.word	gBirchSpeech_WorldInhabitedByPokemon
	.word	gTasks
	.word	Task_NewGameSpeech9
.Lfe30:
	.size	 Task_NewGameSpeech8,.Lfe30-Task_NewGameSpeech8
	.align	2, 0
	.type	 Task_NewGameSpeech9,function
	.thumb_func
Task_NewGameSpeech9:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r0, #0x18
	bl	MenuUpdateWindowText_OverrideLineLength
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L271	@cond_branch
	mov	r0, #0x2
	mov	r1, #0xd
	mov	r2, #0x1b
	mov	r3, #0x12
	bl	MenuDrawTextWindow
	ldr	r0, .L272
	mov	r1, #0x3
	mov	r2, #0xe
	bl	MenuPrintMessage
	ldr	r1, .L272+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L272+0x8
	str	r1, [r0]
.L271:
	pop	{r4}
	pop	{r0}
	bx	r0
.L273:
	.align	2, 0
.L272:
	.word	gBirchSpeech_AndYouAre
	.word	gTasks
	.word	Task_NewGameSpeech10
.Lfe31:
	.size	 Task_NewGameSpeech9,.Lfe31-Task_NewGameSpeech9
	.align	2, 0
	.type	 Task_NewGameSpeech10,function
	.thumb_func
Task_NewGameSpeech10:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	mov	r0, #0x18
	bl	MenuUpdateWindowText_OverrideLineLength
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L275	@cond_branch
	ldr	r5, .L276
	ldr	r0, .L276+0x4
	lsl	r4, r6, #0x2
	add	r4, r4, r6
	lsl	r4, r4, #0x3
	add	r4, r4, r0
	mov	r1, #0x18
	ldrsh	r0, [r4, r1]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r5
	ldrb	r3, [r1, #0x1]
	mov	r2, #0xd
	neg	r2, r2
	add	r0, r2, #0
	and	r0, r0, r3
	mov	r3, #0x4
	orr	r0, r0, r3
	strb	r0, [r1, #0x1]
	mov	r0, #0x1a
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldrb	r1, [r0, #0x1]
	and	r2, r2, r1
	orr	r2, r2, r3
	strb	r2, [r0, #0x1]
	add	r0, r6, #0
	mov	r1, #0x2
	bl	StartSpriteFadeOut
	add	r0, r6, #0
	mov	r1, #0x1
	bl	StartBackgroundFadeOut
	mov	r0, #0x40
	strh	r0, [r4, #0x16]
	ldr	r0, .L276+0x8
	str	r0, [r4]
.L275:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L277:
	.align	2, 0
.L276:
	.word	gSprites
	.word	gTasks
	.word	Task_NewGameSpeech11
.Lfe32:
	.size	 Task_NewGameSpeech10,.Lfe32-Task_NewGameSpeech10
	.align	2, 0
	.type	 Task_NewGameSpeech11,function
	.thumb_func
Task_NewGameSpeech11:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L281
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r2, r1, r2
	ldrh	r3, [r2, #0x10]
	mov	r0, #0x10
	ldrsh	r1, [r2, r0]
	mov	r0, #0x3c
	neg	r0, r0
	cmp	r1, r0
	beq	.L279	@cond_branch
	sub	r1, r3, #0x2
	strh	r1, [r2, #0x10]
	ldr	r0, .L281+0x4
	strh	r1, [r0]
	b	.L280
.L282:
	.align	2, 0
.L281:
	.word	gTasks
	.word	0x4000014
.L279:
	ldr	r0, .L283
	strh	r0, [r2, #0x10]
	ldr	r0, .L283+0x4
	str	r0, [r2]
.L280:
	pop	{r0}
	bx	r0
.L284:
	.align	2, 0
.L283:
	.word	0xffc4
	.word	Task_NewGameSpeech12
.Lfe33:
	.size	 Task_NewGameSpeech11,.Lfe33-Task_NewGameSpeech11
	.align	2, 0
	.type	 Task_NewGameSpeech12,function
	.thumb_func
Task_NewGameSpeech12:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r5, r0, #0
	ldr	r1, .L289
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r4, r0, r1
	mov	r1, #0x12
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	beq	.L286	@cond_branch
	ldr	r2, .L289+0x4
	mov	r0, #0x18
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r7, #0x4
	orr	r1, r1, r7
	strb	r1, [r0]
	mov	r0, #0x1a
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	orr	r1, r1, r7
	strb	r1, [r0]
	ldrh	r0, [r4, #0x16]
	mov	r1, #0x16
	ldrsh	r6, [r4, r1]
	cmp	r6, #0
	beq	.L287	@cond_branch
	sub	r0, r0, #0x1
	strh	r0, [r4, #0x16]
	b	.L286
.L290:
	.align	2, 0
.L289:
	.word	gTasks
	.word	gSprites
.L287:
	ldrb	r3, [r4, #0x1c]
	lsl	r1, r3, #0x4
	add	r1, r1, r3
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	mov	r0, #0xb4
	strh	r0, [r1, #0x20]
	mov	r0, #0x3c
	strh	r0, [r1, #0x22]
	mov	r2, #0x3e
	add	r2, r2, r1
	mov	ip, r2
	ldrb	r2, [r2]
	sub	r0, r0, #0x41
	and	r0, r0, r2
	mov	r2, ip
	strb	r0, [r2]
	ldrb	r2, [r1, #0x1]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r7
	strb	r0, [r1, #0x1]
	strh	r3, [r4, #0xc]
	strh	r6, [r4, #0x14]
	add	r0, r5, #0
	mov	r1, #0x2
	bl	StartSpriteFadeIn
	add	r0, r5, #0
	mov	r1, #0x1
	bl	StartBackgroundFadeIn
	ldr	r0, .L291
	str	r0, [r4]
.L286:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L292:
	.align	2, 0
.L291:
	.word	Task_NewGameSpeech13
.Lfe34:
	.size	 Task_NewGameSpeech12,.Lfe34-Task_NewGameSpeech12
	.align	2, 0
	.type	 Task_NewGameSpeech13,function
	.thumb_func
Task_NewGameSpeech13:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L295
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r3, r1, r2
	mov	r1, #0x12
	ldrsh	r0, [r3, r1]
	cmp	r0, #0
	beq	.L294	@cond_branch
	ldr	r2, .L295+0x4
	mov	r1, #0xc
	ldrsh	r0, [r3, r1]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldrb	r2, [r1, #0x1]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r1, #0x1]
	ldr	r0, .L295+0x8
	str	r0, [r3]
.L294:
	pop	{r0}
	bx	r0
.L296:
	.align	2, 0
.L295:
	.word	gTasks
	.word	gSprites
	.word	Task_NewGameSpeech14
.Lfe35:
	.size	 Task_NewGameSpeech13,.Lfe35-Task_NewGameSpeech13
	.align	2, 0
	.type	 Task_NewGameSpeech14,function
	.thumb_func
Task_NewGameSpeech14:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x2
	mov	r1, #0xd
	mov	r2, #0x1b
	mov	r3, #0x12
	bl	MenuDrawTextWindow
	ldr	r0, .L298
	mov	r1, #0x3
	mov	r2, #0xe
	bl	MenuPrintMessage
	ldr	r1, .L298+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L298+0x8
	str	r1, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L299:
	.align	2, 0
.L298:
	.word	gBirchSpeech_AreYouBoyOrGirl
	.word	gTasks
	.word	Task_NewGameSpeech15
.Lfe36:
	.size	 Task_NewGameSpeech14,.Lfe36-Task_NewGameSpeech14
	.align	2, 0
	.type	 Task_NewGameSpeech15,function
	.thumb_func
Task_NewGameSpeech15:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r0, #0x18
	bl	MenuUpdateWindowText_OverrideLineLength
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L301	@cond_branch
	mov	r0, #0x2
	mov	r1, #0x4
	bl	CreateGenderMenu
	ldr	r0, .L302
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L302+0x4
	str	r0, [r1]
.L301:
	pop	{r4}
	pop	{r0}
	bx	r0
.L303:
	.align	2, 0
.L302:
	.word	gTasks
	.word	Task_NewGameSpeech16
.Lfe37:
	.size	 Task_NewGameSpeech15,.Lfe37-Task_NewGameSpeech15
	.align	2, 0
	.type	 Task_NewGameSpeech16,function
	.thumb_func
Task_NewGameSpeech16:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	bl	GenderMenuProcessInput
	lsl	r0, r0, #0x18
	asr	r4, r0, #0x18
	cmp	r4, #0
	beq	.L306	@cond_branch
	cmp	r4, #0x1
	beq	.L307	@cond_branch
	lsl	r4, r5, #0x2
	b	.L305
.L306:
.L307:
	bl	HandleDestroyMenuCursors
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L311
	strb	r4, [r0, #0x8]
	mov	r0, #0x2
	mov	r1, #0x4
	mov	r2, #0x8
	mov	r3, #0x9
	bl	MenuZeroFillWindowRect
	ldr	r1, .L311+0x4
	lsl	r2, r5, #0x2
	add	r0, r2, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L311+0x8
	str	r1, [r0]
	add	r4, r2, #0
.L305:
	bl	GetMenuCursorPos
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	ldr	r1, .L311+0x4
	add	r0, r4, r5
	lsl	r0, r0, #0x3
	add	r4, r0, r1
	mov	r1, #0x14
	ldrsh	r0, [r4, r1]
	cmp	r3, r0
	beq	.L310	@cond_branch
	strh	r3, [r4, #0x14]
	ldr	r2, .L311+0xc
	mov	r0, #0xc
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r2, [r0, #0x1]
	mov	r1, #0xd
	neg	r1, r1
	and	r1, r1, r2
	mov	r2, #0x4
	orr	r1, r1, r2
	strb	r1, [r0, #0x1]
	add	r0, r5, #0
	mov	r1, #0x0
	bl	StartSpriteFadeOut
	ldr	r0, .L311+0x10
	str	r0, [r4]
.L310:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L312:
	.align	2, 0
.L311:
	.word	gSaveBlock2
	.word	gTasks
	.word	Task_NewGameSpeech19
	.word	gSprites
	.word	Task_NewGameSpeech17
.Lfe38:
	.size	 Task_NewGameSpeech16,.Lfe38-Task_NewGameSpeech16
	.align	2, 0
	.type	 Task_NewGameSpeech17,function
	.thumb_func
Task_NewGameSpeech17:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r1, .L318
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	add	r4, r0, r1
	ldrb	r5, [r4, #0xc]
	mov	r2, #0x12
	ldrsh	r0, [r4, r2]
	add	r7, r1, #0
	cmp	r0, #0
	bne	.L314	@cond_branch
	ldr	r0, .L318+0x4
	lsl	r1, r5, #0x4
	add	r1, r1, r5
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	ldrh	r0, [r1, #0x20]
	add	r0, r0, #0x4
	strh	r0, [r1, #0x20]
	b	.L315
.L319:
	.align	2, 0
.L318:
	.word	gTasks
	.word	gSprites
.L314:
	ldr	r3, .L320
	lsl	r0, r5, #0x4
	add	r0, r0, r5
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r2, #0x4
	orr	r1, r1, r2
	strb	r1, [r0]
	mov	r1, #0x14
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	beq	.L316	@cond_branch
	ldrb	r5, [r4, #0x1e]
	b	.L317
.L321:
	.align	2, 0
.L320:
	.word	gSprites
.L316:
	ldrb	r5, [r4, #0x1c]
.L317:
	lsl	r2, r5, #0x4
	add	r2, r2, r5
	lsl	r2, r2, #0x2
	add	r2, r2, r3
	mov	r0, #0xf0
	strh	r0, [r2, #0x20]
	mov	r0, #0x3c
	strh	r0, [r2, #0x22]
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r1, [r3]
	sub	r0, r0, #0x41
	and	r0, r0, r1
	strb	r0, [r3]
	lsl	r4, r6, #0x2
	add	r4, r4, r6
	lsl	r4, r4, #0x3
	add	r4, r4, r7
	strh	r5, [r4, #0xc]
	ldrb	r1, [r2, #0x1]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r1
	mov	r1, #0x4
	orr	r0, r0, r1
	strb	r0, [r2, #0x1]
	add	r0, r6, #0
	mov	r1, #0x0
	bl	StartSpriteFadeIn
	ldr	r0, .L322
	str	r0, [r4]
.L315:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L323:
	.align	2, 0
.L322:
	.word	Task_NewGameSpeech18
.Lfe39:
	.size	 Task_NewGameSpeech17,.Lfe39-Task_NewGameSpeech17
	.align	2, 0
	.type	 Task_NewGameSpeech18,function
	.thumb_func
Task_NewGameSpeech18:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L328
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r3, r1, r2
	ldrb	r1, [r3, #0xc]
	ldr	r2, .L328+0x4
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r2, r0, r2
	ldrh	r1, [r2, #0x20]
	mov	r4, #0x20
	ldrsh	r0, [r2, r4]
	cmp	r0, #0xb4
	ble	.L325	@cond_branch
	sub	r0, r1, #0x4
	strh	r0, [r2, #0x20]
	b	.L326
.L329:
	.align	2, 0
.L328:
	.word	gTasks
	.word	gSprites
.L325:
	mov	r0, #0xb4
	strh	r0, [r2, #0x20]
	mov	r1, #0x12
	ldrsh	r0, [r3, r1]
	cmp	r0, #0
	beq	.L326	@cond_branch
	ldrb	r0, [r2, #0x1]
	mov	r1, #0xd
	neg	r1, r1
	and	r1, r1, r0
	strb	r1, [r2, #0x1]
	ldr	r0, .L330
	str	r0, [r3]
.L326:
	pop	{r4}
	pop	{r0}
	bx	r0
.L331:
	.align	2, 0
.L330:
	.word	Task_NewGameSpeech16
.Lfe40:
	.size	 Task_NewGameSpeech18,.Lfe40-Task_NewGameSpeech18
	.align	2, 0
	.type	 Task_NewGameSpeech19,function
	.thumb_func
Task_NewGameSpeech19:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x2
	mov	r1, #0xd
	mov	r2, #0x1b
	mov	r3, #0x12
	bl	MenuDrawTextWindow
	ldr	r0, .L333
	mov	r1, #0x3
	mov	r2, #0xe
	bl	MenuPrintMessage
	ldr	r1, .L333+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L333+0x8
	str	r1, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L334:
	.align	2, 0
.L333:
	.word	gBirchSpeech_WhatsYourName
	.word	gTasks
	.word	Task_NewGameSpeech20
.Lfe41:
	.size	 Task_NewGameSpeech19,.Lfe41-Task_NewGameSpeech19
	.align	2, 0
	.type	 Task_NewGameSpeech20,function
	.thumb_func
Task_NewGameSpeech20:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r0, #0x18
	bl	MenuUpdateWindowText_OverrideLineLength
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L336	@cond_branch
	mov	r0, #0x2
	mov	r1, #0x1
	bl	CreateNameMenu
	ldr	r0, .L337
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L337+0x4
	str	r0, [r1]
.L336:
	pop	{r4}
	pop	{r0}
	bx	r0
.L338:
	.align	2, 0
.L337:
	.word	gTasks
	.word	Task_NewGameSpeech21
.Lfe42:
	.size	 Task_NewGameSpeech20,.Lfe42-Task_NewGameSpeech20
	.align	2, 0
	.type	 Task_NewGameSpeech21,function
	.thumb_func
Task_NewGameSpeech21:
	push	{r4, r5, r6, lr}
	add	sp, sp, #0xfffffffc
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	bl	NameMenuProcessInput
	lsl	r6, r0, #0x18
	asr	r4, r6, #0x18
	cmp	r4, #0
	beq	.L345	@cond_branch
	cmp	r4, #0
	bgt	.L349	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r4, r0
	beq	.L346	@cond_branch
	b	.L340
.L349:
	cmp	r4, #0x4
	bgt	.L340	@cond_branch
	bl	HandleDestroyMenuCursors
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x2
	mov	r1, #0x1
	mov	r2, #0x16
	mov	r3, #0xc
	bl	MenuZeroFillWindowRect
	lsr	r0, r6, #0x18
	bl	SetPresetPlayerName
	ldr	r1, .L350
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L350+0x4
	str	r1, [r0]
	b	.L340
.L351:
	.align	2, 0
.L350:
	.word	gTasks
	.word	Task_NewGameSpeech23
.L345:
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x1
	neg	r0, r0
	str	r4, [sp]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r1, .L352
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L352+0x4
	str	r1, [r0]
	b	.L340
.L353:
	.align	2, 0
.L352:
	.word	gTasks
	.word	Task_NewGameSpeech22
.L346:
	bl	HandleDestroyMenuCursors
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x2
	mov	r1, #0x1
	mov	r2, #0x16
	mov	r3, #0xc
	bl	MenuZeroFillWindowRect
	ldr	r0, .L354
	lsl	r1, r5, #0x2
	add	r1, r1, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L354+0x4
	str	r0, [r1]
.L340:
	add	sp, sp, #0x4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L355:
	.align	2, 0
.L354:
	.word	gTasks
	.word	Task_NewGameSpeech14
.Lfe43:
	.size	 Task_NewGameSpeech21,.Lfe43-Task_NewGameSpeech21
	.align	2, 0
	.type	 Task_NewGameSpeech22,function
	.thumb_func
Task_NewGameSpeech22:
	push	{r4, lr}
	add	sp, sp, #0xfffffff8
	ldr	r0, .L358
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0
	bne	.L357	@cond_branch
	mov	r0, #0x1
	bl	SetPresetPlayerName
	ldr	r1, .L358+0x4
	ldrb	r2, [r1, #0x8]
	str	r4, [sp]
	ldr	r0, .L358+0x8
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	mov	r3, #0x0
	bl	DoNamingScreen
.L357:
	add	sp, sp, #0x8
	pop	{r4}
	pop	{r0}
	bx	r0
.L359:
	.align	2, 0
.L358:
	.word	gPaletteFade
	.word	gSaveBlock2
	.word	CB_ContinueNewGameSpeechPart2
.Lfe44:
	.size	 Task_NewGameSpeech22,.Lfe44-Task_NewGameSpeech22
	.align	2, 0
	.type	 Task_NewGameSpeech23,function
	.thumb_func
Task_NewGameSpeech23:
	push	{r4, r5, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x2
	mov	r1, #0xd
	mov	r2, #0x1b
	mov	r3, #0x12
	bl	MenuDrawTextWindow
	ldr	r5, .L361
	ldr	r1, .L361+0x4
	add	r0, r5, #0
	bl	StringExpandPlaceholders
	add	r0, r5, #0
	mov	r1, #0x3
	mov	r2, #0xe
	bl	MenuPrintMessage
	ldr	r1, .L361+0x8
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L361+0xc
	str	r1, [r0]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L362:
	.align	2, 0
.L361:
	.word	gStringVar4
	.word	gBirchSpeech_SoItsPlayer
	.word	gTasks
	.word	Task_NewGameSpeech24
.Lfe45:
	.size	 Task_NewGameSpeech23,.Lfe45-Task_NewGameSpeech23
	.align	2, 0
	.type	 Task_NewGameSpeech24,function
	.thumb_func
Task_NewGameSpeech24:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r0, #0x18
	bl	MenuUpdateWindowText_OverrideLineLength
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L364	@cond_branch
	mov	r0, #0x2
	mov	r1, #0x1
	mov	r2, #0x1
	bl	DisplayYesNoMenu
	ldr	r0, .L365
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L365+0x4
	str	r0, [r1]
.L364:
	pop	{r4}
	pop	{r0}
	bx	r0
.L366:
	.align	2, 0
.L365:
	.word	gTasks
	.word	Task_NewGameSpeech25
.Lfe46:
	.size	 Task_NewGameSpeech24,.Lfe46-Task_NewGameSpeech24
	.align	2, 0
	.type	 Task_NewGameSpeech25,function
	.thumb_func
Task_NewGameSpeech25:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	bl	ProcessMenuInputNoWrap_
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L369	@cond_branch
	cmp	r1, #0
	bgt	.L374	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L371	@cond_branch
	b	.L368
.L374:
	cmp	r1, #0x1
	beq	.L371	@cond_branch
	b	.L368
.L369:
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x2
	mov	r1, #0x1
	mov	r2, #0x9
	mov	r3, #0x7
	bl	MenuZeroFillWindowRect
	ldr	r2, .L375
	ldr	r0, .L375+0x4
	lsl	r4, r5, #0x2
	add	r4, r4, r5
	lsl	r4, r4, #0x3
	add	r4, r4, r0
	mov	r0, #0xc
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r2, [r0, #0x1]
	mov	r1, #0xd
	neg	r1, r1
	and	r1, r1, r2
	mov	r2, #0x4
	orr	r1, r1, r2
	strb	r1, [r0, #0x1]
	add	r0, r5, #0
	mov	r1, #0x2
	bl	StartSpriteFadeOut
	add	r0, r5, #0
	mov	r1, #0x1
	bl	StartBackgroundFadeOut
	ldr	r0, .L375+0x8
	str	r0, [r4]
	b	.L368
.L376:
	.align	2, 0
.L375:
	.word	gSprites
	.word	gTasks
	.word	Task_NewGameSpeech26
.L371:
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x2
	mov	r1, #0x1
	mov	r2, #0x9
	mov	r3, #0x7
	bl	MenuZeroFillWindowRect
	ldr	r0, .L377
	lsl	r1, r5, #0x2
	add	r1, r1, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L377+0x4
	str	r0, [r1]
.L368:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L378:
	.align	2, 0
.L377:
	.word	gTasks
	.word	Task_NewGameSpeech14
.Lfe47:
	.size	 Task_NewGameSpeech25,.Lfe47-Task_NewGameSpeech25
	.align	2, 0
	.type	 Task_NewGameSpeech26,function
	.thumb_func
Task_NewGameSpeech26:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L382
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r2, r1, r2
	ldrh	r1, [r2, #0x10]
	mov	r3, #0x10
	ldrsh	r0, [r2, r3]
	cmp	r0, #0
	beq	.L380	@cond_branch
	add	r1, r1, #0x2
	strh	r1, [r2, #0x10]
	ldr	r0, .L382+0x4
	strh	r1, [r0]
	b	.L381
.L383:
	.align	2, 0
.L382:
	.word	gTasks
	.word	0x4000014
.L380:
	ldr	r0, .L384
	str	r0, [r2]
.L381:
	pop	{r0}
	bx	r0
.L385:
	.align	2, 0
.L384:
	.word	Task_NewGameSpeech27
.Lfe48:
	.size	 Task_NewGameSpeech26,.Lfe48-Task_NewGameSpeech26
	.align	2, 0
	.type	 Task_NewGameSpeech27,function
	.thumb_func
Task_NewGameSpeech27:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r1, .L388
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	add	r7, r0, r1
	mov	r1, #0x12
	ldrsh	r0, [r7, r1]
	cmp	r0, #0
	beq	.L387	@cond_branch
	ldr	r5, .L388+0x4
	mov	r2, #0x1c
	ldrsh	r1, [r7, r2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r3, #0x4
	mov	ip, r3
	mov	r2, ip
	orr	r1, r1, r2
	strb	r1, [r0]
	mov	r3, #0x1e
	ldrsh	r1, [r7, r3]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	orr	r1, r1, r2
	strb	r1, [r0]
	ldrb	r0, [r7, #0x18]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r5
	mov	r0, #0x88
	strh	r0, [r1, #0x20]
	mov	r0, #0x40
	strh	r0, [r1, #0x22]
	add	r3, r1, #0
	add	r3, r3, #0x3e
	ldrb	r2, [r3]
	mov	r4, #0x5
	neg	r4, r4
	add	r0, r4, #0
	and	r0, r0, r2
	strb	r0, [r3]
	ldrb	r3, [r1, #0x1]
	mov	r2, #0xd
	neg	r2, r2
	add	r0, r2, #0
	and	r0, r0, r3
	mov	r3, ip
	orr	r0, r0, r3
	strb	r0, [r1, #0x1]
	ldrb	r1, [r7, #0x1a]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	mov	r1, #0x68
	strh	r1, [r0, #0x20]
	mov	r1, #0x48
	strh	r1, [r0, #0x22]
	add	r3, r0, #0
	add	r3, r3, #0x3e
	ldrb	r1, [r3]
	and	r4, r4, r1
	strb	r4, [r3]
	ldrb	r1, [r0, #0x1]
	and	r2, r2, r1
	mov	r1, ip
	orr	r2, r2, r1
	strb	r2, [r0, #0x1]
	add	r0, r6, #0
	mov	r1, #0x2
	bl	StartSpriteFadeIn
	add	r0, r6, #0
	mov	r1, #0x1
	bl	StartBackgroundFadeIn
	mov	r0, #0x2
	mov	r1, #0xd
	mov	r2, #0x1b
	mov	r3, #0x12
	bl	MenuDrawTextWindow
	ldr	r4, .L388+0x8
	ldr	r1, .L388+0xc
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	add	r0, r4, #0
	mov	r1, #0x3
	mov	r2, #0xe
	bl	MenuPrintMessage
	ldr	r0, .L388+0x10
	str	r0, [r7]
.L387:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L389:
	.align	2, 0
.L388:
	.word	gTasks
	.word	gSprites
	.word	gStringVar4
	.word	gBirchSpeech_AhOkayYouArePlayer
	.word	Task_NewGameSpeech28
.Lfe49:
	.size	 Task_NewGameSpeech27,.Lfe49-Task_NewGameSpeech27
	.align	2, 0
	.type	 Task_NewGameSpeech28,function
	.thumb_func
Task_NewGameSpeech28:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r1, .L393
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r4, r0, r1
	mov	r1, #0x12
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	beq	.L391	@cond_branch
	ldr	r7, .L393+0x4
	mov	r1, #0x18
	ldrsh	r0, [r4, r1]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r7
	ldrb	r2, [r1, #0x1]
	mov	r6, #0xd
	neg	r6, r6
	add	r0, r6, #0
	and	r0, r0, r2
	strb	r0, [r1, #0x1]
	mov	r1, #0x1a
	ldrsh	r0, [r4, r1]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r7
	ldrb	r2, [r1, #0x1]
	add	r0, r6, #0
	and	r0, r0, r2
	strb	r0, [r1, #0x1]
	mov	r0, #0x18
	bl	MenuUpdateWindowText_OverrideLineLength
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L391	@cond_branch
	mov	r0, #0x18
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r7
	ldrb	r2, [r0, #0x1]
	add	r1, r6, #0
	and	r1, r1, r2
	mov	r3, #0x4
	orr	r1, r1, r3
	strb	r1, [r0, #0x1]
	mov	r1, #0x1a
	ldrsh	r0, [r4, r1]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r7
	ldrb	r2, [r1, #0x1]
	add	r0, r6, #0
	and	r0, r0, r2
	orr	r0, r0, r3
	strb	r0, [r1, #0x1]
	add	r0, r5, #0
	mov	r1, #0x2
	bl	StartSpriteFadeOut
	add	r0, r5, #0
	mov	r1, #0x1
	bl	StartBackgroundFadeOut
	mov	r0, #0x40
	strh	r0, [r4, #0x16]
	ldr	r0, .L393+0x8
	str	r0, [r4]
.L391:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L394:
	.align	2, 0
.L393:
	.word	gTasks
	.word	gSprites
	.word	Task_NewGameSpeech29
.Lfe50:
	.size	 Task_NewGameSpeech28,.Lfe50-Task_NewGameSpeech28
	.align	2, 0
	.type	 Task_NewGameSpeech29,function
	.thumb_func
Task_NewGameSpeech29:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r1, .L401
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	add	r4, r0, r1
	mov	r2, #0x12
	ldrsh	r0, [r4, r2]
	add	r7, r1, #0
	cmp	r0, #0
	beq	.L396	@cond_branch
	ldr	r2, .L401+0x4
	mov	r3, #0x18
	ldrsh	r1, [r4, r3]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r3, #0x4
	orr	r1, r1, r3
	strb	r1, [r0]
	mov	r0, #0x1a
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	orr	r1, r1, r3
	strb	r1, [r0]
	ldrh	r1, [r4, #0x16]
	mov	r3, #0x16
	ldrsh	r0, [r4, r3]
	cmp	r0, #0
	beq	.L397	@cond_branch
	sub	r0, r1, #0x1
	strh	r0, [r4, #0x16]
	b	.L396
.L402:
	.align	2, 0
.L401:
	.word	gTasks
	.word	gSprites
.L397:
	ldr	r0, .L403
	ldrb	r0, [r0, #0x8]
	cmp	r0, #0
	beq	.L399	@cond_branch
	ldrb	r5, [r4, #0x1e]
	b	.L400
.L404:
	.align	2, 0
.L403:
	.word	gSaveBlock2
.L399:
	ldrb	r5, [r4, #0x1c]
.L400:
	lsl	r1, r5, #0x4
	add	r1, r1, r5
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	mov	r0, #0x78
	strh	r0, [r1, #0x20]
	mov	r0, #0x3c
	strh	r0, [r1, #0x22]
	add	r3, r1, #0
	add	r3, r3, #0x3e
	ldrb	r2, [r3]
	sub	r0, r0, #0x41
	and	r0, r0, r2
	strb	r0, [r3]
	ldrb	r2, [r1, #0x1]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r2
	mov	r2, #0x4
	orr	r0, r0, r2
	strb	r0, [r1, #0x1]
	lsl	r4, r6, #0x2
	add	r4, r4, r6
	lsl	r4, r4, #0x3
	add	r4, r4, r7
	strh	r5, [r4, #0xc]
	add	r0, r6, #0
	mov	r1, #0x2
	bl	StartSpriteFadeIn
	add	r0, r6, #0
	mov	r1, #0x1
	bl	StartBackgroundFadeIn
	mov	r0, #0x2
	mov	r1, #0xd
	mov	r2, #0x1b
	mov	r3, #0x12
	bl	MenuDrawTextWindow
	ldr	r0, .L405
	mov	r1, #0x3
	mov	r2, #0xe
	bl	MenuPrintMessage
	ldr	r0, .L405+0x4
	str	r0, [r4]
.L396:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L406:
	.align	2, 0
.L405:
	.word	gBirchSpeech_AreYouReady
	.word	Task_NewGameSpeech30
.Lfe51:
	.size	 Task_NewGameSpeech29,.Lfe51-Task_NewGameSpeech29
	.align	2, 0
	.type	 Task_NewGameSpeech30,function
	.thumb_func
Task_NewGameSpeech30:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #0xfffffffc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L410
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r6, r1, r2
	mov	r1, #0x12
	ldrsh	r0, [r6, r1]
	cmp	r0, #0
	beq	.L408	@cond_branch
	ldr	r7, .L410+0x4
	mov	r1, #0xc
	ldrsh	r0, [r6, r1]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r7
	ldrb	r2, [r1, #0x1]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r1, #0x1]
	mov	r0, #0x18
	bl	MenuUpdateWindowText_OverrideLineLength
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L408	@cond_branch
	ldrb	r0, [r6, #0xc]
	lsl	r4, r0, #0x4
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	add	r5, r4, r7
	ldrb	r1, [r5, #0x1]
	mov	r0, #0x4
	neg	r0, r0
	and	r0, r0, r1
	mov	r1, #0x1
	orr	r0, r0, r1
	strb	r0, [r5, #0x1]
	add	r0, r7, #0
	add	r0, r0, #0x10
	add	r0, r4, r0
	ldr	r1, .L410+0x8
	str	r1, [r0]
	add	r0, r5, #0
	bl	InitSpriteAffineAnim
	add	r0, r5, #0
	mov	r1, #0x0
	bl	StartSpriteAffineAnim
	add	r0, r7, #0
	add	r0, r0, #0x1c
	add	r4, r4, r0
	ldr	r0, .L410+0xc
	str	r0, [r4]
	ldr	r0, .L410+0x10
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	mov	r0, #0x4
	bl	FadeOutBGM
	ldr	r0, .L410+0x14
	str	r0, [r6]
.L408:
	add	sp, sp, #0x4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L411:
	.align	2, 0
.L410:
	.word	gTasks
	.word	gSprites
	.word	gSpriteAffineAnimTable_81E79AC
	.word	ShrinkPlayerSprite
	.word	0xffff
	.word	Task_NewGameSpeech31
.Lfe52:
	.size	 Task_NewGameSpeech30,.Lfe52-Task_NewGameSpeech30
	.align	2, 0
	.type	 Task_NewGameSpeech31,function
	.thumb_func
Task_NewGameSpeech31:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L414
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r3, r1, r2
	ldrb	r1, [r3, #0xc]
	ldr	r2, .L414+0x4
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	add	r0, r0, #0x3f
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1a
	cmp	r0, #0
	bge	.L413	@cond_branch
	ldr	r0, .L414+0x8
	str	r0, [r3]
.L413:
	pop	{r0}
	bx	r0
.L415:
	.align	2, 0
.L414:
	.word	gTasks
	.word	gSprites
	.word	Task_NewGameSpeech32
.Lfe53:
	.size	 Task_NewGameSpeech31,.Lfe53-Task_NewGameSpeech31
	.align	2, 0
	.type	 Task_NewGameSpeech32,function
	.thumb_func
Task_NewGameSpeech32:
	push	{r4, lr}
	add	sp, sp, #0xfffffffc
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r0, .L418
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L417	@cond_branch
	ldr	r0, .L418+0x4
	lsl	r4, r2, #0x2
	add	r4, r4, r2
	lsl	r4, r4, #0x3
	add	r4, r4, r0
	ldrb	r2, [r4, #0xc]
	ldr	r1, .L418+0x8
	lsl	r0, r2, #0x4
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r1, r1, #0x1c
	add	r0, r0, r1
	ldr	r1, .L418+0xc
	str	r1, [r0]
	mov	r1, #0x80
	lsl	r1, r1, #0x13
	mov	r2, #0x82
	lsl	r2, r2, #0x5
	add	r0, r2, #0
	strh	r0, [r1]
	ldr	r0, .L418+0x10
	ldr	r1, .L418+0x14
	str	r1, [sp]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r0, .L418+0x18
	str	r0, [r4]
.L417:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L419:
	.align	2, 0
.L418:
	.word	gPaletteFade
	.word	gTasks
	.word	gSprites
	.word	nullsub_34
	.word	0xffff0000
	.word	0xffff
	.word	Task_NewGameSpeech33
.Lfe54:
	.size	 Task_NewGameSpeech32,.Lfe54-Task_NewGameSpeech32
	.align	2, 0
	.type	 Task_NewGameSpeech33,function
	.thumb_func
Task_NewGameSpeech33:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L422
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L421	@cond_branch
	ldr	r0, .L422+0x4
	bl	SetMainCallback2
	add	r0, r4, #0
	bl	DestroyTask
.L421:
	pop	{r4}
	pop	{r0}
	bx	r0
.L423:
	.align	2, 0
.L422:
	.word	gPaletteFade
	.word	CB2_NewGame
.Lfe55:
	.size	 Task_NewGameSpeech33,.Lfe55-Task_NewGameSpeech33
	.align	2, 0
	.type	 CB_ContinueNewGameSpeechPart2,function
	.thumb_func
CB_ContinueNewGameSpeechPart2:
	push	{r4, r5, lr}
	add	sp, sp, #0xfffffff4
	mov	r0, #0x0
	bl	SetVBlankCallback
	mov	r0, #0x80
	lsl	r0, r0, #0x13
	mov	r4, #0x0
	strh	r4, [r0]
	add	r0, r0, #0xc
	strh	r4, [r0]
	sub	r0, r0, #0x2
	strh	r4, [r0]
	sub	r0, r0, #0x2
	strh	r4, [r0]
	add	r0, r0, #0x10
	strh	r4, [r0]
	add	r0, r0, #0x2
	strh	r4, [r0]
	sub	r0, r0, #0x6
	strh	r4, [r0]
	add	r0, r0, #0x2
	strh	r4, [r0]
	sub	r0, r0, #0x6
	strh	r4, [r0]
	add	r0, r0, #0x2
	strh	r4, [r0]
	add	r0, sp, #0x4
	strh	r4, [r0]
	ldr	r1, .L427
	str	r0, [r1]
	mov	r4, #0xc0
	lsl	r4, r4, #0x13
	str	r4, [r1, #0x4]
	ldr	r0, .L427+0x4
	str	r0, [r1, #0x8]
	ldr	r0, [r1, #0x8]
	mov	r2, #0x0
	str	r2, [sp, #0x8]
	add	r0, sp, #0x8
	str	r0, [r1]
	mov	r0, #0xe0
	lsl	r0, r0, #0x13
	str	r0, [r1, #0x4]
	ldr	r0, .L427+0x8
	str	r0, [r1, #0x8]
	ldr	r0, [r1, #0x8]
	add	r0, sp, #0x4
	strh	r2, [r0]
	str	r0, [r1]
	mov	r0, #0xa0
	lsl	r0, r0, #0x13
	str	r0, [r1, #0x4]
	ldr	r0, .L427+0xc
	str	r0, [r1, #0x8]
	ldr	r0, [r1, #0x8]
	bl	ResetPaletteFade
	ldr	r0, .L427+0x10
	add	r1, r4, #0
	bl	LZ77UnCompVram
	ldr	r0, .L427+0x14
	ldr	r1, .L427+0x18
	bl	LZ77UnCompVram
	ldr	r0, .L427+0x1c
	mov	r1, #0x0
	mov	r2, #0x40
	bl	LoadPalette
	bl	ResetTasks
	ldr	r0, .L427+0x20
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r1, .L427+0x24
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r4, r0, r1
	ldr	r0, .L427+0x28
	strh	r0, [r4, #0x10]
	bl	remove_some_task
	bl	ResetSpriteData
	bl	FreeAllSpritePalettes
	add	r0, r5, #0
	bl	AddBirchSpeechObjects
	ldr	r0, .L427+0x2c
	bl	SetUpWindowConfig
	ldr	r0, .L427+0x30
	bl	InitMenuWindow
	ldr	r0, .L427+0x34
	ldrb	r0, [r0, #0x8]
	cmp	r0, #0
	beq	.L425	@cond_branch
	mov	r0, #0x1
	strh	r0, [r4, #0x14]
	ldrb	r3, [r4, #0x1e]
	b	.L426
.L428:
	.align	2, 0
.L427:
	.word	0x40000d4
	.word	0x8100c000
	.word	0x85000100
	.word	0x81000200
	.word	gBirchIntroShadowGfx
	.word	gUnknown_081E7834
	.word	0x6003800
	.word	gUnknown_081E764C
	.word	Task_NewGameSpeech23
	.word	gTasks
	.word	0xffc4
	.word	gWindowConfig_81E6C3C
	.word	gWindowConfig_81E6CE4
	.word	gSaveBlock2
.L425:
	strh	r0, [r4, #0x14]
	ldrb	r3, [r4, #0x1c]
.L426:
	ldr	r0, .L429
	lsl	r1, r3, #0x4
	add	r1, r1, r3
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	mov	r4, #0x0
	mov	r0, #0xb4
	strh	r0, [r1, #0x20]
	mov	r0, #0x3c
	strh	r0, [r1, #0x22]
	add	r1, r1, #0x3e
	ldrb	r2, [r1]
	sub	r0, r0, #0x41
	and	r0, r0, r2
	strb	r0, [r1]
	ldr	r1, .L429+0x4
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	strh	r3, [r0, #0xc]
	ldr	r1, .L429+0x8
	ldr	r2, .L429+0xc
	add	r0, r2, #0
	strh	r0, [r1]
	mov	r0, #0x1
	neg	r0, r0
	str	r4, [sp]
	mov	r1, #0x0
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	ldr	r0, .L429+0x10
	strh	r4, [r0]
	add	r0, r0, #0x4
	strh	r4, [r0]
	add	r0, r0, #0x4
	strh	r4, [r0]
	add	r0, r0, #0x2
	strh	r4, [r0]
	add	r0, r0, #0x6
	strh	r4, [r0]
	add	r0, r0, #0x2
	strh	r4, [r0]
	add	r0, r0, #0x2
	strh	r4, [r0]
	ldr	r3, .L429+0x14
	ldrh	r2, [r3]
	strh	r4, [r3]
	ldr	r4, .L429+0x18
	ldrh	r0, [r4]
	mov	r1, #0x1
	orr	r0, r0, r1
	strh	r0, [r4]
	strh	r2, [r3]
	ldr	r0, .L429+0x1c
	bl	SetVBlankCallback
	ldr	r0, .L429+0x20
	bl	SetMainCallback2
	ldr	r1, .L429+0x24
	ldr	r2, .L429+0x28
	add	r0, r2, #0
	strh	r0, [r1]
	sub	r1, r1, #0xa
	mov	r2, #0x9a
	lsl	r2, r2, #0x5
	add	r0, r2, #0
	strh	r0, [r1]
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L430:
	.align	2, 0
.L429:
	.word	gSprites
	.word	gTasks
	.word	0x4000014
	.word	0xffc4
	.word	0x4000040
	.word	0x4000208
	.word	0x4000200
	.word	VBlankCB_MainMenu
	.word	CB2_MainMenu
	.word	0x400000a
	.word	0x703
.Lfe56:
	.size	 CB_ContinueNewGameSpeechPart2,.Lfe56-CB_ContinueNewGameSpeechPart2
	.align	2, 0
	.type	 nullsub_34,function
	.thumb_func
nullsub_34:
	bx	lr
.Lfe57:
	.size	 nullsub_34,.Lfe57-nullsub_34
	.align	2, 0
	.type	 ShrinkPlayerSprite,function
	.thumb_func
ShrinkPlayerSprite:
	mov	r2, #0x22
	ldrsh	r1, [r0, r2]
	lsl	r1, r1, #0x10
	mov	r3, #0x2e
	ldrsh	r2, [r0, r3]
	add	r1, r1, r2
	mov	r2, #0xc0
	lsl	r2, r2, #0x8
	add	r1, r1, r2
	lsr	r2, r1, #0x10
	strh	r2, [r0, #0x22]
	strh	r1, [r0, #0x2e]
	bx	lr
.Lfe58:
	.size	 ShrinkPlayerSprite,.Lfe58-ShrinkPlayerSprite
	.align	2, 0
	.type	 CreateAzurillSprite,function
	.thumb_func
CreateAzurillSprite:
	push	{r4, r5, r6, lr}
	add	sp, sp, #0xfffffff8
	add	r5, r0, #0
	add	r6, r1, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	lsl	r6, r6, #0x18
	lsr	r6, r6, #0x18
	ldr	r0, .L434
	ldr	r2, .L434+0x4
	mov	r3, #0xaf
	lsl	r3, r3, #0x3
	add	r1, r2, r3
	ldrb	r1, [r1]
	add	r3, r3, #0x1
	add	r2, r2, r3
	ldrb	r2, [r2]
	ldr	r4, .L434+0x8
	ldr	r3, [r4]
	ldr	r4, [r4, #0x4]
	str	r4, [sp]
	mov	r4, #0xaf
	lsl	r4, r4, #0x1
	str	r4, [sp, #0x4]
	bl	DecompressPicFromTable_2
	ldr	r0, .L434+0xc
	bl	LoadCompressedObjectPalette
	add	r0, r4, #0
	mov	r1, #0x1
	bl	GetMonSpriteTemplate_803C56C
	ldr	r0, .L434+0x10
	add	r1, r5, #0
	add	r2, r6, #0
	mov	r3, #0x0
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	sp, sp, #0x8
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L435:
	.align	2, 0
.L434:
	.word	gMonFrontPicTable+0xaf0
	.word	gMonFrontPicCoords
	.word	gUnknown_081FAF4C
	.word	gMonPaletteTable+0xaf0
	.word	gUnknown_02024E8C
.Lfe59:
	.size	 CreateAzurillSprite,.Lfe59-CreateAzurillSprite
	.align	2, 0
	.type	 AddBirchSpeechObjects,function
	.thumb_func
AddBirchSpeechObjects:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #0xfffffffc
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x88
	mov	r1, #0x3c
	mov	r2, #0x1
	bl	CreateBirchSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L437
	mov	r9, r1
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	mov	r3, #0x1c
	add	r3, r3, r9
	mov	r8, r3
	add	r1, r2, r3
	ldr	r7, .L437+0x4
	str	r7, [r1]
	add	r2, r2, r9
	ldrb	r3, [r2, #0x5]
	mov	r6, #0xd
	neg	r6, r6
	add	r1, r6, #0
	and	r1, r1, r3
	strb	r1, [r2, #0x5]
	add	r2, r2, #0x3e
	ldrb	r1, [r2]
	mov	r3, #0x4
	mov	sl, r3
	mov	r3, sl
	orr	r1, r1, r3
	strb	r1, [r2]
	ldr	r1, .L437+0x8
	lsl	r5, r4, #0x2
	add	r5, r5, r4
	lsl	r5, r5, #0x3
	add	r5, r5, r1
	strh	r0, [r5, #0x18]
	mov	r0, #0x68
	mov	r1, #0x48
	bl	CreateAzurillSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	mov	r4, r8
	add	r1, r2, r4
	str	r7, [r1]
	add	r2, r2, r9
	ldrb	r3, [r2, #0x5]
	add	r1, r6, #0
	and	r1, r1, r3
	strb	r1, [r2, #0x5]
	add	r2, r2, #0x3e
	ldrb	r1, [r2]
	mov	r3, sl
	orr	r1, r1, r3
	strb	r1, [r2]
	strh	r0, [r5, #0x1a]
	ldr	r4, .L437+0xc
	str	r4, [sp]
	mov	r0, #0x0
	mov	r1, #0x78
	mov	r2, #0x3c
	mov	r3, #0x0
	bl	CreateTrainerSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	mov	r3, r8
	add	r1, r2, r3
	str	r7, [r1]
	add	r2, r2, r9
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r1, [r3]
	mov	r4, sl
	orr	r1, r1, r4
	strb	r1, [r3]
	ldrb	r3, [r2, #0x5]
	add	r1, r6, #0
	and	r1, r1, r3
	strb	r1, [r2, #0x5]
	strh	r0, [r5, #0x1c]
	ldr	r0, .L437+0xc
	mov	r1, #0x80
	lsl	r1, r1, #0x4
	add	r4, r0, r1
	str	r4, [sp]
	mov	r0, #0x1
	mov	r1, #0x78
	mov	r2, #0x3c
	mov	r3, #0x0
	bl	CreateTrainerSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	add	r8, r8, r2
	mov	r3, r8
	str	r7, [r3]
	add	r2, r2, r9
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r1, [r3]
	mov	r4, sl
	orr	r1, r1, r4
	strb	r1, [r3]
	ldrb	r1, [r2, #0x5]
	and	r6, r6, r1
	strb	r6, [r2, #0x5]
	strh	r0, [r5, #0x1e]
	add	sp, sp, #0x4
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L438:
	.align	2, 0
.L437:
	.word	gSprites
	.word	nullsub_34
	.word	gTasks
	.word	gSharedMem
.Lfe60:
	.size	 AddBirchSpeechObjects,.Lfe60-AddBirchSpeechObjects
	.align	2, 0
	.type	 Task_SpriteFadeOut,function
	.thumb_func
Task_SpriteFadeOut:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r4, .L444
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x3
	add	r3, r0, r4
	ldrh	r1, [r3, #0xa]
	mov	r5, #0xa
	ldrsh	r0, [r3, r5]
	cmp	r0, #0
	bne	.L440	@cond_branch
	mov	r1, #0x8
	ldrsh	r0, [r3, r1]
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r4
	mov	r0, #0x1
	strh	r0, [r1, #0x12]
	add	r0, r2, #0
	bl	DestroyTask
	b	.L441
.L445:
	.align	2, 0
.L444:
	.word	gTasks
.L440:
	ldrh	r2, [r3, #0x10]
	mov	r4, #0x10
	ldrsh	r0, [r3, r4]
	cmp	r0, #0
	beq	.L442	@cond_branch
	sub	r0, r2, #0x1
	strh	r0, [r3, #0x10]
	b	.L441
.L442:
	ldrh	r0, [r3, #0xe]
	strh	r0, [r3, #0x10]
	sub	r1, r1, #0x1
	strh	r1, [r3, #0xa]
	ldrh	r0, [r3, #0xc]
	add	r0, r0, #0x1
	strh	r0, [r3, #0xc]
	ldr	r2, .L446
	mov	r5, #0xc
	ldrsh	r0, [r3, r5]
	lsl	r0, r0, #0x8
	add	r1, r1, r0
	strh	r1, [r2]
.L441:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L447:
	.align	2, 0
.L446:
	.word	0x4000052
.Lfe61:
	.size	 Task_SpriteFadeOut,.Lfe61-Task_SpriteFadeOut
	.align	2, 0
	.type	 StartSpriteFadeOut,function
	.thumb_func
StartSpriteFadeOut:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	r4, r0, #0
	add	r5, r1, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	ldr	r1, .L449
	mov	r2, #0x94
	lsl	r2, r2, #0x2
	add	r0, r2, #0
	strh	r0, [r1]
	add	r1, r1, #0x2
	mov	r0, #0x10
	strh	r0, [r1]
	add	r1, r1, #0x2
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L449+0x4
	mov	r8, r0
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r8
	mov	r6, #0x0
	strh	r6, [r0, #0x12]
	ldr	r0, .L449+0x8
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r8
	strh	r4, [r1, #0x8]
	mov	r0, #0x10
	strh	r0, [r1, #0xa]
	strh	r6, [r1, #0xc]
	strh	r5, [r1, #0xe]
	strh	r5, [r1, #0x10]
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L450:
	.align	2, 0
.L449:
	.word	0x4000050
	.word	gTasks
	.word	Task_SpriteFadeOut
.Lfe62:
	.size	 StartSpriteFadeOut,.Lfe62-StartSpriteFadeOut
	.align	2, 0
	.type	 Task_SpriteFadeIn,function
	.thumb_func
Task_SpriteFadeIn:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r4, .L456
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x3
	add	r3, r0, r4
	ldrh	r1, [r3, #0xa]
	mov	r5, #0xa
	ldrsh	r0, [r3, r5]
	cmp	r0, #0x10
	bne	.L452	@cond_branch
	mov	r1, #0x8
	ldrsh	r0, [r3, r1]
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r4
	mov	r0, #0x1
	strh	r0, [r1, #0x12]
	add	r0, r2, #0
	bl	DestroyTask
	b	.L453
.L457:
	.align	2, 0
.L456:
	.word	gTasks
.L452:
	ldrh	r2, [r3, #0x10]
	mov	r4, #0x10
	ldrsh	r0, [r3, r4]
	cmp	r0, #0
	beq	.L454	@cond_branch
	sub	r0, r2, #0x1
	strh	r0, [r3, #0x10]
	b	.L453
.L454:
	ldrh	r0, [r3, #0xe]
	strh	r0, [r3, #0x10]
	add	r1, r1, #0x1
	strh	r1, [r3, #0xa]
	ldrh	r0, [r3, #0xc]
	sub	r0, r0, #0x1
	strh	r0, [r3, #0xc]
	ldr	r2, .L458
	mov	r5, #0xc
	ldrsh	r0, [r3, r5]
	lsl	r0, r0, #0x8
	add	r1, r1, r0
	strh	r1, [r2]
.L453:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L459:
	.align	2, 0
.L458:
	.word	0x4000052
.Lfe63:
	.size	 Task_SpriteFadeIn,.Lfe63-Task_SpriteFadeIn
	.align	2, 0
	.type	 StartSpriteFadeIn,function
	.thumb_func
StartSpriteFadeIn:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	r4, r0, #0
	add	r5, r1, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	ldr	r1, .L461
	mov	r2, #0x94
	lsl	r2, r2, #0x2
	add	r0, r2, #0
	strh	r0, [r1]
	add	r1, r1, #0x2
	mov	r2, #0x80
	lsl	r2, r2, #0x5
	add	r0, r2, #0
	strh	r0, [r1]
	add	r1, r1, #0x2
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L461+0x4
	mov	r8, r0
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r8
	mov	r6, #0x0
	strh	r6, [r0, #0x12]
	ldr	r0, .L461+0x8
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r8
	strh	r4, [r1, #0x8]
	strh	r6, [r1, #0xa]
	mov	r0, #0x10
	strh	r0, [r1, #0xc]
	strh	r5, [r1, #0xe]
	strh	r5, [r1, #0x10]
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L462:
	.align	2, 0
.L461:
	.word	0x4000050
	.word	gTasks
	.word	Task_SpriteFadeIn
.Lfe64:
	.size	 StartSpriteFadeIn,.Lfe64-StartSpriteFadeIn
	.align	2, 0
	.type	 HandleFloorShadowFadeOut,function
	.thumb_func
HandleFloorShadowFadeOut:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r1, .L470
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x3
	add	r1, r0, r1
	ldrh	r3, [r1, #0xc]
	mov	r4, #0xc
	ldrsh	r0, [r1, r4]
	cmp	r0, #0
	beq	.L464	@cond_branch
	sub	r0, r3, #0x1
	strh	r0, [r1, #0xc]
	b	.L465
.L471:
	.align	2, 0
.L470:
	.word	gTasks
.L464:
	ldrh	r3, [r1, #0xa]
	mov	r4, #0xa
	ldrsh	r0, [r1, r4]
	cmp	r0, #0x8
	bne	.L466	@cond_branch
	add	r0, r2, #0
	bl	DestroyTask
	b	.L465
.L466:
	ldrh	r2, [r1, #0x10]
	mov	r4, #0x10
	ldrsh	r0, [r1, r4]
	cmp	r0, #0
	beq	.L468	@cond_branch
	sub	r0, r2, #0x1
	strh	r0, [r1, #0x10]
	b	.L465
.L468:
	ldrh	r0, [r1, #0xe]
	strh	r0, [r1, #0x10]
	add	r0, r3, #0x1
	strh	r0, [r1, #0xa]
	mov	r2, #0xa
	ldrsh	r0, [r1, r2]
	lsl	r0, r0, #0x1
	ldr	r1, .L472
	add	r0, r0, r1
	mov	r1, #0x1
	mov	r2, #0x10
	bl	LoadPalette
.L465:
	pop	{r4}
	pop	{r0}
	bx	r0
.L473:
	.align	2, 0
.L472:
	.word	gUnknown_081E795C
.Lfe65:
	.size	 HandleFloorShadowFadeOut,.Lfe65-HandleFloorShadowFadeOut
	.align	2, 0
	.type	 StartBackgroundFadeOut,function
	.thumb_func
StartBackgroundFadeOut:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	ldr	r0, .L475
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L475+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	mov	r0, #0x0
	strh	r4, [r1, #0x8]
	strh	r0, [r1, #0xa]
	mov	r0, #0x8
	strh	r0, [r1, #0xc]
	strh	r5, [r1, #0xe]
	strh	r5, [r1, #0x10]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L476:
	.align	2, 0
.L475:
	.word	HandleFloorShadowFadeOut
	.word	gTasks
.Lfe66:
	.size	 StartBackgroundFadeOut,.Lfe66-StartBackgroundFadeOut
	.align	2, 0
	.type	 HandleFloorShadowFadeIn,function
	.thumb_func
HandleFloorShadowFadeIn:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r1, .L484
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x3
	add	r1, r0, r1
	ldrh	r3, [r1, #0xc]
	mov	r4, #0xc
	ldrsh	r0, [r1, r4]
	cmp	r0, #0
	beq	.L478	@cond_branch
	sub	r0, r3, #0x1
	strh	r0, [r1, #0xc]
	b	.L479
.L485:
	.align	2, 0
.L484:
	.word	gTasks
.L478:
	ldrh	r3, [r1, #0xa]
	mov	r4, #0xa
	ldrsh	r0, [r1, r4]
	cmp	r0, #0
	bne	.L480	@cond_branch
	add	r0, r2, #0
	bl	DestroyTask
	b	.L479
.L480:
	ldrh	r2, [r1, #0x10]
	mov	r4, #0x10
	ldrsh	r0, [r1, r4]
	cmp	r0, #0
	beq	.L482	@cond_branch
	sub	r0, r2, #0x1
	strh	r0, [r1, #0x10]
	b	.L479
.L482:
	ldrh	r0, [r1, #0xe]
	strh	r0, [r1, #0x10]
	sub	r0, r3, #0x1
	strh	r0, [r1, #0xa]
	mov	r2, #0xa
	ldrsh	r0, [r1, r2]
	lsl	r0, r0, #0x1
	ldr	r1, .L486
	add	r0, r0, r1
	mov	r1, #0x1
	mov	r2, #0x10
	bl	LoadPalette
.L479:
	pop	{r4}
	pop	{r0}
	bx	r0
.L487:
	.align	2, 0
.L486:
	.word	gUnknown_081E795C
.Lfe67:
	.size	 HandleFloorShadowFadeIn,.Lfe67-HandleFloorShadowFadeIn
	.align	2, 0
	.type	 StartBackgroundFadeIn,function
	.thumb_func
StartBackgroundFadeIn:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	ldr	r0, .L489
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L489+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	strh	r4, [r1, #0x8]
	mov	r0, #0x8
	strh	r0, [r1, #0xa]
	strh	r0, [r1, #0xc]
	strh	r5, [r1, #0xe]
	strh	r5, [r1, #0x10]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L490:
	.align	2, 0
.L489:
	.word	HandleFloorShadowFadeIn
	.word	gTasks
.Lfe68:
	.size	 StartBackgroundFadeIn,.Lfe68-StartBackgroundFadeIn
	.align	2, 0
	.type	 CreateGenderMenu,function
	.thumb_func
CreateGenderMenu:
	push	{r4, r5, lr}
	add	sp, sp, #0xfffffff8
	add	r2, r0, #0
	add	r3, r1, #0
	lsl	r2, r2, #0x18
	lsl	r3, r3, #0x18
	lsr	r5, r2, #0x18
	mov	r0, #0xc0
	lsl	r0, r0, #0x13
	add	r2, r2, r0
	lsr	r2, r2, #0x18
	lsr	r4, r3, #0x18
	mov	r0, #0xa0
	lsl	r0, r0, #0x13
	add	r3, r3, r0
	lsr	r3, r3, #0x18
	add	r0, r5, #0
	add	r1, r4, #0
	bl	MenuDrawTextWindow
	add	r5, r5, #0x1
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	add	r4, r4, #0x1
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r3, .L492
	add	r0, r5, #0
	add	r1, r4, #0
	mov	r2, #0x2
	bl	PrintMenuItems
	mov	r0, #0x0
	str	r0, [sp]
	mov	r0, #0x5
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	add	r1, r5, #0
	add	r2, r4, #0
	mov	r3, #0x2
	bl	InitMenu
	add	sp, sp, #0x8
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L493:
	.align	2, 0
.L492:
	.word	gUnknown_081E79B0
.Lfe69:
	.size	 CreateGenderMenu,.Lfe69-CreateGenderMenu
	.align	2, 0
	.type	 GenderMenuProcessInput,function
	.thumb_func
GenderMenuProcessInput:
	push	{lr}
	bl	ProcessMenuInputNoWrap
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.Lfe70:
	.size	 GenderMenuProcessInput,.Lfe70-GenderMenuProcessInput
	.align	2, 0
	.type	 CreateNameMenu,function
	.thumb_func
CreateNameMenu:
	push	{r4, r5, lr}
	add	sp, sp, #0xfffffff8
	add	r2, r0, #0
	add	r3, r1, #0
	lsl	r2, r2, #0x18
	lsl	r3, r3, #0x18
	lsr	r5, r2, #0x18
	mov	r0, #0xd0
	lsl	r0, r0, #0x14
	add	r2, r2, r0
	lsr	r2, r2, #0x18
	lsr	r4, r3, #0x18
	mov	r0, #0xb0
	lsl	r0, r0, #0x14
	add	r3, r3, r0
	lsr	r3, r3, #0x18
	add	r0, r5, #0
	add	r1, r4, #0
	bl	MenuDrawTextWindow
	ldr	r0, .L498
	ldrb	r0, [r0, #0x8]
	cmp	r0, #0
	bne	.L496	@cond_branch
	add	r5, r5, #0x1
	lsl	r0, r5, #0x18
	lsr	r0, r0, #0x18
	add	r4, r4, #0x1
	lsl	r1, r4, #0x18
	lsr	r1, r1, #0x18
	ldr	r3, .L498+0x4
	mov	r2, #0x5
	bl	PrintMenuItems
	b	.L497
.L499:
	.align	2, 0
.L498:
	.word	gSaveBlock2
	.word	gMalePresetNames
.L496:
	add	r5, r5, #0x1
	lsl	r0, r5, #0x18
	lsr	r0, r0, #0x18
	add	r4, r4, #0x1
	lsl	r1, r4, #0x18
	lsr	r1, r1, #0x18
	ldr	r3, .L500
	mov	r2, #0x5
	bl	PrintMenuItems
.L497:
	lsl	r1, r5, #0x18
	lsr	r1, r1, #0x18
	lsl	r2, r4, #0x18
	lsr	r2, r2, #0x18
	mov	r0, #0x0
	str	r0, [sp]
	mov	r0, #0x9
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	mov	r3, #0x5
	bl	InitMenu
	add	sp, sp, #0x8
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L501:
	.align	2, 0
.L500:
	.word	gFemalePresetNames
.Lfe71:
	.size	 CreateNameMenu,.Lfe71-CreateNameMenu
	.align	2, 0
	.type	 NameMenuProcessInput,function
	.thumb_func
NameMenuProcessInput:
	push	{lr}
	bl	ProcessMenuInput
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.Lfe72:
	.size	 NameMenuProcessInput,.Lfe72-NameMenuProcessInput
	.align	2, 0
	.type	 SetPresetPlayerName,function
	.thumb_func
SetPresetPlayerName:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r0, .L512
	ldrb	r1, [r0, #0x8]
	add	r5, r0, #0
	cmp	r1, #0
	bne	.L504	@cond_branch
	ldr	r1, .L512+0x4
	b	.L511
.L513:
	.align	2, 0
.L512:
	.word	gSaveBlock2
	.word	gMalePresetNames
.L504:
	ldr	r1, .L514
.L511:
	lsl	r0, r2, #0x3
	add	r0, r0, r1
	ldr	r3, [r0]
	mov	r2, #0x0
	ldr	r4, .L514+0x4
.L509:
	add	r1, r2, r4
	add	r0, r3, r2
	ldrb	r0, [r0]
	strb	r0, [r1]
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x6
	bls	.L509	@cond_branch
	add	r1, r2, r5
	mov	r0, #0xff
	strb	r0, [r1]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L515:
	.align	2, 0
.L514:
	.word	gFemalePresetNames
	.word	gSaveBlock2
.Lfe73:
	.size	 SetPresetPlayerName,.Lfe73-SetPresetPlayerName
.text
	.align	2, 0
