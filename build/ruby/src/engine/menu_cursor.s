@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.globl	gMenuCursorSubsprites
	.section ewram_data,"aw"
	.align	2, 0
	.type	 gMenuCursorSubsprites,object
	.size	 gMenuCursorSubsprites,80
gMenuCursorSubsprites:
	.short	0x0
	.space	6
	.space	72
	.globl	gUnknown_0203A3D0
	.type	 gUnknown_0203A3D0,object
	.size	 gUnknown_0203A3D0,1
gUnknown_0203A3D0:
	.byte	0x0
	.globl	gUnknown_0203A3D1
	.type	 gUnknown_0203A3D1,object
	.size	 gUnknown_0203A3D1,1
gUnknown_0203A3D1:
	.byte	0x0
	.globl	gUnknown_0203A3D2
	.type	 gUnknown_0203A3D2,object
	.size	 gUnknown_0203A3D2,1
gUnknown_0203A3D2:
	.byte	0x0
	.globl	gUnknown_0203A3D3
	.type	 gUnknown_0203A3D3,object
	.size	 gUnknown_0203A3D3,1
gUnknown_0203A3D3:
	.byte	0x0
	.globl	gUnknown_0203A3D4
	.type	 gUnknown_0203A3D4,object
	.size	 gUnknown_0203A3D4,1
gUnknown_0203A3D4:
	.byte	0x0
.text
	.align	2, 0
	.globl	sub_814A590
	.type	 sub_814A590,function
	.thumb_func
sub_814A590:
	ldr	r0, .L3
	mov	r1, #0x40
	strb	r1, [r0]
	ldr	r0, .L3+0x4
	strb	r1, [r0]
	ldr	r0, .L3+0x8
	strb	r1, [r0]
	ldr	r0, .L3+0xc
	mov	r1, #0x0
	strb	r1, [r0]
	ldr	r0, .L3+0x10
	strb	r1, [r0]
	bx	lr
.L4:
	.align	2, 0
.L3:
	.word	gUnknown_0203A3D0
	.word	gUnknown_0203A3D1
	.word	gUnknown_0203A3D2
	.word	gUnknown_0203A3D3
	.word	gUnknown_0203A3D4
.Lfe1:
	.size	 sub_814A590,.Lfe1-sub_814A590
	.align	2, 0
	.globl	sub_814A5C0
	.type	 sub_814A5C0,function
	.thumb_func
sub_814A5C0:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	ldr	r4, [sp, #0x1c]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	lsl	r1, r1, #0x10
	lsr	r6, r1, #0x10
	lsl	r2, r2, #0x18
	lsr	r5, r2, #0x18
	lsl	r3, r3, #0x10
	lsr	r7, r3, #0x10
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r9, r4
	ldr	r0, .L17
	ldrb	r0, [r0]
	cmp	r0, #0x40
	bne	.L7	@cond_branch
	ldr	r0, .L17+0x4
	ldrb	r0, [r0]
	cmp	r0, #0x40
	beq	.L6	@cond_branch
.L7:
	bl	DestroyMenuCursor
.L6:
	mov	r4, #0x1
	ldr	r0, .L17+0x8
	cmp	r6, r0
	bne	.L8	@cond_branch
	ldr	r1, .L17+0xc
	mov	r0, #0xf
	and	r0, r0, r5
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	strh	r7, [r0]
	ldr	r0, .L17+0x10
	bl	LoadSpritePalette
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xff
	beq	.L8	@cond_branch
	ldr	r6, .L17+0x14
	mov	r4, #0x0
.L8:
	mov	r7, #0xf
	add	r0, r5, #0
	and	r0, r0, r7
	lsl	r0, r0, #0x3
	ldr	r1, .L17+0x18
	add	r0, r0, r1
	bl	LoadSpriteSheetDeferred
	lsl	r0, r4, #0x1
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	ldr	r4, .L17+0x1c
	add	r0, r0, r4
	mov	r1, #0x0
	mov	r2, #0xa0
	mov	r3, r8
	bl	CreateSprite
	ldr	r5, .L17
	strb	r0, [r5]
	add	r4, r4, #0x30
	add	r0, r4, #0
	mov	r1, #0x0
	mov	r2, #0xa0
	mov	r3, r8
	bl	CreateSprite
	ldr	r1, .L17+0x4
	strb	r0, [r1]
	ldrb	r0, [r5]
	cmp	r0, #0x40
	beq	.L10	@cond_branch
	add	r1, r0, #0
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L17+0x20
	add	r4, r0, r1
	ldr	r0, .L17+0x8
	cmp	r6, r0
	bne	.L11	@cond_branch
	ldrb	r1, [r4, #0x5]
	add	r0, r7, #0
	and	r0, r0, r1
	strb	r0, [r4, #0x5]
	b	.L10
.L18:
	.align	2, 0
.L17:
	.word	gUnknown_0203A3D0
	.word	gUnknown_0203A3D1
	.word	0xffff
	.word	gUnknown_0203A360
	.word	gUnknown_0842F240
	.word	0xfff0
	.word	gUnknown_0842F140
	.word	gSpriteTemplate_842F250
	.word	gSprites
.L11:
	add	r0, r6, #0
	bl	IndexOfSpritePaletteTag
	lsl	r0, r0, #0x4
	ldrb	r2, [r4, #0x5]
	add	r1, r7, #0
	and	r1, r1, r2
	orr	r1, r1, r0
	strb	r1, [r4, #0x5]
.L10:
	ldr	r1, .L19
	ldrb	r0, [r1]
	cmp	r0, #0x40
	beq	.L13	@cond_branch
	add	r1, r0, #0
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L19+0x4
	add	r4, r0, r1
	ldr	r0, .L19+0x8
	cmp	r6, r0
	bne	.L14	@cond_branch
	ldrb	r1, [r4, #0x5]
	mov	r0, #0xf
	and	r0, r0, r1
	strb	r0, [r4, #0x5]
	b	.L15
.L20:
	.align	2, 0
.L19:
	.word	gUnknown_0203A3D1
	.word	gSprites
	.word	0xffff
.L14:
	add	r0, r6, #0
	bl	IndexOfSpritePaletteTag
	lsl	r0, r0, #0x4
	ldrb	r2, [r4, #0x5]
	mov	r1, #0xf
	and	r1, r1, r2
	orr	r1, r1, r0
	strb	r1, [r4, #0x5]
.L15:
	mov	r3, #0x80
	lsl	r3, r3, #0x13
	ldrh	r1, [r3]
	mov	r0, #0xc0
	lsl	r0, r0, #0x7
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L16	@cond_branch
	ldr	r0, .L21
	ldrb	r1, [r0]
	mov	r2, #0x1f
	orr	r1, r1, r2
	strb	r1, [r0]
.L16:
	ldr	r1, .L21+0x4
	ldrh	r0, [r3]
	lsr	r0, r0, #0xf
	strb	r0, [r1]
	ldr	r1, .L21+0x8
	ldr	r2, .L21+0xc
	ldrb	r0, [r2]
	strb	r0, [r1]
	ldrh	r0, [r3]
	mov	r4, #0x80
	lsl	r4, r4, #0x8
	add	r1, r4, #0
	orr	r0, r0, r1
	strh	r0, [r3]
	mov	r0, #0x10
	strb	r0, [r2]
.L13:
	mov	r0, r9
	bl	sub_814A958
	ldr	r0, .L21+0x10
	ldrb	r0, [r0]
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L22:
	.align	2, 0
.L21:
	.word	0x400004a
	.word	gUnknown_0203A3D3
	.word	gUnknown_0203A3D4
	.word	0x400004b
	.word	gUnknown_0203A3D0
.Lfe2:
	.size	 sub_814A5C0,.Lfe2-sub_814A5C0
	.align	2, 0
	.globl	sub_814A758
	.type	 sub_814A758,function
	.thumb_func
sub_814A758:
	push	{r4, r5, lr}
	add	sp, sp, #0xfffffffc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r5, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	str	r3, [sp]
	mov	r1, #0x0
	mov	r3, #0x0
	bl	sub_814A5C0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r4, r0, #0
	cmp	r4, #0x40
	beq	.L24	@cond_branch
	ldr	r0, .L25
	ldrb	r0, [r0]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L25+0x4
	add	r1, r1, r0
	lsl	r3, r5, #0x4
	ldrb	r2, [r1, #0x5]
	mov	r0, #0xf
	and	r0, r0, r2
	orr	r0, r0, r3
	strb	r0, [r1, #0x5]
.L24:
	add	r0, r4, #0
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L26:
	.align	2, 0
.L25:
	.word	gUnknown_0203A3D0
	.word	gSprites
.Lfe3:
	.size	 sub_814A758,.Lfe3-sub_814A758
	.align	2, 0
	.globl	unref_sub_814A7AC
	.type	 unref_sub_814A7AC,function
	.thumb_func
unref_sub_814A7AC:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	ip, r0
	lsl	r1, r1, #0x10
	lsr	r4, r1, #0x10
	lsl	r2, r2, #0x18
	lsr	r7, r2, #0x18
	mov	r3, #0x0
	mov	r2, #0xf
	mov	r1, #0x0
	ldr	r6, .L34
	mov	r5, #0xf
.L31:
	lsl	r0, r1, #0x1
	add	r0, r0, r6
	ldrh	r0, [r0]
	cmp	r0, r4
	bne	.L30	@cond_branch
	lsr	r0, r1, #0x4
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	add	r2, r1, #0
	and	r2, r2, r5
.L30:
	add	r0, r1, #0x1
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	cmp	r1, #0xff
	bls	.L31	@cond_branch
	mov	r0, ip
	add	r1, r3, #0
	add	r3, r7, #0
	bl	sub_814A758
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L35:
	.align	2, 0
.L34:
	.word	gPlttBufferUnfaded
.Lfe4:
	.size	 unref_sub_814A7AC,.Lfe4-unref_sub_814A7AC
	.align	2, 0
	.globl	DestroyMenuCursor
	.type	 DestroyMenuCursor,function
	.thumb_func
DestroyMenuCursor:
	push	{r4, lr}
	ldr	r4, .L40
	ldrb	r0, [r4]
	cmp	r0, #0x40
	beq	.L37	@cond_branch
	ldr	r0, .L40+0x4
	bl	LoadTilesForSpriteSheet
	ldrb	r1, [r4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L40+0x8
	add	r0, r0, r1
	bl	DestroySpriteAndFreeResources
	mov	r0, #0x40
	strb	r0, [r4]
.L37:
	ldr	r4, .L40+0xc
	ldrb	r0, [r4]
	cmp	r0, #0x40
	beq	.L36	@cond_branch
	add	r1, r0, #0
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L40+0x8
	add	r0, r0, r1
	bl	DestroySpriteAndFreeResources
	mov	r0, #0x40
	strb	r0, [r4]
	ldr	r0, .L40+0x10
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L39	@cond_branch
	mov	r2, #0x80
	lsl	r2, r2, #0x13
	ldrh	r1, [r2]
	ldr	r0, .L40+0x14
	and	r0, r0, r1
	strh	r0, [r2]
.L39:
	ldr	r0, .L40+0x18
	ldr	r1, .L40+0x1c
	ldrb	r1, [r1]
	strb	r1, [r0]
.L36:
	pop	{r4}
	pop	{r0}
	bx	r0
.L41:
	.align	2, 0
.L40:
	.word	gUnknown_0203A3D0
	.word	gUnknown_0842F140
	.word	gSprites
	.word	gUnknown_0203A3D1
	.word	gUnknown_0203A3D3
	.word	0x7fff
	.word	0x400004b
	.word	gUnknown_0203A3D4
.Lfe5:
	.size	 DestroyMenuCursor,.Lfe5-DestroyMenuCursor
	.align	2, 0
	.globl	sub_814A880
	.type	 sub_814A880,function
	.thumb_func
sub_814A880:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r7, r5, #0
	lsl	r1, r1, #0x18
	lsr	r4, r1, #0x18
	add	r6, r4, #0
	ldr	r1, .L45
	ldrb	r0, [r1]
	cmp	r0, #0x40
	beq	.L43	@cond_branch
	add	r1, r0, #0
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L45+0x4
	add	r2, r0, r1
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r1, [r3]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r3]
	add	r0, r2, #0
	add	r0, r0, #0x28
	mov	r1, #0x0
	strb	r1, [r0]
	add	r0, r0, #0x1
	strb	r1, [r0]
	strh	r5, [r2, #0x20]
	strh	r4, [r2, #0x22]
.L43:
	ldr	r1, .L45+0x8
	ldrb	r0, [r1]
	cmp	r0, #0x40
	beq	.L42	@cond_branch
	add	r1, r0, #0
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L45+0x4
	add	r2, r0, r1
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r1, [r3]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r3]
	add	r0, r2, #0
	add	r0, r0, #0x28
	mov	r1, #0x0
	strb	r1, [r0]
	add	r0, r0, #0x1
	strb	r1, [r0]
	strh	r7, [r2, #0x20]
	strh	r6, [r2, #0x22]
.L42:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L46:
	.align	2, 0
.L45:
	.word	gUnknown_0203A3D0
	.word	gSprites
	.word	gUnknown_0203A3D1
.Lfe6:
	.size	 sub_814A880,.Lfe6-sub_814A880
	.align	2, 0
	.globl	sub_814A904
	.type	 sub_814A904,function
	.thumb_func
sub_814A904:
	push	{lr}
	ldr	r1, .L50
	ldrb	r0, [r1]
	cmp	r0, #0x40
	beq	.L48	@cond_branch
	add	r1, r0, #0
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L50+0x4
	add	r0, r0, r1
	add	r2, r0, #0
	add	r2, r2, #0x3e
	ldrb	r0, [r2]
	mov	r1, #0x4
	orr	r0, r0, r1
	strb	r0, [r2]
.L48:
	ldr	r1, .L50+0x8
	ldrb	r0, [r1]
	cmp	r0, #0x40
	beq	.L47	@cond_branch
	add	r1, r0, #0
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L50+0x4
	add	r0, r0, r1
	add	r2, r0, #0
	add	r2, r2, #0x3e
	ldrb	r0, [r2]
	mov	r1, #0x4
	orr	r0, r0, r1
	strb	r0, [r2]
.L47:
	pop	{r0}
	bx	r0
.L51:
	.align	2, 0
.L50:
	.word	gUnknown_0203A3D0
	.word	gSprites
	.word	gUnknown_0203A3D1
.Lfe7:
	.size	 sub_814A904,.Lfe7-sub_814A904
	.align	2, 0
	.globl	sub_814A958
	.type	 sub_814A958,function
	.thumb_func
sub_814A958:
	.syntax unified
    push {r4-r7,lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5-r7}
    sub sp, 0x4
    lsls r0, 24
    ldr r4, _0814A9C4
    ldr r2, _0814A9C8
    lsrs r0, 24
    str r0, [sp]
    movs r0, 0
    movs r1, 0
    movs r1, 0x2
    str r0, [r4]
    str r1, [r4, 0x4]
    strh r2, [r4]
    adds r4, 0x8
    movs r7, 0x1
    movs r2, 0x1
    ldr r1, [sp]
    subs r0, r1, 0x1
    lsls r0, 16
    lsrs r3, r0, 16
    asrs r0, 16
    cmp r0, 0x7
    ble _0814AA3A
    ldr r0, _0814A9CC
    mov r12, r0
    mov r8, r1
    movs r1, 0x8
    negs r1, r1
    mov r10, r1
    ldr r5, _0814A9D0
    mov r9, r5
_0814A99E:
    lsls r0, r3, 16
    asrs r3, r0, 16
    cmp r3, 0x1F
    ble _0814A9D4
    mov r6, r12
    ldr r0, [r6]
    ldr r1, [r6, 0x4]
    str r0, [r4]
    str r1, [r4, 0x4]
    strh r2, [r4]
    lsls r0, r2, 16
    movs r1, 0x80
    lsls r1, 14
    adds r0, r1
    lsrs r2, r0, 16
    ldr r3, [sp]
    lsls r5, r3, 16
    b _0814AA20
    .align 2, 0
_0814A9C4: .4byte gMenuCursorSubsprites
_0814A9C8: .4byte 0x0000ffff
_0814A9CC: .4byte gUnknown_0842F780
_0814A9D0: .4byte gUnknown_0842F788
_0814A9D4:
    ldr r6, [sp]
    lsls r5, r6, 16
    mov r0, r8
    cmp r0, 0x27
    ble _0814AA0A
    cmp r3, 0x8
    ble _0814AA0A
    mov r6, r12
    ldr r0, [r6]
    ldr r1, [r6, 0x4]
    str r0, [r4]
    str r1, [r4, 0x4]
    lsls r1, r2, 16
    asrs r1, 16
    adds r2, r1, 0
    subs r2, 0x20
    adds r0, r3, 0
    mov r6, r10
    ands r0, r6
    adds r2, r0
    strh r2, [r4]
    movs r0, 0x18
    ands r0, r3
    adds r1, r0
    lsls r1, 16
    lsrs r2, r1, 16
    b _0814AA20
_0814AA0A:
    mov r3, r9
    ldr r0, [r3]
    ldr r1, [r3, 0x4]
    str r0, [r4]
    str r1, [r4, 0x4]
    strh r2, [r4]
    lsls r0, r2, 16
    movs r6, 0x80
    lsls r6, 12
    adds r0, r6
    lsrs r2, r0, 16
_0814AA20:
    adds r4, 0x8
    adds r0, r7, 0x1
    lsls r0, 24
    lsrs r7, r0, 24
    asrs r1, r5, 16
    lsls r0, r2, 16
    asrs r0, 16
    subs r1, r0
    lsls r1, 16
    lsrs r3, r1, 16
    asrs r1, 16
    cmp r1, 0x7
    bgt _0814A99E
_0814AA3A:
    ldr r5, _0814AAA8
    ldr r0, [r5]
    ldr r1, [r5, 0x4]
    str r0, [r4]
    str r1, [r4, 0x4]
    lsls r1, r2, 16
    asrs r1, 16
    subs r1, 0x7
    lsls r0, r3, 16
    asrs r0, 16
    adds r0, r1
    strh r0, [r4]
    adds r0, r7, 0x1
    lsls r0, 24
    lsrs r7, r0, 24
    ldr r6, _0814AAAC
    ldrb r0, [r6]
    cmp r0, 0x40
    beq _0814AA78
    adds r1, r0, 0
    lsls r0, r1, 4
    adds r0, r1
    lsls r0, 2
    ldr r1, _0814AAB0
    adds r2, r0, r1
    lsls r1, r7, 3
    ldr r0, _0814AAB4
    adds r1, r0
    adds r0, r2, 0
    bl SetSubspriteTables
_0814AA78:
    ldr r1, _0814AAB8
    ldrb r0, [r1]
    cmp r0, 0x40
    beq _0814AA98
    adds r1, r0, 0
    lsls r0, r1, 4
    adds r0, r1
    lsls r0, 2
    ldr r1, _0814AAB0
    adds r2, r0, r1
    lsls r1, r7, 3
    ldr r0, _0814AAB4
    adds r1, r0
    adds r0, r2, 0
    bl SetSubspriteTables
_0814AA98:
    add sp, 0x4
    pop {r3-r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4-r7}
    pop {r0}
    bx r0
    .align 2, 0
_0814AAA8: .4byte gUnknown_0842F790
_0814AAAC: .4byte gUnknown_0203A3D0
_0814AAB0: .4byte gSprites
_0814AAB4: .4byte gSubspriteTables_842F5C0
_0814AAB8: .4byte gUnknown_0203A3D1
    .syntax divided

	.code	16
.Lfe8:
	.size	 sub_814A958,.Lfe8-sub_814A958
	.align	2, 0
	.globl	sub_814AABC
	.type	 sub_814AABC,function
	.thumb_func
sub_814AABC:
	push	{lr}
	add	r2, r0, #0
	ldr	r1, .L56
	ldrb	r0, [r1]
	cmp	r0, #0x40
	beq	.L54	@cond_branch
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L56+0x4
	add	r1, r1, r0
	str	r2, [r1, #0x1c]
.L54:
	ldr	r1, .L56+0x8
	ldrb	r0, [r1]
	cmp	r0, #0x40
	beq	.L53	@cond_branch
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L56+0x4
	add	r1, r1, r0
	str	r2, [r1, #0x1c]
.L53:
	pop	{r0}
	bx	r0
.L57:
	.align	2, 0
.L56:
	.word	gUnknown_0203A3D0
	.word	gSprites
	.word	gUnknown_0203A3D1
.Lfe9:
	.size	 sub_814AABC,.Lfe9-sub_814AABC
	.align	2, 0
	.globl	sub_814AAF8
	.type	 sub_814AAF8,function
	.thumb_func
sub_814AAF8:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	ip, r0
	ldr	r1, .L67
	ldrb	r0, [r1]
	cmp	r0, #0x40
	beq	.L58	@cond_branch
	add	r1, r0, #0
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L67+0x4
	add	r4, r0, r1
	ldr	r0, [r4, #0x14]
	ldrh	r1, [r0, #0x2]
	ldr	r0, .L67+0x8
	cmp	r1, r0
	bne	.L58	@cond_branch
	mov	r2, #0x0
	mov	r3, #0xf
	mov	r1, #0x0
	ldrb	r5, [r4, #0x5]
	ldr	r0, .L67+0xc
	mov	r8, r0
	ldr	r7, .L67+0x10
	mov	r6, #0xf
.L64:
	lsl	r0, r1, #0x1
	add	r0, r0, r7
	ldrh	r0, [r0]
	cmp	r0, ip
	bne	.L63	@cond_branch
	lsr	r0, r1, #0x4
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	add	r3, r1, #0
	and	r3, r3, r6
.L63:
	add	r0, r1, #0x1
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	cmp	r1, #0xff
	bls	.L64	@cond_branch
	lsl	r2, r2, #0x4
	mov	r1, #0xf
	add	r0, r1, #0
	and	r0, r0, r5
	orr	r0, r0, r2
	strb	r0, [r4, #0x5]
	and	r3, r3, r1
	lsl	r0, r3, #0x3
	add	r0, r0, r8
	bl	RequestSpriteSheetCopy
.L58:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L68:
	.align	2, 0
.L67:
	.word	gUnknown_0203A3D0
	.word	gSprites
	.word	0xffff
	.word	gUnknown_0842F140
	.word	gPlttBufferUnfaded
.Lfe10:
	.size	 sub_814AAF8,.Lfe10-sub_814AAF8
	.align	2, 0
	.globl	sub_814AB84
	.type	 sub_814AB84,function
	.thumb_func
sub_814AB84:
	push	{r4, r5, lr}
	ldr	r5, .L72
	ldrb	r0, [r5]
	cmp	r0, #0x40
	beq	.L69	@cond_branch
	lsl	r4, r0, #0x4
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L72+0x4
	add	r4, r4, r0
	add	r0, r4, #0
	bl	FreeSpriteOamMatrix
	add	r0, r4, #0
	bl	DestroySprite
	mov	r0, #0x40
	strb	r0, [r5]
	ldr	r0, .L72+0x8
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L71	@cond_branch
	mov	r2, #0x80
	lsl	r2, r2, #0x13
	ldrh	r1, [r2]
	ldr	r0, .L72+0xc
	and	r0, r0, r1
	strh	r0, [r2]
.L71:
	ldr	r0, .L72+0x10
	ldr	r1, .L72+0x14
	ldrb	r1, [r1]
	strb	r1, [r0]
.L69:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L73:
	.align	2, 0
.L72:
	.word	gUnknown_0203A3D1
	.word	gSprites
	.word	gUnknown_0203A3D3
	.word	0x7fff
	.word	0x400004b
	.word	gUnknown_0203A3D4
.Lfe11:
	.size	 sub_814AB84,.Lfe11-sub_814AB84
	.align	2, 0
	.globl	unref_sub_814ABE4
	.type	 unref_sub_814ABE4,function
	.thumb_func
unref_sub_814ABE4:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r1, .L77
	lsl	r0, r4, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	ldr	r1, .L77+0x4
	mov	r2, #0x28
	bl	CpuSet
	ldr	r1, .L77+0x8
	ldrb	r0, [r1]
	cmp	r0, #0x40
	beq	.L75	@cond_branch
	add	r1, r0, #0
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L77+0xc
	add	r2, r0, r1
	lsl	r1, r4, #0x3
	ldr	r0, .L77+0x10
	add	r1, r1, r0
	add	r0, r2, #0
	bl	SetSubspriteTables
.L75:
	ldr	r1, .L77+0x14
	ldrb	r0, [r1]
	cmp	r0, #0x40
	beq	.L74	@cond_branch
	add	r1, r0, #0
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L77+0xc
	add	r2, r0, r1
	lsl	r1, r4, #0x3
	ldr	r0, .L77+0x10
	add	r1, r1, r0
	add	r0, r2, #0
	bl	SetSubspriteTables
.L74:
	pop	{r4}
	pop	{r0}
	bx	r0
.L78:
	.align	2, 0
.L77:
	.word	gUnknown_0842F5BC
	.word	gMenuCursorSubsprites
	.word	gUnknown_0203A3D0
	.word	gSprites
	.word	gUnknown_0842F758
	.word	gUnknown_0203A3D1
.Lfe12:
	.size	 unref_sub_814ABE4,.Lfe12-unref_sub_814ABE4
	.align	2, 0
	.globl	CreateBlendedOutlineCursor
	.type	 CreateBlendedOutlineCursor,function
	.thumb_func
CreateBlendedOutlineCursor:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	ldr	r4, [sp, #0x1c]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	lsl	r1, r1, #0x10
	lsr	r5, r1, #0x10
	lsl	r2, r2, #0x18
	lsr	r7, r2, #0x18
	lsl	r3, r3, #0x10
	lsr	r6, r3, #0x10
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r9, r4
	ldr	r0, .L86
	ldrb	r0, [r0]
	cmp	r0, #0x40
	beq	.L80	@cond_branch
	bl	sub_814AD44
.L80:
	mov	r4, #0x1
	ldr	r0, .L86+0x4
	cmp	r5, r0
	bne	.L81	@cond_branch
	ldr	r1, .L86+0x8
	mov	r0, #0xf
	and	r0, r0, r7
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	strh	r6, [r0]
	ldr	r0, .L86+0xc
	bl	LoadSpritePalette
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xff
	beq	.L81	@cond_branch
	ldr	r5, .L86+0x10
	mov	r4, #0x0
.L81:
	mov	r6, #0xf
	add	r0, r7, #0
	and	r0, r0, r6
	lsl	r0, r0, #0x3
	ldr	r1, .L86+0x14
	add	r0, r0, r1
	bl	LoadSpriteSheetDeferred
	lsl	r0, r4, #0x1
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	ldr	r1, .L86+0x18
	add	r0, r0, r1
	mov	r1, #0x0
	mov	r2, #0xa0
	mov	r3, r8
	bl	CreateSprite
	ldr	r1, .L86
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x40
	beq	.L83	@cond_branch
	ldrb	r1, [r1]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L86+0x1c
	add	r4, r0, r1
	ldr	r0, .L86+0x4
	cmp	r5, r0
	bne	.L84	@cond_branch
	ldrb	r1, [r4, #0x5]
	add	r0, r6, #0
	and	r0, r0, r1
	strb	r0, [r4, #0x5]
	b	.L83
.L87:
	.align	2, 0
.L86:
	.word	gUnknown_0203A3D2
	.word	0xffff
	.word	gUnknown_0203A360
	.word	gUnknown_0842F248
	.word	0xfff1
	.word	gUnknown_0842F1C0
	.word	gSpriteTemplate_842F298
	.word	gSprites
.L84:
	add	r0, r5, #0
	bl	IndexOfSpritePaletteTag
	lsl	r0, r0, #0x4
	ldrb	r2, [r4, #0x5]
	add	r1, r6, #0
	and	r1, r1, r2
	orr	r1, r1, r0
	strb	r1, [r4, #0x5]
.L83:
	mov	r0, r9
	bl	sub_814ADF4
	ldr	r0, .L88
	ldrb	r0, [r0]
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L89:
	.align	2, 0
.L88:
	.word	gUnknown_0203A3D2
.Lfe13:
	.size	 CreateBlendedOutlineCursor,.Lfe13-CreateBlendedOutlineCursor
	.align	2, 0
	.globl	sub_814AD44
	.type	 sub_814AD44,function
	.thumb_func
sub_814AD44:
	push	{r4, lr}
	ldr	r4, .L92
	ldrb	r0, [r4]
	cmp	r0, #0x40
	beq	.L90	@cond_branch
	ldr	r0, .L92+0x4
	bl	LoadTilesForSpriteSheet
	ldrb	r1, [r4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L92+0x8
	add	r0, r0, r1
	bl	DestroySpriteAndFreeResources
	mov	r0, #0x40
	strb	r0, [r4]
.L90:
	pop	{r4}
	pop	{r0}
	bx	r0
.L93:
	.align	2, 0
.L92:
	.word	gUnknown_0203A3D2
	.word	gUnknown_0842F1C0
	.word	gSprites
.Lfe14:
	.size	 sub_814AD44,.Lfe14-sub_814AD44
	.align	2, 0
	.globl	sub_814AD7C
	.type	 sub_814AD7C,function
	.thumb_func
sub_814AD7C:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r4, r1, #0x18
	ldr	r1, .L96
	ldrb	r0, [r1]
	cmp	r0, #0x40
	beq	.L94	@cond_branch
	add	r1, r0, #0
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L96+0x4
	add	r2, r0, r1
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r1, [r3]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r3]
	add	r0, r2, #0
	add	r0, r0, #0x28
	mov	r1, #0x0
	strb	r1, [r0]
	add	r0, r0, #0x1
	strb	r1, [r0]
	strh	r5, [r2, #0x20]
	strh	r4, [r2, #0x22]
.L94:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L97:
	.align	2, 0
.L96:
	.word	gUnknown_0203A3D2
	.word	gSprites
.Lfe15:
	.size	 sub_814AD7C,.Lfe15-sub_814AD7C
	.align	2, 0
	.globl	sub_814ADC8
	.type	 sub_814ADC8,function
	.thumb_func
sub_814ADC8:
	push	{lr}
	ldr	r1, .L100
	ldrb	r0, [r1]
	cmp	r0, #0x40
	beq	.L98	@cond_branch
	add	r1, r0, #0
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L100+0x4
	add	r0, r0, r1
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r2, #0x4
	orr	r1, r1, r2
	strb	r1, [r0]
.L98:
	pop	{r0}
	bx	r0
.L101:
	.align	2, 0
.L100:
	.word	gUnknown_0203A3D2
	.word	gSprites
.Lfe16:
	.size	 sub_814ADC8,.Lfe16-sub_814ADC8
	.align	2, 0
	.globl	sub_814ADF4
	.type	 sub_814ADF4,function
	.thumb_func
sub_814ADF4:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x12
	bls	.L103	@cond_branch
	mov	r2, #0x0
.L103:
	ldr	r1, .L105
	ldrb	r0, [r1]
	cmp	r0, #0x40
	beq	.L102	@cond_branch
	add	r1, r0, #0
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L105+0x4
	add	r0, r0, r1
	lsl	r1, r2, #0x3
	ldr	r2, .L105+0x8
	add	r1, r1, r2
	bl	SetSubspriteTables
.L102:
	pop	{r0}
	bx	r0
.L106:
	.align	2, 0
.L105:
	.word	gUnknown_0203A3D2
	.word	gSprites
	.word	gSubspriteTables_842F6C0
.Lfe17:
	.size	 sub_814ADF4,.Lfe17-sub_814ADF4
.text
	.align	2, 0
