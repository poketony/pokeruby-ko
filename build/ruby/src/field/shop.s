@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.globl	gMartTotalCost
	.section ewram_data,"aw"
	.align	2, 0
	.type	 gMartTotalCost,object
	.size	 gMartTotalCost,4
gMartTotalCost:
	.word	0x0
	.globl	gUnknown_020386A4
	.align	1, 0
	.type	 gUnknown_020386A4,object
	.size	 gUnknown_020386A4,128
gUnknown_020386A4:
	.short	0x0
	.space	6
	.space	120
	.globl	gUnknown_02038724
	.align	2, 0
	.type	 gUnknown_02038724,object
	.size	 gUnknown_02038724,12
gUnknown_02038724:
	.short	0x0
	.space	2
	.space	8
	.globl	gUnknown_02038730
	.type	 gUnknown_02038730,object
	.size	 gUnknown_02038730,1
gUnknown_02038730:
	.byte	0x0
	.globl	gUnknown_02038731
	.type	 gUnknown_02038731,object
	.size	 gUnknown_02038731,1
gUnknown_02038731:
	.byte	0x0
	.section .rodata
	.align	2, 0
	.type	 sBuySellQuitMenuActions,object
sBuySellQuitMenuActions:
	.word	MartText_Buy
	.word	sub_80B2EFC
	.word	MartText_Sell
	.word	sub_80B2F30
	.word	MartText_Quit2
	.word	HandleShopMenuQuit
	.size	 sBuySellQuitMenuActions,24
	.type	 gUnknown_083CC6E8,object
gUnknown_083CC6E8:
	.byte	0x0
	.byte	0x1
	.byte	0x2
	.size	 gUnknown_083CC6E8,3
	.type	 gUnknown_083CC6EB,object
gUnknown_083CC6EB:
	.byte	0x0
	.byte	0x2
	.size	 gUnknown_083CC6EB,2
	.align	1, 0
	.type	 gUnusedMartArray,object
gUnusedMartArray:
	.short	0x2
	.short	0x3
	.short	0x4
	.short	0xd
	.short	0x121
	.short	0xe
	.short	0xe
	.short	0xe
	.short	0xe
	.short	0xe
	.short	0xe
	.short	0x0
	.short	0x0
	.size	 gUnusedMartArray,26
	.align	2, 0
	.type	 gUnknown_083CC708,object
gUnknown_083CC708:
	.word	sub_80B3BF4
	.word	sub_80B3D7C
	.size	 gUnknown_083CC708,8
.text
	.align	2, 0
	.globl	CreateShopMenu
	.type	 CreateShopMenu,function
	.thumb_func
CreateShopMenu:
	push	{r4, lr}
	add	sp, sp, #0xfffffff8
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	ScriptContext2_Enable
	ldr	r1, .L5
	mov	r0, #0x0
	strb	r4, [r1, #0xc]
	strb	r0, [r1, #0x9]
	cmp	r4, #0
	bne	.L3	@cond_branch
	mov	r0, #0x2
	strb	r0, [r1, #0xa]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0xe
	mov	r3, #0x7
	bl	MenuDrawTextWindow
	ldr	r3, .L5+0x4
	ldr	r0, .L5+0x8
	str	r0, [sp]
	mov	r0, #0x1
	mov	r1, #0x1
	mov	r2, #0x3
	bl	PrintMenuItemsReordered
	b	.L4
.L6:
	.align	2, 0
.L5:
	.word	gMartInfo
	.word	sBuySellQuitMenuActions
	.word	gUnknown_083CC6E8
.L3:
	mov	r0, #0x1
	strb	r0, [r1, #0xa]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0xe
	mov	r3, #0x5
	bl	MenuDrawTextWindow
	ldr	r3, .L7
	ldr	r0, .L7+0x4
	str	r0, [sp]
	mov	r0, #0x1
	mov	r1, #0x1
	mov	r2, #0x2
	bl	PrintMenuItemsReordered
.L4:
	ldr	r0, .L7+0x8
	ldrb	r3, [r0, #0xa]
	add	r3, r3, #0x1
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r0, #0x0
	str	r0, [sp]
	mov	r0, #0x9
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	mov	r1, #0x1
	mov	r2, #0x1
	bl	InitMenu
	ldr	r0, .L7+0xc
	mov	r1, #0x8
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	sp, sp, #0x8
	pop	{r4}
	pop	{r1}
	bx	r1
.L8:
	.align	2, 0
.L7:
	.word	sBuySellQuitMenuActions
	.word	gUnknown_083CC6EB
	.word	gMartInfo
	.word	sub_80B2E38
.Lfe1:
	.size	 CreateShopMenu,.Lfe1-CreateShopMenu
	.align	2, 0
	.globl	SetShopMenuCallback
	.type	 SetShopMenuCallback,function
	.thumb_func
SetShopMenuCallback:
	ldr	r1, .L10
	str	r0, [r1]
	bx	lr
.L11:
	.align	2, 0
.L10:
	.word	gMartInfo
.Lfe2:
	.size	 SetShopMenuCallback,.Lfe2-SetShopMenuCallback
	.align	2, 0
	.globl	SetShopItemsForSale
	.type	 SetShopItemsForSale,function
	.thumb_func
SetShopItemsForSale:
	push	{lr}
	add	r1, r0, #0
	mov	r2, #0x0
	ldr	r3, .L17
	str	r1, [r3, #0x4]
	strb	r2, [r3, #0x8]
	ldrh	r0, [r1]
	cmp	r0, #0
	beq	.L14	@cond_branch
.L15:
	ldrb	r0, [r3, #0x8]
	add	r0, r0, #0x1
	strb	r0, [r3, #0x8]
	add	r0, r2, #0x1
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	lsl	r0, r2, #0x1
	add	r0, r0, r1
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L15	@cond_branch
.L14:
	pop	{r0}
	bx	r0
.L18:
	.align	2, 0
.L17:
	.word	gMartInfo
.Lfe3:
	.size	 SetShopItemsForSale,.Lfe3-SetShopItemsForSale
	.align	2, 0
	.globl	sub_80B2E38
	.type	 sub_80B2E38,function
	.thumb_func
sub_80B2E38:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r2, .L33
	ldrh	r1, [r2, #0x30]
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L20	@cond_branch
	ldr	r4, .L33+0x4
	ldrb	r0, [r4, #0x9]
	cmp	r0, #0
	beq	.L22	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x1
	neg	r0, r0
	b	.L31
.L34:
	.align	2, 0
.L33:
	.word	gMain
	.word	gMartInfo
.L20:
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L23	@cond_branch
	ldr	r4, .L35
	ldrb	r0, [r4, #0x9]
	ldrb	r1, [r4, #0xa]
	cmp	r0, r1
	beq	.L22	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x1
.L31:
	bl	MoveMenuCursor
	strb	r0, [r4, #0x9]
	b	.L22
.L36:
	.align	2, 0
.L35:
	.word	gMartInfo
.L23:
	ldrh	r1, [r2, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L26	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r3, .L37
	ldrb	r0, [r3, #0xc]
	cmp	r0, #0
	bne	.L27	@cond_branch
	ldr	r1, .L37+0x4
	ldr	r2, .L37+0x8
	b	.L32
.L38:
	.align	2, 0
.L37:
	.word	gMartInfo
	.word	sBuySellQuitMenuActions
	.word	gUnknown_083CC6E8
.L27:
	ldr	r1, .L39
	ldr	r2, .L39+0x4
.L32:
	ldrb	r0, [r3, #0x9]
	add	r0, r0, r2
	ldrb	r0, [r0]
	lsl	r0, r0, #0x3
	add	r1, r1, #0x4
	add	r0, r0, r1
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	_call_via_r1
	b	.L22
.L40:
	.align	2, 0
.L39:
	.word	sBuySellQuitMenuActions
	.word	gUnknown_083CC6EB
.L26:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L22	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r4, #0
	bl	HandleShopMenuQuit
.L22:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe4:
	.size	 sub_80B2E38,.Lfe4-sub_80B2E38
	.align	2, 0
	.globl	sub_80B2EFC
	.type	 sub_80B2EFC,function
	.thumb_func
sub_80B2EFC:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L42
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldr	r2, .L42+0x4
	lsr	r0, r2, #0x10
	strh	r0, [r1, #0x18]
	strh	r2, [r1, #0x1a]
	ldr	r0, .L42+0x8
	str	r0, [r1]
	mov	r0, #0x1
	mov	r1, #0x0
	bl	fade_screen
	pop	{r0}
	bx	r0
.L43:
	.align	2, 0
.L42:
	.word	gTasks
	.word	BuyMenuDrawGraphics
	.word	sub_80B2FA0
.Lfe5:
	.size	 sub_80B2EFC,.Lfe5-sub_80B2EFC
	.align	2, 0
	.globl	sub_80B2F30
	.type	 sub_80B2F30,function
	.thumb_func
sub_80B2F30:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L45
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldr	r2, .L45+0x4
	lsr	r0, r2, #0x10
	strh	r0, [r1, #0x18]
	strh	r2, [r1, #0x1a]
	ldr	r0, .L45+0x8
	str	r0, [r1]
	mov	r0, #0x1
	mov	r1, #0x0
	bl	fade_screen
	pop	{r0}
	bx	r0
.L46:
	.align	2, 0
.L45:
	.word	gTasks
	.word	sub_80A6300
	.word	sub_80B2FA0
.Lfe6:
	.size	 sub_80B2F30,.Lfe6-sub_80B2F30
	.align	2, 0
	.globl	HandleShopMenuQuit
	.type	 HandleShopMenuQuit,function
	.thumb_func
HandleShopMenuQuit:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	HandleDestroyMenuCursors
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0xf
	mov	r3, #0x8
	bl	MenuZeroFillWindowRect
	bl	sub_80BE3BC
	bl	ScriptContext2_Disable
	add	r0, r4, #0
	bl	DestroyTask
	ldr	r0, .L49
	ldr	r0, [r0]
	cmp	r0, #0
	beq	.L48	@cond_branch
	bl	_call_via_r0
.L48:
	pop	{r4}
	pop	{r0}
	bx	r0
.L50:
	.align	2, 0
.L49:
	.word	gMartInfo
.Lfe7:
	.size	 HandleShopMenuQuit,.Lfe7-HandleShopMenuQuit
	.align	2, 0
	.globl	sub_80B2FA0
	.type	 sub_80B2FA0,function
	.thumb_func
sub_80B2FA0:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L53
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L52	@cond_branch
	ldr	r0, .L53+0x4
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrh	r0, [r1, #0x18]
	lsl	r0, r0, #0x10
	ldrh	r1, [r1, #0x1a]
	orr	r0, r0, r1
	bl	SetMainCallback2
	add	r0, r4, #0
	bl	DestroyTask
.L52:
	pop	{r4}
	pop	{r0}
	bx	r0
.L54:
	.align	2, 0
.L53:
	.word	gPaletteFade
	.word	gTasks
.Lfe8:
	.size	 sub_80B2FA0,.Lfe8-sub_80B2FA0
	.align	2, 0
	.globl	ReturnToShopMenuAfterExitingSellMenu
	.type	 ReturnToShopMenuAfterExitingSellMenu,function
	.thumb_func
ReturnToShopMenuAfterExitingSellMenu:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L56
	ldrb	r0, [r0, #0xc]
	bl	CreateShopMenu
	add	r0, r4, #0
	bl	DestroyTask
	pop	{r4}
	pop	{r0}
	bx	r0
.L57:
	.align	2, 0
.L56:
	.word	gMartInfo
.Lfe9:
	.size	 ReturnToShopMenuAfterExitingSellMenu,.Lfe9-ReturnToShopMenuAfterExitingSellMenu
	.align	2, 0
	.globl	Task_ExitSellMenu
	.type	 Task_ExitSellMenu,function
	.thumb_func
Task_ExitSellMenu:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r5, r4, #0
	bl	sub_807D770
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L59	@cond_branch
	ldr	r0, .L62
	ldrb	r0, [r0, #0xc]
	cmp	r0, #0x2
	bne	.L60	@cond_branch
	ldr	r1, .L62+0x4
	ldr	r2, .L62+0x8
	add	r0, r4, #0
	mov	r3, #0x0
	bl	DisplayItemMessageOnField
	b	.L59
.L63:
	.align	2, 0
.L62:
	.word	gMartInfo
	.word	gOtherText_CanIHelpYou
	.word	ReturnToShopMenuAfterExitingSellMenu
.L60:
	ldr	r1, .L64
	ldr	r2, .L64+0x4
	add	r0, r5, #0
	mov	r3, #0x0
	bl	DisplayItemMessageOnField
.L59:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L65:
	.align	2, 0
.L64:
	.word	gOtherText_AnythingElse
	.word	ReturnToShopMenuAfterExitingSellMenu
.Lfe10:
	.size	 Task_ExitSellMenu,.Lfe10-Task_ExitSellMenu
	.align	2, 0
	.globl	sub_80B3050
	.type	 sub_80B3050,function
	.thumb_func
sub_80B3050:
	push	{lr}
	bl	pal_fill_black
	ldr	r0, .L67
	mov	r1, #0x8
	bl	CreateTask
	pop	{r0}
	bx	r0
.L68:
	.align	2, 0
.L67:
	.word	Task_ExitSellMenu
.Lfe11:
	.size	 sub_80B3050,.Lfe11-sub_80B3050
	.align	2, 0
	.globl	sub_80B3068
	.type	 sub_80B3068,function
	.thumb_func
sub_80B3068:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	Task_ExitSellMenu
	pop	{r0}
	bx	r0
.Lfe12:
	.size	 sub_80B3068,.Lfe12-sub_80B3068
	.align	2, 0
	.globl	unref_sub_80B3078
	.type	 unref_sub_80B3078,function
	.thumb_func
unref_sub_80B3078:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L71
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldr	r0, .L71+0x4
	str	r0, [r1]
	bx	lr
.L72:
	.align	2, 0
.L71:
	.word	gTasks
	.word	Task_ExitSellMenu
.Lfe13:
	.size	 unref_sub_80B3078,.Lfe13-unref_sub_80B3078
	.align	2, 0
	.globl	sub_80B3094
	.type	 sub_80B3094,function
	.thumb_func
sub_80B3094:
	push	{lr}
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	RunTasks
	bl	UpdatePaletteFade
	pop	{r0}
	bx	r0
.Lfe14:
	.size	 sub_80B3094,.Lfe14-sub_80B3094
	.align	2, 0
	.globl	sub_80B30AC
	.type	 sub_80B30AC,function
	.thumb_func
sub_80B30AC:
	push	{r4, lr}
	bl	LoadOam
	bl	ProcessSpriteCopyRequests
	bl	TransferPlttBuffer
	ldr	r3, .L75
	ldr	r1, .L75+0x4
	ldr	r0, .L75+0x8
	str	r3, [r0]
	str	r1, [r0, #0x4]
	ldr	r4, .L75+0xc
	str	r4, [r0, #0x8]
	ldr	r1, [r0, #0x8]
	mov	r2, #0x80
	lsl	r2, r2, #0x4
	add	r1, r3, r2
	ldr	r2, .L75+0x10
	str	r1, [r0]
	str	r2, [r0, #0x4]
	str	r4, [r0, #0x8]
	ldr	r1, [r0, #0x8]
	mov	r1, #0x80
	lsl	r1, r1, #0x5
	add	r3, r3, r1
	ldr	r1, .L75+0x14
	str	r3, [r0]
	str	r1, [r0, #0x4]
	str	r4, [r0, #0x8]
	ldr	r0, [r0, #0x8]
	pop	{r4}
	pop	{r0}
	bx	r0
.L76:
	.align	2, 0
.L75:
	.word	gBGTilemapBuffers+0x800
	.word	0x600e800
	.word	0x40000d4
	.word	0x80000400
	.word	0x600e000
	.word	0x600f000
.Lfe15:
	.size	 sub_80B30AC,.Lfe15-sub_80B30AC
	.align	2, 0
	.globl	BuyMenuDrawGraphics
	.type	 BuyMenuDrawGraphics,function
	.thumb_func
BuyMenuDrawGraphics:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	sp, sp, #0xfffffff8
	bl	sub_80F9438
	bl	remove_some_task
	ldr	r0, .L78
	mov	r5, #0x0
	strh	r5, [r0]
	add	r0, r0, #0x2
	strh	r5, [r0]
	add	r0, r0, #0x2
	strh	r5, [r0]
	add	r0, r0, #0x2
	strh	r5, [r0]
	add	r0, r0, #0x2
	strh	r5, [r0]
	add	r0, r0, #0x2
	strh	r5, [r0]
	ldr	r0, .L78+0x4
	mov	r8, r0
	ldrb	r0, [r0, #0x8]
	mov	r1, #0x80
	orr	r0, r0, r1
	mov	r1, r8
	strb	r0, [r1, #0x8]
	mov	r1, #0xe0
	lsl	r1, r1, #0x13
	mov	r6, #0x0
	str	r6, [sp, #0x4]
	ldr	r0, .L78+0x8
	add	r2, sp, #0x4
	str	r2, [r0]
	str	r1, [r0, #0x4]
	ldr	r1, .L78+0xc
	str	r1, [r0, #0x8]
	ldr	r0, [r0, #0x8]
	ldr	r0, .L78+0x10
	ldr	r1, .L78+0x14
	bl	LZDecompressVram
	ldr	r0, .L78+0x18
	ldr	r1, .L78+0x1c
	bl	LZDecompressWram
	ldr	r0, .L78+0x20
	mov	r1, #0xc0
	mov	r2, #0x20
	bl	LoadCompressedPalette
	bl	FreeAllSpritePalettes
	bl	ResetPaletteFade
	bl	ResetSpriteData
	bl	ResetTasks
	ldr	r4, .L78+0x24
	add	r0, r4, #0
	bl	SetUpWindowConfig
	add	r0, r4, #0
	bl	InitMenuWindow
	bl	BuyMenuDrawMapGraphics
	ldr	r0, .L78+0x28
	strb	r6, [r0, #0x9]
	strb	r5, [r0, #0xb]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x20
	mov	r3, #0x20
	bl	MenuZeroFillWindowRect
	ldr	r0, .L78+0x2c
	mov	r1, #0x92
	lsl	r1, r1, #0x3
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	OpenMoneyWindow
	mov	r0, #0x0
	mov	r1, #0x7
	bl	sub_80B3764
	bl	sub_80B37EC
	bl	sub_80B3270
	ldr	r0, .L78+0x30
	mov	r1, #0x8
	bl	CreateTask
	bl	sub_80B3240
	.code	16
	mov	r0, #0x1
	neg	r0, r0
	str	r6, [sp]
	mov	r1, #0x0
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	mov	r2, r8
	ldrb	r1, [r2, #0x8]
	mov	r0, #0x7f
	and	r0, r0, r1
	strb	r0, [r2, #0x8]
	ldr	r0, .L78+0x34
	bl	SetVBlankCallback
	ldr	r0, .L78+0x38
	bl	SetMainCallback2
	add	sp, sp, #0x8
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L79:
	.align	2, 0
.L78:
	.word	0x4000014
	.word	gPaletteFade
	.word	0x40000d4
	.word	0x85000100
	.word	gBuyMenuFrame_Gfx
	.word	0x6007c00
	.word	gBuyMenuFrame_Tilemap
	.word	gSharedMem+0x18000
	.word	gMenuMoneyPal
	.word	gWindowConfig_81E6DFC
	.word	gMartInfo
	.word	gSaveBlock1
	.word	sub_80B40E8
	.word	sub_80B30AC
	.word	sub_80B3094
.Lfe16:
	.size	 BuyMenuDrawGraphics,.Lfe16-BuyMenuDrawGraphics
	.section .rodata
	.align	1, 0
.LC61:
	.short	0x41ee
	.short	0x7fff
.text
	.align	2, 0
	.globl	sub_80B3240
	.type	 sub_80B3240,function
	.thumb_func
sub_80B3240:
	push	{lr}
	add	sp, sp, #0xfffffffc
	ldr	r1, .L81
	mov	r0, sp
	mov	r2, #0x4
	bl	memcpy
	mov	r0, sp
	add	r0, r0, #0x2
	mov	r1, #0xd1
	mov	r2, #0x2
	bl	LoadPalette
	mov	r0, sp
	mov	r1, #0xd8
	mov	r2, #0x2
	bl	LoadPalette
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.L82:
	.align	2, 0
.L81:
	.word	.LC61
.Lfe17:
	.size	 sub_80B3240,.Lfe17-sub_80B3240
	.align	2, 0
	.globl	sub_80B3270
	.type	 sub_80B3270,function
	.thumb_func
sub_80B3270:
	push	{lr}
	bl	sub_80F944C
	ldr	r0, .L85
	ldrb	r0, [r0, #0x8]
	cmp	r0, #0x7
	bls	.L84	@cond_branch
	mov	r0, #0x0
	mov	r1, #0xac
	mov	r2, #0xc
	bl	CreateVerticalScrollIndicators
	mov	r0, #0x1
	mov	r1, #0xac
	mov	r2, #0x94
	bl	CreateVerticalScrollIndicators
	mov	r0, #0x0
	mov	r1, #0x1
	bl	sub_80F979C
.L84:
	pop	{r0}
	bx	r0
.L86:
	.align	2, 0
.L85:
	.word	gMartInfo
.Lfe18:
	.size	 sub_80B3270,.Lfe18-sub_80B3270
	.align	2, 0
	.globl	sub_80B32A4
	.type	 sub_80B32A4,function
	.thumb_func
sub_80B32A4:
	push	{lr}
	ldr	r0, .L92
	ldrb	r0, [r0, #0xb]
	cmp	r0, #0
	bne	.L88	@cond_branch
	mov	r0, #0x0
	mov	r1, #0x1
	bl	sub_80F979C
	b	.L89
.L93:
	.align	2, 0
.L92:
	.word	gMartInfo
.L88:
	mov	r0, #0x0
	mov	r1, #0x0
	bl	sub_80F979C
.L89:
	ldr	r1, .L94
	ldrb	r0, [r1, #0xb]
	add	r0, r0, #0x7
	ldrb	r1, [r1, #0x8]
	cmp	r0, r1
	blt	.L90	@cond_branch
	mov	r0, #0x1
	mov	r1, #0x1
	bl	sub_80F979C
	b	.L91
.L95:
	.align	2, 0
.L94:
	.word	gMartInfo
.L90:
	mov	r0, #0x1
	mov	r1, #0x0
	bl	sub_80F979C
.L91:
	pop	{r0}
	bx	r0
.Lfe19:
	.size	 sub_80B32A4,.Lfe19-sub_80B32A4
	.align	2, 0
	.globl	sub_80B32EC
	.type	 sub_80B32EC,function
	.thumb_func
sub_80B32EC:
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	lsl	r2, r2, #0x10
	asr	r2, r2, #0x10
	add	r1, r1, r2
	lsl	r1, r1, #0x1
	add	r1, r1, r0
	ldr	r2, .L97
	add	r0, r2, #0
	strh	r0, [r1]
	strh	r0, [r1, #0x2]
	bx	lr
.L98:
	.align	2, 0
.L97:
	.word	0xc3e1
.Lfe20:
	.size	 sub_80B32EC,.Lfe20-sub_80B32EC
	.align	2, 0
	.globl	BuyMenuDrawMapMetatileLayer
	.type	 BuyMenuDrawMapMetatileLayer,function
	.thumb_func
BuyMenuDrawMapMetatileLayer:
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	lsl	r2, r2, #0x10
	asr	r2, r2, #0x10
	add	r1, r1, r2
	lsl	r1, r1, #0x1
	add	r1, r1, r0
	ldrh	r0, [r3]
	strh	r0, [r1]
	ldrh	r0, [r3, #0x2]
	strh	r0, [r1, #0x2]
	add	r2, r1, #0
	add	r2, r2, #0x40
	ldrh	r0, [r3, #0x4]
	strh	r0, [r2]
	add	r1, r1, #0x42
	ldrh	r0, [r3, #0x6]
	strh	r0, [r1]
	bx	lr
.Lfe21:
	.size	 BuyMenuDrawMapMetatileLayer,.Lfe21-BuyMenuDrawMapMetatileLayer
	.align	2, 0
	.globl	BuyMenuDrawMapMetatile
	.type	 BuyMenuDrawMapMetatile,function
	.thumb_func
BuyMenuDrawMapMetatile:
	push	{r4, r5, r6, r7, lr}
	add	r7, r2, #0
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	add	r2, r3, #0
	lsl	r0, r0, #0x11
	lsr	r0, r0, #0x10
	lsl	r1, r1, #0x16
	mov	r4, #0x80
	lsl	r4, r4, #0xf
	add	r1, r1, r4
	lsr	r1, r1, #0x10
	cmp	r3, #0x1
	beq	.L103	@cond_branch
	cmp	r3, #0x1
	bgt	.L107	@cond_branch
	cmp	r3, #0
	beq	.L102	@cond_branch
	b	.L101
.L107:
	cmp	r2, #0x2
	beq	.L104	@cond_branch
	b	.L101
.L102:
	ldr	r5, .L109
	b	.L108
.L110:
	.align	2, 0
.L109:
	.word	gBGTilemapBuffers+0x1000
.L103:
	ldr	r5, .L111
.L108:
	lsl	r6, r0, #0x10
	asr	r6, r6, #0x10
	lsl	r4, r1, #0x10
	asr	r4, r4, #0x10
	add	r0, r5, #0
	add	r1, r6, #0
	add	r2, r4, #0
	add	r3, r7, #0
	bl	BuyMenuDrawMapMetatileLayer
	ldr	r0, .L111+0x4
	add	r5, r5, r0
	add	r3, r7, #0
	add	r3, r3, #0x8
	add	r0, r5, #0
	add	r1, r6, #0
	add	r2, r4, #0
	bl	BuyMenuDrawMapMetatileLayer
	b	.L101
.L112:
	.align	2, 0
.L111:
	.word	gBGTilemapBuffers+0x1800
	.word	0xfffff800
.L104:
	ldr	r5, .L113
	lsl	r6, r0, #0x10
	asr	r6, r6, #0x10
	lsl	r4, r1, #0x10
	asr	r4, r4, #0x10
	add	r0, r5, #0
	add	r1, r6, #0
	add	r2, r4, #0
	add	r3, r7, #0
	bl	BuyMenuDrawMapMetatileLayer
	ldr	r0, .L113+0x4
	add	r5, r5, r0
	add	r3, r7, #0
	add	r3, r3, #0x8
	add	r0, r5, #0
	add	r1, r6, #0
	add	r2, r4, #0
	bl	BuyMenuDrawMapMetatileLayer
.L101:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L114:
	.align	2, 0
.L113:
	.word	gBGTilemapBuffers+0x1800
	.word	0xfffff000
.Lfe22:
	.size	 BuyMenuDrawMapMetatile,.Lfe22-BuyMenuDrawMapMetatile
	.align	2, 0
	.globl	sub_80B33D0
	.type	 sub_80B33D0,function
	.thumb_func
sub_80B33D0:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	r6, r0, #0
	add	r4, r1, #0
	mov	r8, r2
	lsl	r4, r4, #0x16
	ldr	r5, .L116
	lsl	r6, r6, #0x11
	asr	r6, r6, #0x10
	mov	r0, #0x80
	lsl	r0, r0, #0xf
	add	r4, r4, r0
	asr	r4, r4, #0x10
	add	r0, r5, #0
	add	r1, r6, #0
	add	r2, r4, #0
	mov	r3, r8
	bl	BuyMenuDrawMapMetatileLayer
	ldr	r0, .L116+0x4
	add	r5, r5, r0
	mov	r0, #0x8
	add	r8, r8, r0
	add	r0, r5, #0
	add	r1, r6, #0
	add	r2, r4, #0
	mov	r3, r8
	bl	BuyMenuDrawMapMetatileLayer
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L117:
	.align	2, 0
.L116:
	.word	gBGTilemapBuffers+0x1800
	.word	0xfffff800
.Lfe23:
	.size	 sub_80B33D0,.Lfe23-sub_80B33D0
	.align	2, 0
	.globl	sub_80B3420
	.type	 sub_80B3420,function
	.thumb_func
sub_80B3420:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #0xfffffffc
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	GetXYCoordsOneStepInFrontOfPlayer
	mov	r1, sp
	mov	r0, sp
	ldrh	r0, [r0]
	sub	r0, r0, #0x3
	strh	r0, [r1]
	ldrh	r0, [r4]
	sub	r0, r0, #0x3
	strh	r0, [r4]
	mov	r1, #0x0
	ldr	r0, .L137
	mov	sl, r0
	ldr	r2, .L137+0x4
	mov	r9, r2
.L122:
	mov	r4, #0x0
	lsl	r1, r1, #0x10
	mov	r8, r1
	asr	r7, r1, #0x10
.L126:
	mov	r0, sp
	mov	r3, #0x0
	ldrsh	r0, [r0, r3]
	lsl	r4, r4, #0x10
	asr	r6, r4, #0x10
	add	r0, r0, r6
	mov	r2, sp
	mov	r3, #0x2
	ldrsh	r1, [r2, r3]
	add	r1, r1, r7
	bl	MapGridGetMetatileIdAt
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	cmp	r7, #0x5
	beq	.L127	@cond_branch
	cmp	r6, #0x6
	beq	.L127	@cond_branch
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	add	r0, r0, r6
	mov	r2, sp
	mov	r3, #0x2
	ldrsh	r1, [r2, r3]
	add	r1, r1, r7
	bl	MapGridGetMetatileLayerTypeAt
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r5, sl
	bhi	.L128	@cond_branch
	mov	r1, r9
	ldr	r0, [r1]
	ldr	r0, [r0, #0x10]
	lsl	r1, r5, #0x4
	ldr	r2, [r0, #0xc]
	add	r2, r2, r1
	b	.L136
.L138:
	.align	2, 0
.L137:
	.word	0x1ff
	.word	gMapHeader
.L128:
	mov	r2, r9
	ldr	r0, [r2]
	ldr	r1, [r0, #0x14]
	ldr	r2, .L139
	add	r0, r5, r2
	lsl	r0, r0, #0x4
	ldr	r2, [r1, #0xc]
	add	r2, r2, r0
.L136:
	add	r0, r6, #0
	add	r1, r7, #0
	bl	BuyMenuDrawMapMetatile
	b	.L130
.L140:
	.align	2, 0
.L139:
	.word	0xfffffe00
.L127:
	cmp	r5, sl
	bhi	.L131	@cond_branch
	asr	r0, r4, #0x10
	mov	r3, r9
	ldr	r1, [r3]
	ldr	r1, [r1, #0x10]
	lsl	r3, r5, #0x4
	ldr	r2, [r1, #0xc]
	add	r2, r2, r3
	mov	r3, r8
	asr	r1, r3, #0x10
	bl	sub_80B33D0
	b	.L130
.L131:
	asr	r0, r4, #0x10
	mov	r2, r9
	ldr	r1, [r2]
	ldr	r2, [r1, #0x14]
	ldr	r3, .L141
	add	r1, r5, r3
	lsl	r1, r1, #0x4
	ldr	r2, [r2, #0xc]
	add	r2, r2, r1
	mov	r3, r8
	asr	r1, r3, #0x10
	bl	sub_80B33D0
.L130:
	cmp	r7, #0
	bne	.L125	@cond_branch
	asr	r1, r4, #0x10
	cmp	r1, #0
	beq	.L125	@cond_branch
	cmp	r1, #0x6
	beq	.L125	@cond_branch
	lsl	r1, r1, #0x11
	asr	r1, r1, #0x10
	ldr	r0, .L141+0x4
	mov	r2, #0x40
	bl	sub_80B32EC
.L125:
	mov	r1, #0x80
	lsl	r1, r1, #0x9
	add	r0, r4, r1
	lsr	r4, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x6
	ble	.L126	@cond_branch
	add	r0, r1, #0
	add	r0, r0, r8
	lsr	r1, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x5
	ble	.L122	@cond_branch
	add	sp, sp, #0x4
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L142:
	.align	2, 0
.L141:
	.word	0xfffffe00
	.word	gBGTilemapBuffers+0x800
.Lfe24:
	.size	 sub_80B3420,.Lfe24-sub_80B3420
	.align	2, 0
	.globl	BuyMenuDrawMapGraphics
	.type	 BuyMenuDrawMapGraphics,function
	.thumb_func
BuyMenuDrawMapGraphics:
	push	{lr}
	bl	sub_80F9020
	bl	sub_80B356C
	bl	sub_80B368C
	bl	sub_80B3420
	pop	{r0}
	bx	r0
.Lfe25:
	.size	 BuyMenuDrawMapGraphics,.Lfe25-BuyMenuDrawMapGraphics
	.align	2, 0
	.globl	sub_80B356C
	.type	 sub_80B356C,function
	.thumb_func
sub_80B356C:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #0xfffffff8
	mov	r0, #0x0
	mov	r8, r0
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	GetXYCoordsOneStepInFrontOfPlayer
	bl	PlayerGetZCoord
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	str	r0, [sp, #0x4]
	mov	r5, #0x0
	ldr	r2, .L165
	mov	r1, #0x10
.L148:
	lsl	r0, r5, #0x3
	add	r0, r0, r2
	strh	r1, [r0]
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0xf
	bls	.L148	@cond_branch
	mov	r5, #0x0
	ldr	r7, .L165+0x4
	sub	r1, r7, #0x6
	mov	r9, r1
.L153:
	mov	r4, #0x0
	add	r2, r5, #0x1
	mov	sl, r2
.L157:
	mov	r1, sp
	ldr	r3, .L165+0x8
	add	r0, r3, #0
	ldrh	r1, [r1]
	add	r0, r0, r1
	add	r0, r0, r4
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r2, .L165+0xc
	add	r1, r2, #0
	mov	r3, sp
	ldrh	r3, [r3, #0x2]
	add	r1, r1, r3
	add	r1, r1, r5
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	ldr	r2, [sp, #0x4]
	bl	GetFieldObjectIdByXYZ
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x10
	beq	.L156	@cond_branch
	mov	r0, r8
	lsl	r3, r0, #0x3
	mov	r1, r9
	add	r0, r3, r1
	mov	r6, #0x0
	strh	r2, [r0]
	mov	r0, r9
	add	r0, r0, #0x2
	add	r0, r3, r0
	strh	r4, [r0]
	ldr	r1, .L165+0x10
	add	r0, r3, r1
	strh	r5, [r0]
	ldr	r1, .L165+0x14
	lsl	r0, r2, #0x3
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r2, r0, r1
	ldrb	r0, [r2, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	cmp	r0, #0x1
	bne	.L159	@cond_branch
	add	r0, r3, r7
	strh	r6, [r0]
.L159:
	ldrb	r0, [r2, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	cmp	r0, #0x2
	bne	.L160	@cond_branch
	add	r1, r3, r7
	mov	r0, #0x1
	strh	r0, [r1]
.L160:
	ldrb	r0, [r2, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	cmp	r0, #0x3
	bne	.L161	@cond_branch
	add	r1, r3, r7
	mov	r0, #0x2
	strh	r0, [r1]
.L161:
	ldrb	r0, [r2, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	cmp	r0, #0x4
	bne	.L162	@cond_branch
	add	r1, r3, r7
	mov	r0, #0x3
	strh	r0, [r1]
.L162:
	mov	r0, r8
	add	r0, r0, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
.L156:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x6
	bls	.L157	@cond_branch
	mov	r2, sl
	lsl	r0, r2, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x4
	bls	.L153	@cond_branch
	add	sp, sp, #0x8
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L166:
	.align	2, 0
.L165:
	.word	gUnknown_020386A4
	.word	gUnknown_020386A4+0x6
	.word	0xfffd
	.word	0xfffe
	.word	gUnknown_020386A4+0x4
	.word	gMapObjects
.Lfe26:
	.size	 sub_80B356C,.Lfe26-sub_80B356C
	.align	2, 0
	.globl	sub_80B368C
	.type	 sub_80B368C,function
	.thumb_func
sub_80B368C:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #0xfffffffc
	mov	r5, #0x0
	ldr	r6, .L174
	add	r0, r6, #0x6
	mov	r8, r0
	ldr	r7, .L174+0x4
.L171:
	lsl	r4, r5, #0x3
	add	r1, r4, r6
	mov	r2, #0x0
	ldrsh	r0, [r1, r2]
	cmp	r0, #0x10
	beq	.L170	@cond_branch
	add	r1, r0, #0
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r7
	ldrb	r0, [r0, #0x5]
	add	r1, r6, #0x2
	add	r1, r4, r1
	ldrh	r2, [r1]
	lsl	r2, r2, #0x4
	add	r2, r2, #0x8
	lsl	r2, r2, #0x10
	asr	r2, r2, #0x10
	add	r1, r6, #0x4
	add	r1, r4, r1
	ldrh	r3, [r1]
	lsl	r3, r3, #0x14
	mov	r1, #0x80
	lsl	r1, r1, #0xe
	add	r3, r3, r1
	asr	r3, r3, #0x10
	mov	r1, #0x2
	str	r1, [sp]
	ldr	r1, .L174+0x8
	bl	AddPseudoFieldObject
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r0, .L174+0xc
	add	r2, r2, r0
	mov	r1, r8
	add	r0, r4, r1
	ldrb	r1, [r0]
	add	r0, r2, #0
	bl	StartSpriteAnim
.L170:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0xf
	bls	.L171	@cond_branch
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L175:
	.align	2, 0
.L174:
	.word	gUnknown_020386A4
	.word	gMapObjects
	.word	SpriteCallbackDummy
	.word	gSprites
.Lfe27:
	.size	 sub_80B368C,.Lfe27-sub_80B368C
	.align	2, 0
	.globl	sub_80B3720
	.type	 sub_80B3720,function
	.thumb_func
sub_80B3720:
	push	{r4, r5, r6, lr}
	mov	r1, #0x0
	ldr	r6, .L183
	ldr	r5, .L183+0x4
	ldr	r4, .L183+0x8
	ldr	r0, .L183+0xc
	add	r3, r0, #0
.L180:
	lsl	r0, r1, #0x10
	asr	r2, r0, #0x10
	lsl	r1, r2, #0x1
	add	r0, r1, r4
	ldrh	r0, [r0]
	cmp	r0, #0
	beq	.L179	@cond_branch
	add	r1, r1, r6
	add	r0, r0, r3
	strh	r0, [r1]
.L179:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, r5
	ble	.L180	@cond_branch
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L184:
	.align	2, 0
.L183:
	.word	gBGTilemapBuffers+0x800
	.word	0x3ff
	.word	gSharedMem+0x18000
	.word	0xc3e0
.Lfe28:
	.size	 sub_80B3720,.Lfe28-sub_80B3720
	.align	2, 0
	.globl	sub_80B3764
	.type	 sub_80B3764,function
	.thumb_func
sub_80B3764:
	push	{r4, r5, lr}
	add	sp, sp, #0xfffffff8
	add	r4, r0, #0
	add	r5, r1, #0
	bl	sub_80B3720
	add	r0, r4, #0
	add	r1, r5, #0
	mov	r2, #0x0
	bl	sub_80B39D0
	ldr	r0, .L186
	ldrb	r0, [r0, #0x9]
	str	r0, [sp]
	mov	r0, #0xf
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	mov	r1, #0xe
	mov	r2, #0x2
	mov	r3, #0x8
	bl	InitMenu
	add	sp, sp, #0x8
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L187:
	.align	2, 0
.L186:
	.word	gMartInfo
.Lfe29:
	.size	 sub_80B3764,.Lfe29-sub_80B3764
	.align	2, 0
	.globl	sub_80B379C
	.type	 sub_80B379C,function
	.thumb_func
sub_80B379C:
	push	{r4, r5, r6, r7, lr}
	mov	r1, #0x0
	ldr	r0, .L199
	mov	ip, r0
	ldr	r7, .L199+0x4
	ldr	r0, .L199+0x8
	add	r6, r0, #0
.L192:
	mov	r2, #0x0
	add	r0, r1, #0
	add	r0, r0, #0xc
	add	r5, r1, #0x1
	lsl	r4, r0, #0x5
	lsl	r3, r1, #0x5
.L196:
	add	r1, r4, r2
	lsl	r1, r1, #0x1
	add	r1, r1, ip
	add	r0, r3, r2
	lsl	r0, r0, #0x1
	add	r0, r0, r7
	ldrh	r0, [r0]
	add	r0, r6, r0
	strh	r0, [r1]
	add	r0, r2, #0x1
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	cmp	r2, #0xd
	bls	.L196	@cond_branch
	lsl	r0, r5, #0x10
	lsr	r1, r0, #0x10
	cmp	r1, #0x7
	bls	.L192	@cond_branch
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L200:
	.align	2, 0
.L199:
	.word	gBGTilemapBuffers+0x800
	.word	gSharedMem+0x18300
	.word	0xc3e0
.Lfe30:
	.size	 sub_80B379C,.Lfe30-sub_80B379C
	.align	2, 0
	.globl	sub_80B37EC
	.type	 sub_80B37EC,function
	.thumb_func
sub_80B37EC:
	push	{lr}
	bl	sub_80B3A70
	pop	{r0}
	bx	r0
.Lfe31:
	.size	 sub_80B37EC,.Lfe31-sub_80B37EC
	.align	2, 0
	.globl	sub_80B37F8
	.type	 sub_80B37F8,function
	.thumb_func
sub_80B37F8:
	push	{r4, r5, r6, lr}
	add	sp, sp, #0xfffffff8
	add	r6, r0, #0
	lsl	r6, r6, #0x18
	lsr	r6, r6, #0x18
	ldr	r1, .L203
	ldrb	r0, [r1, #0xb]
	ldrb	r2, [r1, #0x9]
	add	r0, r0, r2
	ldr	r1, [r1, #0x4]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrh	r0, [r0]
	bl	ItemId_GetPrice
	add	r4, r0, #0
	mov	r0, #0x1
	bl	GetPriceReduction
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	asr	r4, r4, r0
	ldr	r0, .L203+0x4
	lsl	r5, r6, #0x2
	add	r5, r5, r6
	lsl	r5, r5, #0x3
	add	r5, r5, r0
	mov	r1, #0xa
	ldrsh	r0, [r5, r1]
	mul	r0, r0, r4
	mov	r1, #0x6
	mov	r2, #0x6
	mov	r3, #0xb
	bl	PrintMoneyAmount
	ldr	r0, .L203+0x8
	mov	r1, #0xfc
	strb	r1, [r0]
	mov	r1, #0x14
	strb	r1, [r0, #0x1]
	mov	r1, #0x6
	strb	r1, [r0, #0x2]
	add	r0, r0, #0x3
	mov	r2, #0xa
	ldrsh	r1, [r5, r2]
	mov	r2, #0x1
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	ldr	r0, .L203+0xc
	mov	r1, #0x1
	mov	r2, #0xb
	bl	MenuPrint
	ldr	r0, .L203+0x10
	mov	r1, #0x2
	str	r1, [sp]
	ldr	r1, .L203+0x14
	str	r1, [sp, #0x4]
	mov	r1, #0x1
	mov	r2, #0xb
	mov	r3, #0xc
	bl	sub_80A3FA0
	add	sp, sp, #0x8
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L204:
	.align	2, 0
.L203:
	.word	gMartInfo
	.word	gTasks
	.word	gStringVar1
	.word	gOtherText_xString1
	.word	gBGTilemapBuffers+0x800
	.word	0xc3e1
.Lfe32:
	.size	 sub_80B37F8,.Lfe32-sub_80B37F8
	.section .rodata
.LC107:
	.byte	0xfc
	.byte	0x1
	.byte	0xf
	.byte	0xef
	.byte	0xff
.text
	.align	2, 0
	.globl	sub_80B389C
	.type	 sub_80B389C,function
	.thumb_func
sub_80B389C:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #0xfffffff4
	lsl	r0, r0, #0x10
	lsr	r7, r0, #0x10
	lsl	r1, r1, #0x18
	lsr	r4, r1, #0x18
	add	r5, r4, #0
	ldr	r6, .L207
	ldr	r1, .L207+0x4
	add	r0, sp, #0x4
	mov	r2, #0x5
	bl	memcpy
	ldr	r0, .L207+0x8
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L206	@cond_branch
	mov	r0, #0xe
	mov	r1, #0x2
	mov	r2, #0xe
	mov	r3, #0x11
	bl	MenuFillWindowRectWithBlankTile
	add	r0, sp, #0x4
	mov	r1, #0xe
	add	r2, r4, #0
	bl	MenuPrint
.L206:
	add	r0, r7, #0
	add	r1, r6, #0
	bl	CopyItemName
	lsl	r5, r5, #0x3
	mov	r0, #0x1
	str	r0, [sp]
	add	r0, r6, #0
	mov	r1, #0x78
	add	r2, r5, #0
	mov	r3, #0x58
	bl	sub_8072A18
	add	r0, r7, #0
	bl	ItemId_GetPrice
	add	r4, r0, #0
	mov	r0, #0x1
	bl	GetPriceReduction
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	asr	r4, r4, r0
	add	r0, r6, #0
	add	r1, r4, #0
	mov	r2, #0x4
	bl	GetMoneyAmountText
	add	r0, r6, #0
	mov	r1, #0xc8
	add	r2, r5, #0
	mov	r3, #0x1
	bl	MenuPrint_PixelCoords
	add	sp, sp, #0xc
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L208:
	.align	2, 0
.L207:
	.word	gStringVar1
	.word	.LC107
	.word	sSelect
.Lfe33:
	.size	 sub_80B389C,.Lfe33-sub_80B389C
	.align	2, 0
	.globl	sub_80B3930
	.type	 sub_80B3930,function
	.thumb_func
sub_80B3930:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #0xfffffff4
	mov	r9, r2
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	lsl	r1, r1, #0x18
	lsr	r6, r1, #0x18
	ldr	r0, .L213
	mov	r8, r0
	ldr	r1, .L213+0x4
	add	r0, sp, #0x4
	mov	r2, #0x5
	bl	memcpy
	ldr	r0, .L213+0x8
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L210	@cond_branch
	mov	r0, #0xe
	mov	r1, #0x2
	mov	r2, #0xe
	mov	r3, #0x11
	bl	MenuFillWindowRectWithBlankTile
	add	r0, sp, #0x4
	mov	r1, #0xe
	add	r2, r6, #0
	bl	MenuPrint
.L210:
	lsl	r5, r5, #0x5
	ldr	r4, .L213+0xc
	add	r1, r5, r4
	mov	r0, r8
	bl	StringCopy
	lsl	r7, r6, #0x3
	mov	r0, #0x1
	str	r0, [sp]
	mov	r0, r8
	mov	r1, #0x78
	add	r2, r7, #0
	mov	r3, #0x58
	bl	sub_8072A18
	sub	r4, r4, #0x1
	add	r5, r5, r4
	ldrh	r1, [r5, #0x14]
	ldr	r0, .L213+0x10
	cmp	r1, r0
	bne	.L211	@cond_branch
	mov	r0, #0x19
	add	r1, r6, #0
	mov	r2, r9
	bl	sub_80B7B34
	b	.L212
.L214:
	.align	2, 0
.L213:
	.word	gStringVar1
	.word	.LC107
	.word	sSelect
	.word	gDecorations+0x1
	.word	0x2710
.L211:
	ldrh	r1, [r5, #0x14]
	mov	r0, r8
	mov	r2, #0x4
	bl	GetMoneyAmountText
	mov	r0, r8
	mov	r1, #0xca
	add	r2, r7, #0
	mov	r3, #0x1
	bl	MenuPrint_PixelCoords
.L212:
	add	sp, sp, #0xc
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe34:
	.size	 sub_80B3930,.Lfe34-sub_80B3930
	.align	2, 0
	.globl	sub_80B39D0
	.type	 sub_80B39D0,function
	.thumb_func
sub_80B39D0:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	add	r6, r1, #0
	add	r5, r2, #0
	mov	r0, #0x1
	bl	SetCustomFont
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	b	.L225
.L219:
	ldrb	r0, [r1, #0xc]
	cmp	r0, #0
	bne	.L221	@cond_branch
	ldrb	r0, [r1, #0xb]
	add	r0, r0, r4
	ldr	r1, [r1, #0x4]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrh	r0, [r0]
	lsl	r1, r4, #0x19
	mov	r2, #0x80
	lsl	r2, r2, #0x12
	add	r1, r1, r2
	lsr	r1, r1, #0x18
	add	r2, r5, #0
	bl	sub_80B389C
	b	.L218
.L221:
	ldrb	r0, [r1, #0xb]
	add	r0, r0, r4
	ldr	r1, [r1, #0x4]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrh	r0, [r0]
	lsl	r1, r4, #0x19
	mov	r2, #0x80
	lsl	r2, r2, #0x12
	add	r1, r1, r2
	lsr	r1, r1, #0x18
	add	r2, r5, #0
	bl	sub_80B3930
.L218:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
.L225:
	cmp	r4, r6
	bgt	.L217	@cond_branch
	ldr	r1, .L226
	ldrb	r0, [r1, #0xb]
	add	r0, r0, r4
	ldrb	r2, [r1, #0x8]
	cmp	r0, r2
	blt	.L219	@cond_branch
.L217:
	cmp	r4, #0x8
	beq	.L224	@cond_branch
	ldr	r1, .L226
	ldrb	r0, [r1, #0xb]
	add	r0, r0, r4
	ldrb	r1, [r1, #0x8]
	cmp	r0, r1
	bne	.L224	@cond_branch
	lsl	r3, r4, #0x1
	add	r4, r3, #0x2
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r3, r3, #0x3
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r0, #0xf
	add	r1, r4, #0
	mov	r2, #0x1c
	bl	MenuFillWindowRectWithBlankTile
	ldr	r0, .L226+0x4
	mov	r1, #0xf
	add	r2, r4, #0
	bl	MenuPrint
.L224:
	mov	r0, #0x0
	bl	SetCustomFont
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L227:
	.align	2, 0
.L226:
	.word	gMartInfo
	.word	gOtherText_CancelNoTerminator
.Lfe35:
	.size	 sub_80B39D0,.Lfe35-sub_80B39D0
	.align	2, 0
	.globl	sub_80B3A70
	.type	 sub_80B3A70,function
	.thumb_func
sub_80B3A70:
	push	{r4, lr}
	add	sp, sp, #0xfffffff8
	mov	r0, #0x1
	bl	SetCustomFont
	ldr	r2, .L234
	ldrb	r1, [r2, #0xb]
	ldrb	r0, [r2, #0x9]
	add	r0, r1, r0
	ldrb	r1, [r2, #0x8]
	cmp	r0, r1
	beq	.L229	@cond_branch
	ldrb	r4, [r2, #0xc]
	cmp	r4, #0
	bne	.L230	@cond_branch
	ldr	r1, [r2, #0x4]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrh	r0, [r0]
	bl	ItemId_GetDescription
	mov	r1, #0x30
	str	r1, [sp]
	str	r4, [sp, #0x4]
	b	.L233
.L235:
	.align	2, 0
.L234:
	.word	gMartInfo
.L230:
	ldr	r1, .L236
	ldr	r2, [r2, #0x4]
	lsl	r0, r0, #0x1
	add	r0, r0, r2
	ldrh	r0, [r0]
	lsl	r0, r0, #0x5
	add	r1, r1, #0x18
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	r1, #0x30
	str	r1, [sp]
	mov	r1, #0x0
	str	r1, [sp, #0x4]
.L233:
	mov	r1, #0x8
	mov	r2, #0x68
	mov	r3, #0x68
	bl	sub_8072AB0
	b	.L232
.L237:
	.align	2, 0
.L236:
	.word	gDecorations
.L229:
	ldr	r0, .L238
	mov	r1, #0x30
	str	r1, [sp]
	mov	r1, #0x0
	str	r1, [sp, #0x4]
	mov	r1, #0x8
	mov	r2, #0x68
	mov	r3, #0x68
	bl	sub_8072AB0
.L232:
	mov	r0, #0x0
	bl	SetCustomFont
	add	sp, sp, #0x8
	pop	{r4}
	pop	{r0}
	bx	r0
.L239:
	.align	2, 0
.L238:
	.word	gOtherText_QuitShopping
.Lfe36:
	.size	 sub_80B3A70,.Lfe36-sub_80B3A70
	.align	2, 0
	.globl	sub_80B3AEC
	.type	 sub_80B3AEC,function
	.thumb_func
sub_80B3AEC:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r0, .L245
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L242	@cond_branch
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L241	@cond_branch
.L242:
	ldr	r4, .L245+0x4
	ldrb	r1, [r4, #0x9]
	add	r0, r1, #0
	mov	r2, #0x0
	bl	sub_80B39D0
	mov	r0, #0x5
	bl	PlaySE
	ldrb	r0, [r4, #0xb]
	ldrb	r1, [r4, #0x9]
	add	r0, r0, r1
	ldr	r1, [r4, #0x4]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrh	r0, [r0]
	cmp	r0, #0x4
	bne	.L243	@cond_branch
	ldr	r0, .L245+0x8
	lsl	r1, r5, #0x2
	add	r1, r1, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r2, #0xa
	ldrsh	r0, [r1, r2]
	cmp	r0, #0x9
	ble	.L243	@cond_branch
	mov	r0, #0xc
	mov	r1, #0x1
	bl	AddBagItem
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L243	@cond_branch
	ldr	r1, .L245+0xc
	ldr	r2, .L245+0x10
	ldr	r3, .L245+0x14
	add	r0, r5, #0
	bl	DisplayItemMessageOnField
	b	.L241
.L246:
	.align	2, 0
.L245:
	.word	gMain
	.word	gMartInfo
	.word	gTasks
	.word	gOtherText_FreePremierBall
	.word	sub_80B4378
	.word	0xc3e1
.L243:
	add	r0, r5, #0
	bl	sub_80B4378
.L241:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe37:
	.size	 sub_80B3AEC,.Lfe37-sub_80B3AEC
	.align	2, 0
	.globl	sub_80B3B80
	.type	 sub_80B3B80,function
	.thumb_func
sub_80B3B80:
	push	{r4, r5, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x26
	bl	IncrementGameStat
	ldr	r5, .L248
	ldr	r0, .L248+0x4
	ldr	r1, [r0]
	add	r0, r5, #0
	bl	RemoveMoney
	mov	r0, #0x5f
	bl	PlaySE
	ldr	r0, [r5]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	UpdateMoneyWindow
	ldr	r1, .L248+0x8
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L248+0xc
	str	r1, [r0]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L249:
	.align	2, 0
.L248:
	.word	gSaveBlock1+0x490
	.word	gMartTotalCost
	.word	gTasks
	.word	sub_80B3AEC
.Lfe38:
	.size	 sub_80B3B80,.Lfe38-sub_80B3B80
	.align	2, 0
	.globl	sub_80B3BD0
	.type	 sub_80B3BD0,function
	.thumb_func
sub_80B3BD0:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L251
	ldrb	r1, [r0, #0x9]
	add	r0, r1, #0
	mov	r2, #0x0
	bl	sub_80B39D0
	add	r0, r4, #0
	bl	sub_80B4378
	pop	{r4}
	pop	{r0}
	bx	r0
.L252:
	.align	2, 0
.L251:
	.word	gMartInfo
.Lfe39:
	.size	 sub_80B3BD0,.Lfe39-sub_80B3BD0
	.align	2, 0
	.globl	sub_80B3BF4
	.type	 sub_80B3BF4,function
	.thumb_func
sub_80B3BF4:
	push	{r4, r5, lr}
	add	sp, sp, #0xfffffff8
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r0, #0x7
	mov	r1, #0x8
	mov	r2, #0xd
	mov	r3, #0xd
	bl	MenuZeroFillWindowRect
	ldr	r0, .L266
	mov	r1, #0x4
	str	r1, [sp]
	mov	r1, #0x0
	str	r1, [sp, #0x4]
	mov	r1, #0x8
	mov	r2, #0x9
	mov	r3, #0x5
	bl	sub_80A3FA0
	bl	sub_80B379C
	bl	sub_80B3420
	ldr	r0, .L266+0x4
	mov	r1, #0x92
	lsl	r1, r1, #0x3
	add	r0, r0, r1
	ldr	r0, [r0]
	ldr	r1, .L266+0x8
	ldr	r1, [r1]
	bl	IsEnoughMoney
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L254	@cond_branch
	ldr	r4, .L266+0xc
	ldrb	r0, [r4, #0xc]
	cmp	r0, #0
	bne	.L255	@cond_branch
	ldrb	r0, [r4, #0xb]
	ldrb	r1, [r4, #0x9]
	add	r0, r0, r1
	ldr	r1, [r4, #0x4]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrh	r0, [r0]
	ldr	r2, .L266+0x10
	lsl	r1, r5, #0x2
	add	r1, r1, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldrh	r1, [r1, #0xa]
	bl	AddBagItem
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L256	@cond_branch
	ldr	r1, .L266+0x14
	ldr	r2, .L266+0x18
	ldr	r3, .L266+0x1c
	add	r0, r5, #0
	bl	DisplayItemMessageOnField
	add	r0, r5, #0
	bl	sub_80B4470
	b	.L263
.L267:
	.align	2, 0
.L266:
	.word	gBGTilemapBuffers+0x800
	.word	gSaveBlock1
	.word	gMartTotalCost
	.word	gMartInfo
	.word	gTasks
	.word	gOtherText_HereYouGo
	.word	sub_80B3B80
	.word	0xc3e1
.L256:
	ldr	r1, .L268
	ldr	r2, .L268+0x4
	b	.L264
.L269:
	.align	2, 0
.L268:
	.word	gOtherText_NoRoomFor
	.word	sub_80B3BD0
.L255:
	ldrb	r0, [r4, #0xb]
	ldrb	r1, [r4, #0x9]
	add	r0, r0, r1
	ldr	r1, [r4, #0x4]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrb	r0, [r0]
	bl	IsThereStorageSpaceForDecoration
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L259	@cond_branch
	ldrb	r0, [r4, #0xc]
	cmp	r0, #0x1
	bne	.L260	@cond_branch
	ldr	r1, .L270
	b	.L265
.L271:
	.align	2, 0
.L270:
	.word	gOtherText_HereYouGo2
.L260:
	ldr	r1, .L272
.L265:
	ldr	r2, .L272+0x4
.L264:
	ldr	r3, .L272+0x8
	add	r0, r5, #0
	bl	DisplayItemMessageOnField
	b	.L263
.L273:
	.align	2, 0
.L272:
	.word	gOtherText_HereYouGo3
	.word	sub_80B3B80
	.word	0xc3e1
.L259:
	ldr	r4, .L274
	ldr	r1, .L274+0x4
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	ldr	r2, .L274+0x8
	ldr	r3, .L274+0xc
	add	r0, r5, #0
	add	r1, r4, #0
	bl	DisplayItemMessageOnField
	b	.L263
.L275:
	.align	2, 0
.L274:
	.word	gStringVar4
	.word	gOtherText_SpaceForIsFull
	.word	sub_80B3BD0
	.word	0xc3e1
.L254:
	ldr	r1, .L276
	ldr	r2, .L276+0x4
	ldr	r3, .L276+0x8
	add	r0, r5, #0
	bl	DisplayItemMessageOnField
.L263:
	add	sp, sp, #0x8
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L277:
	.align	2, 0
.L276:
	.word	gOtherText_NotEnoughMoney
	.word	sub_80B3BD0
	.word	0xc3e1
.Lfe40:
	.size	 sub_80B3BF4,.Lfe40-sub_80B3BF4
	.align	2, 0
	.globl	sub_80B3D38
	.type	 sub_80B3D38,function
	.thumb_func
sub_80B3D38:
	push	{r4, lr}
	add	sp, sp, #0xfffffff8
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x7
	mov	r1, #0x8
	mov	r2, #0x1
	bl	DisplayYesNoMenu
	ldr	r0, .L279
	mov	r1, #0x4
	str	r1, [sp]
	ldr	r1, .L279+0x4
	str	r1, [sp, #0x4]
	mov	r1, #0x8
	mov	r2, #0x9
	mov	r3, #0x5
	bl	sub_80A3FA0
	ldr	r1, .L279+0x8
	add	r0, r4, #0
	bl	DoYesNoFuncWithChoice
	add	sp, sp, #0x8
	pop	{r4}
	pop	{r0}
	bx	r0
.L280:
	.align	2, 0
.L279:
	.word	gBGTilemapBuffers+0x800
	.word	0xc3e1
	.word	gUnknown_083CC708
.Lfe41:
	.size	 sub_80B3D38,.Lfe41-sub_80B3D38
	.align	2, 0
	.globl	sub_80B3D7C
	.type	 sub_80B3D7C,function
	.thumb_func
sub_80B3D7C:
	push	{r4, lr}
	add	sp, sp, #0xfffffff8
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L282
	ldrb	r1, [r0, #0x9]
	add	r0, r1, #0
	mov	r2, #0x0
	bl	sub_80B39D0
	mov	r0, #0x7
	mov	r1, #0x8
	mov	r2, #0xd
	mov	r3, #0xd
	bl	MenuZeroFillWindowRect
	ldr	r0, .L282+0x4
	mov	r1, #0x4
	str	r1, [sp]
	mov	r1, #0x0
	str	r1, [sp, #0x4]
	mov	r1, #0x8
	mov	r2, #0x9
	mov	r3, #0x5
	bl	sub_80A3FA0
	add	r0, r4, #0
	bl	sub_80B4378
	add	sp, sp, #0x8
	pop	{r4}
	pop	{r0}
	bx	r0
.L283:
	.align	2, 0
.L282:
	.word	gMartInfo
	.word	gBGTilemapBuffers+0x800
.Lfe42:
	.size	 sub_80B3D7C,.Lfe42-sub_80B3D7C
	.align	2, 0
	.globl	sub_80B3DC8
	.type	 sub_80B3DC8,function
	.thumb_func
sub_80B3DC8:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #0xfffffff8
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	add	r4, r6, #0
	ldr	r7, .L289
	ldrb	r1, [r7, #0xd]
	add	r0, r6, #0
	bl	sub_80A52C4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L285	@cond_branch
	add	r0, r6, #0
	bl	sub_80B37F8
.L285:
	ldr	r1, .L289+0x4
	mov	r0, #0x0
	strb	r0, [r1]
	ldr	r0, .L289+0x8
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L286	@cond_branch
	ldr	r0, .L289+0xc
	mov	r8, r0
	ldrb	r0, [r7, #0xb]
	ldrb	r1, [r7, #0x9]
	add	r0, r0, r1
	ldr	r1, [r7, #0x4]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrh	r0, [r0]
	bl	ItemId_GetPrice
	add	r4, r0, #0
	mov	r0, #0x1
	bl	GetPriceReduction
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	asr	r4, r4, r0
	ldr	r0, .L289+0x10
	lsl	r5, r6, #0x2
	add	r5, r5, r6
	lsl	r5, r5, #0x3
	add	r5, r5, r0
	mov	r1, #0xa
	ldrsh	r0, [r5, r1]
	mul	r0, r0, r4
	mov	r2, r8
	str	r0, [r2]
	mov	r0, #0x0
	mov	r1, #0xa
	mov	r2, #0xd
	mov	r3, #0xd
	bl	MenuZeroFillWindowRect
	ldr	r0, .L289+0x14
	mov	r1, #0x2
	str	r1, [sp]
	mov	r1, #0x0
	str	r1, [sp, #0x4]
	mov	r1, #0x1
	mov	r2, #0xb
	mov	r3, #0xc
	bl	sub_80A3FA0
	bl	sub_80B379C
	bl	sub_80B3420
	ldrb	r0, [r7, #0xb]
	ldrb	r1, [r7, #0x9]
	add	r0, r0, r1
	ldr	r1, [r7, #0x4]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrh	r0, [r0]
	ldr	r1, .L289+0x18
	bl	CopyItemName
	ldr	r0, .L289+0x1c
	mov	r2, #0xa
	ldrsh	r1, [r5, r2]
	mov	r2, #0x0
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	ldr	r0, .L289+0x20
	mov	r2, r8
	ldr	r1, [r2]
	mov	r2, #0x0
	mov	r3, #0x8
	bl	ConvertIntToDecimalStringN
	ldr	r4, .L289+0x24
	ldr	r1, .L289+0x28
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	ldr	r2, .L289+0x2c
	ldr	r3, .L289+0x30
	add	r0, r6, #0
	add	r1, r4, #0
	bl	DisplayItemMessageOnField
	b	.L287
.L290:
	.align	2, 0
.L289:
	.word	gMartInfo
	.word	sSelect
	.word	gMain
	.word	gMartTotalCost
	.word	gTasks
	.word	gBGTilemapBuffers+0x800
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar3
	.word	gStringVar4
	.word	gOtherText_ThatWillBe
	.word	sub_80B3D38
	.word	0xc3e1
.L286:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L287	@cond_branch
	ldrb	r1, [r7, #0x9]
	add	r0, r1, #0
	mov	r2, #0x0
	bl	sub_80B39D0
	add	r0, r4, #0
	bl	sub_80B4378
.L287:
	add	sp, sp, #0x8
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe43:
	.size	 sub_80B3DC8,.Lfe43-sub_80B3DC8
	.align	2, 0
	.globl	sub_80B3EFC
	.type	 sub_80B3EFC,function
	.thumb_func
sub_80B3EFC:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r1, .L294
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r1, #0x1
	strh	r1, [r0, #0xa]
	mov	r0, #0x0
	mov	r1, #0xa
	mov	r2, #0xd
	mov	r3, #0xd
	bl	MenuDrawTextWindow
	add	r0, r5, #0
	bl	sub_80B37F8
	ldr	r6, .L294+0x4
	ldrb	r0, [r6, #0xb]
	ldrb	r1, [r6, #0x9]
	add	r0, r0, r1
	ldr	r1, [r6, #0x4]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrh	r0, [r0]
	bl	ItemId_GetPrice
	add	r4, r0, #0
	mov	r0, #0x1
	bl	GetPriceReduction
	ldr	r1, .L294+0x8
	mov	r2, #0x92
	lsl	r2, r2, #0x3
	add	r1, r1, r2
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	asr	r4, r4, r0
	ldr	r0, [r1]
	add	r1, r4, #0
	bl	__udivsi3
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x63
	bls	.L292	@cond_branch
	mov	r0, #0x63
.L292:
	strb	r0, [r6, #0xd]
	ldr	r0, .L294
	lsl	r1, r5, #0x2
	add	r1, r1, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L294+0xc
	str	r0, [r1]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L295:
	.align	2, 0
.L294:
	.word	gTasks
	.word	gMartInfo
	.word	gSaveBlock1
	.word	sub_80B3DC8
.Lfe44:
	.size	 sub_80B3EFC,.Lfe44-sub_80B3EFC
	.align	2, 0
	.globl	sub_80B3F88
	.type	 sub_80B3F88,function
	.thumb_func
sub_80B3F88:
	.syntax unified
    push {r4-r7,lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5-r7}
    sub sp, 0x4
    ldr r0, _080B4020 @ =gMenuWindow
    mov r8, r0
    ldr r1, [r0, 0x28]
    ldr r3, _080B4024 @ =0x000003de
    adds r1, r3
    adds r2, r1, 0
    adds r2, 0x80
    ldr r7, [r0, 0x24]
    mov r10, r7
    ldr r0, _080B4028 @ =0x000003ff
    mov r9, r0
    movs r6, 0xD
_080B3FAC:
    adds r3, r2, 0
    subs r3, 0x40
    str r3, [sp]
    movs r7, 0x40
    negs r7, r7
    adds r7, r1
    mov r12, r7
    adds r3, r2, 0
    adds r4, r1, 0
    movs r5, 0xE
_080B3FC0:
    ldrh r2, [r4]
    mov r1, r9
    ands r1, r2
    mov r7, r8
    ldrh r0, [r7, 0x1A]
    adds r0, 0x1
    cmp r1, r0
    ble _080B3FD4
    adds r0, r2, 0
    adds r0, 0x3C
_080B3FD4:
    strh r0, [r3]
    adds r3, 0x2
    adds r4, 0x2
    subs r5, 0x1
    cmp r5, 0
    bge _080B3FC0
    ldr r2, [sp]
    mov r1, r12
    subs r6, 0x1
    cmp r6, 0
    bge _080B3FAC
    ldr r1, _080B402C @ =0x00003a20
    add r1, r10
    movs r0, 0xF0
    lsls r0, 3
    adds r2, r1, r0
    ldr r3, _080B4030 @ =0x040000d4
    ldr r5, _080B4034 @ =0x800000f0
    ldr r4, _080B4038 @ =0xfffffc40
    movs r6, 0xD
_080B3FFC:
    str r1, [r3]
    str r2, [r3, 0x4]
    str r5, [r3, 0x8]
    ldr r0, [r3, 0x8]
    adds r2, r4
    adds r1, r4
    subs r6, 0x1
    cmp r6, 0
    bge _080B3FFC
    add sp, 0x4
    pop {r3-r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4-r7}
    pop {r0}
    bx r0
    .align 2, 0
_080B4020: .4byte gMenuWindow
_080B4024: .4byte 0x000003de
_080B4028: .4byte 0x000003ff
_080B402C: .4byte 0x00003a20
_080B4030: .4byte 0x040000d4
_080B4034: .4byte 0x800000f0
_080B4038: .4byte 0xfffffc40
    .syntax divided
	.code	16
.Lfe45:
	.size	 sub_80B3F88,.Lfe45-sub_80B3F88
	.align	2, 0
	.globl	sub_80B403C
	.type	 sub_80B403C,function
	.thumb_func
sub_80B403C:
	.syntax unified
    push {r4-r7,lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5-r7}
    sub sp, 0x4
    ldr r0, _080B40D8 @ =gMenuWindow
    mov r8, r0
    ldr r2, [r0, 0x28]
    adds r1, r2, 0
    adds r1, 0x9E
    adds r2, r1, 0
    adds r1, 0x80
    ldr r3, [r0, 0x24]
    mov r10, r3
    ldr r7, _080B40DC @ =0x000003ff
    mov r9, r7
    movs r6, 0xD
_080B4060:
    adds r0, r2, 0
    adds r0, 0x40
    str r0, [sp]
    movs r3, 0x40
    adds r3, r1
    mov r12, r3
    adds r3, r2, 0
    adds r4, r1, 0
    movs r5, 0xE
_080B4072:
    ldrh r2, [r4]
    mov r1, r9
    ands r1, r2
    mov r7, r8
    ldrh r0, [r7, 0x1A]
    adds r0, 0x1
    cmp r1, r0
    ble _080B4086
    adds r0, r2, 0
    subs r0, 0x3C
_080B4086:
    strh r0, [r3]
    adds r3, 0x2
    adds r4, 0x2
    subs r5, 0x1
    cmp r5, 0
    bge _080B4072
    ldr r2, [sp]
    mov r1, r12
    subs r6, 0x1
    cmp r6, 0
    bge _080B4060
    movs r1, 0x96
    lsls r1, 4
    add r1, r10
    adds r2, r1, 0
    movs r0, 0xF0
    lsls r0, 3
    adds r1, r0
    ldr r3, _080B40E0 @ =0x040000d4
    ldr r5, _080B40E4 @ =0x800000f0
    movs r4, 0xF0
    lsls r4, 2
    movs r6, 0xD
_080B40B4:
    str r1, [r3]
    str r2, [r3, 0x4]
    str r5, [r3, 0x8]
    ldr r0, [r3, 0x8]
    adds r2, r4
    adds r1, r4
    subs r6, 0x1
    cmp r6, 0
    bge _080B40B4
    add sp, 0x4
    pop {r3-r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4-r7}
    pop {r0}
    bx r0
    .align 2, 0
_080B40D8: .4byte gMenuWindow
_080B40DC: .4byte 0x000003ff
_080B40E0: .4byte 0x040000d4
_080B40E4: .4byte 0x800000f0
    .syntax divided
	.code	16
.Lfe46:
	.size	 sub_80B403C,.Lfe46-sub_80B403C
	.align	2, 0
	.globl	sub_80B40E8
	.type	 sub_80B40E8,function
	.thumb_func
sub_80B40E8:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	mov	r8, r7
	ldr	r0, .L327
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB3095
	b	.L298	@long jump
.LCB3095:
	ldr	r4, .L327+0x4
	strb	r0, [r4]
	ldr	r2, .L327+0x8
	ldrh	r0, [r2, #0x30]
	mov	r1, #0xf0
	and	r1, r1, r0
	cmp	r1, #0x40
	bne	.L300	@cond_branch
	ldr	r4, .L327+0xc
	ldrb	r0, [r4, #0x9]
	cmp	r0, #0
	bne	.L301	@cond_branch
	mov	r0, #0xe
	mov	r1, #0x4
	mov	r2, #0xe
	mov	r3, #0xf
	bl	MenuFillWindowRectWithBlankTile
	ldrb	r0, [r4, #0xb]
	cmp	r0, #0
	bne	.LCB3124
	b	.L298	@long jump
.LCB3124:
	mov	r0, #0x5
	bl	PlaySE
	ldrb	r0, [r4, #0xb]
	sub	r0, r0, #0x1
	strb	r0, [r4, #0xb]
	bl	sub_80B3F88
	mov	r0, #0x0
	mov	r1, #0x0
	b	.L324
.L328:
	.align	2, 0
.L327:
	.word	gPaletteFade
	.word	sSelect
	.word	gMain
	.word	gMartInfo
.L301:
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x1
	neg	r0, r0
	b	.L325
.L300:
	cmp	r1, #0x80
	bne	.L305	@cond_branch
	ldr	r4, .L329
	ldrb	r0, [r4, #0x9]
	cmp	r0, #0x7
	bne	.L306	@cond_branch
	mov	r0, #0xe
	mov	r1, #0x4
	mov	r2, #0xe
	mov	r3, #0xf
	bl	MenuFillWindowRectWithBlankTile
	ldrb	r0, [r4, #0xb]
	ldrb	r1, [r4, #0x9]
	add	r0, r0, r1
	ldrb	r1, [r4, #0x8]
	cmp	r0, r1
	bne	.LCB3176
	b	.L298	@long jump
.LCB3176:
	mov	r0, #0x5
	bl	PlaySE
	ldrb	r0, [r4, #0xb]
	add	r0, r0, #0x1
	strb	r0, [r4, #0xb]
	bl	sub_80B403C
	mov	r0, #0x7
	mov	r1, #0x7
.L324:
	mov	r2, #0x0
	bl	sub_80B39D0
	bl	sub_80B3A70
	bl	sub_80B32A4
	b	.L298
.L330:
	.align	2, 0
.L329:
	.word	gMartInfo
.L306:
	ldrb	r2, [r4, #0x8]
	cmp	r0, r2
	bne	.LCB3204
	b	.L298	@long jump
.LCB3204:
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x1
.L325:
	bl	MoveMenuCursor
	strb	r0, [r4, #0x9]
	bl	sub_80B3A70
	b	.L298
.L305:
	ldrh	r1, [r2, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	bne	.LCB3224
	b	.L311	@long jump
.LCB3224:
	mov	r0, #0x5
	bl	PlaySE
	ldr	r6, .L331
	ldrb	r0, [r6, #0xb]
	ldrb	r1, [r6, #0x9]
	add	r0, r0, r1
	ldrb	r1, [r6, #0x8]
	cmp	r0, r1
	bne	.LCB3235
	b	.L312	@long jump
.LCB3235:
	mov	r0, #0x1
	strb	r0, [r4]
	mov	r0, #0x0
	bl	PauseVerticalScrollIndicator
	mov	r0, #0x1
	bl	PauseVerticalScrollIndicator
	mov	r0, #0x1
	mov	r1, #0x1
	bl	sub_80F979C
	ldrb	r1, [r6, #0x9]
	add	r0, r1, #0
	mov	r2, #0x1
	bl	sub_80B39D0
	bl	HandleDestroyMenuCursors
	mov	r0, #0x0
	mov	r1, #0xc
	mov	r2, #0xd
	mov	r3, #0x13
	bl	MenuZeroFillWindowRect
	ldrb	r0, [r6, #0xc]
	cmp	r0, #0
	bne	.L313	@cond_branch
	ldr	r5, .L331+0x4
	ldrb	r0, [r6, #0xb]
	ldrb	r1, [r6, #0x9]
	add	r0, r0, r1
	ldr	r1, [r6, #0x4]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrh	r0, [r0]
	bl	ItemId_GetPrice
	add	r4, r0, #0
	mov	r0, #0x1
	bl	GetPriceReduction
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	asr	r4, r4, r0
	str	r4, [r5]
	ldr	r0, .L331+0x8
	mov	r2, #0x92
	lsl	r2, r2, #0x3
	add	r0, r0, r2
	ldr	r0, [r0]
	add	r1, r4, #0
	bl	IsEnoughMoney
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L326	@cond_branch
	ldrb	r0, [r6, #0xb]
	ldrb	r1, [r6, #0x9]
	add	r0, r0, r1
	ldr	r1, [r6, #0x4]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrh	r0, [r0]
	ldr	r1, .L331+0xc
	bl	CopyItemName
	ldr	r4, .L331+0x10
	ldr	r1, .L331+0x14
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	ldr	r2, .L331+0x18
	ldr	r3, .L331+0x1c
	add	r0, r7, #0
	add	r1, r4, #0
	bl	DisplayItemMessageOnField
	b	.L298
.L332:
	.align	2, 0
.L331:
	.word	gMartInfo
	.word	gMartTotalCost
	.word	gSaveBlock1
	.word	gStringVar1
	.word	gStringVar4
	.word	gOtherText_HowManyYouWant
	.word	sub_80B3EFC
	.word	0xc3e1
.L313:
	ldr	r5, .L333
	ldr	r4, .L333+0x4
	ldrb	r0, [r6, #0xb]
	ldrb	r1, [r6, #0x9]
	add	r0, r0, r1
	ldr	r1, [r6, #0x4]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrh	r0, [r0]
	lsl	r0, r0, #0x5
	add	r0, r0, r4
	ldrh	r1, [r0, #0x14]
	str	r1, [r5]
	ldr	r0, .L333+0x8
	mov	r2, #0x92
	lsl	r2, r2, #0x3
	add	r0, r0, r2
	ldr	r0, [r0]
	bl	IsEnoughMoney
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L317	@cond_branch
.L326:
	ldr	r1, .L333+0xc
	ldr	r2, .L333+0x10
	ldr	r3, .L333+0x14
	add	r0, r7, #0
	bl	DisplayItemMessageOnField
	b	.L298
.L334:
	.align	2, 0
.L333:
	.word	gMartTotalCost
	.word	gDecorations
	.word	gSaveBlock1
	.word	gOtherText_NotEnoughMoney
	.word	sub_80B3BD0
	.word	0xc3e1
.L317:
	ldr	r0, .L335
	ldrb	r1, [r6, #0xb]
	ldrb	r2, [r6, #0x9]
	add	r1, r1, r2
	ldr	r2, [r6, #0x4]
	lsl	r1, r1, #0x1
	add	r1, r1, r2
	ldrh	r1, [r1]
	lsl	r1, r1, #0x5
	add	r2, r4, #0x1
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, .L335+0x4
	ldr	r1, [r5]
	mov	r2, #0x0
	mov	r3, #0x8
	bl	ConvertIntToDecimalStringN
	ldrb	r0, [r6, #0xc]
	cmp	r0, #0x1
	bne	.L319	@cond_branch
	ldr	r0, .L335+0x8
	ldr	r1, .L335+0xc
	bl	StringExpandPlaceholders
	b	.L320
.L336:
	.align	2, 0
.L335:
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar4
	.word	gOtherText_ThatWillBe2
.L319:
	ldr	r0, .L337
	ldr	r1, .L337+0x4
	bl	StringExpandPlaceholders
.L320:
	ldr	r1, .L337
	ldr	r2, .L337+0x8
	ldr	r3, .L337+0xc
	mov	r0, r8
	bl	DisplayItemMessageOnField
	b	.L298
.L338:
	.align	2, 0
.L337:
	.word	gStringVar4
	.word	gOtherText_ThatWillBe3
	.word	sub_80B3D38
	.word	0xc3e1
.L312:
	add	r0, r7, #0
	bl	sub_80B43F0
	b	.L298
.L311:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L298	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, r8
	bl	sub_80B43F0
.L298:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe47:
	.size	 sub_80B40E8,.Lfe47-sub_80B40E8
	.align	2, 0
	.globl	sub_80B4378
	.type	 sub_80B4378,function
	.thumb_func
sub_80B4378:
	push	{r4, lr}
	add	sp, sp, #0xfffffff8
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x0
	mov	r1, #0xe
	mov	r2, #0x1d
	mov	r3, #0x13
	bl	MenuZeroFillWindowRect
	mov	r0, #0x0
	mov	r1, #0xa
	mov	r2, #0xd
	mov	r3, #0xd
	bl	MenuZeroFillWindowRect
	ldr	r0, .L340
	mov	r1, #0x2
	str	r1, [sp]
	mov	r1, #0x0
	str	r1, [sp, #0x4]
	mov	r1, #0x1
	mov	r2, #0xb
	mov	r3, #0xc
	bl	sub_80A3FA0
	bl	sub_80B3420
	mov	r0, #0x6
	mov	r1, #0x7
	bl	sub_80B3764
	bl	sub_80B37EC
	mov	r0, #0x0
	bl	StartVerticalScrollIndicators
	mov	r0, #0x1
	bl	StartVerticalScrollIndicators
	bl	sub_80B32A4
	ldr	r1, .L340+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L340+0x8
	str	r1, [r0]
	add	sp, sp, #0x8
	pop	{r4}
	pop	{r0}
	bx	r0
.L341:
	.align	2, 0
.L340:
	.word	gBGTilemapBuffers+0x800
	.word	gTasks
	.word	sub_80B40E8
.Lfe48:
	.size	 sub_80B4378,.Lfe48-sub_80B4378
	.align	2, 0
	.globl	sub_80B43F0
	.type	 sub_80B43F0,function
	.thumb_func
sub_80B43F0:
	push	{r4, lr}
	add	sp, sp, #0xfffffffc
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r1, .L343
	ldr	r0, .L343+0x4
	str	r0, [r1]
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r1, .L343+0x8
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L343+0xc
	str	r1, [r0]
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L344:
	.align	2, 0
.L343:
	.word	gFieldCallback
	.word	sub_80B3050
	.word	gTasks
	.word	Task_ExitBuyMenu
.Lfe49:
	.size	 sub_80B43F0,.Lfe49-sub_80B43F0
	.align	2, 0
	.globl	Task_ExitBuyMenu
	.type	 Task_ExitBuyMenu,function
	.thumb_func
Task_ExitBuyMenu:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L347
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L346	@cond_branch
	mov	r0, #0x0
	mov	r1, #0x0
	bl	CloseMoneyWindow
	bl	BuyMenuFreeMemory
	ldr	r0, .L347+0x4
	bl	SetMainCallback2
	add	r0, r4, #0
	bl	DestroyTask
.L346:
	pop	{r4}
	pop	{r0}
	bx	r0
.L348:
	.align	2, 0
.L347:
	.word	gPaletteFade
	.word	c2_exit_to_overworld_2_switch
.Lfe50:
	.size	 Task_ExitBuyMenu,.Lfe50-Task_ExitBuyMenu
	.align	2, 0
	.globl	sub_80B4470
	.type	 sub_80B4470,function
	.thumb_func
sub_80B4470:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r2, #0x0
	ldr	r0, .L359
	mov	ip, r0
	ldr	r6, .L359+0x4
	mov	r8, ip
	add	r4, r6, #0
	ldr	r1, .L359+0x8
	mov	r9, r1
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r7, r0, #0x3
.L353:
	lsl	r0, r2, #0x2
	mov	r1, r8
	add	r3, r0, r1
	ldrb	r0, [r4, #0xb]
	ldrb	r1, [r4, #0x9]
	add	r0, r0, r1
	ldr	r1, [r4, #0x4]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrh	r1, [r3]
	ldrh	r0, [r0]
	cmp	r1, r0
	bne	.L352	@cond_branch
	ldrh	r0, [r3, #0x2]
	cmp	r0, #0
	beq	.L352	@cond_branch
	add	r2, r0, #0
	mov	r4, r9
	add	r1, r7, r4
	mov	r4, #0xa
	ldrsh	r0, [r1, r4]
	add	r0, r2, r0
	cmp	r0, #0xff
	ble	.L355	@cond_branch
	mov	r0, #0xff
	strh	r0, [r3, #0x2]
	b	.L349
.L360:
	.align	2, 0
.L359:
	.word	gUnknown_02038724
	.word	gMartInfo
	.word	gTasks
.L355:
	ldrh	r0, [r1, #0xa]
	add	r0, r2, r0
	strh	r0, [r3, #0x2]
	b	.L349
.L352:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	cmp	r2, #0x2
	bls	.L353	@cond_branch
	ldr	r3, .L361
	ldrb	r0, [r3]
	cmp	r0, #0x2
	bhi	.L349	@cond_branch
	add	r2, r0, #0
	lsl	r2, r2, #0x2
	add	r2, r2, ip
	ldrb	r0, [r6, #0xb]
	ldrb	r1, [r6, #0x9]
	add	r0, r0, r1
	ldr	r1, [r6, #0x4]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrh	r0, [r0]
	strh	r0, [r2]
	ldrb	r1, [r3]
	lsl	r1, r1, #0x2
	add	r1, r1, ip
	ldr	r2, .L361+0x4
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r2
	ldrh	r0, [r0, #0xa]
	strh	r0, [r1, #0x2]
	ldrb	r0, [r3]
	add	r0, r0, #0x1
	strb	r0, [r3]
.L349:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L362:
	.align	2, 0
.L361:
	.word	gUnknown_02038730
	.word	gTasks
.Lfe51:
	.size	 sub_80B4470,.Lfe51-sub_80B4470
	.align	2, 0
	.globl	ClearItemPurchases
	.type	 ClearItemPurchases,function
	.thumb_func
ClearItemPurchases:
	push	{lr}
	ldr	r0, .L364
	mov	r1, #0x0
	strb	r1, [r0]
	ldr	r0, .L364+0x4
	mov	r1, #0x3
	bl	ClearItemSlots
	pop	{r0}
	bx	r0
.L365:
	.align	2, 0
.L364:
	.word	gUnknown_02038730
	.word	gUnknown_02038724
.Lfe52:
	.size	 ClearItemPurchases,.Lfe52-ClearItemPurchases
	.align	2, 0
	.globl	CreatePokemartMenu
	.type	 CreatePokemartMenu,function
	.thumb_func
CreatePokemartMenu:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r0, #0x0
	bl	CreateShopMenu
	add	r0, r4, #0
	bl	SetShopItemsForSale
	bl	ClearItemPurchases
	ldr	r0, .L367
	bl	SetShopMenuCallback
	pop	{r4}
	pop	{r0}
	bx	r0
.L368:
	.align	2, 0
.L367:
	.word	EnableBothScriptContexts
.Lfe53:
	.size	 CreatePokemartMenu,.Lfe53-CreatePokemartMenu
	.align	2, 0
	.globl	CreateDecorationShop1Menu
	.type	 CreateDecorationShop1Menu,function
	.thumb_func
CreateDecorationShop1Menu:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r0, #0x1
	bl	CreateShopMenu
	add	r0, r4, #0
	bl	SetShopItemsForSale
	ldr	r0, .L370
	bl	SetShopMenuCallback
	pop	{r4}
	pop	{r0}
	bx	r0
.L371:
	.align	2, 0
.L370:
	.word	EnableBothScriptContexts
.Lfe54:
	.size	 CreateDecorationShop1Menu,.Lfe54-CreateDecorationShop1Menu
	.align	2, 0
	.globl	CreateDecorationShop2Menu
	.type	 CreateDecorationShop2Menu,function
	.thumb_func
CreateDecorationShop2Menu:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r0, #0x2
	bl	CreateShopMenu
	add	r0, r4, #0
	bl	SetShopItemsForSale
	ldr	r0, .L373
	bl	SetShopMenuCallback
	pop	{r4}
	pop	{r0}
	bx	r0
.L374:
	.align	2, 0
.L373:
	.word	EnableBothScriptContexts
.Lfe55:
	.size	 CreateDecorationShop2Menu,.Lfe55-CreateDecorationShop2Menu
	.align	2, 0
	.globl	sub_80B45B4
	.type	 sub_80B45B4,function
	.thumb_func
sub_80B45B4:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #0xfffffff0
	mov	r9, r1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	mov	sl, r2
	ldr	r2, .L404
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldrh	r0, [r1, #0x10]
	sub	r0, r0, #0x1
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	ldrh	r0, [r1, #0x12]
	sub	r0, r0, #0x1
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	ldrh	r4, [r1, #0xa]
	mov	r2, #0xc
	ldrsh	r0, [r1, r2]
	cmp	r0, #0
	bne	.L376	@cond_branch
	mov	r2, #0x0
	lsl	r5, r5, #0x10
	str	r5, [sp, #0xc]
	lsl	r0, r3, #0x10
	lsl	r1, r4, #0x10
	asr	r0, r0, #0x10
	str	r0, [sp]
	asr	r1, r1, #0x10
	str	r1, [sp, #0x4]
	lsl	r0, r1, #0x1
	mov	r1, r9
	add	r7, r0, r1
.L380:
	mov	r4, #0x0
	lsl	r2, r2, #0x10
	mov	r8, r2
	asr	r0, r2, #0x10
	ldr	r2, [sp]
	add	r6, r2, r0
.L384:
	ldr	r0, [sp, #0xc]
	asr	r1, r0, #0x10
	lsl	r4, r4, #0x10
	asr	r0, r4, #0x10
	add	r5, r1, r0
	add	r0, r5, #0
	add	r1, r6, #0
	bl	MapGridGetMetatileIdAt
	mov	r2, #0x0
	ldrsh	r1, [r7, r2]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r1, r0
	bne	.L383	@cond_branch
	ldr	r0, [sp, #0x4]
	cmp	r0, #0x2
	beq	.L386	@cond_branch
	ldrh	r0, [r7, #0x2]
	mov	r2, sl
	orr	r2, r2, r0
	add	r0, r5, #0
	add	r1, r6, #0
	bl	MapGridSetMetatileIdAt
	b	.L383
.L405:
	.align	2, 0
.L404:
	.word	gTasks
.L386:
	mov	r1, r9
	ldrh	r0, [r1]
	mov	r2, sl
	orr	r2, r2, r0
	add	r0, r5, #0
	add	r1, r6, #0
	bl	MapGridSetMetatileIdAt
.L383:
	mov	r2, #0x80
	lsl	r2, r2, #0x9
	add	r0, r4, r2
	lsr	r4, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x2
	ble	.L384	@cond_branch
	add	r0, r2, #0
	add	r0, r0, r8
	lsr	r2, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x2
	ble	.L380	@cond_branch
	b	.L390
.L376:
	mov	r2, #0x0
	lsl	r5, r5, #0x10
	str	r5, [sp, #0xc]
	lsl	r0, r3, #0x10
	lsl	r1, r4, #0x10
	asr	r0, r0, #0x10
	str	r0, [sp, #0x8]
	asr	r7, r1, #0x10
.L394:
	mov	r4, #0x0
	lsl	r2, r2, #0x10
	mov	r8, r2
	asr	r0, r2, #0x10
	ldr	r1, [sp, #0x8]
	add	r6, r1, r0
.L398:
	ldr	r2, [sp, #0xc]
	asr	r1, r2, #0x10
	lsl	r4, r4, #0x10
	asr	r0, r4, #0x10
	add	r5, r1, r0
	add	r0, r5, #0
	add	r1, r6, #0
	bl	MapGridGetMetatileIdAt
	mov	r1, #0x2
	sub	r1, r1, r7
	lsl	r1, r1, #0x1
	add	r1, r1, r9
	mov	r2, #0x0
	ldrsh	r1, [r1, r2]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r1, r0
	bne	.L397	@cond_branch
	cmp	r7, #0x2
	beq	.L400	@cond_branch
	mov	r0, #0x1
	sub	r0, r0, r7
	lsl	r0, r0, #0x1
	add	r0, r0, r9
	ldrh	r0, [r0]
	mov	r2, sl
	orr	r2, r2, r0
	add	r0, r5, #0
	add	r1, r6, #0
	bl	MapGridSetMetatileIdAt
	b	.L397
.L400:
	mov	r1, r9
	ldrh	r0, [r1, #0x4]
	mov	r2, sl
	orr	r2, r2, r0
	add	r0, r5, #0
	add	r1, r6, #0
	bl	MapGridSetMetatileIdAt
.L397:
	mov	r2, #0x80
	lsl	r2, r2, #0x9
	add	r0, r4, r2
	lsr	r4, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x2
	ble	.L398	@cond_branch
	add	r0, r2, #0
	add	r0, r0, r8
	lsr	r2, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x2
	ble	.L394	@cond_branch
.L390:
	add	sp, sp, #0x10
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe56:
	.size	 sub_80B45B4,.Lfe56-sub_80B45B4
	.section .rodata
	.align	1, 0
	.type	 gUnknown_083CC714,object
gUnknown_083CC714:
	.short	0x284
	.short	0x282
	.short	0x280
	.size	 gUnknown_083CC714,6
	.align	1, 0
	.type	 gUnknown_083CC71A,object
gUnknown_083CC71A:
	.short	0x285
	.short	0x283
	.short	0x281
	.size	 gUnknown_083CC71A,6
	.align	1, 0
	.type	 gUnknown_083CC720,object
gUnknown_083CC720:
	.short	0x28c
	.short	0x28a
	.short	0x288
	.size	 gUnknown_083CC720,6
	.align	1, 0
	.type	 gUnknown_083CC726,object
gUnknown_083CC726:
	.short	0x28d
	.short	0x28b
	.short	0x289
	.size	 gUnknown_083CC726,6
	.align	1, 0
	.type	 gUnknown_083CC72C,object
gUnknown_083CC72C:
	.short	0x2a0
	.short	0x2a2
	.short	0x2a4
	.size	 gUnknown_083CC72C,6
	.align	1, 0
	.type	 gUnknown_083CC732,object
gUnknown_083CC732:
	.short	0x2a1
	.short	0x2a3
	.short	0x2a5
	.size	 gUnknown_083CC732,6
	.align	1, 0
	.type	 gUnknown_083CC738,object
gUnknown_083CC738:
	.short	0x2a8
	.short	0x2aa
	.short	0x2ac
	.size	 gUnknown_083CC738,6
.text
	.align	2, 0
	.globl	sub_80B4710
	.type	 sub_80B4710,function
	.thumb_func
sub_80B4710:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	lsl	r0, r3, #0x2
	add	r0, r0, r3
	lsl	r0, r0, #0x3
	ldr	r1, .L420
	add	r4, r0, r1
	mov	r0, #0x1
	strh	r0, [r4, #0x6]
	mov	r1, #0x0
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x6
	bhi	.L407	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L420+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L421:
	.align	2, 0
.L420:
	.word	gTasks+0x8
	.word	.L415
	.align	2, 0
	.align	2, 0
.L415:
	.word	.L408
	.word	.L409
	.word	.L410
	.word	.L411
	.word	.L412
	.word	.L413
	.word	.L414
.L408:
	ldr	r1, .L422
	b	.L418
.L423:
	.align	2, 0
.L422:
	.word	gUnknown_083CC714
.L409:
	ldr	r1, .L424
	b	.L418
.L425:
	.align	2, 0
.L424:
	.word	gUnknown_083CC71A
.L410:
	ldr	r1, .L426
	b	.L419
.L427:
	.align	2, 0
.L426:
	.word	gUnknown_083CC720
.L411:
	ldr	r1, .L428
	b	.L418
.L429:
	.align	2, 0
.L428:
	.word	gUnknown_083CC726
.L412:
	ldr	r1, .L430
.L419:
	mov	r2, #0xc0
	lsl	r2, r2, #0x4
	add	r0, r3, #0
	bl	sub_80B45B4
	b	.L407
.L431:
	.align	2, 0
.L430:
	.word	gUnknown_083CC72C
.L413:
	ldr	r1, .L432
.L418:
	add	r0, r3, #0
	mov	r2, #0x0
	bl	sub_80B45B4
	b	.L407
.L433:
	.align	2, 0
.L432:
	.word	gUnknown_083CC732
.L414:
	ldr	r1, .L434
	add	r0, r3, #0
	mov	r2, #0x0
	bl	sub_80B45B4
.L407:
	ldrh	r0, [r4]
	add	r0, r0, #0x1
	mov	r1, #0x7
	and	r0, r0, r1
	strh	r0, [r4]
	add	r5, r0, #0
	cmp	r5, #0
	bne	.L417	@cond_branch
	bl	DrawWholeMapView
	mov	r1, #0x2
	ldrsh	r0, [r4, r1]
	add	r0, r0, #0x1
	mov	r1, #0x3
	bl	__modsi3
	strh	r0, [r4, #0x2]
	strh	r5, [r4, #0x6]
.L417:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L435:
	.align	2, 0
.L434:
	.word	gUnknown_083CC738
.Lfe57:
	.size	 sub_80B4710,.Lfe57-sub_80B4710
	.align	2, 0
	.globl	sub_80B47D8
	.type	 sub_80B47D8,function
	.thumb_func
sub_80B47D8:
	push	{r4, r5, r6, r7, lr}
	add	r5, r0, #0
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	ldr	r6, .L437
	add	r0, r6, #0
	mov	r1, #0x0
	bl	CreateTask
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	ldr	r1, .L437+0x4
	add	r7, r0, r1
	add	r0, r7, #0
	add	r0, r0, #0x8
	add	r1, r7, #0
	add	r1, r1, #0xa
	bl	PlayerGetDestCoords
	mov	r0, #0x0
	strh	r0, [r7]
	strh	r0, [r7, #0x2]
	strh	r5, [r7, #0x4]
	add	r0, r4, #0
	bl	_call_via_r6
	add	r0, r4, #0
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L438:
	.align	2, 0
.L437:
	.word	sub_80B4710
	.word	gTasks+0x8
.Lfe58:
	.size	 sub_80B47D8,.Lfe58-sub_80B47D8
	.align	2, 0
	.globl	sub_80B4824
	.type	 sub_80B4824,function
	.thumb_func
sub_80B4824:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	sub_80B47D8
	ldr	r1, .L440
	strb	r0, [r1]
	pop	{r0}
	bx	r0
.L441:
	.align	2, 0
.L440:
	.word	gUnknown_02038731
.Lfe59:
	.size	 sub_80B4824,.Lfe59-sub_80B4824
	.align	2, 0
	.globl	sub_80B483C
	.type	 sub_80B483C,function
	.thumb_func
sub_80B483C:
	push	{lr}
	ldr	r0, .L443
	ldrb	r0, [r0]
	bl	DestroyTask
	pop	{r0}
	bx	r0
.L444:
	.align	2, 0
.L443:
	.word	gUnknown_02038731
.Lfe60:
	.size	 sub_80B483C,.Lfe60-sub_80B483C
	.align	2, 0
	.globl	sub_80B4850
	.type	 sub_80B4850,function
	.thumb_func
sub_80B4850:
	push	{lr}
	ldr	r2, .L449
	ldr	r0, .L449+0x4
	ldrb	r1, [r0]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r1, r0, r2
	mov	r2, #0xe
	ldrsh	r0, [r1, r2]
	cmp	r0, #0
	bne	.L446	@cond_branch
	mov	r2, #0xa
	ldrsh	r0, [r1, r2]
	cmp	r0, #0x2
	bne	.L446	@cond_branch
	mov	r0, #0x0
	b	.L448
.L450:
	.align	2, 0
.L449:
	.word	gTasks
	.word	gUnknown_02038731
.L446:
	mov	r0, #0x1
.L448:
	pop	{r1}
	bx	r1
.Lfe61:
	.size	 sub_80B4850,.Lfe61-sub_80B4850

	.lcomm	gMartInfo,16

	.lcomm	sSelect,1
.text
	.align	2, 0
