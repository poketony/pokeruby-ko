@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.globl	ConditionUpDownPalette
	.section .rodata
	.align	1, 0
	.type	 ConditionUpDownPalette,object
ConditionUpDownPalette:
	.short	0x7acf
	.short	0x3ff
	.short	0x1f
	.short	0x7c00
	.short	0x6f7b
	.short	0x6b5a
	.short	0x6739
	.short	0x6318
	.short	0x5ef7
	.short	0x5ad6
	.short	0x56b5
	.short	0x5294
	.short	0x4a52
	.short	0x4631
	.short	0x4210
	.short	0x0
	.size	 ConditionUpDownPalette,32
	.globl	ConditionUpDownTiles
	.type	 ConditionUpDownTiles,object
ConditionUpDownTiles:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x20
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x20
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x20
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x20
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x20
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x20
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x22
	.byte	0x2
	.byte	0x22
	.byte	0x22
	.byte	0x11
	.byte	0x2
	.byte	0x12
	.byte	0x21
	.byte	0x11
	.byte	0x2
	.byte	0x12
	.byte	0x21
	.byte	0x11
	.byte	0x2
	.byte	0x12
	.byte	0x21
	.byte	0x11
	.byte	0x2
	.byte	0x12
	.byte	0x21
	.byte	0x11
	.byte	0x2
	.byte	0x12
	.byte	0x21
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x12
	.byte	0x11
	.byte	0x11
	.byte	0x21
	.byte	0x12
	.byte	0x11
	.byte	0x11
	.byte	0x21
	.byte	0x12
	.byte	0x21
	.byte	0x12
	.byte	0x21
	.byte	0x12
	.byte	0x21
	.byte	0x12
	.byte	0x21
	.byte	0x12
	.byte	0x11
	.byte	0x11
	.byte	0x21
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x20
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x20
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x20
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x20
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x11
	.byte	0x2
	.byte	0x12
	.byte	0x21
	.byte	0x11
	.byte	0x22
	.byte	0x12
	.byte	0x21
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x21
	.byte	0x12
	.byte	0x11
	.byte	0x11
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x22
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x12
	.byte	0x11
	.byte	0x11
	.byte	0x21
	.byte	0x12
	.byte	0x21
	.byte	0x22
	.byte	0x22
	.byte	0x12
	.byte	0x21
	.byte	0x0
	.byte	0x0
	.byte	0x12
	.byte	0x21
	.byte	0x0
	.byte	0x0
	.byte	0x22
	.byte	0x22
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x0
	.byte	0x13
	.byte	0x11
	.byte	0x31
	.byte	0x33
	.byte	0x13
	.byte	0x11
	.byte	0x11
	.byte	0x33
	.byte	0x13
	.byte	0x31
	.byte	0x11
	.byte	0x33
	.byte	0x13
	.byte	0x31
	.byte	0x11
	.byte	0x33
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x33
	.byte	0x33
	.byte	0x3
	.byte	0x33
	.byte	0x13
	.byte	0x11
	.byte	0x33
	.byte	0x13
	.byte	0x11
	.byte	0x11
	.byte	0x31
	.byte	0x13
	.byte	0x11
	.byte	0x13
	.byte	0x31
	.byte	0x13
	.byte	0x11
	.byte	0x13
	.byte	0x31
	.byte	0x13
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x3
	.byte	0x33
	.byte	0x3
	.byte	0x33
	.byte	0x31
	.byte	0x11
	.byte	0x31
	.byte	0x11
	.byte	0x31
	.byte	0x11
	.byte	0x31
	.byte	0x11
	.byte	0x31
	.byte	0x11
	.byte	0x31
	.byte	0x11
	.byte	0x31
	.byte	0x11
	.byte	0x31
	.byte	0x11
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x33
	.byte	0x33
	.byte	0x30
	.byte	0x33
	.byte	0x13
	.byte	0x11
	.byte	0x13
	.byte	0x31
	.byte	0x13
	.byte	0x11
	.byte	0x13
	.byte	0x31
	.byte	0x13
	.byte	0x11
	.byte	0x13
	.byte	0x31
	.byte	0x13
	.byte	0x11
	.byte	0x13
	.byte	0x31
	.byte	0x13
	.byte	0x31
	.byte	0x11
	.byte	0x33
	.byte	0x13
	.byte	0x31
	.byte	0x11
	.byte	0x33
	.byte	0x13
	.byte	0x11
	.byte	0x11
	.byte	0x33
	.byte	0x13
	.byte	0x11
	.byte	0x31
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x11
	.byte	0x13
	.byte	0x31
	.byte	0x13
	.byte	0x11
	.byte	0x13
	.byte	0x31
	.byte	0x13
	.byte	0x11
	.byte	0x11
	.byte	0x31
	.byte	0x13
	.byte	0x13
	.byte	0x11
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x33
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x31
	.byte	0x11
	.byte	0x11
	.byte	0x11
	.byte	0x31
	.byte	0x11
	.byte	0x11
	.byte	0x13
	.byte	0x31
	.byte	0x11
	.byte	0x33
	.byte	0x33
	.byte	0x3
	.byte	0x33
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x13
	.byte	0x11
	.byte	0x11
	.byte	0x31
	.byte	0x13
	.byte	0x31
	.byte	0x11
	.byte	0x31
	.byte	0x13
	.byte	0x31
	.byte	0x11
	.byte	0x31
	.byte	0x13
	.byte	0x31
	.byte	0x11
	.byte	0x31
	.byte	0x33
	.byte	0x3
	.byte	0x33
	.byte	0x33
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.size	 ConditionUpDownTiles,512
	.align	2, 0
	.type	 sContestStatsMonData,object
sContestStatsMonData:
	.word	0x16
	.word	0x2f
	.word	0x21
	.word	0x18
	.word	0x17
	.size	 sContestStatsMonData,20
	.type	 gUnknown_0840612C,object
gUnknown_0840612C:
	.byte	0x0
	.byte	0x4
	.byte	0x3
	.byte	0x2
	.byte	0x1
	.size	 gUnknown_0840612C,5
	.align	2, 0
	.type	 sContextStatNames,object
sContextStatNames:
	.word	OtherText_Coolness
	.word	OtherText_Toughness
	.word	OtherText_Smartness
	.word	OtherText_Cuteness
	.word	OtherText_Beauty
	.size	 sContextStatNames,20
	.align	2, 0
	.type	 gSpriteSheet_ConditionUpDown,object
	.size	 gSpriteSheet_ConditionUpDown,8
gSpriteSheet_ConditionUpDown:
	.word	ConditionUpDownTiles
	.short	0x200
	.short	0x0
	.align	2, 0
	.type	 gSpritePalette_ConditionUpDown,object
	.size	 gSpritePalette_ConditionUpDown,8
gSpritePalette_ConditionUpDown:
	.word	ConditionUpDownPalette
	.short	0x0
	.space	2
	.align	1, 0
	.type	 gUnknown_08406158,object
gUnknown_08406158:
	.short	0x9c
	.short	0x1e
	.short	0x75
	.short	0x35
	.short	0x75
	.short	0x70
	.short	0xc5
	.short	0x70
	.short	0xc5
	.short	0x35
	.size	 gUnknown_08406158,20
	.align	2, 0
	.type	 gOamData_840616C,object
	.size	 gOamData_840616C,8
gOamData_840616C:
	.space	1
	.byte	0x40
	.space	1
	.byte	0x80
	.space	1
	.byte	0x4
	.space	2
	.align	2, 0
	.type	 gSpriteAnim_8406174,object
gSpriteAnim_8406174:
	.short	0x0
	.byte	0x5
	.space	1
	.short	0xffffffff
	.space	2
	.size	 gSpriteAnim_8406174,8
	.align	2, 0
	.type	 gSpriteAnim_840617C,object
gSpriteAnim_840617C:
	.short	0x8
	.byte	0x5
	.space	1
	.short	0xffffffff
	.space	2
	.size	 gSpriteAnim_840617C,8
	.align	2, 0
	.type	 gSpriteAnimTable_8406184,object
gSpriteAnimTable_8406184:
	.word	gSpriteAnim_8406174
	.word	gSpriteAnim_840617C
	.size	 gSpriteAnimTable_8406184,8
	.align	2, 0
	.type	 gSpriteTemplate_840618C,object
	.size	 gSpriteTemplate_840618C,24
gSpriteTemplate_840618C:
	.short	0x0
	.short	0x0
	.word	gOamData_840616C
	.word	gSpriteAnimTable_8406184
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.section ewram_data,"aw"
	.align	2, 0
	.type	 gUnknown_02039304,object
	.size	 gUnknown_02039304,4
gUnknown_02039304:
	.word	0x0
	.align	2, 0
	.type	 gUnknown_02039308,object
	.size	 gUnknown_02039308,4
gUnknown_02039308:
	.word	0x0
	.align	2, 0
	.type	 gUnknown_0203930C,object
	.size	 gUnknown_0203930C,4
gUnknown_0203930C:
	.word	0x0
	.globl	gPokeblockMonID
	.type	 gPokeblockMonID,object
	.size	 gPokeblockMonID,1
gPokeblockMonID:
	.byte	0x0
	.globl	gPokeblockGain
	.align	1, 0
	.type	 gPokeblockGain,object
	.size	 gPokeblockGain,2
gPokeblockGain:
	.short	0x0
.text
	.align	2, 0
	.globl	sub_8136130
	.type	 sub_8136130,function
	.thumb_func
sub_8136130:
	push	{r4, r5, lr}
	ldr	r4, .L3
	ldr	r2, .L3+0x4
	ldr	r3, [r2]
	ldr	r5, .L3+0x8
	add	r2, r3, r5
	str	r2, [r4]
	str	r0, [r2, #0x8]
	str	r1, [r2, #0x4]
	ldr	r0, .L3+0xc
	add	r3, r3, r0
	mov	r0, #0x2
	strb	r0, [r3]
	ldr	r0, .L3+0x10
	bl	launch_c3_walk_stairs_and_run_once
	ldr	r0, .L3+0x14
	bl	SetMainCallback2
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L4:
	.align	2, 0
.L3:
	.word	gUnknown_02039304
	.word	gUnknown_083DFEC4
	.word	0xd164
	.word	0xd162
	.word	sub_8136294
	.word	sub_8136244
.Lfe1:
	.size	 sub_8136130,.Lfe1-sub_8136130
	.align	2, 0
	.type	 sub_8136174,function
	.thumb_func
sub_8136174:
	push	{r4, r5, lr}
	ldr	r5, .L7
	ldr	r1, [r5]
	ldr	r0, .L7+0x4
	ldr	r0, [r0]
	str	r0, [r1, #0x8]
	ldr	r0, .L7+0x8
	ldr	r0, [r0]
	str	r0, [r1, #0x4]
	ldr	r4, .L7+0xc
	ldrb	r0, [r4]
	bl	sub_81370E4
	strb	r0, [r4]
	ldr	r5, [r5]
	mov	r1, #0x0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	bls	.L6	@cond_branch
	mov	r1, #0x1
.L6:
	add	r0, r5, #0
	add	r0, r0, #0x56
	strb	r1, [r0]
	ldr	r0, .L7+0x10
	ldr	r0, [r0]
	ldr	r1, .L7+0x14
	add	r0, r0, r1
	mov	r1, #0x2
	strb	r1, [r0]
	ldr	r0, .L7+0x18
	bl	launch_c3_walk_stairs_and_run_once
	ldr	r0, .L7+0x1c
	bl	SetMainCallback2
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L8:
	.align	2, 0
.L7:
	.word	gUnknown_02039304
	.word	gUnknown_0203930C
	.word	gUnknown_02039308
	.word	gPokeblockMonID
	.word	gUnknown_083DFEC4
	.word	0xd162
	.word	sub_8136294
	.word	sub_81361E4
.Lfe2:
	.size	 sub_8136174,.Lfe2-sub_8136174
	.align	2, 0
	.type	 sub_81361E4,function
	.thumb_func
sub_81361E4:
	push	{r4, lr}
	ldr	r4, .L11
	ldr	r0, [r4]
	ldr	r0, [r0]
	bl	_call_via_r0
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	UpdatePaletteFade
	ldr	r4, [r4]
	ldr	r1, [r4]
	ldr	r0, .L11+0x4
	cmp	r1, r0
	bne	.L10	@cond_branch
	mov	r0, #0x80
	lsl	r0, r0, #0x13
	mov	r1, #0x0
	strh	r1, [r0]
	add	r0, r4, #0
	add	r0, r0, #0x50
	strb	r1, [r0]
	ldr	r0, .L11+0x8
	bl	SetMainCallback2
.L10:
	pop	{r4}
	pop	{r0}
	bx	r0
.L12:
	.align	2, 0
.L11:
	.word	gUnknown_02039304
	.word	sub_81365C8
	.word	sub_813622C
.Lfe3:
	.size	 sub_81361E4,.Lfe3-sub_81361E4
	.align	2, 0
	.type	 sub_813622C,function
	.thumb_func
sub_813622C:
	push	{lr}
	bl	sub_81368A4
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	UpdatePaletteFade
	pop	{r0}
	bx	r0
.Lfe4:
	.size	 sub_813622C,.Lfe4-sub_813622C
	.align	2, 0
	.type	 sub_8136244,function
	.thumb_func
sub_8136244:
	push	{lr}
	ldr	r0, .L15
	ldr	r0, [r0]
	ldr	r0, [r0]
	bl	_call_via_r0
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	UpdatePaletteFade
	pop	{r0}
	bx	r0
.L16:
	.align	2, 0
.L15:
	.word	gUnknown_02039304
.Lfe5:
	.size	 sub_8136244,.Lfe5-sub_8136244
	.align	2, 0
	.type	 sub_8136264,function
	.thumb_func
sub_8136264:
	push	{lr}
	bl	LoadOam
	bl	ProcessSpriteCopyRequests
	bl	TransferPlttBuffer
	mov	r0, #0x6
	bl	sub_80F5CDC
	bl	sub_8089668
	pop	{r0}
	bx	r0
.Lfe6:
	.size	 sub_8136264,.Lfe6-sub_8136264
	.align	2, 0
	.type	 launch_c3_walk_stairs_and_run_once,function
	.thumb_func
launch_c3_walk_stairs_and_run_once:
	ldr	r1, .L19
	ldr	r1, [r1]
	str	r0, [r1]
	add	r1, r1, #0x50
	mov	r0, #0x0
	strb	r0, [r1]
	bx	lr
.L20:
	.align	2, 0
.L19:
	.word	gUnknown_02039304
.Lfe7:
	.size	 launch_c3_walk_stairs_and_run_once,.Lfe7-launch_c3_walk_stairs_and_run_once
	.align	2, 0
	.type	 sub_8136294,function
	.thumb_func
sub_8136294:
	push	{r4, r5, lr}
	add	sp, sp, #0xfffffffc
	ldr	r1, .L57
	ldr	r0, [r1]
	add	r0, r0, #0x50
	ldrb	r0, [r0]
	add	r3, r1, #0
	cmp	r0, #0x16
	bls	.LCB229
	b	.L22	@long jump
.LCB229:
	lsl	r0, r0, #0x2
	ldr	r1, .L57+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L58:
	.align	2, 0
.L57:
	.word	gUnknown_02039304
	.word	.L53
	.align	2, 0
	.align	2, 0
.L53:
	.word	.L23
	.word	.L25
	.word	.L26
	.word	.L27
	.word	.L28
	.word	.L29
	.word	.L31
	.word	.L32
	.word	.L33
	.word	.L35
	.word	.L36
	.word	.L38
	.word	.L39
	.word	.L41
	.word	.L42
	.word	.L44
	.word	.L45
	.word	.L46
	.word	.L47
	.word	.L49
	.word	.L50
	.word	.L51
	.word	.L52
.L23:
	bl	is_c1_link_related_active
	ldr	r1, .L59
	ldr	r1, [r1]
	ldr	r2, .L59+0x4
	add	r1, r1, r2
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0
	beq	.LCB260
	b	.L22	@long jump
.LCB260:
	ldr	r4, .L59+0x8
	ldr	r0, [r4]
	add	r0, r0, #0x55
	strb	r1, [r0]
	ldr	r0, .L59+0xc
	bl	launch_c3_walk_stairs_and_run_once
	ldr	r1, [r4]
	b	.L55
.L60:
	.align	2, 0
.L59:
	.word	gUnknown_083DFEC4
	.word	0x6dac
	.word	gUnknown_02039304
	.word	sub_81365A0
.L25:
	bl	ResetSpriteData
	bl	FreeAllSpritePalettes
	b	.L56
.L26:
	mov	r0, #0x0
	bl	SetVBlankCallback
	b	.L56
.L27:
	ldr	r0, .L61
	bl	SetUpWindowConfig
	b	.L56
.L62:
	.align	2, 0
.L61:
	.word	gWindowConfig_81E7080
.L28:
	ldr	r0, .L63
	bl	MultistepInitMenuWindowBegin
	b	.L56
.L64:
	.align	2, 0
.L63:
	.word	gWindowConfig_81E7080
.L29:
	bl	MultistepInitMenuWindowContinue
	cmp	r0, #0
	bne	.LCB319
	b	.L22	@long jump
.LCB319:
	b	.L56
.L31:
	ldr	r0, .L65
	ldr	r1, [r0]
	ldr	r4, .L65+0x4
	add	r0, r1, r4
	mov	r2, #0x0
	strb	r2, [r0]
	ldr	r4, .L65+0x8
	add	r0, r1, r4
	str	r2, [r0]
	mov	r0, #0xc3
	lsl	r0, r0, #0x2
	add	r1, r1, r0
	mov	r0, #0x20
	strh	r0, [r1]
	ldr	r1, [r3]
	b	.L55
.L66:
	.align	2, 0
.L65:
	.word	gUnknown_083DFEC4
	.word	0x76aa
	.word	0x87e0
.L32:
	bl	sub_80F2688
	ldr	r0, .L67
	ldr	r1, [r0]
	add	r1, r1, #0x50
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
.L33:
	bl	sub_80F26BC
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB367
	b	.L22	@long jump
.LCB367:
	b	.L56
.L68:
	.align	2, 0
.L67:
	.word	gUnknown_02039304
.L35:
	mov	r0, #0x1
	bl	sub_80F2C80
	ldr	r0, .L69
	ldr	r1, [r0]
	add	r1, r1, #0x50
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
.L36:
	mov	r0, #0x1
	bl	sub_80F2CBC
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB393
	b	.L22	@long jump
.LCB393:
	b	.L56
.L70:
	.align	2, 0
.L69:
	.word	gUnknown_02039304
.L38:
	ldr	r1, .L71
	mov	r0, #0x14
	strh	r0, [r1]
	bl	CalculatePlayerPartyCount
	ldr	r1, .L71+0x4
	ldr	r4, [r1]
	ldr	r2, .L71+0x8
	add	r1, r4, r2
	mov	r5, #0x0
	strb	r0, [r1]
	ldr	r1, .L71+0xc
	add	r0, r4, r1
	strb	r5, [r0]
	sub	r2, r2, #0xc0
	add	r0, r4, r2
	str	r5, [r0]
	bl	sub_80F4BD0
	ldr	r0, .L71+0x10
	add	r4, r4, r0
	strh	r5, [r4]
	b	.L56
.L72:
	.align	2, 0
.L71:
	.word	gKeyRepeatStartDelay
	.word	gUnknown_083DFEC4
	.word	0x8828
	.word	0x9344
	.word	0xd160
.L39:
	bl	sub_80F1778
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB447
	b	.L22	@long jump
.LCB447:
	ldr	r0, .L73
	mov	r1, #0x6
	strh	r1, [r0]
	add	r0, r0, #0x4
	strh	r1, [r0]
	b	.L56
.L74:
	.align	2, 0
.L73:
	.word	0x400001a
.L41:
	mov	r0, #0x0
	bl	sub_80F2E18
	ldr	r0, .L75
	ldr	r0, [r0]
	ldr	r1, .L75+0x4
	add	r0, r0, r1
	ldr	r1, [r0]
	ldr	r0, .L75+0x8
	strh	r0, [r1, #0x26]
	b	.L56
.L76:
	.align	2, 0
.L75:
	.word	gUnknown_083DFEC4
	.word	0x8768
	.word	0xffd8
.L42:
	bl	sub_80F170C
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L22	@cond_branch
	b	.L56
.L44:
	bl	sub_80F33A8
	b	.L56
.L45:
	ldr	r1, .L77
	mov	r2, #0x0
	str	r2, [sp]
	ldr	r0, .L77+0x4
	mov	r4, sp
	str	r4, [r0]
	str	r1, [r0, #0x4]
	ldr	r1, .L77+0x8
	str	r1, [r0, #0x8]
	ldr	r0, [r0, #0x8]
	ldr	r0, .L77+0xc
	strh	r2, [r0]
	sub	r0, r0, #0x2
	strh	r2, [r0]
	ldr	r1, .L77+0x10
	mov	r2, #0xf8
	lsl	r2, r2, #0x5
	add	r0, r2, #0
	strh	r0, [r1]
	ldr	r1, [r3]
	b	.L55
.L78:
	.align	2, 0
.L77:
	.word	0x600f800
	.word	0x40000d4
	.word	0x85000200
	.word	0x4000016
	.word	0x400000a
.L46:
	ldr	r0, .L79
	ldr	r1, [r0]
	ldr	r4, .L79+0x4
	add	r0, r1, r4
	ldr	r2, .L79+0x8
	add	r1, r1, r2
	bl	sub_80F567C
	bl	sub_80F5B38
	b	.L56
.L80:
	.align	2, 0
.L79:
	.word	gUnknown_083DFEC4
	.word	0x8ff0
	.word	0x9004
.L47:
	bl	sub_80F5B50
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L22	@cond_branch
	b	.L56
.L49:
	ldr	r0, .L81
	ldr	r0, [r0]
	ldr	r4, .L81+0x4
	add	r0, r0, r4
	bl	sub_80F556C
	b	.L56
.L82:
	.align	2, 0
.L81:
	.word	gUnknown_083DFEC4
	.word	0x9004
.L50:
	bl	sub_80F1934
.L56:
	ldr	r0, .L83
	ldr	r1, [r0]
.L55:
	add	r1, r1, #0x50
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L22
.L84:
	.align	2, 0
.L83:
	.word	gUnknown_02039304
.L51:
	ldr	r1, .L85
	mov	r0, #0xf0
	strh	r0, [r1]
	add	r1, r1, #0x2
	mov	r0, #0x9b
	strh	r0, [r1]
	ldr	r0, .L85+0x4
	ldr	r2, .L85+0x8
	add	r1, r2, #0
	strh	r1, [r0]
	add	r0, r0, #0x2
	strh	r1, [r0]
	ldr	r1, .L85+0xc
	ldr	r4, .L85+0x10
	add	r0, r4, #0
	strh	r0, [r1]
	add	r1, r1, #0x2
	mov	r0, #0x1b
	strh	r0, [r1]
	sub	r1, r1, #0x38
	mov	r0, #0x28
	strh	r0, [r1]
	sub	r1, r1, #0x12
	ldr	r2, .L85+0x14
	add	r0, r2, #0
	strh	r0, [r1]
.L52:
	ldr	r0, [r3]
	add	r0, r0, #0x55
	mov	r1, #0x1
	strb	r1, [r0]
	ldr	r0, .L85+0x18
	bl	launch_c3_walk_stairs_and_run_once
.L22:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L86:
	.align	2, 0
.L85:
	.word	0x4000040
	.word	0x4000044
	.word	0x3273
	.word	0x4000048
	.word	0x3f3f
	.word	0x7f40
	.word	sub_81365C8
.Lfe8:
	.size	 sub_8136294,.Lfe8-sub_8136294
	.align	2, 0
	.type	 sub_81365A0,function
	.thumb_func
sub_81365A0:
	push	{r4, lr}
	ldr	r1, .L92
	ldr	r0, [r1]
	add	r0, r0, #0x55
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L89	@cond_branch
	add	r4, r1, #0
.L90:
	bl	sub_8136294
	ldr	r0, [r4]
	add	r0, r0, #0x55
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L90	@cond_branch
.L89:
	pop	{r4}
	pop	{r0}
	bx	r0
.L93:
	.align	2, 0
.L92:
	.word	gUnknown_02039304
.Lfe9:
	.size	 sub_81365A0,.Lfe9-sub_81365A0
	.align	2, 0
	.type	 sub_81365C8,function
	.thumb_func
sub_81365C8:
	push	{r4, lr}
	add	sp, sp, #0xfffffffc
	ldr	r4, .L101
	ldr	r0, [r4]
	add	r0, r0, #0x50
	ldrb	r1, [r0]
	cmp	r1, #0
	beq	.L96	@cond_branch
	cmp	r1, #0x1
	beq	.L97	@cond_branch
	b	.L95
.L102:
	.align	2, 0
.L101:
	.word	gUnknown_02039304
.L96:
	mov	r0, #0x1
	neg	r0, r0
	str	r1, [sp]
	mov	r1, #0x0
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	ldr	r0, .L103
	bl	SetVBlankCallback
	ldr	r1, [r4]
	add	r1, r1, #0x50
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L95
.L104:
	.align	2, 0
.L103:
	.word	sub_8136264
.L97:
	ldr	r0, .L105
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L95	@cond_branch
	bl	sub_80F3C94
	bl	sub_80F3D00
	ldr	r0, .L105+0x4
	bl	launch_c3_walk_stairs_and_run_once
.L95:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L106:
	.align	2, 0
.L105:
	.word	gPaletteFade
	.word	sub_8136638
.Lfe10:
	.size	 sub_81365C8,.Lfe10-sub_81365C8
	.align	2, 0
	.type	 sub_8136638,function
	.thumb_func
sub_8136638:
	push	{r4, lr}
	ldr	r0, .L143
	ldr	r0, [r0]
	add	r0, r0, #0x50
	ldrb	r0, [r0]
	cmp	r0, #0x7
	bls	.LCB795
	b	.L108	@long jump
.LCB795:
	lsl	r0, r0, #0x2
	ldr	r1, .L143+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L144:
	.align	2, 0
.L143:
	.word	gUnknown_02039304
	.word	.L138
	.align	2, 0
	.align	2, 0
.L138:
	.word	.L109
	.word	.L119
	.word	.L121
	.word	.L123
	.word	.L108
	.word	.L125
	.word	.L126
	.word	.L136
.L109:
	ldr	r2, .L145
	ldrh	r1, [r2, #0x2c]
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L110	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x1
	bl	sub_80F5060
	bl	move_anim_execute
	ldr	r0, .L145+0x4
	ldr	r0, [r0]
	add	r0, r0, #0x50
	mov	r1, #0x1
	b	.L140
.L146:
	.align	2, 0
.L145:
	.word	gMain
	.word	gUnknown_02039304
.L110:
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L112	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x0
	bl	sub_80F5060
	bl	move_anim_execute
	ldr	r0, .L147
	ldr	r0, [r0]
	add	r0, r0, #0x50
	mov	r1, #0x1
	b	.L140
.L148:
	.align	2, 0
.L147:
	.word	gUnknown_02039304
.L112:
	ldrh	r1, [r2, #0x2e]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L114	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L149
	ldr	r0, [r0]
	add	r0, r0, #0x50
	mov	r1, #0x3
	b	.L140
.L150:
	.align	2, 0
.L149:
	.word	gUnknown_02039304
.L114:
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	bne	.LCB896
	b	.L108	@long jump
.LCB896:
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L151
	ldr	r0, [r0]
	ldr	r2, .L151+0x4
	add	r1, r0, r2
	mov	r2, #0x0
	ldrsh	r1, [r1, r2]
	ldr	r2, .L151+0x8
	add	r0, r0, r2
	mov	r2, #0x0
	ldrsh	r0, [r0, r2]
	sub	r0, r0, #0x1
	cmp	r1, r0
	bne	.L117	@cond_branch
	ldr	r0, .L151+0xc
	ldr	r0, [r0]
	add	r0, r0, #0x50
	mov	r1, #0x3
	b	.L140
.L152:
	.align	2, 0
.L151:
	.word	gUnknown_083DFEC4
	.word	0x87dc
	.word	0x87da
	.word	gUnknown_02039304
.L117:
	ldr	r0, .L153
	ldr	r0, [r0]
	add	r0, r0, #0x50
	mov	r1, #0x5
	b	.L140
.L154:
	.align	2, 0
.L153:
	.word	gUnknown_02039304
.L119:
	bl	gpu_sync_bg_show
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L108	@cond_branch
	b	.L141
.L121:
	bl	sub_8055870
	add	r4, r0, #0
	cmp	r4, #0
	bne	.L108	@cond_branch
	bl	sub_80F1934
	bl	sub_80F3D00
	ldr	r0, .L155
	ldr	r0, [r0]
	add	r0, r0, #0x50
	strb	r4, [r0]
	b	.L108
.L156:
	.align	2, 0
.L155:
	.word	gUnknown_02039304
.L123:
	ldr	r0, .L157
	bl	launch_c3_walk_stairs_and_run_once
	b	.L108
.L158:
	.align	2, 0
.L157:
	.word	sub_8136B44
.L125:
	bl	sub_8136BB8
.L141:
	ldr	r0, .L159
	ldr	r1, [r0]
	add	r1, r1, #0x50
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L108
.L160:
	.align	2, 0
.L159:
	.word	gUnknown_02039304
.L126:
	bl	sub_8136C40
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L130	@cond_branch
	cmp	r1, #0
	bgt	.L135	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L142	@cond_branch
	b	.L108
.L135:
	cmp	r1, #0x1
	bne	.L108	@cond_branch
	b	.L142
.L130:
	bl	sub_8137058
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L131	@cond_branch
	bl	sub_8136D60
	ldr	r0, .L161
	ldr	r0, [r0]
	add	r0, r0, #0x50
	mov	r1, #0x7
	b	.L140
.L162:
	.align	2, 0
.L161:
	.word	gUnknown_02039304
.L131:
	ldr	r0, .L163
	bl	launch_c3_walk_stairs_and_run_once
	b	.L108
.L164:
	.align	2, 0
.L163:
	.word	sub_8136808
.L136:
	ldr	r0, .L165
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L108	@cond_branch
	bl	sub_8136D8C
.L142:
	ldr	r0, .L165+0x4
	ldr	r0, [r0]
	add	r0, r0, #0x50
	mov	r1, #0x0
.L140:
	strb	r1, [r0]
.L108:
	pop	{r4}
	pop	{r0}
	bx	r0
.L166:
	.align	2, 0
.L165:
	.word	gMain
	.word	gUnknown_02039304
.Lfe11:
	.size	 sub_8136638,.Lfe11-sub_8136638
	.align	2, 0
	.type	 sub_8136808,function
	.thumb_func
sub_8136808:
	push	{r4, r5, lr}
	add	sp, sp, #0xfffffffc
	ldr	r5, .L174
	ldr	r0, [r5]
	add	r0, r0, #0x50
	ldrb	r4, [r0]
	cmp	r4, #0
	beq	.L169	@cond_branch
	cmp	r4, #0x1
	beq	.L170	@cond_branch
	b	.L168
.L175:
	.align	2, 0
.L174:
	.word	gUnknown_02039304
.L169:
	ldr	r0, .L176
	ldr	r0, [r0]
	ldr	r1, .L176+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	bl	sub_81370A4
	ldr	r1, .L176+0x8
	strb	r0, [r1]
	ldr	r1, .L176+0xc
	ldr	r2, [r5]
	ldr	r0, [r2, #0x4]
	str	r0, [r1]
	ldr	r1, .L176+0x10
	ldr	r0, [r2, #0x8]
	str	r0, [r1]
	mov	r0, #0x1
	neg	r0, r0
	str	r4, [sp]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r1, [r5]
	add	r1, r1, #0x50
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L168
.L177:
	.align	2, 0
.L176:
	.word	gUnknown_083DFEC4
	.word	0x87dc
	.word	gPokeblockMonID
	.word	gUnknown_02039308
	.word	gUnknown_0203930C
.L170:
	ldr	r0, .L178
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L168	@cond_branch
	ldr	r0, .L178+0x4
	ldr	r1, .L178+0x8
	str	r1, [r0, #0x8]
	ldr	r0, .L178+0xc
	bl	SetMainCallback2
.L168:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L179:
	.align	2, 0
.L178:
	.word	gPaletteFade
	.word	gMain
	.word	sub_8136174
	.word	CB2_PreparePokeblockFeedScene
.Lfe12:
	.size	 sub_8136808,.Lfe12-sub_8136808
	.align	2, 0
	.type	 sub_81368A4,function
	.thumb_func
sub_81368A4:
	push	{r4, lr}
	add	sp, sp, #0xfffffffc
	ldr	r1, .L198
	ldr	r0, [r1]
	add	r0, r0, #0x50
	ldrb	r0, [r0]
	add	r4, r1, #0
	cmp	r0, #0x6
	bls	.LCB1205
	b	.L181	@long jump
.LCB1205:
	lsl	r0, r0, #0x2
	ldr	r1, .L198+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L199:
	.align	2, 0
.L198:
	.word	gUnknown_02039304
	.word	.L194
	.align	2, 0
	.align	2, 0
.L194:
	.word	.L182
	.word	.L185
	.word	.L187
	.word	.L189
	.word	.L190
	.word	.L191
	.word	.L192
.L182:
	ldr	r0, .L200
	ldr	r0, [r0]
	ldr	r1, .L200+0x4
	add	r0, r0, r1
	mov	r2, #0x0
	ldrsh	r1, [r0, r2]
	ldr	r0, .L200+0x8
	ldrb	r0, [r0]
	cmp	r1, r0
	beq	.L183	@cond_branch
	ldr	r0, [r4]
	add	r0, r0, #0x56
	ldrb	r0, [r0]
	bl	sub_80F5060
	ldr	r1, [r4]
	b	.L196
.L201:
	.align	2, 0
.L200:
	.word	gUnknown_083DFEC4
	.word	0x87dc
	.word	gPokeblockMonID
.L183:
	ldr	r0, [r4]
	add	r0, r0, #0x50
	mov	r1, #0x3
	strb	r1, [r0]
	b	.L181
.L185:
	bl	gpu_sync_bg_show
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L181	@cond_branch
	b	.L197
.L187:
	bl	sub_8055870
	add	r4, r0, #0
	cmp	r4, #0
	bne	.L181	@cond_branch
	bl	sub_80F1934
	ldr	r0, .L202
	ldr	r0, [r0]
	add	r0, r0, #0x50
	strb	r4, [r0]
	b	.L181
.L203:
	.align	2, 0
.L202:
	.word	gUnknown_02039304
.L189:
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x10
	mov	r2, #0x0
	bl	BlendPalettes
	b	.L197
.L190:
	mov	r1, #0x80
	lsl	r1, r1, #0x13
	ldr	r2, .L204
	add	r0, r2, #0
	strh	r0, [r1]
	ldr	r1, [r4]
	b	.L196
.L205:
	.align	2, 0
.L204:
	.word	0x7f40
.L191:
	ldr	r0, .L206
	bl	SetVBlankCallback
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
.L197:
	ldr	r0, .L206+0x4
	ldr	r1, [r0]
.L196:
	add	r1, r1, #0x50
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L181
.L207:
	.align	2, 0
.L206:
	.word	sub_8136264
	.word	gUnknown_02039304
.L192:
	ldr	r0, .L208
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L181	@cond_branch
	bl	sub_80F3C94
	bl	sub_80F3D00
	ldr	r0, .L208+0x4
	bl	launch_c3_walk_stairs_and_run_once
	ldr	r0, .L208+0x8
	bl	SetMainCallback2
.L181:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L209:
	.align	2, 0
.L208:
	.word	gPaletteFade
	.word	sub_81369CC
	.word	sub_8136244
.Lfe13:
	.size	 sub_81368A4,.Lfe13-sub_81368A4
	.align	2, 0
	.type	 sub_81369CC,function
	.thumb_func
sub_81369CC:
	push	{r4, r5, r6, lr}
	ldr	r1, .L226
	ldr	r0, [r1]
	add	r0, r0, #0x50
	ldrb	r0, [r0]
	add	r4, r1, #0
	cmp	r0, #0x5
	bls	.LCB1392
	b	.L211	@long jump
.LCB1392:
	lsl	r0, r0, #0x2
	ldr	r1, .L226+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L227:
	.align	2, 0
.L226:
	.word	gUnknown_02039304
	.word	.L222
	.align	2, 0
	.align	2, 0
.L222:
	.word	.L212
	.word	.L213
	.word	.L215
	.word	.L216
	.word	.L218
	.word	.L220
.L212:
	ldr	r3, [r4]
	ldr	r2, .L228
	str	r2, [r3, #0xc]
	ldr	r0, .L228+0x4
	ldr	r1, [r0]
	ldr	r5, .L228+0x8
	add	r0, r1, r5
	mov	r5, #0x0
	ldrsh	r0, [r0, r5]
	lsl	r0, r0, #0x2
	add	r1, r1, r0
	ldr	r0, .L228+0xc
	add	r1, r1, r0
	ldrb	r0, [r1]
	lsl	r0, r0, #0x1b
	lsr	r0, r0, #0x1b
	mov	r1, #0x64
	mul	r0, r0, r1
	add	r0, r0, r2
	str	r0, [r3, #0xc]
	bl	move_anim_execute
	b	.L224
.L229:
	.align	2, 0
.L228:
	.word	gPlayerParty
	.word	gUnknown_083DFEC4
	.word	0x87dc
	.word	0x893e
.L213:
	ldr	r0, .L230
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L211	@cond_branch
	b	.L224
.L231:
	.align	2, 0
.L230:
	.word	gMain
.L215:
	bl	sub_8136EF0
	ldr	r6, .L232
	ldr	r0, [r6]
	add	r0, r0, #0x5c
	ldr	r1, .L232+0x4
	ldr	r4, [r1]
	ldr	r1, .L232+0x8
	add	r5, r4, r1
	add	r1, r5, #0
	bl	sub_80F567C
	ldr	r1, .L232+0xc
	add	r0, r4, r1
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L232+0x10
	add	r0, r0, r1
	add	r4, r4, r0
	add	r0, r4, #0
	add	r1, r5, #0
	bl	sub_80F5550
	bl	sub_8137138
	ldr	r1, [r6]
	b	.L225
.L233:
	.align	2, 0
.L232:
	.word	gUnknown_02039304
	.word	gUnknown_083DFEC4
	.word	0x9040
	.word	0x8fe9
	.word	0x9004
.L216:
	bl	sub_80F555C
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0
	bne	.L211	@cond_branch
	ldr	r0, .L234
	ldr	r0, [r0]
	ldr	r5, .L234+0x4
	add	r0, r0, r5
	ldrb	r0, [r0]
	bl	sub_81370A4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	sub_80F7224
	bl	sub_80F3D00
	ldr	r1, .L234+0x8
	ldr	r0, [r1]
	add	r0, r0, #0x52
	strb	r4, [r0]
	ldr	r1, [r1]
	b	.L225
.L235:
	.align	2, 0
.L234:
	.word	gUnknown_083DFEC4
	.word	0x87dc
	.word	gUnknown_02039304
.L218:
	ldr	r1, [r4]
	add	r1, r1, #0x52
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x10
	bls	.L211	@cond_branch
	bl	sub_8136C6C
.L224:
	ldr	r1, [r4]
.L225:
	add	r1, r1, #0x50
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L211
.L220:
	ldr	r0, .L236
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L211	@cond_branch
	bl	sub_8136D00
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L211	@cond_branch
	ldr	r0, .L236+0x4
	ldrb	r0, [r0]
	bl	PokeblockClearIfExists
	ldr	r0, .L236+0x8
	bl	launch_c3_walk_stairs_and_run_once
.L211:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L237:
	.align	2, 0
.L236:
	.word	gMain
	.word	gScriptItemId
	.word	sub_8136B44
.Lfe14:
	.size	 sub_81369CC,.Lfe14-sub_81369CC
	.align	2, 0
	.type	 sub_8136B44,function
	.thumb_func
sub_8136B44:
	push	{r4, lr}
	add	sp, sp, #0xfffffffc
	ldr	r4, .L249
	ldr	r0, [r4]
	add	r2, r0, #0
	add	r2, r2, #0x50
	ldrb	r1, [r2]
	cmp	r1, #0x1
	beq	.L241	@cond_branch
	cmp	r1, #0x1
	bgt	.L247	@cond_branch
	cmp	r1, #0
	beq	.L240	@cond_branch
	b	.L239
.L250:
	.align	2, 0
.L249:
	.word	gUnknown_02039304
.L247:
	cmp	r1, #0x2
	beq	.L243	@cond_branch
	cmp	r1, #0x3
	beq	.L244	@cond_branch
	b	.L239
.L240:
	mov	r0, #0x1
	neg	r0, r0
	str	r1, [sp]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	b	.L248
.L241:
	ldr	r0, .L251
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L239	@cond_branch
	mov	r0, #0x2
	strb	r0, [r2]
	b	.L239
.L252:
	.align	2, 0
.L251:
	.word	gPaletteFade
.L243:
	bl	sub_80F5BDC
.L248:
	ldr	r1, [r4]
	add	r1, r1, #0x50
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L239
.L244:
	ldr	r0, [r0, #0x4]
	bl	SetMainCallback2
.L239:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe15:
	.size	 sub_8136B44,.Lfe15-sub_8136B44
	.align	2, 0
	.type	 sub_8136BB8,function
	.thumb_func
sub_8136BB8:
	push	{r4, lr}
	ldr	r0, .L254
	ldr	r0, [r0]
	ldr	r1, .L254+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	bl	sub_81370A4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x64
	mul	r0, r0, r1
	ldr	r1, .L254+0x8
	add	r0, r0, r1
	ldr	r4, .L254+0xc
	ldr	r2, [r4]
	add	r2, r2, #0x10
	mov	r1, #0x2
	bl	GetMonData
	ldr	r0, [r4]
	add	r0, r0, #0x10
	bl	StringGetEnd10
	ldr	r0, [r4]
	add	r0, r0, #0x10
	ldr	r1, .L254+0x10
	bl	StringAppend
	ldr	r0, .L254+0x14
	bl	BasicInitMenuWindow
	mov	r0, #0x0
	mov	r1, #0x10
	mov	r2, #0x1d
	mov	r3, #0x13
	bl	MenuDrawTextWindow
	ldr	r0, [r4]
	add	r0, r0, #0x10
	mov	r1, #0x1
	mov	r2, #0x11
	bl	MenuPrint
	mov	r0, #0x17
	mov	r1, #0xa
	mov	r2, #0x1
	bl	DisplayYesNoMenu
	mov	r0, #0x0
	bl	MoveMenuCursor
	pop	{r4}
	pop	{r0}
	bx	r0
.L255:
	.align	2, 0
.L254:
	.word	gUnknown_083DFEC4
	.word	0x87dc
	.word	gPlayerParty
	.word	gUnknown_02039304
	.word	gOtherText_GetsAPokeBlock
	.word	gWindowConfig_81E709C
.Lfe16:
	.size	 sub_8136BB8,.Lfe16-sub_8136BB8
	.align	2, 0
	.type	 sub_8136C40,function
	.thumb_func
sub_8136C40:
	push	{r4, lr}
	bl	ProcessMenuInputNoWrap
	lsl	r0, r0, #0x18
	asr	r4, r0, #0x18
	mov	r1, #0x80
	lsl	r1, r1, #0x11
	add	r0, r0, r1
	lsr	r0, r0, #0x18
	cmp	r0, #0x2
	bhi	.L257	@cond_branch
	bl	MenuZeroFillScreen
	ldr	r0, .L258
	bl	BasicInitMenuWindow
.L257:
	add	r0, r4, #0
	pop	{r4}
	pop	{r1}
	bx	r1
.L259:
	.align	2, 0
.L258:
	.word	gWindowConfig_81E7080
.Lfe17:
	.size	 sub_8136C40,.Lfe17-sub_8136C40
	.align	2, 0
	.type	 sub_8136C6C,function
	.thumb_func
sub_8136C6C:
	push	{lr}
	ldr	r0, .L270
	bl	BasicInitMenuWindow
	mov	r0, #0x0
	mov	r1, #0x10
	mov	r2, #0x1d
	mov	r3, #0x13
	bl	MenuDrawTextWindow
	ldr	r3, .L270+0x4
	ldr	r0, [r3]
	add	r0, r0, #0x53
	mov	r1, #0x0
	b	.L269
.L271:
	.align	2, 0
.L270:
	.word	gWindowConfig_81E709C
	.word	gUnknown_02039304
.L263:
	ldr	r0, [r3]
	add	r0, r0, #0x53
	ldrb	r1, [r0]
	add	r1, r1, #0x1
.L269:
	strb	r1, [r0]
	ldr	r2, [r3]
	add	r1, r2, #0
	add	r1, r1, #0x53
	ldrb	r0, [r1]
	cmp	r0, #0x4
	bhi	.L267	@cond_branch
	add	r0, r2, #0
	add	r0, r0, #0x61
	ldrb	r1, [r1]
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L263	@cond_branch
	ldr	r0, .L272
	ldr	r2, [r0]
	add	r1, r2, #0
	add	r1, r1, #0x53
	ldrb	r0, [r1]
	cmp	r0, #0x4
	bhi	.L267	@cond_branch
	add	r0, r2, #0
	add	r0, r0, #0x10
	ldrb	r1, [r1]
	add	r2, r2, #0x61
	add	r2, r2, r1
	ldrb	r2, [r2]
	bl	Pokeblock_BufferEnhancedStatText
	b	.L268
.L273:
	.align	2, 0
.L272:
	.word	gUnknown_02039304
.L267:
	ldr	r0, .L274
	ldr	r1, [r0]
	add	r0, r1, #0
	add	r0, r0, #0x10
	add	r1, r1, #0x53
	ldrb	r1, [r1]
	mov	r2, #0x0
	bl	Pokeblock_BufferEnhancedStatText
.L268:
	ldr	r0, .L274
	ldr	r0, [r0]
	add	r0, r0, #0x10
	bl	Pokeblock_MenuWindowTextPrint
	pop	{r0}
	bx	r0
.L275:
	.align	2, 0
.L274:
	.word	gUnknown_02039304
.Lfe18:
	.size	 sub_8136C6C,.Lfe18-sub_8136C6C
	.align	2, 0
	.type	 sub_8136D00,function
	.thumb_func
sub_8136D00:
	push	{r4, r5, lr}
	ldr	r4, .L285
	add	r3, r4, #0
	mov	r5, #0x5
.L279:
	ldr	r0, [r3]
	add	r0, r0, #0x53
	ldrb	r1, [r0]
	add	r1, r1, #0x1
	strb	r1, [r0]
	ldr	r2, [r3]
	add	r1, r2, #0
	add	r1, r1, #0x53
	ldrb	r0, [r1]
	cmp	r0, #0x4
	bhi	.L280	@cond_branch
	add	r0, r2, #0
	add	r0, r0, #0x61
	ldrb	r1, [r1]
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L278	@cond_branch
	b	.L279
.L286:
	.align	2, 0
.L285:
	.word	gUnknown_02039304
.L280:
	strb	r5, [r1]
	mov	r0, #0x0
	b	.L284
.L278:
	ldr	r2, [r4]
	add	r0, r2, #0
	add	r0, r0, #0x10
	add	r1, r2, #0
	add	r1, r1, #0x53
	ldrb	r1, [r1]
	add	r2, r2, #0x61
	add	r2, r2, r1
	ldrb	r2, [r2]
	bl	Pokeblock_BufferEnhancedStatText
	ldr	r0, [r4]
	add	r0, r0, #0x10
	bl	Pokeblock_MenuWindowTextPrint
	mov	r0, #0x1
.L284:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe19:
	.size	 sub_8136D00,.Lfe19-sub_8136D00
	.align	2, 0
	.type	 sub_8136D60,function
	.thumb_func
sub_8136D60:
	push	{lr}
	ldr	r0, .L288
	bl	BasicInitMenuWindow
	mov	r0, #0x0
	mov	r1, #0x10
	mov	r2, #0x1d
	mov	r3, #0x13
	bl	MenuDrawTextWindow
	ldr	r0, .L288+0x4
	mov	r1, #0x1
	mov	r2, #0x11
	bl	MenuPrint
	pop	{r0}
	bx	r0
.L289:
	.align	2, 0
.L288:
	.word	gWindowConfig_81E709C
	.word	gOtherText_WontEat
.Lfe20:
	.size	 sub_8136D60,.Lfe20-sub_8136D60
	.align	2, 0
	.type	 sub_8136D8C,function
	.thumb_func
sub_8136D8C:
	push	{lr}
	bl	MenuZeroFillScreen
	ldr	r0, .L291
	bl	BasicInitMenuWindow
	pop	{r0}
	bx	r0
.L292:
	.align	2, 0
.L291:
	.word	gWindowConfig_81E7080
.Lfe21:
	.size	 sub_8136D8C,.Lfe21-sub_8136D8C
	.align	2, 0
	.type	 Pokeblock_MenuWindowTextPrint,function
	.thumb_func
Pokeblock_MenuWindowTextPrint:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r0, #0x0
	mov	r1, #0x10
	mov	r2, #0x1d
	mov	r3, #0x13
	bl	MenuDrawTextWindow
	add	r0, r4, #0
	mov	r1, #0x1
	mov	r2, #0x11
	bl	MenuPrint
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe22:
	.size	 Pokeblock_MenuWindowTextPrint,.Lfe22-Pokeblock_MenuWindowTextPrint
	.align	2, 0
	.type	 Pokeblock_BufferEnhancedStatText,function
	.thumb_func
Pokeblock_BufferEnhancedStatText:
	.syntax unified
	push {r4,lr}
	adds r4, r0, 0
	lsls r1, 24
	lsrs r3, r1, 24
	lsls r2, 16
	lsrs r0, r2, 16
	asrs r2, 16
	cmp r2, 0
	beq _08136DFC
	cmp r2, 0
	ble _08136DD8
	movs r0, 0
_08136DD8:
	lsls r0, 16
	ldr r1, _08136DF4 @ =sContextStatNames
	lsls r0, r3, 2
	adds r0, r1
	ldr r1, [r0]
	adds r0, r4, 0
	bl StringCopy
	ldr r1, _08136DF8 @ =gOtherText_WasEnhanced
	adds r0, r4, 0
	bl StringAppend
	b _08136E04
	.align 2, 0
_08136DF4: .4byte sContextStatNames
_08136DF8: .4byte gOtherText_WasEnhanced
_08136DFC:
	ldr r1, _08136E0C @ =gOtherText_NothingChanged
	adds r0, r4, 0
	bl StringCopy
_08136E04:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08136E0C: .4byte gOtherText_NothingChanged
.syntax divided

	.code	16
.Lfe23:
	.size	 Pokeblock_BufferEnhancedStatText,.Lfe23-Pokeblock_BufferEnhancedStatText
	.align	2, 0
	.type	 Pokeblock_GetMonContestStats,function
	.thumb_func
Pokeblock_GetMonContestStats:
	push	{r4, r5, r6, r7, lr}
	add	r6, r0, #0
	add	r5, r1, #0
	mov	r4, #0x0
	ldr	r7, .L301
.L299:
	lsl	r0, r4, #0x2
	add	r0, r0, r7
	ldr	r1, [r0]
	add	r0, r6, #0
	bl	GetMonData
	add	r1, r5, r4
	strb	r0, [r1]
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r4, #0x4
	bls	.L299	@cond_branch
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L302:
	.align	2, 0
.L301:
	.word	sContestStatsMonData
.Lfe24:
	.size	 Pokeblock_GetMonContestStats,.Lfe24-Pokeblock_GetMonContestStats
	.align	2, 0
	.type	 sub_8136E40,function
	.thumb_func
sub_8136E40:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #0xfffffffc
	mov	r8, r0
	add	r5, r1, #0
	add	r0, r5, #0
	mov	r1, #0x30
	bl	GetMonData
	cmp	r0, #0xff
	beq	.L304	@cond_branch
	mov	r0, r8
	add	r1, r5, #0
	bl	sub_8136F74
	mov	r4, #0x0
	mov	r7, sp
.L308:
	ldr	r1, .L313
	lsl	r0, r4, #0x2
	add	r0, r0, r1
	ldr	r6, [r0]
	add	r0, r5, #0
	add	r1, r6, #0
	bl	GetMonData
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strb	r0, [r7]
	ldr	r1, .L313+0x4
	ldr	r1, [r1]
	lsl	r2, r4, #0x1
	add	r1, r1, #0x66
	add	r1, r1, r2
	ldrh	r1, [r1]
	add	r0, r0, r1
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	cmp	r0, #0
	bge	.L309	@cond_branch
	mov	r1, #0x0
.L309:
	lsl	r0, r1, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0xff
	ble	.L310	@cond_branch
	mov	r1, #0xff
.L310:
	strb	r1, [r7]
	add	r0, r5, #0
	add	r1, r6, #0
	mov	r2, sp
	bl	SetMonData
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r4, #0x4
	bls	.L308	@cond_branch
	add	r0, r5, #0
	mov	r1, #0x30
	bl	GetMonData
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r2, r8
	ldrb	r2, [r2, #0x6]
	add	r1, r0, r2
	lsl	r0, r1, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0xff
	ble	.L312	@cond_branch
	mov	r1, #0xff
.L312:
	mov	r0, sp
	strb	r1, [r0]
	add	r0, r5, #0
	mov	r1, #0x30
	mov	r2, sp
	bl	SetMonData
.L304:
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L314:
	.align	2, 0
.L313:
	.word	sContestStatsMonData
	.word	gUnknown_02039304
.Lfe25:
	.size	 sub_8136E40,.Lfe25-sub_8136E40
	.align	2, 0
	.type	 sub_8136EF0,function
	.thumb_func
sub_8136EF0:
	push	{r4, r5, lr}
	ldr	r5, .L321
	ldr	r0, .L321+0x4
	ldr	r1, [r0]
	ldr	r2, .L321+0x8
	add	r0, r1, r2
	mov	r2, #0x0
	ldrsh	r0, [r0, r2]
	lsl	r0, r0, #0x2
	add	r1, r1, r0
	ldr	r0, .L321+0xc
	add	r1, r1, r0
	ldrb	r0, [r1]
	lsl	r0, r0, #0x1b
	lsr	r0, r0, #0x1b
	mov	r1, #0x64
	mul	r0, r0, r1
	add	r5, r0, r5
	ldr	r4, .L321+0x10
	ldr	r1, [r4]
	add	r1, r1, #0x57
	add	r0, r5, #0
	bl	Pokeblock_GetMonContestStats
	ldr	r0, [r4]
	ldr	r0, [r0, #0x8]
	add	r1, r5, #0
	bl	sub_8136E40
	ldr	r1, [r4]
	add	r1, r1, #0x5c
	add	r0, r5, #0
	bl	Pokeblock_GetMonContestStats
	mov	r3, #0x0
.L319:
	ldr	r0, [r4]
	add	r2, r0, #0
	add	r2, r2, #0x61
	add	r2, r2, r3
	add	r1, r0, #0
	add	r1, r1, #0x5c
	add	r1, r1, r3
	add	r0, r0, #0x57
	add	r0, r0, r3
	ldrb	r1, [r1]
	ldrb	r0, [r0]
	sub	r1, r1, r0
	strb	r1, [r2]
	add	r0, r3, #0x1
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	cmp	r3, #0x4
	bls	.L319	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L322:
	.align	2, 0
.L321:
	.word	gPlayerParty
	.word	gUnknown_083DFEC4
	.word	0x87dc
	.word	0x893e
	.word	gUnknown_02039304
.Lfe26:
	.size	 sub_8136EF0,.Lfe26-sub_8136EF0
	.align	2, 0
	.type	 sub_8136F74,function
	.thumb_func
sub_8136F74:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	mov	sl, r1
	ldr	r1, .L335
	ldr	r3, [r1]
	ldrb	r1, [r0, #0x1]
	add	r2, r3, #0
	add	r2, r2, #0x66
	strh	r1, [r2]
	ldrb	r2, [r0, #0x5]
	add	r1, r3, #0
	add	r1, r1, #0x68
	strh	r2, [r1]
	ldrb	r1, [r0, #0x4]
	add	r2, r3, #0
	add	r2, r2, #0x6a
	strh	r1, [r2]
	ldrb	r2, [r0, #0x3]
	add	r1, r3, #0
	add	r1, r1, #0x6c
	strh	r2, [r1]
	ldrb	r1, [r0, #0x2]
	add	r0, r3, #0
	add	r0, r0, #0x6e
	strh	r1, [r0]
	ldr	r0, .L335+0x4
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp	r0, #0
	ble	.L324	@cond_branch
	mov	r0, #0x1
	b	.L325
.L336:
	.align	2, 0
.L335:
	.word	gUnknown_02039304
	.word	gPokeblockGain
.L324:
	cmp	r0, #0
	bge	.L323	@cond_branch
	mov	r0, #0xff
.L325:
	mov	r2, #0x0
	lsl	r0, r0, #0x18
	mov	r9, r0
	ldr	r0, .L337
	mov	r8, r0
.L331:
	mov	r0, r8
	ldr	r1, [r0]
	lsl	r0, r2, #0x18
	asr	r6, r0, #0x18
	lsl	r7, r6, #0x1
	add	r1, r1, #0x66
	add	r1, r1, r7
	mov	r2, #0x0
	ldrsh	r4, [r1, r2]
	add	r0, r4, #0
	mov	r1, #0xa
	bl	__divsi3
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r0, r4, #0
	mov	r1, #0xa
	bl	__modsi3
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x4
	ble	.L332	@cond_branch
	lsl	r0, r5, #0x18
	mov	r1, #0x80
	lsl	r1, r1, #0x11
	add	r0, r0, r1
	lsr	r5, r0, #0x18
.L332:
	ldr	r0, .L337+0x4
	add	r0, r6, r0
	ldrb	r1, [r0]
	mov	r0, sl
	bl	sub_8040A54
	lsl	r0, r0, #0x18
	asr	r2, r0, #0x18
	cmp	r0, r9
	bne	.L330	@cond_branch
	mov	r1, r8
	ldr	r0, [r1]
	add	r0, r0, #0x66
	add	r0, r0, r7
	lsl	r1, r5, #0x18
	asr	r1, r1, #0x18
	mul	r1, r1, r2
	ldrh	r2, [r0]
	add	r1, r1, r2
	strh	r1, [r0]
.L330:
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	asr	r0, r0, #0x18
	cmp	r0, #0x4
	ble	.L331	@cond_branch
.L323:
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L338:
	.align	2, 0
.L337:
	.word	gUnknown_02039304
	.word	gUnknown_0840612C
.Lfe27:
	.size	 sub_8136F74,.Lfe27-sub_8136F74
	.align	2, 0
	.type	 sub_8137058,function
	.thumb_func
sub_8137058:
	push	{lr}
	ldr	r0, .L342
	ldr	r1, .L342+0x4
	ldr	r2, [r1]
	ldr	r3, .L342+0x8
	add	r1, r2, r3
	mov	r3, #0x0
	ldrsh	r1, [r1, r3]
	lsl	r1, r1, #0x2
	add	r2, r2, r1
	ldr	r1, .L342+0xc
	add	r2, r2, r1
	ldrb	r1, [r2]
	lsl	r1, r1, #0x1b
	lsr	r1, r1, #0x1b
	mov	r2, #0x64
	mul	r1, r1, r2
	add	r0, r1, r0
	mov	r1, #0x30
	bl	GetMonData
	cmp	r0, #0xff
	beq	.L340	@cond_branch
	mov	r0, #0x0
	b	.L341
.L343:
	.align	2, 0
.L342:
	.word	gPlayerParty
	.word	gUnknown_083DFEC4
	.word	0x87dc
	.word	0x893e
.L340:
	mov	r0, #0x1
.L341:
	pop	{r1}
	bx	r1
.Lfe28:
	.size	 sub_8137058,.Lfe28-sub_8137058
	.align	2, 0
	.type	 sub_81370A4,function
	.thumb_func
sub_81370A4:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r4, #0x0
.L348:
	mov	r0, #0x64
	mul	r0, r0, r4
	ldr	r1, .L353
	add	r0, r0, r1
	mov	r1, #0x2d
	bl	GetMonData
	cmp	r0, #0
	bne	.L347	@cond_branch
	cmp	r5, #0
	bne	.L350	@cond_branch
	add	r0, r4, #0
	b	.L352
.L354:
	.align	2, 0
.L353:
	.word	gPlayerParty
.L350:
	sub	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
.L347:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x5
	bls	.L348	@cond_branch
	mov	r0, #0x0
.L352:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe29:
	.size	 sub_81370A4,.Lfe29-sub_81370A4
	.align	2, 0
	.type	 sub_81370E4,function
	.thumb_func
sub_81370E4:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r4, #0x0
	mov	r6, #0x0
	cmp	r6, r5
	bcs	.L357	@cond_branch
.L359:
	mov	r0, #0x64
	mul	r0, r0, r4
	ldr	r1, .L362
	add	r0, r0, r1
	mov	r1, #0x2d
	bl	GetMonData
	cmp	r0, #0
	beq	.L358	@cond_branch
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
.L358:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, r5
	bcc	.L359	@cond_branch
.L357:
	sub	r0, r5, r6
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L363:
	.align	2, 0
.L362:
	.word	gPlayerParty
.Lfe30:
	.size	 sub_81370E4,.Lfe30-sub_81370E4
	.align	2, 0
	.globl	sub_8137124
	.type	 sub_8137124,function
	.thumb_func
sub_8137124:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	sub_81370A4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.Lfe31:
	.size	 sub_8137124,.Lfe31-sub_8137124
	.align	2, 0
	.type	 sub_8137138,function
	.thumb_func
sub_8137138:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	ldr	r0, .L374
	bl	LoadSpriteSheet
	ldr	r0, .L374+0x4
	bl	LoadSpritePalette
	ldr	r2, .L374+0x8
	ldr	r0, [r2]
	add	r0, r0, #0x54
	mov	r1, #0x0
	strb	r1, [r0]
	mov	r4, #0x0
	add	r5, r2, #0
	ldr	r6, .L374+0xc
	add	r0, r6, #0x2
	mov	r8, r0
	ldr	r7, .L374+0x10
.L369:
	ldr	r0, [r5]
	add	r0, r0, #0x61
	add	r0, r0, r4
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L368	@cond_branch
	lsl	r2, r4, #0x2
	add	r0, r2, r6
	mov	r3, #0x0
	ldrsh	r1, [r0, r3]
	add	r2, r2, r8
	mov	r0, #0x0
	ldrsh	r2, [r2, r0]
	ldr	r0, .L374+0x14
	mov	r3, #0x0
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x40
	beq	.L368	@cond_branch
	ldr	r0, [r5]
	add	r0, r0, #0x61
	add	r0, r0, r4
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L372	@cond_branch
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r7
	ldr	r1, .L374+0x18
	str	r1, [r0]
.L372:
	ldr	r1, [r5]
	add	r1, r1, #0x54
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
.L368:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r4, #0x4
	bls	.L369	@cond_branch
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L375:
	.align	2, 0
.L374:
	.word	gSpriteSheet_ConditionUpDown
	.word	gSpritePalette_ConditionUpDown
	.word	gUnknown_02039304
	.word	gUnknown_08406158
	.word	gSprites+0x1c
	.word	gSpriteTemplate_840618C
	.word	sub_81371DC
.Lfe32:
	.size	 sub_8137138,.Lfe32-sub_8137138
	.align	2, 0
	.type	 sub_81371DC,function
	.thumb_func
sub_81371DC:
	push	{lr}
	add	r1, r0, #0
	mov	r2, #0x2e
	ldrsh	r0, [r1, r2]
	cmp	r0, #0x5
	bgt	.L377	@cond_branch
	ldrh	r0, [r1, #0x26]
	sub	r0, r0, #0x2
	b	.L381
.L377:
	cmp	r0, #0xb
	bgt	.L378	@cond_branch
	ldrh	r0, [r1, #0x26]
	add	r0, r0, #0x2
.L381:
	strh	r0, [r1, #0x26]
.L378:
	ldrh	r0, [r1, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x2e]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x3c
	ble	.L380	@cond_branch
	add	r0, r1, #0
	bl	DestroySprite
	ldr	r0, .L382
	ldr	r1, [r0]
	add	r1, r1, #0x54
	ldrb	r0, [r1]
	sub	r0, r0, #0x1
	strb	r0, [r1]
.L380:
	pop	{r0}
	bx	r0
.L383:
	.align	2, 0
.L382:
	.word	gUnknown_02039304
.Lfe33:
	.size	 sub_81371DC,.Lfe33-sub_81371DC
.text
	.align	2, 0
