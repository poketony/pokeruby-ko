@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section .rodata
	.type	 gSSTidalBetaString,object
gSSTidalBetaString:
	.byte	0xa
	.byte	0x19
	.byte	0x0
	.byte	0x61
	.byte	0x59
	.byte	0xa0
	.byte	0x64
	.byte	0x44
	.byte	0x0
	.byte	0x1c
	.byte	0x18
	.byte	0x16
	.byte	0x0
	.byte	0x19
	.byte	0x28
	.byte	0x1e
	.byte	0x3
	.byte	0x41
	.byte	0x2
	.byte	0xfe
	.byte	0x1a
	.byte	0x24
	.byte	0x8
	.byte	0x0
	.byte	0x19
	.byte	0x50
	.byte	0x13
	.byte	0x20
	.byte	0x10
	.byte	0x2
	.byte	0x15
	.byte	0xff
	.size	 gSSTidalBetaString,32
	.type	 gSSTidalBetaString2,object
gSSTidalBetaString2:
	.byte	0xa
	.byte	0x19
	.byte	0x0
	.byte	0x61
	.byte	0x59
	.byte	0xa0
	.byte	0x64
	.byte	0x44
	.byte	0x0
	.byte	0x1c
	.byte	0x18
	.byte	0x16
	.byte	0x0
	.byte	0x19
	.byte	0x28
	.byte	0x1e
	.byte	0x3
	.byte	0x41
	.byte	0x2
	.byte	0xfe
	.byte	0x1a
	.byte	0x24
	.byte	0x8
	.byte	0x0
	.byte	0x19
	.byte	0x50
	.byte	0x13
	.byte	0x20
	.byte	0x10
	.byte	0x2
	.byte	0x15
	.byte	0xff
	.size	 gSSTidalBetaString2,32
	.align	2, 0
	.type	 gUnknown_083D61DC,object
	.size	 gUnknown_083D61DC,8
gUnknown_083D61DC:
	.word	gSSTidalBetaString
	.word	gSSTidalBetaString2
	.align	2, 0
	.type	 gExitToOverworldFuncList,object
gExitToOverworldFuncList:
	.word	sub_808B020
	.word	c2_exit_to_overworld_2_switch
	.word	sub_810B96C
	.size	 gExitToOverworldFuncList,12
	.type	 gItemFinderDirections,object
gItemFinderDirections:
	.byte	0x2
	.byte	0x4
	.byte	0x1
	.byte	0x3
	.size	 gItemFinderDirections,4
	.align	2, 0
	.type	 gUnknown_083D61F4,object
	.size	 gUnknown_083D61F4,8
gUnknown_083D61F4:
	.word	sub_80C9FC0
	.word	CleanUpItemMenuMessage
.text
	.align	2, 0
	.globl	ExecuteSwitchToOverworldFromItemUse
	.type	 ExecuteSwitchToOverworldFromItemUse,function
	.thumb_func
ExecuteSwitchToOverworldFromItemUse:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r1, .L5
	ldrh	r0, [r1]
	cmp	r0, #0xaf
	bne	.L3	@cond_branch
	ldr	r1, .L5+0x4
	lsl	r2, r4, #0x2
	add	r0, r2, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldrh	r0, [r0, #0x26]
	sub	r0, r0, #0x1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	b	.L4
.L6:
	.align	2, 0
.L5:
	.word	gScriptItemId
	.word	gTasks
.L3:
	ldrh	r0, [r1]
	bl	ItemId_GetType
	sub	r0, r0, #0x1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	lsl	r2, r4, #0x2
.L4:
	ldr	r0, .L7
	add	r1, r2, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r2, .L7+0x4
	lsl	r0, r3, #0x2
	add	r0, r0, r2
	ldr	r2, [r0]
	lsr	r0, r2, #0x10
	strh	r0, [r1, #0x18]
	strh	r2, [r1, #0x1a]
	ldr	r0, .L7+0x8
	str	r0, [r1]
	pop	{r4}
	pop	{r0}
	bx	r0
.L8:
	.align	2, 0
.L7:
	.word	gTasks
	.word	gExitToOverworldFuncList
	.word	HandleItemMenuPaletteFade
.Lfe1:
	.size	 ExecuteSwitchToOverworldFromItemUse,.Lfe1-ExecuteSwitchToOverworldFromItemUse
	.align	2, 0
	.globl	ItemMenu_ConfirmNormalFade
	.type	 ItemMenu_ConfirmNormalFade,function
	.thumb_func
ItemMenu_ConfirmNormalFade:
	push	{lr}
	add	sp, sp, #0xfffffffc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	ExecuteSwitchToOverworldFromItemUse
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.Lfe2:
	.size	 ItemMenu_ConfirmNormalFade,.Lfe2-ItemMenu_ConfirmNormalFade
	.align	2, 0
	.globl	ItemMenu_ConfirmComplexFade
	.type	 ItemMenu_ConfirmComplexFade,function
	.thumb_func
ItemMenu_ConfirmComplexFade:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	ExecuteSwitchToOverworldFromItemUse
	mov	r0, #0x1
	mov	r1, #0x0
	bl	fade_screen
	pop	{r0}
	bx	r0
.Lfe3:
	.size	 ItemMenu_ConfirmComplexFade,.Lfe3-ItemMenu_ConfirmComplexFade
	.align	2, 0
	.globl	SetUpItemUseOnFieldCallback
	.type	 SetUpItemUseOnFieldCallback,function
	.thumb_func
SetUpItemUseOnFieldCallback:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r1, .L14
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r1, #0xc
	ldrsh	r0, [r0, r1]
	cmp	r0, #0x1
	beq	.L12	@cond_branch
	ldr	r1, .L14+0x4
	ldr	r0, .L14+0x8
	str	r0, [r1]
	add	r0, r2, #0
	bl	ItemMenu_ConfirmNormalFade
	b	.L13
.L15:
	.align	2, 0
.L14:
	.word	gTasks
	.word	gFieldCallback
	.word	ExecuteItemUseFromBlackPalette
.L12:
	ldr	r0, .L16
	ldr	r1, [r0]
	add	r0, r2, #0
	bl	_call_via_r1
.L13:
	pop	{r0}
	bx	r0
.L17:
	.align	2, 0
.L16:
	.word	gFieldItemUseCallback
.Lfe4:
	.size	 SetUpItemUseOnFieldCallback,.Lfe4-SetUpItemUseOnFieldCallback
	.align	2, 0
	.globl	HandleDeniedItemUseMessage
	.type	 HandleDeniedItemUseMessage,function
	.thumb_func
HandleDeniedItemUseMessage:
	push	{r4, r5, r6, lr}
	add	r4, r1, #0
	add	r1, r2, #0
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r5, .L23
	add	r0, r5, #0
	bl	StringExpandPlaceholders
	cmp	r4, #0
	bne	.L21	@cond_branch
	mov	r0, #0x0
	mov	r1, #0xd
	mov	r2, #0xd
	mov	r3, #0x14
	bl	MenuZeroFillWindowRect
	ldr	r2, .L23+0x4
	add	r0, r6, #0
	add	r1, r5, #0
	mov	r3, #0x1
	bl	DisplayItemMessageOnField
	b	.L19
.L24:
	.align	2, 0
.L23:
	.word	gStringVar4
	.word	CleanUpItemMenuMessage
.L21:
	ldr	r2, .L25
	add	r0, r6, #0
	add	r1, r5, #0
	mov	r3, #0x0
	bl	DisplayItemMessageOnField
.L19:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L26:
	.align	2, 0
.L25:
	.word	CleanUpOverworldMessage
.Lfe5:
	.size	 HandleDeniedItemUseMessage,.Lfe5-HandleDeniedItemUseMessage
	.align	2, 0
	.globl	DisplayDadsAdviceCannotUseItemMessage
	.type	 DisplayDadsAdviceCannotUseItemMessage,function
	.thumb_func
DisplayDadsAdviceCannotUseItemMessage:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldr	r2, .L28
	bl	HandleDeniedItemUseMessage
	pop	{r0}
	bx	r0
.L29:
	.align	2, 0
.L28:
	.word	gOtherText_DadsAdvice
.Lfe6:
	.size	 DisplayDadsAdviceCannotUseItemMessage,.Lfe6-DisplayDadsAdviceCannotUseItemMessage
	.align	2, 0
	.globl	DisplayCantGetOffBikeItemMessage
	.type	 DisplayCantGetOffBikeItemMessage,function
	.thumb_func
DisplayCantGetOffBikeItemMessage:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldr	r2, .L31
	bl	HandleDeniedItemUseMessage
	pop	{r0}
	bx	r0
.L32:
	.align	2, 0
.L31:
	.word	gOtherText_CantGetOffBike
.Lfe7:
	.size	 DisplayCantGetOffBikeItemMessage,.Lfe7-DisplayCantGetOffBikeItemMessage
	.align	2, 0
	.globl	CheckIfItemIsTMHMOrEvolutionStone
	.type	 CheckIfItemIsTMHMOrEvolutionStone,function
	.thumb_func
CheckIfItemIsTMHMOrEvolutionStone:
	push	{r4, lr}
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	add	r0, r4, #0
	bl	ItemId_GetFieldFunc
	ldr	r1, .L39
	cmp	r0, r1
	bne	.L34	@cond_branch
	mov	r0, #0x1
	b	.L38
.L40:
	.align	2, 0
.L39:
	.word	ItemUseOutOfBattle_TMHM
.L34:
	add	r0, r4, #0
	bl	ItemId_GetFieldFunc
	ldr	r1, .L41
	cmp	r0, r1
	beq	.L36	@cond_branch
	mov	r0, #0x0
	b	.L38
.L42:
	.align	2, 0
.L41:
	.word	ItemUseOutOfBattle_EvolutionStone
.L36:
	mov	r0, #0x2
.L38:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe8:
	.size	 CheckIfItemIsTMHMOrEvolutionStone,.Lfe8-CheckIfItemIsTMHMOrEvolutionStone
	.align	2, 0
	.globl	ItemMenu_ReadMail
	.type	 ItemMenu_ReadMail,function
	.thumb_func
ItemMenu_ReadMail:
	push	{r4, lr}
	add	sp, sp, #0xffffffdc
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L45
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L44	@cond_branch
	mov	r1, sp
	ldr	r0, .L45+0x4
	ldrh	r0, [r0]
	strh	r0, [r1, #0x20]
	ldr	r1, .L45+0x8
	mov	r0, sp
	mov	r2, #0x0
	bl	HandleReadMail
	add	r0, r4, #0
	bl	DestroyTask
.L44:
	add	sp, sp, #0x24
	pop	{r4}
	pop	{r0}
	bx	r0
.L46:
	.align	2, 0
.L45:
	.word	gPaletteFade
	.word	gScriptItemId
	.word	sub_80A5D04
.Lfe9:
	.size	 ItemMenu_ReadMail,.Lfe9-ItemMenu_ReadMail
	.align	2, 0
	.globl	ItemUseOutOfBattle_Mail
	.type	 ItemUseOutOfBattle_Mail,function
	.thumb_func
ItemUseOutOfBattle_Mail:
	push	{r4, lr}
	add	sp, sp, #0xfffffffc
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r1, .L48
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L48+0x4
	str	r1, [r0]
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L49:
	.align	2, 0
.L48:
	.word	gTasks
	.word	ItemMenu_ReadMail
.Lfe10:
	.size	 ItemUseOutOfBattle_Mail,.Lfe10-ItemUseOutOfBattle_Mail
	.align	2, 0
	.globl	ItemUseOutOfBattle_Bike
	.type	 ItemUseOutOfBattle_Bike,function
	.thumb_func
ItemUseOutOfBattle_Bike:
	push	{r4, r5, lr}
	add	sp, sp, #0xfffffffc
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	PlayerGetDestCoords
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	bl	MapGridGetMetatileBehaviorAt
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L56
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L52	@cond_branch
	add	r0, r4, #0
	bl	MetatileBehavior_IsVerticalRail
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L52	@cond_branch
	add	r0, r4, #0
	bl	MetatileBehavior_IsHorizontalRail
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L52	@cond_branch
	add	r0, r4, #0
	bl	MetatileBehavior_IsIsolatedVerticalRail
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L52	@cond_branch
	add	r0, r4, #0
	bl	MetatileBehavior_IsIsolatedHorizontalRail
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L51	@cond_branch
.L52:
	ldr	r0, .L56+0x4
	lsl	r1, r5, #0x2
	add	r1, r1, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrb	r1, [r1, #0xc]
	add	r0, r5, #0
	bl	DisplayCantGetOffBikeItemMessage
	b	.L53
.L57:
	.align	2, 0
.L56:
	.word	0x82b
	.word	gTasks
.L51:
	bl	Overworld_IsBikingAllowed
	cmp	r0, #0x1
	bne	.L54	@cond_branch
	bl	IsBikingDisallowedByPlayer
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L54	@cond_branch
	ldr	r1, .L58
	ldr	r0, .L58+0x4
	str	r0, [r1]
	add	r0, r5, #0
	bl	SetUpItemUseOnFieldCallback
	b	.L53
.L59:
	.align	2, 0
.L58:
	.word	gFieldItemUseCallback
	.word	ItemUseOnFieldCB_Bike
.L54:
	ldr	r0, .L60
	lsl	r1, r5, #0x2
	add	r1, r1, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrb	r1, [r1, #0xc]
	add	r0, r5, #0
	bl	DisplayDadsAdviceCannotUseItemMessage
.L53:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L61:
	.align	2, 0
.L60:
	.word	gTasks
.Lfe11:
	.size	 ItemUseOutOfBattle_Bike,.Lfe11-ItemUseOutOfBattle_Bike
	.align	2, 0
	.globl	ItemUseOnFieldCB_Bike
	.type	 ItemUseOnFieldCB_Bike,function
	.thumb_func
ItemUseOnFieldCB_Bike:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r4, .L65
	ldrh	r0, [r4]
	bl	ItemId_GetSecondaryId
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L63	@cond_branch
	mov	r0, #0x2
	bl	GetOnOffBike
.L63:
	ldrh	r0, [r4]
	bl	ItemId_GetSecondaryId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L64	@cond_branch
	mov	r0, #0x4
	bl	GetOnOffBike
.L64:
	bl	sub_8064E2C
	bl	ScriptContext2_Disable
	add	r0, r5, #0
	bl	DestroyTask
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L66:
	.align	2, 0
.L65:
	.word	gScriptItemId
.Lfe12:
	.size	 ItemUseOnFieldCB_Bike,.Lfe12-ItemUseOnFieldCB_Bike
	.align	2, 0
	.globl	CanFish
	.type	 CanFish,function
	.thumb_func
CanFish:
	push	{r4, r5, r6, lr}
	add	sp, sp, #0xfffffffc
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	GetXYCoordsOneStepInFrontOfPlayer
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	bl	MapGridGetMetatileBehaviorAt
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	lsl	r0, r6, #0x18
	lsr	r5, r0, #0x18
	add	r0, r5, #0
	bl	MetatileBehavior_IsWaterfall
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L72	@cond_branch
	mov	r0, #0x10
	bl	TestPlayerAvatarFlags
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L72	@cond_branch
	mov	r0, #0x8
	bl	TestPlayerAvatarFlags
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L70	@cond_branch
	bl	IsPlayerFacingSurfableFishableWater
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L72	@cond_branch
.L77:
	mov	r0, #0x1
	b	.L75
.L70:
	add	r0, r5, #0
	bl	MetatileBehavior_IsSurfableWaterOrUnderwater
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L73	@cond_branch
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	bl	MapGridIsImpassableAt
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L77	@cond_branch
.L73:
	lsl	r0, r6, #0x18
	lsr	r0, r0, #0x18
	bl	MetatileBehavior_IsBridge
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L77	@cond_branch
.L72:
	mov	r0, #0x0
.L75:
	add	sp, sp, #0x4
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe13:
	.size	 CanFish,.Lfe13-CanFish
	.align	2, 0
	.globl	ItemUseOutOfBattle_Rod
	.type	 ItemUseOutOfBattle_Rod,function
	.thumb_func
ItemUseOutOfBattle_Rod:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	CanFish
	cmp	r0, #0x1
	bne	.L79	@cond_branch
	ldr	r1, .L81
	ldr	r0, .L81+0x4
	str	r0, [r1]
	add	r0, r4, #0
	bl	SetUpItemUseOnFieldCallback
	b	.L80
.L82:
	.align	2, 0
.L81:
	.word	gFieldItemUseCallback
	.word	ItemUseOnFieldCB_Rod
.L79:
	ldr	r0, .L83
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrb	r1, [r1, #0xc]
	add	r0, r4, #0
	bl	DisplayDadsAdviceCannotUseItemMessage
.L80:
	pop	{r4}
	pop	{r0}
	bx	r0
.L84:
	.align	2, 0
.L83:
	.word	gTasks
.Lfe14:
	.size	 ItemUseOutOfBattle_Rod,.Lfe14-ItemUseOutOfBattle_Rod
	.align	2, 0
	.globl	ItemUseOnFieldCB_Rod
	.type	 ItemUseOnFieldCB_Rod,function
	.thumb_func
ItemUseOnFieldCB_Rod:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L86
	ldrh	r0, [r0]
	bl	ItemId_GetSecondaryId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	StartFishing
	add	r0, r4, #0
	bl	DestroyTask
	pop	{r4}
	pop	{r0}
	bx	r0
.L87:
	.align	2, 0
.L86:
	.word	gScriptItemId
.Lfe15:
	.size	 ItemUseOnFieldCB_Rod,.Lfe15-ItemUseOnFieldCB_Rod
	.align	2, 0
	.globl	ItemUseOutOfBattle_Itemfinder
	.type	 ItemUseOutOfBattle_Itemfinder,function
	.thumb_func
ItemUseOutOfBattle_Itemfinder:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x27
	bl	IncrementGameStat
	ldr	r1, .L89
	ldr	r0, .L89+0x4
	str	r0, [r1]
	add	r0, r4, #0
	bl	SetUpItemUseOnFieldCallback
	pop	{r4}
	pop	{r0}
	bx	r0
.L90:
	.align	2, 0
.L89:
	.word	gFieldItemUseCallback
	.word	ItemUseOnFieldCB_Itemfinder
.Lfe16:
	.size	 ItemUseOutOfBattle_Itemfinder,.Lfe16-ItemUseOutOfBattle_Itemfinder
	.align	2, 0
	.globl	ItemUseOnFieldCB_Itemfinder
	.type	 ItemUseOnFieldCB_Itemfinder,function
	.thumb_func
ItemUseOnFieldCB_Itemfinder:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L94
	ldr	r0, [r0, #0x4]
	add	r1, r4, #0
	bl	ItemfinderCheckForHiddenItems
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L92	@cond_branch
	ldr	r0, .L94+0x4
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L94+0x8
	str	r0, [r1]
	b	.L93
.L95:
	.align	2, 0
.L94:
	.word	gMapHeader
	.word	gTasks
	.word	RunItemfinderResults
.L92:
	ldr	r1, .L96
	ldr	r2, .L96+0x4
	add	r0, r4, #0
	mov	r3, #0x0
	bl	DisplayItemMessageOnField
.L93:
	pop	{r4}
	pop	{r0}
	bx	r0
.L97:
	.align	2, 0
.L96:
	.word	gOtherText_NoResponse
	.word	ExitItemfinder
.Lfe17:
	.size	 ItemUseOnFieldCB_Itemfinder,.Lfe17-ItemUseOnFieldCB_Itemfinder
	.align	2, 0
	.globl	RunItemfinderResults
	.type	 RunItemfinderResults,function
	.thumb_func
RunItemfinderResults:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r6, r5, #0x2
	add	r0, r6, r5
	lsl	r7, r0, #0x3
	ldr	r0, .L109
	mov	r8, r0
	add	r4, r7, r0
	mov	r1, #0x6
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	bne	.L99	@cond_branch
	mov	r2, #0x8
	ldrsh	r0, [r4, r2]
	cmp	r0, #0x4
	bne	.L100	@cond_branch
	mov	r1, #0x0
	ldrsh	r0, [r4, r1]
	mov	r2, #0x2
	ldrsh	r1, [r4, r2]
	bl	GetPlayerDirectionTowardsHiddenItem
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0
	beq	.L101	@cond_branch
	ldr	r1, .L109+0x4
	sub	r0, r0, #0x1
	add	r0, r0, r1
	ldrb	r0, [r0]
	bl	SetPlayerDirectionTowardsItem
	mov	r0, r8
	sub	r0, r0, #0x8
	add	r0, r7, r0
	ldr	r1, .L109+0x8
	str	r1, [r0]
	b	.L98
.L110:
	.align	2, 0
.L109:
	.word	gTasks+0x8
	.word	gItemFinderDirections
	.word	DisplayItemRespondingMessageAndExitItemfinder
.L101:
	bl	player_get_direction_lower_nybble
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	mov	r1, #0x0
	add	r3, r6, #0
	ldr	r7, .L111
	mov	r6, #0x3
.L106:
	add	r0, r1, r7
	add	r1, r1, #0x1
	ldrb	r0, [r0]
	cmp	r2, r0
	bne	.L105	@cond_branch
	add	r0, r1, #0
	and	r0, r0, r6
	strh	r0, [r4, #0xa]
.L105:
	lsl	r0, r1, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x3
	bls	.L106	@cond_branch
	ldr	r1, .L111+0x4
	add	r0, r3, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L111+0x8
	str	r1, [r0]
	mov	r0, #0x0
	strh	r0, [r4, #0x6]
	strh	r0, [r4, #0x4]
	b	.L98
.L112:
	.align	2, 0
.L111:
	.word	gItemFinderDirections
	.word	gTasks
	.word	RotatePlayerAndExitItemfinder
.L100:
	mov	r0, #0x48
	bl	PlaySE
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
.L99:
	ldrh	r0, [r4, #0x6]
	add	r0, r0, #0x1
	mov	r1, #0x1f
	and	r0, r0, r1
	strh	r0, [r4, #0x6]
.L98:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe18:
	.size	 RunItemfinderResults,.Lfe18-RunItemfinderResults
	.align	2, 0
	.globl	ExitItemfinder
	.type	 ExitItemfinder,function
	.thumb_func
ExitItemfinder:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x0
	mov	r1, #0xe
	mov	r2, #0x1d
	mov	r3, #0x13
	bl	MenuZeroFillWindowRect
	bl	sub_8064E2C
	bl	ScriptContext2_Disable
	add	r0, r4, #0
	bl	DestroyTask
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe19:
	.size	 ExitItemfinder,.Lfe19-ExitItemfinder
	.align	2, 0
	.globl	ItemfinderCheckForHiddenItems
	.type	 ItemfinderCheckForHiddenItems,function
	.thumb_func
ItemfinderCheckForHiddenItems:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #0xfffffffc
	add	r5, r0, #0
	lsl	r1, r1, #0x18
	lsr	r6, r1, #0x18
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	PlayerGetDestCoords
	ldr	r1, .L125
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r1, #0x0
	strh	r1, [r0, #0xc]
	mov	r3, #0x0
	mov	r9, r4
	ldrb	r0, [r5, #0x3]
	cmp	r3, r0
	bge	.L116	@cond_branch
	sub	r1, r1, #0x5
	mov	r8, r1
.L118:
	lsl	r3, r3, #0x10
	asr	r1, r3, #0x10
	ldr	r2, [r5, #0x10]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r4, r0, #0x2
	add	r1, r4, r2
	ldrb	r0, [r1, #0x5]
	add	r7, r3, #0
	cmp	r0, #0x7
	bne	.L117	@cond_branch
	mov	r2, #0x96
	lsl	r2, r2, #0x2
	add	r0, r2, #0
	ldrh	r1, [r1, #0xa]
	add	r0, r0, r1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L117	@cond_branch
	ldr	r1, [r5, #0x10]
	add	r1, r4, r1
	ldrh	r2, [r1]
	add	r2, r2, #0x7
	mov	r0, sp
	ldrh	r0, [r0]
	sub	r2, r2, r0
	ldrh	r0, [r1, #0x2]
	add	r0, r0, #0x7
	mov	r3, r9
	ldrh	r1, [r3]
	sub	r0, r0, r1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r2, r2, #0x10
	asr	r1, r2, #0x10
	mov	r3, #0xe0
	lsl	r3, r3, #0xb
	add	r2, r2, r3
	lsr	r2, r2, #0x10
	cmp	r2, #0xe
	bhi	.L117	@cond_branch
	lsl	r0, r0, #0x10
	asr	r2, r0, #0x10
	cmp	r2, r8
	blt	.L117	@cond_branch
	cmp	r2, #0x5
	bgt	.L117	@cond_branch
	add	r0, r6, #0
	bl	sub_80C9838
.L117:
	mov	r1, #0x80
	lsl	r1, r1, #0x9
	add	r0, r7, r1
	lsr	r3, r0, #0x10
	asr	r0, r0, #0x10
	ldrb	r2, [r5, #0x3]
	cmp	r0, r2
	blt	.L118	@cond_branch
.L116:
	add	r0, r6, #0
	bl	sub_80C9720
	ldr	r0, .L125
	lsl	r1, r6, #0x2
	add	r1, r1, r6
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r3, #0xc
	ldrsh	r0, [r1, r3]
	cmp	r0, #0x1
	beq	.L122	@cond_branch
	mov	r0, #0x0
	b	.L124
.L126:
	.align	2, 0
.L125:
	.word	gTasks
.L122:
	mov	r0, #0x1
.L124:
	add	sp, sp, #0x4
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe20:
	.size	 ItemfinderCheckForHiddenItems,.Lfe20-ItemfinderCheckForHiddenItems
	.align	2, 0
	.globl	HiddenItemAtPos
	.type	 HiddenItemAtPos,function
	.thumb_func
HiddenItemAtPos:
	push	{r4, r5, r6, lr}
	lsl	r1, r1, #0x10
	lsr	r3, r1, #0x10
	lsl	r2, r2, #0x10
	lsr	r4, r2, #0x10
	ldrb	r2, [r0, #0x3]
	ldr	r5, [r0, #0x10]
	mov	r1, #0x0
	cmp	r1, r2
	bge	.L129	@cond_branch
	lsl	r0, r3, #0x10
	asr	r6, r0, #0x10
	lsl	r0, r4, #0x10
	asr	r4, r0, #0x10
	add	r3, r5, #0
.L131:
	ldrb	r0, [r3, #0x5]
	cmp	r0, #0x7
	bne	.L130	@cond_branch
	ldrh	r0, [r3]
	cmp	r6, r0
	bne	.L130	@cond_branch
	ldrh	r0, [r3, #0x2]
	cmp	r4, r0
	bne	.L130	@cond_branch
	mov	r1, #0x96
	lsl	r1, r1, #0x2
	add	r0, r1, #0
	ldrh	r3, [r3, #0xa]
	add	r0, r0, r3
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L129	@cond_branch
	mov	r0, #0x1
	b	.L136
.L130:
	add	r3, r3, #0xc
	add	r1, r1, #0x1
	cmp	r1, r2
	blt	.L131	@cond_branch
.L129:
	mov	r0, #0x0
.L136:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe21:
	.size	 HiddenItemAtPos,.Lfe21-HiddenItemAtPos
	.align	2, 0
	.globl	sub_80C9688
	.type	 sub_80C9688,function
	.thumb_func
sub_80C9688:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	add	r6, r2, #0
	bl	mapconnection_get_mapheader
	add	r3, r0, #0
	ldrb	r0, [r4]
	cmp	r0, #0x2
	beq	.L139	@cond_branch
	cmp	r0, #0x2
	bgt	.L145	@cond_branch
	cmp	r0, #0x1
	beq	.L140	@cond_branch
	b	.L143
.L145:
	cmp	r0, #0x3
	beq	.L141	@cond_branch
	cmp	r0, #0x4
	beq	.L142	@cond_branch
	b	.L143
.L139:
	ldr	r0, [r4, #0x4]
	add	r0, r0, #0x7
	sub	r0, r5, r0
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	ldr	r0, [r3]
	ldr	r0, [r0, #0x4]
	sub	r0, r0, #0x7
	add	r0, r0, r6
	b	.L147
.L140:
	ldr	r0, [r4, #0x4]
	add	r0, r0, #0x7
	sub	r0, r5, r0
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	ldr	r0, .L150
	ldr	r0, [r0]
	ldr	r0, [r0, #0x4]
	b	.L148
.L151:
	.align	2, 0
.L150:
	.word	gMapHeader
.L141:
	ldr	r0, [r3]
	ldr	r0, [r0]
	sub	r0, r0, #0x7
	add	r0, r0, r5
	b	.L149
.L142:
	ldr	r0, .L152
	ldr	r0, [r0]
	ldr	r0, [r0]
	add	r0, r0, #0x7
	sub	r0, r5, r0
.L149:
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	ldr	r0, [r4, #0x4]
.L148:
	add	r0, r0, #0x7
	sub	r0, r6, r0
.L147:
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	b	.L138
.L153:
	.align	2, 0
.L152:
	.word	gMapHeader
.L143:
	mov	r0, #0x0
	b	.L146
.L138:
	ldr	r0, [r3, #0x4]
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	lsl	r2, r2, #0x10
	asr	r2, r2, #0x10
	bl	HiddenItemAtPos
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
.L146:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe22:
	.size	 sub_80C9688,.Lfe22-sub_80C9688
	.align	2, 0
	.globl	sub_80C9720
	.type	 sub_80C9720,function
	.thumb_func
sub_80C9720:
	.syntax unified
    push {r4-r7,lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5-r7}
    sub sp, 0x14
    lsls r0, 24
    lsrs r0, 24
    str r0, [sp, 0x4]
    ldr r0, _080C9834 @ =gMapHeader
    ldr r1, [r0]
    ldr r0, [r1]
    adds r0, 0x7
    lsls r0, 16
    lsrs r0, 16
    str r0, [sp, 0x8]
    ldr r0, [r1, 0x4]
    adds r0, 0x7
    lsls r0, 16
    lsrs r0, 16
    str r0, [sp, 0xC]
    mov r4, sp
    adds r4, 0x2
    mov r0, sp
    adds r1, r4, 0
    bl PlayerGetDestCoords
    mov r0, sp
    ldrh r0, [r0]
    subs r0, 0x7
    lsls r0, 16
    lsrs r3, r0, 16
    asrs r0, 16
    mov r1, sp
    movs r2, 0
    ldrsh r1, [r1, r2]
    adds r1, 0x7
    cmp r0, r1
    bgt _080C9824
_080C976E:
    mov r5, sp
    ldrh r0, [r5, 0x2]
    subs r0, 0x5
    lsls r0, 16
    lsrs r4, r0, 16
    lsls r2, r4, 16
    asrs r1, r2, 16
    movs r6, 0x2
    ldrsh r0, [r5, r6]
    adds r0, 0x5
    lsls r3, 16
    mov r8, r3
    cmp r1, r0
    bgt _080C980E
    movs r0, 0x7
    str r0, [sp, 0x10]
    mov r1, r8
    asrs r1, 16
    mov r9, r1
    mov r10, r0
_080C9796:
    ldr r3, [sp, 0x10]
    cmp r3, r9
    bgt _080C97B8
    ldr r5, [sp, 0x8]
    lsls r0, r5, 16
    asrs r0, 16
    cmp r9, r0
    bge _080C97B8
    asrs r1, r2, 16
    cmp r10, r1
    bgt _080C97B8
    ldr r6, [sp, 0xC]
    lsls r0, r6, 16
    asrs r0, 16
    lsls r7, r4, 16
    cmp r1, r0
    blt _080C97F6
_080C97B8:
    mov r0, r8
    asrs r5, r0, 16
    lsls r4, 16
    asrs r6, r4, 16
    adds r0, r5, 0
    adds r1, r6, 0
    bl sub_8056BA0
    adds r7, r4, 0
    cmp r0, 0
    beq _080C97F6
    adds r1, r5, 0
    adds r2, r6, 0
    bl sub_80C9688
    lsls r0, 24
    lsrs r0, 24
    cmp r0, 0x1
    bne _080C97F6
    mov r0, sp
    ldrh r1, [r0]
    subs r1, r5, r1
    lsls r1, 16
    asrs r1, 16
    ldrh r2, [r0, 0x2]
    subs r2, r6, r2
    lsls r2, 16
    asrs r2, 16
    ldr r0, [sp, 0x4]
    bl sub_80C9838
_080C97F6:
    movs r1, 0x80
    lsls r1, 9
    adds r0, r7, r1
    lsrs r4, r0, 16
    lsls r2, r4, 16
    asrs r1, r2, 16
    mov r3, sp
    movs r5, 0x2
    ldrsh r0, [r3, r5]
    adds r0, 0x5
    cmp r1, r0
    ble _080C9796
_080C980E:
    movs r1, 0x80
    lsls r1, 9
    add r1, r8
    lsrs r3, r1, 16
    asrs r1, 16
    mov r0, sp
    movs r6, 0
    ldrsh r0, [r0, r6]
    adds r0, 0x7
    cmp r1, r0
    ble _080C976E
_080C9824:
    add sp, 0x14
    pop {r3-r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4-r7}
    pop {r0}
    bx r0
    .align 2, 0
_080C9834: .4byte gMapHeader
    .syntax divided
	.code	16
.Lfe23:
	.size	 sub_80C9720,.Lfe23-sub_80C9720
	.align	2, 0
	.globl	sub_80C9838
	.type	 sub_80C9838,function
	.thumb_func
sub_80C9838:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r1, #0x10
	lsr	r7, r1, #0x10
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	mov	ip, r2
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L171
	add	r3, r1, r0
	mov	r1, #0x4
	ldrsh	r0, [r3, r1]
	cmp	r0, #0
	bne	.L156	@cond_branch
	strh	r7, [r3]
	mov	r0, ip
	strh	r0, [r3, #0x2]
	mov	r0, #0x1
	strh	r0, [r3, #0x4]
	b	.L157
.L172:
	.align	2, 0
.L171:
	.word	gTasks+0x8
.L156:
	mov	r1, #0x0
	ldrsh	r0, [r3, r1]
	cmp	r0, #0
	bge	.L158	@cond_branch
	neg	r0, r0
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	b	.L159
.L158:
	ldrh	r4, [r3]
.L159:
	mov	r1, #0x2
	ldrsh	r0, [r3, r1]
	ldrh	r1, [r3, #0x2]
	mov	r9, r1
	cmp	r0, #0
	bge	.L160	@cond_branch
	neg	r0, r0
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	b	.L161
.L160:
	ldrh	r2, [r3, #0x2]
.L161:
	lsl	r1, r7, #0x10
	asr	r0, r1, #0x10
	cmp	r0, #0
	bge	.L162	@cond_branch
	neg	r0, r0
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	b	.L163
.L162:
	lsr	r6, r1, #0x10
.L163:
	mov	r1, ip
	lsl	r0, r1, #0x10
	asr	r1, r0, #0x10
	mov	r8, r0
	cmp	r1, #0
	bge	.L164	@cond_branch
	neg	r0, r1
	lsl	r0, r0, #0x10
	b	.L170
.L164:
	mov	r0, r8
.L170:
	lsr	r5, r0, #0x10
	lsl	r0, r4, #0x10
	asr	r0, r0, #0x10
	lsl	r1, r2, #0x10
	asr	r2, r1, #0x10
	add	r4, r0, r2
	lsl	r0, r6, #0x10
	asr	r0, r0, #0x10
	lsl	r1, r5, #0x10
	asr	r1, r1, #0x10
	add	r0, r0, r1
	cmp	r4, r0
	ble	.L166	@cond_branch
	strh	r7, [r3]
	mov	r1, ip
	strh	r1, [r3, #0x2]
	b	.L157
.L166:
	cmp	r4, r0
	bne	.L157	@cond_branch
	cmp	r2, r1
	bgt	.L169	@cond_branch
	cmp	r2, r1
	bne	.L157	@cond_branch
	mov	r1, r9
	lsl	r0, r1, #0x10
	cmp	r0, r8
	bge	.L157	@cond_branch
.L169:
	strh	r7, [r3]
	mov	r0, ip
	strh	r0, [r3, #0x2]
.L157:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe24:
	.size	 sub_80C9838,.Lfe24-sub_80C9838
	.align	2, 0
	.globl	GetPlayerDirectionTowardsHiddenItem
	.type	 GetPlayerDirectionTowardsHiddenItem,function
	.thumb_func
GetPlayerDirectionTowardsHiddenItem:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x10
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	lsr	r2, r0, #0x10
	cmp	r0, #0
	bne	.L174	@cond_branch
	cmp	r1, #0
	beq	.L186	@cond_branch
.L174:
	lsl	r0, r2, #0x10
	asr	r2, r0, #0x10
	add	r5, r0, #0
	cmp	r2, #0
	bge	.L175	@cond_branch
	neg	r0, r2
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	b	.L176
.L175:
	lsr	r4, r5, #0x10
.L176:
	lsl	r0, r1, #0x10
	asr	r2, r0, #0x10
	add	r1, r0, #0
	cmp	r2, #0
	bge	.L177	@cond_branch
	neg	r0, r2
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	b	.L178
.L177:
	lsr	r3, r1, #0x10
.L178:
	lsl	r0, r4, #0x10
	asr	r2, r0, #0x10
	lsl	r0, r3, #0x10
	asr	r0, r0, #0x10
	cmp	r2, r0
	ble	.L179	@cond_branch
	cmp	r5, #0
	bge	.L180	@cond_branch
	mov	r0, #0x4
	b	.L189
.L180:
	mov	r0, #0x2
	b	.L189
.L179:
	cmp	r2, r0
	bge	.L183	@cond_branch
	cmp	r1, #0
	blt	.L190	@cond_branch
	b	.L187
.L183:
	cmp	r2, r0
	bne	.L186	@cond_branch
	cmp	r1, #0
	bge	.L187	@cond_branch
.L190:
	mov	r0, #0x1
	b	.L189
.L187:
	mov	r0, #0x3
	b	.L189
.L186:
	mov	r0, #0x0
.L189:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe25:
	.size	 GetPlayerDirectionTowardsHiddenItem,.Lfe25-GetPlayerDirectionTowardsHiddenItem
	.align	2, 0
	.globl	SetPlayerDirectionTowardsItem
	.type	 SetPlayerDirectionTowardsItem,function
	.thumb_func
SetPlayerDirectionTowardsItem:
	push	{r4, r5, lr}
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	mov	r0, #0xff
	mov	r1, #0x0
	mov	r2, #0x0
	bl	GetFieldObjectIdByLocalIdAndMap
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r4, .L192
	add	r0, r0, r4
	bl	FieldObjectClearAnimIfSpecialAnimFinished
	mov	r0, #0xff
	mov	r1, #0x0
	mov	r2, #0x0
	bl	GetFieldObjectIdByLocalIdAndMap
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	bl	FieldObjectClearAnim
	mov	r0, #0xff
	mov	r1, #0x0
	mov	r2, #0x0
	bl	GetFieldObjectIdByLocalIdAndMap
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	bl	UnfreezeMapObject
	add	r0, r5, #0
	bl	PlayerTurnInPlace
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L193:
	.align	2, 0
.L192:
	.word	gMapObjects
.Lfe26:
	.size	 SetPlayerDirectionTowardsItem,.Lfe26-SetPlayerDirectionTowardsItem
	.align	2, 0
	.globl	DisplayItemRespondingMessageAndExitItemfinder
	.type	 DisplayItemRespondingMessageAndExitItemfinder,function
	.thumb_func
DisplayItemRespondingMessageAndExitItemfinder:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r0, #0xff
	mov	r1, #0x0
	mov	r2, #0x0
	bl	GetFieldObjectIdByLocalIdAndMap
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L196
	add	r0, r0, r1
	bl	FieldObjectCheckIfSpecialAnimFinishedOrInactive
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L195	@cond_branch
	ldr	r1, .L196+0x4
	ldr	r2, .L196+0x8
	add	r0, r4, #0
	mov	r3, #0x0
	bl	DisplayItemMessageOnField
.L195:
	pop	{r4}
	pop	{r0}
	bx	r0
.L197:
	.align	2, 0
.L196:
	.word	gMapObjects
	.word	gOtherText_ItemfinderResponding
	.word	ExitItemfinder
.Lfe27:
	.size	 DisplayItemRespondingMessageAndExitItemfinder,.Lfe27-DisplayItemRespondingMessageAndExitItemfinder
	.align	2, 0
	.globl	RotatePlayerAndExitItemfinder
	.type	 RotatePlayerAndExitItemfinder,function
	.thumb_func
RotatePlayerAndExitItemfinder:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r5, r0, #0
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L202
	add	r4, r0, r1
	mov	r0, #0xff
	mov	r1, #0x0
	mov	r2, #0x0
	bl	GetFieldObjectIdByLocalIdAndMap
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L202+0x4
	add	r0, r0, r1
	bl	FieldObjectCheckIfSpecialAnimFinishedOrInactive
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L200	@cond_branch
	mov	r1, #0x4
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	bne	.L199	@cond_branch
.L200:
	ldr	r1, .L202+0x8
	mov	r2, #0xa
	ldrsh	r0, [r4, r2]
	add	r0, r0, r1
	ldrb	r0, [r0]
	bl	SetPlayerDirectionTowardsItem
	mov	r0, #0x1
	strh	r0, [r4, #0x4]
	ldrh	r0, [r4, #0xa]
	add	r0, r0, #0x1
	mov	r1, #0x3
	and	r0, r0, r1
	strh	r0, [r4, #0xa]
	ldrh	r0, [r4, #0x6]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x6]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x4
	bne	.L199	@cond_branch
	ldr	r1, .L202+0xc
	ldr	r2, .L202+0x10
	add	r0, r5, #0
	mov	r3, #0x0
	bl	DisplayItemMessageOnField
.L199:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L203:
	.align	2, 0
.L202:
	.word	gTasks+0x8
	.word	gMapObjects
	.word	gItemFinderDirections
	.word	gOtherText_ItemfinderItemUnderfoot
	.word	ExitItemfinder
.Lfe28:
	.size	 RotatePlayerAndExitItemfinder,.Lfe28-RotatePlayerAndExitItemfinder
	.align	2, 0
	.globl	ItemUseOutOfBattle_PokeblockCase
	.type	 ItemUseOutOfBattle_PokeblockCase,function
	.thumb_func
ItemUseOutOfBattle_PokeblockCase:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r5, r4, #0
	bl	sub_80F9344
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L205	@cond_branch
	ldr	r0, .L209
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrb	r1, [r1, #0xc]
	add	r0, r4, #0
	bl	DisplayDadsAdviceCannotUseItemMessage
	b	.L206
.L210:
	.align	2, 0
.L209:
	.word	gTasks
.L205:
	ldr	r0, .L211
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r2, #0xc
	ldrsh	r0, [r1, r2]
	cmp	r0, #0x1
	beq	.L207	@cond_branch
	mov	r0, #0x0
	bl	sub_810BA7C
	add	r0, r4, #0
	bl	ItemMenu_ConfirmNormalFade
	b	.L206
.L212:
	.align	2, 0
.L211:
	.word	gTasks
.L207:
	ldr	r1, .L213
	ldr	r0, .L213+0x4
	str	r0, [r1]
	mov	r0, #0x1
	bl	sub_810BA7C
	add	r0, r5, #0
	bl	ItemMenu_ConfirmComplexFade
.L206:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L214:
	.align	2, 0
.L213:
	.word	gFieldCallback
	.word	sub_8080E28
.Lfe29:
	.size	 ItemUseOutOfBattle_PokeblockCase,.Lfe29-ItemUseOutOfBattle_PokeblockCase
	.align	2, 0
	.globl	ItemUseOutOfBattle_CoinCase
	.type	 ItemUseOutOfBattle_CoinCase,function
	.thumb_func
ItemUseOutOfBattle_CoinCase:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r4, .L218
	bl	GetCoins
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r4, #0
	mov	r2, #0x0
	mov	r3, #0x4
	bl	ConvertIntToDecimalStringN
	ldr	r4, .L218+0x4
	ldr	r1, .L218+0x8
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	ldr	r1, .L218+0xc
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r1, #0xc
	ldrsh	r0, [r0, r1]
	cmp	r0, #0
	bne	.L216	@cond_branch
	mov	r0, #0x0
	mov	r1, #0xd
	mov	r2, #0xd
	mov	r3, #0x14
	bl	MenuZeroFillWindowRect
	ldr	r2, .L218+0x10
	add	r0, r5, #0
	add	r1, r4, #0
	mov	r3, #0x1
	bl	DisplayItemMessageOnField
	b	.L217
.L219:
	.align	2, 0
.L218:
	.word	gStringVar1
	.word	gStringVar4
	.word	gOtherText_Coins3
	.word	gTasks
	.word	CleanUpItemMenuMessage
.L216:
	ldr	r2, .L220
	add	r0, r5, #0
	add	r1, r4, #0
	mov	r3, #0x0
	bl	DisplayItemMessageOnField
.L217:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L221:
	.align	2, 0
.L220:
	.word	CleanUpOverworldMessage
.Lfe30:
	.size	 ItemUseOutOfBattle_CoinCase,.Lfe30-ItemUseOutOfBattle_CoinCase
	.align	2, 0
	.globl	sub_80C9BB8
	.type	 sub_80C9BB8,function
	.thumb_func
sub_80C9BB8:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r0, .L224
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L223	@cond_branch
	add	r0, r2, #0
	bl	CleanUpItemMenuMessage
.L223:
	pop	{r0}
	bx	r0
.L225:
	.align	2, 0
.L224:
	.word	gMain
.Lfe31:
	.size	 sub_80C9BB8,.Lfe31-sub_80C9BB8
	.align	2, 0
	.globl	sub_80C9BD8
	.type	 sub_80C9BD8,function
	.thumb_func
sub_80C9BD8:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r0, .L228
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L227	@cond_branch
	add	r0, r2, #0
	bl	CleanUpOverworldMessage
.L227:
	pop	{r0}
	bx	r0
.L229:
	.align	2, 0
.L228:
	.word	gMain
.Lfe32:
	.size	 sub_80C9BD8,.Lfe32-sub_80C9BD8
	.align	2, 0
	.globl	ItemUseOutOfBattle_SSTicket
	.type	 ItemUseOutOfBattle_SSTicket,function
	.thumb_func
ItemUseOutOfBattle_SSTicket:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r1, .L233
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r1, #0xc
	ldrsh	r0, [r0, r1]
	cmp	r0, #0
	bne	.L231	@cond_branch
	mov	r0, #0x0
	mov	r1, #0xd
	mov	r2, #0xd
	mov	r3, #0x14
	bl	MenuZeroFillWindowRect
	ldr	r4, .L233+0x4
	ldr	r0, .L233+0x8
	ldrh	r0, [r0]
	bl	ItemId_GetSecondaryId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x16
	add	r0, r0, r4
	ldr	r1, [r0]
	ldr	r2, .L233+0xc
	add	r0, r5, #0
	mov	r3, #0x1
	bl	DisplayItemMessageOnField
	b	.L232
.L234:
	.align	2, 0
.L233:
	.word	gTasks
	.word	gUnknown_083D61DC
	.word	gScriptItemId
	.word	sub_80C9BB8
.L231:
	ldr	r4, .L235
	ldr	r0, .L235+0x4
	ldrh	r0, [r0]
	bl	ItemId_GetSecondaryId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x16
	add	r0, r0, r4
	ldr	r1, [r0]
	ldr	r2, .L235+0x8
	add	r0, r5, #0
	mov	r3, #0x0
	bl	DisplayItemMessageOnField
.L232:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L236:
	.align	2, 0
.L235:
	.word	gUnknown_083D61DC
	.word	gScriptItemId
	.word	sub_80C9BD8
.Lfe33:
	.size	 ItemUseOutOfBattle_SSTicket,.Lfe33-ItemUseOutOfBattle_SSTicket
	.align	2, 0
	.globl	sub_80C9C7C
	.type	 sub_80C9C7C,function
	.thumb_func
sub_80C9C7C:
	push	{r4, lr}
	add	sp, sp, #0xfffffffc
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	IsPlayerFacingUnplantedSoil
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L238	@cond_branch
	ldr	r1, .L240
	ldr	r0, .L240+0x4
	str	r0, [r1]
	ldr	r1, .L240+0x8
	ldr	r0, .L240+0xc
	str	r0, [r1]
	ldr	r1, .L240+0x10
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r2, .L240+0x14
	lsr	r1, r2, #0x10
	mov	r3, #0x0
	strh	r1, [r0, #0x18]
	strh	r2, [r0, #0x1a]
	ldr	r1, .L240+0x18
	str	r1, [r0]
	mov	r0, #0x1
	neg	r0, r0
	str	r3, [sp]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	b	.L239
.L241:
	.align	2, 0
.L240:
	.word	gFieldItemUseCallback
	.word	sub_80C9D00
	.word	gFieldCallback
	.word	ExecuteItemUseFromBlackPalette
	.word	gTasks
	.word	c2_exit_to_overworld_2_switch
	.word	HandleItemMenuPaletteFade
.L238:
	ldr	r0, .L242
	ldrh	r0, [r0]
	bl	ItemId_GetFieldFunc
	add	r1, r0, #0
	add	r0, r4, #0
	bl	_call_via_r1
.L239:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L243:
	.align	2, 0
.L242:
	.word	gScriptItemId
.Lfe34:
	.size	 sub_80C9C7C,.Lfe34-sub_80C9C7C
	.align	2, 0
	.globl	sub_80C9D00
	.type	 sub_80C9D00,function
	.thumb_func
sub_80C9D00:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L245
	ldrh	r0, [r0]
	mov	r1, #0x1
	bl	RemoveBagItem
	bl	ScriptContext2_Enable
	ldr	r0, .L245+0x4
	bl	ScriptContext1_SetupScript
	add	r0, r4, #0
	bl	DestroyTask
	pop	{r4}
	pop	{r0}
	bx	r0
.L246:
	.align	2, 0
.L245:
	.word	gScriptItemId
	.word	gUnknown_081A1654
.Lfe35:
	.size	 sub_80C9D00,.Lfe35-sub_80C9D00
	.align	2, 0
	.globl	ItemUseOutOfBattle_WailmerPail
	.type	 ItemUseOutOfBattle_WailmerPail,function
	.thumb_func
ItemUseOutOfBattle_WailmerPail:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	TryToWaterBerryTree
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L248	@cond_branch
	ldr	r1, .L250
	ldr	r0, .L250+0x4
	str	r0, [r1]
	add	r0, r4, #0
	bl	SetUpItemUseOnFieldCallback
	b	.L249
.L251:
	.align	2, 0
.L250:
	.word	gFieldItemUseCallback
	.word	sub_80C9D74
.L248:
	ldr	r0, .L252
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrb	r1, [r1, #0xc]
	add	r0, r4, #0
	bl	DisplayDadsAdviceCannotUseItemMessage
.L249:
	pop	{r4}
	pop	{r0}
	bx	r0
.L253:
	.align	2, 0
.L252:
	.word	gTasks
.Lfe36:
	.size	 ItemUseOutOfBattle_WailmerPail,.Lfe36-ItemUseOutOfBattle_WailmerPail
	.align	2, 0
	.globl	sub_80C9D74
	.type	 sub_80C9D74,function
	.thumb_func
sub_80C9D74:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	ScriptContext2_Enable
	ldr	r0, .L255
	bl	ScriptContext1_SetupScript
	add	r0, r4, #0
	bl	DestroyTask
	pop	{r4}
	pop	{r0}
	bx	r0
.L256:
	.align	2, 0
.L255:
	.word	gUnknown_081A168F
.Lfe37:
	.size	 sub_80C9D74,.Lfe37-sub_80C9D74
	.align	2, 0
	.globl	sub_80C9D98
	.type	 sub_80C9D98,function
	.thumb_func
sub_80C9D98:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L258
	mov	r1, #0x0
	strb	r1, [r2]
	bl	ItemMenu_ConfirmNormalFade
	pop	{r0}
	bx	r0
.L259:
	.align	2, 0
.L258:
	.word	gUnknown_02038561
.Lfe38:
	.size	 sub_80C9D98,.Lfe38-sub_80C9D98
	.align	2, 0
	.globl	ItemUseOutOfBattle_Medicine
	.type	 ItemUseOutOfBattle_Medicine,function
	.thumb_func
ItemUseOutOfBattle_Medicine:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L261
	ldr	r1, .L261+0x4
	str	r1, [r2]
	bl	sub_80C9D98
	pop	{r0}
	bx	r0
.L262:
	.align	2, 0
.L261:
	.word	gUnknown_03004AE4
	.word	UseMedicine
.Lfe39:
	.size	 ItemUseOutOfBattle_Medicine,.Lfe39-ItemUseOutOfBattle_Medicine
	.align	2, 0
	.globl	ItemUseOutOfBattle_SacredAsh
	.type	 ItemUseOutOfBattle_SacredAsh,function
	.thumb_func
ItemUseOutOfBattle_SacredAsh:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r1, .L270
	mov	r0, #0x0
	strb	r0, [r1]
	mov	r5, #0x0
	b	.L264
.L271:
	.align	2, 0
.L270:
	.word	gLastFieldPokeMenuOpened
.L266:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
.L264:
	cmp	r5, #0x5
	bhi	.L265	@cond_branch
	mov	r0, #0x64
	mov	r1, r5
	mul	r1, r1, r0
	ldr	r0, .L272
	add	r4, r1, r0
	add	r0, r4, #0
	mov	r1, #0xb
	bl	GetMonData
	cmp	r0, #0
	beq	.L266	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x39
	bl	GetMonData
	cmp	r0, #0
	bne	.L266	@cond_branch
	ldr	r0, .L272+0x4
	strb	r5, [r0]
.L265:
	ldr	r1, .L272+0x8
	ldr	r0, .L272+0xc
	str	r0, [r1]
	ldr	r1, .L272+0x10
	mov	r0, #0x4
	strb	r0, [r1]
	add	r0, r6, #0
	bl	ItemMenu_ConfirmNormalFade
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L273:
	.align	2, 0
.L272:
	.word	gPlayerParty
	.word	gLastFieldPokeMenuOpened
	.word	gUnknown_03004AE4
	.word	sub_8070048
	.word	gUnknown_02038561
.Lfe40:
	.size	 ItemUseOutOfBattle_SacredAsh,.Lfe40-ItemUseOutOfBattle_SacredAsh
	.align	2, 0
	.globl	ItemUseOutOfBattle_PPRecovery
	.type	 ItemUseOutOfBattle_PPRecovery,function
	.thumb_func
ItemUseOutOfBattle_PPRecovery:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L275
	ldr	r1, .L275+0x4
	str	r1, [r2]
	bl	sub_80C9D98
	pop	{r0}
	bx	r0
.L276:
	.align	2, 0
.L275:
	.word	gUnknown_03004AE4
	.word	DoPPRecoveryItemEffect
.Lfe41:
	.size	 ItemUseOutOfBattle_PPRecovery,.Lfe41-ItemUseOutOfBattle_PPRecovery
	.align	2, 0
	.globl	ItemUseOutOfBattle_PPUp
	.type	 ItemUseOutOfBattle_PPUp,function
	.thumb_func
ItemUseOutOfBattle_PPUp:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L278
	ldr	r1, .L278+0x4
	str	r1, [r2]
	bl	sub_80C9D98
	pop	{r0}
	bx	r0
.L279:
	.align	2, 0
.L278:
	.word	gUnknown_03004AE4
	.word	DoPPUpItemEffect
.Lfe42:
	.size	 ItemUseOutOfBattle_PPUp,.Lfe42-ItemUseOutOfBattle_PPUp
	.align	2, 0
	.globl	ItemUseOutOfBattle_RareCandy
	.type	 ItemUseOutOfBattle_RareCandy,function
	.thumb_func
ItemUseOutOfBattle_RareCandy:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L281
	ldr	r1, .L281+0x4
	str	r1, [r2]
	bl	sub_80C9D98
	pop	{r0}
	bx	r0
.L282:
	.align	2, 0
.L281:
	.word	gUnknown_03004AE4
	.word	DoRareCandyItemEffect
.Lfe43:
	.size	 ItemUseOutOfBattle_RareCandy,.Lfe43-ItemUseOutOfBattle_RareCandy
	.align	2, 0
	.globl	ItemUseOutOfBattle_TMHM
	.type	 ItemUseOutOfBattle_TMHM,function
	.thumb_func
ItemUseOutOfBattle_TMHM:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r0, #0x0
	mov	r1, #0xd
	mov	r2, #0xd
	mov	r3, #0x14
	bl	MenuZeroFillWindowRect
	ldr	r0, .L286
	ldrh	r1, [r0]
	mov	r0, #0xa9
	lsl	r0, r0, #0x1
	cmp	r1, r0
	bls	.L284	@cond_branch
	ldr	r1, .L286+0x4
	ldr	r2, .L286+0x8
	add	r0, r4, #0
	mov	r3, #0x1
	bl	DisplayItemMessageOnField
	b	.L285
.L287:
	.align	2, 0
.L286:
	.word	gScriptItemId
	.word	gOtherText_BootedHM
	.word	sub_80C9EE4
.L284:
	ldr	r1, .L288
	ldr	r2, .L288+0x4
	add	r0, r4, #0
	mov	r3, #0x1
	bl	DisplayItemMessageOnField
.L285:
	pop	{r4}
	pop	{r0}
	bx	r0
.L289:
	.align	2, 0
.L288:
	.word	gOtherText_BootedTM
	.word	sub_80C9EE4
.Lfe44:
	.size	 ItemUseOutOfBattle_TMHM,.Lfe44-ItemUseOutOfBattle_TMHM
	.align	2, 0
	.globl	sub_80C9EE4
	.type	 sub_80C9EE4,function
	.thumb_func
sub_80C9EE4:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x2
	bl	PlaySE
	ldr	r1, .L291
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L291+0x4
	str	r1, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L292:
	.align	2, 0
.L291:
	.word	gTasks
	.word	sub_80C9F10
.Lfe45:
	.size	 sub_80C9EE4,.Lfe45-sub_80C9EE4
	.align	2, 0
	.globl	sub_80C9F10
	.type	 sub_80C9F10,function
	.thumb_func
sub_80C9F10:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r0, .L296
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L295	@cond_branch
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L294	@cond_branch
.L295:
	ldr	r4, .L296+0x4
	ldr	r0, .L296+0x8
	ldrh	r0, [r0]
	bl	ItemIdToBattleMoveId
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r1, r0, #0x4
	sub	r1, r1, r0
	ldr	r0, .L296+0xc
	add	r1, r1, r0
	add	r0, r4, #0
	bl	StringCopy
	ldr	r4, .L296+0x10
	ldr	r1, .L296+0x14
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	ldr	r2, .L296+0x18
	add	r0, r5, #0
	add	r1, r4, #0
	mov	r3, #0x1
	bl	DisplayItemMessageOnField
.L294:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L297:
	.align	2, 0
.L296:
	.word	gMain
	.word	gStringVar1
	.word	gScriptItemId
	.word	gMoveNames
	.word	gStringVar4
	.word	gOtherText_ContainsMove
	.word	sub_80C9F80
.Lfe46:
	.size	 sub_80C9F10,.Lfe46-sub_80C9F10
	.align	2, 0
	.globl	sub_80C9F80
	.type	 sub_80C9F80,function
	.thumb_func
sub_80C9F80:
	push	{r4, lr}
	add	sp, sp, #0xfffffff8
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x7
	mov	r1, #0x7
	mov	r2, #0x1
	bl	DisplayYesNoMenu
	ldr	r0, .L299
	mov	r1, #0x4
	str	r1, [sp]
	mov	r1, #0x1
	str	r1, [sp, #0x4]
	mov	r1, #0x8
	mov	r2, #0x8
	mov	r3, #0x5
	bl	sub_80A3FA0
	ldr	r1, .L299+0x4
	add	r0, r4, #0
	bl	DoYesNoFuncWithChoice
	add	sp, sp, #0x8
	pop	{r4}
	pop	{r0}
	bx	r0
.L300:
	.align	2, 0
.L299:
	.word	gBGTilemapBuffers+0x800
	.word	gUnknown_083D61F4
.Lfe47:
	.size	 sub_80C9F80,.Lfe47-sub_80C9F80
	.align	2, 0
	.globl	sub_80C9FC0
	.type	 sub_80C9FC0,function
	.thumb_func
sub_80C9FC0:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L302
	ldr	r1, .L302+0x4
	str	r1, [r2]
	bl	sub_80C9D98
	pop	{r0}
	bx	r0
.L303:
	.align	2, 0
.L302:
	.word	gUnknown_03004AE4
	.word	TeachMonTMMove
.Lfe48:
	.size	 sub_80C9FC0,.Lfe48-sub_80C9FC0
	.align	2, 0
	.type	 PrepareItemUseMessage,function
	.thumb_func
PrepareItemUseMessage:
	push	{r4, lr}
	ldr	r4, .L305
	ldrh	r0, [r4]
	mov	r1, #0x1
	bl	RemoveBagItem
	bl	sub_80A3E0C
	ldrh	r0, [r4]
	ldr	r1, .L305+0x4
	bl	CopyItemName
	ldr	r0, .L305+0x8
	ldr	r1, .L305+0xc
	bl	StringExpandPlaceholders
	pop	{r4}
	pop	{r0}
	bx	r0
.L306:
	.align	2, 0
.L305:
	.word	gScriptItemId
	.word	gStringVar2
	.word	gStringVar4
	.word	gOtherText_UsedItem
.Lfe49:
	.size	 PrepareItemUseMessage,.Lfe49-PrepareItemUseMessage
	.align	2, 0
	.globl	ItemUseOutOfBattle_Repel
	.type	 ItemUseOutOfBattle_Repel,function
	.thumb_func
ItemUseOutOfBattle_Repel:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r5, .L310
	add	r0, r5, #0
	bl	VarGet
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L308	@cond_branch
	ldr	r0, .L310+0x4
	ldrh	r0, [r0]
	bl	ItemId_GetHoldEffectParam
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r5, #0
	bl	VarSet
	bl	PrepareItemUseMessage
	ldr	r1, .L310+0x8
	ldr	r2, .L310+0xc
	add	r0, r4, #0
	mov	r3, #0x1
	bl	DisplayItemMessageOnField
	b	.L309
.L311:
	.align	2, 0
.L310:
	.word	0x4021
	.word	gScriptItemId
	.word	gStringVar4
	.word	CleanUpItemMenuMessage
.L308:
	ldr	r1, .L312
	ldr	r2, .L312+0x4
	add	r0, r4, #0
	mov	r3, #0x1
	bl	DisplayItemMessageOnField
.L309:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L313:
	.align	2, 0
.L312:
	.word	gOtherText_RepelLingers
	.word	CleanUpItemMenuMessage
.Lfe50:
	.size	 ItemUseOutOfBattle_Repel,.Lfe50-ItemUseOutOfBattle_Repel
	.align	2, 0
	.globl	sub_80CA07C
	.type	 sub_80CA07C,function
	.thumb_func
sub_80CA07C:
	push	{lr}
	bl	sub_80A3E0C
	ldr	r0, .L315
	ldrh	r0, [r0]
	ldr	r1, .L315+0x4
	bl	CopyItemName
	pop	{r0}
	bx	r0
.L316:
	.align	2, 0
.L315:
	.word	gScriptItemId
	.word	gStringVar2
.Lfe51:
	.size	 sub_80CA07C,.Lfe51-sub_80CA07C
	.align	2, 0
	.globl	sub_80CA098
	.type	 sub_80CA098,function
	.thumb_func
sub_80CA098:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L319
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrh	r0, [r1, #0x26]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x26]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x7
	ble	.L318	@cond_branch
	mov	r0, #0x75
	bl	PlaySE
	ldr	r1, .L319+0x4
	ldr	r2, .L319+0x8
	add	r0, r4, #0
	mov	r3, #0x1
	bl	DisplayItemMessageOnField
.L318:
	pop	{r4}
	pop	{r0}
	bx	r0
.L320:
	.align	2, 0
.L319:
	.word	gTasks
	.word	gStringVar4
	.word	CleanUpItemMenuMessage
.Lfe52:
	.size	 sub_80CA098,.Lfe52-sub_80CA098
	.align	2, 0
	.globl	ItemUseOutOfBattle_BlackWhiteFlute
	.type	 ItemUseOutOfBattle_BlackWhiteFlute,function
	.thumb_func
ItemUseOutOfBattle_BlackWhiteFlute:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r5, r4, #0
	ldr	r0, .L326
	ldrh	r0, [r0]
	cmp	r0, #0x2b
	bne	.L322	@cond_branch
	ldr	r0, .L326+0x4
	bl	FlagSet
	ldr	r0, .L326+0x8
	bl	FlagClear
	bl	sub_80CA07C
	ldr	r0, .L326+0xc
	ldr	r1, .L326+0x10
	bl	StringExpandPlaceholders
	ldr	r1, .L326+0x14
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	b	.L325
.L327:
	.align	2, 0
.L326:
	.word	gScriptItemId
	.word	0x84d
	.word	0x84e
	.word	gStringVar4
	.word	gOtherText_UsedFlute
	.word	gTasks
.L322:
	cmp	r0, #0x2a
	bne	.L323	@cond_branch
	ldr	r0, .L328
	bl	FlagSet
	ldr	r0, .L328+0x4
	bl	FlagClear
	bl	sub_80CA07C
	ldr	r0, .L328+0x8
	ldr	r1, .L328+0xc
	bl	StringExpandPlaceholders
	ldr	r1, .L328+0x10
	lsl	r0, r5, #0x2
	add	r0, r0, r5
.L325:
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L328+0x14
	str	r1, [r0]
	mov	r1, #0x0
	strh	r1, [r0, #0x26]
.L323:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L329:
	.align	2, 0
.L328:
	.word	0x84e
	.word	0x84d
	.word	gStringVar4
	.word	gOtherText_UsedRepel
	.word	gTasks
	.word	sub_80CA098
.Lfe53:
	.size	 ItemUseOutOfBattle_BlackWhiteFlute,.Lfe53-ItemUseOutOfBattle_BlackWhiteFlute
	.align	2, 0
	.globl	task08_080A1C44
	.type	 task08_080A1C44,function
	.thumb_func
task08_080A1C44:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	player_avatar_init_params_reset
	bl	sub_80878A8
	add	r0, r4, #0
	bl	DestroyTask
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe54:
	.size	 task08_080A1C44,.Lfe54-task08_080A1C44
	.align	2, 0
	.globl	EscapeRopeCallback
	.type	 EscapeRopeCallback,function
	.thumb_func
EscapeRopeCallback:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	Overworld_ResetStateAfterDigEscRope
	bl	PrepareItemUseMessage
	ldr	r1, .L332
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r1, #0x0
	strh	r1, [r0, #0x8]
	ldr	r1, .L332+0x4
	ldr	r2, .L332+0x8
	add	r0, r4, #0
	mov	r3, #0x0
	bl	DisplayItemMessageOnField
	pop	{r4}
	pop	{r0}
	bx	r0
.L333:
	.align	2, 0
.L332:
	.word	gTasks
	.word	gStringVar4
	.word	task08_080A1C44
.Lfe55:
	.size	 EscapeRopeCallback,.Lfe55-EscapeRopeCallback
	.align	2, 0
	.globl	CanUseEscapeRopeOnCurrMap
	.type	 CanUseEscapeRopeOnCurrMap,function
	.thumb_func
CanUseEscapeRopeOnCurrMap:
	push	{lr}
	ldr	r0, .L338
	ldrb	r0, [r0, #0x17]
	cmp	r0, #0x4
	beq	.L335	@cond_branch
	mov	r0, #0x0
	b	.L337
.L339:
	.align	2, 0
.L338:
	.word	gMapHeader
.L335:
	mov	r0, #0x1
.L337:
	pop	{r1}
	bx	r1
.Lfe56:
	.size	 CanUseEscapeRopeOnCurrMap,.Lfe56-CanUseEscapeRopeOnCurrMap
	.align	2, 0
	.globl	ItemUseOutOfBattle_EscapeRope
	.type	 ItemUseOutOfBattle_EscapeRope,function
	.thumb_func
ItemUseOutOfBattle_EscapeRope:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	CanUseEscapeRopeOnCurrMap
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L341	@cond_branch
	ldr	r1, .L343
	ldr	r0, .L343+0x4
	str	r0, [r1]
	add	r0, r4, #0
	bl	SetUpItemUseOnFieldCallback
	b	.L342
.L344:
	.align	2, 0
.L343:
	.word	gFieldItemUseCallback
	.word	EscapeRopeCallback
.L341:
	ldr	r0, .L345
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrb	r1, [r1, #0xc]
	add	r0, r4, #0
	bl	DisplayDadsAdviceCannotUseItemMessage
.L342:
	pop	{r4}
	pop	{r0}
	bx	r0
.L346:
	.align	2, 0
.L345:
	.word	gTasks
.Lfe57:
	.size	 ItemUseOutOfBattle_EscapeRope,.Lfe57-ItemUseOutOfBattle_EscapeRope
	.align	2, 0
	.globl	ItemUseOutOfBattle_EvolutionStone
	.type	 ItemUseOutOfBattle_EvolutionStone,function
	.thumb_func
ItemUseOutOfBattle_EvolutionStone:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L348
	ldr	r1, .L348+0x4
	str	r1, [r2]
	bl	sub_80C9D98
	pop	{r0}
	bx	r0
.L349:
	.align	2, 0
.L348:
	.word	gUnknown_03004AE4
	.word	DoEvolutionStoneItemEffect
.Lfe58:
	.size	 ItemUseOutOfBattle_EvolutionStone,.Lfe58-ItemUseOutOfBattle_EvolutionStone
	.align	2, 0
	.globl	ItemUseInBattle_PokeBall
	.type	 ItemUseInBattle_PokeBall,function
	.thumb_func
ItemUseInBattle_PokeBall:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	PlayerPartyAndPokemonStorageFull
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L351	@cond_branch
	ldr	r0, .L353
	ldrh	r0, [r0]
	mov	r1, #0x1
	bl	RemoveBagItem
	add	r0, r4, #0
	bl	sub_80A7094
	b	.L352
.L354:
	.align	2, 0
.L353:
	.word	gScriptItemId
.L351:
	mov	r0, #0x0
	mov	r1, #0xd
	mov	r2, #0xd
	mov	r3, #0x14
	bl	MenuZeroFillWindowRect
	ldr	r1, .L355
	ldr	r2, .L355+0x4
	add	r0, r4, #0
	mov	r3, #0x1
	bl	DisplayItemMessageOnField
.L352:
	pop	{r4}
	pop	{r0}
	bx	r0
.L356:
	.align	2, 0
.L355:
	.word	gOtherText_BoxIsFull
	.word	CleanUpItemMenuMessage
.Lfe59:
	.size	 ItemUseInBattle_PokeBall,.Lfe59-ItemUseInBattle_PokeBall
	.align	2, 0
	.globl	sub_80CA294
	.type	 sub_80CA294,function
	.thumb_func
sub_80CA294:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r0, .L360
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L359	@cond_branch
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L358	@cond_branch
.L359:
	add	r0, r2, #0
	bl	sub_80A7094
.L358:
	pop	{r0}
	bx	r0
.L361:
	.align	2, 0
.L360:
	.word	gMain
.Lfe60:
	.size	 sub_80CA294,.Lfe60-sub_80CA294
	.align	2, 0
	.globl	sub_80CA2BC
	.type	 sub_80CA2BC,function
	.thumb_func
sub_80CA2BC:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r0, .L364
	lsl	r1, r5, #0x2
	add	r1, r1, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrh	r0, [r1, #0x26]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x26]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x7
	ble	.L363	@cond_branch
	mov	r0, #0x1
	bl	PlaySE
	ldr	r4, .L364+0x4
	ldrh	r0, [r4]
	mov	r1, #0x1
	bl	RemoveBagItem
	ldrh	r0, [r4]
	bl	sub_803F378
	add	r1, r0, #0
	ldr	r2, .L364+0x8
	add	r0, r5, #0
	mov	r3, #0x1
	bl	DisplayItemMessageOnField
.L363:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L365:
	.align	2, 0
.L364:
	.word	gTasks
	.word	gScriptItemId
	.word	sub_80CA294
.Lfe61:
	.size	 sub_80CA2BC,.Lfe61-sub_80CA2BC
	.align	2, 0
	.globl	ItemUseInBattle_StatIncrease
	.type	 ItemUseInBattle_StatIncrease,function
	.thumb_func
ItemUseInBattle_StatIncrease:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r1, .L369
	ldr	r0, .L369+0x4
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrh	r4, [r0]
	mov	r0, #0x0
	mov	r1, #0xd
	mov	r2, #0xd
	mov	r3, #0x14
	bl	MenuZeroFillWindowRect
	mov	r0, #0x64
	mul	r0, r0, r4
	ldr	r1, .L369+0x8
	add	r0, r0, r1
	ldr	r1, .L369+0xc
	ldrh	r1, [r1]
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r2, r4, #0
	mov	r3, #0x0
	bl	ExecuteTableBasedItemEffect_
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0
	beq	.L367	@cond_branch
	ldr	r1, .L369+0x10
	ldr	r2, .L369+0x14
	add	r0, r5, #0
	mov	r3, #0x1
	bl	DisplayItemMessageOnField
	b	.L368
.L370:
	.align	2, 0
.L369:
	.word	gBattlePartyID
	.word	gBankInMenu
	.word	gPlayerParty
	.word	gScriptItemId
	.word	gOtherText_WontHaveAnyEffect
	.word	CleanUpItemMenuMessage
.L367:
	ldr	r0, .L371
	lsl	r1, r5, #0x2
	add	r1, r1, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L371+0x4
	str	r0, [r1]
	strh	r2, [r1, #0x26]
.L368:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L372:
	.align	2, 0
.L371:
	.word	gTasks
	.word	sub_80CA2BC
.Lfe62:
	.size	 ItemUseInBattle_StatIncrease,.Lfe62-ItemUseInBattle_StatIncrease
	.align	2, 0
	.globl	sub_80CA394
	.type	 sub_80CA394,function
	.thumb_func
sub_80CA394:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L375
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L374	@cond_branch
	bl	sub_8094E4C
	bl	gpu_pal_allocator_reset__manage_upper_four
	add	r0, r4, #0
	bl	DestroyTask
.L374:
	pop	{r4}
	pop	{r0}
	bx	r0
.L376:
	.align	2, 0
.L375:
	.word	gPaletteFade
.Lfe63:
	.size	 sub_80CA394,.Lfe63-sub_80CA394
	.align	2, 0
	.globl	sub_80CA3C0
	.type	 sub_80CA3C0,function
	.thumb_func
sub_80CA3C0:
	push	{lr}
	add	sp, sp, #0xfffffffc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L378
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldr	r0, .L378+0x4
	str	r0, [r1]
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.L379:
	.align	2, 0
.L378:
	.word	gTasks
	.word	sub_80CA394
.Lfe64:
	.size	 sub_80CA3C0,.Lfe64-sub_80CA3C0
	.align	2, 0
	.globl	ItemUseInBattle_Medicine
	.type	 ItemUseInBattle_Medicine,function
	.thumb_func
ItemUseInBattle_Medicine:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L381
	ldr	r1, .L381+0x4
	str	r1, [r2]
	bl	sub_80CA3C0
	pop	{r0}
	bx	r0
.L382:
	.align	2, 0
.L381:
	.word	gUnknown_03004AE4
	.word	UseMedicine
.Lfe65:
	.size	 ItemUseInBattle_Medicine,.Lfe65-ItemUseInBattle_Medicine
	.align	2, 0
	.globl	unref_sub_80CA410
	.type	 unref_sub_80CA410,function
	.thumb_func
unref_sub_80CA410:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L384
	ldr	r1, .L384+0x4
	str	r1, [r2]
	bl	sub_80CA3C0
	pop	{r0}
	bx	r0
.L385:
	.align	2, 0
.L384:
	.word	gUnknown_03004AE4
	.word	sub_8070048
.Lfe66:
	.size	 unref_sub_80CA410,.Lfe66-unref_sub_80CA410
	.align	2, 0
	.globl	ItemUseInBattle_PPRecovery
	.type	 ItemUseInBattle_PPRecovery,function
	.thumb_func
ItemUseInBattle_PPRecovery:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L387
	ldr	r1, .L387+0x4
	str	r1, [r2]
	bl	sub_80CA3C0
	pop	{r0}
	bx	r0
.L388:
	.align	2, 0
.L387:
	.word	gUnknown_03004AE4
	.word	DoPPRecoveryItemEffect
.Lfe67:
	.size	 ItemUseInBattle_PPRecovery,.Lfe67-ItemUseInBattle_PPRecovery
	.align	2, 0
	.globl	unref_sub_80CA448
	.type	 unref_sub_80CA448,function
	.thumb_func
unref_sub_80CA448:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r0, #0x0
	mov	r1, #0xd
	mov	r2, #0xd
	mov	r3, #0x14
	bl	MenuZeroFillWindowRect
	ldr	r4, .L392
	ldrh	r1, [r4]
	mov	r0, #0x0
	mov	r2, #0x0
	bl	ExecuteTableBasedItemEffect__
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L390	@cond_branch
	ldrh	r0, [r4]
	mov	r1, #0x1
	bl	RemoveBagItem
	ldr	r0, .L392+0x4
	ldr	r1, .L392+0x8
	bl	GetMonNickname
	ldr	r4, .L392+0xc
	ldr	r1, .L392+0x10
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	ldr	r2, .L392+0x14
	add	r0, r5, #0
	add	r1, r4, #0
	mov	r3, #0x1
	bl	DisplayItemMessageOnField
	b	.L391
.L393:
	.align	2, 0
.L392:
	.word	gScriptItemId
	.word	gPlayerParty
	.word	gStringVar1
	.word	gStringVar4
	.word	gOtherText_SnapConfusion
	.word	sub_80A7094
.L390:
	ldr	r1, .L394
	ldr	r2, .L394+0x4
	add	r0, r5, #0
	mov	r3, #0x1
	bl	DisplayItemMessageOnField
.L391:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L395:
	.align	2, 0
.L394:
	.word	gOtherText_WontHaveAnyEffect
	.word	CleanUpItemMenuMessage
.Lfe68:
	.size	 unref_sub_80CA448,.Lfe68-unref_sub_80CA448
	.align	2, 0
	.globl	ItemUseInBattle_Escape
	.type	 ItemUseInBattle_Escape,function
	.thumb_func
ItemUseInBattle_Escape:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r0, #0x0
	mov	r1, #0xd
	mov	r2, #0xd
	mov	r3, #0x14
	bl	MenuZeroFillWindowRect
	ldr	r0, .L399
	ldrh	r1, [r0]
	mov	r0, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L397	@cond_branch
	bl	PrepareItemUseMessage
	ldr	r1, .L399+0x4
	ldr	r2, .L399+0x8
	add	r0, r4, #0
	mov	r3, #0x1
	bl	DisplayItemMessageOnField
	b	.L398
.L400:
	.align	2, 0
.L399:
	.word	gBattleTypeFlags
	.word	gStringVar4
	.word	sub_80A7094
.L397:
	ldr	r0, .L401
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrb	r1, [r1, #0xc]
	add	r0, r4, #0
	bl	DisplayDadsAdviceCannotUseItemMessage
.L398:
	pop	{r4}
	pop	{r0}
	bx	r0
.L402:
	.align	2, 0
.L401:
	.word	gTasks
.Lfe69:
	.size	 ItemUseInBattle_Escape,.Lfe69-ItemUseInBattle_Escape
	.align	2, 0
	.globl	ItemUseOutOfBattle_EnigmaBerry
	.type	 ItemUseOutOfBattle_EnigmaBerry,function
	.thumb_func
ItemUseOutOfBattle_EnigmaBerry:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L425
	ldrh	r0, [r0]
	bl	GetItemEffectType
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	sub	r0, r0, #0x1
	cmp	r0, #0x14
	bls	.LCB3658
	b	.L423	@long jump
.LCB3658:
	lsl	r0, r0, #0x2
	ldr	r1, .L425+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L426:
	.align	2, 0
.L425:
	.word	gScriptItemId
	.word	.L424
	.align	2, 0
	.align	2, 0
.L424:
	.word	.L419
	.word	.L417
	.word	.L417
	.word	.L417
	.word	.L417
	.word	.L417
	.word	.L417
	.word	.L423
	.word	.L423
	.word	.L418
	.word	.L417
	.word	.L417
	.word	.L417
	.word	.L417
	.word	.L417
	.word	.L417
	.word	.L417
	.word	.L423
	.word	.L421
	.word	.L421
	.word	.L422
.L417:
	ldr	r0, .L427
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r0, #0x1
	strh	r0, [r1, #0x26]
	add	r0, r4, #0
	bl	ItemUseOutOfBattle_Medicine
	b	.L404
.L428:
	.align	2, 0
.L427:
	.word	gTasks
.L418:
	ldr	r0, .L429
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r0, #0x1
	strh	r0, [r1, #0x26]
	add	r0, r4, #0
	bl	ItemUseOutOfBattle_SacredAsh
	b	.L404
.L430:
	.align	2, 0
.L429:
	.word	gTasks
.L419:
	ldr	r0, .L431
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r0, #0x1
	strh	r0, [r1, #0x26]
	add	r0, r4, #0
	bl	ItemUseOutOfBattle_RareCandy
	b	.L404
.L432:
	.align	2, 0
.L431:
	.word	gTasks
.L421:
	ldr	r0, .L433
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r0, #0x1
	strh	r0, [r1, #0x26]
	add	r0, r4, #0
	bl	ItemUseOutOfBattle_PPUp
	b	.L404
.L434:
	.align	2, 0
.L433:
	.word	gTasks
.L422:
	ldr	r0, .L435
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r0, #0x1
	strh	r0, [r1, #0x26]
	add	r0, r4, #0
	bl	ItemUseOutOfBattle_PPRecovery
	b	.L404
.L436:
	.align	2, 0
.L435:
	.word	gTasks
.L423:
	ldr	r0, .L437
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r0, #0x4
	strh	r0, [r1, #0x26]
	add	r0, r4, #0
	bl	ItemUseOutOfBattle_CannotUse
.L404:
	pop	{r4}
	pop	{r0}
	bx	r0
.L438:
	.align	2, 0
.L437:
	.word	gTasks
.Lfe70:
	.size	 ItemUseOutOfBattle_EnigmaBerry,.Lfe70-ItemUseOutOfBattle_EnigmaBerry
	.align	2, 0
	.globl	ItemUseInBattle_EnigmaBerry
	.type	 ItemUseInBattle_EnigmaBerry,function
	.thumb_func
ItemUseInBattle_EnigmaBerry:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L454
	ldrh	r0, [r0]
	bl	GetItemEffectType
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x15
	bhi	.L452	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L454+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L455:
	.align	2, 0
.L454:
	.word	gScriptItemId
	.word	.L453
	.align	2, 0
	.align	2, 0
.L453:
	.word	.L441
	.word	.L452
	.word	.L450
	.word	.L450
	.word	.L450
	.word	.L450
	.word	.L450
	.word	.L450
	.word	.L450
	.word	.L450
	.word	.L452
	.word	.L450
	.word	.L452
	.word	.L452
	.word	.L452
	.word	.L452
	.word	.L452
	.word	.L452
	.word	.L452
	.word	.L452
	.word	.L452
	.word	.L451
.L441:
	add	r0, r4, #0
	bl	ItemUseInBattle_StatIncrease
	b	.L440
.L450:
	add	r0, r4, #0
	bl	ItemUseInBattle_Medicine
	b	.L440
.L451:
	add	r0, r4, #0
	bl	ItemUseInBattle_PPRecovery
	b	.L440
.L452:
	add	r0, r4, #0
	bl	ItemUseOutOfBattle_CannotUse
.L440:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe71:
	.size	 ItemUseInBattle_EnigmaBerry,.Lfe71-ItemUseInBattle_EnigmaBerry
	.align	2, 0
	.globl	ItemUseOutOfBattle_CannotUse
	.type	 ItemUseOutOfBattle_CannotUse,function
	.thumb_func
ItemUseOutOfBattle_CannotUse:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L457
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldrb	r1, [r1, #0xc]
	bl	DisplayDadsAdviceCannotUseItemMessage
	pop	{r0}
	bx	r0
.L458:
	.align	2, 0
.L457:
	.word	gTasks
.Lfe72:
	.size	 ItemUseOutOfBattle_CannotUse,.Lfe72-ItemUseOutOfBattle_CannotUse
.text
	.align	2, 0
