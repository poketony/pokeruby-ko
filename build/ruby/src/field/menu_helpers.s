@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section ewram_data,"aw"
	.type	 gUnknown_020388C0,object
	.size	 gUnknown_020388C0,4
gUnknown_020388C0:
	.byte	0x0
	.space	3
	.align	2, 0
	.type	 gUnknown_020388C4,object
	.size	 gUnknown_020388C4,8
gUnknown_020388C4:
	.word	0x0
	.space	4
	.section .rodata
	.type	 gSpriteImage_83E5808,object
gSpriteImage_83E5808:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xd0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x1d
	.byte	0x0
	.byte	0x0
	.byte	0xd0
	.byte	0x71
	.byte	0x0
	.byte	0x0
	.byte	0x1d
	.byte	0x77
	.byte	0x0
	.byte	0xd0
	.byte	0x71
	.byte	0x77
	.byte	0x0
	.byte	0xd0
	.byte	0x77
	.byte	0x77
	.byte	0x0
	.byte	0xd0
	.byte	0xdd
	.byte	0xdd
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xd
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xd1
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x17
	.byte	0xd
	.byte	0x0
	.byte	0x0
	.byte	0x77
	.byte	0xd1
	.byte	0x0
	.byte	0x0
	.byte	0x77
	.byte	0x17
	.byte	0xd
	.byte	0x0
	.byte	0x77
	.byte	0x77
	.byte	0xd
	.byte	0x0
	.byte	0xdd
	.byte	0xdd
	.byte	0xd
	.byte	0x0
	.size	 gSpriteImage_83E5808,64
	.type	 gSpriteImage_83E5848,object
gSpriteImage_83E5848:
	.byte	0x0
	.byte	0xd0
	.byte	0xdd
	.byte	0xdd
	.byte	0x0
	.byte	0xd0
	.byte	0x11
	.byte	0x11
	.byte	0x0
	.byte	0xd0
	.byte	0x71
	.byte	0x77
	.byte	0x0
	.byte	0x0
	.byte	0x7d
	.byte	0x77
	.byte	0x0
	.byte	0x0
	.byte	0xd0
	.byte	0x77
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x7d
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xd0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xdd
	.byte	0xdd
	.byte	0xd
	.byte	0x0
	.byte	0x11
	.byte	0x11
	.byte	0xd
	.byte	0x0
	.byte	0x77
	.byte	0x17
	.byte	0xd
	.byte	0x0
	.byte	0x77
	.byte	0xd7
	.byte	0x0
	.byte	0x0
	.byte	0x77
	.byte	0xd
	.byte	0x0
	.byte	0x0
	.byte	0xd7
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xd
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.size	 gSpriteImage_83E5848,64
	.type	 gSpriteImage_83E5888,object
gSpriteImage_83E5888:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xd0
	.byte	0xdd
	.byte	0x0
	.byte	0x0
	.byte	0x1d
	.byte	0xd1
	.byte	0x0
	.byte	0xd0
	.byte	0x71
	.byte	0xd7
	.byte	0x0
	.byte	0x1d
	.byte	0x77
	.byte	0xd7
	.byte	0xd0
	.byte	0x71
	.byte	0x77
	.byte	0xd7
	.byte	0xd0
	.byte	0x77
	.byte	0x77
	.byte	0xd7
	.byte	0x0
	.byte	0x7d
	.byte	0x77
	.byte	0xd7
	.byte	0x0
	.byte	0xd0
	.byte	0x77
	.byte	0xd7
	.byte	0x0
	.byte	0x0
	.byte	0x7d
	.byte	0xd7
	.byte	0x0
	.byte	0x0
	.byte	0xd0
	.byte	0xdd
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.size	 gSpriteImage_83E5888,64
	.type	 gSpriteImage_83E58C8,object
gSpriteImage_83E58C8:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xdd
	.byte	0xd
	.byte	0x0
	.byte	0x0
	.byte	0x1d
	.byte	0xd1
	.byte	0x0
	.byte	0x0
	.byte	0x1d
	.byte	0x77
	.byte	0xd
	.byte	0x0
	.byte	0x1d
	.byte	0x77
	.byte	0xd7
	.byte	0x0
	.byte	0x1d
	.byte	0x77
	.byte	0x77
	.byte	0xd
	.byte	0x1d
	.byte	0x77
	.byte	0x77
	.byte	0xd
	.byte	0x1d
	.byte	0x77
	.byte	0xd7
	.byte	0x0
	.byte	0x1d
	.byte	0x77
	.byte	0xd
	.byte	0x0
	.byte	0x1d
	.byte	0xd7
	.byte	0x0
	.byte	0x0
	.byte	0xdd
	.byte	0xd
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.size	 gSpriteImage_83E58C8,64
	.type	 gSpriteImage_83E5908,object
gSpriteImage_83E5908:
	.byte	0x0
	.byte	0x88
	.byte	0x88
	.byte	0x0
	.byte	0x80
	.byte	0x77
	.byte	0x77
	.byte	0x8
	.byte	0x78
	.byte	0x89
	.byte	0x88
	.byte	0x87
	.byte	0x78
	.byte	0x38
	.byte	0x83
	.byte	0x88
	.byte	0x86
	.byte	0x53
	.byte	0x35
	.byte	0x68
	.byte	0x65
	.byte	0x53
	.byte	0x35
	.byte	0x56
	.byte	0x50
	.byte	0x34
	.byte	0x43
	.byte	0x5
	.byte	0x0
	.byte	0x55
	.byte	0x55
	.byte	0x0
	.size	 gSpriteImage_83E5908,32
	.type	 gSpriteImage_83E5928,object
gSpriteImage_83E5928:
	.byte	0x0
	.byte	0xbb
	.byte	0xbb
	.byte	0x0
	.byte	0xb0
	.byte	0xaa
	.byte	0xaa
	.byte	0xb
	.byte	0xab
	.byte	0xbc
	.byte	0xbb
	.byte	0xba
	.byte	0xab
	.byte	0x3b
	.byte	0xb3
	.byte	0xbb
	.byte	0xb6
	.byte	0x53
	.byte	0x35
	.byte	0x6b
	.byte	0x65
	.byte	0x53
	.byte	0x35
	.byte	0x56
	.byte	0x50
	.byte	0x34
	.byte	0x43
	.byte	0x5
	.byte	0x0
	.byte	0x55
	.byte	0x55
	.byte	0x0
	.size	 gSpriteImage_83E5928,32
	.align	1, 0
	.type	 Palette_3E5948,object
Palette_3E5948:
	.short	0x4308
	.short	0x2dff
	.short	0x10
	.short	0x0
	.short	0x77bd
	.short	0x6318
	.short	0x4a52
	.short	0x1f
	.short	0x16
	.short	0x631f
	.short	0x7d4a
	.short	0x58c6
	.short	0x7f18
	.short	0x316b
	.short	0x0
	.short	0x0
	.size	 Palette_3E5948,32
	.align	2, 0
	.type	 gUnknown_083E5968,object
	.size	 gUnknown_083E5968,8
gUnknown_083E5968:
	.word	Palette_3E5948
	.short	0x6
	.space	2
	.align	2, 0
	.type	 gOamData_83E5970,object
	.size	 gOamData_83E5970,8
gOamData_83E5970:
	.space	4
	.byte	0x1
	.byte	0x0
	.space	2
	.align	2, 0
	.type	 gOamData_83E5978,object
	.size	 gOamData_83E5978,8
gOamData_83E5978:
	.space	1
	.byte	0x40
	.space	2
	.byte	0x1
	.byte	0x0
	.space	2
	.align	2, 0
	.type	 gOamData_83E5980,object
	.size	 gOamData_83E5980,8
gOamData_83E5980:
	.space	1
	.byte	0x80
	.space	2
	.byte	0x1
	.byte	0x0
	.space	2
	.align	2, 0
	.type	 gSpriteAnim_83E5988,object
gSpriteAnim_83E5988:
	.short	0x0
	.byte	0x0
	.space	1
	.short	0xffffffff
	.space	2
	.size	 gSpriteAnim_83E5988,8
	.align	2, 0
	.type	 gSpriteAnim_83E5990,object
gSpriteAnim_83E5990:
	.short	0x1
	.byte	0x0
	.space	1
	.short	0xffffffff
	.space	2
	.size	 gSpriteAnim_83E5990,8
	.align	2, 0
	.type	 gSpriteAnimTable_83E5998,object
gSpriteAnimTable_83E5998:
	.word	gSpriteAnim_83E5988
	.word	gSpriteAnim_83E5990
	.size	 gSpriteAnimTable_83E5998,8
	.align	2, 0
	.type	 gSpriteImageTable_83E59A0,object
gSpriteImageTable_83E59A0:
	.word	gSpriteImage_83E5808
	.short	0x40
	.space	2
	.word	gSpriteImage_83E5848
	.short	0x40
	.space	2
	.size	 gSpriteImageTable_83E59A0,16
	.align	2, 0
	.type	 gSpriteImageTable_83E59B0,object
gSpriteImageTable_83E59B0:
	.word	gSpriteImage_83E5888
	.short	0x40
	.space	2
	.word	gSpriteImage_83E58C8
	.short	0x40
	.space	2
	.size	 gSpriteImageTable_83E59B0,16
	.align	2, 0
	.type	 gSpriteImageTable_83E59C0,object
gSpriteImageTable_83E59C0:
	.word	gSpriteImage_83E5908
	.short	0x20
	.space	2
	.word	gSpriteImage_83E5928
	.short	0x20
	.space	2
	.size	 gSpriteImageTable_83E59C0,16
	.align	2, 0
	.type	 gSpriteTemplate_83E59D0,object
	.size	 gSpriteTemplate_83E59D0,24
gSpriteTemplate_83E59D0:
	.short	0xffff
	.short	0x6
	.word	gOamData_83E5978
	.word	gSpriteAnimTable_83E5998
	.word	gSpriteImageTable_83E59A0
	.word	gDummySpriteAffineAnimTable
	.word	sub_80F9834
	.align	2, 0
	.type	 gSpriteTemplate_83E59E8,object
	.size	 gSpriteTemplate_83E59E8,24
gSpriteTemplate_83E59E8:
	.short	0xffff
	.short	0x6
	.word	gOamData_83E5980
	.word	gSpriteAnimTable_83E5998
	.word	gSpriteImageTable_83E59B0
	.word	gDummySpriteAffineAnimTable
	.word	sub_80F9834
	.align	2, 0
	.type	 gSpriteTemplate_83E5A00,object
	.size	 gSpriteTemplate_83E5A00,24
gSpriteTemplate_83E5A00:
	.short	0xffff
	.short	0x6
	.word	gOamData_83E5970
	.word	gSpriteAnimTable_83E5998
	.word	gSpriteImageTable_83E59C0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
.text
	.align	2, 0
	.globl	sub_80F9020
	.type	 sub_80F9020,function
	.thumb_func
sub_80F9020:
	push	{r4, r5, lr}
	ldr	r4, .L3
	mov	r5, #0x80
	lsl	r5, r5, #0x4
	add	r0, r4, #0
	mov	r1, #0x0
	add	r2, r5, #0
	bl	memset
	add	r0, r4, r5
	mov	r1, #0x0
	add	r2, r5, #0
	bl	memset
	mov	r0, #0x80
	lsl	r0, r0, #0x5
	add	r4, r4, r0
	add	r0, r4, #0
	mov	r1, #0x0
	add	r2, r5, #0
	bl	memset
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L4:
	.align	2, 0
.L3:
	.word	gBGTilemapBuffers+0x800
.Lfe1:
	.size	 sub_80F9020,.Lfe1-sub_80F9020
	.align	2, 0
	.type	 PrintMessage,function
	.thumb_func
PrintMessage:
	push	{r4, r5, lr}
	add	sp, sp, #0xfffffff8
	add	r5, r0, #0
	lsl	r1, r1, #0x10
	lsr	r4, r1, #0x10
	bl	MenuDisplayMessageBox
	cmp	r4, #0
	beq	.L6	@cond_branch
	ldr	r0, .L7
	mov	r1, #0x4
	str	r1, [sp]
	str	r4, [sp, #0x4]
	mov	r1, #0x2
	mov	r2, #0xf
	mov	r3, #0x1a
	bl	sub_80A3FA0
.L6:
	add	r0, r5, #0
	bl	MenuPrintMessageDefaultCoords
	add	sp, sp, #0x8
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L8:
	.align	2, 0
.L7:
	.word	gBGTilemapBuffers+0x800
.Lfe2:
	.size	 PrintMessage,.Lfe2-PrintMessage
	.align	2, 0
	.type	 sub_80F9090,function
	.thumb_func
sub_80F9090:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	MenuUpdateWindowText
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L10	@cond_branch
	ldr	r0, .L11
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	_call_via_r1
.L10:
	pop	{r4}
	pop	{r0}
	bx	r0
.L12:
	.align	2, 0
.L11:
	.word	gUnknown_0300074C
.Lfe3:
	.size	 sub_80F9090,.Lfe3-sub_80F9090
	.align	2, 0
	.globl	DisplayItemMessageOnField
	.type	 DisplayItemMessageOnField,function
	.thumb_func
DisplayItemMessageOnField:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r0, r1, #0
	add	r5, r2, #0
	add	r1, r3, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	bl	PrintMessage
	ldr	r0, .L14
	str	r5, [r0]
	ldr	r1, .L14+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L14+0x8
	str	r1, [r0]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L15:
	.align	2, 0
.L14:
	.word	gUnknown_0300074C
	.word	gTasks
	.word	sub_80F9090
.Lfe4:
	.size	 DisplayItemMessageOnField,.Lfe4-DisplayItemMessageOnField
	.align	2, 0
	.type	 Task_CallYesOrNoCallback,function
	.thumb_func
Task_CallYesOrNoCallback:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	ProcessMenuInputNoWrap_
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L18	@cond_branch
	cmp	r1, #0
	bgt	.L23	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L20	@cond_branch
	b	.L17
.L23:
	cmp	r1, #0x1
	beq	.L20	@cond_branch
	b	.L17
.L18:
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L24
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	_call_via_r1
	b	.L17
.L25:
	.align	2, 0
.L24:
	.word	gUnknown_020388C4
.L20:
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L26
	ldr	r1, [r0, #0x4]
	add	r0, r4, #0
	bl	_call_via_r1
.L17:
	pop	{r4}
	pop	{r0}
	bx	r0
.L27:
	.align	2, 0
.L26:
	.word	gUnknown_020388C4
.Lfe5:
	.size	 Task_CallYesOrNoCallback,.Lfe5-Task_CallYesOrNoCallback
	.align	2, 0
	.globl	DoYesNoFuncWithChoice
	.type	 DoYesNoFuncWithChoice,function
	.thumb_func
DoYesNoFuncWithChoice:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r3, .L29
	ldr	r2, [r1, #0x4]		@ created by thumb_load_double_from_address
	ldr	r1, [r1]		@ created by thumb_load_double_from_address
	str	r1, [r3]
	str	r2, [r3, #0x4]
	ldr	r2, .L29+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldr	r0, .L29+0x8
	str	r0, [r1]
	bx	lr
.L30:
	.align	2, 0
.L29:
	.word	gUnknown_020388C4
	.word	gTasks
	.word	Task_CallYesOrNoCallback
.Lfe6:
	.size	 DoYesNoFuncWithChoice,.Lfe6-DoYesNoFuncWithChoice
	.section .rodata
.LC13:
	.byte	0xfc
	.byte	0x5
	.byte	0x0
	.byte	0xff
.text
	.align	2, 0
	.type	 PrintStringWithPalette,function
	.thumb_func
PrintStringWithPalette:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #0xfffffffc
	add	r5, r0, #0
	lsl	r1, r1, #0x18
	lsr	r4, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r7, r2, #0x18
	lsl	r3, r3, #0x18
	lsr	r6, r3, #0x18
	ldr	r1, .L34
	mov	r0, sp
	mov	r2, #0x4
	bl	memcpy
	cmp	r4, #0xff
	beq	.L32	@cond_branch
	mov	r0, sp
	strb	r4, [r0, #0x2]
	ldr	r4, .L34+0x4
	add	r0, r4, #0
	mov	r1, sp
	bl	StringCopy
	add	r0, r4, #0
	add	r1, r5, #0
	bl	StringAppend
	mov	r1, sp
	ldr	r0, .L34+0x8
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x6]
	strb	r0, [r1, #0x2]
	add	r0, r4, #0
	bl	StringAppend
	b	.L33
.L35:
	.align	2, 0
.L34:
	.word	.LC13
	.word	gStringVar4
	.word	gMenuWindowPtr
.L32:
	ldr	r0, .L36
	add	r1, r5, #0
	bl	StringCopy
.L33:
	ldr	r0, .L36
	add	r1, r7, #0
	add	r2, r6, #0
	bl	MenuPrint
	add	sp, sp, #0x4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L37:
	.align	2, 0
.L36:
	.word	gStringVar4
.Lfe7:
	.size	 PrintStringWithPalette,.Lfe7-PrintStringWithPalette
	.align	2, 0
	.globl	PrintNumberWithPalette
	.type	 PrintNumberWithPalette,function
	.thumb_func
PrintNumberWithPalette:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	mov	ip, r0
	add	r4, r2, #0
	add	r2, r3, #0
	ldr	r0, [sp, #0x18]
	ldr	r3, [sp, #0x1c]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r8, r1
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	lsl	r3, r3, #0x18
	lsr	r5, r3, #0x18
	ldr	r6, .L41
	add	r0, r6, #0
	mov	r1, ip
	add	r3, r4, #0
	bl	ConvertIntToDecimalStringN
	mov	r0, r8
	cmp	r0, #0xff
	beq	.L39	@cond_branch
	add	r0, r6, #0
	mov	r1, r8
	add	r2, r7, #0
	add	r3, r5, #0
	bl	PrintStringWithPalette
	b	.L40
.L42:
	.align	2, 0
.L41:
	.word	gStringVar1
.L39:
	add	r0, r6, #0
	add	r1, r7, #0
	add	r2, r5, #0
	bl	MenuPrint
.L40:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe8:
	.size	 PrintNumberWithPalette,.Lfe8-PrintNumberWithPalette
	.section .rodata
.LC18:
	.byte	0xef
	.byte	0xff
.text
	.align	2, 0
	.globl	PrintTriangleCursorWithPalette
	.type	 PrintTriangleCursorWithPalette,function
	.thumb_func
PrintTriangleCursorWithPalette:
	push	{r4, r5, r6, lr}
	add	sp, sp, #0xfffffffc
	add	r5, r0, #0
	add	r6, r1, #0
	add	r4, r2, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	lsl	r6, r6, #0x18
	lsr	r6, r6, #0x18
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r1, .L44
	mov	r0, sp
	mov	r2, #0x2
	bl	memcpy
	mov	r0, sp
	add	r1, r4, #0
	add	r2, r5, #0
	add	r3, r6, #0
	bl	PrintStringWithPalette
	add	sp, sp, #0x4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L45:
	.align	2, 0
.L44:
	.word	.LC18
.Lfe9:
	.size	 PrintTriangleCursorWithPalette,.Lfe9-PrintTriangleCursorWithPalette
	.align	2, 0
	.globl	sub_80F9284
	.type	 sub_80F9284,function
	.thumb_func
sub_80F9284:
	push	{lr}
	ldr	r0, .L51
	ldrb	r0, [r0, #0x13]
	cmp	r0, #0x1
	bne	.L47	@cond_branch
	ldr	r0, .L51+0x4
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x80
	lsl	r0, r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L48	@cond_branch
	mov	r0, #0x1
	b	.L50
.L52:
	.align	2, 0
.L51:
	.word	gSaveBlock2
	.word	gMain
.L48:
	mov	r0, #0x80
	lsl	r0, r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L47	@cond_branch
	mov	r0, #0x2
	b	.L50
.L47:
	mov	r0, #0x0
.L50:
	pop	{r1}
	bx	r1
.Lfe10:
	.size	 sub_80F9284,.Lfe10-sub_80F9284
	.align	2, 0
	.globl	sub_80F92BC
	.type	 sub_80F92BC,function
	.thumb_func
sub_80F92BC:
	push	{lr}
	ldr	r0, .L58
	ldrb	r0, [r0, #0x13]
	cmp	r0, #0x1
	bne	.L54	@cond_branch
	ldr	r0, .L58+0x4
	ldrh	r1, [r0, #0x30]
	mov	r0, #0x80
	lsl	r0, r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L55	@cond_branch
	mov	r0, #0x1
	b	.L57
.L59:
	.align	2, 0
.L58:
	.word	gSaveBlock2
	.word	gMain
.L55:
	mov	r0, #0x80
	lsl	r0, r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L54	@cond_branch
	mov	r0, #0x2
	b	.L57
.L54:
	mov	r0, #0x0
.L57:
	pop	{r1}
	bx	r1
.Lfe11:
	.size	 sub_80F92BC,.Lfe11-sub_80F92BC
	.align	2, 0
	.globl	sub_80F92F4
	.type	 sub_80F92F4,function
	.thumb_func
sub_80F92F4:
	push	{lr}
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0xaf
	bne	.L62	@cond_branch
	ldr	r0, .L64
	ldrh	r1, [r0, #0x4]
	ldr	r0, .L64+0x4
	cmp	r1, r0
	bne	.L62	@cond_branch
	mov	r0, #0x0
	b	.L63
.L65:
	.align	2, 0
.L64:
	.word	gSaveBlock1
	.word	0x1919
.L62:
	mov	r0, #0x1
.L63:
	pop	{r1}
	bx	r1
.Lfe12:
	.size	 sub_80F92F4,.Lfe12-sub_80F92F4
	.align	2, 0
	.globl	sub_80F931C
	.type	 sub_80F931C,function
	.thumb_func
sub_80F931C:
	push	{r4, lr}
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	bl	is_c1_link_related_active
	cmp	r0, #0x1
	bne	.L68	@cond_branch
	add	r0, r4, #0
	bl	ItemIsMail
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L68	@cond_branch
	mov	r0, #0x0
	b	.L69
.L68:
	mov	r0, #0x1
.L69:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe13:
	.size	 sub_80F931C,.Lfe13-sub_80F931C
	.align	2, 0
	.globl	sub_80F9344
	.type	 sub_80F9344,function
	.thumb_func
sub_80F9344:
	push	{lr}
	bl	is_c1_link_related_active
	cmp	r0, #0x1
	beq	.L72	@cond_branch
	ldr	r0, .L74
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L71	@cond_branch
.L72:
	mov	r0, #0x1
	b	.L73
.L75:
	.align	2, 0
.L74:
	.word	gReceivedRemoteLinkPlayers
.L71:
	mov	r0, #0x0
.L73:
	pop	{r1}
	bx	r1
.Lfe14:
	.size	 sub_80F9344,.Lfe14-sub_80F9344
	.align	2, 0
	.globl	sub_80F9368
	.type	 sub_80F9368,function
	.thumb_func
sub_80F9368:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #0xfffffff8
	mov	r0, #0x80
	lsl	r0, r0, #0x13
	mov	r1, #0x0
	strh	r1, [r0]
	add	r0, r0, #0xe
	strh	r1, [r0]
	sub	r0, r0, #0x2
	strh	r1, [r0]
	sub	r0, r0, #0x2
	strh	r1, [r0]
	sub	r0, r0, #0x2
	strh	r1, [r0]
	add	r0, r0, #0x14
	strh	r1, [r0]
	add	r0, r0, #0x2
	strh	r1, [r0]
	sub	r0, r0, #0x6
	strh	r1, [r0]
	add	r0, r0, #0x2
	strh	r1, [r0]
	sub	r0, r0, #0x6
	strh	r1, [r0]
	add	r0, r0, #0x2
	strh	r1, [r0]
	sub	r0, r0, #0x6
	strh	r1, [r0]
	add	r0, r0, #0x2
	strh	r1, [r0]
	mov	r3, #0xc0
	lsl	r3, r3, #0x13
	mov	r4, #0xc0
	lsl	r4, r4, #0x9
	add	r0, sp, #0x4
	mov	r8, r0
	mov	r2, sp
	mov	r6, #0x0
	ldr	r1, .L82
	mov	r5, #0x80
	lsl	r5, r5, #0x5
	ldr	r7, .L82+0x4
	mov	r0, #0x81
	lsl	r0, r0, #0x18
	mov	ip, r0
.L79:
	strh	r6, [r2]
	mov	r0, sp
	str	r0, [r1]
	str	r3, [r1, #0x4]
	str	r7, [r1, #0x8]
	ldr	r0, [r1, #0x8]
	add	r3, r3, r5
	sub	r4, r4, r5
	cmp	r4, r5
	bhi	.L79	@cond_branch
	strh	r6, [r2]
	mov	r2, sp
	str	r2, [r1]
	str	r3, [r1, #0x4]
	lsr	r0, r4, #0x1
	mov	r2, ip
	orr	r0, r0, r2
	str	r0, [r1, #0x8]
	ldr	r0, [r1, #0x8]
	mov	r0, #0xe0
	lsl	r0, r0, #0x13
	mov	r3, #0x80
	lsl	r3, r3, #0x3
	mov	r4, #0x0
	str	r4, [sp, #0x4]
	ldr	r2, .L82
	mov	r1, r8
	str	r1, [r2]
	str	r0, [r2, #0x4]
	lsr	r0, r3, #0x2
	mov	r1, #0x85
	lsl	r1, r1, #0x18
	orr	r0, r0, r1
	str	r0, [r2, #0x8]
	ldr	r0, [r2, #0x8]
	mov	r1, #0xa0
	lsl	r1, r1, #0x13
	mov	r0, sp
	strh	r4, [r0]
	str	r0, [r2]
	str	r1, [r2, #0x4]
	lsr	r3, r3, #0x1
	mov	r0, #0x81
	lsl	r0, r0, #0x18
	orr	r3, r3, r0
	str	r3, [r2, #0x8]
	ldr	r0, [r2, #0x8]
	add	sp, sp, #0x8
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L83:
	.align	2, 0
.L82:
	.word	0x40000d4
	.word	0x81000800
.Lfe15:
	.size	 sub_80F9368,.Lfe15-sub_80F9368
	.align	2, 0
	.globl	sub_80F9438
	.type	 sub_80F9438,function
	.thumb_func
sub_80F9438:
	push	{lr}
	mov	r0, #0x0
	bl	SetVBlankCallback
	mov	r0, #0x0
	bl	SetHBlankCallback
	pop	{r0}
	bx	r0
.Lfe16:
	.size	 sub_80F9438,.Lfe16-sub_80F9438
	.align	2, 0
	.globl	sub_80F944C
	.type	 sub_80F944C,function
	.thumb_func
sub_80F944C:
	push	{r4, lr}
	mov	r2, #0x0
	ldr	r4, .L91
	mov	r3, #0xff
.L89:
	add	r0, r2, r4
	ldrb	r1, [r0]
	orr	r1, r1, r3
	strb	r1, [r0]
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x3
	bls	.L89	@cond_branch
	mov	r0, #0x6
	bl	FreeSpritePaletteByTag
	ldr	r0, .L91+0x4
	bl	LoadSpritePalette
	pop	{r4}
	pop	{r0}
	bx	r0
.L92:
	.align	2, 0
.L91:
	.word	gUnknown_020388C0
	.word	gUnknown_083E5968
.Lfe17:
	.size	 sub_80F944C,.Lfe17-sub_80F944C
	.align	2, 0
	.globl	sub_80F9480
	.type	 sub_80F9480,function
	.thumb_func
sub_80F9480:
	push	{r4, lr}
	add	r3, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r2, #0x0
	cmp	r2, r1
	bcs	.L95	@cond_branch
	mov	r4, #0xff
.L97:
	add	r0, r3, r2
	strb	r4, [r0]
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, r1
	bcc	.L97	@cond_branch
.L95:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe18:
	.size	 sub_80F9480,.Lfe18-sub_80F9480
	.align	2, 0
	.globl	sub_80F94A4
	.type	 sub_80F94A4,function
	.thumb_func
sub_80F94A4:
	push	{r4, r5, lr}
	add	r5, r1, #0
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	lsl	r2, r2, #0x10
	lsr	r1, r2, #0x10
	lsl	r3, r3, #0x10
	lsr	r2, r3, #0x10
	cmp	r4, #0x5
	bhi	.L100	@cond_branch
	ldrb	r0, [r5]
	cmp	r0, #0xff
	bne	.L101	@cond_branch
	ldr	r0, .L102
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	lsl	r2, r2, #0x10
	asr	r2, r2, #0x10
	mov	r3, #0x0
	bl	CreateSprite
	strb	r0, [r5]
.L101:
	sub	r0, r4, #0x4
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldrb	r1, [r5]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L102+0x4
	add	r0, r0, r1
	add	r1, r4, #0
	bl	StartSpriteAnim
.L100:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L103:
	.align	2, 0
.L102:
	.word	gSpriteTemplate_83E5A00
	.word	gSprites
.Lfe19:
	.size	 sub_80F94A4,.Lfe19-sub_80F94A4
	.align	2, 0
	.globl	sub_80F94F8
	.type	 sub_80F94F8,function
	.thumb_func
sub_80F94F8:
	push	{r4, lr}
	add	r4, r0, #0
	ldrb	r0, [r4]
	cmp	r0, #0xff
	beq	.L105	@cond_branch
	add	r1, r0, #0
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L106
	add	r0, r0, r1
	bl	DestroySprite
	mov	r0, #0xff
	strb	r0, [r4]
.L105:
	pop	{r4}
	pop	{r0}
	bx	r0
.L107:
	.align	2, 0
.L106:
	.word	gSprites
.Lfe20:
	.size	 sub_80F94F8,.Lfe20-sub_80F94F8
	.align	2, 0
	.globl	sub_80F9520
	.type	 sub_80F9520,function
	.thumb_func
sub_80F9520:
	push	{r4, r5, lr}
	add	r5, r0, #0
	mov	r4, #0x0
.L112:
	add	r0, r5, r4
	bl	sub_80F94F8
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x7
	bls	.L112	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe21:
	.size	 sub_80F9520,.Lfe21-sub_80F9520
	.align	2, 0
	.globl	CreateVerticalScrollIndicators
	.type	 CreateVerticalScrollIndicators,function
	.thumb_func
CreateVerticalScrollIndicators:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	lsl	r1, r1, #0x10
	lsr	r3, r1, #0x10
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	cmp	r4, #0x3
	bls	.LCB992
	b	.L114	@long jump
.LCB992:
	cmp	r4, #0x1
	beq	.L121	@cond_branch
	cmp	r4, #0x1
	bgt	.L135	@cond_branch
	cmp	r4, #0
	beq	.L117	@cond_branch
	ldr	r5, .L139
	b	.L116
.L140:
	.align	2, 0
.L139:
	.word	gUnknown_020388C0
.L135:
	cmp	r4, #0x2
	bne	.LCB1012
	b	.L125	@long jump
.LCB1012:
	cmp	r4, #0x3
	bne	.LCB1014
	b	.L129	@long jump
.LCB1014:
	ldr	r5, .L141
	b	.L116
.L142:
	.align	2, 0
.L141:
	.word	gUnknown_020388C0
.L117:
	ldr	r0, .L143
	ldrb	r1, [r0]
	add	r5, r0, #0
	cmp	r1, #0xff
	beq	.LCB1033
	b	.L116	@long jump
.LCB1033:
	ldr	r0, .L143+0x4
	lsl	r1, r3, #0x10
	asr	r1, r1, #0x10
	lsl	r2, r2, #0x10
	asr	r2, r2, #0x10
	mov	r3, #0x0
	bl	CreateSprite
	strb	r0, [r5]
	ldr	r3, .L143+0x8
	ldrb	r1, [r5]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	ldr	r1, .L143+0xc
	strh	r1, [r0, #0x32]
	ldrb	r0, [r5, #0x1]
	cmp	r0, #0xff
	beq	.L119	@cond_branch
	ldrb	r0, [r5]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r3
	ldrb	r2, [r5, #0x1]
	lsl	r0, r2, #0x4
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	mov	r2, #0x26
	ldrsh	r0, [r0, r2]
	neg	r0, r0
	strh	r0, [r1, #0x26]
	ldrb	r0, [r5]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r3
	ldrb	r2, [r5, #0x1]
	b	.L136
.L144:
	.align	2, 0
.L143:
	.word	gUnknown_020388C0
	.word	gSpriteTemplate_83E59D0
	.word	gSprites
	.word	0xffff
.L119:
	ldrb	r1, [r5]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	strh	r4, [r0, #0x34]
	b	.L116
.L121:
	ldr	r0, .L145
	ldrb	r1, [r0, #0x1]
	add	r5, r0, #0
	cmp	r1, #0xff
	beq	.LCB1113
	b	.L116	@long jump
.LCB1113:
	ldr	r0, .L145+0x4
	lsl	r1, r3, #0x10
	asr	r1, r1, #0x10
	lsl	r2, r2, #0x10
	asr	r2, r2, #0x10
	mov	r3, #0x0
	bl	CreateSprite
	strb	r0, [r5, #0x1]
	ldr	r3, .L145+0x8
	ldrb	r1, [r5, #0x1]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	strh	r4, [r0, #0x32]
	ldrb	r0, [r5]
	cmp	r0, #0xff
	beq	.L123	@cond_branch
	ldrb	r0, [r5, #0x1]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r3
	ldrb	r2, [r5]
	lsl	r0, r2, #0x4
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	mov	r2, #0x26
	ldrsh	r0, [r0, r2]
	neg	r0, r0
	strh	r0, [r1, #0x26]
	ldrb	r0, [r5, #0x1]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r3
	ldrb	r2, [r5]
.L136:
	lsl	r0, r2, #0x4
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	ldrh	r0, [r0, #0x34]
	strh	r0, [r1, #0x34]
	b	.L116
.L146:
	.align	2, 0
.L145:
	.word	gUnknown_020388C0
	.word	gSpriteTemplate_83E59D0
	.word	gSprites
.L123:
	ldrb	r0, [r5, #0x1]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r3
	mov	r0, #0x0
	strh	r0, [r1, #0x34]
	b	.L116
.L125:
	ldr	r0, .L147
	ldrb	r1, [r0, #0x2]
	add	r5, r0, #0
	cmp	r1, #0xff
	bne	.L116	@cond_branch
	ldr	r0, .L147+0x4
	lsl	r1, r3, #0x10
	asr	r1, r1, #0x10
	lsl	r2, r2, #0x10
	asr	r2, r2, #0x10
	mov	r3, #0x0
	bl	CreateSprite
	strb	r0, [r5, #0x2]
	ldr	r3, .L147+0x8
	ldrb	r1, [r5, #0x2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	ldr	r1, .L147+0xc
	strh	r1, [r0, #0x2e]
	ldrb	r0, [r5, #0x3]
	cmp	r0, #0xff
	beq	.L127	@cond_branch
	ldrb	r0, [r5, #0x2]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r3
	ldrb	r2, [r5, #0x3]
	lsl	r0, r2, #0x4
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	mov	r2, #0x24
	ldrsh	r0, [r0, r2]
	neg	r0, r0
	strh	r0, [r1, #0x24]
	ldrb	r0, [r5, #0x2]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r3
	ldrb	r2, [r5, #0x3]
	lsl	r0, r2, #0x4
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	ldrh	r0, [r0, #0x30]
	b	.L137
.L148:
	.align	2, 0
.L147:
	.word	gUnknown_020388C0
	.word	gSpriteTemplate_83E59E8
	.word	gSprites
	.word	0xffff
.L127:
	ldrb	r0, [r5, #0x2]
	b	.L138
.L129:
	ldr	r0, .L149
	ldrb	r1, [r0, #0x3]
	add	r5, r0, #0
	cmp	r1, #0xff
	bne	.L116	@cond_branch
	ldr	r0, .L149+0x4
	lsl	r1, r3, #0x10
	asr	r1, r1, #0x10
	lsl	r2, r2, #0x10
	asr	r2, r2, #0x10
	mov	r3, #0x0
	bl	CreateSprite
	strb	r0, [r5, #0x3]
	ldr	r3, .L149+0x8
	ldrb	r1, [r5, #0x3]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	mov	r1, #0x1
	strh	r1, [r0, #0x2e]
	ldrb	r0, [r5, #0x2]
	cmp	r0, #0xff
	beq	.L131	@cond_branch
	ldrb	r0, [r5, #0x3]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r3
	ldrb	r2, [r5, #0x2]
	lsl	r0, r2, #0x4
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	mov	r2, #0x24
	ldrsh	r0, [r0, r2]
	neg	r0, r0
	strh	r0, [r1, #0x24]
	ldrb	r0, [r5, #0x3]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r3
	ldrb	r2, [r5, #0x2]
	lsl	r0, r2, #0x4
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	ldrh	r0, [r0, #0x30]
	b	.L137
.L150:
	.align	2, 0
.L149:
	.word	gUnknown_020388C0
	.word	gSpriteTemplate_83E59E8
	.word	gSprites
.L131:
	ldrb	r0, [r5, #0x3]
.L138:
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r3
	mov	r0, #0x0
.L137:
	strh	r0, [r1, #0x30]
.L116:
	add	r0, r4, r5
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L151
	add	r0, r0, r1
	mov	r1, #0x1
	and	r1, r1, r4
	bl	StartSpriteAnim
.L114:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L152:
	.align	2, 0
.L151:
	.word	gSprites
.Lfe22:
	.size	 CreateVerticalScrollIndicators,.Lfe22-CreateVerticalScrollIndicators
	.align	2, 0
	.globl	sub_80F979C
	.type	 sub_80F979C,function
	.thumb_func
sub_80F979C:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r3, r1, #0x18
	cmp	r2, #0x3
	bhi	.L154	@cond_branch
	ldr	r0, .L155
	add	r1, r2, r0
	ldrb	r0, [r1]
	cmp	r0, #0xff
	beq	.L154	@cond_branch
	ldr	r2, .L155+0x4
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	add	r1, r1, #0x3e
	mov	r0, #0x1
	add	r2, r3, #0
	and	r2, r2, r0
	lsl	r2, r2, #0x2
	ldrb	r3, [r1]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r2
	strb	r0, [r1]
.L154:
	pop	{r0}
	bx	r0
.L156:
	.align	2, 0
.L155:
	.word	gUnknown_020388C0
	.word	gSprites
.Lfe23:
	.size	 sub_80F979C,.Lfe23-sub_80F979C
	.align	2, 0
	.globl	DestroyVerticalScrollIndicator
	.type	 DestroyVerticalScrollIndicator,function
	.thumb_func
DestroyVerticalScrollIndicator:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x3
	bhi	.L158	@cond_branch
	ldr	r0, .L159
	add	r4, r1, r0
	ldrb	r0, [r4]
	cmp	r0, #0xff
	beq	.L158	@cond_branch
	add	r1, r0, #0
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L159+0x4
	add	r0, r0, r1
	bl	DestroySprite
	mov	r0, #0xff
	strb	r0, [r4]
.L158:
	pop	{r4}
	pop	{r0}
	bx	r0
.L160:
	.align	2, 0
.L159:
	.word	gUnknown_020388C0
	.word	gSprites
.Lfe24:
	.size	 DestroyVerticalScrollIndicator,.Lfe24-DestroyVerticalScrollIndicator
	.align	2, 0
	.globl	LoadScrollIndicatorPalette
	.type	 LoadScrollIndicatorPalette,function
	.thumb_func
LoadScrollIndicatorPalette:
	push	{lr}
	ldr	r0, .L162
	bl	LoadSpritePalette
	pop	{r0}
	bx	r0
.L163:
	.align	2, 0
.L162:
	.word	gUnknown_083E5968
.Lfe25:
	.size	 LoadScrollIndicatorPalette,.Lfe25-LoadScrollIndicatorPalette
	.align	2, 0
	.globl	BuyMenuFreeMemory
	.type	 BuyMenuFreeMemory,function
	.thumb_func
BuyMenuFreeMemory:
	push	{lr}
	mov	r0, #0x6
	bl	FreeSpritePaletteByTag
	pop	{r0}
	bx	r0
.Lfe26:
	.size	 BuyMenuFreeMemory,.Lfe26-BuyMenuFreeMemory
	.align	2, 0
	.type	 sub_80F9834,function
	.thumb_func
sub_80F9834:
	push	{lr}
	add	r2, r0, #0
	mov	r1, #0x30
	ldrsh	r0, [r2, r1]
	cmp	r0, #0
	bne	.L166	@cond_branch
	ldrh	r0, [r2, #0x2e]
	ldrh	r1, [r2, #0x24]
	add	r0, r0, r1
	strh	r0, [r2, #0x24]
.L166:
	mov	r1, #0x34
	ldrsh	r0, [r2, r1]
	cmp	r0, #0
	bne	.L167	@cond_branch
	ldrh	r0, [r2, #0x32]
	ldrh	r1, [r2, #0x26]
	add	r0, r0, r1
	strh	r0, [r2, #0x26]
.L167:
	ldrh	r1, [r2, #0x30]
	add	r1, r1, #0x1
	mov	r3, #0x0
	strh	r1, [r2, #0x30]
	ldrh	r0, [r2, #0x34]
	add	r0, r0, #0x1
	strh	r0, [r2, #0x34]
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	cmp	r1, #0x2
	ble	.L168	@cond_branch
	strh	r3, [r2, #0x30]
.L168:
	mov	r1, #0x34
	ldrsh	r0, [r2, r1]
	cmp	r0, #0x2
	ble	.L169	@cond_branch
	strh	r3, [r2, #0x34]
.L169:
	mov	r0, #0x24
	ldrsh	r1, [r2, r0]
	cmp	r1, #0x8
	beq	.L171	@cond_branch
	mov	r0, #0x8
	neg	r0, r0
	cmp	r1, r0
	bne	.L170	@cond_branch
.L171:
	strh	r3, [r2, #0x24]
.L170:
	mov	r0, #0x26
	ldrsh	r1, [r2, r0]
	cmp	r1, #0x8
	beq	.L173	@cond_branch
	mov	r0, #0x8
	neg	r0, r0
	cmp	r1, r0
	bne	.L172	@cond_branch
.L173:
	mov	r0, #0x0
	strh	r0, [r2, #0x26]
.L172:
	pop	{r0}
	bx	r0
.Lfe27:
	.size	 sub_80F9834,.Lfe27-sub_80F9834
	.align	2, 0
	.globl	sub_80F98A4
	.type	 sub_80F98A4,function
	.thumb_func
sub_80F98A4:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	ldr	r0, .L176
	add	r3, r1, r0
	ldrb	r0, [r3]
	cmp	r0, #0xff
	beq	.L175	@cond_branch
	cmp	r1, #0x3
	bhi	.L175	@cond_branch
	ldr	r2, .L176+0x4
	add	r1, r0, #0
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r2, r2, #0x1c
	add	r0, r0, r2
	ldr	r1, .L176+0x8
	str	r1, [r0]
.L175:
	pop	{r0}
	bx	r0
.L177:
	.align	2, 0
.L176:
	.word	gUnknown_020388C0
	.word	gSprites
	.word	SpriteCallbackDummy
.Lfe28:
	.size	 sub_80F98A4,.Lfe28-sub_80F98A4
	.align	2, 0
	.globl	StartVerticalScrollIndicators
	.type	 StartVerticalScrollIndicators,function
	.thumb_func
StartVerticalScrollIndicators:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	ldr	r0, .L180
	add	r3, r1, r0
	ldrb	r0, [r3]
	cmp	r0, #0xff
	beq	.L179	@cond_branch
	cmp	r1, #0x3
	bhi	.L179	@cond_branch
	ldr	r2, .L180+0x4
	add	r1, r0, #0
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r2, r2, #0x1c
	add	r0, r0, r2
	ldr	r1, .L180+0x8
	str	r1, [r0]
.L179:
	pop	{r0}
	bx	r0
.L181:
	.align	2, 0
.L180:
	.word	gUnknown_020388C0
	.word	gSprites
	.word	sub_80F9834
.Lfe29:
	.size	 StartVerticalScrollIndicators,.Lfe29-StartVerticalScrollIndicators
	.align	2, 0
	.type	 sub_80F9914,function
	.thumb_func
sub_80F9914:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	ldr	r0, .L184
	add	r4, r1, r0
	ldrb	r0, [r4]
	cmp	r0, #0xff
	beq	.L183	@cond_branch
	cmp	r1, #0x3
	bhi	.L183	@cond_branch
	ldr	r3, .L184+0x4
	add	r1, r0, #0
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	mov	r2, #0x0
	strh	r2, [r0, #0x24]
	ldrb	r1, [r4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	strh	r2, [r0, #0x26]
	ldrb	r1, [r4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	strh	r2, [r0, #0x30]
	ldrb	r1, [r4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	strh	r2, [r0, #0x34]
.L183:
	pop	{r4}
	pop	{r0}
	bx	r0
.L185:
	.align	2, 0
.L184:
	.word	gUnknown_020388C0
	.word	gSprites
.Lfe30:
	.size	 sub_80F9914,.Lfe30-sub_80F9914
	.align	2, 0
	.globl	PauseVerticalScrollIndicator
	.type	 PauseVerticalScrollIndicator,function
	.thumb_func
PauseVerticalScrollIndicator:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r4, #0
	bl	sub_80F98A4
	add	r0, r4, #0
	bl	sub_80F9914
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe31:
	.size	 PauseVerticalScrollIndicator,.Lfe31-PauseVerticalScrollIndicator
	.align	2, 0
	.globl	sub_80F9988
	.type	 sub_80F9988,function
	.thumb_func
sub_80F9988:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r3, r1, #0x18
	ldr	r0, .L189
	add	r1, r2, r0
	ldrb	r0, [r1]
	cmp	r0, #0xff
	beq	.L188	@cond_branch
	cmp	r2, #0x3
	bhi	.L188	@cond_branch
	ldr	r2, .L189+0x4
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	mov	r0, #0x3
	add	r2, r3, #0
	and	r2, r2, r0
	lsl	r2, r2, #0x2
	ldrb	r3, [r1, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r2
	strb	r0, [r1, #0x5]
.L188:
	pop	{r0}
	bx	r0
.L190:
	.align	2, 0
.L189:
	.word	gUnknown_020388C0
	.word	gSprites
.Lfe32:
	.size	 sub_80F9988,.Lfe32-sub_80F9988

	.lcomm	gUnknown_0300074C,4
.text
	.align	2, 0
