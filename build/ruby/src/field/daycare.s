@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.globl	gEggMoves
	.section .rodata
	.align	1, 0
	.type	 gEggMoves,object
gEggMoves:
	.short	0x4e21
	.short	0x71
	.short	0x82
	.short	0xdb
	.short	0xcc
	.short	0x50
	.short	0x159
	.short	0x140
	.short	0xae
	.short	0x4e24
	.short	0xbb
	.short	0xf6
	.short	0x9d
	.short	0x2c
	.short	0xc8
	.short	0xfb
	.short	0xe
	.short	0x15d
	.short	0x4e27
	.short	0xf3
	.short	0x72
	.short	0x36
	.short	0xc1
	.short	0xaf
	.short	0x11f
	.short	0x12c
	.short	0x119
	.short	0x4e30
	.short	0xe4
	.short	0xb9
	.short	0xc1
	.short	0xd3
	.short	0x13a
	.short	0x4e33
	.short	0x67
	.short	0xac
	.short	0x9a
	.short	0x2c
	.short	0x44
	.short	0xb3
	.short	0xfd
	.short	0xcf
	.short	0x4e35
	.short	0xb9
	.short	0xce
	.short	0xb8
	.short	0x62
	.short	0xa1
	.short	0x136
	.short	0x8f
	.short	0x4e37
	.short	0xe4
	.short	0x15
	.short	0xb4
	.short	0xfb
	.short	0x131
	.short	0x4e3b
	.short	0xaf
	.short	0xdb
	.short	0x44
	.short	0xe5
	.short	0x9d
	.short	0xe8
	.short	0xe
	.short	0x132
	.short	0x4e3d
	.short	0x30
	.short	0x32
	.short	0x24
	.short	0x74
	.short	0xcc
	.short	0x44
	.short	0xfb
	.short	0x4e40
	.short	0x44
	.short	0x32
	.short	0x30
	.short	0x24
	.short	0x85
	.short	0x5d
	.short	0xfb
	.short	0x4e45
	.short	0xb9
	.short	0x5f
	.short	0xaf
	.short	0xb4
	.short	0x32
	.short	0x150
	.short	0xf4
	.short	0x101
	.short	0x4e49
	.short	0x62
	.short	0xe4
	.short	0xb9
	.short	0x10
	.short	0x12
	.short	0xae
	.short	0x4e4b
	.short	0xe
	.short	0x4b
	.short	0xaf
	.short	0xeb
	.short	0xcc
	.short	0x113
	.short	0x4e4e
	.short	0xce
	.short	0x67
	.short	0x44
	.short	0x3c
	.short	0xaf
	.short	0xe6
	.short	0x71
	.short	0xe4
	.short	0x4e50
	.short	0xe2
	.short	0x67
	.short	0xca
	.short	0x144
	.short	0x4e52
	.short	0xb9
	.short	0x67
	.short	0xf6
	.short	0xe4
	.short	0xfb
	.short	0xfd
	.short	0x9d
	.short	0x4e54
	.short	0xb4
	.short	0xcc
	.short	0x5f
	.short	0x85
	.short	0xf4
	.short	0x112
	.short	0x4e56
	.short	0x5f
	.short	0x3c
	.short	0xc1
	.short	0x71
	.short	0xf8
	.short	0x5e
	.short	0xee
	.short	0x11f
	.short	0x4e58
	.short	0x9d
	.short	0xc1
	.short	0x60
	.short	0x44
	.short	0xb3
	.short	0xfb
	.short	0x117
	.short	0x109
	.short	0x4e5a
	.short	0x22
	.short	0xdb
	.short	0xf2
	.short	0x25
	.short	0x53
	.short	0x150
	.short	0x101
	.short	0x4e5c
	.short	0x36
	.short	0x96
	.short	0x3d
	.short	0x72
	.short	0xaa
	.short	0x15a
	.short	0x12d
	.short	0x4e5f
	.short	0xe3
	.short	0x70
	.short	0x11a
	.short	0x7
	.short	0x9
	.short	0x8
	.short	0x4e62
	.short	0x71
	.short	0x60
	.short	0x1b
	.short	0xe3
	.short	0x109
	.short	0x44
	.short	0x9d
	.short	0x4e65
	.short	0xe
	.short	0xe3
	.short	0x73
	.short	0xeb
	.short	0x8d
	.short	0x113
	.short	0x159
	.short	0x4e68
	.short	0x3e
	.short	0xf3
	.short	0xe5
	.short	0x72
	.short	0xdb
	.short	0x6d
	.short	0x4e6a
	.short	0x5
	.short	0x9d
	.short	0x14f
	.short	0x4e6d
	.short	0xac
	.short	0x25
	.short	0x18
	.short	0x5f
	.short	0xcc
	.short	0x26
	.short	0x4e6f
	.short	0xdb
	.short	0xbb
	.short	0xf8
	.short	0x17
	.short	0x12c
	.short	0xd6
	.short	0xad
	.short	0x4e73
	.short	0xd3
	.short	0xc1
	.short	0x77
	.short	0x10
	.short	0x62
	.short	0xaf
	.short	0x129
	.short	0xae
	.short	0x4e74
	.short	0x62
	.short	0x30
	.short	0x72
	.short	0xb9
	.short	0xaf
	.short	0x11b
	.short	0x4e76
	.short	0x7a
	.short	0xc3
	.short	0x32
	.short	0x20
	.short	0x15
	.short	0xe3
	.short	0xfc
	.short	0x14d
	.short	0x4e78
	.short	0x72
	.short	0xd4
	.short	0x7a
	.short	0x11e
	.short	0xae
	.short	0x145
	.short	0x99
	.short	0x4e7a
	.short	0x3d
	.short	0x24
	.short	0x70
	.short	0xe5
	.short	0x67
	.short	0x14d
	.short	0x4e7c
	.short	0x95
	.short	0xc3
	.short	0x72
	.short	0x136
	.short	0x105
	.short	0x120
	.short	0x99
	.short	0x4e7f
	.short	0x9d
	.short	0xaf
	.short	0x99
	.short	0x14f
	.short	0x4e80
	.short	0x70
	.short	0x112
	.short	0x110
	.short	0x7
	.short	0x9
	.short	0x8
	.short	0x4e82
	.short	0x5b
	.short	0x72
	.short	0x85
	.short	0xaf
	.short	0x15
	.short	0x11a
	.short	0xe
	.short	0x4e86
	.short	0xeb
	.short	0xec
	.short	0x73
	.short	0xf6
	.short	0xf4
	.short	0x113
	.short	0xae
	.short	0x4e88
	.short	0x9d
	.short	0xf6
	.short	0xbb
	.short	0x67
	.short	0x82
	.short	0xc3
	.short	0xe
	.short	0x4e8c
	.short	0xbb
	.short	0xde
	.short	0x22
	.short	0xae
	.short	0x109
	.short	0xd6
	.short	0xad
	.short	0xa4
	.short	0x4e8d
	.short	0x67
	.short	0x95
	.short	0x3c
	.short	0xc2
	.short	0xdc
	.short	0x105
	.short	0x4e8f
	.short	0xf2
	.short	0xb3
	.short	0x9d
	.short	0x44
	.short	0xde
	.short	0xe
	.short	0xae
	.short	0x132
	.short	0x4e91
	.short	0xd9
	.short	0x76
	.short	0xd7
	.short	0x138
	.short	0xa4
	.short	0x4e92
	.short	0xaf
	.short	0x5d
	.short	0x48
	.short	0x73
	.short	0x85
	.short	0x49
	.short	0x10b
	.short	0x4e93
	.short	0x17
	.short	0xc1
	.short	0x74
	.short	0xdb
	.short	0x32
	.short	0x44
	.short	0x132
	.short	0xa4
	.short	0x4e94
	.short	0xaf
	.short	0x3e
	.short	0xbe
	.short	0x32
	.short	0x96
	.short	0x52
	.short	0xe1
	.short	0x4e96
	.short	0x3c
	.short	0x72
	.short	0x38
	.short	0xd6
	.short	0x12c
	.short	0x4e9a
	.short	0xf8
	.short	0x5f
	.short	0x66
	.short	0xf4
	.short	0xfc
	.short	0x10f
	.short	0x4e9b
	.short	0x44
	.short	0xdb
	.short	0xe2
	.short	0xd
	.short	0xb3
	.short	0x71
	.short	0xcb
	.short	0x13e
	.short	0x4e9f
	.short	0x1f
	.short	0xaf
	.short	0xce
	.short	0xb9
	.short	0x4ea3
	.short	0xc1
	.short	0xa4
	.short	0x141
	.short	0x11f
	.short	0x15d
	.short	0xae
	.short	0xd6
	.short	0x20
	.short	0x4ea5
	.short	0xcc
	.short	0xaf
	.short	0xcb
	.short	0xae
	.short	0x141
	.short	0x111
	.short	0x4eaa
	.short	0x3d
	.short	0x3e
	.short	0x15
	.short	0x30
	.short	0x72
	.short	0x9d
	.short	0xbf
	.short	0x4eac
	.short	0x3d
	.short	0x3e
	.short	0xe5
	.short	0x5b
	.short	0xaf
	.short	0x11a
	.short	0x6d
	.short	0x4eae
	.short	0x12
	.short	0xe4
	.short	0xc1
	.short	0xd3
	.short	0xe1
	.short	0xae
	.short	0x4eaf
	.short	0x7a
	.short	0xcc
	.short	0x26
	.short	0xae
	.short	0x5a
	.short	0xa4
	.short	0x4eb3
	.short	0x71
	.short	0x36
	.short	0x72
	.short	0x30
	.short	0xe1
	.short	0x15d
	.short	0x4eb8
	.short	0x16
	.short	0x49
	.short	0x44
	.short	0xf6
	.short	0xaf
	.short	0x10b
	.short	0x113
	.short	0x140
	.short	0x4ebb
	.short	0x9a
	.short	0x62
	.short	0xb3
	.short	0x25
	.short	0xc1
	.short	0x157
	.short	0x150
	.short	0x132
	.short	0x4ebe
	.short	0xf2
	.short	0x25
	.short	0x38
	.short	0xf6
	.short	0x9d
	.short	0x12c
	.short	0x15a
	.short	0x151
	.short	0x4ec1
	.short	0x26
	.short	0xe4
	.short	0xa3
	.short	0x74
	.short	0xb3
	.short	0xa4
	.short	0x10f
	.short	0x112
	.short	0x4ec3
	.short	0x77
	.short	0x30
	.short	0xb9
	.short	0x11
	.short	0x12
	.short	0x8f
	.short	0x129
	.short	0x4ec5
	.short	0x3c
	.short	0x75
	.short	0x13e
	.short	0x4ec7
	.short	0x3c
	.short	0x32
	.short	0x31
	.short	0xe2
	.short	0xe4
	.short	0x144
	.short	0x4eca
	.short	0xaf
	.short	0x67
	.short	0x85
	.short	0x4ecc
	.short	0xb3
	.short	0x75
	.short	0xd9
	.short	0xe3
	.short	0x3
	.short	0x111
	.short	0x10c
	.short	0x4ecd
	.short	0xd9
	.short	0x76
	.short	0x85
	.short	0xbb
	.short	0x96
	.short	0x66
	.short	0x111
	.short	0xa4
	.short	0x4ece
	.short	0xc3
	.short	0xd9
	.short	0xb9
	.short	0x111
	.short	0x139
	.short	0x4ecf
	.short	0xd9
	.short	0x77
	.short	0x40
	.short	0xc1
	.short	0xf8
	.short	0xa4
	.short	0xf4
	.short	0x4ed1
	.short	0x72
	.short	0x41
	.short	0x62
	.short	0xb9
	.short	0xd3
	.short	0xf4
	.short	0x129
	.short	0x11f
	.short	0x4ed3
	.short	0x24
	.short	0x22
	.short	0xdb
	.short	0x67
	.short	0x73
	.short	0x13c
	.short	0x10c
	.short	0x4ed7
	.short	0x71
	.short	0xd9
	.short	0x85
	.short	0xf8
	.short	0xbb
	.short	0xc3
	.short	0x30
	.short	0xa4
	.short	0x4ed9
	.short	0x78
	.short	0x4edb
	.short	0x5d
	.short	0xe3
	.short	0x26
	.short	0x73
	.short	0x85
	.short	0x10e
	.short	0xf4
	.short	0x4ede
	.short	0x44
	.short	0x67
	.short	0xe4
	.short	0x61
	.short	0xb4
	.short	0x15
	.short	0x3
	.short	0xfb
	.short	0x4edf
	.short	0x140
	.short	0xe3
	.short	0x49
	.short	0x10b
	.short	0xae
	.short	0x10e
	.short	0x4ee1
	.short	0x12
	.short	0xb3
	.short	0x8d
	.short	0x144
	.short	0x13e
	.short	0x4ee2
	.short	0x22
	.short	0xf6
	.short	0xdb
	.short	0xae
	.short	0x12c
	.short	0xfe
	.short	0x100
	.short	0xff
	.short	0x4ee6
	.short	0x12
	.short	0x41
	.short	0x77
	.short	0x11
	.short	0x8f
	.short	0x6d
	.short	0x129
	.short	0xc3
	.short	0x4ee8
	.short	0x67
	.short	0xc2
	.short	0xf4
	.short	0x11e
	.short	0x4eeb
	.short	0x24
	.short	0x85
	.short	0xc1
	.short	0xf8
	.short	0xfb
	.short	0xf4
	.short	0x111
	.short	0x115
	.short	0x4eec
	.short	0x73
	.short	0x2a
	.short	0xaf
	.short	0x81
	.short	0x44
	.short	0x148
	.short	0x4eee
	.short	0x75
	.short	0xf6
	.short	0x9d
	.short	0x2c
	.short	0x1d
	.short	0x136
	.short	0xae
	.short	0x4eef
	.short	0xe8
	.short	0x11
	.short	0xd
	.short	0x44
	.short	0x148
	.short	0x4ef1
	.short	0x76
	.short	0xb9
	.short	0x73
	.short	0xd9
	.short	0xf2
	.short	0xd7
	.short	0xad
	.short	0x109
	.short	0x4ef3
	.short	0xaf
	.short	0x72
	.short	0x3d
	.short	0x30
	.short	0x136
	.short	0x4ef5
	.short	0xe6
	.short	0x4ef6
	.short	0x6a
	.short	0x75
	.short	0xaf
	.short	0xce
	.short	0x4ef7
	.short	0x44
	.short	0xb4
	.short	0xc1
	.short	0x73
	.short	0x2c
	.short	0x132
	.short	0xfc
	.short	0x4ef8
	.short	0xf2
	.short	0x24
	.short	0x45
	.short	0x44
	.short	0xe8
	.short	0x139
	.short	0x119
	.short	0xd6
	.short	0x4efa
	.short	0x97
	.short	0x101
	.short	0x4efc
	.short	0x24
	.short	0x2c
	.short	0x22
	.short	0x9d
	.short	0xf6
	.short	0x155
	.short	0x14d
	.short	0x26
	.short	0x4efe
	.short	0x9d
	.short	0x67
	.short	0x36
	.short	0x85
	.short	0x70
	.short	0x113
	.short	0x6d
	.short	0x14d
	.short	0x4eff
	.short	0x3e
	.short	0xbe
	.short	0x30
	.short	0x72
	.short	0x67
	.short	0x56
	.short	0x15e
	.short	0x4f01
	.short	0x3e
	.short	0x62
	.short	0xf8
	.short	0x96
	.short	0xe5
	.short	0x12d
	.short	0x4f02
	.short	0xef
	.short	0x38
	.short	0x72
	.short	0x15
	.short	0x12c
	.short	0x9d
	.short	0x4f03
	.short	0x41
	.short	0xe4
	.short	0x12
	.short	0x8f
	.short	0xae
	.short	0x4f04
	.short	0x53
	.short	0x63
	.short	0xe4
	.short	0x44
	.short	0xb4
	.short	0xb3
	.short	0xfb
	.short	0x105
	.short	0x4f07
	.short	0x74
	.short	0x22
	.short	0xf6
	.short	0xad
	.short	0x44
	.short	0x5a
	.short	0x4f0a
	.short	0xb4
	.short	0x32
	.short	0x2c
	.short	0xcf
	.short	0xf4
	.short	0x146
	.short	0x4f0c
	.short	0xe5
	.short	0x88
	.short	0xb7
	.short	0xaa
	.short	0x10e
	.short	0x4f0e
	.short	0x60
	.short	0xf4
	.short	0xfc
	.short	0x111
	.short	0x8
	.short	0x4f0f
	.short	0x2
	.short	0x70
	.short	0x1b
	.short	0x60
	.short	0xee
	.short	0x7
	.short	0x8
	.short	0x4f10
	.short	0x2
	.short	0x5
	.short	0x70
	.short	0x67
	.short	0xee
	.short	0x9
	.short	0x4f11
	.short	0xd9
	.short	0xb3
	.short	0x45
	.short	0xcb
	.short	0xf4
	.short	0xae
	.short	0x10e
	.short	0xd6
	.short	0x4f16
	.short	0xe4
	.short	0x17
	.short	0xc8
	.short	0x74
	.short	0xf6
	.short	0x15d
	.short	0xae
	.short	0x4f35
	.short	0xf2
	.short	0x12c
	.short	0x11b
	.short	0x49
	.short	0xe1
	.short	0x132
	.short	0x4f38
	.short	0x44
	.short	0xb3
	.short	0xcb
	.short	0xcf
	.short	0x9d
	.short	0x109
	.short	0x4f3b
	.short	0x11f
	.short	0xfd
	.short	0xae
	.short	0x17
	.short	0x12d
	.short	0xf3
	.short	0x4f3e
	.short	0x136
	.short	0x131
	.short	0x157
	.short	0x2b
	.short	0x119
	.short	0x4f40
	.short	0xcc
	.short	0xe4
	.short	0xa4
	.short	0x141
	.short	0x10f
	.short	0x4f47
	.short	0xeb
	.short	0x4b
	.short	0xe6
	.short	0x49
	.short	0xaf
	.short	0x37
	.short	0x4f4a
	.short	0x49
	.short	0x85
	.short	0x62
	.short	0xd
	.short	0x24
	.short	0xce
	.short	0x4f4d
	.short	0xcb
	.short	0xb9
	.short	0x10
	.short	0x13e
	.short	0x4f50
	.short	0xe4
	.short	0x30
	.short	0x11f
	.short	0x77
	.short	0x63
	.short	0x8f
	.short	0x4f52
	.short	0x139
	.short	0xcf
	.short	0xcc
	.short	0xce
	.short	0x10e
	.short	0x4f54
	.short	0xe3
	.short	0x9d
	.short	0x112
	.short	0x32
	.short	0xe2
	.short	0x111
	.short	0x10f
	.short	0x109
	.short	0x4f55
	.short	0x36
	.short	0xef
	.short	0x61
	.short	0x10
	.short	0x15a
	.short	0x4f57
	.short	0xc1
	.short	0x155
	.short	0x3c
	.short	0x38
	.short	0xaa
	.short	0x4f59
	.short	0x26
	.short	0x25
	.short	0xcf
	.short	0xad
	.short	0xd6
	.short	0xae
	.short	0x5a
	.short	0x141
	.short	0x4f5b
	.short	0x10e
	.short	0xf4
	.short	0xfd
	.short	0x139
	.short	0x111
	.short	0xe2
	.short	0xa4
	.short	0x141
	.short	0x4f5d
	.short	0x32
	.short	0x115
	.short	0x10f
	.short	0x4f60
	.short	0xde
	.short	0xcd
	.short	0x99
	.short	0x4f61
	.short	0x11c
	.short	0xcb
	.short	0xd6
	.short	0x119
	.short	0x4f62
	.short	0xf4
	.short	0x69
	.short	0xec
	.short	0x4f63
	.short	0x25
	.short	0xfa
	.short	0xd1
	.short	0x4f65
	.short	0x96
	.short	0x30
	.short	0x15a
	.short	0x12c
	.short	0x4f66
	.short	0x12c
	.short	0x11b
	.short	0x22
	.short	0xf6
	.short	0x4f68
	.short	0xf3
	.short	0xe1
	.short	0x12c
	.short	0x5f
	.short	0x71
	.short	0x6d
	.short	0x4f6a
	.short	0x38
	.short	0x26
	.short	0x25
	.short	0x4f6c
	.short	0x74
	.short	0x62
	.short	0x10
	.short	0x4f6f
	.short	0xb9
	.short	0xc5
	.short	0xc1
	.short	0x10e
	.short	0xee
	.short	0x117
	.short	0xdf
	.short	0x44
	.short	0x4f71
	.short	0xf2
	.short	0x1d
	.short	0xfd
	.short	0xae
	.short	0x81
	.short	0x4f73
	.short	0x150
	.short	0xb8
	.short	0x22
	.short	0xcd
	.short	0x6f
	.short	0x17
	.short	0x4f75
	.short	0x15a
	.short	0xfe
	.short	0x100
	.short	0xff
	.short	0x119
	.short	0x9d
	.short	0xae
	.short	0x5a
	.short	0x4f78
	.short	0x140
	.short	0x33
	.short	0x12a
	.short	0xdf
	.short	0x44
	.short	0x4f7a
	.short	0x14f
	.short	0xbf
	.short	0x4f7e
	.short	0xe3
	.short	0x2f
	.short	0x11f
	.short	0x15
	.short	0x141
	.short	0x4f7f
	.short	0xf8
	.short	0x146
	.short	0xa4
	.short	0x10f
	.short	0x4f81
	.short	0xa4
	.short	0x111
	.short	0x4f82
	.short	0xa4
	.short	0x111
	.short	0x4f83
	.short	0xe
	.short	0xce
	.short	0x131
	.short	0xf4
	.short	0xf6
	.short	0x141
	.short	0x4f84
	.short	0x7
	.short	0x9
	.short	0x8
	.short	0xc1
	.short	0xfc
	.short	0xe2
	.short	0xdf
	.short	0x4f86
	.short	0x61
	.short	0x72
	.short	0xe4
	.short	0x63
	.short	0x4f89
	.short	0x11e
	.short	0xc2
	.short	0xdc
	.short	0x120
	.short	0x106
	.short	0xb9
	.short	0x4f8b
	.short	0xbf
	.short	0xeb
	.short	0x2a
	.short	0xb2
	.short	0x4f8c
	.short	0xe4
	.short	0xa3
	.short	0x22
	.short	0xad
	.short	0x132
	.short	0xae
	.short	0xd6
	.short	0x4f8f
	.short	0x8a
	.short	0x97
	.short	0x7b
	.short	0xdc
	.short	0x4f91
	.short	0x1d
	.short	0x15
	.short	0xd
	.short	0x49
	.short	0x10b
	.short	0x4f92
	.short	0x24
	.short	0xad
	.short	0xcf
	.short	0x146
	.short	0x109
	.short	0x4f95
	.short	0x11f
	.short	0x12c
	.short	0x22
	.short	0x30
	.short	0x70
	.short	0x6d
	.short	0x4f98
	.short	0xe2
	.short	0xb9
	.short	0x26
	.short	0x115
	.short	0xae
	.short	0xa4
	.short	0x4f99
	.short	0x32
	.short	0xc2
	.short	0xc1
	.short	0x136
	.short	0x11e
	.short	0x4f9b
	.short	0xfe
	.short	0x100
	.short	0xff
	.short	0x22
	.short	0x4f9c
	.short	0xaf
	.short	0x18
	.short	0xd
	.short	0x44
	.short	0x2e
	.short	0xae
	.short	0x4f9d
	.short	0xde
	.short	0x82
	.short	0x15a
	.short	0x85
	.short	0xd6
	.short	0x9d
	.short	0x4f9e
	.short	0x11b
	.short	0x22
	.short	0x17
	.short	0x109
	.short	0x4fa1
	.short	0xf8
	.short	0xf4
	.short	0x4fa2
	.short	0xe2
	.short	0x13e
	.short	0x10f
	.short	0x4fa3
	.short	0xe2
	.short	0x13e
	.short	0x4a
	.short	0x4fa4
	.short	0x70
	.short	0x69
	.short	0xf3
	.short	0x9d
	.short	0x4fa6
	.short	0xe5
	.short	0x11a
	.short	0xe
	.short	0x9d
	.short	0x4fa8
	.short	0x32
	.short	0x105
	.short	0xd4
	.short	0x106
	.short	0xc2
	.short	0x4fab
	.short	0x38
	.short	0x25
	.short	0x52
	.short	0xef
	.short	0x15d
	.short	0x4fbb
	.short	0x32
	.short	0xae
	.short	0x5f
	.short	0x8a
	.short	0xffff
	.size	 gEggMoves,2278
	.align	2, 0
	.type	 sCompatibilityMessages,object
sCompatibilityMessages:
	.word	DaycareText_GetAlongVeryWell
	.word	DaycareText_GetAlong
	.word	DaycareText_DontLikeOther
	.word	DaycareText_PlayOther
	.size	 sCompatibilityMessages,16
	.globl	sJapaneseEggNickname
	.type	 sJapaneseEggNickname,object
sJapaneseEggNickname:
	.byte	0x60
	.byte	0x6f
	.byte	0x8b
	.byte	0xff
	.size	 sJapaneseEggNickname,4
.text
	.align	2, 0
	.globl	GetMonNick
	.type	 GetMonNick,function
	.thumb_func
GetMonNick:
	push	{r4, lr}
	add	sp, sp, #0xffffffec
	add	r4, r1, #0
	mov	r1, #0x2
	mov	r2, sp
	bl	GetMonData
	add	r0, r4, #0
	mov	r1, sp
	bl	StringCopy10
	add	sp, sp, #0x14
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe1:
	.size	 GetMonNick,.Lfe1-GetMonNick
	.align	2, 0
	.globl	GetBoxMonNick
	.type	 GetBoxMonNick,function
	.thumb_func
GetBoxMonNick:
	push	{r4, lr}
	add	sp, sp, #0xffffffec
	add	r4, r1, #0
	mov	r1, #0x2
	mov	r2, sp
	bl	GetBoxMonData
	add	r0, r4, #0
	mov	r1, sp
	bl	StringCopy10
	add	sp, sp, #0x14
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe2:
	.size	 GetBoxMonNick,.Lfe2-GetBoxMonNick
	.align	2, 0
	.globl	CountPokemonInDaycare
	.type	 CountPokemonInDaycare,function
	.thumb_func
CountPokemonInDaycare:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	mov	r5, #0x0
	mov	r4, #0x0
.L8:
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x4
	add	r0, r6, r0
	mov	r1, #0xb
	bl	GetBoxMonData
	cmp	r0, #0
	beq	.L7	@cond_branch
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
.L7:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x1
	bls	.L8	@cond_branch
	add	r0, r5, #0
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe3:
	.size	 CountPokemonInDaycare,.Lfe3-CountPokemonInDaycare
	.align	2, 0
	.globl	InitDaycareMailRecordMixing
	.type	 InitDaycareMailRecordMixing,function
	.thumb_func
InitDaycareMailRecordMixing:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	mov	r9, r0
	mov	sl, r1
	mov	r7, #0x0
	mov	r5, #0x0
	mov	r6, sl
	add	r6, r6, #0x74
	mov	r0, #0x1
	mov	r8, r0
.L15:
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x4
	mov	r1, r9
	add	r4, r1, r0
	add	r0, r4, #0
	mov	r1, #0xb
	bl	GetBoxMonData
	cmp	r0, #0
	beq	.L16	@cond_branch
	add	r0, r7, #0x1
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	add	r0, r4, #0
	mov	r1, #0xc
	bl	GetBoxMonData
	add	r1, r0, #0
	cmp	r1, #0
	bne	.L17	@cond_branch
	lsl	r0, r5, #0x1
	add	r0, r6, r0
	b	.L21
.L17:
.L16:
	lsl	r0, r5, #0x1
	add	r0, r6, r0
	mov	r1, r8
.L21:
	strh	r1, [r0]
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x1
	bls	.L15	@cond_branch
	mov	r0, sl
	str	r7, [r0, #0x70]
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe4:
	.size	 InitDaycareMailRecordMixing,.Lfe4-InitDaycareMailRecordMixing
	.align	2, 0
	.type	 Daycare_FindEmptySpot,function
	.thumb_func
Daycare_FindEmptySpot:
	push	{r4, r5, lr}
	add	r5, r0, #0
	mov	r4, #0x0
.L26:
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x4
	add	r0, r5, r0
	mov	r1, #0xb
	bl	GetBoxMonData
	cmp	r0, #0
	bne	.L25	@cond_branch
	lsl	r0, r4, #0x18
	asr	r0, r0, #0x18
	b	.L29
.L25:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x1
	bls	.L26	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
.L29:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe5:
	.size	 Daycare_FindEmptySpot,.Lfe5-Daycare_FindEmptySpot
	.align	2, 0
	.type	 StorePokemonInDaycare,function
	.thumb_func
StorePokemonInDaycare:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	r7, r0, #0
	mov	r8, r1
	mov	r0, r8
	bl	Daycare_FindEmptySpot
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r9, r4
	add	r0, r7, #0
	bl	MonHasMail
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L31	@cond_branch
	lsl	r0, r4, #0x18
	asr	r0, r0, #0x18
	lsl	r4, r0, #0x3
	sub	r4, r4, r0
	lsl	r4, r4, #0x3
	add	r5, r4, #0
	add	r5, r5, #0xa0
	add	r5, r5, r8
	add	r6, r5, #0
	add	r6, r6, #0x24
	ldr	r1, .L32
	add	r0, r6, #0
	bl	StringCopy
	add	r0, r6, #0
	mov	r1, #0xfc
	bl	PadNameString
	add	r6, r6, #0x8
	add	r0, r7, #0
	add	r1, r6, #0
	bl	GetMonNick
	add	r0, r7, #0
	mov	r1, #0x40
	bl	GetMonData
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r4, r4, r8
	ldr	r2, .L32+0x4
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	add	r4, r4, #0xa0
	ldr	r0, .L32+0x8
	add	r1, r1, r0
	ldmia	r1!, {r0, r2, r3}
	stmia	r4!, {r0, r2, r3}
	ldmia	r1!, {r0, r2, r3}
	stmia	r4!, {r0, r2, r3}
	ldmia	r1!, {r0, r2, r3}
	stmia	r4!, {r0, r2, r3}
	add	r0, r7, #0
	bl	TakeMailFromMon
.L31:
	mov	r2, r9
	lsl	r4, r2, #0x18
	asr	r4, r4, #0x18
	lsl	r5, r4, #0x2
	add	r4, r5, r4
	lsl	r4, r4, #0x4
	add	r4, r4, r8
	add	r0, r4, #0
	add	r1, r7, #0
	mov	r2, #0x50
	bl	memcpy
	add	r0, r4, #0
	bl	BoxMonRestorePP
	mov	r0, #0x88
	lsl	r0, r0, #0x1
	add	r0, r0, r8
	add	r0, r0, r5
	mov	r1, #0x0
	str	r1, [r0]
	add	r0, r7, #0
	bl	ZeroMonData
	bl	party_compaction
	bl	CalculatePlayerPartyCount
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L33:
	.align	2, 0
.L32:
	.word	gSaveBlock2
	.word	gSaveBlock1
	.word	0x2b4c
.Lfe6:
	.size	 StorePokemonInDaycare,.Lfe6-StorePokemonInDaycare
	.align	2, 0
	.globl	StoreSelectedPokemonInDaycare
	.type	 StoreSelectedPokemonInDaycare,function
	.thumb_func
StoreSelectedPokemonInDaycare:
	push	{lr}
	ldr	r0, .L35
	ldrb	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L35+0x4
	add	r0, r0, r1
	ldr	r1, .L35+0x8
	bl	StorePokemonInDaycare
	pop	{r0}
	bx	r0
.L36:
	.align	2, 0
.L35:
	.word	gLastFieldPokeMenuOpened
	.word	gPlayerParty
	.word	gSaveBlock1+0x2f9c
.Lfe7:
	.size	 StoreSelectedPokemonInDaycare,.Lfe7-StoreSelectedPokemonInDaycare
	.align	2, 0
	.type	 ShiftDaycareSlots,function
	.thumb_func
ShiftDaycareSlots:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	add	r4, r5, #0
	add	r4, r4, #0x50
	add	r0, r4, #0
	mov	r1, #0xb
	bl	GetBoxMonData
	cmp	r0, #0
	beq	.L38	@cond_branch
	add	r0, r5, #0
	mov	r1, #0xb
	bl	GetBoxMonData
	add	r6, r0, #0
	cmp	r6, #0
	bne	.L38	@cond_branch
	add	r0, r5, #0
	add	r1, r4, #0
	mov	r2, #0x50
	bl	memcpy
	add	r0, r4, #0
	bl	ZeroBoxMonData
	add	r0, r5, #0
	add	r0, r0, #0xa0
	add	r4, r4, #0x88
	add	r1, r4, #0
	mov	r2, #0x38
	bl	memcpy
	mov	r0, #0x88
	lsl	r0, r0, #0x1
	add	r2, r5, r0
	add	r0, r0, #0x4
	add	r1, r5, r0
	ldr	r0, [r1]
	str	r0, [r2]
	str	r6, [r1]
	add	r0, r4, #0
	bl	ClearDaycareMail
.L38:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe8:
	.size	 ShiftDaycareSlots,.Lfe8-ShiftDaycareSlots
	.align	2, 0
	.type	 ApplyDaycareExperience,function
	.thumb_func
ApplyDaycareExperience:
	push	{r4, r5, r6, r7, lr}
	add	r4, r0, #0
	mov	r5, #0x0
	ldr	r7, .L52
.L43:
	add	r0, r4, #0
	bl	TryIncrementMonLevel
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L41	@cond_branch
	mov	r6, #0x1
	add	r5, r5, #0x1
	b	.L45
.L53:
	.align	2, 0
.L52:
	.word	0xffff
.L47:
	mov	r6, #0x0
	cmp	r0, r7
	bne	.L45	@cond_branch
	ldr	r0, .L54
	ldrh	r1, [r0]
	add	r0, r4, #0
	bl	DeleteFirstMoveAndGiveMoveToMon
.L45:
	add	r0, r4, #0
	add	r1, r6, #0
	bl	MonTryLearningNewMove
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0
	bne	.L47	@cond_branch
	cmp	r5, #0x63
	ble	.L43	@cond_branch
.L41:
	add	r0, r4, #0
	bl	CalculateMonStats
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L55:
	.align	2, 0
.L54:
	.word	gMoveToLearn
.Lfe9:
	.size	 ApplyDaycareExperience,.Lfe9-ApplyDaycareExperience
	.align	2, 0
	.type	 TakeSelectedPokemonFromDaycare,function
	.thumb_func
TakeSelectedPokemonFromDaycare:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #0xffffff98
	add	r5, r0, #0
	lsl	r1, r1, #0x18
	lsr	r4, r1, #0x18
	lsl	r7, r4, #0x2
	add	r0, r7, r4
	lsl	r0, r0, #0x4
	add	r6, r5, r0
	ldr	r1, .L59
	add	r0, r6, #0
	bl	GetBoxMonNick
	add	r0, r6, #0
	mov	r1, #0xb
	bl	GetBoxMonData
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r9, r0
	add	r0, r6, #0
	mov	r1, sp
	bl	sub_803B4B4
	mov	r0, sp
	mov	r1, #0x38
	bl	GetMonData
	cmp	r0, #0x64
	beq	.L57	@cond_branch
	mov	r0, sp
	mov	r1, #0x19
	bl	GetMonData
	mov	r2, #0x88
	lsl	r2, r2, #0x1
	add	r1, r5, r2
	add	r1, r1, r7
	ldr	r1, [r1]
	add	r0, r0, r1
	str	r0, [sp, #0x64]
	add	r2, sp, #0x64
	mov	r0, sp
	mov	r1, #0x19
	bl	SetMonData
	mov	r0, sp
	bl	ApplyDaycareExperience
.L57:
	ldr	r0, .L59+0x4
	mov	r1, #0xfa
	lsl	r1, r1, #0x1
	add	r1, r1, r0
	mov	r8, r1
	mov	r0, r8
	mov	r1, sp
	mov	r2, #0x64
	bl	memcpy
	lsl	r0, r4, #0x3
	sub	r0, r0, r4
	lsl	r1, r0, #0x3
	add	r0, r5, r1
	add	r0, r0, #0xc0
	ldrh	r0, [r0]
	cmp	r0, #0
	beq	.L58	@cond_branch
	add	r4, r1, #0
	add	r4, r4, #0xa0
	add	r4, r5, r4
	mov	r0, r8
	add	r1, r4, #0
	bl	GiveMailToMon2
	add	r0, r4, #0
	bl	ClearDaycareMail
.L58:
	bl	party_compaction
	add	r0, r6, #0
	bl	ZeroBoxMonData
	mov	r2, #0x88
	lsl	r2, r2, #0x1
	add	r0, r5, r2
	add	r0, r0, r7
	mov	r1, #0x0
	str	r1, [r0]
	add	r0, r5, #0
	bl	ShiftDaycareSlots
	bl	CalculatePlayerPartyCount
	mov	r0, r9
	add	sp, sp, #0x68
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L60:
	.align	2, 0
.L59:
	.word	gStringVar1
	.word	gPlayerParty
.Lfe10:
	.size	 TakeSelectedPokemonFromDaycare,.Lfe10-TakeSelectedPokemonFromDaycare
	.align	2, 0
	.globl	TakePokemonFromDaycare
	.type	 TakePokemonFromDaycare,function
	.thumb_func
TakePokemonFromDaycare:
	push	{lr}
	ldr	r0, .L62
	ldr	r1, .L62+0x4
	ldrb	r1, [r1]
	bl	TakeSelectedPokemonFromDaycare
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	pop	{r1}
	bx	r1
.L63:
	.align	2, 0
.L62:
	.word	gSaveBlock1+0x2f9c
	.word	gSpecialVar_0x8004
.Lfe11:
	.size	 TakePokemonFromDaycare,.Lfe11-TakePokemonFromDaycare
	.align	2, 0
	.type	 GetLevelAfterDaycareSteps,function
	.thumb_func
GetLevelAfterDaycareSteps:
	push	{r4, r5, lr}
	add	sp, sp, #0xffffffac
	add	r4, r0, #0
	add	r5, r1, #0
	mov	r0, sp
	add	r1, r4, #0
	mov	r2, #0x50
	bl	memcpy
	add	r0, r4, #0
	mov	r1, #0x19
	bl	GetBoxMonData
	add	r0, r0, r5
	str	r0, [sp, #0x50]
	add	r2, sp, #0x50
	mov	r0, sp
	mov	r1, #0x19
	bl	SetBoxMonData
	mov	r0, sp
	bl	GetLevelFromBoxMonExp
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	sp, sp, #0x54
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe12:
	.size	 GetLevelAfterDaycareSteps,.Lfe12-GetLevelAfterDaycareSteps
	.align	2, 0
	.type	 GetNumLevelsGainedFromSteps,function
	.thumb_func
GetNumLevelsGainedFromSteps:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	r5, r0, #0
	lsl	r4, r1, #0x18
	lsr	r4, r4, #0x18
	lsl	r0, r4, #0x2
	mov	r8, r0
	add	r4, r4, r8
	lsl	r4, r4, #0x4
	add	r4, r5, r4
	add	r0, r4, #0
	bl	GetLevelFromBoxMonExp
	add	r6, r0, #0
	lsl	r6, r6, #0x18
	lsr	r6, r6, #0x18
	mov	r0, #0x88
	lsl	r0, r0, #0x1
	add	r5, r5, r0
	add	r5, r5, r8
	ldr	r1, [r5]
	add	r0, r4, #0
	bl	GetLevelAfterDaycareSteps
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	sub	r0, r0, r6
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe13:
	.size	 GetNumLevelsGainedFromSteps,.Lfe13-GetNumLevelsGainedFromSteps
	.align	2, 0
	.type	 GetNumLevelsGainedForDaycareSlot,function
	.thumb_func
GetNumLevelsGainedForDaycareSlot:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	lsl	r4, r1, #0x18
	lsr	r4, r4, #0x18
	add	r1, r4, #0
	bl	GetNumLevelsGainedFromSteps
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x4
	add	r6, r6, r0
	ldr	r1, .L67
	add	r0, r6, #0
	bl	GetBoxMonNick
	ldr	r0, .L67+0x4
	add	r1, r5, #0
	mov	r2, #0x0
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	add	r0, r5, #0
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L68:
	.align	2, 0
.L67:
	.word	gStringVar1
	.word	gStringVar2
.Lfe14:
	.size	 GetNumLevelsGainedForDaycareSlot,.Lfe14-GetNumLevelsGainedForDaycareSlot
	.align	2, 0
	.type	 GetDaycareCostForSelectedMon,function
	.thumb_func
GetDaycareCostForSelectedMon:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	lsl	r4, r1, #0x18
	lsr	r4, r4, #0x18
	add	r1, r4, #0
	bl	GetNumLevelsGainedFromSteps
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x4
	add	r6, r6, r0
	ldr	r1, .L70
	add	r0, r6, #0
	bl	GetBoxMonNick
	mov	r0, #0x64
	mov	r4, r5
	mul	r4, r4, r0
	add	r4, r4, #0x64
	ldr	r0, .L70+0x4
	add	r1, r4, #0
	mov	r2, #0x0
	mov	r3, #0x5
	bl	ConvertIntToDecimalStringN
	add	r0, r4, #0
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L71:
	.align	2, 0
.L70:
	.word	gStringVar1
	.word	gStringVar2
.Lfe15:
	.size	 GetDaycareCostForSelectedMon,.Lfe15-GetDaycareCostForSelectedMon
	.align	2, 0
	.globl	GetDaycareCost
	.type	 GetDaycareCost,function
	.thumb_func
GetDaycareCost:
	push	{lr}
	ldr	r0, .L73
	ldr	r1, .L73+0x4
	ldrb	r1, [r1]
	bl	GetDaycareCostForSelectedMon
	ldr	r1, .L73+0x8
	strh	r0, [r1]
	pop	{r0}
	bx	r0
.L74:
	.align	2, 0
.L73:
	.word	gSaveBlock1+0x2f9c
	.word	gSpecialVar_0x8004
	.word	gSpecialVar_0x8005
.Lfe16:
	.size	 GetDaycareCost,.Lfe16-GetDaycareCost
	.align	2, 0
	.globl	Debug_AddDaycareSteps
	.type	 Debug_AddDaycareSteps,function
	.thumb_func
Debug_AddDaycareSteps:
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r2, .L76
	ldr	r1, .L76+0x4
	add	r3, r2, r1
	ldr	r1, [r3]
	add	r1, r1, r0
	str	r1, [r3]
	ldr	r1, .L76+0x8
	add	r2, r2, r1
	ldr	r1, [r2]
	add	r1, r1, r0
	str	r1, [r2]
	bx	lr
.L77:
	.align	2, 0
.L76:
	.word	gSaveBlock1
	.word	0x30ac
	.word	0x30b0
.Lfe17:
	.size	 Debug_AddDaycareSteps,.Lfe17-Debug_AddDaycareSteps
	.align	2, 0
	.globl	GetNumLevelsGainedFromDaycare
	.type	 GetNumLevelsGainedFromDaycare,function
	.thumb_func
GetNumLevelsGainedFromDaycare:
	push	{r4, r5, lr}
	ldr	r5, .L81
	ldrh	r1, [r5]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x4
	ldr	r4, .L81+0x4
	add	r0, r0, r4
	mov	r1, #0xb
	bl	GetBoxMonData
	cmp	r0, #0
	bne	.L79	@cond_branch
	mov	r0, #0x0
	b	.L80
.L82:
	.align	2, 0
.L81:
	.word	gSpecialVar_0x8004
	.word	gSaveBlock1+0x2f9c
.L79:
	ldrb	r1, [r5]
	add	r0, r4, #0
	bl	GetNumLevelsGainedForDaycareSlot
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
.L80:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe18:
	.size	 GetNumLevelsGainedFromDaycare,.Lfe18-GetNumLevelsGainedFromDaycare
	.align	2, 0
	.type	 ClearDaycareMail,function
	.thumb_func
ClearDaycareMail:
	push	{lr}
	mov	r3, #0x0
	mov	r2, #0x7
	add	r1, r0, #0
	add	r1, r1, #0x2b
.L87:
	strb	r3, [r1]
	sub	r1, r1, #0x1
	sub	r2, r2, #0x1
	cmp	r2, #0
	bge	.L87	@cond_branch
	add	r2, r0, #0
	add	r2, r2, #0x2c
	mov	r3, #0x0
	add	r1, r0, #0
	add	r1, r1, #0x36
.L89:
	strb	r3, [r1]
	sub	r1, r1, #0x1
	cmp	r1, r2
	bge	.L89	@cond_branch
	bl	ClearMailStruct
	pop	{r0}
	bx	r0
.Lfe19:
	.size	 ClearDaycareMail,.Lfe19-ClearDaycareMail
	.align	2, 0
	.globl	unref_sub_8041824
	.type	 unref_sub_8041824,function
	.thumb_func
unref_sub_8041824:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	mov	r5, #0x0
.L98:
	lsl	r4, r5, #0x2
	add	r0, r4, r5
	lsl	r0, r0, #0x4
	add	r0, r6, r0
	bl	ZeroBoxMonData
	mov	r1, #0x88
	lsl	r1, r1, #0x1
	add	r0, r6, r1
	add	r0, r0, r4
	mov	r4, #0x0
	str	r4, [r0]
	lsl	r0, r5, #0x3
	sub	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, #0xa0
	add	r0, r6, r0
	bl	ClearDaycareMail
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x1
	bls	.L98	@cond_branch
	mov	r2, #0x8c
	lsl	r2, r2, #0x1
	add	r0, r6, r2
	mov	r1, #0x0
	strh	r4, [r0]
	add	r2, r2, #0x2
	add	r0, r6, r2
	strb	r1, [r0]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe20:
	.size	 unref_sub_8041824,.Lfe20-unref_sub_8041824
	.align	2, 0
	.globl	GetEggSpecies
	.type	 GetEggSpecies,function
	.thumb_func
GetEggSpecies:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	mov	r0, #0x0
	mov	r8, r0
	ldr	r0, .L119
	mov	ip, r0
.L104:
	mov	r7, #0x0
	mov	r6, #0x1
	mov	r4, #0x80
	lsl	r4, r4, #0x9
	mov	r5, #0x28
	mov	r3, ip
	add	r3, r3, #0x28
.L108:
	mov	r1, #0x0
	ldrh	r0, [r3, #0x4]
	cmp	r0, r2
	bne	.L111	@cond_branch
	lsr	r2, r4, #0x10
	b	.L106
.L120:
	.align	2, 0
.L119:
	.word	gEvolutionTable
.L111:
	add	r1, r1, #0x1
	cmp	r1, #0x4
	bgt	.L110	@cond_branch
	lsl	r0, r1, #0x3
	add	r0, r0, r5
	add	r0, r0, ip
	ldrh	r0, [r0, #0x4]
	cmp	r0, r2
	bne	.L111	@cond_branch
	lsr	r2, r4, #0x10
	mov	r7, #0x1
.L110:
	cmp	r7, #0
	bne	.L106	@cond_branch
	mov	r0, #0x80
	lsl	r0, r0, #0x9
	add	r4, r4, r0
	add	r5, r5, #0x28
	add	r3, r3, #0x28
	add	r6, r6, #0x1
	ldr	r0, .L121
	cmp	r6, r0
	ble	.L108	@cond_branch
.L106:
	mov	r0, #0xce
	lsl	r0, r0, #0x1
	cmp	r6, r0
	beq	.L102	@cond_branch
	mov	r0, #0x1
	add	r8, r8, r0
	mov	r0, r8
	cmp	r0, #0x4
	ble	.L104	@cond_branch
.L102:
	add	r0, r2, #0
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L122:
	.align	2, 0
.L121:
	.word	0x19b
.Lfe21:
	.size	 GetEggSpecies,.Lfe21-GetEggSpecies
	.align	2, 0
	.type	 _TriggerPendingDaycareEgg,function
	.thumb_func
_TriggerPendingDaycareEgg:
	push	{r4, lr}
	add	r4, r0, #0
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r1, .L124
	bl	__umodsi3
	add	r0, r0, #0x1
	mov	r1, #0x8c
	lsl	r1, r1, #0x1
	add	r4, r4, r1
	strh	r0, [r4]
	mov	r0, #0x86
	bl	FlagSet
	pop	{r4}
	pop	{r0}
	bx	r0
.L125:
	.align	2, 0
.L124:
	.word	0xfffe
.Lfe22:
	.size	 _TriggerPendingDaycareEgg,.Lfe22-_TriggerPendingDaycareEgg
	.align	2, 0
	.type	 _TriggerPendingDaycareMaleEgg,function
	.thumb_func
_TriggerPendingDaycareMaleEgg:
	push	{r4, lr}
	add	r4, r0, #0
	bl	Random
	mov	r2, #0x80
	lsl	r2, r2, #0x8
	add	r1, r2, #0
	mov	r2, #0x8c
	lsl	r2, r2, #0x1
	add	r4, r4, r2
	orr	r1, r1, r0
	strh	r1, [r4]
	mov	r0, #0x86
	bl	FlagSet
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe23:
	.size	 _TriggerPendingDaycareMaleEgg,.Lfe23-_TriggerPendingDaycareMaleEgg
	.align	2, 0
	.globl	TriggerPendingDaycareEgg
	.type	 TriggerPendingDaycareEgg,function
	.thumb_func
TriggerPendingDaycareEgg:
	push	{lr}
	ldr	r0, .L128
	bl	_TriggerPendingDaycareEgg
	pop	{r0}
	bx	r0
.L129:
	.align	2, 0
.L128:
	.word	gSaveBlock1+0x2f9c
.Lfe24:
	.size	 TriggerPendingDaycareEgg,.Lfe24-TriggerPendingDaycareEgg
	.align	2, 0
	.globl	TriggerPendingDaycareMaleEgg
	.type	 TriggerPendingDaycareMaleEgg,function
	.thumb_func
TriggerPendingDaycareMaleEgg:
	push	{lr}
	ldr	r0, .L131
	bl	_TriggerPendingDaycareMaleEgg
	pop	{r0}
	bx	r0
.L132:
	.align	2, 0
.L131:
	.word	gSaveBlock1+0x2f9c
.Lfe25:
	.size	 TriggerPendingDaycareMaleEgg,.Lfe25-TriggerPendingDaycareMaleEgg
	.align	2, 0
	.type	 RemoveIVIndexFromList,function
	.thumb_func
RemoveIVIndexFromList:
	push	{r4, lr}
	add	sp, sp, #0xfffffff8
	add	r4, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r1, r4, r1
	mov	r0, #0xff
	strb	r0, [r1]
	mov	r2, #0x0
.L137:
	mov	r1, sp
	add	r0, r1, r2
	add	r1, r4, r2
	ldrb	r1, [r1]
	strb	r1, [r0]
	add	r2, r2, #0x1
	cmp	r2, #0x5
	ble	.L137	@cond_branch
	mov	r3, #0x0
	mov	r2, #0x0
.L142:
	mov	r1, sp
	add	r0, r1, r2
	ldrb	r1, [r0]
	add	r0, r1, #0
	cmp	r0, #0xff
	beq	.L141	@cond_branch
	add	r0, r4, r3
	strb	r1, [r0]
	add	r3, r3, #0x1
.L141:
	add	r2, r2, #0x1
	cmp	r2, #0x5
	ble	.L142	@cond_branch
	add	sp, sp, #0x8
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe26:
	.size	 RemoveIVIndexFromList,.Lfe26-RemoveIVIndexFromList
	.align	2, 0
	.type	 InheritIVs,function
	.thumb_func
InheritIVs:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #0xffffffec
	mov	r9, r0
	mov	r8, r1
	mov	r5, #0x0
	add	r1, sp, #0x4
	add	r7, sp, #0xc
	add	r2, r1, #0
.L149:
	add	r0, r2, r5
	strb	r5, [r0]
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x5
	bls	.L149	@cond_branch
	mov	r5, #0x0
	add	r6, r1, #0
.L154:
	bl	Random
	mov	r1, sp
	add	r4, r1, r5
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x6
	sub	r1, r1, r5
	bl	__modsi3
	add	r0, r6, r0
	ldrb	r0, [r0]
	strb	r0, [r4]
	ldrb	r1, [r4]
	add	r0, r6, #0
	bl	RemoveIVIndexFromList
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x2
	bls	.L154	@cond_branch
	mov	r5, #0x0
	mov	r4, #0x1
.L159:
	bl	Random
	add	r1, r7, r5
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	and	r0, r0, r4
	strb	r0, [r1]
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x2
	bls	.L159	@cond_branch
	mov	r5, #0x0
.L164:
	mov	r1, sp
	add	r0, r1, r5
	ldrb	r0, [r0]
	cmp	r0, #0x5
	bhi	.L163	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L176
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L177:
	.align	2, 0
.L176:
	.word	.L172
	.align	2, 0
	.align	2, 0
.L172:
	.word	.L166
	.word	.L167
	.word	.L168
	.word	.L169
	.word	.L170
	.word	.L171
.L166:
	add	r0, r7, r5
	ldrb	r1, [r0]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x4
	add	r0, r0, r8
	mov	r1, #0x27
	bl	GetBoxMonData
	add	r2, sp, #0x10
	strb	r0, [r2]
	mov	r0, r9
	mov	r1, #0x27
	bl	SetMonData
	b	.L163
.L167:
	add	r4, sp, #0x10
	add	r0, r7, r5
	ldrb	r1, [r0]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x4
	add	r0, r0, r8
	mov	r1, #0x28
	bl	GetBoxMonData
	strb	r0, [r4]
	mov	r0, r9
	mov	r1, #0x28
	b	.L175
.L168:
	add	r4, sp, #0x10
	add	r0, r7, r5
	ldrb	r1, [r0]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x4
	add	r0, r0, r8
	mov	r1, #0x29
	bl	GetBoxMonData
	strb	r0, [r4]
	mov	r0, r9
	mov	r1, #0x29
	b	.L175
.L169:
	add	r4, sp, #0x10
	add	r0, r7, r5
	ldrb	r1, [r0]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x4
	add	r0, r0, r8
	mov	r1, #0x2a
	bl	GetBoxMonData
	strb	r0, [r4]
	mov	r0, r9
	mov	r1, #0x2a
	b	.L175
.L170:
	add	r4, sp, #0x10
	add	r0, r7, r5
	ldrb	r1, [r0]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x4
	add	r0, r0, r8
	mov	r1, #0x2b
	bl	GetBoxMonData
	strb	r0, [r4]
	mov	r0, r9
	mov	r1, #0x2b
.L175:
	add	r2, r4, #0
	bl	SetMonData
	b	.L163
.L171:
	add	r4, sp, #0x10
	add	r0, r7, r5
	ldrb	r1, [r0]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x4
	add	r0, r0, r8
	mov	r1, #0x2c
	bl	GetBoxMonData
	strb	r0, [r4]
	mov	r0, r9
	mov	r1, #0x2c
	add	r2, r4, #0
	bl	SetMonData
.L163:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x2
	bls	.L164	@cond_branch
	add	sp, sp, #0x14
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe27:
	.size	 InheritIVs,.Lfe27-InheritIVs
	.align	2, 0
	.globl	GetEggMoves
	.type	 GetEggMoves,function
	.thumb_func
GetEggMoves:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	mov	r8, r1
	mov	r6, #0x0
	mov	r4, #0x0
	mov	r1, #0xb
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	mov	r2, #0x0
	ldr	r5, .L191
	ldrh	r1, [r5]
	ldr	r7, .L191+0x4
	add	r0, r3, r7
	cmp	r1, r0
	bne	.L181	@cond_branch
	mov	r4, #0x1
	b	.L180
.L192:
	.align	2, 0
.L191:
	.word	gEggMoves
	.word	0x4e20
.L181:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	ldr	r0, .L193
	ldr	r5, .L193+0x4
	cmp	r2, r0
	bhi	.L180	@cond_branch
	lsl	r0, r2, #0x1
	add	r0, r0, r5
	ldrh	r1, [r0]
	ldr	r7, .L193+0x8
	add	r0, r3, r7
	cmp	r1, r0
	bne	.L181	@cond_branch
	add	r0, r2, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
.L180:
	mov	r2, #0x0
	lsl	r0, r4, #0x1
	add	r0, r0, r5
	ldrh	r0, [r0]
	ldr	r1, .L193+0x8
	cmp	r0, r1
	bhi	.L186	@cond_branch
	add	r7, r5, #0
	add	r3, r1, #0
.L189:
	lsl	r1, r2, #0x1
	add	r1, r1, r8
	add	r0, r4, r2
	lsl	r0, r0, #0x1
	add	r0, r0, r7
	ldrh	r0, [r0]
	strh	r0, [r1]
	add	r0, r6, #0x1
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	add	r0, r2, #0x1
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	cmp	r2, #0x9
	bhi	.L186	@cond_branch
	add	r0, r4, r2
	lsl	r0, r0, #0x1
	add	r0, r0, r5
	ldrh	r0, [r0]
	cmp	r0, r3
	bls	.L189	@cond_branch
.L186:
	lsl	r0, r6, #0x18
	lsr	r0, r0, #0x18
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L194:
	.align	2, 0
.L193:
	.word	0x471
	.word	gEggMoves
	.word	0x4e20
.Lfe28:
	.size	 GetEggMoves,.Lfe28-GetEggMoves
	.align	2, 0
	.globl	BuildEggMoveset
	.type	 BuildEggMoveset,function
	.thumb_func
BuildEggMoveset:
	.syntax unified
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, 0xC
	adds r7, r0, 0
	mov r10, r1
	mov r9, r2
	movs r0, 0
	str r0, [sp]
	movs r6, 0
	ldr r5, _08041CC8 @ =gHatchedEggMotherMoves
	movs r2, 0
	ldr r4, _08041CCC @ =gHatchedEggFatherMoves
	ldr r3, _08041CD0 @ =gHatchedEggFinalMoves
_08041BE4:
	lsls r1, r6, 1
	adds r0, r1, r5
	strh r2, [r0]
	adds r0, r1, r4
	strh r2, [r0]
	adds r1, r3
	strh r2, [r1]
	adds r0, r6, 0x1
	lsls r0, 16
	lsrs r6, r0, 16
	cmp r6, 0x3
	bls _08041BE4
	movs r6, 0
	ldr r2, _08041CD4 @ =gHatchedEggEggMoves
	movs r1, 0
_08041C02:
	lsls r0, r6, 1
	adds r0, r2
	strh r1, [r0]
	adds r0, r6, 0x1
	lsls r0, 16
	lsrs r6, r0, 16
	cmp r6, 0x9
	bls _08041C02
	movs r6, 0
	ldr r2, _08041CD8 @ =gHatchedEggLevelUpMoves
	movs r1, 0
_08041C18:
	lsls r0, r6, 1
	adds r0, r2
	strh r1, [r0]
	adds r0, r6, 0x1
	lsls r0, 16
	lsrs r6, r0, 16
	cmp r6, 0x31
	bls _08041C18
	adds r0, r7, 0
	movs r1, 0xB
	bl GetMonData
	lsls r0, 16
	lsrs r0, 16
	ldr r1, _08041CD8 @ =gHatchedEggLevelUpMoves
	bl GetLevelUpMovesBySpecies
	lsls r0, 24
	lsrs r0, 24
	str r0, [sp, 0x4]
	movs r6, 0
	ldr r1, _08041CCC @ =gHatchedEggFatherMoves
	mov r8, r1
_08041C46:
	adds r5, r6, 0
	adds r5, 0xD
	mov r0, r10
	adds r1, r5, 0
	bl GetBoxMonData
	lsls r4, r6, 1
	mov r2, r8
	adds r1, r4, r2
	strh r0, [r1]
	mov r0, r9
	adds r1, r5, 0
	bl GetBoxMonData
	ldr r1, _08041CC8 @ =gHatchedEggMotherMoves
	adds r4, r1
	strh r0, [r4]
	adds r0, r6, 0x1
	lsls r0, 16
	lsrs r6, r0, 16
	cmp r6, 0x3
	bls _08041C46
	ldr r1, _08041CD4 @ =gHatchedEggEggMoves
	adds r0, r7, 0
	bl GetEggMoves
	lsls r0, 24
	lsrs r0, 24
	mov r8, r0
	movs r6, 0
_08041C82:
	ldr r0, _08041CCC @ =gHatchedEggFatherMoves
	lsls r1, r6, 1
	adds r2, r1, r0
	ldrh r1, [r2]
	mov r9, r0
	cmp r1, 0
	beq _08041CF8
	movs r5, 0
	cmp r5, r8
	bcs _08041CEA
	adds r4, r2, 0
	ldr r2, _08041CDC @ =0x0000ffff
_08041C9A:
	ldr r0, _08041CD4 @ =gHatchedEggEggMoves
	lsls r1, r5, 1
	adds r1, r0
	ldrh r0, [r4]
	ldrh r1, [r1]
	cmp r0, r1
	bne _08041CE0
	adds r1, r0, 0
	adds r0, r7, 0
	str r2, [sp, 0x8]
	bl GiveMoveToMon
	lsls r0, 16
	lsrs r0, 16
	ldr r2, [sp, 0x8]
	cmp r0, r2
	bne _08041CEA
	ldrh r1, [r4]
	adds r0, r7, 0
	bl DeleteFirstMoveAndGiveMoveToMon
	b _08041CEA
	.align 2, 0
_08041CC8: .4byte gHatchedEggMotherMoves
_08041CCC: .4byte gHatchedEggFatherMoves
_08041CD0: .4byte gHatchedEggFinalMoves
_08041CD4: .4byte gHatchedEggEggMoves
_08041CD8: .4byte gHatchedEggLevelUpMoves
_08041CDC: .4byte 0x0000ffff
_08041CE0:
	adds r0, r5, 0x1
	lsls r0, 16
	lsrs r5, r0, 16
	cmp r5, r8
	bcc _08041C9A
_08041CEA:
	adds r0, r6, 0x1
	lsls r0, 16
	lsrs r6, r0, 16
	ldr r3, _08041E14 @ =gHatchedEggFatherMoves
	mov r9, r3
	cmp r6, 0x3
	bls _08041C82
_08041CF8:
	movs r6, 0
_08041CFA:
	lsls r0, r6, 1
	mov r2, r9
	adds r1, r0, r2
	ldrh r1, [r1]
	adds r2, r0, 0
	adds r6, 0x1
	mov r8, r6
	cmp r1, 0
	beq _08041D5C
	movs r5, 0
	ldr r0, _08041E14 @ =gHatchedEggFatherMoves
	adds r4, r2, r0
	ldr r6, _08041E18 @ =0x0000ffff
	mov r9, r0
_08041D16:
	ldr r3, _08041E1C @ =0x00000121
	adds r0, r5, r3
	lsls r0, 16
	lsrs r0, 16
	bl ItemIdToBattleMoveId
	ldrh r1, [r4]
	lsls r0, 16
	lsrs r0, 16
	cmp r1, r0
	bne _08041D52
	lsls r1, r5, 24
	lsrs r1, 24
	adds r0, r7, 0
	bl CanMonLearnTMHM
	cmp r0, 0
	beq _08041D52
	ldrh r1, [r4]
	adds r0, r7, 0
	bl GiveMoveToMon
	lsls r0, 16
	lsrs r0, 16
	cmp r0, r6
	bne _08041D52
	ldrh r1, [r4]
	adds r0, r7, 0
	bl DeleteFirstMoveAndGiveMoveToMon
_08041D52:
	adds r0, r5, 0x1
	lsls r0, 16
	lsrs r5, r0, 16
	cmp r5, 0x39
	bls _08041D16
_08041D5C:
	mov r1, r8
	lsls r0, r1, 16
	lsrs r6, r0, 16
	cmp r6, 0x3
	bls _08041CFA
	movs r6, 0
	mov r2, r9
	ldrh r0, [r2]
	ldr r3, _08041E20 @ =gHatchedEggFinalMoves
	mov r10, r3
	cmp r0, 0
	beq _08041DC6
	mov r4, r9
	ldr r0, _08041E24 @ =gHatchedEggMotherMoves
	mov r9, r0
	mov r12, r10
_08041D7C:
	movs r5, 0
	lsls r2, r6, 1
	adds r6, 0x1
	mov r8, r6
	adds r3, r2, r4
_08041D86:
	lsls r0, r5, 1
	add r0, r9
	ldrh r2, [r3]
	adds r1, r2, 0
	ldrh r0, [r0]
	cmp r1, r0
	bne _08041DA8
	cmp r1, 0
	beq _08041DA8
	ldr r1, [sp]
	adds r0, r1, 0x1
	lsls r0, 16
	lsrs r0, 16
	str r0, [sp]
	lsls r1, 1
	add r1, r12
	strh r2, [r1]
_08041DA8:
	adds r0, r5, 0x1
	lsls r0, 16
	lsrs r5, r0, 16
	cmp r5, 0x3
	bls _08041D86
	mov r1, r8
	lsls r0, r1, 16
	lsrs r6, r0, 16
	cmp r6, 0x3
	bhi _08041DC6
	lsls r0, r6, 1
	adds r0, r4
	ldrh r0, [r0]
	cmp r0, 0
	bne _08041D7C
_08041DC6:
	movs r6, 0
	mov r2, r10
	ldrh r0, [r2]
	cmp r0, 0
	beq _08041E50
_08041DD0:
	movs r5, 0
	adds r3, r6, 0x1
	mov r8, r3
	ldr r0, [sp, 0x4]
	cmp r5, r0
	bcs _08041E38
	ldr r2, _08041E18 @ =0x0000ffff
_08041DDE:
	ldr r1, _08041E28 @ =gHatchedEggLevelUpMoves
	lsls r0, r5, 1
	adds r0, r1
	ldrh r1, [r0]
	cmp r1, 0
	beq _08041E2C
	lsls r0, r6, 1
	mov r3, r10
	adds r4, r0, r3
	ldrh r0, [r4]
	cmp r0, r1
	bne _08041E2C
	adds r1, r0, 0
	adds r0, r7, 0
	str r2, [sp, 0x8]
	bl GiveMoveToMon
	lsls r0, 16
	lsrs r0, 16
	ldr r2, [sp, 0x8]
	cmp r0, r2
	bne _08041E38
	ldrh r1, [r4]
	adds r0, r7, 0
	bl DeleteFirstMoveAndGiveMoveToMon
	b _08041E38
	.align 2, 0
_08041E14: .4byte gHatchedEggFatherMoves
_08041E18: .4byte 0x0000ffff
_08041E1C: .4byte 0x00000121
_08041E20: .4byte gHatchedEggFinalMoves
_08041E24: .4byte gHatchedEggMotherMoves
_08041E28: .4byte gHatchedEggLevelUpMoves
_08041E2C:
	adds r0, r5, 0x1
	lsls r0, 16
	lsrs r5, r0, 16
	ldr r0, [sp, 0x4]
	cmp r5, r0
	bcc _08041DDE
_08041E38:
	mov r1, r8
	lsls r0, r1, 16
	lsrs r6, r0, 16
	cmp r6, 0x3
	bhi _08041E50
	ldr r0, _08041E60 @ =gHatchedEggFinalMoves
	lsls r1, r6, 1
	adds r1, r0
	ldrh r1, [r1]
	mov r10, r0
	cmp r1, 0
	bne _08041DD0
_08041E50:
	add sp, 0xC
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
	.align 2, 0
_08041E60: .4byte gHatchedEggFinalMoves
.syntax divided

	.code	16
.Lfe29:
	.size	 BuildEggMoveset,.Lfe29-BuildEggMoveset
	.align	2, 0
	.type	 RemoveEggFromDayCare,function
	.thumb_func
RemoveEggFromDayCare:
	add	r3, r0, #0
	mov	r1, #0x8c
	lsl	r1, r1, #0x1
	add	r0, r3, r1
	mov	r2, #0x0
	mov	r1, #0x0
	strh	r1, [r0]
	mov	r1, #0x8d
	lsl	r1, r1, #0x1
	add	r0, r3, r1
	strb	r2, [r0]
	bx	lr
.Lfe30:
	.size	 RemoveEggFromDayCare,.Lfe30-RemoveEggFromDayCare
	.align	2, 0
	.globl	RejectEggFromDayCare
	.type	 RejectEggFromDayCare,function
	.thumb_func
RejectEggFromDayCare:
	push	{lr}
	ldr	r0, .L198
	bl	RemoveEggFromDayCare
	pop	{r0}
	bx	r0
.L199:
	.align	2, 0
.L198:
	.word	gSaveBlock1+0x2f9c
.Lfe31:
	.size	 RejectEggFromDayCare,.Lfe31-RejectEggFromDayCare
	.align	2, 0
	.type	 AlterEggSpeciesWithIncenseItem,function
	.thumb_func
AlterEggSpeciesWithIncenseItem:
	push	{r4, r5, r6, r7, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	ldrh	r1, [r4]
	mov	r7, #0xb4
	lsl	r7, r7, #0x1
	cmp	r1, r7
	beq	.L202	@cond_branch
	mov	r0, #0xaf
	lsl	r0, r0, #0x1
	cmp	r1, r0
	bne	.L201	@cond_branch
.L202:
	add	r0, r5, #0
	mov	r1, #0xc
	bl	GetBoxMonData
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	add	r0, r5, #0
	add	r0, r0, #0x50
	mov	r1, #0xc
	bl	GetBoxMonData
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	ldrh	r0, [r4]
	cmp	r0, r7
	bne	.L203	@cond_branch
	cmp	r6, #0xdd
	beq	.L203	@cond_branch
	cmp	r2, #0xdd
	beq	.L203	@cond_branch
	mov	r0, #0xca
	strh	r0, [r4]
.L203:
	ldrh	r1, [r4]
	mov	r0, #0xaf
	lsl	r0, r0, #0x1
	cmp	r1, r0
	bne	.L201	@cond_branch
	cmp	r6, #0xdc
	beq	.L201	@cond_branch
	cmp	r2, #0xdc
	beq	.L201	@cond_branch
	mov	r0, #0xb7
	strh	r0, [r4]
.L201:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe32:
	.size	 AlterEggSpeciesWithIncenseItem,.Lfe32-AlterEggSpeciesWithIncenseItem
	.align	2, 0
	.type	 DetermineEggSpeciesAndParentSlots,function
	.thumb_func
DetermineEggSpeciesAndParentSlots:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #0xfffffffc
	mov	r8, r0
	add	r6, r1, #0
	mov	r4, #0x0
	mov	r7, #0x1
.L209:
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x4
	mov	r1, r8
	add	r5, r1, r0
	add	r0, r5, #0
	mov	r1, #0xb
	bl	GetBoxMonData
	lsl	r1, r4, #0x1
	add	r1, r1, sp
	strh	r0, [r1]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x84
	bne	.L210	@cond_branch
	add	r0, r4, #0
	eor	r0, r0, r7
	strb	r0, [r6]
	strb	r4, [r6, #0x1]
	b	.L208
.L210:
	add	r0, r5, #0
	bl	GetBoxMonGender
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xfe
	bne	.L208	@cond_branch
	strb	r4, [r6]
	add	r0, r4, #0
	eor	r0, r0, r7
	strb	r0, [r6, #0x1]
.L208:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r4, #0x1
	bls	.L209	@cond_branch
	ldrb	r0, [r6]
	lsl	r0, r0, #0x1
	add	r0, r0, sp
	ldrh	r0, [r0]
	bl	GetEggSpecies
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r4, #0x1d
	bne	.L214	@cond_branch
	mov	r0, #0x8c
	lsl	r0, r0, #0x1
	add	r0, r0, r8
	ldrh	r1, [r0]
	mov	r0, #0x80
	lsl	r0, r0, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L214	@cond_branch
	mov	r4, #0x20
.L214:
	ldr	r0, .L217
	cmp	r4, r0
	bne	.L215	@cond_branch
	sub	r0, r0, #0x6b
	add	r0, r0, r8
	ldrh	r1, [r0]
	mov	r0, #0x80
	lsl	r0, r0, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L215	@cond_branch
	mov	r4, #0xc1
	lsl	r4, r4, #0x1
.L215:
	ldrb	r0, [r6, #0x1]
	lsl	r0, r0, #0x1
	add	r0, r0, sp
	ldrh	r0, [r0]
	cmp	r0, #0x84
	bne	.L216	@cond_branch
	ldrb	r1, [r6]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x4
	add	r0, r0, r8
	bl	GetBoxMonGender
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xfe
	beq	.L216	@cond_branch
	ldrb	r1, [r6, #0x1]
	ldrb	r0, [r6]
	strb	r0, [r6, #0x1]
	strb	r1, [r6]
.L216:
	add	r0, r4, #0
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L218:
	.align	2, 0
.L217:
	.word	0x183
.Lfe33:
	.size	 DetermineEggSpeciesAndParentSlots,.Lfe33-DetermineEggSpeciesAndParentSlots
	.align	2, 0
	.type	 _GiveEggFromDaycare,function
	.thumb_func
_GiveEggFromDaycare:
	push	{r4, r5, r6, lr}
	add	sp, sp, #0xffffff94
	add	r5, r0, #0
	add	r6, sp, #0x64
	add	r1, r6, #0
	bl	DetermineEggSpeciesAndParentSlots
	add	r4, sp, #0x68
	strh	r0, [r4]
	add	r0, r4, #0
	add	r1, r5, #0
	bl	AlterEggSpeciesWithIncenseItem
	ldrh	r1, [r4]
	mov	r0, sp
	add	r2, r5, #0
	bl	SetInitialEggData
	mov	r0, sp
	add	r1, r5, #0
	bl	InheritIVs
	ldrb	r0, [r6, #0x1]
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x4
	add	r1, r5, r1
	ldrb	r0, [r6]
	lsl	r2, r0, #0x2
	add	r2, r2, r0
	lsl	r2, r2, #0x4
	add	r2, r5, r2
	mov	r0, sp
	bl	BuildEggMoveset
	mov	r2, sp
	add	r2, r2, #0x6a
	mov	r0, #0x1
	strb	r0, [r2]
	mov	r0, sp
	mov	r1, #0x2d
	bl	SetMonData
	ldr	r0, .L220
	mov	r1, #0xfa
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	mov	r1, sp
	mov	r2, #0x64
	bl	memcpy
	bl	party_compaction
	bl	CalculatePlayerPartyCount
	add	r0, r5, #0
	bl	RemoveEggFromDayCare
	add	sp, sp, #0x6c
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L221:
	.align	2, 0
.L220:
	.word	gPlayerParty
.Lfe34:
	.size	 _GiveEggFromDaycare,.Lfe34-_GiveEggFromDaycare
	.align	2, 0
	.globl	CreateEgg
	.type	 CreateEgg,function
	.thumb_func
CreateEgg:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #0xffffffe8
	add	r7, r0, #0
	add	r5, r1, #0
	add	r6, r2, #0
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	lsl	r6, r6, #0x18
	lsr	r6, r6, #0x18
	mov	r4, #0x0
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r4, [sp, #0x8]
	str	r4, [sp, #0xc]
	add	r1, r5, #0
	mov	r2, #0x5
	mov	r3, #0x20
	bl	CreateMon
	mov	r0, #0x12
	add	r0, r0, sp
	mov	r8, r0
	strb	r4, [r0]
	mov	r1, #0x4
	add	r0, sp, #0x10
	strh	r1, [r0]
	mov	r4, sp
	add	r4, r4, #0x13
	mov	r0, #0x1
	mov	r9, r0
	mov	r0, r9
	strb	r0, [r4]
	add	r0, r7, #0
	mov	r1, #0x26
	add	r2, sp, #0x10
	bl	SetMonData
	ldr	r2, .L224
	add	r0, r7, #0
	mov	r1, #0x2
	bl	SetMonData
	lsl	r2, r5, #0x3
	sub	r2, r2, r5
	lsl	r2, r2, #0x2
	ldr	r0, .L224+0x4
	add	r2, r2, r0
	add	r0, r7, #0
	mov	r1, #0x20
	bl	SetMonData
	add	r0, r7, #0
	mov	r1, #0x24
	mov	r2, r8
	bl	SetMonData
	add	r0, r7, #0
	mov	r1, #0x3
	add	r2, r4, #0
	bl	SetMonData
	cmp	r6, #0
	beq	.L223	@cond_branch
	add	r2, sp, #0x14
	mov	r0, #0xfd
	strb	r0, [r2]
	add	r0, r7, #0
	mov	r1, #0x23
	bl	SetMonData
.L223:
	mov	r2, sp
	add	r2, r2, #0x15
	mov	r0, r9
	strb	r0, [r2]
	add	r0, r7, #0
	mov	r1, #0x2d
	bl	SetMonData
	add	sp, sp, #0x18
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L225:
	.align	2, 0
.L224:
	.word	sJapaneseEggNickname
	.word	gBaseStats+0x11
.Lfe35:
	.size	 CreateEgg,.Lfe35-CreateEgg
	.align	2, 0
	.type	 SetInitialEggData,function
	.thumb_func
SetInitialEggData:
	push	{r4, r5, r6, lr}
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6}
	add	sp, sp, #0xffffffec
	add	r6, r0, #0
	add	r5, r1, #0
	add	r4, r2, #0
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	bl	Random
	mov	r1, #0x8c
	lsl	r1, r1, #0x1
	add	r4, r4, r1
	ldrh	r1, [r4]
	lsl	r0, r0, #0x10
	orr	r1, r1, r0
	mov	r0, #0x1
	mov	r8, r0
	str	r0, [sp]
	str	r1, [sp, #0x4]
	mov	r4, #0x0
	str	r4, [sp, #0x8]
	str	r4, [sp, #0xc]
	add	r0, r6, #0
	add	r1, r5, #0
	mov	r2, #0x5
	mov	r3, #0x20
	bl	CreateMon
	mov	r1, #0x12
	add	r1, r1, sp
	mov	r9, r1
	strb	r4, [r1]
	mov	r1, #0x4
	add	r0, sp, #0x10
	strh	r1, [r0]
	mov	r4, sp
	add	r4, r4, #0x13
	mov	r0, r8
	strb	r0, [r4]
	add	r0, r6, #0
	mov	r1, #0x26
	add	r2, sp, #0x10
	bl	SetMonData
	ldr	r2, .L227
	add	r0, r6, #0
	mov	r1, #0x2
	bl	SetMonData
	lsl	r2, r5, #0x3
	sub	r2, r2, r5
	lsl	r2, r2, #0x2
	ldr	r0, .L227+0x4
	add	r2, r2, r0
	add	r0, r6, #0
	mov	r1, #0x20
	bl	SetMonData
	add	r0, r6, #0
	mov	r1, #0x24
	mov	r2, r9
	bl	SetMonData
	add	r0, r6, #0
	mov	r1, #0x3
	add	r2, r4, #0
	bl	SetMonData
	add	sp, sp, #0x14
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L228:
	.align	2, 0
.L227:
	.word	sJapaneseEggNickname
	.word	gBaseStats+0x11
.Lfe36:
	.size	 SetInitialEggData,.Lfe36-SetInitialEggData
	.align	2, 0
	.globl	GiveEggFromDaycare
	.type	 GiveEggFromDaycare,function
	.thumb_func
GiveEggFromDaycare:
	push	{lr}
	ldr	r0, .L230
	bl	_GiveEggFromDaycare
	pop	{r0}
	bx	r0
.L231:
	.align	2, 0
.L230:
	.word	gSaveBlock1+0x2f9c
.Lfe37:
	.size	 GiveEggFromDaycare,.Lfe37-GiveEggFromDaycare
	.align	2, 0
	.type	 _ShouldEggHatch,function
	.thumb_func
_ShouldEggHatch:
	.syntax unified
	push {r4-r7,lr}
	sub sp, 0x8
	adds r7, r0, 0
	movs r2, 0
	movs r6, 0
	adds r5, r7, 0
_080421BC:
	lsls r4, r6, 2
	adds r0, r5, 0
	movs r1, 0x5
	str r2, [sp, 0x4]
	bl GetBoxMonData
	ldr r2, [sp, 0x4]
	cmp r0, 0
	beq _080421DE
	movs r0, 0x88
	lsls r0, 1
	adds r1, r7, r0
	adds r1, r4
	ldr r0, [r1]
	adds r0, 0x1
	str r0, [r1]
	adds r2, 0x1
_080421DE:
	adds r5, 0x50
	adds r6, 0x1
	cmp r6, 0x1
	bls _080421BC
	movs r1, 0x8C
	lsls r1, 1
	adds r0, r7, r1
	ldrh r0, [r0]
	cmp r0, 0
	bne _08042226
	cmp r2, 0x2
	bne _08042226
	subs r1, 0x4
	adds r0, r7, r1
	ldrb r0, [r0]
	cmp r0, 0xFF
	bne _08042226
	adds r0, r7, 0
	bl GetDaycareCompatibilityScore
	adds r4, r0, 0
	lsls r4, 24
	lsrs r4, 24
	bl Random
	lsls r0, 16
	lsrs r0, 16
	movs r1, 0x64
	muls r0, r1
	ldr r1, _08042240 @ =0x0000ffff
	bl __udivsi3
	cmp r4, r0
	bls _08042226
	bl TriggerPendingDaycareEgg
_08042226:
	movs r0, 0x8D
	lsls r0, 1
	adds r1, r7, r0
	ldrb r0, [r1]
	adds r0, 0x1
	strb r0, [r1]
	lsls r0, 24
	lsrs r0, 24
	cmp r0, 0xFF
	bne _08042290
	movs r6, 0
	b _08042288
	.align 2, 0
_08042240: .4byte 0x0000ffff
_08042244:
	movs r0, 0x64
	adds r1, r6, 0
	muls r1, r0
	ldr r0, _08042270 @ =gPlayerParty
	adds r4, r1, r0
	adds r0, r4, 0
	movs r1, 0x2D
	bl GetMonData
	cmp r0, 0
	beq _08042286
	adds r0, r4, 0
	movs r1, 0x20
	bl GetMonData
	str r0, [sp]
	cmp r0, 0
	bne _08042278
	ldr r0, _08042274 @ =gSpecialVar_0x8004
	strh r6, [r0]
	movs r0, 0x1
	b _08042292
	.align 2, 0
_08042270: .4byte gPlayerParty
_08042274: .4byte gSpecialVar_0x8004
_08042278:
	subs r0, 0x1
	str r0, [sp]
	adds r0, r4, 0
	movs r1, 0x20
	mov r2, sp
	bl SetMonData
_08042286:
	adds r6, 0x1
_08042288:
	ldr r0, _0804229C @ =gPlayerPartyCount
	ldrb r0, [r0]
	cmp r6, r0
	bcc _08042244
_08042290:
	movs r0, 0
_08042292:
	add sp, 0x8
	pop {r4-r7}
	pop {r1}
	bx r1
	.align 2, 0
_0804229C: .4byte gPlayerPartyCount
.syntax divided

	.code	16
.Lfe38:
	.size	 _ShouldEggHatch,.Lfe38-_ShouldEggHatch
	.align	2, 0
	.globl	ShouldEggHatch
	.type	 ShouldEggHatch,function
	.thumb_func
ShouldEggHatch:
	push	{lr}
	ldr	r0, .L234
	bl	_ShouldEggHatch
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L235:
	.align	2, 0
.L234:
	.word	gSaveBlock1+0x2f9c
.Lfe39:
	.size	 ShouldEggHatch,.Lfe39-ShouldEggHatch
	.align	2, 0
	.type	 IsEggPending,function
	.thumb_func
IsEggPending:
	mov	r1, #0x8c
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	ldrh	r1, [r0]
	neg	r0, r1
	orr	r0, r0, r1
	lsr	r0, r0, #0x1f
	bx	lr
.Lfe40:
	.size	 IsEggPending,.Lfe40-IsEggPending
	.align	2, 0
	.type	 _GetDaycareMonNicknames,function
	.thumb_func
_GetDaycareMonNicknames:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	mov	r1, #0xb
	bl	GetBoxMonData
	cmp	r0, #0
	beq	.L238	@cond_branch
	ldr	r1, .L240
	add	r0, r6, #0
	bl	GetBoxMonNick
	add	r0, r6, #0
	mov	r1, #0x3
	bl	GetBoxMonData
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r5, .L240+0x4
	add	r0, r6, #0
	mov	r1, #0x7
	add	r2, r5, #0
	bl	GetBoxMonData
	add	r0, r5, #0
	add	r1, r4, #0
	bl	ConvertInternationalString
.L238:
	add	r4, r6, #0
	add	r4, r4, #0x50
	add	r0, r4, #0
	mov	r1, #0xb
	bl	GetBoxMonData
	cmp	r0, #0
	beq	.L239	@cond_branch
	ldr	r1, .L240+0x8
	add	r0, r4, #0
	bl	GetBoxMonNick
.L239:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L241:
	.align	2, 0
.L240:
	.word	gStringVar1
	.word	gStringVar3
	.word	gStringVar2
.Lfe41:
	.size	 _GetDaycareMonNicknames,.Lfe41-_GetDaycareMonNicknames
	.align	2, 0
	.globl	GetSelectedDaycareMonNickname
	.type	 GetSelectedDaycareMonNickname,function
	.thumb_func
GetSelectedDaycareMonNickname:
	push	{r4, r5, r6, lr}
	ldr	r6, .L243
	ldrb	r0, [r6]
	mov	r5, #0x64
	mul	r0, r0, r5
	ldr	r4, .L243+0x4
	add	r0, r0, r4
	ldr	r1, .L243+0x8
	bl	GetBoxMonNick
	ldrb	r0, [r6]
	mul	r0, r0, r5
	add	r0, r0, r4
	mov	r1, #0xb
	bl	GetBoxMonData
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L244:
	.align	2, 0
.L243:
	.word	gLastFieldPokeMenuOpened
	.word	gPlayerParty
	.word	gStringVar1
.Lfe42:
	.size	 GetSelectedDaycareMonNickname,.Lfe42-GetSelectedDaycareMonNickname
	.align	2, 0
	.globl	GetDaycareMonNicknames
	.type	 GetDaycareMonNicknames,function
	.thumb_func
GetDaycareMonNicknames:
	push	{lr}
	ldr	r0, .L246
	bl	_GetDaycareMonNicknames
	pop	{r0}
	bx	r0
.L247:
	.align	2, 0
.L246:
	.word	gSaveBlock1+0x2f9c
.Lfe43:
	.size	 GetDaycareMonNicknames,.Lfe43-GetDaycareMonNicknames
	.align	2, 0
	.globl	GetDaycareState
	.type	 GetDaycareState,function
	.thumb_func
GetDaycareState:
	push	{r4, lr}
	ldr	r4, .L252
	add	r0, r4, #0
	bl	IsEggPending
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L249	@cond_branch
	mov	r0, #0x1
	b	.L251
.L253:
	.align	2, 0
.L252:
	.word	gSaveBlock1+0x2f9c
.L249:
	add	r0, r4, #0
	bl	CountPokemonInDaycare
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0
	bne	.L250	@cond_branch
	mov	r0, #0x0
	b	.L251
.L250:
	add	r0, r0, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
.L251:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe44:
	.size	 GetDaycareState,.Lfe44-GetDaycareState
	.align	2, 0
	.globl	EggGroupsOverlap
	.type	 EggGroupsOverlap,function
	.thumb_func
EggGroupsOverlap:
	push	{r4, r5, r6, lr}
	add	r5, r1, #0
	mov	r4, #0x0
	add	r1, r0, #0
.L258:
	mov	r3, #0x0
	ldrh	r0, [r1]
	add	r2, r5, #0
.L262:
	ldrh	r6, [r2]
	cmp	r0, r6
	bne	.L261	@cond_branch
	mov	r0, #0x1
	b	.L266
.L261:
	add	r2, r2, #0x2
	add	r3, r3, #0x1
	cmp	r3, #0x1
	ble	.L262	@cond_branch
	add	r1, r1, #0x2
	add	r4, r4, #0x1
	cmp	r4, #0x1
	ble	.L258	@cond_branch
	mov	r0, #0x0
.L266:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe45:
	.size	 EggGroupsOverlap,.Lfe45-EggGroupsOverlap
	.align	2, 0
	.type	 GetDaycareCompatibilityScore,function
	.thumb_func
GetDaycareCompatibilityScore:
	.syntax unified
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, 0x2C
	movs r1, 0
	mov r8, r1
	mov r2, sp
	adds r2, 0x8
	str r2, [sp, 0x1C]
	add r1, sp, 0xC
	mov r10, r1
	adds r2, 0xC
	str r2, [sp, 0x20]
	mov r1, sp
	adds r1, 0x2
	ldr r2, _08042488 @ =gBaseStats
	mov r9, r2
	ldr r5, [sp, 0x1C]
	adds r7, r1, 0
	mov r6, sp
	ldr r1, [sp, 0x20]
	str r1, [sp, 0x24]
	mov r2, r10
	str r2, [sp, 0x28]
	adds r4, r0, 0
_0804240E:
	adds r0, r4, 0
	movs r1, 0xB
	bl GetBoxMonData
	strh r0, [r5]
	adds r0, r4, 0
	movs r1, 0x1
	bl GetBoxMonData
	ldr r1, [sp, 0x28]
	stm r1!, {r0}
	str r1, [sp, 0x28]
	adds r0, r4, 0
	movs r1, 0
	bl GetBoxMonData
	adds r1, r0, 0
	ldrh r0, [r5]
	bl GetGenderFromSpeciesAndPersonality
	lsls r0, 24
	lsrs r0, 24
	ldr r2, [sp, 0x24]
	stm r2!, {r0}
	str r2, [sp, 0x24]
	ldrh r1, [r5]
	lsls r0, r1, 3
	subs r0, r1
	lsls r0, 2
	add r0, r9
	ldrb r0, [r0, 0x14]
	strh r0, [r6]
	ldrh r1, [r5]
	lsls r0, r1, 3
	subs r0, r1
	lsls r0, 2
	add r0, r9
	ldrb r0, [r0, 0x15]
	strh r0, [r7]
	adds r5, 0x2
	adds r7, 0x4
	adds r6, 0x4
	adds r4, 0x50
	movs r0, 0x1
	add r8, r0
	mov r1, r8
	cmp r1, 0x1
	bls _0804240E
	mov r0, sp
	ldrh r1, [r0]
	cmp r1, 0xF
	beq _08042484
	ldrh r0, [r0, 0x4]
	cmp r0, 0xF
	beq _08042484
	cmp r1, 0xD
	bne _0804248C
	cmp r0, 0xD
	bne _08042490
_08042484:
	movs r0, 0
	b _080424E4
	.align 2, 0
_08042488: .4byte gBaseStats
_0804248C:
	cmp r0, 0xD
	bne _0804249C
_08042490:
	ldr r1, [sp, 0xC]
	mov r2, r10
	ldr r0, [r2, 0x4]
	cmp r1, r0
	beq _080424DE
	b _080424E2
_0804249C:
	ldr r0, [sp, 0x14]
	ldr r2, [sp, 0x20]
	ldr r1, [r2, 0x4]
	cmp r0, r1
	beq _08042484
	cmp r0, 0xFF
	beq _08042484
	cmp r1, 0xFF
	beq _08042484
	add r1, sp, 0x4
	mov r0, sp
	bl EggGroupsOverlap
	lsls r0, 24
	cmp r0, 0
	beq _08042484
	ldr r0, [sp, 0x1C]
	ldrh r1, [r0, 0x2]
	ldrh r0, [r0]
	cmp r0, r1
	bne _080424D4
	ldr r1, [sp, 0xC]
	mov r2, r10
	ldr r0, [r2, 0x4]
	cmp r1, r0
	beq _080424E2
	movs r0, 0x46
	b _080424E4
_080424D4:
	ldr r1, [sp, 0xC]
	mov r2, r10
	ldr r0, [r2, 0x4]
	cmp r1, r0
	bne _080424E2
_080424DE:
	movs r0, 0x14
	b _080424E4
_080424E2:
	movs r0, 0x32
_080424E4:
	add sp, 0x2C
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r1}
	bx r1
.syntax divided

	.code	16
.Lfe46:
	.size	 GetDaycareCompatibilityScore,.Lfe46-GetDaycareCompatibilityScore
	.align	2, 0
	.globl	GetDaycareCompatibilityScoreFromSave
	.type	 GetDaycareCompatibilityScoreFromSave,function
	.thumb_func
GetDaycareCompatibilityScoreFromSave:
	push	{lr}
	ldr	r0, .L269
	bl	GetDaycareCompatibilityScore
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L270:
	.align	2, 0
.L269:
	.word	gSaveBlock1+0x2f9c
.Lfe47:
	.size	 GetDaycareCompatibilityScoreFromSave,.Lfe47-GetDaycareCompatibilityScoreFromSave
	.align	2, 0
	.globl	SetDaycareCompatibilityString
	.type	 SetDaycareCompatibilityString,function
	.thumb_func
SetDaycareCompatibilityString:
	push	{lr}
	bl	GetDaycareCompatibilityScoreFromSave
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r2, r0, #0
	mov	r1, #0x0
	cmp	r0, #0
	bne	.L272	@cond_branch
	mov	r1, #0x3
.L272:
	cmp	r0, #0x14
	bne	.L273	@cond_branch
	mov	r1, #0x2
.L273:
	cmp	r0, #0x32
	bne	.L274	@cond_branch
	mov	r1, #0x1
.L274:
	cmp	r2, #0x46
	bne	.L275	@cond_branch
	mov	r1, #0x0
.L275:
	ldr	r0, .L276
	ldr	r2, .L276+0x4
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	StringCopy
	pop	{r0}
	bx	r0
.L277:
	.align	2, 0
.L276:
	.word	gStringVar4
	.word	sCompatibilityMessages
.Lfe48:
	.size	 SetDaycareCompatibilityString,.Lfe48-SetDaycareCompatibilityString
	.align	2, 0
	.globl	NameHasGenderSymbol
	.type	 NameHasGenderSymbol,function
	.thumb_func
NameHasGenderSymbol:
	.syntax unified

	push {r4,r5,lr}
	sub sp, 0x4
	adds r4, r0, 0
	lsls r1, 24
	lsrs r5, r1, 24
	mov r2, sp
	mov r1, sp
	movs r0, 0
	strb r0, [r1, 0x1]
	strb r0, [r2]
	movs r3, 0
	ldrb r0, [r4]
	cmp r0, 0xFF
	beq _0804258C
_08042564:
	adds r1, r4, r3
	ldrb r0, [r1]
	cmp r0, 0xB5
	bne _08042572
	ldrb r0, [r2]
	adds r0, 0x1
	strb r0, [r2]
_08042572:
	ldrb r0, [r1]
	cmp r0, 0xB6
	bne _0804257E
	ldrb r0, [r2, 0x1]
	adds r0, 0x1
	strb r0, [r2, 0x1]
_0804257E:
	adds r0, r3, 0x1
	lsls r0, 24
	lsrs r3, r0, 24
	adds r0, r4, r3
	ldrb r0, [r0]
	cmp r0, 0xFF
	bne _08042564
_0804258C:
	cmp r5, 0
	bne _080425A0
	mov r0, sp
	ldrb r0, [r0]
	cmp r0, 0
	beq _080425A0
	mov r0, sp
	ldrb r0, [r0, 0x1]
	cmp r0, 0
	beq _080425B4
_080425A0:
	cmp r5, 0xFE
	bne _080425B8
	mov r0, sp
	ldrb r0, [r0, 0x1]
	cmp r0, 0
	beq _080425B8
	mov r0, sp
	ldrb r0, [r0]
	cmp r0, 0
	bne _080425B8
_080425B4:
	movs r0, 0x1
	b _080425BA
_080425B8:
	movs r0, 0
_080425BA:
	add sp, 0x4
	pop {r4,r5}
	pop {r1}
	bx r1
.syntax divided

	.code	16
.Lfe49:
	.size	 NameHasGenderSymbol,.Lfe49-NameHasGenderSymbol
	.align	2, 0
	.type	 AppendGenderSymbol,function
	.thumb_func
AppendGenderSymbol:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	cmp	r1, #0
	bne	.L280	@cond_branch
	mov	r1, #0x0
	bl	NameHasGenderSymbol
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L282	@cond_branch
	ldr	r1, .L289
	b	.L287
.L290:
	.align	2, 0
.L289:
	.word	gOtherText_MaleSymbol3
.L280:
	cmp	r1, #0xfe
	bne	.L282	@cond_branch
	add	r0, r4, #0
	mov	r1, #0xfe
	bl	NameHasGenderSymbol
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L282	@cond_branch
	ldr	r1, .L291
	b	.L287
.L292:
	.align	2, 0
.L291:
	.word	gOtherText_FemaleSymbol3
.L282:
	ldr	r1, .L293
.L287:
	add	r0, r4, #0
	bl	StringAppend
	pop	{r4}
	pop	{r1}
	bx	r1
.L294:
	.align	2, 0
.L293:
	.word	gOtherText_GenderlessSymbol
.Lfe50:
	.size	 AppendGenderSymbol,.Lfe50-AppendGenderSymbol
	.align	2, 0
	.type	 AppendMonGenderSymbol,function
	.thumb_func
AppendMonGenderSymbol:
	push	{r4, lr}
	add	r4, r0, #0
	add	r0, r1, #0
	bl	GetBoxMonGender
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	AppendGenderSymbol
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe51:
	.size	 AppendMonGenderSymbol,.Lfe51-AppendMonGenderSymbol
	.align	2, 0
	.type	 GetDaycareLevelMenuText,function
	.thumb_func
GetDaycareLevelMenuText:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #0xffffffd8
	mov	r8, r0
	add	r7, r1, #0
	mov	r0, #0xff
	strb	r0, [r7]
	mov	r6, #0x0
	add	r0, sp, #0x14
	mov	r9, r0
.L300:
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r4, r0, #0x4
	add	r4, r4, r8
	lsl	r0, r0, #0x2
	mov	r1, sp
	add	r5, r1, r0
	add	r0, r4, #0
	add	r1, r5, #0
	bl	GetBoxMonNick
	add	r0, r5, #0
	add	r1, r4, #0
	bl	AppendMonGenderSymbol
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0x1
	bls	.L300	@cond_branch
	add	r0, r7, #0
	mov	r1, sp
	bl	StringCopy
	ldr	r4, .L302
	add	r0, r7, #0
	add	r1, r4, #0
	bl	StringAppend
	add	r0, r7, #0
	mov	r1, r9
	bl	StringAppend
	add	r0, r7, #0
	add	r1, r4, #0
	bl	StringAppend
	ldr	r1, .L302+0x4
	add	r0, r7, #0
	bl	StringAppend
	add	sp, sp, #0x28
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L303:
	.align	2, 0
.L302:
	.word	gOtherText_NewLine2
	.word	gOtherText_CancelAndLv
.Lfe52:
	.size	 GetDaycareLevelMenuText,.Lfe52-GetDaycareLevelMenuText
	.align	2, 0
	.type	 GetDaycareLevelMenuLevelText,function
	.thumb_func
GetDaycareLevelMenuLevelText:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	r6, r0, #0
	add	r4, r1, #0
	mov	r0, #0xff
	strb	r0, [r4]
	mov	r5, #0x0
	mov	r0, #0xfc
	mov	r8, r0
	mov	r7, #0x14
.L308:
	lsl	r2, r5, #0x2
	add	r0, r2, r5
	lsl	r0, r0, #0x4
	add	r0, r6, r0
	mov	r3, #0x88
	lsl	r3, r3, #0x1
	add	r1, r6, r3
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	GetLevelAfterDaycareSteps
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r0, #0x34
	strb	r0, [r4]
	mov	r0, r8
	strb	r0, [r4, #0x1]
	strb	r7, [r4, #0x2]
	mov	r0, #0x6
	strb	r0, [r4, #0x3]
	add	r0, r4, #0x4
	mov	r2, #0x1
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	add	r4, r0, #0
	mov	r3, r8
	strb	r3, [r4]
	strb	r7, [r4, #0x1]
	mov	r0, #0x0
	strb	r0, [r4, #0x2]
	add	r0, r4, #0x3
	ldr	r1, .L310
	bl	StringCopy
	add	r4, r0, #0
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x1
	bls	.L308	@cond_branch
	mov	r0, #0xff
	strb	r0, [r4]
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L311:
	.align	2, 0
.L310:
	.word	gOtherText_NewLine2
.Lfe53:
	.size	 GetDaycareLevelMenuLevelText,.Lfe53-GetDaycareLevelMenuLevelText
	.align	2, 0
	.type	 HandleDaycareLevelMenuInput,function
	.thumb_func
HandleDaycareLevelMenuInput:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r5, r4, #0
	ldr	r0, .L323
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L313	@cond_branch
	ldr	r0, .L323+0x4
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrh	r2, [r1, #0x8]
	mov	r3, #0x8
	ldrsh	r0, [r1, r3]
	cmp	r0, #0
	beq	.L315	@cond_branch
	sub	r0, r2, #0x1
	strh	r0, [r1, #0x8]
	mov	r0, #0x1
	neg	r0, r0
	b	.L322
.L324:
	.align	2, 0
.L323:
	.word	gMain
	.word	gTasks
.L313:
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L316	@cond_branch
	ldr	r0, .L325
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrh	r2, [r1, #0x8]
	mov	r3, #0x8
	ldrsh	r0, [r1, r3]
	cmp	r0, #0x2
	beq	.L315	@cond_branch
	add	r0, r2, #0x1
	strh	r0, [r1, #0x8]
	mov	r0, #0x1
.L322:
	bl	MoveMenuCursor
	mov	r0, #0x5
	bl	PlaySE
	b	.L315
.L326:
	.align	2, 0
.L325:
	.word	gTasks
.L316:
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L319	@cond_branch
	bl	HandleDestroyMenuCursors
	mov	r0, #0x5
	bl	PlaySE
	ldr	r3, .L327
	ldr	r2, .L327+0x4
	ldr	r1, .L327+0x8
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldrh	r0, [r0, #0x8]
	strh	r0, [r2]
	strb	r0, [r3]
	add	r0, r4, #0
	bl	DestroyTask
	mov	r0, #0xf
	mov	r1, #0x6
	mov	r2, #0x1d
	mov	r3, #0xd
	bl	MenuZeroFillWindowRect
	bl	EnableBothScriptContexts
	b	.L315
.L328:
	.align	2, 0
.L327:
	.word	gLastFieldPokeMenuOpened
	.word	gScriptResult
	.word	gTasks
.L319:
	mov	r4, #0x2
	add	r0, r4, #0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L315	@cond_branch
	bl	HandleDestroyMenuCursors
	ldr	r0, .L329
	ldr	r1, .L329+0x4
	strh	r4, [r1]
	mov	r1, #0x2
	strb	r1, [r0]
	add	r0, r5, #0
	bl	DestroyTask
	mov	r0, #0xf
	mov	r1, #0x6
	mov	r2, #0x1d
	mov	r3, #0xd
	bl	MenuZeroFillWindowRect
	bl	EnableBothScriptContexts
.L315:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L330:
	.align	2, 0
.L329:
	.word	gLastFieldPokeMenuOpened
	.word	gScriptResult
.Lfe54:
	.size	 HandleDaycareLevelMenuInput,.Lfe54-HandleDaycareLevelMenuInput
	.align	2, 0
	.globl	ShowDaycareLevelMenu
	.type	 ShowDaycareLevelMenu,function
	.thumb_func
ShowDaycareLevelMenu:
	push	{r4, lr}
	add	sp, sp, #0xffffff94
	mov	r0, #0xf
	mov	r1, #0x6
	mov	r2, #0x1d
	mov	r3, #0xd
	bl	MenuDrawTextWindow
	ldr	r4, .L332
	add	r0, r4, #0
	add	r1, sp, #0x8
	bl	GetDaycareLevelMenuText
	add	r0, sp, #0x8
	mov	r1, #0x10
	mov	r2, #0x7
	bl	MenuPrint
	add	r0, r4, #0
	add	r1, sp, #0x8
	bl	GetDaycareLevelMenuLevelText
	add	r0, sp, #0x8
	mov	r1, #0xce
	mov	r2, #0x38
	mov	r3, #0x1
	bl	MenuPrint_PixelCoords
	mov	r0, #0x0
	str	r0, [sp]
	mov	r0, #0xd
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	mov	r1, #0x10
	mov	r2, #0x7
	mov	r3, #0x3
	bl	InitMenu
	ldr	r0, .L332+0x4
	mov	r1, #0x3
	bl	CreateTask
	add	sp, sp, #0x6c
	pop	{r4}
	pop	{r0}
	bx	r0
.L333:
	.align	2, 0
.L332:
	.word	gSaveBlock1+0x2f9c
	.word	HandleDaycareLevelMenuInput
.Lfe55:
	.size	 ShowDaycareLevelMenu,.Lfe55-ShowDaycareLevelMenu
	.align	2, 0
	.globl	ChooseSendDaycareMon
	.type	 ChooseSendDaycareMon,function
	.thumb_func
ChooseSendDaycareMon:
	push	{lr}
	mov	r0, #0x6
	mov	r1, #0x0
	bl	OpenPartyMenu
	ldr	r1, .L335
	ldr	r0, .L335+0x4
	str	r0, [r1, #0x8]
	pop	{r0}
	bx	r0
.L336:
	.align	2, 0
.L335:
	.word	gMain
	.word	c2_exit_to_overworld_2_switch
.Lfe56:
	.size	 ChooseSendDaycareMon,.Lfe56-ChooseSendDaycareMon
	.globl	gHatchedEggLevelUpMoves
.bss
	.align	1, 0
	.type	 gHatchedEggLevelUpMoves,object
	.size	 gHatchedEggLevelUpMoves,104
gHatchedEggLevelUpMoves:
	.space	104
	.globl	gHatchedEggFatherMoves
	.align	1, 0
	.type	 gHatchedEggFatherMoves,object
	.size	 gHatchedEggFatherMoves,8
gHatchedEggFatherMoves:
	.space	8
	.globl	gHatchedEggFinalMoves
	.align	1, 0
	.type	 gHatchedEggFinalMoves,object
	.size	 gHatchedEggFinalMoves,8
gHatchedEggFinalMoves:
	.space	8
	.globl	gHatchedEggEggMoves
	.align	1, 0
	.type	 gHatchedEggEggMoves,object
	.size	 gHatchedEggEggMoves,24
gHatchedEggEggMoves:
	.space	24
	.globl	gHatchedEggMotherMoves
	.align	1, 0
	.type	 gHatchedEggMotherMoves,object
	.size	 gHatchedEggMotherMoves,8
gHatchedEggMotherMoves:
	.space	8
.text
	.align	2, 0
