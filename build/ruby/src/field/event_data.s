@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.globl	gSpecialVar_0x8000
	.section ewram_data,"aw"
	.align	1, 0
	.type	 gSpecialVar_0x8000,object
	.size	 gSpecialVar_0x8000,2
gSpecialVar_0x8000:
	.short	0x0
	.globl	gSpecialVar_0x8001
	.align	1, 0
	.type	 gSpecialVar_0x8001,object
	.size	 gSpecialVar_0x8001,2
gSpecialVar_0x8001:
	.short	0x0
	.globl	gSpecialVar_0x8002
	.align	1, 0
	.type	 gSpecialVar_0x8002,object
	.size	 gSpecialVar_0x8002,2
gSpecialVar_0x8002:
	.short	0x0
	.globl	gSpecialVar_0x8003
	.align	1, 0
	.type	 gSpecialVar_0x8003,object
	.size	 gSpecialVar_0x8003,2
gSpecialVar_0x8003:
	.short	0x0
	.globl	gSpecialVar_0x8004
	.align	1, 0
	.type	 gSpecialVar_0x8004,object
	.size	 gSpecialVar_0x8004,2
gSpecialVar_0x8004:
	.short	0x0
	.globl	gSpecialVar_0x8005
	.align	1, 0
	.type	 gSpecialVar_0x8005,object
	.size	 gSpecialVar_0x8005,2
gSpecialVar_0x8005:
	.short	0x0
	.globl	gSpecialVar_0x8006
	.align	1, 0
	.type	 gSpecialVar_0x8006,object
	.size	 gSpecialVar_0x8006,2
gSpecialVar_0x8006:
	.short	0x0
	.globl	gSpecialVar_0x8007
	.align	1, 0
	.type	 gSpecialVar_0x8007,object
	.size	 gSpecialVar_0x8007,2
gSpecialVar_0x8007:
	.short	0x0
	.globl	gSpecialVar_0x8008
	.align	1, 0
	.type	 gSpecialVar_0x8008,object
	.size	 gSpecialVar_0x8008,2
gSpecialVar_0x8008:
	.short	0x0
	.globl	gSpecialVar_0x8009
	.align	1, 0
	.type	 gSpecialVar_0x8009,object
	.size	 gSpecialVar_0x8009,2
gSpecialVar_0x8009:
	.short	0x0
	.globl	gSpecialVar_0x800A
	.align	1, 0
	.type	 gSpecialVar_0x800A,object
	.size	 gSpecialVar_0x800A,2
gSpecialVar_0x800A:
	.short	0x0
	.globl	gSpecialVar_0x800B
	.align	1, 0
	.type	 gSpecialVar_0x800B,object
	.size	 gSpecialVar_0x800B,2
gSpecialVar_0x800B:
	.short	0x0
	.globl	gScriptResult
	.align	1, 0
	.type	 gScriptResult,object
	.size	 gScriptResult,2
gScriptResult:
	.short	0x0
	.globl	gScriptLastTalked
	.align	1, 0
	.type	 gScriptLastTalked,object
	.size	 gScriptLastTalked,2
gScriptLastTalked:
	.short	0x0
	.globl	gScriptFacing
	.align	1, 0
	.type	 gScriptFacing,object
	.size	 gScriptFacing,2
gScriptFacing:
	.short	0x0
	.globl	gUnknown_0202E8E2
	.type	 gUnknown_0202E8E2,object
	.size	 gUnknown_0202E8E2,16
gUnknown_0202E8E2:
	.byte	0x0
	.space	15
.text
	.align	2, 0
	.globl	InitEventData
	.type	 InitEventData,function
	.thumb_func
InitEventData:
	push	{r4, lr}
	ldr	r4, .L3
	mov	r2, #0x90
	lsl	r2, r2, #0x1
	add	r0, r4, #0
	mov	r1, #0x0
	bl	memset
	mov	r0, #0x90
	lsl	r0, r0, #0x1
	add	r4, r4, r0
	mov	r2, #0x80
	lsl	r2, r2, #0x2
	add	r0, r4, #0
	mov	r1, #0x0
	bl	memset
	ldr	r0, .L3+0x4
	mov	r1, #0x0
	mov	r2, #0x10
	bl	memset
	pop	{r4}
	pop	{r0}
	bx	r0
.L4:
	.align	2, 0
.L3:
	.word	gSaveBlock1+0x1220
	.word	gUnknown_0202E8E2
.Lfe1:
	.size	 InitEventData,.Lfe1-InitEventData
	.align	2, 0
	.globl	ClearTempFieldEventData
	.type	 ClearTempFieldEventData,function
	.thumb_func
ClearTempFieldEventData:
	push	{lr}
	ldr	r0, .L6
	mov	r1, #0x0
	str	r1, [r0]
	mov	r1, #0x90
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	mov	r1, #0x0
	mov	r2, #0x20
	bl	memset
	ldr	r0, .L6+0x4
	bl	FlagClear
	ldr	r0, .L6+0x8
	bl	FlagClear
	ldr	r0, .L6+0xc
	bl	FlagClear
	ldr	r0, .L6+0x10
	bl	FlagClear
	pop	{r0}
	bx	r0
.L7:
	.align	2, 0
.L6:
	.word	gSaveBlock1+0x1220
	.word	0x84d
	.word	0x84e
	.word	0x829
	.word	0x861
.Lfe2:
	.size	 ClearTempFieldEventData,.Lfe2-ClearTempFieldEventData
	.align	2, 0
	.globl	ClearUpperFlags
	.type	 ClearUpperFlags,function
	.thumb_func
ClearUpperFlags:
	push	{lr}
	ldr	r0, .L9
	mov	r1, #0x0
	mov	r2, #0x8
	bl	memset
	pop	{r0}
	bx	r0
.L10:
	.align	2, 0
.L9:
	.word	gSaveBlock1+0x1338
.Lfe3:
	.size	 ClearUpperFlags,.Lfe3-ClearUpperFlags
	.align	2, 0
	.globl	DisableNationalPokedex
	.type	 DisableNationalPokedex,function
	.thumb_func
DisableNationalPokedex:
	push	{lr}
	ldr	r0, .L12
	bl	GetVarPointer
	ldr	r2, .L12+0x4
	mov	r1, #0x0
	strb	r1, [r2, #0x1a]
	strh	r1, [r0]
	ldr	r0, .L12+0x8
	bl	FlagClear
	pop	{r0}
	bx	r0
.L13:
	.align	2, 0
.L12:
	.word	0x4046
	.word	gSaveBlock2
	.word	0x836
.Lfe4:
	.size	 DisableNationalPokedex,.Lfe4-DisableNationalPokedex
	.align	2, 0
	.globl	EnableNationalPokedex
	.type	 EnableNationalPokedex,function
	.thumb_func
EnableNationalPokedex:
	push	{r4, r5, lr}
	ldr	r0, .L15
	bl	GetVarPointer
	ldr	r4, .L15+0x4
	mov	r5, #0x0
	mov	r1, #0xda
	strb	r1, [r4, #0x1a]
	ldr	r2, .L15+0x8
	add	r1, r2, #0
	strh	r1, [r0]
	ldr	r0, .L15+0xc
	bl	FlagSet
	mov	r0, #0x1
	strb	r0, [r4, #0x19]
	strb	r5, [r4, #0x18]
	bl	sub_808C0A0
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L16:
	.align	2, 0
.L15:
	.word	0x4046
	.word	gSaveBlock2
	.word	0x302
	.word	0x836
.Lfe5:
	.size	 EnableNationalPokedex,.Lfe5-EnableNationalPokedex
	.align	2, 0
	.globl	IsNationalPokedexEnabled
	.type	 IsNationalPokedexEnabled,function
	.thumb_func
IsNationalPokedexEnabled:
	push	{lr}
	ldr	r0, .L21
	ldrb	r0, [r0, #0x1a]
	cmp	r0, #0xda
	bne	.L18	@cond_branch
	ldr	r0, .L21+0x4
	bl	VarGet
	lsl	r0, r0, #0x10
	ldr	r1, .L21+0x8
	cmp	r0, r1
	bne	.L18	@cond_branch
	ldr	r0, .L21+0xc
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L18	@cond_branch
	mov	r0, #0x1
	b	.L20
.L22:
	.align	2, 0
.L21:
	.word	gSaveBlock2
	.word	0x4046
	.word	0x3020000
	.word	0x836
.L18:
	mov	r0, #0x0
.L20:
	pop	{r1}
	bx	r1
.Lfe6:
	.size	 IsNationalPokedexEnabled,.Lfe6-IsNationalPokedexEnabled
	.align	2, 0
	.globl	DisableMysteryGift
	.type	 DisableMysteryGift,function
	.thumb_func
DisableMysteryGift:
	push	{lr}
	ldr	r0, .L24
	bl	FlagClear
	pop	{r0}
	bx	r0
.L25:
	.align	2, 0
.L24:
	.word	0x84c
.Lfe7:
	.size	 DisableMysteryGift,.Lfe7-DisableMysteryGift
	.align	2, 0
	.globl	EnableMysteryGift
	.type	 EnableMysteryGift,function
	.thumb_func
EnableMysteryGift:
	push	{lr}
	ldr	r0, .L27
	bl	FlagSet
	pop	{r0}
	bx	r0
.L28:
	.align	2, 0
.L27:
	.word	0x84c
.Lfe8:
	.size	 EnableMysteryGift,.Lfe8-EnableMysteryGift
	.align	2, 0
	.globl	IsMysteryGiftEnabled
	.type	 IsMysteryGiftEnabled,function
	.thumb_func
IsMysteryGiftEnabled:
	push	{lr}
	ldr	r0, .L30
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L31:
	.align	2, 0
.L30:
	.word	0x84c
.Lfe9:
	.size	 IsMysteryGiftEnabled,.Lfe9-IsMysteryGiftEnabled
	.align	2, 0
	.globl	DisableResetRTC
	.type	 DisableResetRTC,function
	.thumb_func
DisableResetRTC:
	push	{lr}
	ldr	r0, .L33
	mov	r1, #0x0
	bl	VarSet
	ldr	r0, .L33+0x4
	bl	FlagClear
	pop	{r0}
	bx	r0
.L34:
	.align	2, 0
.L33:
	.word	0x402c
	.word	0x862
.Lfe10:
	.size	 DisableResetRTC,.Lfe10-DisableResetRTC
	.align	2, 0
	.globl	EnableResetRTC
	.type	 EnableResetRTC,function
	.thumb_func
EnableResetRTC:
	push	{lr}
	ldr	r0, .L36
	mov	r1, #0x92
	lsl	r1, r1, #0x4
	bl	VarSet
	ldr	r0, .L36+0x4
	bl	FlagSet
	pop	{r0}
	bx	r0
.L37:
	.align	2, 0
.L36:
	.word	0x402c
	.word	0x862
.Lfe11:
	.size	 EnableResetRTC,.Lfe11-EnableResetRTC
	.align	2, 0
	.globl	CanResetRTC
	.type	 CanResetRTC,function
	.thumb_func
CanResetRTC:
	push	{lr}
	ldr	r0, .L42
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L39	@cond_branch
	ldr	r0, .L42+0x4
	bl	VarGet
	lsl	r0, r0, #0x10
	mov	r1, #0x92
	lsl	r1, r1, #0x14
	cmp	r0, r1
	bne	.L39	@cond_branch
	mov	r0, #0x1
	b	.L41
.L43:
	.align	2, 0
.L42:
	.word	0x862
	.word	0x402c
.L39:
	mov	r0, #0x0
.L41:
	pop	{r1}
	bx	r1
.Lfe12:
	.size	 CanResetRTC,.Lfe12-CanResetRTC
	.align	2, 0
	.globl	GetVarPointer
	.type	 GetVarPointer,function
	.thumb_func
GetVarPointer:
	push	{lr}
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	add	r2, r1, #0
	ldr	r0, .L49
	cmp	r1, r0
	bhi	.L45	@cond_branch
	mov	r0, #0x0
	b	.L47
.L50:
	.align	2, 0
.L49:
	.word	0x3fff
.L45:
	lsl	r0, r1, #0x10
	cmp	r0, #0
	bge	.L46	@cond_branch
	ldr	r0, .L51
	ldr	r2, .L51+0x4
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	b	.L48
.L52:
	.align	2, 0
.L51:
	.word	gSpecialVars
	.word	0xffff8000
.L46:
	lsl	r0, r2, #0x1
	ldr	r1, .L53
	add	r0, r0, r1
.L48:
.L47:
	pop	{r1}
	bx	r1
.L54:
	.align	2, 0
.L53:
	.word	gSaveBlock1+0xffff9340
.Lfe13:
	.size	 GetVarPointer,.Lfe13-GetVarPointer
	.align	2, 0
	.globl	VarGet
	.type	 VarGet,function
	.thumb_func
VarGet:
	push	{r4, lr}
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	add	r0, r4, #0
	bl	GetVarPointer
	cmp	r0, #0
	beq	.L56	@cond_branch
	ldrh	r0, [r0]
	b	.L57
.L56:
	add	r0, r4, #0
.L57:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe14:
	.size	 VarGet,.Lfe14-VarGet
	.align	2, 0
	.globl	VarSet
	.type	 VarSet,function
	.thumb_func
VarSet:
	push	{r4, lr}
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r1, r1, #0x10
	lsr	r4, r1, #0x10
	bl	GetVarPointer
	cmp	r0, #0
	beq	.L59	@cond_branch
	strh	r4, [r0]
	mov	r0, #0x1
	b	.L60
.L59:
	mov	r0, #0x0
.L60:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe15:
	.size	 VarSet,.Lfe15-VarSet
	.align	2, 0
	.globl	VarGetFieldObjectGraphicsId
	.type	 VarGetFieldObjectGraphicsId,function
	.thumb_func
VarGetFieldObjectGraphicsId:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x8
	ldr	r1, .L62
	add	r0, r0, r1
	lsr	r0, r0, #0x10
	bl	VarGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L63:
	.align	2, 0
.L62:
	.word	0x40100000
.Lfe16:
	.size	 VarGetFieldObjectGraphicsId,.Lfe16-VarGetFieldObjectGraphicsId
	.align	2, 0
	.globl	GetFlagPointer
	.type	 GetFlagPointer,function
	.thumb_func
GetFlagPointer:
	push	{lr}
	lsl	r2, r0, #0x10
	lsr	r1, r2, #0x10
	add	r3, r1, #0
	cmp	r1, #0
	bne	.L65	@cond_branch
	mov	r0, #0x0
	b	.L68
.L65:
	ldr	r0, .L71
	cmp	r1, r0
	bhi	.L66	@cond_branch
	lsr	r0, r2, #0x13
	ldr	r1, .L71+0x4
	b	.L70
.L72:
	.align	2, 0
.L71:
	.word	0x3fff
	.word	gSaveBlock1+0x1220
.L66:
	ldr	r1, .L73
	add	r0, r3, r1
	cmp	r0, #0
	bge	.L67	@cond_branch
	add	r1, r1, #0x7
	add	r0, r3, r1
.L67:
	asr	r0, r0, #0x3
	ldr	r1, .L73+0x4
.L70:
	add	r0, r0, r1
.L68:
	pop	{r1}
	bx	r1
.L74:
	.align	2, 0
.L73:
	.word	0xffffc000
	.word	gUnknown_0202E8E2
.Lfe17:
	.size	 GetFlagPointer,.Lfe17-GetFlagPointer
	.align	2, 0
	.globl	FlagSet
	.type	 FlagSet,function
	.thumb_func
FlagSet:
	push	{r4, lr}
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	add	r0, r4, #0
	bl	GetFlagPointer
	add	r2, r0, #0
	cmp	r2, #0
	beq	.L76	@cond_branch
	mov	r0, #0x7
	and	r0, r0, r4
	mov	r1, #0x1
	lsl	r1, r1, r0
	ldrb	r0, [r2]
	orr	r1, r1, r0
	strb	r1, [r2]
.L76:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe18:
	.size	 FlagSet,.Lfe18-FlagSet
	.align	2, 0
	.globl	FlagClear
	.type	 FlagClear,function
	.thumb_func
FlagClear:
	push	{r4, lr}
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	add	r0, r4, #0
	bl	GetFlagPointer
	add	r2, r0, #0
	cmp	r2, #0
	beq	.L78	@cond_branch
	mov	r0, #0x7
	and	r0, r0, r4
	mov	r1, #0x1
	lsl	r1, r1, r0
	ldrb	r0, [r2]
	bic	r0, r0, r1
	strb	r0, [r2]
.L78:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe19:
	.size	 FlagClear,.Lfe19-FlagClear
	.align	2, 0
	.globl	FlagGet
	.type	 FlagGet,function
	.thumb_func
FlagGet:
	push	{r4, lr}
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	add	r0, r4, #0
	bl	GetFlagPointer
	cmp	r0, #0
	beq	.L81	@cond_branch
	ldrb	r0, [r0]
	mov	r1, #0x7
	and	r1, r1, r4
	asr	r0, r0, r1
	mov	r1, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L81	@cond_branch
	mov	r0, #0x1
	b	.L82
.L81:
	mov	r0, #0x0
.L82:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe20:
	.size	 FlagGet,.Lfe20-FlagGet
.text
	.align	2, 0
