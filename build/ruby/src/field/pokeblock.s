@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section ewram_data,"aw"
	.type	 gUnknown_02039244,object
	.size	 gUnknown_02039244,1
gUnknown_02039244:
	.byte	0x0
	.align	2, 0
	.type	 gUnknown_02039248,object
	.size	 gUnknown_02039248,4
gUnknown_02039248:
	.byte	0x0
	.space	3
	.type	 gUnknown_0203924C,object
	.size	 gUnknown_0203924C,1
gUnknown_0203924C:
	.byte	0x0
	.globl	gPokeblockFlavorCompatibilityTable
	.section .rodata
	.type	 gPokeblockFlavorCompatibilityTable,object
gPokeblockFlavorCompatibilityTable:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xffffffff
	.byte	0x1
	.byte	0x0
	.byte	0xffffffff
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	0xffffffff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0xffffffff
	.byte	0x0
	.byte	0xffffffff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xffffffff
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0xffffffff
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xffffffff
	.byte	0x1
	.byte	0xffffffff
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0xffffffff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xffffffff
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	0xffffffff
	.byte	0x0
	.byte	0xffffffff
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0xffffffff
	.byte	0x0
	.byte	0x1
	.byte	0xffffffff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0xffffffff
	.byte	0x0
	.byte	0xffffffff
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	0xffffffff
	.byte	0x0
	.byte	0x0
	.byte	0xffffffff
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0xffffffff
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.size	 gPokeblockFlavorCompatibilityTable,125
	.globl	gUnknown_083F7EA8
	.align	2, 0
	.type	 gUnknown_083F7EA8,object
gUnknown_083F7EA8:
	.word	sub_80A5B40
	.word	c2_exit_to_overworld_2_switch
	.word	sub_802E424
	.word	c2_exit_to_overworld_2_switch
	.size	 gUnknown_083F7EA8,16
	.globl	gPokeblockNames
	.align	2, 0
	.type	 gPokeblockNames,object
gPokeblockNames:
	.word	0x0
	.word	ContestStatsText_RedPokeBlock
	.word	ContestStatsText_BluePokeBlock
	.word	ContestStatsText_PinkPokeBlock
	.word	ContestStatsText_GreenPokeBlock
	.word	ContestStatsText_YellowPokeBlock
	.word	ContestStatsText_PurplePokeBlock
	.word	ContestStatsText_IndigoPokeBlock
	.word	ContestStatsText_BrownPokeBlock
	.word	ContestStatsText_LiteBluePokeBlock
	.word	ContestStatsText_OlivePokeBlock
	.word	ContestStatsText_GrayPokeBlock
	.word	ContestStatsText_BlackPokeBlock
	.word	ContestStatsText_WhitePokeBlock
	.word	ContestStatsText_GoldPokeBlock
	.size	 gPokeblockNames,60
	.globl	gUnknown_083F7EF4
	.align	2, 0
	.type	 gUnknown_083F7EF4,object
gUnknown_083F7EF4:
	.word	OtherText_Use
	.word	sub_810C508
	.word	OtherText_Toss
	.word	sub_810C5C0
	.word	gOtherText_CancelNoTerminator
	.word	sub_810C748
	.word	OtherText_Use
	.word	sub_810C788
	.word	OtherText_Use
	.word	sub_810C854
	.size	 gUnknown_083F7EF4,40
	.globl	gUnknown_083F7F1C
	.type	 gUnknown_083F7F1C,object
gUnknown_083F7F1C:
	.byte	0x0
	.byte	0x1
	.byte	0x2
	.size	 gUnknown_083F7F1C,3
	.globl	gUnknown_083F7F1F
	.type	 gUnknown_083F7F1F,object
gUnknown_083F7F1F:
	.byte	0x3
	.byte	0x2
	.size	 gUnknown_083F7F1F,2
	.globl	gUnknown_083F7F21
	.type	 gUnknown_083F7F21,object
gUnknown_083F7F21:
	.byte	0x4
	.byte	0x2
	.size	 gUnknown_083F7F21,2
	.globl	gUnknown_083F7F24
	.align	2, 0
	.type	 gUnknown_083F7F24,object
	.size	 gUnknown_083F7F24,8
gUnknown_083F7F24:
	.word	sub_810C610
	.word	sub_810C668
	.globl	UnreferencedData_083F7F2C
	.type	 UnreferencedData_083F7F2C,object
UnreferencedData_083F7F2C:
	.byte	0x16
	.byte	0x17
	.byte	0x18
	.byte	0x21
	.byte	0x2f
	.size	 UnreferencedData_083F7F2C,5
	.globl	gOamData_83F7F34
	.align	2, 0
	.type	 gOamData_83F7F34,object
	.size	 gOamData_83F7F34,8
gOamData_83F7F34:
	.space	3
	.byte	0xc0
	.space	1
	.byte	0x8
	.space	2
	.globl	gSpriteAnim_83F7F3C
	.align	2, 0
	.type	 gSpriteAnim_83F7F3C,object
gSpriteAnim_83F7F3C:
	.short	0x0
	.byte	0x0
	.space	1
	.short	0xffffffff
	.space	2
	.size	 gSpriteAnim_83F7F3C,8
	.globl	gSpriteAnimTable_83F7F44
	.align	2, 0
	.type	 gSpriteAnimTable_83F7F44,object
gSpriteAnimTable_83F7F44:
	.word	gSpriteAnim_83F7F3C
	.size	 gSpriteAnimTable_83F7F44,4
	.globl	gSpriteAffineAnim_83F7F48
	.align	2, 0
	.type	 gSpriteAffineAnim_83F7F48,object
gSpriteAffineAnim_83F7F48:
	.short	0x0
	.short	0x0
	.byte	0xfe
	.byte	0x2
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x2
	.byte	0x4
	.space	2
	.short	0x0
	.short	0x0
	.byte	0xfe
	.byte	0x4
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x2
	.byte	0x2
	.space	2
	.short	0x7fff
	.space	6
	.size	 gSpriteAffineAnim_83F7F48,40
	.globl	gSpriteAffineAnimTable_83F7F70
	.align	2, 0
	.type	 gSpriteAffineAnimTable_83F7F70,object
gSpriteAffineAnimTable_83F7F70:
	.word	gSpriteAffineAnim_83F7F48
	.size	 gSpriteAffineAnimTable_83F7F70,4
	.globl	gUnknown_083F7F74
	.align	2, 0
	.type	 gUnknown_083F7F74,object
	.size	 gUnknown_083F7F74,8
gUnknown_083F7F74:
	.word	gMenuPokeblockDevice_Gfx
	.short	0x800
	.short	0x39d0
	.globl	gUnknown_083F7F7C
	.align	2, 0
	.type	 gUnknown_083F7F7C,object
	.size	 gUnknown_083F7F7C,8
gUnknown_083F7F7C:
	.word	gMenuPokeblockDevice_Pal
	.short	0x39d0
	.space	2
	.globl	gSpriteTemplate_83F7F84
	.align	2, 0
	.type	 gSpriteTemplate_83F7F84,object
	.size	 gSpriteTemplate_83F7F84,24
gSpriteTemplate_83F7F84:
	.short	0x39d0
	.short	0x39d0
	.word	gOamData_83F7F34
	.word	gSpriteAnimTable_83F7F44
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.globl	gUnknown_083F7F9C
	.align	2, 0
	.type	 gUnknown_083F7F9C,object
gUnknown_083F7F9C:
	.byte	0x1
	.byte	0x14
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x14
	.space	1
	.byte	0x2
	.byte	0x0
	.byte	0x14
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x14
	.space	1
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.byte	0x14
	.byte	0x0
	.byte	0x0
	.byte	0x14
	.space	1
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x14
	.byte	0x0
	.byte	0x14
	.space	1
	.byte	0x5
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x14
	.byte	0x14
	.space	1
	.size	 gUnknown_083F7F9C,40
.text
	.align	2, 0
	.type	 sub_810B674,function
	.thumb_func
sub_810B674:
	push	{lr}
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	RunTasks
	bl	UpdatePaletteFade
	pop	{r0}
	bx	r0
.Lfe1:
	.size	 sub_810B674,.Lfe1-sub_810B674
	.align	2, 0
	.type	 sub_810B68C,function
	.thumb_func
sub_810B68C:
	push	{lr}
	bl	LoadOam
	bl	ProcessSpriteCopyRequests
	bl	TransferPlttBuffer
	ldr	r1, .L4
	ldr	r2, .L4+0x4
	ldr	r0, .L4+0x8
	str	r1, [r0]
	str	r2, [r0, #0x4]
	ldr	r1, .L4+0xc
	str	r1, [r0, #0x8]
	ldr	r0, [r0, #0x8]
	pop	{r0}
	bx	r0
.L5:
	.align	2, 0
.L4:
	.word	gBGTilemapBuffers+0x1000
	.word	0x6007800
	.word	0x40000d4
	.word	0x80000400
.Lfe2:
	.size	 sub_810B68C,.Lfe2-sub_810B68C
	.align	2, 0
	.type	 sub_810B6C0,function
	.thumb_func
sub_810B6C0:
	push	{r4, lr}
	add	sp, sp, #0xfffffffc
	ldr	r0, .L37
	ldr	r1, .L37+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x12
	bls	.LCB58
	b	.L7	@long jump
.LCB58:
	lsl	r0, r0, #0x2
	ldr	r1, .L37+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L38:
	.align	2, 0
.L37:
	.word	gMain
	.word	0x43c
	.word	.L32
	.align	2, 0
	.align	2, 0
.L32:
	.word	.L8
	.word	.L9
	.word	.L10
	.word	.L11
	.word	.L12
	.word	.L14
	.word	.L15
	.word	.L16
	.word	.L17
	.word	.L19
	.word	.L20
	.word	.L22
	.word	.L24
	.word	.L25
	.word	.L26
	.word	.L27
	.word	.L28
	.word	.L29
	.word	.L31
.L8:
	bl	sub_80F9438
	bl	sub_80F9368
	ldr	r1, .L39
	ldr	r2, .L39+0x4
	add	r0, r2, #0
	strh	r0, [r1]
	add	r1, r1, #0x44
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r1, .L39+0x8
	ldr	r0, .L39+0xc
	add	r1, r1, r0
	b	.L35
.L40:
	.align	2, 0
.L39:
	.word	0x400000c
	.word	0xf0a
	.word	gMain
	.word	0x43c
.L9:
	bl	remove_some_task
	b	.L36
.L10:
	bl	ResetPaletteFade
	ldr	r2, .L41
	ldrb	r0, [r2, #0x8]
	mov	r1, #0x80
	orr	r0, r0, r1
	strb	r0, [r2, #0x8]
	ldr	r1, .L41+0x4
	ldr	r0, .L41+0x8
	add	r1, r1, r0
	b	.L35
.L42:
	.align	2, 0
.L41:
	.word	gPaletteFade
	.word	gMain
	.word	0x43c
.L11:
	bl	ResetSpriteData
	b	.L36
.L12:
	ldr	r0, .L43
	ldrb	r0, [r0]
	cmp	r0, #0x2
	beq	.L13	@cond_branch
	bl	ResetTasks
.L13:
	ldr	r1, .L43+0x4
	ldr	r0, .L43+0x8
	add	r1, r1, r0
	b	.L35
.L44:
	.align	2, 0
.L43:
	.word	gUnknown_02039244
	.word	gMain
	.word	0x43c
.L14:
	ldr	r0, .L45
	bl	SetUpWindowConfig
	b	.L36
.L46:
	.align	2, 0
.L45:
	.word	gWindowConfig_81E6E34
.L15:
	ldr	r0, .L47
	bl	SetUpWindowConfig
	ldr	r1, .L47+0x4
	ldr	r0, .L47+0x8
	add	r1, r1, r0
	b	.L35
.L48:
	.align	2, 0
.L47:
	.word	gWindowConfig_81E6E50
	.word	gMain
	.word	0x43c
.L16:
	ldr	r0, .L49
	bl	MultistepInitMenuWindowBegin
	b	.L36
.L50:
	.align	2, 0
.L49:
	.word	gWindowConfig_81E6E34
.L17:
	bl	MultistepInitMenuWindowContinue
	cmp	r0, #0
	bne	.LCB207
	b	.L7	@long jump
.LCB207:
	ldr	r1, .L51
	ldr	r0, .L51+0x4
	add	r1, r1, r0
	b	.L35
.L52:
	.align	2, 0
.L51:
	.word	gMain
	.word	0x43c
.L19:
	ldr	r0, .L53
	bl	MultistepInitMenuWindowBegin
	b	.L36
.L54:
	.align	2, 0
.L53:
	.word	gWindowConfig_81E6E50
.L20:
	bl	MultistepInitMenuWindowContinue
	cmp	r0, #0
	bne	.LCB239
	b	.L7	@long jump
.LCB239:
	ldr	r0, .L55
	ldr	r1, .L55+0x4
	add	r0, r0, r1
	mov	r1, #0x0
	strb	r1, [r0]
	b	.L36
.L56:
	.align	2, 0
.L55:
	.word	gSharedMem
	.word	0x1ffff
.L22:
	bl	sub_810B998
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB263
	b	.L7	@long jump
.LCB263:
	ldr	r1, .L57
	ldr	r0, .L57+0x4
	add	r1, r1, r0
	b	.L35
.L58:
	.align	2, 0
.L57:
	.word	gMain
	.word	0x43c
.L24:
	bl	sub_80F944C
	bl	LoadScrollIndicatorPalette
	mov	r0, #0x0
	mov	r1, #0xb0
	mov	r2, #0x8
	bl	CreateVerticalScrollIndicators
	mov	r0, #0x1
	mov	r1, #0xb0
	mov	r2, #0x98
	bl	CreateVerticalScrollIndicators
	b	.L36
.L25:
	mov	r0, #0x38
	mov	r1, #0x40
	mov	r2, #0x0
	bl	sub_810BA50
	ldr	r1, .L59
	ldr	r2, .L59+0x4
	add	r1, r1, r2
	strb	r0, [r1]
	ldr	r1, .L59+0x8
	ldr	r0, .L59+0xc
	add	r1, r1, r0
	b	.L35
.L60:
	.align	2, 0
.L59:
	.word	gSharedMem
	.word	0x1fffe
	.word	gMain
	.word	0x43c
.L26:
	bl	sub_810BC98
	bl	sub_810BD08
	b	.L36
.L27:
	bl	sub_810BB0C
	bl	sub_810BB30
	ldr	r0, .L61
	ldrb	r0, [r0, #0x1]
	bl	sub_810BC84
	ldr	r1, .L61+0x4
	ldr	r0, .L61+0x8
	add	r1, r1, r0
	b	.L35
.L62:
	.align	2, 0
.L61:
	.word	gUnknown_02039248
	.word	gMain
	.word	0x43c
.L28:
	ldr	r3, .L63
	ldrh	r2, [r3]
	mov	r0, #0x0
	strh	r0, [r3]
	ldr	r4, .L63+0x4
	ldrh	r0, [r4]
	mov	r1, #0x1
	orr	r0, r0, r1
	strh	r0, [r4]
	strh	r2, [r3]
	ldr	r2, .L63+0x8
	ldrh	r0, [r2]
	mov	r1, #0x8
	orr	r0, r0, r1
	strh	r0, [r2]
	ldr	r0, .L63+0xc
	bl	SetVBlankCallback
	mov	r1, #0x80
	lsl	r1, r1, #0x13
	mov	r2, #0xba
	lsl	r2, r2, #0x5
	add	r0, r2, #0
	strh	r0, [r1]
	ldr	r1, .L63+0x10
	ldr	r0, .L63+0x14
	add	r1, r1, r0
	b	.L35
.L64:
	.align	2, 0
.L63:
	.word	0x4000208
	.word	0x4000200
	.word	0x4000004
	.word	sub_810B68C
	.word	gMain
	.word	0x43c
.L29:
	bl	sub_8055870
	cmp	r0, #0x1
	beq	.L7	@cond_branch
.L36:
	ldr	r1, .L65
	ldr	r2, .L65+0x4
	add	r1, r1, r2
.L35:
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L7
.L66:
	.align	2, 0
.L65:
	.word	gMain
	.word	0x43c
.L31:
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	ldr	r2, .L67
	ldrb	r1, [r2, #0x8]
	mov	r0, #0x7f
	and	r0, r0, r1
	strb	r0, [r2, #0x8]
	ldr	r0, .L67+0x4
	bl	SetMainCallback2
	mov	r0, #0x1
	b	.L34
.L68:
	.align	2, 0
.L67:
	.word	gPaletteFade
	.word	sub_810B674
.L7:
	mov	r0, #0x0
.L34:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe3:
	.size	 sub_810B6C0,.Lfe3-sub_810B6C0
	.align	2, 0
	.globl	sub_810B96C
	.type	 sub_810B96C,function
	.thumb_func
sub_810B96C:
	push	{lr}
.L70:
	bl	sub_810B6C0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L72	@cond_branch
	ldr	r0, .L76
	mov	r1, #0x0
	bl	CreateTask
	b	.L71
.L77:
	.align	2, 0
.L76:
	.word	sub_810BF7C
.L72:
	bl	sub_80F9344
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L70	@cond_branch
.L71:
	pop	{r0}
	bx	r0
.Lfe4:
	.size	 sub_810B96C,.Lfe4-sub_810B96C
	.align	2, 0
	.type	 sub_810B998,function
	.thumb_func
sub_810B998:
	push	{lr}
	ldr	r0, .L89
	ldr	r1, .L89+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x4
	bhi	.L79	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L89+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L90:
	.align	2, 0
.L89:
	.word	gSharedMem
	.word	0x1ffff
	.word	.L85
	.align	2, 0
	.align	2, 0
.L85:
	.word	.L80
	.word	.L81
	.word	.L82
	.word	.L83
	.word	.L84
.L80:
	ldr	r0, .L91
	ldr	r1, .L91+0x4
	bl	LZDecompressVram
	b	.L88
.L92:
	.align	2, 0
.L91:
	.word	gMenuPokeblock_Gfx
	.word	0x6008000
.L81:
	ldr	r0, .L93
	ldr	r1, .L93+0x4
	bl	LZDecompressWram
	b	.L88
.L94:
	.align	2, 0
.L93:
	.word	gMenuPokeblock_Tilemap
	.word	gBGTilemapBuffers+0x1000
.L82:
	ldr	r0, .L95
	mov	r1, #0x0
	mov	r2, #0xc0
	bl	LoadCompressedPalette
	b	.L88
.L96:
	.align	2, 0
.L95:
	.word	gMenuPokeblock_Pal
.L83:
	ldr	r0, .L97
	bl	LoadCompressedObjectPic
.L88:
	ldr	r1, .L97+0x4
	ldr	r0, .L97+0x8
	add	r1, r1, r0
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L79
.L98:
	.align	2, 0
.L97:
	.word	gUnknown_083F7F74
	.word	gSharedMem
	.word	0x1ffff
.L84:
	ldr	r0, .L99
	bl	LoadCompressedObjectPalette
	ldr	r0, .L99+0x4
	ldr	r1, .L99+0x8
	add	r0, r0, r1
	mov	r1, #0x0
	strb	r1, [r0]
	mov	r0, #0x1
	b	.L87
.L100:
	.align	2, 0
.L99:
	.word	gUnknown_083F7F7C
	.word	gSharedMem
	.word	0x1ffff
.L79:
	mov	r0, #0x0
.L87:
	pop	{r1}
	bx	r1
.Lfe5:
	.size	 sub_810B998,.Lfe5-sub_810B998
	.align	2, 0
	.globl	sub_810BA50
	.type	 sub_810BA50,function
	.thumb_func
sub_810BA50:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	add	r3, r2, #0
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	ldr	r0, .L102
	lsl	r4, r4, #0x10
	asr	r4, r4, #0x10
	lsl	r5, r5, #0x10
	asr	r5, r5, #0x10
	add	r1, r4, #0
	add	r2, r5, #0
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L103:
	.align	2, 0
.L102:
	.word	gSpriteTemplate_83F7F84
.Lfe6:
	.size	 sub_810BA50,.Lfe6-sub_810BA50
	.align	2, 0
	.globl	sub_810BA7C
	.type	 sub_810BA7C,function
	.thumb_func
sub_810BA7C:
	push	{lr}
	ldr	r1, .L111
	strb	r0, [r1]
	ldrb	r2, [r1]
	cmp	r2, #0x2
	beq	.L107	@cond_branch
	cmp	r2, #0x3
	beq	.L108	@cond_branch
	ldr	r1, .L111+0x4
	ldr	r0, .L111+0x8
	str	r0, [r1]
	ldr	r1, .L111+0xc
	mov	r0, #0x3
	b	.L110
.L112:
	.align	2, 0
.L111:
	.word	gUnknown_02039244
	.word	gUnknown_03000758
	.word	gUnknown_083F7F1C
	.word	gUnknown_0203924C
.L107:
	ldr	r0, .L113
	ldr	r1, .L113+0x4
	str	r1, [r0]
	ldr	r0, .L113+0x8
	strb	r2, [r0]
	b	.L105
.L114:
	.align	2, 0
.L113:
	.word	gUnknown_03000758
	.word	gUnknown_083F7F1F
	.word	gUnknown_0203924C
.L108:
	ldr	r1, .L115
	ldr	r0, .L115+0x4
	str	r0, [r1]
	ldr	r1, .L115+0x8
	mov	r0, #0x2
.L110:
	strb	r0, [r1]
.L105:
	pop	{r0}
	bx	r0
.L116:
	.align	2, 0
.L115:
	.word	gUnknown_03000758
	.word	gUnknown_083F7F21
	.word	gUnknown_0203924C
.Lfe7:
	.size	 sub_810BA7C,.Lfe7-sub_810BA7C
	.align	2, 0
	.globl	sub_810BADC
	.type	 sub_810BADC,function
	.thumb_func
sub_810BADC:
	push	{lr}
	mov	r0, #0x2
	bl	sub_810BA7C
	ldr	r0, .L118
	bl	SetMainCallback2
	pop	{r0}
	bx	r0
.L119:
	.align	2, 0
.L118:
	.word	sub_810B96C
.Lfe8:
	.size	 sub_810BADC,.Lfe8-sub_810BADC
	.align	2, 0
	.globl	sub_810BAF4
	.type	 sub_810BAF4,function
	.thumb_func
sub_810BAF4:
	push	{lr}
	mov	r0, #0x3
	bl	sub_810BA7C
	ldr	r0, .L121
	bl	SetMainCallback2
	pop	{r0}
	bx	r0
.L122:
	.align	2, 0
.L121:
	.word	sub_810B96C
.Lfe9:
	.size	 sub_810BAF4,.Lfe9-sub_810BAF4
	.align	2, 0
	.type	 sub_810BB0C,function
	.thumb_func
sub_810BB0C:
	push	{lr}
	ldr	r0, .L124
	bl	BasicInitMenuWindow
	mov	r0, #0x1
	bl	SetCustomFont
	ldr	r0, .L124+0x4
	bl	ItemId_GetItem
	mov	r1, #0x2
	mov	r2, #0x1
	mov	r3, #0x48
	bl	sub_8072BD8
	mov	r0, #0x0
	bl	SetCustomFont
	pop	{r0}
	bx	r0
.L125:
	.align	2, 0
.L124:
	.word	gWindowConfig_81E6E34
	.word	0x111
.Lfe10:
	.size	 sub_810BB0C,.Lfe10-sub_810BB0C
	.align	2, 0
	.type	 sub_810BB30,function
	.thumb_func
sub_810BB30:
	push	{lr}
	ldr	r0, .L127
	bl	BasicInitMenuWindow
	ldr	r0, .L127+0x4
	mov	r1, #0x2
	mov	r2, #0xd
	bl	MenuPrint
	ldr	r0, .L127+0x8
	mov	r1, #0x2
	mov	r2, #0xf
	bl	MenuPrint
	ldr	r0, .L127+0xc
	mov	r1, #0x2
	mov	r2, #0x11
	bl	MenuPrint
	ldr	r0, .L127+0x10
	mov	r1, #0x8
	mov	r2, #0xd
	bl	MenuPrint
	ldr	r0, .L127+0x14
	mov	r1, #0x8
	mov	r2, #0xf
	bl	MenuPrint
	pop	{r0}
	bx	r0
.L128:
	.align	2, 0
.L127:
	.word	gWindowConfig_81E6E34
	.word	gContestStatsText_Spicy
	.word	gContestStatsText_Dry
	.word	gContestStatsText_Sweet
	.word	gContestStatsText_Bitter
	.word	gContestStatsText_Sour
.Lfe11:
	.size	 sub_810BB30,.Lfe11-sub_810BB30
	.align	2, 0
	.type	 sub_810BB88,function
	.thumb_func
sub_810BB88:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	ldr	r0, .L137
	bl	BasicInitMenuWindow
	mov	r6, r8
	add	r0, r6, #0
	add	r0, r0, #0x8
	cmp	r6, r0
	bgt	.L131	@cond_branch
	ldr	r0, .L137+0x4
	mov	r9, r0
	ldr	r1, .L137+0x8
	mov	sl, r1
.L133:
	mov	r1, r8
	sub	r0, r6, r1
	lsl	r0, r0, #0x19
	lsr	r7, r0, #0x18
	ldr	r0, .L137+0xc
	ldrb	r0, [r0, #0x2]
	cmp	r6, r0
	bne	.L134	@cond_branch
	mov	r0, r9
	ldr	r1, .L137+0x10
	mov	r2, #0x78
	mov	r3, #0x0
	bl	sub_8072C74
	mov	r2, #0x1
	orr	r2, r2, r7
	mov	r0, r9
	mov	r1, #0xf
	bl	MenuPrint
	mov	r0, r8
	add	r0, r0, #0x8
	cmp	r6, r0
	beq	.L131	@cond_branch
	add	r1, r7, #0x3
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r0, #0xf
	mov	r2, #0x1d
	mov	r3, #0x12
	bl	MenuZeroFillWindowRect
	b	.L131
.L138:
	.align	2, 0
.L137:
	.word	gWindowConfig_81E6E34
	.word	gStringVar1
	.word	gSaveBlock1
	.word	gUnknown_02039248
	.word	gContestStatsText_StowCase
.L134:
	lsl	r5, r6, #0x3
	mov	r1, sl
	add	r0, r5, r1
	mov	r1, #0xff
	lsl	r1, r1, #0x3
	add	r0, r0, r1
	ldrb	r0, [r0]
	lsl	r0, r0, #0x2
	ldr	r1, .L139
	add	r0, r0, r1
	ldr	r1, [r0]
	mov	r0, r9
	mov	r2, #0x5e
	mov	r3, #0x0
	bl	sub_8072C74
	add	r4, r0, #0
	mov	r0, #0xfc
	strb	r0, [r4]
	mov	r0, #0x14
	strb	r0, [r4, #0x1]
	mov	r0, #0x6
	strb	r0, [r4, #0x2]
	add	r4, r4, #0x3
	ldr	r0, .L139+0x4
	add	r5, r5, r0
	add	r0, r5, #0
	bl	sub_810C9B0
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	mov	r2, #0x1
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	mov	r2, #0x1
	orr	r2, r2, r7
	mov	r0, r9
	mov	r1, #0xf
	bl	MenuPrint
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	mov	r0, r8
	add	r0, r0, #0x8
	cmp	r6, r0
	ble	.L133	@cond_branch
.L131:
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L140:
	.align	2, 0
.L139:
	.word	gPokeblockNames
	.word	gSaveBlock1+0x7f8
.Lfe12:
	.size	 sub_810BB88,.Lfe12-sub_810BB88
	.align	2, 0
	.type	 sub_810BC84,function
	.thumb_func
sub_810BC84:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	sub_810BB88
	mov	r0, #0x0
	bl	sub_810BDAC
	pop	{r0}
	bx	r0
.Lfe13:
	.size	 sub_810BC84,.Lfe13-sub_810BC84
	.align	2, 0
	.type	 sub_810BC98,function
	.thumb_func
sub_810BC98:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	mov	r2, #0x0
	ldr	r0, .L154
	mov	r9, r0
.L146:
	add	r1, r2, #0x1
	lsl	r0, r1, #0x10
	lsr	r5, r0, #0x10
	mov	r8, r1
	cmp	r5, #0x27
	bhi	.L145	@cond_branch
	lsl	r1, r2, #0x3
	mov	r2, r9
	add	r0, r1, r2
	mov	r2, #0xff
	lsl	r2, r2, #0x3
	add	r7, r0, r2
	ldr	r0, .L154+0x4
	mov	ip, r0
	add	r6, r1, r0
.L150:
	ldrb	r0, [r7]
	cmp	r0, #0
	bne	.L149	@cond_branch
	ldr	r3, [r6]		@ created by thumb_load_double_from_address
	ldr	r4, [r6, #0x4]		@ created by thumb_load_double_from_address
	lsl	r2, r5, #0x3
	add	r2, r2, ip
	ldr	r0, [r2]		@ created by thumb_load_double_from_address
	ldr	r1, [r2, #0x4]		@ created by thumb_load_double_from_address
	str	r0, [r6]
	str	r1, [r6, #0x4]
	str	r3, [r2]
	str	r4, [r2, #0x4]
.L149:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	cmp	r5, #0x27
	bls	.L150	@cond_branch
.L145:
	mov	r1, r8
	lsl	r0, r1, #0x10
	lsr	r2, r0, #0x10
	cmp	r2, #0x26
	bls	.L146	@cond_branch
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L155:
	.align	2, 0
.L154:
	.word	gSaveBlock1
	.word	gSaveBlock1+0x7f8
.Lfe14:
	.size	 sub_810BC98,.Lfe14-sub_810BC98
	.align	2, 0
	.type	 sub_810BD08,function
	.thumb_func
sub_810BD08:
	push	{r4, r5, lr}
	ldr	r1, .L167
	mov	r0, #0x0
	strb	r0, [r1, #0x2]
	mov	r2, #0x0
	ldr	r5, .L167+0x4
	mov	r4, #0xff
	lsl	r4, r4, #0x3
	add	r3, r1, #0
.L160:
	lsl	r0, r2, #0x3
	add	r0, r0, r5
	add	r0, r0, r4
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L159	@cond_branch
	ldrb	r0, [r3, #0x2]
	add	r0, r0, #0x1
	strb	r0, [r3, #0x2]
.L159:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x27
	bls	.L160	@cond_branch
	ldrb	r0, [r1, #0x2]
	cmp	r0, #0x7
	bls	.L166	@cond_branch
	mov	r0, #0x8
.L166:
	strb	r0, [r1, #0x3]
	ldrb	r2, [r1, #0x1]
	add	r0, r2, #0
	add	r0, r0, #0x8
	ldrb	r3, [r1, #0x2]
	cmp	r0, r3
	ble	.L165	@cond_branch
	cmp	r2, #0
	beq	.L165	@cond_branch
	sub	r0, r2, #0x1
	strb	r0, [r1, #0x1]
.L165:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L168:
	.align	2, 0
.L167:
	.word	gUnknown_02039248
	.word	gSaveBlock1
.Lfe15:
	.size	 sub_810BD08,.Lfe15-sub_810BD08
	.align	2, 0
	.type	 sub_810BD64,function
	.thumb_func
sub_810BD64:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	mov	r2, #0x0
	ldr	r5, .L175
	ldr	r4, .L175+0x4
.L173:
	ldrb	r0, [r5]
	lsl	r0, r0, #0x1
	add	r0, r0, #0x1
	lsl	r0, r0, #0x5
	add	r1, r2, #0
	add	r1, r1, #0xf
	add	r0, r0, r1
	lsl	r0, r0, #0x1
	add	r0, r0, r4
	strh	r3, [r0]
	ldrb	r0, [r5]
	lsl	r0, r0, #0x6
	add	r0, r0, #0x40
	add	r0, r0, r1
	lsl	r0, r0, #0x1
	add	r0, r0, r4
	strh	r3, [r0]
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0xd
	bls	.L173	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L176:
	.align	2, 0
.L175:
	.word	gUnknown_02039248
	.word	gBGTilemapBuffers+0x1000
.Lfe16:
	.size	 sub_810BD64,.Lfe16-sub_810BD64
	.align	2, 0
	.type	 sub_810BDAC,function
	.thumb_func
sub_810BDAC:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L178	@cond_branch
	ldr	r0, .L195
	ldr	r1, .L195+0x4
	bl	sub_810BD64
	b	.L179
.L196:
	.align	2, 0
.L195:
	.word	0x1005
	.word	0x1014
.L178:
	ldr	r0, .L197
	ldr	r1, .L197+0x4
	bl	sub_810BD64
.L179:
	ldr	r0, .L197+0x8
	ldrb	r0, [r0, #0x1]
	cmp	r0, #0
	beq	.L180	@cond_branch
	mov	r0, #0x0
	mov	r1, #0x0
	bl	sub_80F979C
	b	.L181
.L198:
	.align	2, 0
.L197:
	.word	0x2005
	.word	0x2014
	.word	gUnknown_02039248
.L180:
	mov	r0, #0x0
	mov	r1, #0x1
	bl	sub_80F979C
.L181:
	ldr	r2, .L199
	ldrb	r0, [r2, #0x2]
	ldrb	r1, [r2, #0x3]
	cmp	r0, r1
	bls	.L182	@cond_branch
	ldrb	r0, [r2, #0x1]
	ldrb	r1, [r2, #0x3]
	add	r0, r0, r1
	ldrb	r2, [r2, #0x2]
	cmp	r0, r2
	beq	.L182	@cond_branch
	mov	r0, #0x1
	mov	r1, #0x0
	bl	sub_80F979C
	b	.L183
.L200:
	.align	2, 0
.L199:
	.word	gUnknown_02039248
.L182:
	mov	r0, #0x1
	mov	r1, #0x1
	bl	sub_80F979C
.L183:
	mov	r6, #0x0
	ldr	r7, .L201
	mov	r0, #0xf
	mov	r8, r0
.L187:
	add	r0, r6, #0
	mov	r1, #0x3
	bl	__umodsi3
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x12
	ldr	r1, .L201+0x4
	add	r4, r4, r1
	add	r0, r6, #0
	mov	r1, #0x3
	bl	__udivsi3
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x1
	add	r5, r4, r1
	ldr	r1, .L201+0x8
	ldrb	r2, [r1]
	ldrb	r0, [r1, #0x1]
	add	r0, r2, r0
	ldrb	r1, [r1, #0x2]
	cmp	r0, r1
	beq	.L188	@cond_branch
	lsl	r0, r0, #0x3
	ldr	r1, .L201+0xc
	add	r0, r0, r1
	add	r4, r6, #0x1
	lsl	r1, r4, #0x18
	lsr	r1, r1, #0x18
	bl	GetPokeblockData
	lsl	r0, r0, #0x10
	cmp	r0, #0
	ble	.L189	@cond_branch
	lsl	r1, r5, #0x1
	add	r1, r1, r7
	lsl	r2, r6, #0xc
	add	r0, r2, #0
	add	r0, r0, #0x17
	strh	r0, [r1]
	add	r0, r5, #0
	add	r0, r0, #0x20
	lsl	r0, r0, #0x1
	add	r0, r0, r7
	add	r2, r2, #0x18
	strh	r2, [r0]
	b	.L186
.L202:
	.align	2, 0
.L201:
	.word	gBGTilemapBuffers+0x1000
	.word	0x1a1
	.word	gUnknown_02039248
	.word	gSaveBlock1+0x7f8
.L189:
	lsl	r0, r5, #0x1
	add	r0, r0, r7
	mov	r1, r8
	strh	r1, [r0]
	add	r0, r5, #0
	add	r0, r0, #0x20
	lsl	r0, r0, #0x1
	add	r0, r0, r7
	strh	r1, [r0]
	b	.L186
.L188:
	lsl	r0, r5, #0x1
	add	r0, r0, r7
	mov	r1, r8
	strh	r1, [r0]
	add	r0, r5, #0
	add	r0, r0, #0x20
	lsl	r0, r0, #0x1
	add	r0, r0, r7
	strh	r1, [r0]
	add	r4, r6, #0x1
.L186:
	lsl	r0, r4, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0x4
	bls	.L187	@cond_branch
	ldr	r0, .L203
	bl	BasicInitMenuWindow
	ldr	r0, .L203+0x4
	ldrb	r2, [r0]
	ldrb	r1, [r0, #0x1]
	add	r2, r2, r1
	ldrb	r0, [r0, #0x2]
	cmp	r2, r0
	beq	.L193	@cond_branch
	ldr	r4, .L203+0x8
	lsl	r0, r2, #0x3
	ldr	r1, .L203+0xc
	add	r0, r0, r1
	bl	sub_810C9E8
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	mov	r2, #0x10
	mov	r3, #0x1
	bl	sub_8072C14
	add	r0, r4, #0
	mov	r1, #0xb
	mov	r2, #0x11
	bl	MenuPrint
	b	.L194
.L204:
	.align	2, 0
.L203:
	.word	gWindowConfig_81E6E34
	.word	gUnknown_02039248
	.word	gStringVar1
	.word	gSaveBlock1+0x7f8
.L193:
	mov	r0, #0xb
	mov	r1, #0x11
	mov	r2, #0xc
	mov	r3, #0x12
	bl	MenuZeroFillWindowRect
.L194:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe17:
	.size	 sub_810BDAC,.Lfe17-sub_810BDAC
	.align	2, 0
	.type	 sub_810BF38,function
	.thumb_func
sub_810BF38:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x5
	bl	PlaySE
	ldr	r2, .L206
	ldr	r0, .L206+0x4
	ldr	r1, .L206+0x8
	add	r0, r0, r1
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r2, r2, #0x1c
	add	r0, r0, r2
	ldr	r1, .L206+0xc
	str	r1, [r0]
	add	r0, r4, #0
	bl	sub_810BDAC
	pop	{r4}
	pop	{r0}
	bx	r0
.L207:
	.align	2, 0
.L206:
	.word	gSprites
	.word	gSharedMem
	.word	0x1fffe
	.word	sub_810C8D4
.Lfe18:
	.size	 sub_810BF38,.Lfe18-sub_810BF38
	.align	2, 0
	.type	 sub_810BF7C,function
	.thumb_func
sub_810BF7C:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r4, r5, #0
	ldr	r0, .L230
	ldrb	r1, [r0, #0x7]
	mov	r3, #0x80
	add	r0, r3, #0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.LCB1549
	b	.L209	@long jump
.LCB1549:
	ldr	r2, .L230+0x4
	ldrh	r1, [r2, #0x30]
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L210	@cond_branch
	ldr	r4, .L230+0x8
	ldrb	r0, [r4]
	cmp	r0, #0
	beq	.L211	@cond_branch
	mov	r0, #0x5
	mov	r1, #0x14
	bl	sub_810BD64
	ldrb	r0, [r4]
	sub	r0, r0, #0x1
	strb	r0, [r4]
	b	.L228
.L231:
	.align	2, 0
.L230:
	.word	gPaletteFade
	.word	gMain
	.word	gUnknown_02039248
.L211:
	ldrb	r0, [r4, #0x1]
	cmp	r0, #0
	beq	.L209	@cond_branch
	sub	r0, r0, #0x1
	b	.L229
.L210:
	add	r0, r3, #0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L215	@cond_branch
	ldr	r4, .L232
	ldrb	r0, [r4]
	ldrb	r1, [r4, #0x3]
	cmp	r0, r1
	beq	.L216	@cond_branch
	mov	r0, #0x5
	mov	r1, #0x14
	bl	sub_810BD64
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	strb	r0, [r4]
	b	.L228
.L233:
	.align	2, 0
.L232:
	.word	gUnknown_02039248
.L216:
	ldrb	r1, [r4, #0x1]
	ldrb	r0, [r4]
	add	r0, r1, r0
	ldrb	r2, [r4, #0x2]
	cmp	r0, r2
	beq	.L209	@cond_branch
	add	r0, r1, #0x1
.L229:
	strb	r0, [r4, #0x1]
	ldrb	r0, [r4, #0x1]
	bl	sub_810BB88
.L228:
	mov	r0, #0x0
	bl	sub_810BF38
	b	.L209
.L215:
	ldrh	r1, [r2, #0x2e]
	mov	r0, #0x4
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L220	@cond_branch
	ldr	r4, .L234
	ldrb	r0, [r4, #0x1]
	ldrb	r1, [r4]
	add	r0, r0, r1
	ldrb	r1, [r4, #0x2]
	cmp	r0, r1
	beq	.L209	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x1
	bl	sub_810BDAC
	ldr	r1, .L234+0x4
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldrb	r1, [r4, #0x1]
	ldrb	r2, [r4]
	add	r1, r1, r2
	strh	r1, [r0, #0x8]
	ldr	r1, .L234+0x8
	str	r1, [r0]
	b	.L209
.L235:
	.align	2, 0
.L234:
	.word	gUnknown_02039248
	.word	gTasks
	.word	sub_810C0C8
.L220:
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L223	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L236
	ldrb	r1, [r0, #0x1]
	ldrb	r2, [r0]
	add	r1, r1, r2
	ldrb	r0, [r0, #0x2]
	cmp	r1, r0
	bne	.L224	@cond_branch
	ldr	r1, .L236+0x4
	ldr	r2, .L236+0x8
	add	r0, r2, #0
	strh	r0, [r1]
	add	r0, r5, #0
	bl	sub_810C31C
	b	.L209
.L237:
	.align	2, 0
.L236:
	.word	gUnknown_02039248
	.word	gScriptResult
	.word	0xffff
.L224:
	add	r0, r5, #0
	bl	sub_810C368
	b	.L209
.L223:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L209	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r1, .L238
	ldr	r2, .L238+0x4
	add	r0, r2, #0
	strh	r0, [r1]
	add	r0, r4, #0
	bl	sub_810C31C
.L209:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L239:
	.align	2, 0
.L238:
	.word	gScriptResult
	.word	0xffff
.Lfe19:
	.size	 sub_810BF7C,.Lfe19-sub_810BF7C
	.align	2, 0
	.type	 sub_810C0C8,function
	.thumb_func
sub_810C0C8:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r2, .L258
	ldrh	r1, [r2, #0x30]
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L241	@cond_branch
	ldr	r4, .L258+0x4
	ldrb	r0, [r4]
	cmp	r0, #0
	beq	.L242	@cond_branch
	mov	r0, #0x5
	mov	r1, #0x14
	bl	sub_810BD64
	ldrb	r0, [r4]
	sub	r0, r0, #0x1
	strb	r0, [r4]
	b	.L255
.L259:
	.align	2, 0
.L258:
	.word	gMain
	.word	gUnknown_02039248
.L242:
	ldrb	r0, [r4, #0x1]
	cmp	r0, #0
	beq	.L245	@cond_branch
	add	r0, r5, #0
	mov	r1, #0x0
	bl	sub_810C1C8
	ldrb	r0, [r4, #0x1]
	sub	r0, r0, #0x1
	b	.L256
.L241:
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L246	@cond_branch
	ldr	r4, .L260
	ldrb	r0, [r4]
	ldrb	r1, [r4, #0x3]
	cmp	r0, r1
	beq	.L247	@cond_branch
	mov	r0, #0x5
	mov	r1, #0x14
	bl	sub_810BD64
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	strb	r0, [r4]
	b	.L255
.L261:
	.align	2, 0
.L260:
	.word	gUnknown_02039248
.L247:
	ldrb	r0, [r4, #0x1]
	ldrb	r1, [r4]
	add	r0, r0, r1
	ldrb	r1, [r4, #0x2]
	cmp	r0, r1
	beq	.L245	@cond_branch
	add	r0, r5, #0
	mov	r1, #0x0
	bl	sub_810C1C8
	ldrb	r0, [r4, #0x1]
	add	r0, r0, #0x1
.L256:
	strb	r0, [r4, #0x1]
	ldrb	r0, [r4, #0x1]
	bl	sub_810BB88
.L255:
	mov	r0, #0x1
	bl	sub_810BF38
	add	r0, r5, #0
	mov	r1, #0x1
	bl	sub_810C1C8
	b	.L245
.L246:
	ldrh	r1, [r2, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L252	@cond_branch
	mov	r0, #0x4
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L251	@cond_branch
.L252:
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r5, #0
	mov	r1, #0x0
	bl	sub_810C1C8
	add	r0, r5, #0
	bl	sub_810C23C
	b	.L257
.L251:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L245	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r5, #0
	mov	r1, #0x0
	bl	sub_810C1C8
	mov	r0, #0x0
	bl	sub_810BDAC
.L257:
	ldr	r0, .L262
	lsl	r1, r5, #0x2
	add	r1, r1, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L262+0x4
	str	r0, [r1]
.L245:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L263:
	.align	2, 0
.L262:
	.word	gTasks
	.word	sub_810BF7C
.Lfe20:
	.size	 sub_810C0C8,.Lfe20-sub_810C0C8
	.align	2, 0
	.type	 sub_810C1C8,function
	.thumb_func
sub_810C1C8:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	lsl	r1, r1, #0x18
	ldr	r6, .L272
	cmp	r1, #0
	bne	.L265	@cond_branch
	mov	r6, #0x5
.L265:
	ldr	r1, .L272+0x4
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r2, .L272+0x8
	ldrb	r1, [r2, #0x1]
	ldrh	r0, [r0, #0x8]
	sub	r0, r0, r1
	lsl	r1, r0, #0x10
	lsr	r0, r1, #0x10
	cmp	r0, #0x8
	bhi	.L266	@cond_branch
	asr	r0, r1, #0x10
	ldrb	r2, [r2]
	cmp	r0, r2
	beq	.L266	@cond_branch
	mov	r2, #0x0
	lsl	r0, r0, #0x1
	add	r1, r0, #0x1
	lsl	r5, r1, #0x5
	ldr	r3, .L272+0xc
	add	r0, r0, #0x2
	lsl	r4, r0, #0x5
.L270:
	add	r0, r2, #0
	add	r0, r0, #0xf
	add	r1, r5, r0
	lsl	r1, r1, #0x1
	add	r1, r1, r3
	strh	r6, [r1]
	add	r0, r4, r0
	lsl	r0, r0, #0x1
	add	r0, r0, r3
	strh	r6, [r0]
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0xd
	bls	.L270	@cond_branch
.L266:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L273:
	.align	2, 0
.L272:
	.word	0x1005
	.word	gTasks
	.word	gUnknown_02039248
	.word	gBGTilemapBuffers+0x1000
.Lfe21:
	.size	 sub_810C1C8,.Lfe21-sub_810C1C8
	.align	2, 0
	.type	 sub_810C23C,function
	.thumb_func
sub_810C23C:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	ldr	r7, .L277
	ldrb	r0, [r7]
	ldrb	r2, [r7, #0x1]
	add	r0, r0, r2
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrb	r2, [r7, #0x2]
	cmp	r0, r2
	bne	.L275	@cond_branch
	mov	r0, #0x0
	bl	sub_810BDAC
	b	.L276
.L278:
	.align	2, 0
.L277:
	.word	gUnknown_02039248
.L275:
	ldr	r4, .L279
	lsl	r3, r0, #0x3
	mov	r0, #0xff
	lsl	r0, r0, #0x3
	add	r4, r4, r0
	add	r3, r3, r4
	ldr	r5, [r3]		@ created by thumb_load_double_from_address
	ldr	r6, [r3, #0x4]		@ created by thumb_load_double_from_address
	ldr	r0, .L279+0x4
	lsl	r2, r1, #0x2
	add	r2, r2, r1
	lsl	r2, r2, #0x3
	add	r2, r2, r0
	mov	r1, #0x8
	ldrsh	r0, [r2, r1]
	lsl	r0, r0, #0x3
	add	r0, r0, r4
	ldr	r1, [r0, #0x4]		@ created by thumb_load_double_from_address
	ldr	r0, [r0]		@ created by thumb_load_double_from_address
	str	r0, [r3]
	str	r1, [r3, #0x4]
	mov	r1, #0x8
	ldrsh	r0, [r2, r1]
	lsl	r0, r0, #0x3
	add	r0, r0, r4
	str	r5, [r0]
	str	r6, [r0, #0x4]
	ldrb	r0, [r7, #0x1]
	bl	sub_810BB88
	mov	r0, #0x0
	bl	sub_810BDAC
.L276:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L280:
	.align	2, 0
.L279:
	.word	gSaveBlock1
	.word	gTasks
.Lfe22:
	.size	 sub_810C23C,.Lfe22-sub_810C23C
	.align	2, 0
	.type	 sub_810C2B0,function
	.thumb_func
sub_810C2B0:
	push	{lr}
	mov	r0, #0x0
	bl	DestroyVerticalScrollIndicator
	mov	r0, #0x1
	bl	DestroyVerticalScrollIndicator
	bl	BuyMenuFreeMemory
	pop	{r0}
	bx	r0
.Lfe23:
	.size	 sub_810C2B0,.Lfe23-sub_810C2B0
	.align	2, 0
	.type	 sub_810C2C8,function
	.thumb_func
sub_810C2C8:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r0, .L285
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L283	@cond_branch
	ldr	r4, .L285+0x4
	ldrb	r0, [r4]
	cmp	r0, #0x3
	bne	.L284	@cond_branch
	ldr	r1, .L285+0x8
	ldr	r0, .L285+0xc
	str	r0, [r1]
.L284:
	bl	sub_810C2B0
	ldr	r0, .L285+0x10
	ldrb	r1, [r4]
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	SetMainCallback2
	add	r0, r5, #0
	bl	DestroyTask
.L283:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L286:
	.align	2, 0
.L285:
	.word	gPaletteFade
	.word	gUnknown_02039244
	.word	gFieldCallback
	.word	sub_8080990
	.word	gUnknown_083F7EA8
.Lfe24:
	.size	 sub_810C2C8,.Lfe24-sub_810C2C8
	.align	2, 0
	.type	 sub_810C31C,function
	.thumb_func
sub_810C31C:
	push	{r4, r5, lr}
	add	sp, sp, #0xfffffffc
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r0, #0x1
	neg	r0, r0
	mov	r5, #0x0
	str	r5, [sp]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r0, .L289
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bls	.L288	@cond_branch
	ldr	r0, .L289+0x4
	strh	r5, [r0]
.L288:
	ldr	r0, .L289+0x8
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L289+0xc
	str	r0, [r1]
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L290:
	.align	2, 0
.L289:
	.word	gUnknown_02039244
	.word	gScriptItemId
	.word	gTasks
	.word	sub_810C2C8
.Lfe25:
	.size	 sub_810C31C,.Lfe25-sub_810C31C
	.align	2, 0
	.type	 sub_810C368,function
	.thumb_func
sub_810C368:
	push	{r4, r5, r6, lr}
	add	sp, sp, #0xfffffff8
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	mov	r4, #0x0
	ldr	r0, .L293
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bls	.L292	@cond_branch
	mov	r4, #0x2
.L292:
	mov	r0, #0x0
	bl	sub_80F98A4
	mov	r0, #0x1
	bl	sub_80F98A4
	ldr	r0, .L293+0x4
	bl	BasicInitMenuWindow
	add	r1, r4, #0x4
	mov	r0, #0x7
	mov	r2, #0xd
	mov	r3, #0xb
	bl	MenuDrawTextWindow
	mov	r0, #0x1
	bl	SetCustomFont
	add	r4, r4, #0x5
	ldr	r5, .L293+0x8
	ldrb	r2, [r5]
	ldr	r3, .L293+0xc
	ldr	r0, .L293+0x10
	ldr	r0, [r0]
	str	r0, [sp]
	mov	r0, #0x8
	add	r1, r4, #0
	bl	PrintMenuItemsReordered
	mov	r0, #0x0
	bl	SetCustomFont
	ldrb	r3, [r5]
	mov	r0, #0x0
	str	r0, [sp]
	mov	r0, #0x5
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	mov	r1, #0x8
	add	r2, r4, #0
	bl	InitMenu
	ldr	r2, .L293+0x14
	ldr	r1, .L293+0x18
	ldrb	r0, [r1]
	ldrb	r1, [r1, #0x1]
	add	r0, r0, r1
	strh	r0, [r2]
	ldr	r1, .L293+0x1c
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L293+0x20
	str	r1, [r0]
	add	sp, sp, #0x8
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L294:
	.align	2, 0
.L293:
	.word	gUnknown_02039244
	.word	gWindowConfig_81E6E50
	.word	gUnknown_0203924C
	.word	gUnknown_083F7EF4
	.word	gUnknown_03000758
	.word	gScriptItemId
	.word	gUnknown_02039248
	.word	gTasks
	.word	sub_810C40C
.Lfe26:
	.size	 sub_810C368,.Lfe26-sub_810C368
	.align	2, 0
	.type	 sub_810C40C,function
	.thumb_func
sub_810C40C:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r4, r5, #0
	ldr	r2, .L305
	ldrh	r1, [r2, #0x30]
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L296	@cond_branch
	bl	GetMenuCursorPos
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L298	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x1
	neg	r0, r0
	bl	MoveMenuCursor
	b	.L298
.L306:
	.align	2, 0
.L305:
	.word	gMain
.L296:
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L299	@cond_branch
	bl	GetMenuCursorPos
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L307
	ldrb	r1, [r1]
	sub	r1, r1, #0x1
	cmp	r0, r1
	beq	.L298	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x1
	bl	MoveMenuCursor
	b	.L298
.L308:
	.align	2, 0
.L307:
	.word	gUnknown_0203924C
.L299:
	ldrh	r1, [r2, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L302	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r4, .L309
	bl	GetMenuCursorPos
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L309+0x4
	ldr	r1, [r1]
	add	r1, r1, r0
	ldrb	r0, [r1]
	lsl	r0, r0, #0x3
	add	r4, r4, #0x4
	add	r0, r0, r4
	ldr	r1, [r0]
	add	r0, r5, #0
	bl	_call_via_r1
	b	.L298
.L310:
	.align	2, 0
.L309:
	.word	gUnknown_083F7EF4
	.word	gUnknown_03000758
.L302:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L298	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r4, #0
	bl	sub_810C748
.L298:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe27:
	.size	 sub_810C40C,.Lfe27-sub_810C40C
	.align	2, 0
	.type	 sub_810C4C4,function
	.thumb_func
sub_810C4C4:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L313
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L312	@cond_branch
	bl	sub_810C2B0
	ldr	r0, .L313+0x4
	ldrh	r0, [r0]
	lsl	r0, r0, #0x3
	ldr	r1, .L313+0x8
	add	r0, r0, r1
	ldr	r1, .L313+0xc
	bl	sub_8136130
	add	r0, r4, #0
	bl	DestroyTask
.L312:
	pop	{r4}
	pop	{r0}
	bx	r0
.L314:
	.align	2, 0
.L313:
	.word	gPaletteFade
	.word	gScriptItemId
	.word	gSaveBlock1+0x7f8
	.word	sub_810B96C
.Lfe28:
	.size	 sub_810C4C4,.Lfe28-sub_810C4C4
	.align	2, 0
	.type	 sub_810C508,function
	.thumb_func
sub_810C508:
	push	{r4, lr}
	add	sp, sp, #0xfffffffc
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r1, .L316
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L316+0x4
	str	r1, [r0]
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L317:
	.align	2, 0
.L316:
	.word	gTasks
	.word	sub_810C4C4
.Lfe29:
	.size	 sub_810C508,.Lfe29-sub_810C508
	.align	2, 0
	.type	 sub_810C540,function
	.thumb_func
sub_810C540:
	push	{r4, r5, lr}
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	ldr	r0, .L319
	bl	BasicInitMenuWindow
	bl	HandleDestroyMenuCursors
	mov	r0, #0x7
	mov	r1, #0x4
	mov	r2, #0xd
	mov	r3, #0xb
	bl	MenuZeroFillWindowRect
	ldr	r0, .L319+0x4
	ldr	r4, .L319+0x8
	ldr	r3, .L319+0xc
	ldr	r2, .L319+0x10
	ldrb	r1, [r2]
	ldrb	r2, [r2, #0x1]
	add	r1, r1, r2
	lsl	r1, r1, #0x3
	add	r1, r1, r3
	mov	r2, #0xff
	lsl	r2, r2, #0x3
	add	r1, r1, r2
	ldrb	r1, [r1]
	lsl	r1, r1, #0x2
	add	r1, r1, r4
	ldr	r1, [r1]
	bl	StringCopy
	ldr	r4, .L319+0x14
	ldr	r1, .L319+0x18
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	ldr	r2, .L319+0x1c
	add	r0, r5, #0
	add	r1, r4, #0
	mov	r3, #0x0
	bl	DisplayItemMessageOnField
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L320:
	.align	2, 0
.L319:
	.word	gWindowConfig_81E6E50
	.word	gStringVar1
	.word	gPokeblockNames
	.word	gSaveBlock1
	.word	gUnknown_02039248
	.word	gStringVar4
	.word	gContestStatsText_ThrowAwayPrompt
	.word	sub_810C5EC
.Lfe30:
	.size	 sub_810C540,.Lfe30-sub_810C540
	.align	2, 0
	.type	 sub_810C5C0,function
	.thumb_func
sub_810C5C0:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x1
	mov	r1, #0x1
	bl	sub_80F979C
	ldr	r1, .L322
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L322+0x4
	str	r1, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L323:
	.align	2, 0
.L322:
	.word	gTasks
	.word	sub_810C540
.Lfe31:
	.size	 sub_810C5C0,.Lfe31-sub_810C5C0
	.align	2, 0
	.type	 sub_810C5EC,function
	.thumb_func
sub_810C5EC:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x7
	mov	r1, #0x6
	mov	r2, #0x1
	bl	DisplayYesNoMenu
	ldr	r1, .L325
	add	r0, r4, #0
	bl	DoYesNoFuncWithChoice
	pop	{r4}
	pop	{r0}
	bx	r0
.L326:
	.align	2, 0
.L325:
	.word	gUnknown_083F7F24
.Lfe32:
	.size	 sub_810C5EC,.Lfe32-sub_810C5EC
	.align	2, 0
	.type	 sub_810C610,function
	.thumb_func
sub_810C610:
	push	{r4, r5, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x7
	mov	r1, #0x6
	mov	r2, #0xd
	mov	r3, #0xb
	bl	MenuZeroFillWindowRect
	ldr	r1, .L328
	ldrb	r0, [r1, #0x1]
	ldrb	r1, [r1]
	add	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	PokeblockClearIfExists
	ldr	r5, .L328+0x4
	ldr	r1, .L328+0x8
	add	r0, r5, #0
	bl	StringExpandPlaceholders
	ldr	r2, .L328+0xc
	add	r0, r4, #0
	add	r1, r5, #0
	mov	r3, #0x0
	bl	DisplayItemMessageOnField
	bl	sub_810BC98
	bl	sub_810BD08
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L329:
	.align	2, 0
.L328:
	.word	gUnknown_02039248
	.word	gStringVar4
	.word	gContestStatsText_WasThrownAway
	.word	sub_810C704
.Lfe33:
	.size	 sub_810C610,.Lfe33-sub_810C610
	.align	2, 0
	.type	 sub_810C668,function
	.thumb_func
sub_810C668:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r0, #0x0
	bl	StartVerticalScrollIndicators
	mov	r0, #0x1
	bl	StartVerticalScrollIndicators
	ldr	r2, .L332
	ldrb	r0, [r2, #0x2]
	ldrb	r1, [r2, #0x3]
	cmp	r0, r1
	bls	.L331	@cond_branch
	ldrb	r0, [r2, #0x1]
	ldrb	r1, [r2, #0x3]
	add	r0, r0, r1
	ldrb	r2, [r2, #0x2]
	cmp	r0, r2
	beq	.L331	@cond_branch
	mov	r0, #0x1
	mov	r1, #0x0
	bl	sub_80F979C
.L331:
	ldr	r0, .L332+0x4
	bl	BasicInitMenuWindow
	mov	r0, #0x7
	mov	r1, #0x6
	mov	r2, #0xd
	mov	r3, #0xb
	bl	MenuZeroFillWindowRect
	mov	r0, #0x0
	mov	r1, #0xe
	mov	r2, #0x1d
	mov	r3, #0x13
	bl	MenuZeroFillWindowRect
	ldr	r1, .L332+0x8
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L332+0xc
	str	r1, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L333:
	.align	2, 0
.L332:
	.word	gUnknown_02039248
	.word	gWindowConfig_81E6E50
	.word	gTasks
	.word	sub_810BF7C
.Lfe34:
	.size	 sub_810C668,.Lfe34-sub_810C668
	.align	2, 0
	.type	 sub_810C6DC,function
	.thumb_func
sub_810C6DC:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r0, .L337
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L336	@cond_branch
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L335	@cond_branch
.L336:
	add	r0, r2, #0
	bl	sub_810C668
.L335:
	pop	{r0}
	bx	r0
.L338:
	.align	2, 0
.L337:
	.word	gMain
.Lfe35:
	.size	 sub_810C6DC,.Lfe35-sub_810C6DC
	.align	2, 0
	.type	 sub_810C704,function
	.thumb_func
sub_810C704:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L340
	bl	BasicInitMenuWindow
	ldr	r0, .L340+0x4
	ldrb	r0, [r0, #0x1]
	bl	sub_810BC84
	mov	r0, #0x1
	mov	r1, #0x1
	bl	sub_80F979C
	ldr	r1, .L340+0x8
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L340+0xc
	str	r1, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L341:
	.align	2, 0
.L340:
	.word	gWindowConfig_81E6E34
	.word	gUnknown_02039248
	.word	gTasks
	.word	sub_810C6DC
.Lfe36:
	.size	 sub_810C704,.Lfe36-sub_810C704
	.align	2, 0
	.type	 sub_810C748,function
	.thumb_func
sub_810C748:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x0
	bl	StartVerticalScrollIndicators
	mov	r0, #0x1
	bl	StartVerticalScrollIndicators
	bl	HandleDestroyMenuCursors
	mov	r0, #0x7
	mov	r1, #0x4
	mov	r2, #0xd
	mov	r3, #0xb
	bl	MenuZeroFillWindowRect
	ldr	r1, .L343
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L343+0x4
	str	r1, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L344:
	.align	2, 0
.L343:
	.word	gTasks
	.word	sub_810BF7C
.Lfe37:
	.size	 sub_810C748,.Lfe37-sub_810C748
	.align	2, 0
	.type	 sub_810C788,function
	.thumb_func
sub_810C788:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #0xfffffffc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	ldr	r0, .L349
	bl	GetNature
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r7, .L349+0x4
	ldrh	r1, [r7]
	lsl	r1, r1, #0x3
	ldr	r5, .L349+0x8
	add	r1, r1, r5
	bl	PokeblockGetGain
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	ldr	r0, .L349+0xc
	ldr	r2, .L349+0x10
	ldr	r1, .L349+0x14
	add	r5, r5, r1
	ldrh	r1, [r7]
	lsl	r1, r1, #0x3
	add	r1, r1, r5
	mov	r6, #0xff
	lsl	r6, r6, #0x3
	add	r1, r1, r6
	ldrb	r1, [r1]
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	StringCopy
	ldrb	r0, [r7]
	bl	PokeblockClearIfExists
	ldrh	r0, [r7]
	lsl	r0, r0, #0x3
	add	r0, r0, r5
	add	r0, r0, r6
	ldrb	r0, [r0]
	lsl	r0, r0, #0x8
	strh	r0, [r7]
	lsl	r4, r4, #0x10
	asr	r4, r4, #0x10
	cmp	r4, #0
	bne	.L346	@cond_branch
	add	r0, r0, #0x1
	strh	r0, [r7]
.L346:
	cmp	r4, #0
	ble	.L347	@cond_branch
	ldrh	r0, [r7]
	add	r0, r0, #0x2
	strh	r0, [r7]
.L347:
	cmp	r4, #0
	bge	.L348	@cond_branch
	ldrh	r0, [r7]
	add	r0, r0, #0x3
	strh	r0, [r7]
.L348:
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r1, .L349+0x18
	mov	r2, r8
	lsl	r0, r2, #0x2
	add	r0, r0, r8
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L349+0x1c
	str	r1, [r0]
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L350:
	.align	2, 0
.L349:
	.word	gEnemyParty
	.word	gScriptItemId
	.word	gSaveBlock1+0x7f8
	.word	gBattleTextBuff1
	.word	gPokeblockNames
	.word	0xfffff808
	.word	gTasks
	.word	sub_810C2C8
.Lfe38:
	.size	 sub_810C788,.Lfe38-sub_810C788
	.align	2, 0
	.type	 sub_810C854,function
	.thumb_func
sub_810C854:
	push	{r4, r5, lr}
	add	sp, sp, #0xfffffffc
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	ldr	r4, .L352
	ldrb	r0, [r4]
	bl	SafariZoneActivatePokeblockFeeder
	ldr	r0, .L352+0x4
	ldr	r3, .L352+0x8
	ldr	r2, .L352+0xc
	ldrh	r1, [r4]
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	mov	r2, #0xff
	lsl	r2, r2, #0x3
	add	r1, r1, r2
	ldrb	r1, [r1]
	lsl	r1, r1, #0x2
	add	r1, r1, r3
	ldr	r1, [r1]
	bl	StringCopy
	ldr	r1, .L352+0x10
	ldrh	r0, [r4]
	strh	r0, [r1]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	PokeblockClearIfExists
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r1, .L352+0x14
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L352+0x18
	str	r1, [r0]
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L353:
	.align	2, 0
.L352:
	.word	gScriptItemId
	.word	gStringVar1
	.word	gPokeblockNames
	.word	gSaveBlock1
	.word	gScriptResult
	.word	gTasks
	.word	sub_810C2C8
.Lfe39:
	.size	 sub_810C854,.Lfe39-sub_810C854
	.align	2, 0
	.type	 sub_810C8D4,function
	.thumb_func
sub_810C8D4:
	push	{r4, r5, lr}
	add	r4, r0, #0
	mov	r1, #0x2e
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x1
	ble	.L355	@cond_branch
	mov	r0, #0x0
	strh	r0, [r4, #0x2e]
.L355:
	mov	r0, #0x2e
	ldrsh	r5, [r4, r0]
	cmp	r5, #0
	beq	.L357	@cond_branch
	cmp	r5, #0x1
	beq	.L358	@cond_branch
	b	.L356
.L357:
	ldrb	r1, [r4, #0x1]
	mov	r0, #0x4
	neg	r0, r0
	and	r0, r0, r1
	mov	r1, #0x1
	orr	r0, r0, r1
	strb	r0, [r4, #0x1]
	ldr	r0, .L362
	str	r0, [r4, #0x10]
	add	r0, r4, #0
	bl	InitSpriteAffineAnim
	mov	r0, #0x1
	strh	r0, [r4, #0x2e]
	strh	r5, [r4, #0x30]
	b	.L356
.L363:
	.align	2, 0
.L362:
	.word	gSpriteAffineAnimTable_83F7F70
.L358:
	ldrh	r0, [r4, #0x30]
	add	r0, r0, #0x1
	mov	r2, #0x0
	strh	r0, [r4, #0x30]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0xb
	ble	.L356	@cond_branch
	ldrb	r1, [r4, #0x1]
	mov	r0, #0x4
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r4, #0x1]
	strh	r2, [r4, #0x2e]
	strh	r2, [r4, #0x30]
	ldrb	r0, [r4, #0x3]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1b
	bl	FreeOamMatrix
	ldr	r0, .L364
	str	r0, [r4, #0x1c]
.L356:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L365:
	.align	2, 0
.L364:
	.word	SpriteCallbackDummy
.Lfe40:
	.size	 sub_810C8D4,.Lfe40-sub_810C8D4
	.align	2, 0
	.type	 ClearPokeblock,function
	.thumb_func
ClearPokeblock:
	lsl	r0, r0, #0x18
	ldr	r1, .L367
	lsr	r0, r0, #0x15
	add	r0, r0, r1
	mov	r2, #0xff
	lsl	r2, r2, #0x3
	add	r1, r0, r2
	mov	r2, #0x0
	strb	r2, [r1]
	ldr	r3, .L367+0x4
	add	r1, r0, r3
	strb	r2, [r1]
	add	r3, r3, #0x1
	add	r1, r0, r3
	strb	r2, [r1]
	add	r3, r3, #0x1
	add	r1, r0, r3
	strb	r2, [r1]
	add	r3, r3, #0x1
	add	r1, r0, r3
	strb	r2, [r1]
	add	r3, r3, #0x1
	add	r1, r0, r3
	strb	r2, [r1]
	ldr	r1, .L367+0x8
	add	r0, r0, r1
	strb	r2, [r0]
	bx	lr
.L368:
	.align	2, 0
.L367:
	.word	gSaveBlock1
	.word	0x7f9
	.word	0x7fe
.Lfe41:
	.size	 ClearPokeblock,.Lfe41-ClearPokeblock
	.align	2, 0
	.globl	ClearPokeblocks
	.type	 ClearPokeblocks,function
	.thumb_func
ClearPokeblocks:
	push	{r4, lr}
	mov	r4, #0x0
.L373:
	add	r0, r4, #0
	bl	ClearPokeblock
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x27
	bls	.L373	@cond_branch
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe42:
	.size	 ClearPokeblocks,.Lfe42-ClearPokeblocks
	.align	2, 0
	.globl	sub_810C9B0
	.type	 sub_810C9B0,function
	.thumb_func
sub_810C9B0:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	mov	r1, #0x1
	bl	GetPokeblockData
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r1, #0x1
.L379:
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r0, r6, #0
	add	r1, r4, #0
	bl	GetPokeblockData
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r5, r0
	bcs	.L378	@cond_branch
	add	r5, r0, #0
.L378:
	add	r1, r4, #0
	cmp	r1, #0x4
	bls	.L379	@cond_branch
	add	r0, r5, #0
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe43:
	.size	 sub_810C9B0,.Lfe43-sub_810C9B0
	.align	2, 0
	.globl	sub_810C9E8
	.type	 sub_810C9E8,function
	.thumb_func
sub_810C9E8:
	push	{lr}
	mov	r1, #0x6
	bl	GetPokeblockData
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x63
	bls	.L383	@cond_branch
	mov	r0, #0x63
.L383:
	pop	{r1}
	bx	r1
.Lfe44:
	.size	 sub_810C9E8,.Lfe44-sub_810C9E8
	.align	2, 0
	.globl	sub_810CA00
	.type	 sub_810CA00,function
	.thumb_func
sub_810CA00:
	push	{lr}
	mov	r1, #0x0
	ldr	r3, .L392
	mov	r2, #0xff
	lsl	r2, r2, #0x3
.L388:
	lsl	r0, r1, #0x3
	add	r0, r0, r3
	add	r0, r0, r2
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L387	@cond_branch
	lsl	r0, r1, #0x18
	asr	r0, r0, #0x18
	b	.L391
.L393:
	.align	2, 0
.L392:
	.word	gSaveBlock1
.L387:
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x27
	bls	.L388	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
.L391:
	pop	{r1}
	bx	r1
.Lfe45:
	.size	 sub_810CA00,.Lfe45-sub_810CA00
	.align	2, 0
	.globl	sub_810CA34
	.type	 sub_810CA34,function
	.thumb_func
sub_810CA34:
	push	{r4, lr}
	add	r4, r0, #0
	bl	sub_810CA00
	lsl	r0, r0, #0x18
	asr	r2, r0, #0x18
	mov	r0, #0x1
	neg	r0, r0
	cmp	r2, r0
	beq	.L395	@cond_branch
	ldr	r0, .L397
	lsl	r2, r2, #0x3
	mov	r1, #0xff
	lsl	r1, r1, #0x3
	add	r0, r0, r1
	add	r2, r2, r0
	ldr	r0, [r4]		@ created by thumb_load_double_from_address
	ldr	r1, [r4, #0x4]		@ created by thumb_load_double_from_address
	str	r0, [r2]
	str	r1, [r2, #0x4]
	mov	r0, #0x1
	b	.L396
.L398:
	.align	2, 0
.L397:
	.word	gSaveBlock1
.L395:
	mov	r0, #0x0
.L396:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe46:
	.size	 sub_810CA34,.Lfe46-sub_810CA34
	.align	2, 0
	.globl	PokeblockClearIfExists
	.type	 PokeblockClearIfExists,function
	.thumb_func
PokeblockClearIfExists:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r1, .L402
	lsl	r0, r2, #0x3
	add	r0, r0, r1
	mov	r1, #0xff
	lsl	r1, r1, #0x3
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L400	@cond_branch
	add	r0, r2, #0
	bl	ClearPokeblock
	mov	r0, #0x1
	b	.L401
.L403:
	.align	2, 0
.L402:
	.word	gSaveBlock1
.L400:
	mov	r0, #0x0
.L401:
	pop	{r1}
	bx	r1
.Lfe47:
	.size	 PokeblockClearIfExists,.Lfe47-PokeblockClearIfExists
	.align	2, 0
	.globl	GetPokeblockData
	.type	 GetPokeblockData,function
	.thumb_func
GetPokeblockData:
	push	{lr}
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r2, r1, #0
	cmp	r1, #0
	bne	.L405	@cond_branch
	ldrb	r0, [r0]
	b	.L413
.L405:
	cmp	r1, #0x1
	bne	.L406	@cond_branch
	ldrb	r0, [r0, #0x1]
	b	.L413
.L406:
	cmp	r1, #0x2
	bne	.L407	@cond_branch
	ldrb	r0, [r0, #0x2]
	b	.L413
.L407:
	cmp	r1, #0x3
	bne	.L408	@cond_branch
	ldrb	r0, [r0, #0x3]
	b	.L413
.L408:
	cmp	r1, #0x4
	bne	.L409	@cond_branch
	ldrb	r0, [r0, #0x4]
	b	.L413
.L409:
	cmp	r1, #0x5
	bne	.L410	@cond_branch
	ldrb	r0, [r0, #0x5]
	b	.L413
.L410:
	cmp	r2, #0x6
	beq	.L411	@cond_branch
	mov	r0, #0x0
	b	.L412
.L411:
	ldrb	r0, [r0, #0x6]
.L413:
.L412:
	pop	{r1}
	bx	r1
.Lfe48:
	.size	 GetPokeblockData,.Lfe48-GetPokeblockData
	.align	2, 0
	.globl	PokeblockGetGain
	.type	 PokeblockGetGain,function
	.thumb_func
PokeblockGetGain:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	mov	r8, r1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r6, #0x0
	mov	r4, #0x0
	ldr	r1, .L421
	mov	r9, r1
	lsl	r1, r0, #0x2
	add	r7, r1, r0
.L418:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r0, r8
	add	r1, r5, #0
	bl	GetPokeblockData
	lsl	r0, r0, #0x10
	asr	r1, r0, #0x10
	cmp	r1, #0
	ble	.L417	@cond_branch
	add	r0, r7, r4
	add	r0, r0, r9
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	mul	r1, r1, r0
	lsl	r0, r6, #0x10
	asr	r0, r0, #0x10
	add	r0, r0, r1
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
.L417:
	add	r4, r5, #0
	cmp	r4, #0x4
	bls	.L418	@cond_branch
	lsl	r0, r6, #0x10
	asr	r0, r0, #0x10
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L422:
	.align	2, 0
.L421:
	.word	gPokeblockFlavorCompatibilityTable
.Lfe49:
	.size	 PokeblockGetGain,.Lfe49-PokeblockGetGain
	.align	2, 0
	.globl	PokeblockCopyName
	.type	 PokeblockCopyName,function
	.thumb_func
PokeblockCopyName:
	push	{r4, lr}
	add	r4, r1, #0
	mov	r1, #0x0
	bl	GetPokeblockData
	lsl	r0, r0, #0x18
	ldr	r1, .L424
	lsr	r0, r0, #0x16
	add	r0, r0, r1
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	StringCopy
	pop	{r4}
	pop	{r0}
	bx	r0
.L425:
	.align	2, 0
.L424:
	.word	gPokeblockNames
.Lfe50:
	.size	 PokeblockCopyName,.Lfe50-PokeblockCopyName
	.align	2, 0
	.globl	sub_810CB68
	.type	 sub_810CB68,function
	.thumb_func
sub_810CB68:
	push	{r4, r5, r6, r7, lr}
	add	r6, r1, #0
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r4, #0x0
	ldr	r7, .L434
.L430:
	lsl	r1, r4, #0x3
	ldr	r0, .L434+0x4
	add	r1, r1, r0
	add	r0, r5, #0
	bl	PokeblockGetGain
	lsl	r0, r0, #0x10
	cmp	r0, #0
	ble	.L429	@cond_branch
	add	r0, r4, #0x1
	lsl	r0, r0, #0x2
	add	r0, r0, r7
	ldr	r1, [r0]
	add	r0, r6, #0
	bl	StringCopy
	mov	r0, #0x1
	b	.L433
.L435:
	.align	2, 0
.L434:
	.word	gPokeblockNames
	.word	gUnknown_083F7F9C
.L429:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x4
	bls	.L430	@cond_branch
	mov	r0, #0x0
.L433:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe51:
	.size	 sub_810CB68,.Lfe51-sub_810CB68

	.lcomm	gUnknown_03000758,4
.text
	.align	2, 0
