@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.globl	gUnknown_083D1898
	.section .rodata
	.align	2, 0
	.type	 gUnknown_083D1898,object
	.size	 gUnknown_083D1898,8
gUnknown_083D1898:
	.word	gUnknownGfx_083D190C
	.short	0x80
	.short	0x0
	.globl	gUnknown_083D18A0
	.align	2, 0
	.type	 gUnknown_083D18A0,object
	.size	 gUnknown_083D18A0,8
gUnknown_083D18A0:
	.word	gUnknownPal_083D18EC
	.short	0x0
	.space	2
	.globl	gSpriteTemplate_83D18A8
	.align	2, 0
	.type	 gSpriteTemplate_83D18A8,object
	.size	 gSpriteTemplate_83D18A8,24
gSpriteTemplate_83D18A8:
	.short	0x0
	.short	0x0
	.word	gOamData_83D18D8
	.word	gSpriteAnimTable_83D18E8
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	sub_80C60CC
	.globl	gSpriteTemplate_83D18C0
	.align	2, 0
	.type	 gSpriteTemplate_83D18C0,object
	.size	 gSpriteTemplate_83D18C0,24
gSpriteTemplate_83D18C0:
	.short	0x0
	.short	0x0
	.word	gOamData_83D18D8
	.word	gSpriteAnimTable_83D18E8
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	sub_80C6130
.text
	.align	2, 0
	.globl	sub_80C5CD4
	.type	 sub_80C5CD4,function
	.thumb_func
sub_80C5CD4:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #0xffffffd8
	add	r7, r0, #0
	ldr	r0, .L12
	ldr	r1, [r0, #0x4]		@ created by thumb_load_double_from_address
	ldr	r0, [r0]		@ created by thumb_load_double_from_address
	str	r0, [sp, #0x18]
	str	r1, [sp, #0x1c]
	ldr	r0, .L12+0x4
	ldr	r1, [r0, #0x4]		@ created by thumb_load_double_from_address
	ldr	r0, [r0]		@ created by thumb_load_double_from_address
	str	r0, [sp, #0x20]
	str	r1, [sp, #0x24]
	mov	r1, sp
	ldr	r0, .L12+0x8
	ldmia	r0!, {r2, r3, r4}
	stmia	r1!, {r2, r3, r4}
	ldmia	r0!, {r2, r3, r4}
	stmia	r1!, {r2, r3, r4}
	ldrh	r3, [r7]
	lsl	r2, r3, #0x10
	add	r0, sp, #0x18
	ldrh	r1, [r0, #0x4]
	orr	r1, r1, r2
	str	r1, [r0, #0x4]
	mov	r1, sp
	mov	r6, #0x0
	strh	r3, [r1]
	ldrh	r2, [r7, #0x2]
	ldr	r5, .L12+0xc
	add	r4, sp, #0x20
	ldr	r1, [r4, #0x4]
	and	r1, r1, r5
	orr	r1, r1, r2
	str	r1, [r4, #0x4]
	mov	r1, sp
	strh	r2, [r1, #0x2]
	bl	LoadSpriteSheet
	add	r0, r4, #0
	bl	LoadSpritePalette
	mov	r0, #0x1
	strh	r0, [r7, #0xc]
	strh	r6, [r7, #0xa]
	strh	r6, [r7, #0x8]
	ldrh	r0, [r7, #0x2]
	bl	IndexOfSpritePaletteTag
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x80
	lsl	r1, r1, #0x9
	lsl	r1, r1, r0
	bic	r5, r5, r1
	str	r5, [r7, #0x10]
	ldrh	r0, [r7, #0x4]
	cmp	r0, #0
	bne	.L3	@cond_branch
	mov	r0, #0x10
	strh	r0, [r7, #0x4]
.L3:
	ldrh	r0, [r7, #0x6]
	cmp	r0, #0
	bne	.L4	@cond_branch
	mov	r0, #0x14
	strh	r0, [r7, #0x6]
.L4:
	ldr	r0, .L12+0x10
	str	r7, [r0]
	mov	r4, #0x0
	ldr	r5, .L12+0x14
	b	.L5
.L13:
	.align	2, 0
.L12:
	.word	gUnknown_083D1898
	.word	gUnknown_083D18A0
	.word	gSpriteTemplate_83D18A8
	.word	0xffff0000
	.word	gUnknown_020387EC
	.word	gSprites
.L9:
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldrh	r1, [r7, #0x4]
	cmp	r4, #0x3
	bhi	.L10	@cond_branch
	neg	r1, r1
.L10:
	strh	r1, [r0, #0x2e]
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
.L5:
	cmp	r4, #0x7
	bhi	.L6	@cond_branch
	lsl	r1, r4, #0x5
	add	r1, r1, #0x8
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	mov	r0, sp
	mov	r2, #0x50
	mov	r3, #0x0
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x40
	bne	.L9	@cond_branch
.L6:
	ldr	r1, .L14
	mov	r0, #0xbf
	strh	r0, [r1]
	add	r1, r1, #0x4
	mov	r0, #0x10
	strh	r0, [r1]
	add	sp, sp, #0x28
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L15:
	.align	2, 0
.L14:
	.word	0x4000050
.Lfe1:
	.size	 sub_80C5CD4,.Lfe1-sub_80C5CD4
	.align	2, 0
	.globl	sub_80C5DCC
	.type	 sub_80C5DCC,function
	.thumb_func
sub_80C5DCC:
	push	{r4, lr}
	ldr	r4, .L23
	ldr	r1, [r4]
	ldrh	r0, [r1, #0x8]
	cmp	r0, #0
	bne	.L17	@cond_branch
	ldr	r0, [r1, #0x10]
	ldr	r2, .L23+0x4
	mov	r1, #0x10
	bl	BlendPalettes
	ldr	r0, .L23+0x8
	bl	sub_80C61B0
	ldr	r1, [r4]
	ldrh	r0, [r1, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x8]
.L17:
	ldr	r1, [r4]
	ldrh	r0, [r1, #0xa]
	cmp	r0, #0x7
	bls	.L22	@cond_branch
	ldrh	r0, [r1, #0x6]
	ldrh	r2, [r1, #0xc]
	add	r0, r0, r2
	mov	r2, #0x0
	strh	r0, [r1, #0xc]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x4f
	bgt	.L19	@cond_branch
.L22:
	mov	r0, #0x0
	b	.L21
.L24:
	.align	2, 0
.L23:
	.word	gUnknown_020387EC
	.word	0xffff
	.word	sub_80C603C
.L19:
	mov	r0, #0x50
	strh	r0, [r1, #0xc]
	ldr	r0, .L25
	strh	r2, [r0]
	add	r0, r0, #0x4
	strh	r2, [r0]
	bl	ClearGpuRegBits
	mov	r0, #0x1
.L21:
	pop	{r4}
	pop	{r1}
	bx	r1
.L26:
	.align	2, 0
.L25:
	.word	0x4000050
.Lfe2:
	.size	 sub_80C5DCC,.Lfe2-sub_80C5DCC
.text
	.align	2, 0
