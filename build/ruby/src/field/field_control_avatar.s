@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section ewram_data,"aw"
	.type	 gUnknown_0202E8C0,object
	.size	 gUnknown_0202E8C0,1
gUnknown_0202E8C0:
	.byte	0x0
	.align	1, 0
	.type	 gUnknown_0202E8C2,object
	.size	 gUnknown_0202E8C2,2
gUnknown_0202E8C2:
	.short	0x0
.text
	.align	2, 0
	.globl	FieldClearPlayerInput
	.type	 FieldClearPlayerInput,function
	.thumb_func
FieldClearPlayerInput:
	push	{r4, r5, lr}
	mov	r1, #0x2
	neg	r1, r1
	mov	r3, #0x3
	neg	r3, r3
	mov	r4, #0x5
	neg	r4, r4
	mov	r5, #0x9
	neg	r5, r5
	mov	r2, #0x0
	strb	r2, [r0]
	ldrb	r2, [r0, #0x1]
	and	r1, r1, r2
	and	r1, r1, r3
	and	r1, r1, r4
	and	r1, r1, r5
	strb	r1, [r0, #0x1]
	mov	r1, #0x0
	strb	r1, [r0, #0x2]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe1:
	.size	 FieldClearPlayerInput,.Lfe1-FieldClearPlayerInput
	.align	2, 0
	.globl	FieldGetPlayerInput
	.type	 FieldGetPlayerInput,function
	.thumb_func
FieldGetPlayerInput:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	r4, r0, #0
	lsl	r1, r1, #0x10
	lsr	r5, r1, #0x10
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	mov	r8, r2
	ldr	r0, .L24
	ldrb	r6, [r0, #0x3]
	ldrb	r0, [r0, #0x2]
	mov	r9, r0
	bl	cur_mapdata_block_role_at_player_pos
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	MetatileBehavior_IsMoveTile
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	cmp	r6, #0x2
	bne	.L6	@cond_branch
	cmp	r7, #0
	beq	.L5	@cond_branch
.L6:
	cmp	r6, #0
	bne	.L4	@cond_branch
.L5:
	bl	GetPlayerSpeed
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x4
	beq	.L7	@cond_branch
	mov	r0, #0x8
	and	r0, r0, r5
	cmp	r0, #0
	beq	.L8	@cond_branch
	ldrb	r0, [r4]
	mov	r1, #0x4
	orr	r0, r0, r1
	strb	r0, [r4]
.L8:
	mov	r0, #0x4
	and	r0, r0, r5
	cmp	r0, #0
	beq	.L9	@cond_branch
	ldrb	r0, [r4]
	mov	r1, #0x8
	orr	r0, r0, r1
	strb	r0, [r4]
.L9:
	mov	r0, #0x1
	and	r0, r0, r5
	cmp	r0, #0
	beq	.L10	@cond_branch
	ldrb	r0, [r4]
	mov	r1, #0x1
	orr	r0, r0, r1
	strb	r0, [r4]
.L10:
	mov	r0, #0x2
	and	r0, r0, r5
	cmp	r0, #0
	beq	.L7	@cond_branch
	ldrb	r0, [r4]
	mov	r1, #0x80
	orr	r0, r0, r1
	strb	r0, [r4]
.L7:
	mov	r0, #0xf0
	mov	r1, r8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L4	@cond_branch
	ldrb	r0, [r4]
	mov	r1, #0x10
	orr	r0, r0, r1
	mov	r1, #0x20
	orr	r0, r0, r1
	strb	r0, [r4]
.L4:
	cmp	r7, #0
	bne	.L13	@cond_branch
	cmp	r6, #0x2
	bne	.L14	@cond_branch
	mov	r0, r9
	cmp	r0, #0x2
	bne	.L14	@cond_branch
	ldrb	r0, [r4]
	mov	r1, #0x40
	orr	r0, r0, r1
	strb	r0, [r4]
.L14:
	cmp	r7, #0
	bne	.L13	@cond_branch
	cmp	r6, #0x2
	bne	.L13	@cond_branch
	ldrb	r0, [r4]
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r4]
.L13:
	mov	r0, #0x40
	mov	r1, r8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L16	@cond_branch
	mov	r0, #0x2
	b	.L23
.L25:
	.align	2, 0
.L24:
	.word	gPlayerAvatar
.L16:
	mov	r0, #0x80
	mov	r1, r8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L18	@cond_branch
	mov	r0, #0x1
	b	.L23
.L18:
	mov	r0, #0x20
	mov	r1, r8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L20	@cond_branch
	mov	r0, #0x3
	b	.L23
.L20:
	mov	r0, #0x10
	mov	r1, r8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L17	@cond_branch
	mov	r0, #0x4
.L23:
	strb	r0, [r4, #0x2]
.L17:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe2:
	.size	 FieldGetPlayerInput,.Lfe2-FieldGetPlayerInput
	.align	2, 0
	.globl	sub_8068024
	.type	 sub_8068024,function
	.thumb_func
sub_8068024:
	push	{r4, r5, r6, lr}
	add	sp, sp, #0xfffffff8
	add	r5, r0, #0
	bl	player_get_direction_lower_nybble
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	mov	r4, sp
	mov	r0, sp
	bl	player_get_pos_to_and_height
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x2
	ldrsh	r1, [r4, r2]
	bl	MapGridGetMetatileBehaviorAt
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	bl	CheckTrainers
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L43	@cond_branch
	bl	mapheader_run_first_tag2_script_list_match
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L43	@cond_branch
	ldrb	r1, [r5]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L29	@cond_branch
	bl	sub_80687A4
	cmp	r0, #0x1
	beq	.L43	@cond_branch
.L29:
	ldrb	r1, [r5]
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L30	@cond_branch
	mov	r0, #0x5
	bl	IncrementGameStat
	mov	r0, sp
	add	r1, r4, #0
	add	r2, r6, #0
	bl	sub_80687E4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L43	@cond_branch
.L30:
	ldrb	r1, [r5]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L32	@cond_branch
	add	r0, r4, #0
	bl	is_it_battle_time_3
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L43	@cond_branch
.L32:
	ldrb	r1, [r5]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L33	@cond_branch
	ldrb	r0, [r5, #0x2]
	cmp	r0, r6
	bne	.L33	@cond_branch
	mov	r0, sp
	add	r1, r4, #0
	add	r2, r6, #0
	bl	mapheader_run_first_tag2_script_list_match_conditionally
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L43	@cond_branch
.L33:
	mov	r4, sp
	mov	r0, sp
	bl	player_get_next_pos_and_height
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x2
	ldrsh	r1, [r4, r2]
	bl	MapGridGetMetatileBehaviorAt
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	ldrb	r1, [r5]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L35	@cond_branch
	mov	r0, sp
	add	r1, r4, #0
	add	r2, r6, #0
	bl	sub_80681F0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L43	@cond_branch
.L35:
	ldrb	r1, [r5]
	mov	r0, #0x20
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L36	@cond_branch
	ldrb	r0, [r5, #0x2]
	cmp	r0, r6
	bne	.L36	@cond_branch
	mov	r0, sp
	add	r1, r4, #0
	add	r2, r6, #0
	bl	map_warp_consider_2_to_inside
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L43	@cond_branch
.L36:
	ldrb	r1, [r5]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L38	@cond_branch
	bl	sub_8068770
	cmp	r0, #0x1
	beq	.L43	@cond_branch
.L38:
	ldrb	r1, [r5]
	mov	r0, #0x4
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L39	@cond_branch
	mov	r0, #0x6
	bl	PlaySE
	bl	sub_8071310
.L43:
	mov	r0, #0x1
	b	.L41
.L39:
	mov	r0, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L40	@cond_branch
	bl	sub_80A6D1C
	cmp	r0, #0x1
	beq	.L43	@cond_branch
.L40:
	mov	r0, #0x0
.L41:
	add	sp, sp, #0x8
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe3:
	.size	 sub_8068024,.Lfe3-sub_8068024
	.align	2, 0
	.type	 player_get_pos_to_and_height,function
	.thumb_func
player_get_pos_to_and_height:
	push	{r4, lr}
	add	r4, r0, #0
	add	r1, r4, #0x2
	bl	PlayerGetDestCoords
	bl	PlayerGetZCoord
	strb	r0, [r4, #0x4]
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe4:
	.size	 player_get_pos_to_and_height,.Lfe4-player_get_pos_to_and_height
	.align	2, 0
	.type	 player_get_next_pos_and_height,function
	.thumb_func
player_get_next_pos_and_height:
	push	{r4, r5, lr}
	add	sp, sp, #0xfffffffc
	add	r5, r0, #0
	add	r1, r5, #0x2
	bl	GetXYCoordsOneStepInFrontOfPlayer
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	PlayerGetDestCoords
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	bl	MapGridGetZCoordAt
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0
	beq	.L46	@cond_branch
	bl	PlayerGetZCoord
.L46:
	strb	r0, [r5, #0x4]
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe5:
	.size	 player_get_next_pos_and_height,.Lfe5-player_get_next_pos_and_height
	.align	2, 0
	.type	 cur_mapdata_block_role_at_player_pos,function
	.thumb_func
cur_mapdata_block_role_at_player_pos:
	push	{r4, lr}
	add	sp, sp, #0xfffffffc
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	PlayerGetDestCoords
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	bl	MapGridGetMetatileBehaviorAt
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe6:
	.size	 cur_mapdata_block_role_at_player_pos,.Lfe6-cur_mapdata_block_role_at_player_pos
	.align	2, 0
	.type	 sub_80681F0,function
	.thumb_func
sub_80681F0:
	push	{r4, lr}
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	bl	TryGetScriptOnPressingA
	add	r4, r0, #0
	cmp	r4, #0
	bne	.L50	@cond_branch
	mov	r0, #0x0
	b	.L52
.L50:
	ldr	r0, .L53
	cmp	r4, r0
	beq	.L51	@cond_branch
	ldr	r0, .L53+0x4
	cmp	r4, r0
	beq	.L51	@cond_branch
	ldr	r0, .L53+0x8
	cmp	r4, r0
	beq	.L51	@cond_branch
	ldr	r0, .L53+0xc
	cmp	r4, r0
	beq	.L51	@cond_branch
	ldr	r0, .L53+0x10
	cmp	r4, r0
	beq	.L51	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
.L51:
	add	r0, r4, #0
	bl	ScriptContext1_SetupScript
	mov	r0, #0x1
.L52:
	pop	{r4}
	pop	{r1}
	bx	r1
.L54:
	.align	2, 0
.L53:
	.word	gUnknown_0815281E
	.word	gUnknown_08152C39
	.word	gUnknown_0815F36C
	.word	gUnknown_0815F43A
	.word	gUnknown_081A0009
.Lfe7:
	.size	 sub_80681F0,.Lfe7-sub_80681F0
	.align	2, 0
	.type	 TryGetScriptOnPressingA,function
	.thumb_func
TryGetScriptOnPressingA:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	r6, r0, #0
	lsl	r1, r1, #0x18
	lsr	r5, r1, #0x18
	mov	r8, r5
	lsl	r2, r2, #0x18
	lsr	r4, r2, #0x18
	add	r7, r4, #0
	add	r1, r5, #0
	add	r2, r4, #0
	bl	sub_8068364
	cmp	r0, #0
	bne	.L60	@cond_branch
	add	r0, r6, #0
	add	r1, r5, #0
	add	r2, r4, #0
	bl	TryGetInvisibleMapObjectScript
	cmp	r0, #0
	bne	.L60	@cond_branch
	add	r0, r6, #0
	add	r1, r5, #0
	add	r2, r4, #0
	bl	sub_8068500
	cmp	r0, #0
	bne	.L60	@cond_branch
	add	r0, r6, #0
	mov	r1, r8
	add	r2, r7, #0
	bl	TryGetFieldMoveScript
	cmp	r0, #0
	bne	.L60	@cond_branch
	mov	r0, #0x0
.L60:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe8:
	.size	 TryGetScriptOnPressingA,.Lfe8-TryGetScriptOnPressingA
	.align	2, 0
	.globl	sub_80682A8
	.type	 sub_80682A8,function
	.thumb_func
sub_80682A8:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	lsl	r2, r2, #0x18
	lsr	r6, r2, #0x18
	mov	r1, #0x0
	ldrsh	r0, [r4, r1]
	mov	r2, #0x2
	ldrsh	r1, [r4, r2]
	bl	MapGridGetMetatileBehaviorAt
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	MetatileBehavior_IsCounter
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L62	@cond_branch
	ldrh	r0, [r4]
	ldrh	r1, [r4, #0x2]
	b	.L74
.L62:
	ldr	r1, .L75
	lsl	r2, r6, #0x3
	add	r0, r2, r1
	ldr	r3, [r0]
	ldrh	r0, [r4]
	add	r0, r0, r3
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r1, r1, #0x4
	add	r2, r2, r1
	ldr	r2, [r2]
	ldrh	r1, [r4, #0x2]
	add	r1, r1, r2
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
.L74:
	ldrb	r2, [r4, #0x4]
	bl	GetFieldObjectIdByXYZ
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0x10
	beq	.L65	@cond_branch
	ldr	r1, .L75+0x4
	lsl	r2, r3, #0x3
	add	r0, r2, r3
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r0, [r0, #0x8]
	add	r5, r1, #0
	cmp	r0, #0xff
	bne	.L64	@cond_branch
.L65:
.L73:
	mov	r0, #0x0
	b	.L72
.L76:
	.align	2, 0
.L75:
	.word	gUnknown_0821664C
	.word	gMapObjects
.L64:
	mov	r4, #0x0
	ldr	r1, .L77
.L69:
	ldrb	r0, [r1]
	cmp	r0, #0x1
	bne	.L68	@cond_branch
	ldrb	r0, [r1, #0x2]
	cmp	r0, r3
	beq	.L73	@cond_branch
.L68:
	add	r1, r1, #0x4
	add	r4, r4, #0x1
	cmp	r4, #0x3
	ble	.L69	@cond_branch
	ldr	r0, .L77+0x4
	strb	r3, [r0]
	ldr	r1, .L77+0x8
	add	r0, r2, r3
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldrb	r0, [r0, #0x8]
	strh	r0, [r1]
	ldr	r0, .L77+0xc
	strh	r6, [r0]
	add	r0, r3, #0
	bl	GetFieldObjectScriptPointerByFieldObjectId
.L72:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L78:
	.align	2, 0
.L77:
	.word	gLinkPlayerMapObjects
	.word	gSelectedMapObject
	.word	gScriptLastTalked
	.word	gScriptFacing
.Lfe9:
	.size	 sub_80682A8,.Lfe9-sub_80682A8
	.align	2, 0
	.type	 sub_8068364,function
	.thumb_func
sub_8068364:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	lsl	r1, r1, #0x18
	lsr	r5, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r6, r2, #0x18
	ldrh	r0, [r4]
	ldrh	r1, [r4, #0x2]
	ldrb	r2, [r4, #0x4]
	bl	GetFieldObjectIdByXYZ
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0x10
	beq	.L81	@cond_branch
	ldr	r1, .L86
	lsl	r2, r3, #0x3
	add	r0, r2, r3
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r0, [r0, #0x8]
	cmp	r0, #0xff
	bne	.L80	@cond_branch
.L81:
	add	r0, r5, #0
	bl	MetatileBehavior_IsCounter
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L84	@cond_branch
	ldr	r1, .L86+0x4
	lsl	r2, r6, #0x3
	add	r0, r2, r1
	ldr	r3, [r0]
	ldrh	r0, [r4]
	add	r0, r0, r3
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r1, r1, #0x4
	add	r2, r2, r1
	ldr	r2, [r2]
	ldrh	r1, [r4, #0x2]
	add	r1, r1, r2
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	ldrb	r2, [r4, #0x4]
	bl	GetFieldObjectIdByXYZ
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0x10
	beq	.L84	@cond_branch
	ldr	r1, .L86
	lsl	r2, r3, #0x3
	add	r0, r2, r3
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r0, [r0, #0x8]
	cmp	r0, #0xff
	bne	.L80	@cond_branch
.L84:
	mov	r0, #0x0
	b	.L85
.L87:
	.align	2, 0
.L86:
	.word	gMapObjects
	.word	gUnknown_0821664C
.L80:
	ldr	r0, .L88
	strb	r3, [r0]
	ldr	r4, .L88+0x4
	add	r0, r2, r3
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r0, [r0, #0x8]
	strh	r0, [r4]
	ldr	r0, .L88+0x8
	strh	r6, [r0]
	add	r0, r3, #0
	bl	GetFieldObjectScriptPointerByFieldObjectId
	add	r1, r0, #0
	ldrb	r0, [r4]
	bl	GetRamScript
	add	r1, r0, #0
.L85:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L89:
	.align	2, 0
.L88:
	.word	gSelectedMapObject
	.word	gScriptLastTalked
	.word	gScriptFacing
.Lfe10:
	.size	 sub_8068364,.Lfe10-sub_8068364
	.align	2, 0
	.type	 TryGetInvisibleMapObjectScript,function
	.thumb_func
TryGetInvisibleMapObjectScript:
	push	{r4, r5, lr}
	lsl	r2, r2, #0x18
	lsr	r5, r2, #0x18
	ldr	r4, .L118
	ldrh	r1, [r0]
	sub	r1, r1, #0x7
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	ldrh	r2, [r0, #0x2]
	sub	r2, r2, #0x7
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	ldrb	r3, [r0, #0x4]
	add	r0, r4, #0
	bl	FindInvisibleMapObjectByPosition
	cmp	r0, #0
	beq	.L117	@cond_branch
	ldr	r2, [r0, #0x8]
	cmp	r2, #0
	bne	.L92	@cond_branch
	ldr	r0, .L118+0x4
	b	.L112
.L119:
	.align	2, 0
.L118:
	.word	gMapHeader
	.word	gUnknown_081C6C02
.L92:
	ldrb	r0, [r0, #0x5]
	cmp	r0, #0x8
	bhi	.L93	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L120
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L121:
	.align	2, 0
.L120:
	.word	.L111
	.align	2, 0
	.align	2, 0
.L111:
	.word	.L93
	.word	.L96
	.word	.L98
	.word	.L100
	.word	.L102
	.word	.L106
	.word	.L106
	.word	.L106
	.word	.L108
.L96:
	cmp	r5, #0x2
	beq	.L93	@cond_branch
.L117:
	mov	r0, #0x0
	b	.L112
.L98:
	cmp	r5, #0x1
	beq	.L93	@cond_branch
	b	.L117
.L100:
	cmp	r5, #0x4
	beq	.L93	@cond_branch
	b	.L117
.L102:
	cmp	r5, #0x3
	beq	.L93	@cond_branch
	b	.L117
.L106:
	ldr	r1, .L122
	lsr	r0, r2, #0x10
	mov	r3, #0x96
	lsl	r3, r3, #0x2
	add	r0, r0, r3
	strh	r0, [r1]
	ldr	r0, .L122+0x4
	strh	r2, [r0]
	ldrh	r0, [r1]
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L117	@cond_branch
	ldr	r0, .L122+0x8
	b	.L112
.L123:
	.align	2, 0
.L122:
	.word	gSpecialVar_0x8004
	.word	gSpecialVar_0x8005
	.word	HiddenItemScript
.L108:
	cmp	r5, #0x2
	bne	.L117	@cond_branch
	ldr	r0, .L124
	strh	r2, [r0]
	bl	sub_80BC050
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L117	@cond_branch
	ldr	r0, .L124+0x4
	b	.L112
.L125:
	.align	2, 0
.L124:
	.word	gSpecialVar_0x8004
	.word	gUnknown_081A2C51
.L93:
	add	r0, r2, #0
.L112:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe11:
	.size	 TryGetInvisibleMapObjectScript,.Lfe11-TryGetInvisibleMapObjectScript
	.align	2, 0
	.type	 sub_8068500,function
	.thumb_func
sub_8068500:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	lsl	r1, r1, #0x18
	lsr	r5, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	add	r0, r5, #0
	add	r1, r2, #0
	bl	MetatileBehavior_IsPlayerFacingTVScreen
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L127	@cond_branch
	ldr	r0, .L148
	b	.L147
.L149:
	.align	2, 0
.L148:
	.word	Event_TV
.L127:
	add	r0, r5, #0
	bl	MetatileBehavior_IsPC
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L128	@cond_branch
	ldr	r0, .L150
	b	.L147
.L151:
	.align	2, 0
.L150:
	.word	gUnknown_081A0009
.L128:
	add	r0, r5, #0
	bl	MetatileBehavior_IsClosedSootopolisGymDoor
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L129	@cond_branch
	ldr	r0, .L152
	b	.L147
.L153:
	.align	2, 0
.L152:
	.word	ClosedSootopolisGymDoorScript
.L129:
	add	r0, r5, #0
	bl	is_tile_x84
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L130	@cond_branch
	ldr	r0, .L154
	b	.L147
.L155:
	.align	2, 0
.L154:
	.word	gUnknown_081A4363
.L130:
	add	r0, r5, #0
	bl	MetatileBehavior_IsPokeblockFeeder
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L131	@cond_branch
	ldr	r0, .L156
	b	.L147
.L157:
	.align	2, 0
.L156:
	.word	gUnknown_081C346A
.L131:
	add	r0, r5, #0
	bl	MetatileBehavior_IsTrickHousePuzzleDoor
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L132	@cond_branch
	ldr	r0, .L158
	b	.L147
.L159:
	.align	2, 0
.L158:
	.word	gUnknown_081616E1
.L132:
	add	r0, r5, #0
	bl	MetatileBehavior_IsRegionMap
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L133	@cond_branch
	ldr	r0, .L160
	b	.L147
.L161:
	.align	2, 0
.L160:
	.word	Event_WorldMap
.L133:
	add	r0, r5, #0
	bl	sub_805791C
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L134	@cond_branch
	ldr	r0, .L162
	b	.L147
.L163:
	.align	2, 0
.L162:
	.word	S_RunningShoesManual
.L134:
	add	r0, r5, #0
	bl	MetatileBehavior_IsPictureBookShelf
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L135	@cond_branch
	ldr	r0, .L164
	b	.L147
.L165:
	.align	2, 0
.L164:
	.word	PictureBookShelfScript
.L135:
	add	r0, r5, #0
	bl	MetatileBehavior_IsBookShelf
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L136	@cond_branch
	ldr	r0, .L166
	b	.L147
.L167:
	.align	2, 0
.L166:
	.word	BookshelfScript
.L136:
	add	r0, r5, #0
	bl	MetatileBehavior_IsPokeCenterBookShelf
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L137	@cond_branch
	ldr	r0, .L168
	b	.L147
.L169:
	.align	2, 0
.L168:
	.word	PokemonCenterBookshelfScript
.L137:
	add	r0, r5, #0
	bl	MetatileBehavior_IsVase
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L138	@cond_branch
	ldr	r0, .L170
	b	.L147
.L171:
	.align	2, 0
.L170:
	.word	VaseScript
.L138:
	add	r0, r5, #0
	bl	MetatileBehavior_IsTrashCan
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L139	@cond_branch
	ldr	r0, .L172
	b	.L147
.L173:
	.align	2, 0
.L172:
	.word	TrashCanScript
.L139:
	add	r0, r5, #0
	bl	MetatileBehavior_IsShopShelf
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L140	@cond_branch
	ldr	r0, .L174
	b	.L147
.L175:
	.align	2, 0
.L174:
	.word	ShopShelfScript
.L140:
	add	r0, r5, #0
	bl	MetatileBehavior_IsBlueprint
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L141	@cond_branch
	ldr	r0, .L176
	b	.L147
.L177:
	.align	2, 0
.L176:
	.word	BlueprintScript
.L141:
	mov	r4, #0x4
	ldrsb	r4, [r6, r4]
	mov	r1, #0x0
	ldrsh	r0, [r6, r1]
	mov	r2, #0x2
	ldrsh	r1, [r6, r2]
	bl	MapGridGetZCoordAt
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r4, r0
	bne	.L142	@cond_branch
	add	r0, r5, #0
	bl	MetatileBehavior_IsSecretBasePC
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L143	@cond_branch
	ldr	r0, .L178
	b	.L147
.L179:
	.align	2, 0
.L178:
	.word	gUnknown_0815F36C
.L143:
	add	r0, r5, #0
	bl	sub_805724C
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L144	@cond_branch
	ldr	r0, .L180
	b	.L147
.L181:
	.align	2, 0
.L180:
	.word	gUnknown_0815F43A
.L144:
	add	r0, r5, #0
	bl	sub_8057364
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L145	@cond_branch
	ldr	r0, .L182
	b	.L147
.L183:
	.align	2, 0
.L182:
	.word	gUnknown_0815F523
.L145:
	add	r0, r5, #0
	bl	sub_8057378
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L142	@cond_branch
	ldr	r0, .L184
	b	.L147
.L185:
	.align	2, 0
.L184:
	.word	gUnknown_0815F528
.L142:
	mov	r0, #0x0
.L147:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe12:
	.size	 sub_8068500,.Lfe12-sub_8068500
	.align	2, 0
	.type	 TryGetFieldMoveScript,function
	.thumb_func
TryGetFieldMoveScript:
	push	{r4, lr}
	lsl	r1, r1, #0x18
	lsr	r4, r1, #0x18
	ldr	r0, .L192
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L187	@cond_branch
	bl	PartyHasMonWithSurf
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L187	@cond_branch
	bl	IsPlayerFacingSurfableFishableWater
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L187	@cond_branch
	ldr	r0, .L192+0x4
	b	.L191
.L193:
	.align	2, 0
.L192:
	.word	0x80b
	.word	UseSurfScript
.L187:
	add	r0, r4, #0
	bl	MetatileBehavior_IsWaterfall
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L188	@cond_branch
	ldr	r0, .L194
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L189	@cond_branch
	bl	IsPlayerSurfingNorth
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L189	@cond_branch
	ldr	r0, .L194+0x4
	b	.L191
.L195:
	.align	2, 0
.L194:
	.word	0x80e
	.word	S_UseWaterfall
.L189:
	ldr	r0, .L196
	b	.L191
.L197:
	.align	2, 0
.L196:
	.word	S_CannotUseWaterfall
.L188:
	mov	r0, #0x0
.L191:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe13:
	.size	 TryGetFieldMoveScript,.Lfe13-TryGetFieldMoveScript
	.align	2, 0
	.type	 sub_8068770,function
	.thumb_func
sub_8068770:
	push	{lr}
	ldr	r0, .L201
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L199	@cond_branch
	bl	sub_8068F18
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x2
	bne	.L199	@cond_branch
	ldr	r0, .L201+0x4
	bl	ScriptContext1_SetupScript
	mov	r0, #0x1
	b	.L200
.L202:
	.align	2, 0
.L201:
	.word	0x80d
	.word	UseDiveScript
.L199:
	mov	r0, #0x0
.L200:
	pop	{r1}
	bx	r1
.Lfe14:
	.size	 sub_8068770,.Lfe14-sub_8068770
	.align	2, 0
	.type	 sub_80687A4,function
	.thumb_func
sub_80687A4:
	push	{lr}
	ldr	r0, .L206
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L204	@cond_branch
	ldr	r0, .L206+0x4
	ldrb	r0, [r0, #0x17]
	cmp	r0, #0x5
	bne	.L204	@cond_branch
	bl	sub_8068F18
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L204	@cond_branch
	ldr	r0, .L206+0x8
	bl	ScriptContext1_SetupScript
	mov	r0, #0x1
	b	.L205
.L207:
	.align	2, 0
.L206:
	.word	0x80d
	.word	gMapHeader
	.word	S_UseDiveUnderwater
.L204:
	mov	r0, #0x0
.L205:
	pop	{r1}
	bx	r1
.Lfe15:
	.size	 sub_80687A4,.Lfe15-sub_80687A4
	.align	2, 0
	.type	 sub_80687E4,function
	.thumb_func
sub_80687E4:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	lsl	r1, r1, #0x10
	lsr	r4, r1, #0x10
	add	r6, r4, #0
	bl	mapheader_trigger_activate_at__run_now
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L213	@cond_branch
	add	r0, r5, #0
	add	r1, r4, #0
	bl	sub_8068A64
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L213	@cond_branch
	add	r0, r6, #0
	bl	sub_8068870
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L213	@cond_branch
	bl	sub_8068894
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L213	@cond_branch
	bl	UpdateRepelCounter
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L213	@cond_branch
	mov	r0, #0x0
	b	.L214
.L213:
	mov	r0, #0x1
.L214:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe16:
	.size	 sub_80687E4,.Lfe16-sub_80687E4
	.align	2, 0
	.globl	mapheader_trigger_activate_at__run_now
	.type	 mapheader_trigger_activate_at__run_now,function
	.thumb_func
mapheader_trigger_activate_at__run_now:
	push	{r4, lr}
	ldr	r4, .L218
	ldrh	r1, [r0]
	sub	r1, r1, #0x7
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	ldrh	r2, [r0, #0x2]
	sub	r2, r2, #0x7
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	ldrb	r3, [r0, #0x4]
	add	r0, r4, #0
	bl	mapheader_trigger_activate_at
	cmp	r0, #0
	beq	.L216	@cond_branch
	bl	ScriptContext1_SetupScript
	mov	r0, #0x1
	b	.L217
.L219:
	.align	2, 0
.L218:
	.word	gMapHeader
.L216:
	mov	r0, #0x0
.L217:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe17:
	.size	 mapheader_trigger_activate_at__run_now,.Lfe17-mapheader_trigger_activate_at__run_now
	.align	2, 0
	.globl	sub_8068870
	.type	 sub_8068870,function
	.thumb_func
sub_8068870:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	MetatileBehavior_IsCrackedFloorHole
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L221	@cond_branch
	mov	r0, #0x0
	b	.L222
.L221:
	ldr	r0, .L223
	bl	ScriptContext1_SetupScript
	mov	r0, #0x1
.L222:
	pop	{r1}
	bx	r1
.L224:
	.align	2, 0
.L223:
	.word	S_FallDownHole
.Lfe18:
	.size	 sub_8068870,.Lfe18-sub_8068870
	.align	2, 0
	.globl	sub_8068894
	.type	 sub_8068894,function
	.thumb_func
sub_8068894:
	push	{lr}
	bl	sub_8082B78
	bl	happiness_algorithm_step
	bl	overworld_poison_step
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L226	@cond_branch
	ldr	r0, .L233
	b	.L231
.L234:
	.align	2, 0
.L233:
	.word	gUnknown_081A14B8
.L226:
	bl	ShouldEggHatch
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L227	@cond_branch
	mov	r0, #0xd
	bl	IncrementGameStat
	ldr	r0, .L235
	b	.L231
.L236:
	.align	2, 0
.L235:
	.word	S_EggHatch
.L227:
	bl	SafariZoneTakeStep
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L232	@cond_branch
	mov	r0, #0x1
	bl	CountSSTidalStep
	cmp	r0, #0x1
	beq	.L229	@cond_branch
	mov	r0, #0x0
	b	.L230
.L229:
	ldr	r0, .L237
.L231:
	bl	ScriptContext1_SetupScript
.L232:
	mov	r0, #0x1
.L230:
	pop	{r1}
	bx	r1
.L238:
	.align	2, 0
.L237:
	.word	gUnknown_0815FD0D
.Lfe19:
	.size	 sub_8068894,.Lfe19-sub_8068894
	.align	2, 0
	.globl	unref_sub_80688F8
	.type	 unref_sub_80688F8,function
	.thumb_func
unref_sub_80688F8:
	push	{lr}
	ldr	r0, .L240
	mov	r1, #0x0
	bl	VarSet
	pop	{r0}
	bx	r0
.L241:
	.align	2, 0
.L240:
	.word	0x402a
.Lfe20:
	.size	 unref_sub_80688F8,.Lfe20-unref_sub_80688F8
	.align	2, 0
	.type	 happiness_algorithm_step,function
	.thumb_func
happiness_algorithm_step:
	push	{r4, r5, lr}
	ldr	r0, .L249
	bl	GetVarPointer
	ldrh	r1, [r0]
	add	r1, r1, #0x1
	strh	r1, [r0]
	ldrh	r1, [r0]
	mov	r2, #0x7f
	and	r1, r1, r2
	strh	r1, [r0]
	cmp	r1, #0
	bne	.L243	@cond_branch
	ldr	r5, .L249+0x4
	mov	r4, #0x5
.L247:
	add	r0, r5, #0
	mov	r1, #0x5
	bl	AdjustFriendship
	add	r5, r5, #0x64
	sub	r4, r4, #0x1
	cmp	r4, #0
	bge	.L247	@cond_branch
.L243:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L250:
	.align	2, 0
.L249:
	.word	0x402a
	.word	gPlayerParty
.Lfe21:
	.size	 happiness_algorithm_step,.Lfe21-happiness_algorithm_step
	.align	2, 0
	.globl	overworld_poison_timer_set
	.type	 overworld_poison_timer_set,function
	.thumb_func
overworld_poison_timer_set:
	push	{lr}
	ldr	r0, .L252
	mov	r1, #0x0
	bl	VarSet
	pop	{r0}
	bx	r0
.L253:
	.align	2, 0
.L252:
	.word	0x402b
.Lfe22:
	.size	 overworld_poison_timer_set,.Lfe22-overworld_poison_timer_set
	.align	2, 0
	.type	 overworld_poison_step,function
	.thumb_func
overworld_poison_step:
	push	{lr}
	ldr	r0, .L265
	ldrb	r0, [r0, #0x17]
	cmp	r0, #0x9
	beq	.L255	@cond_branch
	ldr	r0, .L265+0x4
	bl	GetVarPointer
	ldrh	r1, [r0]
	add	r1, r1, #0x1
	strh	r1, [r0]
	ldrh	r1, [r0]
	mov	r2, #0x3
	and	r1, r1, r2
	strh	r1, [r0]
	cmp	r1, #0
	bne	.L255	@cond_branch
	bl	DoPoisonFieldEffect
	cmp	r0, #0x1
	beq	.L255	@cond_branch
	cmp	r0, #0x1
	ble	.L255	@cond_branch
	cmp	r0, #0x2
	bne	.L255	@cond_branch
	mov	r0, #0x1
	b	.L264
.L266:
	.align	2, 0
.L265:
	.word	gMapHeader
	.word	0x402b
.L255:
	mov	r0, #0x0
.L264:
	pop	{r1}
	bx	r1
.Lfe23:
	.size	 overworld_poison_step,.Lfe23-overworld_poison_step
	.align	2, 0
	.globl	prev_quest_postbuffer_cursor_backup_reset
	.type	 prev_quest_postbuffer_cursor_backup_reset,function
	.thumb_func
prev_quest_postbuffer_cursor_backup_reset:
	ldr	r1, .L268
	mov	r0, #0x0
	strb	r0, [r1]
	bx	lr
.L269:
	.align	2, 0
.L268:
	.word	gUnknown_0202E8C0
.Lfe24:
	.size	 prev_quest_postbuffer_cursor_backup_reset,.Lfe24-prev_quest_postbuffer_cursor_backup_reset
	.align	2, 0
	.type	 is_it_battle_time_3,function
	.thumb_func
is_it_battle_time_3:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	add	r7, r4, #0
	ldr	r6, .L275
	ldrb	r0, [r6]
	cmp	r0, #0x3
	bhi	.L271	@cond_branch
	add	r0, r0, #0x1
	strb	r0, [r6]
	ldr	r0, .L275+0x4
	strh	r4, [r0]
	mov	r0, #0x0
	b	.L274
.L276:
	.align	2, 0
.L275:
	.word	gUnknown_0202E8C0
	.word	gUnknown_0202E8C2
.L271:
	ldr	r5, .L277
	ldrh	r1, [r5]
	add	r0, r4, #0
	bl	StandardWildEncounter
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L272	@cond_branch
	strh	r4, [r5]
	mov	r0, #0x0
	b	.L274
.L278:
	.align	2, 0
.L277:
	.word	gUnknown_0202E8C2
.L272:
	mov	r0, #0x0
	strb	r0, [r6]
	strh	r7, [r5]
	mov	r0, #0x1
.L274:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe25:
	.size	 is_it_battle_time_3,.Lfe25-is_it_battle_time_3
	.align	2, 0
	.type	 mapheader_run_first_tag2_script_list_match_conditionally,function
	.thumb_func
mapheader_run_first_tag2_script_list_match_conditionally:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	r7, r0, #0
	add	r4, r1, #0
	add	r5, r2, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	ldr	r0, .L282
	mov	r8, r0
	add	r1, r7, #0
	bl	map_warp_check_packed
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	add	r0, r4, #0
	add	r1, r5, #0
	bl	is_non_stair_warp_tile
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L280	@cond_branch
	lsl	r0, r6, #0x18
	asr	r4, r0, #0x18
	mov	r0, #0x1
	neg	r0, r0
	cmp	r4, r0
	beq	.L280	@cond_branch
	bl	walkrun_find_lowest_active_bit_in_bitfield
	mov	r0, r8
	add	r1, r4, #0
	add	r2, r7, #0
	bl	sub_8068C30
	bl	sub_8080E88
	mov	r0, #0x1
	b	.L281
.L283:
	.align	2, 0
.L282:
	.word	gMapHeader
.L280:
	mov	r0, #0x0
.L281:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe26:
	.size	 mapheader_run_first_tag2_script_list_match_conditionally,.Lfe26-mapheader_run_first_tag2_script_list_match_conditionally
	.align	2, 0
	.globl	sub_8068A64
	.type	 sub_8068A64,function
	.thumb_func
sub_8068A64:
	push	{r4, r5, r6, r7, lr}
	add	r6, r0, #0
	lsl	r1, r1, #0x10
	lsr	r5, r1, #0x10
	ldr	r7, .L292
	add	r0, r7, #0
	add	r1, r6, #0
	bl	map_warp_check_packed
	lsl	r0, r0, #0x18
	asr	r4, r0, #0x18
	mov	r0, #0x1
	neg	r0, r0
	cmp	r4, r0
	beq	.L285	@cond_branch
	add	r0, r5, #0
	bl	sub_8068B30
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L285	@cond_branch
	bl	walkrun_find_lowest_active_bit_in_bitfield
	add	r0, r7, #0
	add	r1, r4, #0
	add	r2, r6, #0
	bl	sub_8068C30
	lsl	r0, r5, #0x18
	lsr	r4, r0, #0x18
	add	r0, r4, #0
	bl	MetatileBehavior_IsEscalator
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L286	@cond_branch
	add	r0, r4, #0
	bl	sub_8080F2C
	mov	r0, #0x1
	b	.L291
.L293:
	.align	2, 0
.L292:
	.word	gMapHeader
.L286:
	add	r0, r4, #0
	bl	MetatileBehavior_IsLavaridgeB1FWarp
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L287	@cond_branch
	bl	sub_8080F48
	mov	r0, #0x1
	b	.L291
.L287:
	add	r0, r4, #0
	bl	MetatileBehavior_IsLavaridge1FWarp
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L288	@cond_branch
	bl	sub_8080F58
	mov	r0, #0x1
	b	.L291
.L288:
	add	r0, r4, #0
	bl	MetatileBehavior_IsAquaHideoutWarp
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L289	@cond_branch
	bl	sub_8080F68
	mov	r0, #0x1
	b	.L291
.L289:
	add	r0, r4, #0
	bl	MetatileBehavior_IsMtPyreHole
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L290	@cond_branch
	ldr	r0, .L294
	bl	ScriptContext1_SetupScript
	mov	r0, #0x1
	b	.L291
.L295:
	.align	2, 0
.L294:
	.word	gUnknown_081C6BDE
.L290:
	bl	sub_8080E88
	mov	r0, #0x1
	b	.L291
.L285:
	mov	r0, #0x0
.L291:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe27:
	.size	 sub_8068A64,.Lfe27-sub_8068A64
	.align	2, 0
	.type	 sub_8068B30,function
	.thumb_func
sub_8068B30:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r0, r4, #0
	bl	MetatileBehavior_IsWarpDoor
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L297	@cond_branch
	add	r0, r4, #0
	bl	MetatileBehavior_IsLadder
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L297	@cond_branch
	add	r0, r4, #0
	bl	MetatileBehavior_IsEscalator
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L297	@cond_branch
	add	r0, r4, #0
	bl	MetatileBehavior_IsNonAnimDoor
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L297	@cond_branch
	add	r0, r4, #0
	bl	MetatileBehavior_IsLavaridgeB1FWarp
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L297	@cond_branch
	add	r0, r4, #0
	bl	MetatileBehavior_IsLavaridge1FWarp
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L297	@cond_branch
	add	r0, r4, #0
	bl	MetatileBehavior_IsAquaHideoutWarp
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L297	@cond_branch
	add	r0, r4, #0
	bl	MetatileBehavior_IsMtPyreHole
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L297	@cond_branch
	mov	r0, #0x0
	b	.L298
.L297:
	mov	r0, #0x1
.L298:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe28:
	.size	 sub_8068B30,.Lfe28-sub_8068B30
	.align	2, 0
	.type	 is_non_stair_warp_tile,function
	.thumb_func
is_non_stair_warp_tile:
	push	{lr}
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r2, r1, #0
	cmp	r1, #0x2
	beq	.L301	@cond_branch
	cmp	r1, #0x2
	bgt	.L307	@cond_branch
	cmp	r1, #0x1
	beq	.L302	@cond_branch
	b	.L300
.L307:
	cmp	r2, #0x3
	beq	.L303	@cond_branch
	cmp	r2, #0x4
	beq	.L304	@cond_branch
	b	.L300
.L301:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	MetatileBehavior_IsNorthArrowWarp
	b	.L309
.L302:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	MetatileBehavior_IsSouthArrowWarp
	b	.L309
.L303:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	MetatileBehavior_IsWestArrowWarp
	b	.L309
.L304:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	MetatileBehavior_IsEastArrowWarp
.L309:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	b	.L308
.L300:
	mov	r0, #0x0
.L308:
	pop	{r1}
	bx	r1
.Lfe29:
	.size	 is_non_stair_warp_tile,.Lfe29-is_non_stair_warp_tile
	.align	2, 0
	.type	 map_warp_check_packed,function
	.thumb_func
map_warp_check_packed:
	push	{lr}
	add	r3, r1, #0
	ldrh	r1, [r3]
	sub	r1, r1, #0x7
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	ldrh	r2, [r3, #0x2]
	sub	r2, r2, #0x7
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	ldrb	r3, [r3, #0x4]
	bl	map_warp_check
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.Lfe30:
	.size	 map_warp_check_packed,.Lfe30-map_warp_check_packed
	.align	2, 0
	.type	 sub_8068C30,function
	.thumb_func
sub_8068C30:
	push	{r4, r5, r6, r7, lr}
	add	r5, r2, #0
	ldr	r0, .L315
	ldr	r0, [r0, #0x4]
	lsl	r1, r1, #0x18
	asr	r7, r1, #0x18
	lsl	r6, r7, #0x3
	ldr	r0, [r0, #0x8]
	add	r4, r0, r6
	ldrb	r0, [r4, #0x6]
	cmp	r0, #0x7f
	bne	.L312	@cond_branch
	ldrb	r0, [r4, #0x5]
	bl	copy_saved_warp2_bank_and_enter_x_to_warp1
	b	.L313
.L316:
	.align	2, 0
.L315:
	.word	gMapHeader
.L312:
	mov	r0, #0x7
	ldrsb	r0, [r4, r0]
	mov	r1, #0x6
	ldrsb	r1, [r4, r1]
	mov	r2, #0x5
	ldrsb	r2, [r4, r2]
	bl	warp1_set_2
	mov	r1, #0x0
	ldrsh	r0, [r5, r1]
	mov	r2, #0x2
	ldrsh	r1, [r5, r2]
	bl	sub_80535C4
	ldrb	r0, [r4, #0x7]
	ldrb	r1, [r4, #0x6]
	bl	Overworld_GetMapHeaderByGroupAndId
	ldr	r1, [r0, #0x4]
	ldrb	r0, [r4, #0x5]
	ldr	r1, [r1, #0x8]
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldrb	r0, [r0, #0x6]
	cmp	r0, #0x7f
	bne	.L313	@cond_branch
	add	r0, r6, r1
	ldrb	r0, [r0, #0x5]
	ldr	r2, .L317
	mov	r1, #0x4
	ldrsb	r1, [r2, r1]
	ldrb	r2, [r2, #0x5]
	lsl	r2, r2, #24
	asr	r2, r2, #24
	add	r3, r7, #0
	bl	saved_warp2_set
.L313:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L318:
	.align	2, 0
.L317:
	.word	gSaveBlock1
.Lfe31:
	.size	 sub_8068C30,.Lfe31-sub_8068C30
	.align	2, 0
	.type	 map_warp_consider_2_to_inside,function
	.thumb_func
map_warp_consider_2_to_inside:
	push	{r4, r5, r6, r7, lr}
	add	r5, r0, #0
	lsl	r1, r1, #0x10
	lsr	r0, r1, #0x10
	add	r7, r0, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	cmp	r2, #0x2
	bne	.L320	@cond_branch
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r0, r4, #0
	bl	sub_80571C0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L321	@cond_branch
	ldr	r0, .L325
	ldr	r1, [r0, #0x4]
	add	r0, r5, #0
	bl	sub_80BC038
	mov	r0, #0x1
	b	.L324
.L326:
	.align	2, 0
.L325:
	.word	gMapHeader
.L321:
	add	r0, r4, #0
	bl	MetatileBehavior_IsWarpDoor
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L320	@cond_branch
	ldr	r6, .L327
	add	r0, r6, #0
	add	r1, r5, #0
	bl	map_warp_check_packed
	lsl	r0, r0, #0x18
	asr	r4, r0, #0x18
	mov	r0, #0x1
	neg	r0, r0
	cmp	r4, r0
	beq	.L320	@cond_branch
	add	r0, r7, #0
	bl	sub_8068B30
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L320	@cond_branch
	bl	walkrun_find_lowest_active_bit_in_bitfield
	add	r0, r6, #0
	add	r1, r4, #0
	add	r2, r5, #0
	bl	sub_8068C30
	bl	sub_8080EF0
	mov	r0, #0x1
	b	.L324
.L328:
	.align	2, 0
.L327:
	.word	gMapHeader
.L320:
	mov	r0, #0x0
.L324:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe32:
	.size	 map_warp_consider_2_to_inside,.Lfe32-map_warp_consider_2_to_inside
	.align	2, 0
	.type	 map_warp_check,function
	.thumb_func
map_warp_check:
	push	{r4, r5, r6, lr}
	lsl	r1, r1, #0x10
	lsr	r6, r1, #0x10
	lsl	r2, r2, #0x10
	lsr	r5, r2, #0x10
	lsl	r3, r3, #0x18
	lsr	r4, r3, #0x18
	ldr	r0, [r0, #0x4]
	ldr	r1, [r0, #0x8]
	ldrb	r3, [r0, #0x1]
	mov	r2, #0x0
	cmp	r2, r3
	bge	.L331	@cond_branch
.L333:
	ldrh	r0, [r1]
	cmp	r0, r6
	bne	.L332	@cond_branch
	ldrh	r0, [r1, #0x2]
	cmp	r0, r5
	bne	.L332	@cond_branch
	ldrb	r0, [r1, #0x4]
	cmp	r0, r4
	beq	.L336	@cond_branch
	cmp	r0, #0
	bne	.L332	@cond_branch
.L336:
	lsl	r0, r2, #0x18
	asr	r0, r0, #0x18
	b	.L338
.L332:
	add	r2, r2, #0x1
	add	r1, r1, #0x8
	cmp	r2, r3
	blt	.L333	@cond_branch
.L331:
	mov	r0, #0x1
	neg	r0, r0
.L338:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe33:
	.size	 map_warp_check,.Lfe33-map_warp_check
	.align	2, 0
	.type	 trigger_activate,function
	.thumb_func
trigger_activate:
	push	{r4, lr}
	add	r4, r0, #0
	cmp	r4, #0
	beq	.L340	@cond_branch
	ldr	r1, [r4, #0xc]
	cmp	r1, #0
	bne	.L341	@cond_branch
	ldrb	r0, [r4, #0x6]
	bl	DoCoordEventWeather
	b	.L340
.L341:
	ldrh	r0, [r4, #0x6]
	cmp	r0, #0
	beq	.L342	@cond_branch
	ldrh	r0, [r4, #0x6]
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldrb	r1, [r4, #0x8]
	cmp	r0, r1
	bne	.L340	@cond_branch
	ldr	r0, [r4, #0xc]
	b	.L344
.L342:
	add	r0, r1, #0
	bl	ScriptContext2_RunNewScript
.L340:
	mov	r0, #0x0
.L344:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe34:
	.size	 trigger_activate,.Lfe34-trigger_activate
	.align	2, 0
	.type	 mapheader_trigger_activate_at,function
	.thumb_func
mapheader_trigger_activate_at:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	sl, r1
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	mov	r9, r2
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r8, r3
	ldr	r0, [r0, #0x4]
	ldr	r1, [r0, #0xc]
	ldrb	r7, [r0, #0x2]
	mov	r6, #0x0
	cmp	r6, r7
	bge	.L347	@cond_branch
	add	r5, r1, #0
	add	r4, r5, #0
.L349:
	ldrh	r0, [r4]
	cmp	r0, sl
	bne	.L348	@cond_branch
	ldrh	r0, [r4, #0x2]
	cmp	r0, r9
	bne	.L348	@cond_branch
	ldrb	r0, [r4, #0x4]
	cmp	r0, r8
	beq	.L352	@cond_branch
	cmp	r0, #0
	bne	.L348	@cond_branch
.L352:
	add	r0, r5, #0
	bl	trigger_activate
	cmp	r0, #0
	bne	.L355	@cond_branch
.L348:
	add	r4, r4, #0x10
	add	r5, r5, #0x10
	add	r6, r6, #0x1
	cmp	r6, r7
	blt	.L349	@cond_branch
.L347:
	mov	r0, #0x0
.L355:
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe35:
	.size	 mapheader_trigger_activate_at,.Lfe35-mapheader_trigger_activate_at
	.align	2, 0
	.globl	sub_8068E24
	.type	 sub_8068E24,function
	.thumb_func
sub_8068E24:
	push	{r4, lr}
	ldr	r4, .L357
	ldrh	r1, [r0]
	sub	r1, r1, #0x7
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	ldrh	r2, [r0, #0x2]
	sub	r2, r2, #0x7
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	ldrb	r3, [r0, #0x4]
	add	r0, r4, #0
	bl	mapheader_trigger_activate_at
	pop	{r4}
	pop	{r1}
	bx	r1
.L358:
	.align	2, 0
.L357:
	.word	gMapHeader
.Lfe36:
	.size	 sub_8068E24,.Lfe36-sub_8068E24
	.align	2, 0
	.type	 FindInvisibleMapObjectByPosition,function
	.thumb_func
FindInvisibleMapObjectByPosition:
	push	{r4, r5, r6, r7, lr}
	lsl	r1, r1, #0x10
	lsr	r7, r1, #0x10
	lsl	r2, r2, #0x10
	lsr	r6, r2, #0x10
	lsl	r3, r3, #0x18
	lsr	r5, r3, #0x18
	ldr	r0, [r0, #0x4]
	ldr	r4, [r0, #0x10]
	ldrb	r3, [r0, #0x3]
	mov	r2, #0x0
	cmp	r2, r3
	bcs	.L361	@cond_branch
.L363:
	lsl	r0, r2, #0x1
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r1, r0, r4
	ldrh	r0, [r1]
	cmp	r0, r7
	bne	.L362	@cond_branch
	ldrh	r0, [r1, #0x2]
	cmp	r0, r6
	bne	.L362	@cond_branch
	ldrb	r0, [r1, #0x4]
	cmp	r0, r5
	beq	.L366	@cond_branch
	cmp	r0, #0
	bne	.L362	@cond_branch
.L366:
	add	r0, r1, #0
	b	.L368
.L362:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, r3
	bcc	.L363	@cond_branch
.L361:
	mov	r0, #0x0
.L368:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe37:
	.size	 FindInvisibleMapObjectByPosition,.Lfe37-FindInvisibleMapObjectByPosition
	.align	2, 0
	.globl	dive_warp
	.type	 dive_warp,function
	.thumb_func
dive_warp:
	push	{r4, r5, lr}
	add	r4, r0, #0
	lsl	r1, r1, #0x10
	lsr	r5, r1, #0x10
	ldr	r0, .L377
	ldrb	r0, [r0, #0x17]
	cmp	r0, #0x5
	bne	.L370	@cond_branch
	lsl	r0, r5, #0x18
	lsr	r0, r0, #0x18
	bl	sub_805750C
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L370	@cond_branch
	ldrh	r0, [r4]
	sub	r0, r0, #0x7
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldrh	r1, [r4, #0x2]
	sub	r1, r1, #0x7
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	bl	sub_80538B0
	b	.L376
.L378:
	.align	2, 0
.L377:
	.word	gMapHeader
.L370:
	lsl	r0, r5, #0x18
	lsr	r0, r0, #0x18
	bl	sub_80574EC
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L372	@cond_branch
	ldrh	r0, [r4]
	sub	r0, r0, #0x7
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldrh	r1, [r4, #0x2]
	sub	r1, r1, #0x7
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	bl	sub_80538D0
.L376:
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L372	@cond_branch
	bl	walkrun_find_lowest_active_bit_in_bitfield
	bl	sp13E_warp_to_last_warp
	mov	r0, #0xe9
	bl	PlaySE
	mov	r0, #0x1
	b	.L375
.L372:
	mov	r0, #0x0
.L375:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe38:
	.size	 dive_warp,.Lfe38-dive_warp
	.align	2, 0
	.globl	sub_8068F18
	.type	 sub_8068F18,function
	.thumb_func
sub_8068F18:
	push	{r4, r5, lr}
	add	sp, sp, #0xfffffffc
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	PlayerGetDestCoords
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	bl	MapGridGetMetatileBehaviorAt
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r0, .L386
	ldrb	r0, [r0, #0x17]
	cmp	r0, #0x5
	bne	.L380	@cond_branch
	add	r0, r5, #0
	bl	sub_805750C
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L380	@cond_branch
	mov	r0, sp
	ldrh	r0, [r0]
	sub	r0, r0, #0x7
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldrh	r1, [r4]
	sub	r1, r1, #0x7
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	bl	sub_80538B0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L382	@cond_branch
	mov	r0, #0x1
	b	.L385
.L387:
	.align	2, 0
.L386:
	.word	gMapHeader
.L380:
	add	r0, r5, #0
	bl	sub_80574EC
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L382	@cond_branch
	mov	r0, sp
	ldrh	r0, [r0]
	sub	r0, r0, #0x7
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldrh	r1, [r4]
	sub	r1, r1, #0x7
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	bl	sub_80538D0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L382	@cond_branch
	mov	r0, #0x2
	b	.L385
.L382:
	mov	r0, #0x0
.L385:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe39:
	.size	 sub_8068F18,.Lfe39-sub_8068F18
	.align	2, 0
	.globl	GetFieldObjectScriptPointerPlayerFacing
	.type	 GetFieldObjectScriptPointerPlayerFacing,function
	.thumb_func
GetFieldObjectScriptPointerPlayerFacing:
	push	{r4, r5, lr}
	add	sp, sp, #0xfffffff8
	bl	player_get_direction_upper_nybble
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r5, sp
	mov	r0, sp
	bl	player_get_next_pos_and_height
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x2
	ldrsh	r1, [r5, r2]
	bl	MapGridGetMetatileBehaviorAt
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r0, sp
	add	r2, r4, #0
	bl	sub_8068364
	add	sp, sp, #0x8
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe40:
	.size	 GetFieldObjectScriptPointerPlayerFacing,.Lfe40-GetFieldObjectScriptPointerPlayerFacing
	.align	2, 0
	.globl	SetCableClubWarp
	.type	 SetCableClubWarp,function
	.thumb_func
SetCableClubWarp:
	push	{r4, lr}
	add	sp, sp, #0xfffffff8
	bl	player_get_direction_upper_nybble
	mov	r4, sp
	mov	r0, sp
	bl	player_get_pos_to_and_height
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x2
	ldrsh	r1, [r4, r2]
	bl	MapGridGetMetatileBehaviorAt
	ldr	r4, .L390
	add	r0, r4, #0
	mov	r1, sp
	bl	map_warp_check_packed
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	asr	r1, r1, #0x18
	add	r0, r4, #0
	mov	r2, sp
	bl	sub_8068C30
	mov	r0, #0x0
	add	sp, sp, #0x8
	pop	{r4}
	pop	{r1}
	bx	r1
.L391:
	.align	2, 0
.L390:
	.word	gMapHeader
.Lfe41:
	.size	 SetCableClubWarp,.Lfe41-SetCableClubWarp
	.comm	gSelectedMapObject, 4	@ 1
.text
	.align	2, 0
