@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
.text
	.align	2, 0
	.globl	ShouldDoBrailleDigEffect
	.type	 ShouldDoBrailleDigEffect,function
	.thumb_func
ShouldDoBrailleDigEffect:
	push	{lr}
	ldr	r0, .L11
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L3	@cond_branch
	ldr	r2, .L11+0x4
	ldrh	r1, [r2, #0x4]
	ldr	r0, .L11+0x8
	cmp	r1, r0
	bne	.L3	@cond_branch
	ldr	r1, [r2]
	ldr	r0, .L11+0xc
	cmp	r1, r0
	beq	.L10	@cond_branch
	ldr	r0, .L11+0x10
	cmp	r1, r0
	beq	.L10	@cond_branch
	ldr	r0, .L11+0x14
	cmp	r1, r0
	bne	.L3	@cond_branch
.L10:
	mov	r0, #0x1
	b	.L9
.L12:
	.align	2, 0
.L11:
	.word	0x84f
	.word	gSaveBlock1
	.word	0x4718
	.word	0x3000a
	.word	0x30009
	.word	0x3000b
.L3:
	mov	r0, #0x0
.L9:
	pop	{r1}
	bx	r1
.Lfe1:
	.size	 ShouldDoBrailleDigEffect,.Lfe1-ShouldDoBrailleDigEffect
	.align	2, 0
	.globl	DoBrailleDigEffect
	.type	 DoBrailleDigEffect,function
	.thumb_func
DoBrailleDigEffect:
	push	{lr}
	ldr	r2, .L14
	mov	r0, #0x10
	mov	r1, #0x8
	bl	MapGridSetMetatileIdAt
	ldr	r2, .L14+0x4
	mov	r0, #0x11
	mov	r1, #0x8
	bl	MapGridSetMetatileIdAt
	mov	r2, #0x8b
	lsl	r2, r2, #0x2
	mov	r0, #0x12
	mov	r1, #0x8
	bl	MapGridSetMetatileIdAt
	ldr	r2, .L14+0x8
	mov	r0, #0x10
	mov	r1, #0x9
	bl	MapGridSetMetatileIdAt
	ldr	r2, .L14+0xc
	mov	r0, #0x11
	mov	r1, #0x9
	bl	MapGridSetMetatileIdAt
	ldr	r2, .L14+0x10
	mov	r0, #0x12
	mov	r1, #0x9
	bl	MapGridSetMetatileIdAt
	bl	DrawWholeMapView
	mov	r0, #0x14
	bl	PlaySE
	ldr	r0, .L14+0x14
	bl	FlagSet
	bl	ScriptContext2_Disable
	pop	{r0}
	bx	r0
.L15:
	.align	2, 0
.L14:
	.word	0x22a
	.word	0x22b
	.word	0xe32
	.word	0x233
	.word	0xe34
	.word	0x84f
.Lfe2:
	.size	 DoBrailleDigEffect,.Lfe2-DoBrailleDigEffect
	.align	2, 0
	.globl	CheckRelicanthWailord
	.type	 CheckRelicanthWailord,function
	.thumb_func
CheckRelicanthWailord:
	push	{r4, lr}
	ldr	r4, .L20
	add	r0, r4, #0
	mov	r1, #0x41
	mov	r2, #0x0
	bl	GetMonData
	ldr	r1, .L20+0x4
	cmp	r0, r1
	bne	.L17	@cond_branch
	bl	CalculatePlayerPartyCount
	ldr	r0, .L20+0x8
	ldrb	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	add	r1, r4, #0
	sub	r1, r1, #0x64
	add	r0, r0, r1
	mov	r1, #0x41
	mov	r2, #0x0
	bl	GetMonData
	mov	r1, #0x9d
	lsl	r1, r1, #0x1
	cmp	r0, r1
	bne	.L17	@cond_branch
	mov	r0, #0x1
	b	.L19
.L21:
	.align	2, 0
.L20:
	.word	gPlayerParty
	.word	0x17d
	.word	gPlayerPartyCount
.L17:
	mov	r0, #0x0
.L19:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe3:
	.size	 CheckRelicanthWailord,.Lfe3-CheckRelicanthWailord
	.align	2, 0
	.globl	ShouldDoBrailleStrengthEffect
	.type	 ShouldDoBrailleStrengthEffect,function
	.thumb_func
ShouldDoBrailleStrengthEffect:
	push	{lr}
	mov	r0, #0x85
	lsl	r0, r0, #0x4
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L23	@cond_branch
	ldr	r2, .L31
	ldrh	r1, [r2, #0x4]
	mov	r0, #0xc3
	lsl	r0, r0, #0x3
	cmp	r1, r0
	bne	.L23	@cond_branch
	ldr	r1, [r2]
	ldr	r0, .L31+0x4
	cmp	r1, r0
	beq	.L30	@cond_branch
	ldr	r0, .L31+0x8
	cmp	r1, r0
	beq	.L30	@cond_branch
	ldr	r0, .L31+0xc
	cmp	r1, r0
	bne	.L23	@cond_branch
.L30:
	mov	r0, #0x1
	b	.L29
.L32:
	.align	2, 0
.L31:
	.word	gSaveBlock1
	.word	0x17000a
	.word	0x170009
	.word	0x17000b
.L23:
	mov	r0, #0x0
.L29:
	pop	{r1}
	bx	r1
.Lfe4:
	.size	 ShouldDoBrailleStrengthEffect,.Lfe4-ShouldDoBrailleStrengthEffect
	.align	2, 0
	.globl	DoBrailleStrengthEffect
	.type	 DoBrailleStrengthEffect,function
	.thumb_func
DoBrailleStrengthEffect:
	push	{lr}
	mov	r0, #0x28
	bl	FieldEffectActiveListRemove
	ldr	r2, .L34
	mov	r0, #0xe
	mov	r1, #0x1a
	bl	MapGridSetMetatileIdAt
	ldr	r2, .L34+0x4
	mov	r0, #0xf
	mov	r1, #0x1a
	bl	MapGridSetMetatileIdAt
	mov	r2, #0x8b
	lsl	r2, r2, #0x2
	mov	r0, #0x10
	mov	r1, #0x1a
	bl	MapGridSetMetatileIdAt
	ldr	r2, .L34+0x8
	mov	r0, #0xe
	mov	r1, #0x1b
	bl	MapGridSetMetatileIdAt
	ldr	r2, .L34+0xc
	mov	r0, #0xf
	mov	r1, #0x1b
	bl	MapGridSetMetatileIdAt
	ldr	r2, .L34+0x10
	mov	r0, #0x10
	mov	r1, #0x1b
	bl	MapGridSetMetatileIdAt
	bl	DrawWholeMapView
	mov	r0, #0x14
	bl	PlaySE
	mov	r0, #0x85
	lsl	r0, r0, #0x4
	bl	FlagSet
	bl	ScriptContext2_Disable
	pop	{r0}
	bx	r0
.L35:
	.align	2, 0
.L34:
	.word	0x22a
	.word	0x22b
	.word	0xe32
	.word	0x233
	.word	0xe34
.Lfe5:
	.size	 DoBrailleStrengthEffect,.Lfe5-DoBrailleStrengthEffect
	.align	2, 0
	.globl	ShouldDoBrailleFlyEffect
	.type	 ShouldDoBrailleFlyEffect,function
	.thumb_func
ShouldDoBrailleFlyEffect:
	push	{lr}
	ldr	r0, .L40
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L37	@cond_branch
	ldr	r2, .L40+0x4
	ldrh	r1, [r2, #0x4]
	ldr	r0, .L40+0x8
	cmp	r1, r0
	bne	.L37	@cond_branch
	ldr	r1, [r2]
	ldr	r0, .L40+0xc
	cmp	r1, r0
	bne	.L37	@cond_branch
	mov	r0, #0x1
	b	.L39
.L41:
	.align	2, 0
.L40:
	.word	0x852
	.word	gSaveBlock1
	.word	0x4418
	.word	0x190008
.L37:
	mov	r0, #0x0
.L39:
	pop	{r1}
	bx	r1
.Lfe6:
	.size	 ShouldDoBrailleFlyEffect,.Lfe6-ShouldDoBrailleFlyEffect
	.align	2, 0
	.globl	DoBrailleFlyEffect
	.type	 DoBrailleFlyEffect,function
	.thumb_func
DoBrailleFlyEffect:
	push	{lr}
	ldr	r0, .L43
	ldr	r1, .L43+0x4
	ldrb	r1, [r1]
	str	r1, [r0]
	mov	r0, #0x3c
	bl	FieldEffectStart
	pop	{r0}
	bx	r0
.L44:
	.align	2, 0
.L43:
	.word	gFieldEffectArguments
	.word	gLastFieldPokeMenuOpened
.Lfe7:
	.size	 DoBrailleFlyEffect,.Lfe7-DoBrailleFlyEffect
	.align	2, 0
	.globl	FldEff_UseFlyAncientTomb
	.type	 FldEff_UseFlyAncientTomb,function
	.thumb_func
FldEff_UseFlyAncientTomb:
	push	{lr}
	bl	oei_task_add
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L46
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldr	r2, .L46+0x4
	lsr	r0, r2, #0x10
	strh	r0, [r1, #0x18]
	strh	r2, [r1, #0x1a]
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L47:
	.align	2, 0
.L46:
	.word	gTasks
	.word	UseFlyAncientTomb_Callback
.Lfe8:
	.size	 FldEff_UseFlyAncientTomb,.Lfe8-FldEff_UseFlyAncientTomb
	.align	2, 0
	.globl	UseFlyAncientTomb_Callback
	.type	 UseFlyAncientTomb_Callback,function
	.thumb_func
UseFlyAncientTomb_Callback:
	push	{lr}
	mov	r0, #0x3c
	bl	FieldEffectActiveListRemove
	bl	UseFlyAncientTomb_Finish
	pop	{r0}
	bx	r0
.Lfe9:
	.size	 UseFlyAncientTomb_Callback,.Lfe9-UseFlyAncientTomb_Callback
	.align	2, 0
	.globl	UseFlyAncientTomb_Finish
	.type	 UseFlyAncientTomb_Finish,function
	.thumb_func
UseFlyAncientTomb_Finish:
	push	{lr}
	ldr	r2, .L50
	mov	r0, #0xe
	mov	r1, #0x1a
	bl	MapGridSetMetatileIdAt
	ldr	r2, .L50+0x4
	mov	r0, #0xf
	mov	r1, #0x1a
	bl	MapGridSetMetatileIdAt
	mov	r2, #0x8b
	lsl	r2, r2, #0x2
	mov	r0, #0x10
	mov	r1, #0x1a
	bl	MapGridSetMetatileIdAt
	ldr	r2, .L50+0x8
	mov	r0, #0xe
	mov	r1, #0x1b
	bl	MapGridSetMetatileIdAt
	ldr	r2, .L50+0xc
	mov	r0, #0xf
	mov	r1, #0x1b
	bl	MapGridSetMetatileIdAt
	ldr	r2, .L50+0x10
	mov	r0, #0x10
	mov	r1, #0x1b
	bl	MapGridSetMetatileIdAt
	bl	DrawWholeMapView
	mov	r0, #0x14
	bl	PlaySE
	ldr	r0, .L50+0x14
	bl	FlagSet
	bl	ScriptContext2_Disable
	pop	{r0}
	bx	r0
.L51:
	.align	2, 0
.L50:
	.word	0x22a
	.word	0x22b
	.word	0xe32
	.word	0x233
	.word	0xe34
	.word	0x852
.Lfe10:
	.size	 UseFlyAncientTomb_Finish,.Lfe10-UseFlyAncientTomb_Finish
	.align	2, 0
	.globl	DoBrailleWait
	.type	 DoBrailleWait,function
	.thumb_func
DoBrailleWait:
	push	{lr}
	ldr	r0, .L54
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L53	@cond_branch
	ldr	r0, .L54+0x4
	mov	r1, #0x50
	bl	CreateTask
.L53:
	pop	{r0}
	bx	r0
.L55:
	.align	2, 0
.L54:
	.word	0x851
	.word	Task_BrailleWait
.Lfe11:
	.size	 DoBrailleWait,.Lfe11-DoBrailleWait
	.align	2, 0
	.globl	Task_BrailleWait
	.type	 Task_BrailleWait,function
	.thumb_func
Task_BrailleWait:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L71
	add	r4, r0, r1
	mov	r1, #0x0
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x4
	bhi	.L57	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L71+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L72:
	.align	2, 0
.L71:
	.word	gTasks+0x8
	.word	.L69
	.align	2, 0
	.align	2, 0
.L69:
	.word	.L58
	.word	.L59
	.word	.L63
	.word	.L66
	.word	.L68
.L58:
	mov	r1, #0xe1
	lsl	r1, r1, #0x5
	add	r0, r1, #0
	strh	r0, [r4, #0x2]
	mov	r0, #0x1
	strh	r0, [r4]
	b	.L57
.L59:
	bl	BrailleWait_CheckButtonPress
	cmp	r0, #0
	beq	.L60	@cond_branch
	bl	MenuZeroFillScreen
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x2
	strh	r0, [r4]
	b	.L57
.L60:
	ldrh	r0, [r4, #0x2]
	sub	r0, r0, #0x1
	strh	r0, [r4, #0x2]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L57	@cond_branch
	bl	MenuZeroFillScreen
	mov	r0, #0x3
	strh	r0, [r4]
	mov	r0, #0x1e
	strh	r0, [r4, #0x2]
	b	.L57
.L63:
	bl	BrailleWait_CheckButtonPress
	cmp	r0, #0
	beq	.L66	@cond_branch
	bl	sub_8064E2C
	add	r0, r5, #0
	bl	DestroyTask
	bl	ScriptContext2_Disable
	b	.L57
.L66:
	ldrh	r0, [r4, #0x2]
	sub	r0, r0, #0x1
	strh	r0, [r4, #0x2]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L57	@cond_branch
	mov	r0, #0x4
	strh	r0, [r4]
	b	.L57
.L68:
	bl	sub_8064E2C
	ldr	r0, .L73
	bl	ScriptContext1_SetupScript
	add	r0, r5, #0
	bl	DestroyTask
.L57:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L74:
	.align	2, 0
.L73:
	.word	S_OpenRegiceChamber
.Lfe12:
	.size	 Task_BrailleWait,.Lfe12-Task_BrailleWait
	.align	2, 0
	.globl	BrailleWait_CheckButtonPress
	.type	 BrailleWait_CheckButtonPress,function
	.thumb_func
BrailleWait_CheckButtonPress:
	push	{lr}
	mov	r1, #0xff
	ldr	r0, .L81
	ldrb	r2, [r0, #0x13]
	cmp	r2, #0x1
	bne	.L76	@cond_branch
	mov	r3, #0xc0
	lsl	r3, r3, #0x2
	add	r0, r3, #0
	orr	r1, r1, r0
.L76:
	cmp	r2, #0x2
	bne	.L77	@cond_branch
	mov	r2, #0x80
	lsl	r2, r2, #0x2
	add	r0, r2, #0
	orr	r1, r1, r0
.L77:
	ldr	r0, .L81+0x4
	ldrh	r0, [r0, #0x2e]
	and	r1, r1, r0
	cmp	r1, #0
	bne	.L78	@cond_branch
	mov	r0, #0x0
	b	.L80
.L82:
	.align	2, 0
.L81:
	.word	gSaveBlock2
	.word	gMain
.L78:
	mov	r0, #0x1
.L80:
	pop	{r1}
	bx	r1
.Lfe13:
	.size	 BrailleWait_CheckButtonPress,.Lfe13-BrailleWait_CheckButtonPress
	.align	2, 0
	.globl	DoSealedChamberShakingEffect1
	.type	 DoSealedChamberShakingEffect1,function
	.thumb_func
DoSealedChamberShakingEffect1:
	push	{lr}
	ldr	r0, .L84
	mov	r1, #0x9
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L84+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	mov	r0, #0x0
	strh	r0, [r1, #0xa]
	strh	r0, [r1, #0xc]
	mov	r0, #0x2
	strh	r0, [r1, #0x10]
	mov	r0, #0x5
	strh	r0, [r1, #0x12]
	mov	r0, #0x32
	strh	r0, [r1, #0x14]
	mov	r0, #0x0
	bl	SetCameraPanningCallback
	pop	{r0}
	bx	r0
.L85:
	.align	2, 0
.L84:
	.word	SealedChamberShakingEffect
	.word	gTasks
.Lfe14:
	.size	 DoSealedChamberShakingEffect1,.Lfe14-DoSealedChamberShakingEffect1
	.align	2, 0
	.globl	DoSealedChamberShakingEffect2
	.type	 DoSealedChamberShakingEffect2,function
	.thumb_func
DoSealedChamberShakingEffect2:
	push	{lr}
	ldr	r0, .L87
	mov	r1, #0x9
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L87+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	mov	r0, #0x0
	strh	r0, [r1, #0xa]
	strh	r0, [r1, #0xc]
	mov	r0, #0x3
	strh	r0, [r1, #0x10]
	mov	r0, #0x5
	strh	r0, [r1, #0x12]
	mov	r0, #0x2
	strh	r0, [r1, #0x14]
	mov	r0, #0x0
	bl	SetCameraPanningCallback
	pop	{r0}
	bx	r0
.L88:
	.align	2, 0
.L87:
	.word	SealedChamberShakingEffect
	.word	gTasks
.Lfe15:
	.size	 DoSealedChamberShakingEffect2,.Lfe15-DoSealedChamberShakingEffect2
	.align	2, 0
	.globl	SealedChamberShakingEffect
	.type	 SealedChamberShakingEffect,function
	.thumb_func
SealedChamberShakingEffect:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L92
	add	r4, r0, r1
	ldrh	r0, [r4, #0xa]
	add	r0, r0, #0x1
	strh	r0, [r4, #0xa]
	mov	r1, #0xa
	ldrsh	r0, [r4, r1]
	mov	r2, #0x12
	ldrsh	r1, [r4, r2]
	bl	__modsi3
	cmp	r0, #0
	bne	.L90	@cond_branch
	strh	r0, [r4, #0xa]
	ldrh	r0, [r4, #0xc]
	add	r0, r0, #0x1
	strh	r0, [r4, #0xc]
	ldrh	r0, [r4, #0x10]
	neg	r0, r0
	strh	r0, [r4, #0x10]
	mov	r0, #0x10
	ldrsh	r1, [r4, r0]
	mov	r0, #0x0
	bl	SetCameraPanning
	mov	r2, #0xc
	ldrsh	r1, [r4, r2]
	mov	r2, #0x14
	ldrsh	r0, [r4, r2]
	cmp	r1, r0
	bne	.L90	@cond_branch
	add	r0, r5, #0
	bl	DestroyTask
	bl	EnableBothScriptContexts
	bl	InstallCameraPanAheadCallback
.L90:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L93:
	.align	2, 0
.L92:
	.word	gTasks
.Lfe16:
	.size	 SealedChamberShakingEffect,.Lfe16-SealedChamberShakingEffect
.text
	.align	2, 0
