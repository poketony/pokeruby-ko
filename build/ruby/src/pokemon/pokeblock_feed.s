@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section ewram_data,"aw"
	.align	2, 0
	.type	 sPokeblockFeedSpritePal,object
	.size	 sPokeblockFeedSpritePal,8
sPokeblockFeedSpritePal:
	.word	0x0
	.space	4
	.section .rodata
	.type	 sNatureToMonPokeblockAnim,object
sNatureToMonPokeblockAnim:
	.byte	0x0
	.byte	0x0
	.byte	0x3
	.byte	0x0
	.byte	0x4
	.byte	0x1
	.byte	0x5
	.byte	0x0
	.byte	0xa
	.byte	0x0
	.byte	0xd
	.byte	0x0
	.byte	0xf
	.byte	0x0
	.byte	0x10
	.byte	0x2
	.byte	0x12
	.byte	0x0
	.byte	0x13
	.byte	0x0
	.byte	0x14
	.byte	0x0
	.byte	0x19
	.byte	0x0
	.byte	0x1b
	.byte	0x3
	.byte	0x1c
	.byte	0x0
	.byte	0x1d
	.byte	0x0
	.byte	0x21
	.byte	0x4
	.byte	0x24
	.byte	0x0
	.byte	0x25
	.byte	0x0
	.byte	0x27
	.byte	0x0
	.byte	0x2a
	.byte	0x0
	.byte	0x2d
	.byte	0x0
	.byte	0x2e
	.byte	0x5
	.byte	0x2f
	.byte	0x6
	.byte	0x30
	.byte	0x0
	.byte	0x35
	.byte	0x0
	.size	 sNatureToMonPokeblockAnim,50
	.align	1, 0
	.type	 sMonPokeblockAnims,object
sMonPokeblockAnims:
	.short	0x0
	.short	0x4
	.short	0x0
	.short	0x8
	.short	0x18
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xc
	.short	0x0
	.short	0x0
	.short	0x4
	.short	0x0
	.short	0x10
	.short	0x18
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xc
	.short	0x0
	.short	0x0
	.short	0x4
	.short	0x0
	.short	0x20
	.short	0x20
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x10
	.short	0x1
	.short	0x0
	.short	0x3
	.short	0x6
	.short	0x0
	.short	0x30
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x18
	.short	0x1
	.short	0x40
	.short	0x10
	.short	0xffffffe8
	.short	0x0
	.short	0x20
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x1
	.short	0x0
	.short	0x4
	.short	0x8
	.short	0x0
	.short	0x10
	.short	0x0
	.short	0xfffffff8
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x10
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x4
	.short	0x8
	.short	0x0
	.short	0x10
	.short	0x0
	.short	0xfffffff8
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x10
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x4
	.short	0xfffffff0
	.short	0x0
	.short	0x4
	.short	0x0
	.short	0x10
	.short	0x0
	.short	0x0
	.short	0x1
	.short	0x0
	.short	0x3
	.short	0x6
	.short	0x0
	.short	0xc
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x6
	.short	0x0
	.short	0x0
	.short	0x3
	.short	0xfffffffa
	.short	0x0
	.short	0xc
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x6
	.short	0x0
	.short	0x0
	.short	0x10
	.short	0x10
	.short	0x0
	.short	0x2d
	.short	0x1
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x1
	.short	0x0
	.short	0x10
	.short	0x0
	.short	0x18
	.short	0x20
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x10
	.short	0x0
	.short	0x0
	.short	0x10
	.short	0x0
	.short	0x17
	.short	0x20
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x10
	.short	0x1
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x50
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x1
	.short	0x0
	.short	0x2
	.short	0x8
	.short	0x0
	.short	0x20
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x2
	.short	0xfffffff8
	.short	0x0
	.short	0x20
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x1
	.short	0x0
	.short	0x20
	.short	0x2
	.short	0x1
	.short	0x30
	.short	0x1
	.short	0x0
	.short	0x0
	.short	0x18
	.short	0x1
	.short	0x0
	.short	0x2
	.short	0x10
	.short	0x10
	.short	0x80
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x1
	.short	0x0
	.short	0x2
	.short	0xfffffff8
	.short	0x0
	.short	0x30
	.short	0x0
	.short	0xffffffe8
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x8
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x40
	.short	0x20
	.short	0x2
	.short	0x0
	.short	0x24
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x8
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x2
	.short	0x8
	.short	0x0
	.short	0x30
	.short	0x0
	.short	0x18
	.short	0x0
	.short	0x0
	.short	0x1
	.short	0x40
	.short	0x18
	.short	0x10
	.short	0x0
	.short	0x20
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x1c
	.short	0x2
	.short	0x1
	.short	0x20
	.short	0x1
	.short	0x0
	.short	0x0
	.short	0x10
	.short	0x1
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x20
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x1
	.short	0x40
	.short	0x10
	.short	0xfffffff0
	.short	0x2
	.short	0x30
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x20
	.short	0x1
	.short	0x0
	.short	0xc
	.short	0xfffffff8
	.short	0x4
	.short	0x18
	.short	0x0
	.short	0x8
	.short	0x0
	.short	0xc
	.short	0x0
	.short	0x0
	.short	0xc
	.short	0x8
	.short	0x8
	.short	0x18
	.short	0x0
	.short	0xfffffff0
	.short	0x0
	.short	0xc
	.short	0x0
	.short	0x0
	.short	0xc
	.short	0xfffffff8
	.short	0x10
	.short	0x18
	.short	0x0
	.short	0x10
	.short	0x0
	.short	0xc
	.short	0x0
	.short	0x0
	.short	0xc
	.short	0x8
	.short	0x1c
	.short	0x18
	.short	0x0
	.short	0xfffffff8
	.short	0x0
	.short	0xc
	.short	0x1
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x8
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x40
	.short	0x10
	.short	0xfffffffc
	.short	0x0
	.short	0x20
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x8
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x1
	.short	0x80
	.short	0x4
	.short	0x0
	.short	0x8
	.short	0x40
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x1
	.short	0x0
	.short	0x2
	.short	0x10
	.short	0x0
	.short	0x30
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x80
	.short	0x2
	.short	0x10
	.short	0x0
	.short	0x30
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x1
	.short	0x0
	.short	0x2
	.short	0xfffffffc
	.short	0x0
	.short	0x30
	.short	0x0
	.short	0xffffffd0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x50
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x2
	.short	0x8
	.short	0x0
	.short	0x18
	.short	0x0
	.short	0x30
	.short	0x0
	.short	0x0
	.short	0x1
	.short	0x40
	.short	0x4
	.short	0x40
	.short	0x3a
	.short	0x34
	.short	0x0
	.short	0xffffffa8
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x50
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x18
	.short	0x50
	.short	0x0
	.short	0x20
	.short	0x0
	.short	0x58
	.short	0x0
	.short	0x0
	.short	0x1
	.short	0x0
	.short	0x2
	.short	0x10
	.short	0x4
	.short	0x40
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x1
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x20
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x1
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x2a
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x1
	.short	0x0
	.short	0x4
	.short	0x0
	.short	0x8
	.short	0x18
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xc
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xc
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x4
	.short	0x0
	.short	0xc
	.short	0x18
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xc
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xc
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x4
	.short	0x0
	.short	0x4
	.short	0x18
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xc
	.short	0x1
	.short	0x0
	.short	0x4
	.short	0x10
	.short	0xc
	.short	0x40
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xfffffffc
	.short	0x10
	.short	0xc
	.short	0x40
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x1
	.size	 sMonPokeblockAnims,1100
	.align	2, 0
	.type	 sSpriteAffineAnim_8411E90,object
sSpriteAffineAnim_8411E90:
	.short	0xffffff00
	.short	0x100
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x7fff
	.space	6
	.size	 sSpriteAffineAnim_8411E90,16
	.align	2, 0
	.type	 sSpriteAffineAnim_8411EA0,object
sSpriteAffineAnim_8411EA0:
	.short	0x0
	.short	0x0
	.byte	0xc
	.byte	0x1
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x0
	.byte	0x1e
	.space	2
	.short	0x0
	.short	0x0
	.byte	0xf4
	.byte	0x1
	.space	2
	.short	0x7fff
	.space	6
	.size	 sSpriteAffineAnim_8411EA0,32
	.align	2, 0
	.type	 sSpriteAffineAnim_8411EC0,object
sSpriteAffineAnim_8411EC0:
	.short	0xffffff00
	.short	0x100
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x0
	.short	0x0
	.byte	0xc
	.byte	0x1
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x0
	.byte	0x1c
	.space	2
	.short	0x0
	.short	0x0
	.byte	0xfc
	.byte	0x3
	.space	2
	.short	0x7fff
	.space	6
	.size	 sSpriteAffineAnim_8411EC0,40
	.align	2, 0
	.type	 sSpriteAffineAnim_8411EE8,object
sSpriteAffineAnim_8411EE8:
	.short	0x0
	.short	0x0
	.byte	0x1
	.byte	0x10
	.space	2
	.short	0x0
	.short	0x0
	.byte	0xff
	.byte	0x20
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x1
	.byte	0x10
	.space	2
	.short	0x7fff
	.space	6
	.size	 sSpriteAffineAnim_8411EE8,32
	.align	2, 0
	.type	 sSpriteAffineAnim_8411F08,object
sSpriteAffineAnim_8411F08:
	.short	0xffffff00
	.short	0x100
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x1
	.byte	0x10
	.space	2
	.short	0x0
	.short	0x0
	.byte	0xff
	.byte	0x20
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x1
	.byte	0x10
	.space	2
	.short	0x7fff
	.space	6
	.size	 sSpriteAffineAnim_8411F08,40
	.align	2, 0
	.type	 sSpriteAffineAnim_8411F30,object
sSpriteAffineAnim_8411F30:
	.short	0x0
	.short	0x0
	.byte	0xff
	.byte	0x8
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x0
	.byte	0x10
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x1
	.byte	0x8
	.space	2
	.short	0x7fff
	.space	6
	.size	 sSpriteAffineAnim_8411F30,32
	.align	2, 0
	.type	 sSpriteAffineAnim_8411F50,object
sSpriteAffineAnim_8411F50:
	.short	0xffffff00
	.short	0x100
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x0
	.short	0x0
	.byte	0xff
	.byte	0x8
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x0
	.byte	0x10
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x1
	.byte	0x8
	.space	2
	.short	0x7fff
	.space	6
	.size	 sSpriteAffineAnim_8411F50,40
	.align	2, 0
	.type	 sSpriteAffineAnim_8411F78,object
sSpriteAffineAnim_8411F78:
	.short	0x0
	.short	0x0
	.byte	0xff
	.byte	0x8
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x0
	.byte	0x20
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x1
	.byte	0x8
	.space	2
	.short	0x7fff
	.space	6
	.size	 sSpriteAffineAnim_8411F78,32
	.align	2, 0
	.type	 sSpriteAffineAnim_8411F98,object
sSpriteAffineAnim_8411F98:
	.short	0xffffff00
	.short	0x100
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x0
	.short	0x0
	.byte	0xff
	.byte	0x8
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x0
	.byte	0x20
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x1
	.byte	0x8
	.space	2
	.short	0x7fff
	.space	6
	.size	 sSpriteAffineAnim_8411F98,40
	.align	2, 0
	.type	 sSpriteAffineAnim_8411FC0,object
sSpriteAffineAnim_8411FC0:
	.short	0x0
	.short	0x0
	.byte	0xff
	.byte	0x4
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x0
	.byte	0x18
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x1
	.byte	0x4
	.space	2
	.short	0x7fff
	.space	6
	.size	 sSpriteAffineAnim_8411FC0,32
	.align	2, 0
	.type	 sSpriteAffineAnim_8411FE0,object
sSpriteAffineAnim_8411FE0:
	.short	0xffffff00
	.short	0x100
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x0
	.short	0x0
	.byte	0xff
	.byte	0x4
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x0
	.byte	0x18
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x1
	.byte	0x4
	.space	2
	.short	0x7fff
	.space	6
	.size	 sSpriteAffineAnim_8411FE0,40
	.align	2, 0
	.type	 sSpriteAffineAnim_8412008,object
sSpriteAffineAnim_8412008:
	.short	0x0
	.short	0x0
	.byte	0x1
	.byte	0x18
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x0
	.byte	0x10
	.space	2
	.short	0x0
	.short	0x0
	.byte	0xf4
	.byte	0x2
	.space	2
	.short	0x7fff
	.space	6
	.size	 sSpriteAffineAnim_8412008,32
	.align	2, 0
	.type	 sSpriteAffineAnim_8412028,object
sSpriteAffineAnim_8412028:
	.short	0xffffff00
	.short	0x100
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x1
	.byte	0x18
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x0
	.byte	0x10
	.space	2
	.short	0x0
	.short	0x0
	.byte	0xf4
	.byte	0x2
	.space	2
	.short	0x7fff
	.space	6
	.size	 sSpriteAffineAnim_8412028,40
	.align	2, 0
	.type	 sSpriteAffineAnimTable_8412050,object
sSpriteAffineAnimTable_8412050:
	.word	sSpriteAffineAnim_8411E90
	.word	sSpriteAffineAnim_8411EA0
	.word	sSpriteAffineAnim_8411EE8
	.word	sSpriteAffineAnim_8411F30
	.word	sSpriteAffineAnim_8411F78
	.word	sSpriteAffineAnim_8411FC0
	.word	sSpriteAffineAnim_8412008
	.word	sSpriteAffineAnim_8411E90
	.word	sSpriteAffineAnim_8411E90
	.word	sSpriteAffineAnim_8411E90
	.word	sSpriteAffineAnim_8411E90
	.word	sSpriteAffineAnim_8411EC0
	.word	sSpriteAffineAnim_8411F08
	.word	sSpriteAffineAnim_8411F50
	.word	sSpriteAffineAnim_8411F98
	.word	sSpriteAffineAnim_8411FE0
	.word	sSpriteAffineAnim_8412028
	.word	sSpriteAffineAnim_8411E90
	.word	sSpriteAffineAnim_8411E90
	.word	sSpriteAffineAnim_8411E90
	.word	sSpriteAffineAnim_8411E90
	.size	 sSpriteAffineAnimTable_8412050,84
	.align	2, 0
	.type	 sPokeblocksPals,object
sPokeblocksPals:
	.word	gPokeblockRed_Pal
	.word	gPokeblockBlue_Pal
	.word	gPokeblockPink_Pal
	.word	gPokeblockGreen_Pal
	.word	gPokeblockYellow_Pal
	.word	gPokeblockPurple_Pal
	.word	gPokeblockIndigo_Pal
	.word	gPokeblockBrown_Pal
	.word	gPokeblockLiteBlue_Pal
	.word	gPokeblockOlive_Pal
	.word	gPokeblockGray_Pal
	.word	gPokeblockBlack_Pal
	.word	gPokeblockWhite_Pal
	.word	gPokeblockGold_Pal
	.size	 sPokeblocksPals,56
	.align	2, 0
	.type	 sSpriteAffineAnim_84120DC,object
sSpriteAffineAnim_84120DC:
	.short	0xffffff00
	.short	0x100
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x7fff
	.space	6
	.size	 sSpriteAffineAnim_84120DC,16
	.align	2, 0
	.type	 sSpriteAffineAnimTable_84120EC,object
sSpriteAffineAnimTable_84120EC:
	.word	sSpriteAffineAnim_84120DC
	.size	 sSpriteAffineAnimTable_84120EC,4
	.align	2, 0
	.type	 sSpriteAffineAnim_84120F0,object
sSpriteAffineAnim_84120F0:
	.short	0xffffff00
	.short	0x100
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x0
	.short	0x0
	.byte	0xf8
	.byte	0x1
	.space	2
	.short	0x0
	.short	0x0
	.byte	0xf8
	.byte	0x1
	.space	2
	.short	0x0
	.short	0x0
	.byte	0xf8
	.byte	0x1
	.space	2
	.short	0x0
	.short	0x0
	.byte	0xf8
	.byte	0x1
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x0
	.byte	0x8
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x10
	.byte	0x1
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x10
	.byte	0x1
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x10
	.byte	0x1
	.space	2
	.short	0xffffff00
	.short	0x100
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x7fff
	.space	6
	.size	 sSpriteAffineAnim_84120F0,88
	.align	2, 0
	.type	 sSpriteAffineAnim_8412148,object
sSpriteAffineAnim_8412148:
	.short	0xffffff00
	.short	0x100
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x8
	.byte	0x1
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x8
	.byte	0x1
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x8
	.byte	0x1
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x8
	.byte	0x1
	.space	2
	.short	0x0
	.short	0x0
	.byte	0x0
	.byte	0x8
	.space	2
	.short	0x0
	.short	0x0
	.byte	0xf0
	.byte	0x1
	.space	2
	.short	0x0
	.short	0x0
	.byte	0xf0
	.byte	0x1
	.space	2
	.short	0x0
	.short	0x0
	.byte	0xf0
	.byte	0x1
	.space	2
	.short	0xffffff00
	.short	0x100
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x7fff
	.space	6
	.size	 sSpriteAffineAnim_8412148,88
	.align	2, 0
	.type	 sSpriteAffineAnimTable_84121A0,object
sSpriteAffineAnimTable_84121A0:
	.word	sSpriteAffineAnim_84120DC
	.size	 sSpriteAffineAnimTable_84121A0,4
	.align	2, 0
	.type	 sSpriteAffineAnimTable_84121A4,object
sSpriteAffineAnimTable_84121A4:
	.word	sSpriteAffineAnim_84120F0
	.size	 sSpriteAffineAnimTable_84121A4,4
	.align	2, 0
	.type	 sSpriteAffineAnimTable_84121A8,object
sSpriteAffineAnimTable_84121A8:
	.word	sSpriteAffineAnim_8412148
	.size	 sSpriteAffineAnimTable_84121A8,4
	.align	2, 0
	.type	 sThrownPokeblockOamData,object
	.size	 sThrownPokeblockOamData,8
sThrownPokeblockOamData:
	.byte	0x0
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x4
	.short	0x0
	.align	2, 0
	.type	 sThrownPokeblockSpriteAnim,object
sThrownPokeblockSpriteAnim:
	.short	0x0
	.byte	0x0
	.space	1
	.short	0xffffffff
	.space	2
	.size	 sThrownPokeblockSpriteAnim,8
	.align	2, 0
	.type	 sThrownPokeblockAnimTable,object
sThrownPokeblockAnimTable:
	.word	sThrownPokeblockSpriteAnim
	.size	 sThrownPokeblockAnimTable,4
	.align	2, 0
	.type	 sSpriteAffineAnim_84121C0,object
sSpriteAffineAnim_84121C0:
	.short	0x100
	.short	0x100
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0xfffffff8
	.short	0xfffffff8
	.byte	0x0
	.byte	0x1
	.space	2
	.short	0x7ffe
	.short	0x1
	.space	4
	.size	 sSpriteAffineAnim_84121C0,24
	.align	2, 0
	.type	 sThrownPokeblockAffineAnimTable,object
sThrownPokeblockAffineAnimTable:
	.word	sSpriteAffineAnim_84121C0
	.size	 sThrownPokeblockAffineAnimTable,4
	.align	2, 0
	.type	 sUnknown_084121DC,object
	.size	 sUnknown_084121DC,8
sUnknown_084121DC:
	.word	gPokeblock_Gfx
	.short	0x20
	.short	0x39e2
	.align	2, 0
	.type	 sThrownPokeblockSpriteTemplate,object
	.size	 sThrownPokeblockSpriteTemplate,24
sThrownPokeblockSpriteTemplate:
	.short	0x39e2
	.short	0x39e2
	.word	sThrownPokeblockOamData
	.word	sThrownPokeblockAnimTable
	.word	0x0
	.word	sThrownPokeblockAffineAnimTable
	.word	SpriteCB_ThrownPokeblock
.text
	.align	2, 0
	.type	 CB2_PokeblockFeed,function
	.thumb_func
CB2_PokeblockFeed:
	push	{lr}
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	RunTasks
	bl	UpdatePaletteFade
	pop	{r0}
	bx	r0
.Lfe1:
	.size	 CB2_PokeblockFeed,.Lfe1-CB2_PokeblockFeed
	.align	2, 0
	.type	 VBlankCB_PokeblockFeed,function
	.thumb_func
VBlankCB_PokeblockFeed:
	push	{lr}
	bl	LoadOam
	bl	ProcessSpriteCopyRequests
	bl	TransferPlttBuffer
	pop	{r0}
	bx	r0
.Lfe2:
	.size	 VBlankCB_PokeblockFeed,.Lfe2-VBlankCB_PokeblockFeed
	.align	2, 0
	.type	 TransitionToPokeblockFeedScene,function
	.thumb_func
TransitionToPokeblockFeedScene:
	push	{r4, lr}
	add	sp, sp, #0xfffffffc
	ldr	r0, .L28
	ldr	r1, .L28+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0xd
	bls	.LCB38
	b	.L5	@long jump
.LCB38:
	lsl	r0, r0, #0x2
	ldr	r1, .L28+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L29:
	.align	2, 0
.L28:
	.word	gMain
	.word	0x43c
	.word	.L23
	.align	2, 0
	.align	2, 0
.L23:
	.word	.L6
	.word	.L7
	.word	.L8
	.word	.L9
	.word	.L10
	.word	.L11
	.word	.L12
	.word	.L14
	.word	.L16
	.word	.L17
	.word	.L18
	.word	.L19
	.word	.L21
	.word	.L22
.L6:
	bl	sub_80F9438
	bl	sub_80F9368
	bl	sub_8147B04
	ldr	r1, .L30
	ldr	r2, .L30+0x4
	add	r1, r1, r2
	b	.L26
.L31:
	.align	2, 0
.L30:
	.word	gMain
	.word	0x43c
.L7:
	bl	ResetPaletteFade
	ldr	r2, .L32
	ldrb	r0, [r2, #0x8]
	mov	r1, #0x80
	orr	r0, r0, r1
	strb	r0, [r2, #0x8]
	b	.L27
.L33:
	.align	2, 0
.L32:
	.word	gPaletteFade
.L8:
	bl	ResetSpriteData
	ldr	r1, .L34
	ldr	r2, .L34+0x4
	add	r1, r1, r2
	b	.L26
.L35:
	.align	2, 0
.L34:
	.word	gMain
	.word	0x43c
.L9:
	bl	FreeAllSpritePalettes
	b	.L27
.L10:
	ldr	r0, .L36
	bl	SetUpWindowConfig
	ldr	r1, .L36+0x4
	ldr	r2, .L36+0x8
	add	r1, r1, r2
	b	.L26
.L37:
	.align	2, 0
.L36:
	.word	gWindowConfig_81E6E50
	.word	gMain
	.word	0x43c
.L11:
	ldr	r0, .L38
	bl	MultistepInitMenuWindowBegin
	b	.L27
.L39:
	.align	2, 0
.L38:
	.word	gWindowConfig_81E6E50
.L12:
	bl	MultistepInitMenuWindowContinue
	cmp	r0, #0
	bne	.LCB146
	b	.L5	@long jump
.LCB146:
	ldr	r0, .L40
	ldr	r1, .L40+0x4
	add	r0, r0, r1
	mov	r1, #0x0
	strb	r1, [r0]
	ldr	r1, .L40+0x8
	ldr	r2, .L40+0xc
	add	r1, r1, r2
	b	.L26
.L41:
	.align	2, 0
.L40:
	.word	gSharedMem
	.word	0x1ffff
	.word	gMain
	.word	0x43c
.L14:
	ldr	r0, .L42
	ldrb	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L42+0x4
	add	r0, r0, r1
	bl	sub_8147B20
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB182
	b	.L5	@long jump
.LCB182:
	b	.L27
.L43:
	.align	2, 0
.L42:
	.word	gPokeblockMonID
	.word	gPlayerParty
.L16:
	bl	sub_81480B4
	ldr	r1, .L44
	ldr	r2, .L44+0x4
	add	r1, r1, r2
	strb	r0, [r1]
	b	.L27
.L45:
	.align	2, 0
.L44:
	.word	gSharedMem
	.word	0x1fffd
.L17:
	ldr	r0, .L46
	ldrb	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L46+0x4
	add	r0, r0, r1
	bl	PokeblockFeed_CreatePokeSprite
	ldr	r1, .L46+0x8
	ldr	r2, .L46+0xc
	add	r1, r1, r2
	strb	r0, [r1]
	b	.L27
.L47:
	.align	2, 0
.L46:
	.word	gPokeblockMonID
	.word	gPlayerParty
	.word	gSharedMem
	.word	0x1fffe
.L18:
	mov	r0, #0x0
	mov	r1, #0xe
	mov	r2, #0x1d
	mov	r3, #0x13
	bl	MenuDrawTextWindow
	ldr	r1, .L48
	ldr	r2, .L48+0x4
	add	r1, r1, r2
	b	.L26
.L49:
	.align	2, 0
.L48:
	.word	gMain
	.word	0x43c
.L19:
	bl	sub_8055870
	cmp	r0, #0x1
	beq	.L5	@cond_branch
.L27:
	ldr	r1, .L50
	ldr	r0, .L50+0x4
	add	r1, r1, r0
.L26:
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L5
.L51:
	.align	2, 0
.L50:
	.word	gMain
	.word	0x43c
.L21:
	ldr	r3, .L52
	ldrh	r2, [r3]
	mov	r0, #0x0
	strh	r0, [r3]
	ldr	r4, .L52+0x4
	ldrh	r0, [r4]
	mov	r1, #0x1
	orr	r0, r0, r1
	strh	r0, [r4]
	strh	r2, [r3]
	ldr	r2, .L52+0x8
	ldrh	r0, [r2]
	mov	r1, #0x8
	orr	r0, r0, r1
	strh	r0, [r2]
	ldr	r0, .L52+0xc
	bl	SetVBlankCallback
	ldr	r1, .L52+0x10
	ldr	r2, .L52+0x14
	add	r1, r1, r2
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
.L22:
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	ldr	r2, .L52+0x18
	ldrb	r1, [r2, #0x8]
	mov	r0, #0x7f
	and	r0, r0, r1
	strb	r0, [r2, #0x8]
	ldr	r0, .L52+0x1c
	bl	SetMainCallback2
	mov	r0, #0x1
	b	.L25
.L53:
	.align	2, 0
.L52:
	.word	0x4000208
	.word	0x4000200
	.word	0x4000004
	.word	VBlankCB_PokeblockFeed
	.word	gMain
	.word	0x43c
	.word	gPaletteFade
	.word	CB2_PokeblockFeed
.L5:
	mov	r0, #0x0
.L25:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe3:
	.size	 TransitionToPokeblockFeedScene,.Lfe3-TransitionToPokeblockFeedScene
	.align	2, 0
	.globl	CB2_PreparePokeblockFeedScene
	.type	 CB2_PreparePokeblockFeedScene,function
	.thumb_func
CB2_PreparePokeblockFeedScene:
	push	{lr}
.L55:
	bl	TransitionToPokeblockFeedScene
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L58	@cond_branch
	mov	r0, #0x1
	bl	LaunchPokeblockFeedTask
	b	.L56
.L58:
	bl	sub_80F9344
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L55	@cond_branch
.L56:
	pop	{r0}
	bx	r0
.Lfe4:
	.size	 CB2_PreparePokeblockFeedScene,.Lfe4-CB2_PreparePokeblockFeedScene
	.align	2, 0
	.type	 sub_8147B04,function
	.thumb_func
sub_8147B04:
	ldr	r1, .L62
	ldr	r2, .L62+0x4
	add	r0, r2, #0
	strh	r0, [r1]
	sub	r1, r1, #0xa
	mov	r2, #0x9a
	lsl	r2, r2, #0x5
	add	r0, r2, #0
	strh	r0, [r1]
	bx	lr
.L63:
	.align	2, 0
.L62:
	.word	0x400000a
	.word	0x1d02
.Lfe5:
	.size	 sub_8147B04,.Lfe5-sub_8147B04
	.align	2, 0
	.type	 sub_8147B20,function
	.thumb_func
sub_8147B20:
	push	{r4, r5, r6, lr}
	add	sp, sp, #0xfffffff4
	add	r4, r0, #0
	ldr	r0, .L80
	ldr	r1, .L80+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x8
	bls	.LCB429
	b	.L65	@long jump
.LCB429:
	lsl	r0, r0, #0x2
	ldr	r1, .L80+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L81:
	.align	2, 0
.L80:
	.word	gSharedMem
	.word	0x1ffff
	.word	.L75
	.align	2, 0
	.align	2, 0
.L75:
	.word	.L66
	.word	.L67
	.word	.L68
	.word	.L69
	.word	.L70
	.word	.L71
	.word	.L72
	.word	.L73
	.word	.L74
.L66:
	add	r0, r4, #0
	mov	r1, #0x41
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	add	r0, r4, #0
	mov	r1, #0x0
	bl	GetMonData
	add	r6, r0, #0
	lsl	r0, r5, #0x3
	ldr	r1, .L82
	add	r0, r0, r1
	ldr	r1, .L82+0x4
	lsl	r2, r5, #0x2
	add	r2, r2, r1
	ldrb	r1, [r2]
	ldrb	r2, [r2, #0x1]
	mov	r3, #0x80
	lsl	r3, r3, #0x12
	ldr	r4, .L82+0x8
	ldr	r4, [r4, #0x4]
	str	r4, [sp]
	str	r5, [sp, #0x4]
	str	r6, [sp, #0x8]
	bl	HandleLoadSpecialPokePic
	b	.L78
.L83:
	.align	2, 0
.L82:
	.word	gMonFrontPicTable
	.word	gMonFrontPicCoords
	.word	gUnknown_081FAF4C
.L67:
	add	r0, r4, #0
	mov	r1, #0x41
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	add	r0, r4, #0
	mov	r1, #0x0
	bl	GetMonData
	add	r6, r0, #0
	add	r0, r4, #0
	mov	r1, #0x1
	bl	GetMonData
	add	r1, r0, #0
	add	r0, r5, #0
	add	r2, r6, #0
	bl	GetMonSpritePalStructFromOtIdPersonality
	add	r4, r0, #0
	bl	LoadCompressedObjectPalette
	ldrh	r0, [r4, #0x4]
	mov	r1, #0x1
	bl	GetMonSpriteTemplate_803C56C
	b	.L78
.L68:
	ldr	r0, .L84
	bl	LoadCompressedObjectPic
	b	.L78
.L85:
	.align	2, 0
.L84:
	.word	gUnknown_083F7F74
.L69:
	ldr	r0, .L86
	bl	LoadCompressedObjectPalette
	b	.L78
.L87:
	.align	2, 0
.L86:
	.word	gUnknown_083F7F7C
.L70:
	ldr	r0, .L88
	bl	LoadCompressedObjectPic
	b	.L78
.L89:
	.align	2, 0
.L88:
	.word	sUnknown_084121DC
.L71:
	ldr	r0, .L90
	ldrb	r0, [r0]
	bl	SetPokeblockFeedSpritePal
	ldr	r0, .L90+0x4
	bl	LoadCompressedObjectPalette
	b	.L78
.L91:
	.align	2, 0
.L90:
	.word	gScriptItemId
	.word	sPokeblockFeedSpritePal
.L72:
	ldr	r0, .L92
	mov	r1, #0xc0
	lsl	r1, r1, #0x13
	b	.L79
.L93:
	.align	2, 0
.L92:
	.word	gBattleTerrainTiles_Building
.L73:
	ldr	r0, .L94
	ldr	r1, .L94+0x4
.L79:
	bl	LZDecompressVram
.L78:
	ldr	r1, .L94+0x8
	ldr	r0, .L94+0xc
	add	r1, r1, r0
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L65
.L95:
	.align	2, 0
.L94:
	.word	gUnknown_08E782FC
	.word	0x600e800
	.word	gSharedMem
	.word	0x1ffff
.L74:
	ldr	r0, .L96
	mov	r1, #0x20
	mov	r2, #0x60
	bl	LoadCompressedPalette
	ldr	r0, .L96+0x4
	ldr	r1, .L96+0x8
	add	r0, r0, r1
	mov	r1, #0x0
	strb	r1, [r0]
	mov	r0, #0x1
	b	.L77
.L97:
	.align	2, 0
.L96:
	.word	gBattleTerrainPalette_BattleTower
	.word	gSharedMem
	.word	0x1ffff
.L65:
	mov	r0, #0x0
.L77:
	add	sp, sp, #0xc
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe6:
	.size	 sub_8147B20,.Lfe6-sub_8147B20
	.align	2, 0
	.type	 SetPokeblockFeedSpritePal,function
	.thumb_func
SetPokeblockFeedSpritePal:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x15
	ldr	r1, .L99
	add	r0, r0, r1
	mov	r1, #0x0
	bl	GetPokeblockData
	lsl	r0, r0, #0x18
	ldr	r2, .L99+0x4
	ldr	r1, .L99+0x8
	lsr	r0, r0, #0x16
	sub	r0, r0, #0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	str	r0, [r2]
	ldr	r0, .L99+0xc
	strh	r0, [r2, #0x4]
	pop	{r0}
	bx	r0
.L100:
	.align	2, 0
.L99:
	.word	gSaveBlock1+0x7f8
	.word	sPokeblockFeedSpritePal
	.word	sPokeblocksPals
	.word	0x39e2
.Lfe7:
	.size	 SetPokeblockFeedSpritePal,.Lfe7-SetPokeblockFeedSpritePal
	.align	2, 0
	.type	 sub_8147CC8,function
	.thumb_func
sub_8147CC8:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L115
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.LCB715
	b	.L101	@long jump
.LCB715:
	ldr	r0, .L115+0x4
	lsl	r2, r4, #0x2
	add	r1, r2, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r0, #0x8
	ldrsh	r3, [r1, r0]
	ldr	r0, .L115+0x8
	add	r5, r2, #0
	cmp	r3, r0
	beq	.L106	@cond_branch
	cmp	r3, r0
	bgt	.L111	@cond_branch
	cmp	r3, #0
	beq	.L104	@cond_branch
	cmp	r3, #0xff
	beq	.L105	@cond_branch
	b	.L103
.L116:
	.align	2, 0
.L115:
	.word	gPaletteFade
	.word	gTasks
	.word	0x10d
.L111:
	ldr	r0, .L117
	cmp	r3, r0
	beq	.L107	@cond_branch
	add	r0, r0, #0x10
	cmp	r3, r0
	beq	.L108	@cond_branch
	b	.L103
.L118:
	.align	2, 0
.L117:
	.word	0x119
.L104:
	ldr	r0, .L119
	strb	r3, [r0]
	ldr	r0, .L119+0x4
	strh	r3, [r0]
	bl	sub_81481DC
	b	.L103
.L120:
	.align	2, 0
.L119:
	.word	gUnknown_03005F3C
	.word	gUnknown_03005F94
.L105:
	ldr	r0, .L121
	ldr	r2, .L121+0x4
	add	r0, r0, r2
	ldrb	r0, [r0]
	ldrb	r1, [r1, #0xa]
	bl	sub_8148108
	b	.L103
.L122:
	.align	2, 0
.L121:
	.word	gSharedMem
	.word	0x1fffd
.L106:
	bl	CreatePokeblockSprite
	ldr	r1, .L123
	ldr	r2, .L123+0x4
	add	r1, r1, r2
	strb	r0, [r1]
	b	.L103
.L124:
	.align	2, 0
.L123:
	.word	gSharedMem
	.word	0x1fffc
.L107:
	ldr	r0, .L125
	ldr	r1, .L125+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	bl	sub_8148044
	b	.L103
.L126:
	.align	2, 0
.L125:
	.word	gSharedMem
	.word	0x1fffe
.L108:
	ldr	r0, .L127
	str	r0, [r1]
	b	.L101
.L128:
	.align	2, 0
.L127:
	.word	Task_PrintAtePokeblockText
.L103:
	ldr	r0, .L129
	ldr	r1, .L129+0x4
	ldrh	r2, [r0]
	ldrh	r0, [r1]
	cmp	r2, r0
	bcs	.L112	@cond_branch
	bl	sub_814825C
	b	.L113
.L130:
	.align	2, 0
.L129:
	.word	gUnknown_03005F94
	.word	gUnknown_03005F34
.L112:
	cmp	r2, r0
	bne	.L113	@cond_branch
	ldr	r0, .L131
	add	r1, r5, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r0, #0xfe
	strh	r0, [r1, #0x8]
.L113:
	ldr	r1, .L131+0x4
	ldrh	r0, [r1]
	add	r0, r0, #0x1
	strh	r0, [r1]
	ldr	r0, .L131
	add	r1, r5, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrh	r0, [r1, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x8]
.L101:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L132:
	.align	2, 0
.L131:
	.word	gTasks
	.word	gUnknown_03005F94
.Lfe8:
	.size	 sub_8147CC8,.Lfe8-sub_8147CC8
	.align	2, 0
	.type	 LaunchPokeblockFeedTask,function
	.thumb_func
LaunchPokeblockFeedTask:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L134
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L134+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	mov	r0, #0x0
	strh	r0, [r1, #0x8]
	strh	r4, [r1, #0xa]
	pop	{r4}
	pop	{r0}
	bx	r0
.L135:
	.align	2, 0
.L134:
	.word	sub_8147CC8
	.word	gTasks
.Lfe9:
	.size	 LaunchPokeblockFeedTask,.Lfe9-LaunchPokeblockFeedTask
	.align	2, 0
	.type	 Task_WaitForAtePokeblockText,function
	.thumb_func
Task_WaitForAtePokeblockText:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	MenuUpdateWindowText
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L137	@cond_branch
	ldr	r0, .L138
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L138+0x4
	str	r0, [r1]
.L137:
	pop	{r4}
	pop	{r0}
	bx	r0
.L139:
	.align	2, 0
.L138:
	.word	gTasks
	.word	Task_PaletteFadeToReturn
.Lfe10:
	.size	 Task_WaitForAtePokeblockText,.Lfe10-Task_WaitForAtePokeblockText
	.align	2, 0
	.type	 Task_PrintAtePokeblockText,function
	.thumb_func
Task_PrintAtePokeblockText:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	ldr	r0, .L145
	ldrb	r1, [r0]
	mov	r0, #0x64
	mov	r5, r1
	mul	r5, r5, r0
	ldr	r0, .L145+0x4
	add	r5, r5, r0
	ldr	r0, .L145+0x8
	ldrh	r4, [r0]
	lsl	r4, r4, #0x3
	ldr	r0, .L145+0xc
	add	r4, r4, r0
	add	r0, r5, #0
	bl	GetNature
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r1, r4, #0
	bl	PokeblockGetGain
	ldr	r6, .L145+0x10
	strh	r0, [r6]
	ldr	r1, .L145+0x14
	add	r0, r5, #0
	bl	GetMonNickname
	ldr	r1, .L145+0x18
	add	r0, r4, #0
	bl	PokeblockCopyName
	mov	r1, #0x0
	ldrsh	r0, [r6, r1]
	cmp	r0, #0
	bne	.L141	@cond_branch
	ldr	r0, .L145+0x1c
	ldr	r1, .L145+0x20
	bl	StringExpandPlaceholders
	b	.L142
.L146:
	.align	2, 0
.L145:
	.word	gPokeblockMonID
	.word	gPlayerParty
	.word	gScriptItemId
	.word	gSaveBlock1+0x7f8
	.word	gPokeblockGain
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar4
	.word	gContestStatsText_NormallyAte
.L141:
	cmp	r0, #0
	ble	.L143	@cond_branch
	ldr	r0, .L147
	ldr	r1, .L147+0x4
	bl	StringExpandPlaceholders
	b	.L142
.L148:
	.align	2, 0
.L147:
	.word	gStringVar4
	.word	gContestStatsText_HappilyAte
.L143:
	ldr	r0, .L149
	ldr	r1, .L149+0x4
	bl	StringExpandPlaceholders
.L142:
	ldr	r0, .L149
	mov	r1, #0x1
	mov	r2, #0xf
	bl	MenuPrintMessage
	ldr	r1, .L149+0x8
	lsl	r0, r7, #0x2
	add	r0, r0, r7
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L149+0xc
	str	r1, [r0]
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L150:
	.align	2, 0
.L149:
	.word	gStringVar4
	.word	gContestStatsText_DisdainfullyAte
	.word	gTasks
	.word	Task_WaitForAtePokeblockText
.Lfe11:
	.size	 Task_PrintAtePokeblockText,.Lfe11-Task_PrintAtePokeblockText
	.align	2, 0
	.type	 Task_ReturnAfterPaletteFade,function
	.thumb_func
Task_ReturnAfterPaletteFade:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L153
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L152	@cond_branch
	ldr	r0, .L153+0x4
	ldr	r1, .L153+0x8
	mov	r2, #0x80
	lsl	r2, r2, #0x1
	bl	m4aMPlayVolumeControl
	ldr	r0, .L153+0xc
	ldr	r0, [r0, #0x8]
	bl	SetMainCallback2
	add	r0, r4, #0
	bl	DestroyTask
.L152:
	pop	{r4}
	pop	{r0}
	bx	r0
.L154:
	.align	2, 0
.L153:
	.word	gPaletteFade
	.word	gMPlay_BGM
	.word	0xffff
	.word	gMain
.Lfe12:
	.size	 Task_ReturnAfterPaletteFade,.Lfe12-Task_ReturnAfterPaletteFade
	.align	2, 0
	.type	 Task_PaletteFadeToReturn,function
	.thumb_func
Task_PaletteFadeToReturn:
	push	{r4, lr}
	add	sp, sp, #0xfffffffc
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r1, .L156
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L156+0x4
	str	r1, [r0]
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L157:
	.align	2, 0
.L156:
	.word	gTasks
	.word	Task_ReturnAfterPaletteFade
.Lfe13:
	.size	 Task_PaletteFadeToReturn,.Lfe13-Task_PaletteFadeToReturn
	.align	2, 0
	.type	 PokeblockFeed_CreatePokeSprite,function
	.thumb_func
PokeblockFeed_CreatePokeSprite:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	r5, r0, #0
	mov	r1, #0x41
	bl	GetMonData
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	ldr	r0, .L160
	mov	r1, #0x30
	mov	r2, #0x50
	mov	r3, #0x2
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	ldr	r0, .L160+0x4
	strh	r4, [r0]
	ldr	r0, .L160+0x8
	mov	r1, r8
	strb	r1, [r0]
	add	r0, r5, #0
	bl	GetNature
	ldr	r1, .L160+0xc
	strb	r0, [r1]
	ldr	r7, .L160+0x10
	mov	r1, r8
	lsl	r0, r1, #0x4
	add	r0, r0, r8
	lsl	r5, r0, #0x2
	add	r6, r5, r7
	strh	r4, [r6, #0x32]
	add	r0, r7, #0
	add	r0, r0, #0x1c
	add	r0, r5, r0
	ldr	r1, .L160+0x14
	str	r1, [r0]
	ldr	r0, .L160+0x18
	mov	r9, r0
	mov	r0, #0x1
	mov	r1, r9
	strb	r0, [r1]
	add	r0, r4, #0
	bl	IsPokeSpriteNotFlipped
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L159	@cond_branch
	add	r0, r7, #0
	add	r0, r0, #0x10
	add	r0, r5, r0
	ldr	r1, .L160+0x1c
	str	r1, [r0]
	ldrb	r3, [r6, #0x1]
	mov	r0, #0x3
	orr	r3, r3, r0
	strb	r3, [r6, #0x1]
	lsr	r1, r3, #0x6
	ldrb	r2, [r6, #0x3]
	lsr	r2, r2, #0x6
	lsl	r3, r3, #0x1e
	lsr	r3, r3, #0x1e
	add	r0, r6, #0
	bl	CalcCenterToCornerVec
	mov	r0, #0x0
	mov	r1, r9
	strb	r0, [r1]
.L159:
	mov	r0, r8
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L161:
	.align	2, 0
.L160:
	.word	gUnknown_02024E8C
	.word	gPokeblockFeedMonSpecies
	.word	gPokeblockFeedMonSpriteID
	.word	gPokeblockFeedMonNature
	.word	gSprites
	.word	SpriteCallbackDummy
	.word	gPokeblockMonNotFlipped
	.word	sSpriteAffineAnimTable_84120EC
.Lfe14:
	.size	 PokeblockFeed_CreatePokeSprite,.Lfe14-PokeblockFeed_CreatePokeSprite
	.align	2, 0
	.type	 sub_8148044,function
	.thumb_func
sub_8148044:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r3, .L163
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r2, r1, r3
	mov	r0, #0x30
	strh	r0, [r2, #0x20]
	mov	r0, #0x50
	strh	r0, [r2, #0x22]
	ldr	r0, .L163+0x4
	strh	r0, [r2, #0x2e]
	mov	r0, #0x1
	strh	r0, [r2, #0x30]
	add	r3, r3, #0x1c
	add	r1, r1, r3
	ldr	r0, .L163+0x8
	str	r0, [r1]
	bx	lr
.L164:
	.align	2, 0
.L163:
	.word	gSprites
	.word	0xfff8
	.word	sub_8148078
.Lfe15:
	.size	 sub_8148044,.Lfe15-sub_8148044
	.align	2, 0
	.type	 sub_8148078,function
	.thumb_func
sub_8148078:
	push	{r4, lr}
	add	r4, r0, #0
	ldrh	r0, [r4, #0x20]
	add	r0, r0, #0x4
	strh	r0, [r4, #0x20]
	ldrh	r0, [r4, #0x2e]
	ldrh	r2, [r4, #0x22]
	add	r1, r0, r2
	strh	r1, [r4, #0x22]
	ldrh	r1, [r4, #0x30]
	add	r0, r0, r1
	strh	r0, [r4, #0x2e]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L166	@cond_branch
	ldrh	r0, [r4, #0x32]
	mov	r1, #0x0
	bl	PlayCry1
.L166:
	mov	r1, #0x2e
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x9
	bne	.L167	@cond_branch
	ldr	r0, .L168
	str	r0, [r4, #0x1c]
.L167:
	pop	{r4}
	pop	{r0}
	bx	r0
.L169:
	.align	2, 0
.L168:
	.word	SpriteCallbackDummy
.Lfe16:
	.size	 sub_8148078,.Lfe16-sub_8148078
	.align	2, 0
	.type	 sub_81480B4,function
	.thumb_func
sub_81480B4:
	push	{r4, r5, lr}
	mov	r0, #0xbc
	mov	r1, #0x64
	mov	r2, #0x2
	bl	sub_810BA50
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r5, .L171
	lsl	r3, r4, #0x4
	add	r3, r3, r4
	lsl	r3, r3, #0x2
	add	r0, r3, r5
	ldrb	r2, [r0, #0x1]
	mov	r1, #0x4
	neg	r1, r1
	and	r1, r1, r2
	mov	r2, #0x1
	orr	r1, r1, r2
	strb	r1, [r0, #0x1]
	add	r1, r5, #0
	add	r1, r1, #0x10
	add	r1, r3, r1
	ldr	r2, .L171+0x4
	str	r2, [r1]
	add	r5, r5, #0x1c
	add	r3, r3, r5
	ldr	r1, .L171+0x8
	str	r1, [r3]
	bl	InitSpriteAffineAnim
	add	r0, r4, #0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L172:
	.align	2, 0
.L171:
	.word	gSprites
	.word	sSpriteAffineAnimTable_84121A0
	.word	SpriteCallbackDummy
.Lfe17:
	.size	 sub_81480B4,.Lfe17-sub_81480B4
	.align	2, 0
	.type	 sub_8148108,function
	.thumb_func
sub_8148108:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	r5, r1, #0
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	ldr	r0, .L177
	mov	r8, r0
	lsl	r0, r7, #0x4
	add	r0, r0, r7
	lsl	r6, r0, #0x2
	mov	r0, r8
	add	r4, r6, r0
	ldrb	r0, [r4, #0x3]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1b
	bl	FreeOamMatrix
	ldrb	r0, [r4, #0x1]
	mov	r1, #0x3
	orr	r0, r0, r1
	strb	r0, [r4, #0x1]
	cmp	r5, #0
	bne	.L174	@cond_branch
	mov	r0, r8
	add	r0, r0, #0x10
	add	r0, r6, r0
	ldr	r1, .L177+0x4
	b	.L176
.L178:
	.align	2, 0
.L177:
	.word	gSprites
	.word	sSpriteAffineAnimTable_84121A4
.L174:
	mov	r0, r8
	add	r0, r0, #0x10
	add	r0, r6, r0
	ldr	r1, .L179
.L176:
	str	r1, [r0]
	lsl	r0, r7, #0x4
	add	r0, r0, r7
	lsl	r0, r0, #0x2
	ldr	r1, .L179+0x4
	add	r0, r0, r1
	bl	InitSpriteAffineAnim
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L180:
	.align	2, 0
.L179:
	.word	sSpriteAffineAnimTable_84121A8
	.word	gSprites
.Lfe18:
	.size	 sub_8148108,.Lfe18-sub_8148108
	.align	2, 0
	.type	 CreatePokeblockSprite,function
	.thumb_func
CreatePokeblockSprite:
	push	{lr}
	ldr	r0, .L182
	mov	r1, #0xae
	mov	r2, #0x54
	mov	r3, #0x1
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L182+0x4
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r2, .L182+0x8
	strh	r2, [r1, #0x2e]
	mov	r2, #0x1
	strh	r2, [r1, #0x30]
	pop	{r1}
	bx	r1
.L183:
	.align	2, 0
.L182:
	.word	sThrownPokeblockSpriteTemplate
	.word	gSprites
	.word	0xfff4
.Lfe19:
	.size	 CreatePokeblockSprite,.Lfe19-CreatePokeblockSprite
	.align	2, 0
	.type	 SpriteCB_ThrownPokeblock,function
	.thumb_func
SpriteCB_ThrownPokeblock:
	push	{lr}
	add	r2, r0, #0
	ldrh	r0, [r2, #0x20]
	sub	r0, r0, #0x4
	strh	r0, [r2, #0x20]
	ldrh	r0, [r2, #0x2e]
	ldrh	r3, [r2, #0x22]
	add	r1, r0, r3
	strh	r1, [r2, #0x22]
	ldrh	r1, [r2, #0x30]
	add	r0, r0, r1
	strh	r0, [r2, #0x2e]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0xa
	bne	.L185	@cond_branch
	add	r0, r2, #0
	bl	DestroySprite
.L185:
	pop	{r0}
	bx	r0
.Lfe20:
	.size	 SpriteCB_ThrownPokeblock,.Lfe20-SpriteCB_ThrownPokeblock
	.align	2, 0
	.type	 sub_81481DC,function
	.thumb_func
sub_81481DC:
	push	{r4, r5, r6, r7, lr}
	ldr	r6, .L193
	mov	r0, #0x1
	strh	r0, [r6]
	ldr	r1, .L193+0x4
	ldr	r0, .L193+0x8
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrb	r3, [r0]
	mov	r4, #0x0
	ldr	r2, .L193+0xc
	lsl	r1, r3, #0x2
	add	r1, r1, r3
	lsl	r1, r1, #0x2
	add	r7, r2, #0
	add	r7, r7, #0x8
	add	r0, r1, r7
	ldrh	r0, [r0]
	add	r0, r0, #0x1
	strh	r0, [r6]
	add	r5, r2, #0
	add	r5, r5, #0x12
	add	r1, r1, r5
	mov	r2, #0x0
	ldrsh	r0, [r1, r2]
	cmp	r0, #0x1
	beq	.L188	@cond_branch
	add	r2, r6, #0
	add	r6, r5, #0
	add	r5, r7, #0
.L189:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r0, r3, #0x1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r4, #0x7
	bhi	.L188	@cond_branch
	lsl	r1, r3, #0x2
	add	r1, r1, r3
	lsl	r1, r1, #0x2
	add	r0, r1, r5
	ldrh	r0, [r0]
	ldrh	r7, [r2]
	add	r0, r0, r7
	strh	r0, [r2]
	add	r1, r1, r6
	mov	r7, #0x0
	ldrsh	r0, [r1, r7]
	cmp	r0, #0x1
	bne	.L189	@cond_branch
.L188:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L194:
	.align	2, 0
.L193:
	.word	gUnknown_03005F34
	.word	sNatureToMonPokeblockAnim
	.word	gPokeblockFeedMonNature
	.word	sMonPokeblockAnims
.Lfe21:
	.size	 sub_81481DC,.Lfe21-sub_81481DC
	.align	2, 0
	.type	 sub_814825C,function
	.thumb_func
sub_814825C:
	push	{lr}
	ldr	r0, .L214
	ldrb	r0, [r0]
	cmp	r0, #0x5a
	bls	.LCB1641
	b	.L196	@long jump
.LCB1641:
	lsl	r0, r0, #0x2
	ldr	r1, .L214+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L215:
	.align	2, 0
.L214:
	.word	gUnknown_03005F3C
	.word	.L211
	.align	2, 0
	.align	2, 0
.L211:
	.word	.L197
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L199
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L201
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L205
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L209
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
.L197:
	ldr	r2, .L216
	ldr	r1, .L216+0x4
	ldr	r0, .L216+0x8
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrb	r0, [r0]
	strb	r0, [r2]
	ldr	r2, .L216+0xc
	ldr	r0, .L216+0x10
	ldrb	r0, [r0]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L216+0x14
	add	r1, r1, r0
	str	r1, [r2]
	ldr	r0, .L216+0x18
	mov	r2, #0x44
	bl	memcpy
	ldr	r1, .L216+0x1c
	mov	r0, #0xa
	strb	r0, [r1]
	b	.L196
.L217:
	.align	2, 0
.L216:
	.word	gUnknown_03005F40
	.word	sNatureToMonPokeblockAnim
	.word	gPokeblockFeedMonNature
	.word	gPokeblockFeedPokeSprite
	.word	gPokeblockFeedMonSpriteID
	.word	gSprites
	.word	gPokeblockFeedPokeSpriteCopy
	.word	gUnknown_03005F3C
.L199:
	bl	sub_8148540
	ldr	r1, .L218
	ldr	r0, .L218+0x4
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r1, r1, #0x1
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L200	@cond_branch
	ldr	r3, .L218+0x8
	ldr	r2, [r3]
	ldrb	r0, [r2, #0x1]
	mov	r1, #0x3
	orr	r0, r0, r1
	strb	r0, [r2, #0x1]
	ldr	r2, [r3]
	ldrb	r1, [r2, #0x3]
	mov	r0, #0x3f
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2, #0x3]
	ldr	r0, [r3]
	ldr	r1, .L218+0xc
	str	r1, [r0, #0x10]
	bl	InitSpriteAffineAnim
.L200:
	ldr	r1, .L218+0x10
	mov	r0, #0x32
	strb	r0, [r1]
.L201:
	ldr	r1, .L218
	ldr	r0, .L218+0x4
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	add	r1, r1, #0x1
	add	r2, r0, r1
	ldrb	r1, [r2]
	cmp	r1, #0
	beq	.L213	@cond_branch
	ldr	r0, .L218+0x14
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L203	@cond_branch
	ldr	r0, .L218+0x8
	ldr	r0, [r0]
	add	r1, r1, #0xa
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	bl	StartSpriteAffineAnim
	b	.L213
.L219:
	.align	2, 0
.L218:
	.word	sNatureToMonPokeblockAnim
	.word	gPokeblockFeedMonNature
	.word	gPokeblockFeedPokeSprite
	.word	sSpriteAffineAnimTable_8412050
	.word	gUnknown_03005F3C
	.word	gPokeblockMonNotFlipped
.L203:
	ldr	r0, .L220
	ldr	r0, [r0]
	ldrb	r1, [r2]
	bl	StartSpriteAffineAnim
	b	.L213
.L221:
	.align	2, 0
.L220:
	.word	gPokeblockFeedPokeSprite
.L205:
	bl	sub_81485CC
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L196	@cond_branch
	ldr	r0, .L222
	mov	r1, #0x12
	ldrsh	r0, [r0, r1]
	cmp	r0, #0
	bne	.L207	@cond_branch
	ldr	r1, .L222+0x4
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	bl	sub_8148540
.L213:
	ldr	r1, .L222+0x8
	mov	r0, #0x3c
	strb	r0, [r1]
	b	.L196
.L223:
	.align	2, 0
.L222:
	.word	gUnknown_03005FA0
	.word	gUnknown_03005F40
	.word	gUnknown_03005F3C
.L207:
	ldr	r0, .L224
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x3]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1b
	bl	FreeOamMatrix
	ldr	r1, .L224+0x4
	mov	r0, #0x46
	strb	r0, [r1]
	b	.L196
.L225:
	.align	2, 0
.L224:
	.word	gPokeblockFeedPokeSprite
	.word	gUnknown_03005F3C
.L209:
	bl	FreePokeSpriteMatrix
	ldr	r0, .L226
	mov	r1, #0x0
	strb	r1, [r0]
	ldr	r0, .L226+0x4
	strb	r1, [r0]
.L196:
	pop	{r0}
	bx	r0
.L227:
	.align	2, 0
.L226:
	.word	gUnknown_03005F40
	.word	gUnknown_03005F3C
.Lfe22:
	.size	 sub_814825C,.Lfe22-sub_814825C
	.align	2, 0
	.type	 sub_8148540,function
	.thumb_func
sub_8148540:
	push	{r4, r5, r6, r7, lr}
	mov	r4, #0x0
	ldr	r5, .L237
	mov	ip, r5
	ldr	r7, .L237+0x4
	ldr	r6, .L237+0x8
.L232:
	lsl	r2, r4, #0x1
	mov	r0, ip
	add	r3, r2, r0
	ldrb	r1, [r6]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r2, r2, r0
	add	r2, r2, r7
	ldrh	r0, [r2]
	strh	r0, [r3]
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x9
	bls	.L232	@cond_branch
	mov	r1, #0x8
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	beq	.L234	@cond_branch
	mov	r2, #0x0
	ldrsh	r0, [r5, r2]
	mov	r2, #0x4
	ldrsh	r1, [r5, r2]
	bl	Sin
	strh	r0, [r5, #0x14]
	mov	r1, #0x0
	ldrsh	r0, [r5, r1]
	mov	r2, #0x6
	ldrsh	r1, [r5, r2]
	bl	Cos
	strh	r0, [r5, #0x16]
	ldrh	r0, [r5, #0x8]
	strh	r0, [r5, #0x18]
	ldr	r0, .L237+0xc
	ldr	r1, [r0]
	ldrh	r0, [r1, #0x24]
	strh	r0, [r5, #0x1a]
	ldrh	r0, [r1, #0x26]
	strh	r0, [r5, #0x1c]
	bl	sub_8148710
	ldrh	r0, [r5, #0x18]
	strh	r0, [r5, #0x8]
	bl	sub_814862C
	ldrh	r0, [r5, #0x18]
	strh	r0, [r5, #0x8]
	mov	r0, #0x0
	b	.L236
.L238:
	.align	2, 0
.L237:
	.word	gUnknown_03005FA0
	.word	sMonPokeblockAnims
	.word	gUnknown_03005F40
	.word	gPokeblockFeedPokeSprite
.L234:
	mov	r0, #0x1
.L236:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe23:
	.size	 sub_8148540,.Lfe23-sub_8148540
	.align	2, 0
	.type	 sub_81485CC,function
	.thumb_func
sub_81485CC:
	push	{r4, lr}
	ldr	r3, .L243
	ldrh	r0, [r3, #0x18]
	ldrh	r1, [r3, #0x8]
	sub	r0, r0, r1
	lsl	r0, r0, #0x10
	ldr	r1, .L243+0x4
	ldr	r4, [r1]
	lsr	r0, r0, #0xf
	ldr	r1, .L243+0x8
	add	r2, r0, r1
	ldrh	r2, [r2]
	strh	r2, [r4, #0x24]
	mov	r2, #0x80
	lsl	r2, r2, #0x3
	add	r1, r1, r2
	add	r0, r0, r1
	ldrh	r0, [r0]
	strh	r0, [r4, #0x26]
	ldrh	r0, [r3, #0x8]
	sub	r0, r0, #0x1
	strh	r0, [r3, #0x8]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	beq	.L240	@cond_branch
	mov	r0, #0x0
	b	.L242
.L244:
	.align	2, 0
.L243:
	.word	gUnknown_03005FA0
	.word	gPokeblockFeedPokeSprite
	.word	gSharedMem+0x1d000
.L240:
	mov	r0, #0x1
.L242:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe24:
	.size	 sub_81485CC,.Lfe24-sub_81485CC
	.align	2, 0
	.type	 FreePokeSpriteMatrix,function
	.thumb_func
FreePokeSpriteMatrix:
	push	{lr}
	ldr	r0, .L246
	ldr	r0, [r0]
	bl	FreeSpriteOamMatrix
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L247:
	.align	2, 0
.L246:
	.word	gPokeblockFeedPokeSprite
.Lfe25:
	.size	 FreePokeSpriteMatrix,.Lfe25-FreePokeSpriteMatrix
	.align	2, 0
	.type	 sub_814862C,function
	.thumb_func
sub_814862C:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #0xfffffff0
	ldr	r1, .L254
	ldrh	r0, [r1, #0x10]
	mov	r8, r0
	ldrh	r0, [r1, #0x18]
	mov	r2, r8
	sub	r0, r0, r2
	lsl	r0, r0, #0x10
	lsr	r7, r0, #0x10
	ldrh	r0, [r1, #0xc]
	ldrh	r3, [r1, #0x1a]
	add	r0, r0, r3
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	str	r0, [sp]
	ldrh	r0, [r1, #0xe]
	ldrh	r1, [r1, #0x1c]
	add	r0, r0, r1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r9, r0
	mov	r6, #0x0
	sub	r0, r7, #0x1
	ldr	r4, .L254+0x4
	mov	sl, r4
	cmp	r6, r0
	bge	.L250	@cond_branch
	ldr	r1, [sp]
	lsl	r0, r1, #0x10
	asr	r0, r0, #0x10
	str	r0, [sp, #0x4]
.L252:
	mov	r2, r8
	add	r5, r2, r6
	lsl	r5, r5, #0x1
	ldr	r4, .L254+0x8
	add	r3, r5, r4
	ldrh	r2, [r3]
	ldr	r0, [sp, #0x4]
	sub	r1, r2, r0
	ldr	r4, .L254+0xc
	add	r5, r5, r4
	ldrh	r0, [r5]
	mov	ip, r0
	mov	r4, r9
	lsl	r0, r4, #0x10
	asr	r0, r0, #0x10
	mov	r4, ip
	sub	r0, r4, r0
	lsl	r4, r0, #0x10
	lsr	r4, r4, #0x10
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	add	r6, r6, #0x1
	mov	r0, r1
	mul	r0, r0, r6
	add	r1, r7, #0
	str	r2, [sp, #0x8]
	str	r3, [sp, #0xc]
	bl	__divsi3
	ldr	r2, [sp, #0x8]
	sub	r2, r2, r0
	ldr	r3, [sp, #0xc]
	strh	r2, [r3]
	lsl	r4, r4, #0x10
	asr	r4, r4, #0x10
	mov	r0, r4
	mul	r0, r0, r6
	add	r1, r7, #0
	bl	__divsi3
	ldrh	r1, [r5]
	sub	r1, r1, r0
	strh	r1, [r5]
	lsl	r6, r6, #0x10
	lsr	r6, r6, #0x10
	sub	r0, r7, #0x1
	cmp	r6, r0
	blt	.L252	@cond_branch
.L250:
	mov	r1, r8
	add	r0, r1, r7
	lsl	r0, r0, #0x1
	mov	r2, sl
	add	r1, r0, r2
	mov	r3, sp
	ldrh	r3, [r3]
	strh	r3, [r1]
	mov	r1, #0x80
	lsl	r1, r1, #0x3
	add	r1, r1, sl
	add	r0, r0, r1
	mov	r4, r9
	strh	r4, [r0]
	add	sp, sp, #0x10
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L255:
	.align	2, 0
.L254:
	.word	gUnknown_03005FA0
	.word	gSharedMem+0x1cffe
	.word	gSharedMem+0x1d000
	.word	gSharedMem+0x1d400
.Lfe26:
	.size	 sub_814862C,.Lfe26-sub_814862C
	.align	2, 0
	.globl	sub_8148710
	.type	 sub_8148710,function
	.thumb_func
sub_8148710:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #0xfffffffc
	mov	r0, #0x0
	str	r0, [sp]
	ldr	r1, .L267
	ldrh	r2, [r1, #0x1a]
	ldrh	r0, [r1, #0x14]
	sub	r2, r2, r0
	ldrh	r3, [r1, #0x1c]
	ldrh	r0, [r1, #0x16]
	sub	r3, r3, r0
	add	r6, r1, #0
	ldr	r1, .L267+0x4
	mov	r9, r1
	lsl	r2, r2, #0x10
	asr	r2, r2, #0x10
	mov	r8, r2
	mov	r2, #0x80
	lsl	r2, r2, #0x3
	add	r2, r2, r9
	mov	sl, r2
	lsl	r3, r3, #0x10
	asr	r7, r3, #0x10
.L259:
	mov	r1, #0xa
	ldrsh	r0, [r6, r1]
	cmp	r0, #0
	bge	.L260	@cond_branch
	neg	r0, r0
.L260:
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldrh	r2, [r6, #0x6]
	add	r0, r0, r2
	lsl	r5, r0, #0x10
	strh	r0, [r6, #0x6]
	ldrh	r2, [r6, #0x4]
	mov	r1, #0x4
	ldrsh	r0, [r6, r1]
	cmp	r0, #0
	bge	.L261	@cond_branch
	mov	r0, #0x1
	str	r0, [sp]
.L261:
	ldrh	r0, [r6, #0x18]
	ldrh	r1, [r6, #0x8]
	sub	r0, r0, r1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r1, #0
	beq	.L258	@cond_branch
	ldr	r1, [sp]
	cmp	r1, #0
	bne	.L263	@cond_branch
	mov	r1, #0x0
	ldrsh	r0, [r6, r1]
	lsr	r5, r5, #0x18
	add	r1, r2, r5
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	bl	Sin
	lsl	r4, r4, #0x1
	mov	r2, r9
	add	r1, r4, r2
	add	r0, r0, r8
	strh	r0, [r1]
	mov	r1, #0x0
	ldrsh	r0, [r6, r1]
	ldrh	r1, [r6, #0x6]
	add	r1, r1, r5
	b	.L266
.L268:
	.align	2, 0
.L267:
	.word	gUnknown_03005FA0
	.word	gSharedMem+0x1d000
.L263:
	mov	r1, #0x0
	ldrsh	r0, [r6, r1]
	lsr	r5, r5, #0x18
	sub	r1, r2, r5
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	bl	Sin
	lsl	r4, r4, #0x1
	mov	r2, r9
	add	r1, r4, r2
	add	r0, r0, r8
	strh	r0, [r1]
	mov	r1, #0x0
	ldrsh	r0, [r6, r1]
	ldrh	r1, [r6, #0x6]
	sub	r1, r1, r5
.L266:
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	bl	Cos
	add	r4, r4, sl
	add	r0, r7, r0
	strh	r0, [r4]
	ldrh	r0, [r6, #0x2]
	ldrh	r2, [r6]
	add	r0, r0, r2
	mov	r1, #0xff
	and	r0, r0, r1
	strh	r0, [r6]
	ldrh	r0, [r6, #0x8]
	sub	r0, r0, #0x1
	strh	r0, [r6, #0x8]
	b	.L259
.L258:
	add	sp, sp, #0x4
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe27:
	.size	 sub_8148710,.Lfe27-sub_8148710
	.comm	gPokeblockFeedPokeSprite, 4	@ 4
	.comm	gPokeblockFeedMonSpecies, 4	@ 2
	.comm	gPokeblockMonNotFlipped, 4	@ 1
	.comm	gPokeblockFeedMonSpriteID, 4	@ 1
	.comm	gPokeblockFeedMonNature, 4	@ 1
	.comm	gUnknown_03005F34, 4	@ 2
	.comm	gPokeblockFeedUnused0, 4	@ 1
	.comm	gUnknown_03005F3C, 4	@ 1
	.comm	gUnknown_03005F40, 4	@ 1
	.comm	gPokeblockFeedPokeSpriteCopy, 68	@ 68
	.comm	gUnknown_03005F94, 4	@ 2
	.comm	gUnknown_03005FA0, 48	@ 48
.text
	.align	2, 0
