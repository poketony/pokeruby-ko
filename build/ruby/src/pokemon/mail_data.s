@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
.text
	.align	2, 0
	.globl	ClearMailData
	.type	 ClearMailData,function
	.thumb_func
ClearMailData:
	push	{r4, r5, lr}
	mov	r4, #0x0
	ldr	r5, .L8
.L6:
	lsl	r0, r4, #0x3
	add	r0, r0, r4
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	bl	ClearMailStruct
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0xf
	bls	.L6	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L9:
	.align	2, 0
.L8:
	.word	gSaveBlock1+0x2b4c
.Lfe1:
	.size	 ClearMailData,.Lfe1-ClearMailData
	.align	2, 0
	.globl	ClearMailStruct
	.type	 ClearMailStruct,function
	.thumb_func
ClearMailStruct:
	push	{r4, r5, r6, lr}
	add	r3, r0, #0
	ldr	r0, .L26
	add	r4, r0, #0
	add	r1, r3, #0
	mov	r2, #0x8
.L14:
	ldrh	r0, [r1]
	orr	r0, r0, r4
	strh	r0, [r1]
	add	r1, r1, #0x2
	sub	r2, r2, #0x1
	cmp	r2, #0
	bge	.L14	@cond_branch
	mov	r2, #0x0
	add	r6, r3, #0
	add	r6, r6, #0x1a
	add	r4, r3, #0
	add	r4, r4, #0x12
	mov	r5, #0xff
.L19:
	add	r1, r4, r2
	ldrb	r0, [r1]
	orr	r0, r0, r5
	strb	r0, [r1]
	add	r2, r2, #0x1
	cmp	r2, #0x7
	ble	.L19	@cond_branch
	add	r1, r6, #0
	mov	r2, #0x0
	add	r0, r1, #0x3
.L24:
	strb	r2, [r0]
	sub	r0, r0, #0x1
	cmp	r0, r1
	bge	.L24	@cond_branch
	mov	r1, #0x0
	mov	r0, #0x1
	strh	r0, [r3, #0x1e]
	strh	r1, [r3, #0x20]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L27:
	.align	2, 0
.L26:
	.word	0xffff
.Lfe2:
	.size	 ClearMailStruct,.Lfe2-ClearMailStruct
	.align	2, 0
	.globl	MonHasMail
	.type	 MonHasMail,function
	.thumb_func
MonHasMail:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r1, #0xc
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	ItemIsMail
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L29	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x40
	bl	GetMonData
	cmp	r0, #0xff
	beq	.L29	@cond_branch
	mov	r0, #0x1
	b	.L31
.L29:
	mov	r0, #0x0
.L31:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe3:
	.size	 MonHasMail,.Lfe3-MonHasMail
	.align	2, 0
	.globl	GiveMailToMon
	.type	 GiveMailToMon,function
	.thumb_func
GiveMailToMon:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #0xfffffff4
	add	r7, r0, #0
	lsl	r1, r1, #0x10
	lsr	r0, r1, #0x10
	str	r0, [sp, #0x8]
	mov	r0, sp
	mov	r2, #0x0
	ldrb	r3, [r0, #0x8]
	strb	r3, [r0]
	lsr	r1, r1, #0x18
	strb	r1, [r0, #0x1]
	add	r3, sp, #0x4
	strb	r2, [r3]
	mov	sl, r3
	ldr	r4, .L54
	mov	r9, r4
	mov	r8, r3
	add	r2, r3, #0
.L35:
	ldrb	r1, [r2]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r9
	ldr	r5, .L54+0x4
	add	r0, r0, r5
	ldrh	r0, [r0]
	cmp	r0, #0
	beq	.LCB201
	b	.L36	@long jump
.LCB201:
	mov	r3, #0x0
	ldr	r0, .L54+0x8
	mov	ip, r0
	mov	r4, sl
	ldr	r6, .L54+0xc
	ldr	r1, .L54+0x10
	add	r5, r1, #0
.L40:
	lsl	r2, r3, #0x1
	ldrb	r1, [r4]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r2, r2, r0
	add	r2, r2, r6
	ldrh	r0, [r2]
	orr	r0, r0, r5
	strh	r0, [r2]
	add	r0, r3, #0x1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0x8
	bls	.L40	@cond_branch
	mov	r3, #0x0
	mov	r2, sl
	ldr	r4, .L54+0x14
.L45:
	ldrb	r1, [r2]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r3, r0
	add	r0, r0, r4
	mov	r5, ip
	add	r1, r3, r5
	ldrb	r1, [r1]
	strb	r1, [r0]
	add	r0, r3, #0x1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0x6
	bls	.L45	@cond_branch
	mov	r0, r8
	ldrb	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r3, r0
	ldr	r1, .L54+0x14
	add	r0, r0, r1
	mov	r1, #0xff
	strb	r1, [r0]
	mov	r2, r8
	ldrb	r1, [r2]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r3, .L54+0x14
	add	r0, r0, r3
	mov	r1, #0x0
	bl	PadNameString
	mov	r3, #0x0
	mov	r2, sl
	ldr	r5, .L54+0x18
	ldr	r4, .L54+0x1c
.L50:
	ldrb	r1, [r2]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r3, r0
	add	r0, r0, r5
	add	r1, r3, r4
	ldrb	r1, [r1]
	strb	r1, [r0]
	add	r0, r3, #0x1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0x3
	bls	.L50	@cond_branch
	add	r0, r7, #0
	mov	r1, #0xb
	bl	GetBoxMonData
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	add	r0, r7, #0
	mov	r1, #0x0
	bl	GetBoxMonData
	add	r1, r0, #0
	add	r0, r4, #0
	bl	SpeciesToMailSpecies
	mov	r4, r8
	ldrb	r2, [r4]
	lsl	r1, r2, #0x3
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r9
	ldr	r5, .L54+0x20
	add	r1, r1, r5
	strh	r0, [r1]
	ldrb	r1, [r4]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r9
	ldr	r1, .L54+0x4
	add	r0, r0, r1
	mov	r2, sp
	ldrh	r2, [r2, #0x8]
	strh	r2, [r0]
	add	r0, r7, #0
	mov	r1, #0x40
	mov	r2, r8
	bl	SetMonData
	add	r0, r7, #0
	mov	r1, #0xc
	mov	r2, sp
	bl	SetMonData
	ldrb	r0, [r4]
	b	.L53
.L55:
	.align	2, 0
.L54:
	.word	gSaveBlock1
	.word	0x2b6c
	.word	gSaveBlock2
	.word	gSaveBlock1+0x2b4c
	.word	0xffff
	.word	gSaveBlock1+0x2b5e
	.word	gSaveBlock1+0x2b66
	.word	gSaveBlock2+0xa
	.word	0x2b6a
.L36:
	add	r0, r1, #0x1
	strb	r0, [r3]
	ldrb	r0, [r2]
	cmp	r0, #0x5
	bhi	.LCB376
	b	.L35	@long jump
.LCB376:
	mov	r0, #0xff
.L53:
	add	sp, sp, #0xc
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe4:
	.size	 GiveMailToMon,.Lfe4-GiveMailToMon
	.align	2, 0
	.globl	SpeciesToMailSpecies
	.type	 SpeciesToMailSpecies,function
	.thumb_func
SpeciesToMailSpecies:
	push	{lr}
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0xc9
	bne	.L58	@cond_branch
	add	r0, r1, #0
	bl	GetUnownLetterByPersonality
	lsl	r0, r0, #0x10
	ldr	r1, .L59
	add	r0, r0, r1
	lsr	r0, r0, #0x10
.L58:
	pop	{r1}
	bx	r1
.L60:
	.align	2, 0
.L59:
	.word	0x75300000
.Lfe5:
	.size	 SpeciesToMailSpecies,.Lfe5-SpeciesToMailSpecies
	.align	2, 0
	.globl	MailSpeciesToSpecies
	.type	 MailSpeciesToSpecies,function
	.thumb_func
MailSpeciesToSpecies:
	push	{lr}
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	ldr	r0, .L64
	add	r2, r3, r0
	lsl	r0, r2, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x1b
	bhi	.L62	@cond_branch
	mov	r0, #0xc9
	strh	r2, [r1]
	b	.L63
.L65:
	.align	2, 0
.L64:
	.word	0xffff8ad0
.L62:
	add	r0, r3, #0
.L63:
	pop	{r1}
	bx	r1
.Lfe6:
	.size	 MailSpeciesToSpecies,.Lfe6-MailSpeciesToSpecies
	.align	2, 0
	.globl	GiveMailToMon2
	.type	 GiveMailToMon2,function
	.thumb_func
GiveMailToMon2:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #0xfffffff8
	add	r6, r0, #0
	add	r7, r1, #0
	ldrh	r5, [r7, #0x20]
	add	r1, r5, #0
	bl	GiveMailToMon
	add	r4, sp, #0x4
	strb	r0, [r4]
	ldrb	r2, [r4]
	cmp	r2, #0xff
	beq	.L67	@cond_branch
	ldr	r0, .L69
	lsl	r1, r2, #0x3
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	ldr	r0, .L69+0x4
	add	r1, r1, r0
	add	r0, r7, #0
	ldmia	r0!, {r2, r3, r7}
	stmia	r1!, {r2, r3, r7}
	ldmia	r0!, {r2, r3, r7}
	stmia	r1!, {r2, r3, r7}
	ldmia	r0!, {r2, r3, r7}
	stmia	r1!, {r2, r3, r7}
	add	r0, r6, #0
	mov	r1, #0x40
	add	r2, r4, #0
	bl	SetMonData
	mov	r0, sp
	strb	r5, [r0]
	mov	r1, sp
	lsr	r0, r5, #0x8
	strb	r0, [r1, #0x1]
	add	r0, r6, #0
	mov	r1, #0xc
	mov	r2, sp
	bl	SetMonData
	ldrb	r0, [r4]
	b	.L68
.L70:
	.align	2, 0
.L69:
	.word	gSaveBlock1
	.word	0x2b4c
.L67:
	mov	r0, #0xff
.L68:
	add	sp, sp, #0x8
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe7:
	.size	 GiveMailToMon2,.Lfe7-GiveMailToMon2
	.align	2, 0
	.globl	unref_sub_80A2DF4
	.type	 unref_sub_80A2DF4,function
	.thumb_func
unref_sub_80A2DF4:
	mov	r0, #0x0
	bx	lr
.Lfe8:
	.size	 unref_sub_80A2DF4,.Lfe8-unref_sub_80A2DF4
	.align	2, 0
	.globl	TakeMailFromMon
	.type	 TakeMailFromMon,function
	.thumb_func
TakeMailFromMon:
	push	{r4, lr}
	add	sp, sp, #0xfffffff8
	add	r4, r0, #0
	bl	MonHasMail
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L73	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x40
	bl	GetMonData
	add	r2, sp, #0x4
	strb	r0, [r2]
	ldr	r3, .L74
	ldrb	r1, [r2]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	ldr	r1, .L74+0x4
	add	r0, r0, r1
	mov	r3, #0x0
	mov	r1, #0x0
	strh	r1, [r0]
	mov	r0, #0xff
	strb	r0, [r2]
	mov	r0, sp
	strb	r3, [r0]
	strb	r3, [r0, #0x1]
	add	r0, r4, #0
	mov	r1, #0x40
	bl	SetMonData
	add	r0, r4, #0
	mov	r1, #0xc
	mov	r2, sp
	bl	SetMonData
.L73:
	add	sp, sp, #0x8
	pop	{r4}
	pop	{r0}
	bx	r0
.L75:
	.align	2, 0
.L74:
	.word	gSaveBlock1
	.word	0x2b6c
.Lfe9:
	.size	 TakeMailFromMon,.Lfe9-TakeMailFromMon
	.align	2, 0
	.globl	DeleteMail
	.type	 DeleteMail,function
	.thumb_func
DeleteMail:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L77
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r0, .L77+0x4
	add	r1, r1, r0
	mov	r0, #0x0
	strh	r0, [r1]
	bx	lr
.L78:
	.align	2, 0
.L77:
	.word	gSaveBlock1
	.word	0x2b6c
.Lfe10:
	.size	 DeleteMail,.Lfe10-DeleteMail
	.align	2, 0
	.globl	TakeMailFromMon2
	.type	 TakeMailFromMon2,function
	.thumb_func
TakeMailFromMon2:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #0xfffffff4
	add	r5, r0, #0
	mov	r0, sp
	mov	r1, #0x0
	strb	r1, [r0]
	strb	r1, [r0, #0x1]
	add	r1, sp, #0x4
	mov	r0, #0xff
	strb	r0, [r1]
	mov	r7, #0x6
	mov	r9, r1
	ldr	r0, .L87
	mov	r8, r0
	ldr	r2, .L87+0x4
	add	r2, r2, r8
.L83:
	lsl	r0, r7, #0x3
	add	r0, r0, r7
	lsl	r4, r0, #0x2
	mov	r1, r8
	add	r0, r4, r1
	ldr	r3, .L87+0x8
	add	r0, r0, r3
	ldrh	r6, [r0]
	cmp	r6, #0
	bne	.L82	@cond_branch
	add	r4, r4, r2
	add	r0, r5, #0
	mov	r1, #0x40
	str	r2, [sp, #0x8]
	bl	GetMonData
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r2, [sp, #0x8]
	add	r1, r1, r2
	ldmia	r1!, {r0, r2, r3}
	stmia	r4!, {r0, r2, r3}
	ldmia	r1!, {r0, r2, r3}
	stmia	r4!, {r0, r2, r3}
	ldmia	r1!, {r0, r2, r3}
	stmia	r4!, {r0, r2, r3}
	add	r0, r5, #0
	mov	r1, #0x40
	bl	GetMonData
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r8
	ldr	r0, .L87+0x8
	add	r1, r1, r0
	strh	r6, [r1]
	add	r0, r5, #0
	mov	r1, #0x40
	mov	r2, r9
	bl	SetMonData
	add	r0, r5, #0
	mov	r1, #0xc
	mov	r2, sp
	bl	SetMonData
	add	r0, r7, #0
	b	.L86
.L88:
	.align	2, 0
.L87:
	.word	gSaveBlock1
	.word	0x2b4c
	.word	0x2b6c
.L82:
	add	r0, r7, #0x1
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	cmp	r7, #0xf
	bls	.L83	@cond_branch
	mov	r0, #0xff
.L86:
	add	sp, sp, #0xc
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe11:
	.size	 TakeMailFromMon2,.Lfe11-TakeMailFromMon2
	.align	2, 0
	.globl	ItemIsMail
	.type	 ItemIsMail,function
	.thumb_func
ItemIsMail:
	push	{lr}
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x84
	bgt	.L103	@cond_branch
	cmp	r0, #0x79
	blt	.L103	@cond_branch
	mov	r0, #0x1
	b	.L105
.L103:
	mov	r0, #0x0
.L105:
	pop	{r1}
	bx	r1
.Lfe12:
	.size	 ItemIsMail,.Lfe12-ItemIsMail
.text
	.align	2, 0
